{"architecture":"amd64","config":{"Hostname":"","Domainname":"","User":"deepspeed","AttachStdin":false,"AttachStdout":false,"AttachStderr":false,"Tty":false,"OpenStdin":false,"StdinOnce":false,"Env":["PATH=/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin","CUDA_VERSION=10.0.130","CUDA_PKG_VERSION=10-0=10.0.130-1","LD_LIBRARY_PATH=/usr/local/lib:/usr/local/mpi/lib:/usr/local/mpi/lib64:/usr/local/nvidia/lib:/usr/local/nvidia/lib64","NVIDIA_VISIBLE_DEVICES=all","NVIDIA_DRIVER_CAPABILITIES=compute,utility","NVIDIA_REQUIRE_CUDA=cuda\u003e=10.0 brand=tesla,driver\u003e=384,driver\u003c385 brand=tesla,driver\u003e=410,driver\u003c411","NCCL_VERSION=2.4.8","LIBRARY_PATH=/usr/local/cuda/lib64/stubs","STAGE_DIR=/tmp","MLNX_OFED_VERSION=4.6-1.0.1.1","NV_PEER_MEM_VERSION=1.1","NV_PEER_MEM_TAG=1.1-0","OPENMPI_BASEVERSION=4.0","OPENMPI_VERSION=4.0.1","DEBIAN_FRONTEND=noninteractive","PYTHON_VERSION=3","TENSORFLOW_VERSION=1.15.2","SSH_PORT=2222","PYTORCH_VERSION=1.2.0","TORCHVISION_VERSION=0.4.0","TENSORBOARDX_VERSION=1.8"],"Cmd":["/bin/bash"],"ArgsEscaped":true,"Image":"sha256:490a5f1c881bd02c865feafc739ef2272f6f4654d881b6d3885a25b23caed5f2","Volumes":null,"WorkingDir":"","Entrypoint":null,"OnBuild":null,"Labels":{"maintainer":"NVIDIA CORPORATION \u003ccudatools@nvidia.com\u003e"}},"container":"a665d5e803dc1dba472dd684392a5befcd9859142a8bddbc86d13268e256bec3","container_config":{"Hostname":"","Domainname":"","User":"deepspeed","AttachStdin":false,"AttachStdout":false,"AttachStderr":false,"Tty":false,"OpenStdin":false,"StdinOnce":false,"Env":["PATH=/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin","CUDA_VERSION=10.0.130","CUDA_PKG_VERSION=10-0=10.0.130-1","LD_LIBRARY_PATH=/usr/local/lib:/usr/local/mpi/lib:/usr/local/mpi/lib64:/usr/local/nvidia/lib:/usr/local/nvidia/lib64","NVIDIA_VISIBLE_DEVICES=all","NVIDIA_DRIVER_CAPABILITIES=compute,utility","NVIDIA_REQUIRE_CUDA=cuda\u003e=10.0 brand=tesla,driver\u003e=384,driver\u003c385 brand=tesla,driver\u003e=410,driver\u003c411","NCCL_VERSION=2.4.8","LIBRARY_PATH=/usr/local/cuda/lib64/stubs","STAGE_DIR=/tmp","MLNX_OFED_VERSION=4.6-1.0.1.1","NV_PEER_MEM_VERSION=1.1","NV_PEER_MEM_TAG=1.1-0","OPENMPI_BASEVERSION=4.0","OPENMPI_VERSION=4.0.1","DEBIAN_FRONTEND=noninteractive","PYTHON_VERSION=3","TENSORFLOW_VERSION=1.15.2","SSH_PORT=2222","PYTORCH_VERSION=1.2.0","TORCHVISION_VERSION=0.4.0","TENSORBOARDX_VERSION=1.8"],"Cmd":["/bin/sh","-c","sudo rm -rf ${STAGE_DIR}"],"Image":"sha256:490a5f1c881bd02c865feafc739ef2272f6f4654d881b6d3885a25b23caed5f2","Volumes":null,"WorkingDir":"","Entrypoint":null,"OnBuild":null,"Labels":{"maintainer":"NVIDIA CORPORATION \u003ccudatools@nvidia.com\u003e"}},"created":"2021-02-20T21:33:39.553836619Z","docker_version":"19.03.4","history":[{"created":"2019-10-31T22:20:35.371741262Z","created_by":"/bin/sh -c #(nop) ADD file:a48a5dc1b9dbfc632f6cf86fe27b770b63f07a115c98c4465dc184e303a4efa1 in / "},{"created":"2019-10-31T22:20:36.173590614Z","created_by":"/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"},{"created":"2019-10-31T22:20:36.882756782Z","created_by":"/bin/sh -c set -xe \t\t\u0026\u0026 echo '#!/bin/sh' \u003e /usr/sbin/policy-rc.d \t\u0026\u0026 echo 'exit 101' \u003e\u003e /usr/sbin/policy-rc.d \t\u0026\u0026 chmod +x /usr/sbin/policy-rc.d \t\t\u0026\u0026 dpkg-divert --local --rename --add /sbin/initctl \t\u0026\u0026 cp -a /usr/sbin/policy-rc.d /sbin/initctl \t\u0026\u0026 sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t\u0026\u0026 echo 'force-unsafe-io' \u003e /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t\u0026\u0026 echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' \u003e /etc/apt/apt.conf.d/docker-clean \t\u0026\u0026 echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' \u003e\u003e /etc/apt/apt.conf.d/docker-clean \t\u0026\u0026 echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' \u003e\u003e /etc/apt/apt.conf.d/docker-clean \t\t\u0026\u0026 echo 'Acquire::Languages \"none\";' \u003e /etc/apt/apt.conf.d/docker-no-languages \t\t\u0026\u0026 echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' \u003e /etc/apt/apt.conf.d/docker-gzip-indexes \t\t\u0026\u0026 echo 'Apt::AutoRemove::SuggestsImportant \"false\";' \u003e /etc/apt/apt.conf.d/docker-autoremove-suggests"},{"created":"2019-10-31T22:20:37.550873398Z","created_by":"/bin/sh -c mkdir -p /run/systemd \u0026\u0026 echo 'docker' \u003e /run/systemd/container"},{"created":"2019-10-31T22:20:37.714423666Z","created_by":"/bin/sh -c #(nop)  CMD [\"/bin/bash\"]","empty_layer":true},{"created":"2019-11-27T19:57:46.228403734Z","created_by":"/bin/sh -c #(nop)  LABEL maintainer=NVIDIA CORPORATION \u003ccudatools@nvidia.com\u003e","empty_layer":true},{"created":"2019-11-27T19:59:38.346111176Z","created_by":"/bin/sh -c apt-get update \u0026\u0026 apt-get install -y --no-install-recommends gnupg2 curl ca-certificates \u0026\u0026     curl -fsSL https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/7fa2af80.pub | apt-key add - \u0026\u0026     echo \"deb https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64 /\" \u003e /etc/apt/sources.list.d/cuda.list \u0026\u0026     echo \"deb https://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1804/x86_64 /\" \u003e /etc/apt/sources.list.d/nvidia-ml.list \u0026\u0026     apt-get purge --autoremove -y curl \u0026\u0026 rm -rf /var/lib/apt/lists/*"},{"created":"2019-11-27T19:59:44.273883151Z","created_by":"/bin/sh -c #(nop)  ENV CUDA_VERSION=10.0.130","empty_layer":true},{"created":"2019-11-27T19:59:44.948229725Z","created_by":"/bin/sh -c #(nop)  ENV CUDA_PKG_VERSION=10-0=10.0.130-1","empty_layer":true},{"created":"2019-11-27T19:59:57.392271993Z","created_by":"/bin/sh -c apt-get update \u0026\u0026 apt-get install -y --no-install-recommends         cuda-cudart-$CUDA_PKG_VERSION cuda-compat-10-0 \u0026\u0026 ln -s cuda-10.0 /usr/local/cuda \u0026\u0026     rm -rf /var/lib/apt/lists/*"},{"created":"2019-11-27T20:00:08.847845154Z","created_by":"/bin/sh -c echo \"/usr/local/nvidia/lib\" \u003e\u003e /etc/ld.so.conf.d/nvidia.conf \u0026\u0026     echo \"/usr/local/nvidia/lib64\" \u003e\u003e /etc/ld.so.conf.d/nvidia.conf"},{"created":"2019-11-27T20:00:21.679838894Z","created_by":"/bin/sh -c #(nop)  ENV PATH=/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin","empty_layer":true},{"created":"2019-11-27T20:00:23.97149393Z","created_by":"/bin/sh -c #(nop)  ENV LD_LIBRARY_PATH=/usr/local/nvidia/lib:/usr/local/nvidia/lib64","empty_layer":true},{"created":"2019-11-27T20:00:25.241093241Z","created_by":"/bin/sh -c #(nop)  ENV NVIDIA_VISIBLE_DEVICES=all","empty_layer":true},{"created":"2019-11-27T20:00:25.985650369Z","created_by":"/bin/sh -c #(nop)  ENV NVIDIA_DRIVER_CAPABILITIES=compute,utility","empty_layer":true},{"created":"2019-11-27T20:00:26.65041867Z","created_by":"/bin/sh -c #(nop)  ENV NVIDIA_REQUIRE_CUDA=cuda\u003e=10.0 brand=tesla,driver\u003e=384,driver\u003c385 brand=tesla,driver\u003e=410,driver\u003c411","empty_layer":true},{"created":"2019-11-27T20:00:27.717291922Z","created_by":"/bin/sh -c #(nop)  LABEL maintainer=NVIDIA CORPORATION \u003ccudatools@nvidia.com\u003e","empty_layer":true},{"created":"2019-11-27T20:00:28.589909123Z","created_by":"/bin/sh -c #(nop)  ENV NCCL_VERSION=2.4.8","empty_layer":true},{"created":"2019-11-27T20:01:33.220936158Z","created_by":"/bin/sh -c apt-get update \u0026\u0026 apt-get install -y --no-install-recommends     cuda-libraries-$CUDA_PKG_VERSION cuda-nvtx-$CUDA_PKG_VERSION libnccl2=$NCCL_VERSION-1+cuda10.0 \u0026\u0026     apt-mark hold libnccl2 \u0026\u0026     rm -rf /var/lib/apt/lists/*"},{"created":"2019-11-27T20:01:41.64092138Z","created_by":"/bin/sh -c #(nop)  LABEL maintainer=NVIDIA CORPORATION \u003ccudatools@nvidia.com\u003e","empty_layer":true},{"created":"2019-11-27T20:04:31.424502562Z","created_by":"/bin/sh -c apt-get update \u0026\u0026 apt-get install -y --no-install-recommends         cuda-nvml-dev-$CUDA_PKG_VERSION         cuda-command-line-tools-$CUDA_PKG_VERSION cuda-libraries-dev-$CUDA_PKG_VERSION         cuda-minimal-build-$CUDA_PKG_VERSION         libnccl-dev=$NCCL_VERSION-1+cuda10.0 \u0026\u0026     rm -rf /var/lib/apt/lists/*"},{"created":"2019-11-27T20:04:43.794922558Z","created_by":"/bin/sh -c #(nop)  ENV LIBRARY_PATH=/usr/local/cuda/lib64/stubs","empty_layer":true},{"created":"2020-07-31T20:42:42.762431575Z","created_by":"/bin/sh -c #(nop)  ENV STAGE_DIR=/tmp","empty_layer":true},{"created":"2020-07-31T20:42:44.150483414Z","created_by":"/bin/sh -c mkdir -p ${STAGE_DIR}","empty_layer":true},{"created":"2020-09-10T16:30:40.309460399Z","created_by":"/bin/sh -c apt-get update \u0026\u0026     apt-get install -y --no-install-recommends         software-properties-common build-essential autotools-dev         nfs-common pdsh         cmake g++ gcc         curl wget vim tmux emacs less unzip         htop iftop iotop ca-certificates openssh-client openssh-server         rsync iputils-ping net-tools sudo         llvm-9-dev"},{"created":"2020-09-10T16:30:53.600938464Z","created_by":"/bin/sh -c add-apt-repository ppa:git-core/ppa -y \u0026\u0026     apt-get update \u0026\u0026     apt-get install -y git \u0026\u0026     git --version"},{"created":"2020-09-10T16:30:56.053361661Z","created_by":"/bin/sh -c echo \"ClientAliveInterval 30\" \u003e\u003e /etc/ssh/sshd_config"},{"created":"2020-09-10T16:30:58.260997957Z","created_by":"/bin/sh -c cp /etc/ssh/sshd_config ${STAGE_DIR}/sshd_config \u0026\u0026     sed \"0,/^#Port 22/s//Port 22/\" ${STAGE_DIR}/sshd_config \u003e /etc/ssh/sshd_config"},{"created":"2020-09-10T16:30:59.839695957Z","created_by":"/bin/sh -c #(nop)  ENV MLNX_OFED_VERSION=4.6-1.0.1.1","empty_layer":true},{"created":"2020-09-10T16:31:03.867297035Z","created_by":"/bin/sh -c apt-get install -y libnuma-dev"},{"created":"2020-09-10T16:31:46.372422166Z","created_by":"/bin/sh -c cd ${STAGE_DIR} \u0026\u0026     wget -q -O - http://www.mellanox.com/downloads/ofed/MLNX_OFED-${MLNX_OFED_VERSION}/MLNX_OFED_LINUX-${MLNX_OFED_VERSION}-ubuntu18.04-x86_64.tgz | tar xzf - \u0026\u0026     cd MLNX_OFED_LINUX-${MLNX_OFED_VERSION}-ubuntu18.04-x86_64 \u0026\u0026     ./mlnxofedinstall --user-space-only --without-fw-update --all -q \u0026\u0026     cd ${STAGE_DIR} \u0026\u0026     rm -rf ${STAGE_DIR}/MLNX_OFED_LINUX-${MLNX_OFED_VERSION}-ubuntu18.04-x86_64*"},{"created":"2020-09-10T16:31:48.793633778Z","created_by":"/bin/sh -c #(nop)  ENV NV_PEER_MEM_VERSION=1.1","empty_layer":true},{"created":"2020-09-10T16:31:50.726885241Z","created_by":"/bin/sh -c #(nop)  ENV NV_PEER_MEM_TAG=1.1-0","empty_layer":true},{"created":"2020-09-10T16:32:11.414240739Z","created_by":"/bin/sh -c mkdir -p ${STAGE_DIR} \u0026\u0026     git clone https://github.com/Mellanox/nv_peer_memory.git --branch ${NV_PEER_MEM_TAG} ${STAGE_DIR}/nv_peer_memory \u0026\u0026     cd ${STAGE_DIR}/nv_peer_memory \u0026\u0026     ./build_module.sh \u0026\u0026     cd ${STAGE_DIR} \u0026\u0026     tar xzf ${STAGE_DIR}/nvidia-peer-memory_${NV_PEER_MEM_VERSION}.orig.tar.gz \u0026\u0026     cd ${STAGE_DIR}/nvidia-peer-memory-${NV_PEER_MEM_VERSION} \u0026\u0026     apt-get update \u0026\u0026     apt-get install -y dkms \u0026\u0026     dpkg-buildpackage -us -uc \u0026\u0026     dpkg -i ${STAGE_DIR}/nvidia-peer-memory_${NV_PEER_MEM_TAG}_all.deb"},{"created":"2020-09-10T16:32:15.401852442Z","created_by":"/bin/sh -c #(nop)  ENV OPENMPI_BASEVERSION=4.0","empty_layer":true},{"created":"2020-09-10T16:32:18.649946407Z","created_by":"/bin/sh -c #(nop)  ENV OPENMPI_VERSION=4.0.1","empty_layer":true},{"created":"2020-09-10T16:37:50.39194608Z","created_by":"/bin/sh -c cd ${STAGE_DIR} \u0026\u0026     wget -q -O - https://download.open-mpi.org/release/open-mpi/v${OPENMPI_BASEVERSION}/openmpi-${OPENMPI_VERSION}.tar.gz | tar xzf - \u0026\u0026     cd openmpi-${OPENMPI_VERSION} \u0026\u0026     ./configure --prefix=/usr/local/openmpi-${OPENMPI_VERSION} \u0026\u0026     make -j\"$(nproc)\" install \u0026\u0026     ln -s /usr/local/openmpi-${OPENMPI_VERSION} /usr/local/mpi \u0026\u0026     test -f /usr/local/mpi/bin/mpic++ \u0026\u0026     cd ${STAGE_DIR} \u0026\u0026     rm -r ${STAGE_DIR}/openmpi-${OPENMPI_VERSION}"},{"created":"2020-09-10T16:37:53.670227907Z","created_by":"/bin/sh -c #(nop)  ENV PATH=/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin LD_LIBRARY_PATH=/usr/local/lib:/usr/local/mpi/lib:/usr/local/mpi/lib64:/usr/local/nvidia/lib:/usr/local/nvidia/lib64","empty_layer":true},{"created":"2020-09-10T16:37:58.022656455Z","created_by":"/bin/sh -c mv /usr/local/mpi/bin/mpirun /usr/local/mpi/bin/mpirun.real \u0026\u0026     echo '#!/bin/bash' \u003e /usr/local/mpi/bin/mpirun \u0026\u0026     echo 'mpirun.real --allow-run-as-root --prefix /usr/local/mpi \"$@\"' \u003e\u003e /usr/local/mpi/bin/mpirun \u0026\u0026     chmod a+x /usr/local/mpi/bin/mpirun"},{"created":"2020-09-10T16:38:01.291771659Z","created_by":"/bin/sh -c #(nop)  ENV DEBIAN_FRONTEND=noninteractive","empty_layer":true},{"created":"2020-09-10T16:38:04.591634552Z","created_by":"/bin/sh -c #(nop)  ENV PYTHON_VERSION=3","empty_layer":true},{"created":"2020-09-10T16:38:20.01041663Z","created_by":"/bin/sh -c apt-get install -y python3 python3-dev \u0026\u0026     rm -f /usr/bin/python \u0026\u0026     ln -s /usr/bin/python3 /usr/bin/python \u0026\u0026     curl -O https://bootstrap.pypa.io/get-pip.py \u0026\u0026         python get-pip.py \u0026\u0026         rm get-pip.py \u0026\u0026     pip install --upgrade pip \u0026\u0026     python -V \u0026\u0026 pip -V"},{"created":"2020-09-10T16:38:24.501119073Z","created_by":"/bin/sh -c pip install pyyaml","empty_layer":true},{"created":"2020-09-10T16:38:32.33159689Z","created_by":"/bin/sh -c pip install ipython"},{"created":"2020-09-10T16:38:35.882042632Z","created_by":"/bin/sh -c #(nop)  ENV TENSORFLOW_VERSION=1.15.2","empty_layer":true},{"created":"2020-09-10T16:39:18.821288326Z","created_by":"/bin/sh -c pip install tensorflow-gpu==${TENSORFLOW_VERSION}"},{"created":"2020-09-10T16:43:08.925730303Z","created_by":"/bin/sh -c apt-get update \u0026\u0026     apt-get install -y --no-install-recommends         libsndfile-dev         libcupti-dev         libjpeg-dev         libpng-dev         screen"},{"created":"2020-09-10T16:44:41.183500269Z","created_by":"/bin/sh -c pip install psutil                 yappi                 cffi                 ipdb                 pandas                 matplotlib                 py3nvml                 pyarrow                 graphviz                 astor                 boto3                 tqdm                 sentencepiece                 msgpack                 requests                 pandas                 sphinx                 sphinx_rtd_theme                 scipy                 numpy                 sklearn                 scikit-learn                 nvidia-ml-py3                 mpi4py                 cupy-cuda100"},{"created":"2020-09-10T16:44:46.69368928Z","created_by":"/bin/sh -c #(nop)  ENV SSH_PORT=2222","empty_layer":true},{"created":"2020-09-10T16:44:52.546202013Z","created_by":"/bin/sh -c cat /etc/ssh/sshd_config \u003e ${STAGE_DIR}/sshd_config \u0026\u0026     sed \"0,/^#Port 22/s//Port ${SSH_PORT}/\" ${STAGE_DIR}/sshd_config \u003e /etc/ssh/sshd_config"},{"created":"2020-09-10T16:44:57.301031697Z","created_by":"/bin/sh -c #(nop)  ENV PYTORCH_VERSION=1.2.0","empty_layer":true},{"created":"2020-09-10T16:45:01.992287791Z","created_by":"/bin/sh -c #(nop)  ENV TORCHVISION_VERSION=0.4.0","empty_layer":true},{"created":"2020-09-10T16:45:06.853038413Z","created_by":"/bin/sh -c #(nop)  ENV TENSORBOARDX_VERSION=1.8","empty_layer":true},{"created":"2020-09-10T16:45:46.86308472Z","created_by":"/bin/sh -c pip install torch==${PYTORCH_VERSION}"},{"created":"2020-09-10T16:45:54.785068136Z","created_by":"/bin/sh -c pip install torchvision==${TORCHVISION_VERSION}"},{"created":"2020-09-10T16:46:01.481857413Z","created_by":"/bin/sh -c pip install tensorboardX==${TENSORBOARDX_VERSION}"},{"created":"2020-09-10T17:05:54.113933788Z","created_by":"/bin/sh -c rm -rf /usr/lib/python3/dist-packages/yaml \u0026\u0026     rm -rf /usr/lib/python3/dist-packages/PyYAML-*"},{"created":"2020-09-10T17:05:59.789516795Z","created_by":"/bin/sh -c useradd --create-home --uid 1000 --shell /bin/bash deepspeed"},{"created":"2020-09-10T17:06:05.542159769Z","created_by":"/bin/sh -c usermod -aG sudo deepspeed"},{"created":"2020-09-10T17:06:11.266570215Z","created_by":"/bin/sh -c echo \"deepspeed ALL=(ALL) NOPASSWD: ALL\" \u003e\u003e /etc/sudoers"},{"created":"2020-09-10T17:06:16.17416196Z","created_by":"/bin/sh -c #(nop)  USER deepspeed","empty_layer":true},{"created":"2021-02-20T21:32:11.209831665Z","created_by":"/bin/sh -c rm -rf ${STAGE_DIR}/DeepSpeed","empty_layer":true},{"created":"2021-02-20T21:33:25.032428714Z","created_by":"/bin/sh -c sudo pip install deepspeed \u0026\u0026 ds_report"},{"created":"2021-02-20T21:33:39.553836619Z","created_by":"/bin/sh -c sudo rm -rf ${STAGE_DIR}"}],"os":"linux","rootfs":{"type":"layers","diff_ids":["sha256:cc967c529ced563b7746b663d98248bc571afdb3c012019d7f54d6c092793b8b","sha256:2c6ac8e5063e35e91ab79dfb7330c6154b82f3a7e4724fb1b4475c0a95dfdd33","sha256:6c01b5a53aac53c66f02ea711295c7586061cbe083b110d54dafbeb6cf7636bf","sha256:e0b3afb09dc386786d49d6443bdfb20bc74d77dcf68e152db7e5bb36b1cca638","sha256:37b9a4b2218692d028f9f26aa9cb85bf1f56d9abe612ba31304643bdb448484f","sha256:dd841c774a309a21f43ffda7ac83b3f2010bfb069001e4d07df680bbe090de7d","sha256:52ad947270f13baeba0d0ff0d49b1d3f7eb96ab2a10918720378b52854f0e69c","sha256:4e3516398cef383414b5a99a909dc05e677f0b08787196ac7392508d09ed0467","sha256:582ab80c9f263c2a5b4ece0985341b1b76f863d7c07f4697af18d6b18b4d2141","sha256:a847101227a78dca8a9482e0c3cfd1fb49053cf92809bbaf7283796b5ecac67c","sha256:ae0173285932f4dfdf04193714b2e8082307fa6f546563f2d3f111dc2f5536a0","sha256:d44c24720e9cbe82824e5c3f8e7adf99df29b2e37ae2bf3da2355b63a7048be9","sha256:73172e1ca711918a53fd7396a11d45f2966bf98b296b7e4e69616991c14c955f","sha256:68255492a461cc6479c60cbf73c30bceeff1befe5d89f0689bf107f3b4ec65a7","sha256:96e61bf6f3ccb99bcf78b902c0e6eb66254e1a4df35a1510b88f84500cf3d49a","sha256:f3279a7405691e9484c36249ab8a09ed2ae2f9c816f2e59f49ab68768c8628e5","sha256:0149268c7c25706f57c920c06a608f110af4cd8931bf616cc03bfdd2f7f9181a","sha256:dd8c5ea53e5500fdd14bc3575a5ff2390c549d17047fe92208de3bace9732989","sha256:bf6af6184d90c603c8cb90a49d7fd995772249a835018bb925c1d160b2b60b89","sha256:d6a149c031d38eca7080aa7088159fc564303b2576300f13dcfb522d977d5838","sha256:d7413f3fceade9f0dfda19c5bcc03cc3ab1c4948009bf3839cad2316983faece","sha256:fe07f2e77ae352c37a8cde51bb8835af133166e1197587bd8bd3d21182c8412b","sha256:57bbc483b23aaa478ea23aa8eae8c0686d333554a28b2ccdb87fbf123d42ae13","sha256:9d5f15bfbfcd583c946b70d54591a9f7fedec1ad785c80283ab41c97d0c340bd","sha256:c2807cc1d7b3c21c66708c570559ebeb17272e7efb03e8ef4149b13809f04505","sha256:54fff740476f06727a623a41eb55603ced6a274adb43ba85b0afe3977782d9a0","sha256:fa6536f91cf541fc7adad3a5a1c3e1b0a1648d2fba650c62b9cba570ac5fadd2","sha256:a7ca66f36005052b3b6e8eabdbd7b9d63e5fd6b969aabfb15ac76e672b8c026e","sha256:e763e12ca2d2ff6ddef403b6469b83ba21bcf7550157d95be1d6aebb28e18868","sha256:1949f885c94912efd58cbe63ff6a212f4f6e3ce5122ccac553d593a1915eef64","sha256:d5a48c3b34263d721a52413881e7392fc3b3f303d93dbcaa64524862a8b018ec","sha256:bfc6c81879805285b55a29179a02a57cc2ad7efd2ccaefadb088c8f67cda7d72","sha256:43c15de0bb0a52197b9c79442bddde565d53975d7f5579f54215d4710760cf5a"]}}