{"architecture":"amd64","config":{"Hostname":"","Domainname":"","User":"openvino","AttachStdin":false,"AttachStdout":false,"AttachStderr":false,"Tty":false,"OpenStdin":false,"StdinOnce":false,"Env":["PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin","DEBIAN_FRONTEND=noninteractive","INTEL_OPENVINO_DIR=/opt/intel/openvino","PYTHON_VER=python3.6"],"Cmd":["/bin/bash"],"ArgsEscaped":true,"Image":"sha256:b68c15d194dafaeaf51c186a5afd8a39529773ef0a9299f8ad3319d2881889fa","Volumes":null,"WorkingDir":"/opt/intel/openvino","Entrypoint":null,"OnBuild":null,"Labels":{"description":"This is the runtime image for Intel(R) Distribution of OpenVINO(TM) toolkit on Ubuntu 18.04 LTS","vendor":"Intel Corporation"},"Shell":["/bin/bash","-xo","pipefail","-c"]},"container":"658cec94ac00de987ee1c4408c99e648f990020f9d39bcc954b7c28d0ad5586d","container_config":{"Hostname":"658cec94ac00","Domainname":"","User":"openvino","AttachStdin":false,"AttachStdout":false,"AttachStderr":false,"Tty":false,"OpenStdin":false,"StdinOnce":false,"Env":["PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin","DEBIAN_FRONTEND=noninteractive","INTEL_OPENVINO_DIR=/opt/intel/openvino","PYTHON_VER=python3.6"],"Cmd":["/bin/bash","-xo","pipefail","-c","#(nop) ","CMD [\"/bin/bash\"]"],"ArgsEscaped":true,"Image":"sha256:b68c15d194dafaeaf51c186a5afd8a39529773ef0a9299f8ad3319d2881889fa","Volumes":null,"WorkingDir":"/opt/intel/openvino","Entrypoint":null,"OnBuild":null,"Labels":{"description":"This is the runtime image for Intel(R) Distribution of OpenVINO(TM) toolkit on Ubuntu 18.04 LTS","vendor":"Intel Corporation"},"Shell":["/bin/bash","-xo","pipefail","-c"]},"created":"2021-11-12T12:53:45.40397134Z","docker_version":"18.09.8","history":[{"created":"2021-10-01T02:23:23.735764952Z","created_by":"/bin/sh -c #(nop) ADD file:0d82cd095966e8ee78b593cb47a352eec842edb7bd9d9468e8a70154522447d1 in / "},{"created":"2021-10-01T02:23:24.179667784Z","created_by":"/bin/sh -c #(nop)  CMD [\"bash\"]","empty_layer":true},{"created":"2021-11-12T12:47:58.672828307Z","created_by":"/bin/sh -c #(nop)  LABEL description=This is the runtime image for Intel(R) Distribution of OpenVINO(TM) toolkit on Ubuntu 18.04 LTS","empty_layer":true},{"created":"2021-11-12T12:47:58.988840584Z","created_by":"/bin/sh -c #(nop)  LABEL vendor=Intel Corporation","empty_layer":true},{"created":"2021-11-12T12:47:59.352792015Z","created_by":"/bin/sh -c #(nop)  USER root","empty_layer":true},{"created":"2021-11-12T12:47:59.835750861Z","created_by":"/bin/sh -c #(nop) WORKDIR /","empty_layer":true},{"created":"2021-11-12T12:48:00.197098802Z","created_by":"/bin/bash -xo pipefail -c #(nop)  SHELL [/bin/bash -xo pipefail -c]","empty_layer":true},{"created":"2021-11-12T12:48:00.57302898Z","created_by":"/bin/bash -xo pipefail -c #(nop)  ENV DEBIAN_FRONTEND=noninteractive","empty_layer":true},{"created":"2021-11-12T12:48:02.144030384Z","created_by":"|0 /bin/bash -xo pipefail -c useradd -ms /bin/bash -G video,users openvino \u0026\u0026     chown openvino -R /home/openvino"},{"created":"2021-11-12T12:48:03.478620433Z","created_by":"|0 /bin/bash -xo pipefail -c mkdir /opt/intel"},{"created":"2021-11-12T12:48:03.814806715Z","created_by":"/bin/bash -xo pipefail -c #(nop)  ENV INTEL_OPENVINO_DIR=/opt/intel/openvino","empty_layer":true},{"created":"2021-11-12T12:48:05.997805051Z","created_by":"/bin/bash -xo pipefail -c #(nop) COPY dir:8323cbb499312131c5d87dd5de92176a0be1f02d81f5fa31ad6e8bf246cfe9d6 in /opt/intel "},{"created":"2021-11-12T12:48:08.59780108Z","created_by":"/bin/bash -xo pipefail -c #(nop) WORKDIR /thirdparty"},{"created":"2021-11-12T12:48:08.989900548Z","created_by":"/bin/bash -xo pipefail -c #(nop)  ARG INSTALL_SOURCES=no","empty_layer":true},{"created":"2021-11-12T12:48:09.51158444Z","created_by":"/bin/bash -xo pipefail -c #(nop)  ARG DEPS=tzdata           curl","empty_layer":true},{"created":"2021-11-12T12:48:09.935273158Z","created_by":"/bin/bash -xo pipefail -c #(nop)  ARG LGPL_DEPS=","empty_layer":true},{"created":"2021-11-12T12:48:10.438151122Z","created_by":"/bin/bash -xo pipefail -c #(nop)  ARG INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler","empty_layer":true},{"created":"2021-11-12T12:48:30.680033274Z","created_by":"|4 DEPS=tzdata           curl INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler INSTALL_SOURCES=no LGPL_DEPS= /bin/bash -xo pipefail -c apt-get update \u0026\u0026     dpkg --get-selections | grep -v deinstall | awk '{print $1}' \u003e base_packages.txt  \u0026\u0026     apt-get install -y --no-install-recommends ${DEPS} \u0026\u0026     rm -rf /var/lib/apt/lists/*"},{"created":"2021-11-12T12:50:00.842564332Z","created_by":"|4 DEPS=tzdata           curl INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler INSTALL_SOURCES=no LGPL_DEPS= /bin/bash -xo pipefail -c apt-get update \u0026\u0026     apt-get install -y --no-install-recommends ${LGPL_DEPS} \u0026\u0026     ${INTEL_OPENVINO_DIR}/install_dependencies/install_openvino_dependencies.sh -y ${INSTALL_PACKAGES} \u0026\u0026     if [ \"$INSTALL_SOURCES\" = \"yes\" ]; then       sed -Ei 's/# deb-src /deb-src /' /etc/apt/sources.list \u0026\u0026       apt-get update \u0026\u0026 \t  dpkg --get-selections | grep -v deinstall | awk '{print $1}' \u003e all_packages.txt \u0026\u0026 \t  grep -v -f base_packages.txt all_packages.txt | while read line; do \t  package=$(echo $line); \t  name=(${package//:/ });       grep -l GPL /usr/share/doc/${name[0]}/copyright;       exit_status=$?; \t  if [ $exit_status -eq 0 ]; then \t    apt-get source -q --download-only $package;  \t  fi       done \u0026\u0026       echo \"Download source for $(ls | wc -l) third-party packages: $(du -sh)\"; fi \u0026\u0026     rm /usr/lib/python3.*/lib-dynload/readline.cpython-3*-gnu.so \u0026\u0026 rm -rf /var/lib/apt/lists/*"},{"created":"2021-11-12T12:50:03.132695824Z","created_by":"/bin/bash -xo pipefail -c #(nop) WORKDIR /opt/intel/openvino/licensing","empty_layer":true},{"created":"2021-11-12T12:50:04.623053218Z","created_by":"|4 DEPS=tzdata           curl INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler INSTALL_SOURCES=no LGPL_DEPS= /bin/bash -xo pipefail -c if [ \"$INSTALL_SOURCES\" = \"no\" ]; then         echo \"This image doesn't contain source for 3d party components under LGPL/GPL licenses. Please use tag \u003cYYYY.U_src\u003e to pull the image with downloaded sources.\" \u003e DockerImage_readme.txt ;     fi"},{"created":"2021-11-12T12:50:05.057214006Z","created_by":"/bin/bash -xo pipefail -c #(nop)  ENV PYTHON_VER=python3.6","empty_layer":true},{"created":"2021-11-12T12:50:12.035981573Z","created_by":"|4 DEPS=tzdata           curl INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler INSTALL_SOURCES=no LGPL_DEPS= /bin/bash -xo pipefail -c ${PYTHON_VER} -m pip install --upgrade pip"},{"created":"2021-11-12T12:50:12.507251845Z","created_by":"/bin/bash -xo pipefail -c #(nop) WORKDIR /tmp","empty_layer":true},{"created":"2021-11-12T12:50:30.514825476Z","created_by":"|4 DEPS=tzdata           curl INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler INSTALL_SOURCES=no LGPL_DEPS= /bin/bash -xo pipefail -c ${PYTHON_VER} -m pip install --no-cache-dir -r ${INTEL_OPENVINO_DIR}/python/${PYTHON_VER}/requirements.txt"},{"created":"2021-11-12T12:50:31.127092542Z","created_by":"/bin/bash -xo pipefail -c #(nop) WORKDIR /opt/intel/openvino/licensing","empty_layer":true},{"created":"2021-11-12T12:50:31.483766655Z","created_by":"/bin/bash -xo pipefail -c #(nop) COPY file:8d0bb27350c6b992295edd5c55e9e3d2113d872121172f14a0020f84f102cfde in /opt/intel/openvino/licensing "},{"created":"2021-11-12T12:50:31.933815534Z","created_by":"/bin/bash -xo pipefail -c #(nop)  ARG INTEL_OPENCL","empty_layer":true},{"created":"2021-11-12T12:50:32.329272826Z","created_by":"/bin/bash -xo pipefail -c #(nop)  ARG TEMP_DIR=/tmp/opencl","empty_layer":true},{"created":"2021-11-12T12:50:32.79816953Z","created_by":"/bin/bash -xo pipefail -c #(nop) WORKDIR /opt/intel/openvino/install_dependencies","empty_layer":true},{"created":"2021-11-12T12:52:33.023265732Z","created_by":"|6 DEPS=tzdata           curl INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler INSTALL_SOURCES=no INTEL_OPENCL=21.29.20389 LGPL_DEPS= TEMP_DIR=/tmp/opencl /bin/bash -xo pipefail -c ./install_NEO_OCL_driver.sh --no_numa -y -d ${INTEL_OPENCL} \u0026\u0026     apt-get autoremove -y software-properties-common \u0026\u0026     rm -rf /var/lib/apt/lists/*"},{"created":"2021-11-12T12:52:34.224169357Z","created_by":"/bin/bash -xo pipefail -c #(nop)  ARG LGPL_DEPS=udev","empty_layer":true},{"created":"2021-11-12T12:52:34.588823344Z","created_by":"/bin/bash -xo pipefail -c #(nop) WORKDIR /thirdparty","empty_layer":true},{"created":"2021-11-12T12:52:45.597193017Z","created_by":"|6 DEPS=tzdata           curl INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler INSTALL_SOURCES=no INTEL_OPENCL=21.29.20389 LGPL_DEPS=udev TEMP_DIR=/tmp/opencl /bin/bash -xo pipefail -c apt-get update \u0026\u0026     dpkg --get-selections | grep -v deinstall | awk '{print $1}' \u003e no_vpu_packages.txt \u0026\u0026     apt-get install -y --no-install-recommends ${LGPL_DEPS} \u0026\u0026     if [ \"$INSTALL_SOURCES\" = \"yes\" ]; then       sed -Ei 's/# deb-src /deb-src /' /etc/apt/sources.list \u0026\u0026       apt-get update \u0026\u0026 \t  dpkg --get-selections | grep -v deinstall | awk '{print $1}' \u003e vpu_packages.txt \u0026\u0026 \t  grep -v -f no_vpu_packages.txt vpu_packages.txt | while read line; do \t  package=$(echo $line); \t  name=(${package//:/ });       grep -l GPL /usr/share/doc/${name[0]}/copyright;       exit_status=$?; \t  if [ $exit_status -eq 0 ]; then \t    apt-get source -q --download-only $package;  \t  fi       done \u0026\u0026       echo \"Download source for $(ls | wc -l) third-party packages: $(du -sh)\"; fi \u0026\u0026     rm -rf /var/lib/apt/lists/*"},{"created":"2021-11-12T12:52:46.022741336Z","created_by":"/bin/bash -xo pipefail -c #(nop) COPY dir:30e6a1f335d765616098795f535e554e40ca8f61db0407309729915c0c12932a in /opt/libusb-1.0.22 "},{"created":"2021-11-12T12:52:46.545709249Z","created_by":"/bin/bash -xo pipefail -c #(nop) WORKDIR /opt/libusb-1.0.22/libusb","empty_layer":true},{"created":"2021-11-12T12:53:15.629284059Z","created_by":"|6 DEPS=tzdata           curl INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler INSTALL_SOURCES=no INTEL_OPENCL=21.29.20389 LGPL_DEPS=udev TEMP_DIR=/tmp/opencl /bin/bash -xo pipefail -c apt-get update \u0026\u0026     apt-get install -y --no-install-recommends binutils \u0026\u0026     /bin/mkdir -p '/usr/local/lib' \u0026\u0026     /bin/bash ../libtool   --mode=install /usr/bin/install -c   libusb-1.0.la '/usr/local/lib' \u0026\u0026     /bin/mkdir -p '/usr/local/include/libusb-1.0' \u0026\u0026     /usr/bin/install -c -m 644 libusb.h '/usr/local/include/libusb-1.0' \u0026\u0026     /bin/mkdir -p '/usr/local/lib/pkgconfig' \u0026\u0026    apt-get autoremove -y binutils \u0026\u0026     apt-get install libglib2.0-dev g++ -y --no-install-recommends \u0026\u0026     rm -rf /var/lib/apt/lists/*"},{"created":"2021-11-12T12:53:16.943679229Z","created_by":"/bin/bash -xo pipefail -c #(nop) WORKDIR /opt/libusb-1.0.22/","empty_layer":true},{"created":"2021-11-12T12:53:18.989244855Z","created_by":"|6 DEPS=tzdata           curl INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler INSTALL_SOURCES=no INTEL_OPENCL=21.29.20389 LGPL_DEPS=udev TEMP_DIR=/tmp/opencl /bin/bash -xo pipefail -c /usr/bin/install -c -m 644 libusb-1.0.pc '/usr/local/lib/pkgconfig' \u0026\u0026     cp ${INTEL_OPENVINO_DIR}/deployment_tools/inference_engine/external/97-myriad-usbboot.rules /etc/udev/rules.d/ \u0026\u0026     ldconfig"},{"created":"2021-11-12T12:53:19.95049748Z","created_by":"/bin/bash -xo pipefail -c #(nop) WORKDIR /tmp","empty_layer":true},{"created":"2021-11-12T12:53:41.233714506Z","created_by":"|6 DEPS=tzdata           curl INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler INSTALL_SOURCES=no INTEL_OPENCL=21.29.20389 LGPL_DEPS=udev TEMP_DIR=/tmp/opencl /bin/bash -xo pipefail -c apt-get update \u0026\u0026     apt-get install -y --no-install-recommends         libboost-filesystem1.65-dev         libboost-thread1.65-dev         libjson-c3 libxxf86vm-dev \u0026\u0026     rm -rf /var/lib/apt/lists/* \u0026\u0026 rm -rf /tmp/*"},{"created":"2021-11-12T12:53:43.965343054Z","created_by":"|6 DEPS=tzdata           curl INSTALL_PACKAGES=-c=opencv_req -c=python -c=cl_compiler INSTALL_SOURCES=no INTEL_OPENCL=21.29.20389 LGPL_DEPS=udev TEMP_DIR=/tmp/opencl /bin/bash -xo pipefail -c if [ -f \"${INTEL_OPENVINO_DIR}\"/bin/setupvars.sh ]; then         printf \"\\nexport TBB_DIR=\\${INTEL_OPENVINO_DIR}/deployment_tools/inference_engine/external/tbb/cmake\\n\" \u003e\u003e ${INTEL_OPENVINO_DIR}/bin/setupvars.sh;         printf \"\\nsource \\${INTEL_OPENVINO_DIR}/bin/setupvars.sh\\n\" \u003e\u003e /home/openvino/.bashrc;         printf \"\\nsource \\${INTEL_OPENVINO_DIR}/bin/setupvars.sh\\n\" \u003e\u003e /root/.bashrc;     fi;     if [ -d \"${INTEL_OPENVINO_DIR}\"/opt/intel/mediasdk ]; then         ln --symbolic \"${INTEL_OPENVINO_DIR}\"/opt/intel/mediasdk/ /opt/intel/mediasdk || true;         printf \"\\nexport LIBVA_DRIVER_NAME=iHD \\nexport LIBVA_DRIVERS_PATH=\\${INTEL_OPENVINO_DIR}/opt/intel/mediasdk/lib64/ \\nexport GST_VAAPI_ALL_DRIVERS=1 \\nexport LIBRARY_PATH=\\${INTEL_OPENVINO_DIR}/opt/intel/mediasdk/lib64/:\\$LIBRARY_PATH \\nexport LD_LIBRARY_PATH=\\${INTEL_OPENVINO_DIR}/opt/intel/mediasdk/lib64/:\\$LD_LIBRARY_PATH \\n\" \u003e\u003e /home/openvino/.bashrc;         printf \"\\nexport LIBVA_DRIVER_NAME=iHD \\nexport LIBVA_DRIVERS_PATH=\\${INTEL_OPENVINO_DIR}/opt/intel/mediasdk/lib64/ \\nexport GST_VAAPI_ALL_DRIVERS=1 \\nexport LIBRARY_PATH=\\${INTEL_OPENVINO_DIR}/opt/intel/mediasdk/lib64/:\\$LIBRARY_PATH \\nexport LD_LIBRARY_PATH=\\${INTEL_OPENVINO_DIR}/opt/intel/mediasdk/lib64/:\\$LD_LIBRARY_PATH \\n\" \u003e\u003e /root/.bashrc;     fi;"},{"created":"2021-11-12T12:53:44.325874808Z","created_by":"/bin/bash -xo pipefail -c #(nop)  USER openvino","empty_layer":true},{"created":"2021-11-12T12:53:44.69281648Z","created_by":"/bin/bash -xo pipefail -c #(nop) WORKDIR /opt/intel/openvino","empty_layer":true},{"created":"2021-11-12T12:53:45.048856147Z","created_by":"/bin/bash -xo pipefail -c #(nop)  ENV DEBIAN_FRONTEND=noninteractive","empty_layer":true},{"created":"2021-11-12T12:53:45.40397134Z","created_by":"/bin/bash -xo pipefail -c #(nop)  CMD [\"/bin/bash\"]","empty_layer":true}],"os":"linux","rootfs":{"type":"layers","diff_ids":["sha256:824bf068fd3dc3ad967022f187d85250eb052f61fe158486b2df4e002f6f984e","sha256:b0e045dc4738d6bd21f65b223dd3e497345d25dd3e8af2302e0c518f23f074dc","sha256:9124942c1d338cacfe1b936766b8f1897fb166dbd5f7e18cbd9f433601eebeb7","sha256:c5729a54acba896ea2a4af466491484618d9e16cfd69f7138c86a226766c3f56","sha256:5fdec762398b5c5b9b3852f4c5d2396039c3e821d220a68226731ff5cb5fa4d5","sha256:0abddcd24a9994c41e45a1acc12382b672dfb6c9350dacdfba63d68730728307","sha256:8211c02fa427c57a9d59f6d124ee68a2cd3c994d22aaede86ba430eecff698d1","sha256:ad39904059bf36389bca6d14f5457888c12ee8bb9296fe919a5a627a6c1a1579","sha256:bea09f889735d53155a668c100fc28105e0a954a420581a115e4e9fe75dd9d0e","sha256:def043dcc7f9678563779ef7739c4e725785d370106868b659e4d4e70d1dd51d","sha256:d03d2b1fa681b45f5b8e9be4324689b182bdf5c6b56788c680906da37903dd6a","sha256:5eb711f59afe09019ddf794d6a6498bb06b2c7d3b37118040f1acd8417b3606b","sha256:c1cc6a1b3c3ff773119f411c88e45cd7b65b53fe6f7006bf2d6c2e0c1c88ac50","sha256:52f0b9108acc4e941e21e3437cb27b3361c3196b54f86fd34dbe557d689e1044","sha256:01b28fc18019569f4930e2b5eefc613b618c7f65c344b12173d8a3eb74e1dfe4","sha256:cca5a21cc3a05df1c2f5fa4d24db1c2d03e0ae4dc2216b3ff7d917a23477b65a","sha256:e77a88605813ff2d0ee96817a11cf9c3743c989aa735d9310644e7eef2398228","sha256:e4f0342b50d2ca2fb34e9cb5878807514c0c512984c0e82889745ff2f803fc1c"]}}