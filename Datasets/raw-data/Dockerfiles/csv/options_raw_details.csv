repos,repo_version,filename,option,total_counts,details
erdos-project/erdos,latest,/Dockerfile,FROM,1,['ubuntu:18.04']
erdos-project/erdos,latest,/Dockerfile,RUN,16,"['apt-get -y update && apt-get -y install sudo', 'mkdir -p /home/erdos', 'groupadd erdos -g ${gid}', 'useradd -r -u ${uid} -g erdos erdos', 'echo ""erdos ALL=(ALL) NOPASSWD: ALL"" > /etc/sudoers.d/erdos', 'chmod 0440 /etc/sudoers.d/erdos', 'chown ${uid}:${gid} -R /home/erdos', 'sudo apt-get -y install curl clang python3 python3-pip git', ""curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y"", 'rustup default nightly', 'pip3 install setuptools setuptools-rust', 'mkdir -p /home/erdos/workspace', 'cd /home/erdos/workspace && git clone https://github.com/erdos-project/erdos.git', 'cd /home/erdos/workspace/erdos', 'cargo build --release', 'python3 python/setup.py install --user']"
erdos-project/erdos,latest,/Dockerfile,ENV,5,"['uid 1000', 'gid 1000', 'HOME /home/erdos', 'SHELL /bin/bash', 'PATH=""/home/erdos/.cargo/bin:${PATH}""']"
erdos-project/erdos,latest,/Dockerfile,USER,1,['erdos']
erdos-project/erdos,latest,/Dockerfile,SHELL,1,"['[""/bin/bash"", ""-c""]']"
erdos-project/erdos,latest,/Dockerfile,WORKDIR,1,['/home/erdos/workspace/erdos']
kakaobrain/pororo,latest,/Dockerfile,FROM,1,['pytorch/pytorch:1.6.0-cuda10.1-cudnn7-devel']
kakaobrain/pororo,latest,/Dockerfile,WORKDIR,6,"['/app', '/app/external_lib', '/app/external_lib/kenlm/build', '/app/external_lib', '/app/external_lib/wav2letter/bindings/python', '/app']"
kakaobrain/pororo,latest,/Dockerfile,RUN,12,"['apt-get update &&     apt-get install -y apt-utils     wget     git     gcc     build-essential     cmake     libpq-dev     libsndfile-dev     libboost-system-dev     libboost-thread-dev     libboost-program-options-dev     libboost-test-dev     libeigen3-dev     zlib1g-dev     libbz2-dev     liblzma-dev     libsndfile1-dev     libopenblas-dev     libfftw3-dev     libgflags-dev     libgoogle-glog-dev     libgl1-mesa-glx     libomp-dev', 'pip install --upgrade pip', 'pip install python-mecab-ko==1.0.9', 'pip install pororo', 'pip install soundfile     torchaudio==0.6.0     pydub', 'conda install -y -c conda-forge librosa', 'pip install librosa     kollocate     koparadigm     g2pk     fugashi     ipadic     romkan     g2pM     jieba     opencv-python     scikit-image     editdistance==0.5.3     epitran==1.2     fastdtw==0.3.4     future     Pillow==7.2.0     pinyin==0.4.0     scikit-learn     scipy     SoundFile==0.10.2     numba==0.48     ko_pron', 'git clone https://github.com/kpu/kenlm.git', 'cmake .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_POSITION_INDEPENDENT_CODE=ON', 'make', 'git clone -b v0.2 https://github.com/facebookresearch/wav2letter.git', 'pip install -e .']"
kakaobrain/pororo,latest,/Dockerfile,ENV,1,"['KENLM_ROOT_DIR=""/app/external_lib/kenlm/""']"
richzhang/PerceptualSimilarity,latest,/Dockerfile,FROM,1,['nvidia/cuda:9.0-base-ubuntu16.04']
richzhang/PerceptualSimilarity,latest,/Dockerfile,LABEL,1,"['maintainer=""Seyoung Park <seyoung.arts.park@protonmail.com>""']"
richzhang/PerceptualSimilarity,latest,/Dockerfile,RUN,4,"['apt-get update && apt-get install -y --no-install-recommends         build-essential         cuda-command-line-tools-9-0         cuda-cublas-9-0         cuda-cufft-9-0         cuda-curand-9-0         cuda-cusolver-9-0         cuda-cusparse-9-0         curl         libcudnn7=7.1.4.18-1+cuda9.0         libfreetype6-dev         libhdf5-serial-dev         libpng12-dev         libzmq3-dev         pkg-config         python         python-dev         rsync         software-properties-common         unzip         &&     apt-get clean &&     rm -rf /var/lib/apt/lists/*', 'apt-get update && apt-get install -y --no-install-recommends         wget &&     MINICONDA=""Miniconda3-latest-Linux-x86_64.sh"" &&     wget --quiet https://repo.continuum.io/miniconda/$MINICONDA &&     bash $MINICONDA -b -p /miniconda &&     rm -f $MINICONDA', 'conda update -n base conda &&     conda install pytorch torchvision cuda90 -c pytorch', 'conda install numpy scipy jupyter matplotlib &&     conda install -c conda-forge scikit-image &&     apt-get install -y python-qt4 &&     pip install opencv-python']"
richzhang/PerceptualSimilarity,latest,/Dockerfile,ENV,2,"['PATH /miniconda/bin:$PATH', 'LD_LIBRARY_PATH /usr/local/cuda/extras/CUPTI/lib64:$LD_LIBRARY_PATH']"
richzhang/PerceptualSimilarity,latest,/Dockerfile,EXPOSE,1,['8888']
richzhang/PerceptualSimilarity,latest,/Dockerfile,WORKDIR,1,"['""/notebooks""']"
generalized-intelligence/GAAS,latest,/deprecated/algorithms/sfm/OpenSfM/Dockerfile.python3,FROM,1,['paulinus/opensfm-docker-base:python3']
generalized-intelligence/GAAS,latest,/deprecated/algorithms/sfm/OpenSfM/Dockerfile.python3,COPY,1,['. /source/OpenSfM']
generalized-intelligence/GAAS,latest,/deprecated/algorithms/sfm/OpenSfM/Dockerfile.python3,WORKDIR,1,['/source/OpenSfM']
generalized-intelligence/GAAS,latest,/deprecated/algorithms/sfm/OpenSfM/Dockerfile.python3,RUN,1,['pip3 install -r requirements.txt &&     python3 setup.py build']
generalized-intelligence/GAAS,latest,/deprecated/algorithms/sfm/OpenSfM/Dockerfile,FROM,1,['paulinus/opensfm-docker-base']
generalized-intelligence/GAAS,latest,/deprecated/algorithms/sfm/OpenSfM/Dockerfile,COPY,1,['. /source/OpenSfM']
generalized-intelligence/GAAS,latest,/deprecated/algorithms/sfm/OpenSfM/Dockerfile,WORKDIR,1,['/source/OpenSfM']
generalized-intelligence/GAAS,latest,/deprecated/algorithms/sfm/OpenSfM/Dockerfile,RUN,1,['pip install -r requirements.txt &&     python setup.py build']
naurril/SUSTechPOINTS,latest,/Docker/Dockerfile,FROM,1,['ubuntu:20.04']
naurril/SUSTechPOINTS,latest,/Docker/Dockerfile,WORKDIR,1,['/root']
naurril/SUSTechPOINTS,latest,/Docker/Dockerfile,COPY,1,['run.sh .']
naurril/SUSTechPOINTS,latest,/Docker/Dockerfile,RUN,4,"['apt update && apt install -y python3-pip git wget', 'pip install --upgrade pip', 'git clone --depth 1 https://github.com/naurril/SUSTechPOINTS.git', 'cd SUSTechPOINTS &&         wget https://github.com/naurril/SUSTechPOINTS/releases/download/0.1/deep_annotation_inference.h5 -P algos/models &&         python3 -m pip install -r ./requirement.txt -i https://pypi.tuna.tsinghua.edu.cn/simple']"
naurril/SUSTechPOINTS,latest,/Docker/Dockerfile,ENTRYPOINT,1,"['[""/root/run.sh""]']"
naurril/SUSTechPOINTS,latest,/Docker/Dockerfile,EXPOSE,1,['8081']
faustomorales/keras-ocr,latest,/Dockerfile,FROM,1,['python:3.7']
faustomorales/keras-ocr,latest,/Dockerfile,WORKDIR,1,['/usr/src']
faustomorales/keras-ocr,latest,/Dockerfile,RUN,2,"['mkdir -p /root/.keras-ocr && (     cd /root/.keras-ocr &&     curl -L -o craft_mlt_25k.h5 https://github.com/faustomorales/keras-ocr/releases/download/v0.8.4/craft_mlt_25k.h5 &&     curl -L -o crnn_kurapan.h5 https://github.com/faustomorales/keras-ocr/releases/download/v0.8.4/crnn_kurapan.h5     )', 'pip install pipenv && make init']"
faustomorales/keras-ocr,latest,/Dockerfile,COPY,5,"['./Pipfile* ./', './Makefile ./', './setup* ./', './versioneer* ./', './docs/requirements.txt ./docs/requirements.txt']"
faustomorales/keras-ocr,latest,/Dockerfile,ENV,1,['LC_ALL C']
automl/Auto-PyTorch,latest,/Dockerfile,FROM,1,['ubuntu:20.04']
automl/Auto-PyTorch,latest,/Dockerfile,WORKDIR,1,['/auto-pytorch']
automl/Auto-PyTorch,latest,/Dockerfile,RUN,17,"['apt-get update', 'apt-get -y install locales', 'touch /usr/share/locale/locale.alias', ""sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen && locale-gen"", 'export OPENBLAS_NUM_THREADS=1', 'export MKL_NUM_THREADS=1', 'export BLAS_NUM_THREADS=1', 'export OMP_NUM_THREADS=1', 'apt install -y python3-dev python3-pip', 'pip3 install --upgrade setuptools', 'apt install -y build-essential', 'apt install -y swig', 'pip3 install --upgrade pip', 'pip3 install pytest==4.6.* pep8 codecov pytest-cov flake8 flaky openml', 'cat /auto-pytorch/requirements.txt | xargs -n 1 -L 1 pip3 install', 'pip3 install jupyter', 'pip3 install /auto-pytorch/']"
automl/Auto-PyTorch,latest,/Dockerfile,ENV,3,"['LANG en_US.UTF-8', 'LANGUAGE en_US:en', 'LC_ALL en_US.UTF-8']"
automl/Auto-PyTorch,latest,/Dockerfile,ADD,1,['. /auto-pytorch/']
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.cmake,FROM,1,['ubuntu:16.04']
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.cmake,LABEL,1,"['maintainer=""Shanqing Cai <cais@google.com>""']"
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.cmake,COPY,1,['install/*.sh /install/']
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.cmake,RUN,11,"['/install/install_bootstrap_deb_packages.sh', '/install/install_deb_packages.sh', 'apt-get update', 'apt-get install -y --no-install-recommends python-pip', 'pip install --upgrade wheel', 'pip install --upgrade astor', 'pip install --upgrade gast', 'pip install --upgrade numpy', 'pip install --upgrade termcolor', 'pip install --upgrade keras_preprocessing', 'apt-get install -t xenial-backports -y golang-1.9']"
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.cmake,ENV,1,['PATH=${PATH}:/usr/lib/go-1.9/bin']
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.cpu,FROM,1,['ubuntu:16.04']
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.cpu,LABEL,1,"['maintainer=""Jan Prach <jendap@google.com>""']"
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.cpu,COPY,2,"['install/*.sh /install/', 'install/.bazelrc /etc/bazel.bazelrc']"
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.cpu,RUN,9,"['/install/install_bootstrap_deb_packages.sh', 'add-apt-repository -y ppa:openjdk-r/ppa &&     add-apt-repository -y ppa:george-edison55/cmake-3.x', '/install/install_deb_packages.sh', '/install/install_pip_packages.sh', '/install/install_bazel.sh', '/install/install_proto3.sh', '/install/install_buildifier.sh', '/install/install_auditwheel.sh', '/install/install_golang.sh']"
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.local-toolchain-ubuntu18.04-manylinux2010,FROM,1,['ubuntu:18.04 as local-toolchain-ubuntu18.04-manylinux2010']
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.local-toolchain-ubuntu18.04-manylinux2010,ENV,1,['DEBIAN_FRONTEND=noninteractive']
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.local-toolchain-ubuntu18.04-manylinux2010,RUN,3,"['apt-get update && apt-get install -y       cpio       file       flex       g++       make       patch       rpm2cpio       unar       wget       xz-utils       &&     rm -rf /var/lib/apt/lists/*', '/build_devtoolset.sh devtoolset-7 /dt7', '/build_devtoolset.sh devtoolset-8 /dt8']"
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.local-toolchain-ubuntu18.04-manylinux2010,ADD,3,"['devtoolset/fixlinks.sh fixlinks.sh', 'devtoolset/build_devtoolset.sh build_devtoolset.sh', 'devtoolset/rpm-patch.sh rpm-patch.sh']"
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.gpu.ppc64le,FROM,1,['nvidia/cuda-ppc64le:9.2-cudnn7-devel-ubuntu16.04']
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.gpu.ppc64le,LABEL,1,"['maintainer=""William Irons <wdirons@us.ibm.com>""']"
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.gpu.ppc64le,RUN,10,"['cp -P /usr/include/cudnn.h /usr/local/cuda/include', 'cp -P /usr/lib/powerpc64le-linux-gnu/libcudnn* /usr/local/cuda/lib64', '/install/install_bootstrap_deb_packages.sh', 'add-apt-repository -y ppa:openjdk-r/ppa', '/install/install_deb_packages.sh', '/install/install_openblas_ppc64le.sh', '/install/install_hdf5_ppc64le.sh', '/install/install_pip_packages.sh', '/install/install_bazel_from_source.sh', '/install/install_golang_ppc64le.sh']"
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.gpu.ppc64le,COPY,2,"['install/*.sh /install/', 'install/.bazelrc /etc/bazel.bazelrc']"
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.gpu.ppc64le,ARG,1,['DEBIAN_FRONTEND=noninteractive']
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.gpu.ppc64le,ENV,5,"['LD_LIBRARY_PATH /usr/local/cuda/extras/CUPTI/lib64:$LD_LIBRARY_PATH', 'TF_NEED_CUDA 1', 'TF_CUDA_COMPUTE_CAPABILITIES 3.0', 'TF_CUDA_VERSION 9.2', 'CUDA_TOOLKIT_PATH /usr/local/cuda-9.2']"
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.horovod.gpu,FROM,1,['nvidia/cuda:11.2.1-cudnn8-devel-ubuntu18.04']
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.horovod.gpu,RUN,6,"['apt-get update &&     apt-get install --assume-yes         build-essential         git         wget         cmake         curl         vim         ca-certificates         libjpeg-dev         libpng-dev         librdmacm1         libibverbs1         ibverbs-providers         python3.7         python3.7-dev         python3-pip         python3.7-distutils &&     rm -rf /var/lib/apt/lists/* &&     rm -f /usr/bin/python &&     rm -f /usr/bin/python3 &&     ln -s /usr/bin/python3.7 /usr/bin/python &&     ln -s /usr/bin/python3.7 /usr/bin/python3 &&     gcc --version &&     g++ --version', 'python3.7 -m pip install --upgrade pip &&     pip3.7 install --no-cache --no-cache-dir tf-nightly &&     python3.7 -c ""import tensorflow as tf; print(tf.__version__)""', 'wget https://download.open-mpi.org/release/open-mpi/v4.0/openmpi-4.0.4.tar.gz &&     tar xvf openmpi-4.0.4.tar.gz &&     cd openmpi-4.0.4 &&     ./configure --enable-orterun-prefix-by-default &&     make -j $(nproc) all &&     make install', 'ldconfig', 'pip3.7 install --no-cache --no-cache-dir         git+https://github.com/horovod/horovod.git', 'git clone         https://github.com/DEKHTIARJonathan/TF_HVD_Stability_Test.git         /workspace &&     pip3.7 install --no-cache --no-cache-dir -r requirements.txt']"
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.horovod.gpu,WORKDIR,2,"['/tmp/openmpi_source', '/workspace']"
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.horovod.gpu,ENV,5,"['LD_LIBRARY_PATH=/usr/local/lib/openmpi', 'HOROVOD_GPU_OPERATIONS=NCCL', 'HOROVOD_WITH_TENSORFLOW=1', 'HOROVOD_WITHOUT_PYTORCH=1', 'HOROVOD_WITHOUT_MXNET=1']"
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.debian.jessie.cpu,FROM,1,['debian:jessie']
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.debian.jessie.cpu,LABEL,1,"['maintainer=""Jan Prach <jendap@google.com>""']"
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.debian.jessie.cpu,COPY,2,"['install/*.sh /install/', 'install/.bazelrc /etc/bazel.bazelrc']"
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.debian.jessie.cpu,RUN,8,"['/install/install_bootstrap_deb_packages.sh', 'echo ""deb [check-valid-until=no] http://archive.debian.org/debian jessie-backports main"" |     tee -a /etc/apt/sources.list', 'apt-get update &&     apt-get install -y --no-install-recommends -t jessie-backports         openjdk-8-jre-headless ca-certificates-java &&     apt-get clean &&     rm -rf /var/lib/apt/lists/*', '/install/install_deb_packages.sh', '/install/install_pip_packages.sh', '/install/install_bazel.sh', '/install/install_golang.sh', 'pip install --upgrade virtualenv']"
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.rbe.cuda11.0-cudnn8-ubuntu18.04-manylinux2010-multipython,FROM,2,"['nvidia/cuda:11.0-cudnn8-devel-ubuntu18.04 as devtoolset', 'nvidia/cuda:11.0-cudnn8-devel-ubuntu18.04']"
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.rbe.cuda11.0-cudnn8-ubuntu18.04-manylinux2010-multipython,ENV,2,"['DEBIAN_FRONTEND=noninteractive', 'CLANG_VERSION=""r7f6f9f4cf966c78a315d15d6e913c43cfa45c47c""']"
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.rbe.cuda11.0-cudnn8-ubuntu18.04-manylinux2010-multipython,RUN,15,"['apt-get update && apt-get install -y       cpio       file       flex       g++       make       patch       rpm2cpio       unar       wget       xz-utils       &&     rm -rf /var/lib/apt/lists/*', '/build_devtoolset.sh devtoolset-7 /dt7', '/build_devtoolset.sh devtoolset-8 /dt8', 'echo     deb https://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1604/x86_64 /     > /etc/apt/sources.list.d/nvidia-ml.list       &&     apt-get update && apt-get install -y     libnvinfer-dev=7.1.3-1+cuda11.0     libnvinfer7=7.1.3-1+cuda11.0     libnvinfer-plugin-dev=7.1.3-1+cuda11.0     libnvinfer-plugin7=7.1.3-1+cuda11.0       &&     rm -rf /var/lib/apt/lists/*', '/install/install_bootstrap_deb_packages.sh', '/install/install_deb_packages.sh', 'apt-get update && apt-get install -y     libbz2-dev     libffi-dev     libgdbm-dev     libncurses5-dev     libnss3-dev     libreadline-dev     patchelf       &&     rm -rf /var/lib/apt/lists/*', '/install/install_bazel.sh', '/install/build_and_install_python.sh ""3.6.9""', '/install/build_and_install_python.sh ""3.7.7""', '/install/build_and_install_python.sh ""3.8.2""', '/install/install_pip_packages_by_version.sh ""/usr/local/bin/pip3.6""', '/install/install_pip_packages_by_version.sh ""/usr/local/bin/pip3.7""', '/install/install_pip_packages_by_version.sh ""/usr/local/bin/pip3.8""', '/install/install_latest_clang.sh']"
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.rbe.cuda11.0-cudnn8-ubuntu18.04-manylinux2010-multipython,ADD,3,"['devtoolset/fixlinks.sh fixlinks.sh', 'devtoolset/build_devtoolset.sh build_devtoolset.sh', 'devtoolset/rpm-patch.sh rpm-patch.sh']"
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.rbe.cuda11.0-cudnn8-ubuntu18.04-manylinux2010-multipython,COPY,8,"['--from=devtoolset /dt7 /dt7', '--from=devtoolset /dt8 /dt8', 'install/install_bootstrap_deb_packages.sh /install/', 'install/install_deb_packages.sh /install/', 'install/install_bazel.sh /install/', 'install/build_and_install_python.sh /install/', 'install/install_pip_packages_by_version.sh /install/', 'install/install_latest_clang.sh /install/']"
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.rbe.cuda11.0-cudnn8-ubuntu18.04-manylinux2010-multipython,ARG,1,['DEBIAN_FRONTEND=noninteractive']
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.pi-python3,FROM,1,['ubuntu:16.04']
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.pi-python3,LABEL,1,"['maintainer=""Terry Heo <terryheo@google.com>""']"
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.pi-python3,ENV,3,"['CI_BUILD_PYTHON=python3', 'CROSSTOOL_PYTHON_INCLUDE_PATH=/usr/include/python3.5', 'TF_ENABLE_XLA=0']"
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.pi-python3,COPY,2,"['install/*.sh /install/', 'install/.bazelrc /etc/bazel.bazelrc']"
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.pi-python3,RUN,12,"['/install/install_bootstrap_deb_packages.sh', 'add-apt-repository -y ppa:openjdk-r/ppa', '/install/install_deb_packages.sh --without_cmake', '/install/install_cmake.sh', '/install/install_pip_packages.sh', '/install/install_bazel.sh', '/install/install_proto3.sh', '/install/install_buildifier.sh', '/install/install_auditwheel.sh', '/install/install_golang.sh', '/install/install_pi_python3_toolchain.sh', 'chmod 644 /etc/bazel.bazelrc']"
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.gpu,FROM,1,['nvidia/cuda:10.0-cudnn7-devel-ubuntu16.04']
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.gpu,LABEL,1,"['maintainer=""Jan Prach <jendap@google.com>""']"
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.gpu,RUN,10,"['cp -P /usr/include/cudnn.h /usr/local/cuda/include', 'cp -P /usr/lib/x86_64-linux-gnu/libcudnn* /usr/local/cuda/lib64', 'apt-get update         && apt-get install nvinfer-runtime-trt-repo-ubuntu1604-5.0.2-ga-cuda10.0         && apt-get update         && apt-get install -y --no-install-recommends libnvinfer5=5.0.2-1+cuda10.0 libnvinfer-dev=5.0.2-1+cuda10.0', '/install/install_bootstrap_deb_packages.sh', 'add-apt-repository -y ppa:openjdk-r/ppa &&     add-apt-repository -y ppa:george-edison55/cmake-3.x', '/install/install_deb_packages.sh', '/install/install_pip_packages.sh', '/install/install_bazel.sh', '/install/install_golang.sh', 'mkdir /usr/local/cuda/lib &&      ln -s /usr/lib/x86_64-linux-gnu/libnccl.so.2 /usr/local/cuda/lib/libnccl.so.2 &&     ln -s /usr/include/nccl.h /usr/local/cuda/include/nccl.h']"
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.gpu,COPY,2,"['install/*.sh /install/', 'install/.bazelrc /etc/bazel.bazelrc']"
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.gpu,ARG,1,['DEBIAN_FRONTEND=noninteractive']
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.gpu,ENV,3,"['LD_LIBRARY_PATH /usr/local/cuda/extras/CUPTI/lib64:$LD_LIBRARY_PATH', 'TF_NEED_CUDA 1', 'TF_NEED_TENSORRT 1']"
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.rbe.cuda10.2-cudnn7-ubuntu18.04-manylinux2010-multipython,FROM,1,['gcr.io/tensorflow-testing/nosla-cuda10.0-cudnn7-ubuntu16.04-manylinux2010']
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.rbe.cuda10.2-cudnn7-ubuntu18.04-manylinux2010-multipython,RUN,17,"['apt-get update', 'apt-get remove -y --allow-change-held-packages cuda-license-10-0 libcudnn7 libcudnn8 libnccl2 libnccl-dev', 'apt-get install -y --no-install-recommends --allow-downgrades --allow-change-held-packages   libcublas10   libcublas-dev   cuda-nvml-dev-10.2   cuda-command-line-tools-10.2   cuda-libraries-dev-10.2   cuda-minimal-build-10.2   libcudnn7=7.6.5.32-1+cuda10.2   libcudnn7-dev=7.6.5.32-1+cuda10.2', 'rm -f /usr/local/cuda', 'ln -s /usr/local/cuda-10.2 /usr/local/cuda', 'apt-get update && apt-get install -y       cpio       file       flex       g++       make       rpm2cpio       unar       wget       &&     rm -rf /var/lib/apt/lists/*', '/install/install_bootstrap_deb_packages.sh', '/install/install_deb_packages.sh', 'apt-get update && apt-get install -y     libbz2-dev     libffi-dev     libgdbm-dev     libncurses5-dev     libnss3-dev     libreadline-dev     patchelf       &&     rm -rf /var/lib/apt/lists/*', '/install/install_bazel.sh', '/install/build_and_install_python.sh ""3.7.7""', '/install/build_and_install_python.sh ""3.8.2""', '/install/build_and_install_python.sh ""3.9.0""', '/install/install_pip_packages_by_version.sh ""/usr/local/bin/pip3.7""', '/install/install_pip_packages_by_version.sh ""/usr/local/bin/pip3.8""', '/install/install_pip_packages_by_version.sh ""/usr/local/bin/pip3.9""', '/install/install_latest_clang.sh']"
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.rbe.cuda10.2-cudnn7-ubuntu18.04-manylinux2010-multipython,ENV,2,"['DEBIAN_FRONTEND=noninteractive', 'CLANG_VERSION=""r42cab985fd95ba4f3f290e7bb26b93805edb447d""']"
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.rbe.cuda10.2-cudnn7-ubuntu18.04-manylinux2010-multipython,ARG,1,['DEBIAN_FRONTEND=noninteractive']
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.rbe.cuda10.2-cudnn7-ubuntu18.04-manylinux2010-multipython,COPY,6,"['install/install_bootstrap_deb_packages.sh /install/', 'install/install_deb_packages.sh /install/', 'install/install_bazel.sh /install/', 'install/build_and_install_python.sh /install/', 'install/install_pip_packages_by_version.sh /install/', 'install/install_latest_clang.sh /install/']"
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.pi,FROM,1,['ubuntu:14.04']
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.pi,LABEL,1,"['maintainer=""Jan Prach <jendap@google.com>""']"
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.pi,COPY,2,"['install/*.sh /install/', 'install/.bazelrc /etc/bazel.bazelrc']"
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.pi,RUN,12,"['/install/install_bootstrap_deb_packages.sh', 'add-apt-repository -y ppa:openjdk-r/ppa &&     add-apt-repository -y ppa:george-edison55/cmake-3.x', '/install/install_deb_packages.sh', '/install/install_pip_packages.sh', '/install/install_bazel.sh', '/install/install_proto3.sh', '/install/install_buildifier.sh', '/install/install_auditwheel.sh', '/install/install_golang.sh', '/install/install_gcc6.sh', '/install/install_pi_toolchain.sh', 'chmod 644 /etc/bazel.bazelrc']"
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.pi,ENV,1,['TF_ENABLE_XLA=0']
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.custom_op_ubuntu_16_cuda11.2,FROM,2,"['nvidia/cuda:11.2.1-cudnn8-devel-ubuntu16.04 as devtoolset', 'nvidia/cuda:11.2.1-cudnn8-devel-ubuntu16.04']"
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.custom_op_ubuntu_16_cuda11.2,LABEL,2,"['maintainer=""Amit Patankar <amitpatankar@google.com>""', 'maintainer=""Amit Patankar <amitpatankar@google.com>""']"
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.custom_op_ubuntu_16_cuda11.2,ENV,2,"['DEBIAN_FRONTEND=noninteractive', 'TF_NEED_CUDA=1']"
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.custom_op_ubuntu_16_cuda11.2,RUN,16,"['apt-get update && apt-get install -y       cpio       file       flex       g++       make       rpm2cpio       unar       wget       &&     rm -rf /var/lib/apt/lists/*', '/build_devtoolset.sh devtoolset-7 /dt7', '/build_devtoolset.sh devtoolset-8 /dt8', 'apt-get update && apt-get install -y     libnvinfer-dev=7.2.2-1+cuda11.1     libnvinfer7=7.2.2-1+cuda11.1     libnvinfer-plugin-dev=7.2.2-1+cuda11.1     libnvinfer-plugin7=7.2.2-1+cuda11.1       &&     rm -rf /var/lib/apt/lists/*', '/install/install_bootstrap_deb_packages.sh', '/install/install_deb_packages.sh', '/install/install_clang.sh', '/install/install_bazel.sh', '/install/install_buildifier.sh', 'add-apt-repository ppa:deadsnakes/ppa &&     apt-get update && apt-get install -y     python3.6 python3.6-dev python3-pip python3.6-venv &&     rm -rf /var/lib/apt/lists/* &&     python3.6 -m pip install pip --upgrade &&     update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.6 0', '/install/install_python37.sh', 'wget https://bootstrap.pypa.io/get-pip.py && python3.6 get-pip.py && rm get-pip.py', '/install/install_pip_packages.sh', '/install/install_auditwheel.sh', 'update-alternatives --install /usr/bin/python python /usr/bin/python3.6 0', 'pip3 install ${TF_PACKAGE}${TF_PACKAGE_VERSION:+==${TF_PACKAGE_VERSION}}']"
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.custom_op_ubuntu_16_cuda11.2,ADD,3,"['devtoolset/fixlinks.sh fixlinks.sh', 'devtoolset/build_devtoolset.sh build_devtoolset.sh', 'devtoolset/rpm-patch.sh rpm-patch.sh']"
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.custom_op_ubuntu_16_cuda11.2,COPY,3,"['--from=devtoolset /dt7 /dt7', '--from=devtoolset /dt8 /dt8', 'install/*.sh /install/']"
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.custom_op_ubuntu_16_cuda11.2,ARG,3,"['DEBIAN_FRONTEND=noninteractive', 'TF_PACKAGE=tensorflow', 'TF_PACKAGE_VERSION=']"
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.micro,FROM,1,['python:3.9.0-buster']
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.micro,LABEL,1,"['maintainer=""Pete Warden <petewarden@google.com>""']"
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.micro,RUN,12,"['echo deb http://apt.llvm.org/buster/ llvm-toolchain-buster-12 main > /etc/apt/sources.list.d/llvm.list', 'wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add -', 'apt-get update', 'apt-get install -y zip xxd sudo', 'apt-get install -y clang-12 clang-format-12', 'ln -s /usr/bin/clang-12 /usr/bin/clang', 'ln -s /usr/bin/clang++-12 /usr/bin/clang++', 'ln -s /usr/bin/clang-format-12 /usr/bin/clang-format', 'pip install six', 'pip install pyyaml requests psutil robotframework==3.1', '/install/install_bazel.sh', '/install/install_buildifier.sh']"
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.micro,COPY,1,['install/*.sh /install/']
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.cuda-clang,FROM,1,['local-manylinux-toolchain']
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.cuda-clang,WORKDIR,2,"['/', '/tensorflow']"
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.cuda-clang,RUN,5,"['git clone https://github.com/tensorflow/tensorflow', 'patch -p1 < cuda-clang.patch', 'yes """" | ./configure', 'bazel build --config=opt tensorflow/tools/pip_package:build_pip_package     --nodistinct_host_configuration', './bazel-bin/tensorflow/tools/pip_package/build_pip_package /tf-wheel']"
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.cuda-clang,ENV,1,['TF_NEED_GCP=1     TF_NEED_HDFS=1     TF_NEED_CUDA=1     TF_CUDA_CLANG=1     PATH=/dt7/usr/bin:$PATH     PYTHON_BIN_PATH=/usr/bin/python3.6     CLANG_CUDA_COMPILER_PATH=/clang_${CLANG_VERSION}/bin/clang']
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.cuda-clang,ADD,1,['cuda-clang.patch cuda-clang.patch']
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.rbe.rocm-ubuntu18.04-manylinux2010-multipython,FROM,1,['ubuntu:18.04']
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.rbe.rocm-ubuntu18.04-manylinux2010-multipython,COPY,8,"['--from=local-toolchain-ubuntu18.04-manylinux2010 /dt7 /dt7', '--from=local-toolchain-ubuntu18.04-manylinux2010 /dt8 /dt8', 'install/install_bootstrap_deb_packages.sh /install/', 'install/install_deb_packages.sh /install/', 'install/install_bazel.sh /install/', 'install/build_and_install_python.sh /install/', 'install/install_pip_packages_by_version.sh /install/', 'install/install_latest_clang.sh /install/']"
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.rbe.rocm-ubuntu18.04-manylinux2010-multipython,ARG,2,"['DEBIAN_FRONTEND=noninteractive', 'ROCM_PATH=/opt/rocm']"
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.rbe.rocm-ubuntu18.04-manylinux2010-multipython,RUN,16,"['apt-get update && apt-get install -y --no-install-recommends     curl libnuma-dev gnupg sudo libelf1 build-essential   && curl -k -sL https://repo.radeon.com/rocm/rocm.gpg.key | apt-key add -   && printf ""deb [arch=amd64] http://repo.radeon.com/rocm/apt/4.5.2/ ubuntu main"" | tee /etc/apt/sources.list.d/rocm.list   && apt-get update && apt-get install -y --no-install-recommends     rocm-dev rocm-libs rccl   && apt-get clean && rm -rf /var/lib/apt/lists/*', 'bash -c ""ls -al /opt/roc*""', 'bash -c ""echo -e \'gfx900\\ngfx906\\ngfx908\' > $ROCM_PATH/bin/target.lst""', '/install/install_bootstrap_deb_packages.sh', '/install/install_deb_packages.sh', 'apt-get update && apt-get install -y     bsdmainutils     libbz2-dev     libffi-dev     libgdbm-dev     libncurses5-dev     libnss3-dev     libreadline-dev     patchelf       &&     rm -rf /var/lib/apt/lists/*', '/install/install_bazel.sh', '/install/build_and_install_python.sh ""3.6.9""', '/install/build_and_install_python.sh ""3.7.7""', '/install/build_and_install_python.sh ""3.8.2""', '/install/build_and_install_python.sh ""3.9.4""', '/install/install_pip_packages_by_version.sh ""/usr/local/bin/pip3.6""', '/install/install_pip_packages_by_version.sh ""/usr/local/bin/pip3.7""', '/install/install_pip_packages_by_version.sh ""/usr/local/bin/pip3.8""', '/install/install_pip_packages_by_version.sh ""/usr/local/bin/pip3.9""', '/install/install_latest_clang.sh']"
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.rbe.rocm-ubuntu18.04-manylinux2010-multipython,ENV,7,"['HCC_HOME=$ROCM_PATH/hcc', 'HIP_PATH=$ROCM_PATH/hip', 'OPENCL_ROOT=$ROCM_PATH/opencl', 'PATH=""$ROCM_PATH/bin:${PATH}""', 'PATH=""$HCC_HOME/bin:$HIP_PATH/bin:${PATH}""', 'PATH=""$OPENCL_ROOT/bin:${PATH}""', 'CLANG_VERSION=""r42cab985fd95ba4f3f290e7bb26b93805edb447d""']"
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.custom_op_ubuntu_16,FROM,2,"['ubuntu:16.04 as devtoolset', 'ubuntu:16.04']"
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.custom_op_ubuntu_16,LABEL,2,"['maintainer=""Amit Patankar <amitpatankar@google.com>""', 'maintainer=""Amit Patankar <amitpatankar@google.com>""']"
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.custom_op_ubuntu_16,ENV,3,"['DEBIAN_FRONTEND=noninteractive', 'GOROOT=/usr/local/go', 'PATH=$GOROOT/bin:$PATH']"
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.custom_op_ubuntu_16,RUN,16,"['apt-get update && apt-get install -y       bzip2       cpio       file       flex       g++       make       patch       rpm2cpio       unar       wget       tar       xz-utils       &&     rm -rf /var/lib/apt/lists/*', '/build_devtoolset.sh devtoolset-7 /dt7', '/build_devtoolset.sh devtoolset-8 /dt8', '/install/install_bootstrap_deb_packages.sh', '/install/install_deb_packages.sh', '/install/install_clang.sh', '/install/install_bazel.sh', '/install/install_buildifier.sh', '/install/install_golang.sh', 'add-apt-repository ppa:deadsnakes/ppa &&     apt-get update && apt-get install -y     python3.6 python3.6-dev python3-pip python3.6-venv &&     rm -rf /var/lib/apt/lists/* &&     python3.6 -m pip install pip --upgrade &&     update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.6 0', '/install/install_python37.sh', 'wget https://bootstrap.pypa.io/get-pip.py && python3.6 get-pip.py && rm get-pip.py', '/install/install_pip_packages.sh', '/install/install_auditwheel.sh', 'update-alternatives --install /usr/bin/python python /usr/bin/python3.6 0', 'pip3 install ${TF_PACKAGE}-cpu${TF_PACKAGE_VERSION:+==${TF_PACKAGE_VERSION}}']"
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.custom_op_ubuntu_16,ADD,3,"['devtoolset/fixlinks.sh fixlinks.sh', 'devtoolset/build_devtoolset.sh build_devtoolset.sh', 'devtoolset/rpm-patch.sh rpm-patch.sh']"
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.custom_op_ubuntu_16,COPY,3,"['--from=devtoolset /dt7 /dt7', '--from=devtoolset /dt8 /dt8', 'install/*.sh /install/']"
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.custom_op_ubuntu_16,ARG,3,"['DEBIAN_FRONTEND=noninteractive', 'TF_PACKAGE=tensorflow', 'TF_PACKAGE_VERSION=']"
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.custom_op_ubuntu_16_cuda10.0,FROM,2,"['nvidia/cuda:10.0-cudnn7-devel-ubuntu16.04 as devtoolset', 'nvidia/cuda:10.0-cudnn7-devel-ubuntu16.04']"
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.custom_op_ubuntu_16_cuda10.0,LABEL,2,"['maintainer=""Amit Patankar <amitpatankar@google.com>""', 'maintainer=""Amit Patankar <amitpatankar@google.com>""']"
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.custom_op_ubuntu_16_cuda10.0,ENV,2,"['DEBIAN_FRONTEND=noninteractive', 'TF_NEED_CUDA=1']"
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.custom_op_ubuntu_16_cuda10.0,RUN,16,"['apt-get update && apt-get install -y       cpio       file       flex       g++       make       rpm2cpio       unar       wget       &&     rm -rf /var/lib/apt/lists/*', '/build_devtoolset.sh devtoolset-7 /dt7', '/build_devtoolset.sh devtoolset-8 /dt8', 'apt-get update && apt-get install -y     libnvinfer-dev=5.1.5-1+cuda10.0     libnvinfer5=5.1.5-1+cuda10.0       &&     rm -rf /var/lib/apt/lists/*', '/install/install_bootstrap_deb_packages.sh', '/install/install_deb_packages.sh', '/install/install_clang.sh', '/install/install_bazel.sh', '/install/install_buildifier.sh', 'add-apt-repository ppa:deadsnakes/ppa &&     apt-get update && apt-get install -y     python3.6 python3.6-dev python3-pip python3.6-venv &&     rm -rf /var/lib/apt/lists/* &&     python3.6 -m pip install pip --upgrade &&     update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.6 0', '/install/install_python37.sh', 'wget https://bootstrap.pypa.io/get-pip.py && python3.6 get-pip.py && rm get-pip.py', '/install/install_pip_packages.sh', '/install/install_auditwheel.sh', 'update-alternatives --install /usr/bin/python python /usr/bin/python3.6 0', 'pip3 install ${TF_PACKAGE}${TF_PACKAGE_VERSION:+==${TF_PACKAGE_VERSION}}']"
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.custom_op_ubuntu_16_cuda10.0,ADD,3,"['devtoolset/fixlinks.sh fixlinks.sh', 'devtoolset/build_devtoolset.sh build_devtoolset.sh', 'devtoolset/rpm-patch.sh rpm-patch.sh']"
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.custom_op_ubuntu_16_cuda10.0,COPY,3,"['--from=devtoolset /dt7 /dt7', '--from=devtoolset /dt8 /dt8', 'install/*.sh /install/']"
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.custom_op_ubuntu_16_cuda10.0,ARG,3,"['DEBIAN_FRONTEND=noninteractive', 'TF_PACKAGE=tensorflow', 'TF_PACKAGE_VERSION=']"
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.rbe.cuda10.1-cudnn7-ubuntu16.04-manylinux2010,FROM,2,"['nvidia/cuda:10.1-cudnn7-devel-ubuntu16.04 as devtoolset', 'nvidia/cuda:10.1-cudnn7-devel-ubuntu16.04']"
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.rbe.cuda10.1-cudnn7-ubuntu16.04-manylinux2010,ENV,2,"['DEBIAN_FRONTEND=noninteractive', 'CLANG_VERSION=""r42cab985fd95ba4f3f290e7bb26b93805edb447d""']"
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.rbe.cuda10.1-cudnn7-ubuntu16.04-manylinux2010,RUN,22,"['apt-get update && apt-get install -y       cpio       file       flex       g++       make       rpm2cpio       unar       wget       &&     rm -rf /var/lib/apt/lists/*', '/build_devtoolset.sh devtoolset-7 /dt7', '/build_devtoolset.sh devtoolset-8 /dt8', 'apt-get update && apt-get install -y     libnvinfer-dev=6.0.1-1+cuda10.1     libnvinfer6=6.0.1-1+cuda10.1     libnvinfer-plugin-dev=6.0.1-1+cuda10.1     libnvinfer-plugin6=6.0.1-1+cuda10.1       &&     rm -rf /var/lib/apt/lists/*', '/install/install_bootstrap_deb_packages.sh', '/install/install_deb_packages.sh', '/install/install_latest_clang.sh', '/install/install_bazel.sh', 'apt-get install --reinstall python3-apt', 'yes """" | add-apt-repository ppa:deadsnakes/ppa', 'apt-get update && apt-get install -y     python3.6 python3.6-dev python3-pip python3.6-venv &&     rm -rf /var/lib/apt/lists/* &&     python3.6 -m pip install pip --upgrade &&     update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.6 0', '/install/install_pip_packages.sh', 'apt-get update && apt-get install -y python3.8 python3.8-dev python3.8-venv', 'rm -rf /var/lib/apt/lists/*', 'curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py', 'python3.8 get-pip.py', 'python3.8 -m pip install --upgrade pip setuptools wheel', 'ln -sf ""/usr/include/x86_64-linux-gnu/python3.6m"" ""/dt7/usr/include/x86_64-linux-gnu/python3.6m""', 'ln -sf ""/usr/include/x86_64-linux-gnu/python3.6m"" ""/dt8/usr/include/x86_64-linux-gnu/python3.6m""', 'ln -sf ""/usr/include/x86_64-linux-gnu/python3.8"" ""/dt7/usr/include/x86_64-linux-gnu/python3.8""', 'ln -sf ""/usr/include/x86_64-linux-gnu/python3.8"" ""/dt8/usr/include/x86_64-linux-gnu/python3.8""', 'cp /usr/lib/python3/dist-packages/apt_pkg.cpython-35m-x86_64-linux-gnu.so        /usr/lib/python3/dist-packages/apt_pkg.so']"
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.rbe.cuda10.1-cudnn7-ubuntu16.04-manylinux2010,ADD,3,"['devtoolset/fixlinks.sh fixlinks.sh', 'devtoolset/build_devtoolset.sh build_devtoolset.sh', 'devtoolset/rpm-patch.sh rpm-patch.sh']"
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.rbe.cuda10.1-cudnn7-ubuntu16.04-manylinux2010,COPY,3,"['--from=devtoolset /dt7 /dt7', '--from=devtoolset /dt8 /dt8', 'install/*.sh /install/']"
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.rbe.cuda10.1-cudnn7-ubuntu16.04-manylinux2010,ARG,1,['DEBIAN_FRONTEND=noninteractive']
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.rbe.cuda11.4-cudnn8.0.5-ubuntu18.04-manylinux2010-multipython,FROM,1,['gcr.io/tensorflow-testing/nosla-cuda11.4-cudnn8.2-ubuntu18.04-manylinux2010-multipython']
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.rbe.cuda11.4-cudnn8.0.5-ubuntu18.04-manylinux2010-multipython,RUN,6,"['apt-get update', 'apt-get remove -y --allow-change-held-packages libcudnn8 libnccl2 libnccl-dev', 'apt-get install -y --no-install-recommends --allow-downgrades --allow-change-held-packages       libcublas-11-4       libcublas-dev-11-4       cuda-nvml-dev-11.4       cuda-command-line-tools-11.4       cuda-libraries-dev-11.4       cuda-minimal-build-11.4       libcudnn8=8.0.5.39-1+cuda11.1       libcudnn8-dev=8.0.5.39-1+cuda11.1', 'rm -f /usr/local/cuda', 'ln -s /usr/local/cuda-11.4 /usr/local/cuda', 'apt-get update &&     apt-get install -y         libnvinfer-dev=8.0.1-1+cuda11.3         libnvinfer8=8.0.1-1+cuda11.3         libnvinfer-plugin-dev=8.0.1-1+cuda11.3         libnvinfer-plugin8=8.0.1-1+cuda11.3 &&     rm -rf /var/lib/apt/lists/*']"
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.rbe.cuda11.2-cudnn8.1-ubuntu18.04-manylinux2010-multipython,FROM,2,"['nvidia/cuda:11.2.1-cudnn8-devel-ubuntu18.04 as devtoolset', 'nvidia/cuda:11.2.1-cudnn8-devel-ubuntu18.04']"
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.rbe.cuda11.2-cudnn8.1-ubuntu18.04-manylinux2010-multipython,ENV,3,"['DEBIAN_FRONTEND=noninteractive', 'CLANG_VERSION=""r7f6f9f4cf966c78a315d15d6e913c43cfa45c47c""', 'LD_LIBRARY_PATH=""${LD_LIBRARY_PATH}:/usr/local/cuda-11.1/lib64""']"
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.rbe.cuda11.2-cudnn8.1-ubuntu18.04-manylinux2010-multipython,RUN,18,"['apt-get update && apt-get install -y       cpio       file       flex       g++       make       patch       rpm2cpio       unar       wget       xz-utils       &&     rm -rf /var/lib/apt/lists/*', '/build_devtoolset.sh devtoolset-7 /dt7', '/build_devtoolset.sh devtoolset-8 /dt8', 'echo     deb https://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1604/x86_64 /     > /etc/apt/sources.list.d/nvidia-ml.list       &&     apt-get update && apt-get install -y     libnvinfer-dev=7.2.2-1+cuda11.1     libnvinfer7=7.2.2-1+cuda11.1     libnvinfer-plugin-dev=7.2.2-1+cuda11.1     libnvinfer-plugin7=7.2.2-1+cuda11.1       &&     rm -rf /var/lib/apt/lists/*', '/install/install_bootstrap_deb_packages.sh', '/install/install_deb_packages.sh', 'apt-get update && apt-get install -y     libbz2-dev     libffi-dev     libgdbm-dev     libncurses5-dev     libnss3-dev     libreadline-dev     libsqlite3-dev     patchelf       &&     rm -rf /var/lib/apt/lists/*', '/install/install_bazel.sh', '/install/build_and_install_python.sh ""3.7.7""', '/install/build_and_install_python.sh ""3.8.2""', '/install/build_and_install_python.sh ""3.9.4""', '/install/build_and_install_python.sh ""3.10.0""', '/install/install_pip_packages_by_version.sh ""/usr/local/bin/pip3.7""', '/install/install_pip_packages_by_version.sh ""/usr/local/bin/pip3.8""', '/install/install_pip_packages_by_version.sh ""/usr/local/bin/pip3.9""', '/usr/local/bin/pip3.10 install --upgrade pip', '/usr/local/bin/pip3.10 install --prefer-binary --upgrade numpy auditwheel wheel setuptools virtualenv', '/install/install_latest_clang.sh']"
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.rbe.cuda11.2-cudnn8.1-ubuntu18.04-manylinux2010-multipython,ADD,3,"['devtoolset/fixlinks.sh fixlinks.sh', 'devtoolset/build_devtoolset.sh build_devtoolset.sh', 'devtoolset/rpm-patch.sh rpm-patch.sh']"
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.rbe.cuda11.2-cudnn8.1-ubuntu18.04-manylinux2010-multipython,COPY,8,"['--from=devtoolset /dt7 /dt7', '--from=devtoolset /dt8 /dt8', 'install/install_bootstrap_deb_packages.sh /install/', 'install/install_deb_packages.sh /install/', 'install/install_bazel.sh /install/', 'install/build_and_install_python.sh /install/', 'install/install_pip_packages_by_version.sh /install/', 'install/install_latest_clang.sh /install/']"
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.rbe.cuda11.2-cudnn8.1-ubuntu18.04-manylinux2010-multipython,ARG,1,['DEBIAN_FRONTEND=noninteractive']
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.custom_op_ubuntu_16_cuda10.1,FROM,2,"['nvidia/cuda:10.1-cudnn7-devel-ubuntu16.04 as devtoolset', 'nvidia/cuda:10.1-cudnn7-devel-ubuntu16.04']"
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.custom_op_ubuntu_16_cuda10.1,LABEL,2,"['maintainer=""Amit Patankar <amitpatankar@google.com>""', 'maintainer=""Amit Patankar <amitpatankar@google.com>""']"
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.custom_op_ubuntu_16_cuda10.1,ENV,2,"['DEBIAN_FRONTEND=noninteractive', 'TF_NEED_CUDA=1']"
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.custom_op_ubuntu_16_cuda10.1,RUN,16,"['apt-get update && apt-get install -y       cpio       file       flex       g++       make       rpm2cpio       unar       wget       &&     rm -rf /var/lib/apt/lists/*', '/build_devtoolset.sh devtoolset-7 /dt7', '/build_devtoolset.sh devtoolset-8 /dt8', 'apt-get update && apt-get install -y     libnvinfer-dev=6.0.1-1+cuda10.1     libnvinfer6=6.0.1-1+cuda10.1     libnvinfer-plugin-dev=6.0.1-1+cuda10.1     libnvinfer-plugin6=6.0.1-1+cuda10.1       &&     rm -rf /var/lib/apt/lists/*', '/install/install_bootstrap_deb_packages.sh', '/install/install_deb_packages.sh', '/install/install_clang.sh', '/install/install_bazel.sh', '/install/install_buildifier.sh', 'add-apt-repository ppa:deadsnakes/ppa &&     apt-get update && apt-get install -y     python3.6 python3.6-dev python3-pip python3.6-venv &&     rm -rf /var/lib/apt/lists/* &&     python3.6 -m pip install pip --upgrade &&     update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.6 0', '/install/install_python37.sh', 'wget https://bootstrap.pypa.io/get-pip.py && python3.6 get-pip.py && rm get-pip.py', '/install/install_pip_packages.sh', '/install/install_auditwheel.sh', 'update-alternatives --install /usr/bin/python python /usr/bin/python3.6 0', 'pip3 install ${TF_PACKAGE}${TF_PACKAGE_VERSION:+==${TF_PACKAGE_VERSION}}']"
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.custom_op_ubuntu_16_cuda10.1,ADD,3,"['devtoolset/fixlinks.sh fixlinks.sh', 'devtoolset/build_devtoolset.sh build_devtoolset.sh', 'devtoolset/rpm-patch.sh rpm-patch.sh']"
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.custom_op_ubuntu_16_cuda10.1,COPY,3,"['--from=devtoolset /dt7 /dt7', '--from=devtoolset /dt8 /dt8', 'install/*.sh /install/']"
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.custom_op_ubuntu_16_cuda10.1,ARG,3,"['DEBIAN_FRONTEND=noninteractive', 'TF_PACKAGE=tensorflow', 'TF_PACKAGE_VERSION=']"
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.pi-python38,FROM,1,['ubuntu:16.04']
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.pi-python38,LABEL,1,"['maintainer=""Terry Heo <terryheo@google.com>""']"
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.pi-python38,ENV,3,"['CI_BUILD_PYTHON=python3.8', 'CROSSTOOL_PYTHON_INCLUDE_PATH=/usr/include/python3.8', 'TF_ENABLE_XLA=0']"
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.pi-python38,COPY,2,"['install/*.sh /install/', 'install/.bazelrc /etc/bazel.bazelrc']"
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.pi-python38,RUN,11,"['/install/install_bootstrap_deb_packages.sh', 'add-apt-repository -y ppa:openjdk-r/ppa', '/install/install_deb_packages.sh --without_cmake', '/install/install_cmake.sh', '/install/install_pi_python3x_toolchain.sh ""3.8""', '/install/install_bazel.sh', '/install/install_proto3.sh', '/install/install_buildifier.sh', '/install/install_auditwheel.sh', '/install/install_golang.sh', 'chmod 644 /etc/bazel.bazelrc']"
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.rbe.ubuntu16.04-manylinux2010,FROM,2,"['ubuntu:16.04 as devtoolset', 'ubuntu:16.04']"
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.rbe.ubuntu16.04-manylinux2010,ENV,3,"['DEBIAN_FRONTEND=noninteractive', 'GOROOT=/usr/local/go', 'PATH=$GOROOT/bin:$PATH']"
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.rbe.ubuntu16.04-manylinux2010,RUN,22,"['apt-get update && apt-get install -y       bzip2       cpio       file       flex       g++       make       patch       rpm2cpio       unar       wget       tar       xz-utils       &&     rm -rf /var/lib/apt/lists/*', '/build_devtoolset.sh devtoolset-7 /dt7', '/build_devtoolset.sh devtoolset-8 /dt8', '/install/install_bootstrap_deb_packages.sh', '/install/install_deb_packages.sh', '/install/install_clang.sh', '/install/install_bazel.sh', '/install/install_golang.sh', 'yes """" | add-apt-repository ppa:deadsnakes/ppa', 'apt-get update && apt-get install -y     python3.6 python3.6-dev python3-pip python3.6-venv &&     rm -rf /var/lib/apt/lists/* &&     python3.6 -m pip install pip --upgrade &&     update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.6 0', '/install/install_pip_packages.sh', 'apt-get update && apt-get install -y python3.8 python3.8-dev python3.8-venv', 'rm -rf /var/lib/apt/lists/*', 'curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py', 'python3.8 get-pip.py', 'python3.8 -m pip install --upgrade pip setuptools wheel', 'ln -sf ""/usr/include/x86_64-linux-gnu/python2.7"" ""/dt7/usr/include/x86_64-linux-gnu/python2.7""', 'ln -sf ""/usr/include/x86_64-linux-gnu/python2.7"" ""/dt8/usr/include/x86_64-linux-gnu/python2.7""', 'ln -sf ""/usr/include/x86_64-linux-gnu/python3.6m"" ""/dt7/usr/include/x86_64-linux-gnu/python3.6m""', 'ln -sf ""/usr/include/x86_64-linux-gnu/python3.6m"" ""/dt8/usr/include/x86_64-linux-gnu/python3.6m""', 'ln -sf ""/usr/include/x86_64-linux-gnu/python3.8"" ""/dt7/usr/include/x86_64-linux-gnu/python3.8""', 'ln -sf ""/usr/include/x86_64-linux-gnu/python3.8"" ""/dt8/usr/include/x86_64-linux-gnu/python3.8""']"
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.rbe.ubuntu16.04-manylinux2010,ADD,3,"['devtoolset/fixlinks.sh fixlinks.sh', 'devtoolset/build_devtoolset.sh build_devtoolset.sh', 'devtoolset/rpm-patch.sh rpm-patch.sh']"
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.rbe.ubuntu16.04-manylinux2010,COPY,3,"['--from=devtoolset /dt7 /dt7', '--from=devtoolset /dt8 /dt8', 'install/*.sh /install/']"
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.rbe.ubuntu16.04-manylinux2010,ARG,1,['DEBIAN_FRONTEND=noninteractive']
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.pi-python37,FROM,1,['ubuntu:16.04']
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.pi-python37,LABEL,1,"['maintainer=""Terry Heo <terryheo@google.com>""']"
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.pi-python37,ENV,3,"['CI_BUILD_PYTHON=python3.7', 'CROSSTOOL_PYTHON_INCLUDE_PATH=/usr/include/python3.7', 'TF_ENABLE_XLA=0']"
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.pi-python37,COPY,2,"['install/*.sh /install/', 'install/.bazelrc /etc/bazel.bazelrc']"
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.pi-python37,RUN,11,"['/install/install_bootstrap_deb_packages.sh', 'add-apt-repository -y ppa:openjdk-r/ppa', '/install/install_deb_packages.sh --without_cmake', '/install/install_cmake.sh', '/install/install_pi_python3x_toolchain.sh ""3.7""', '/install/install_bazel.sh', '/install/install_proto3.sh', '/install/install_buildifier.sh', '/install/install_auditwheel.sh', '/install/install_golang.sh', 'chmod 644 /etc/bazel.bazelrc']"
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.rbe.cuda10.1-cudnn7-ubuntu16.04-manylinux2010-multipython,FROM,2,"['nvidia/cuda:10.1-cudnn7-devel-ubuntu16.04 as devtoolset', 'nvidia/cuda:10.1-cudnn7-devel-ubuntu16.04']"
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.rbe.cuda10.1-cudnn7-ubuntu16.04-manylinux2010-multipython,ENV,2,"['DEBIAN_FRONTEND=noninteractive', 'CLANG_VERSION=""r42cab985fd95ba4f3f290e7bb26b93805edb447d""']"
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.rbe.cuda10.1-cudnn7-ubuntu16.04-manylinux2010-multipython,RUN,15,"['apt-get update && apt-get install -y       cpio       file       flex       g++       make       rpm2cpio       unar       wget       &&     rm -rf /var/lib/apt/lists/*', '/build_devtoolset.sh devtoolset-7 /dt7', '/build_devtoolset.sh devtoolset-8 /dt8', 'apt-get update && apt-get install -y     libnvinfer-dev=6.0.1-1+cuda10.1     libnvinfer6=6.0.1-1+cuda10.1     libnvinfer-plugin-dev=6.0.1-1+cuda10.1     libnvinfer-plugin6=6.0.1-1+cuda10.1       &&     rm -rf /var/lib/apt/lists/*', '/install/install_bootstrap_deb_packages.sh', '/install/install_deb_packages.sh', 'apt-get update && apt-get install -y     libbz2-dev     libffi-dev     libgdbm-dev     libncurses5-dev     libnss3-dev     libreadline-dev     patchelf       &&     rm -rf /var/lib/apt/lists/*', '/install/install_bazel.sh', '/install/build_and_install_python.sh ""3.6.9""', '/install/build_and_install_python.sh ""3.7.7""', '/install/build_and_install_python.sh ""3.8.2""', '/install/install_pip_packages_by_version.sh ""/usr/local/bin/pip3.6""', '/install/install_pip_packages_by_version.sh ""/usr/local/bin/pip3.7""', '/install/install_pip_packages_by_version.sh ""/usr/local/bin/pip3.8""', '/install/install_latest_clang.sh']"
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.rbe.cuda10.1-cudnn7-ubuntu16.04-manylinux2010-multipython,ADD,3,"['devtoolset/fixlinks.sh fixlinks.sh', 'devtoolset/build_devtoolset.sh build_devtoolset.sh', 'devtoolset/rpm-patch.sh rpm-patch.sh']"
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.rbe.cuda10.1-cudnn7-ubuntu16.04-manylinux2010-multipython,COPY,8,"['--from=devtoolset /dt7 /dt7', '--from=devtoolset /dt8 /dt8', 'install/install_bootstrap_deb_packages.sh /install/', 'install/install_deb_packages.sh /install/', 'install/install_bazel.sh /install/', 'install/build_and_install_python.sh /install/', 'install/install_pip_packages_by_version.sh /install/', 'install/install_latest_clang.sh /install/']"
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.rbe.cuda10.1-cudnn7-ubuntu16.04-manylinux2010-multipython,ARG,1,['DEBIAN_FRONTEND=noninteractive']
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.pi-python39,FROM,1,['ubuntu:16.04']
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.pi-python39,LABEL,1,"['maintainer=""Katsuya Hyodo <rmsdh122@yahoo.co.jp>""']"
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.pi-python39,ENV,3,"['CI_BUILD_PYTHON=python3.9', 'CROSSTOOL_PYTHON_INCLUDE_PATH=/usr/include/python3.9', 'TF_ENABLE_XLA=0']"
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.pi-python39,COPY,2,"['install/*.sh /install/', 'install/.bazelrc /etc/bazel.bazelrc']"
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.pi-python39,RUN,11,"['/install/install_bootstrap_deb_packages.sh', 'add-apt-repository -y ppa:openjdk-r/ppa', '/install/install_deb_packages.sh --without_cmake', '/install/install_cmake.sh', '/install/install_pi_python3x_toolchain.sh ""3.9""', '/install/install_bazel.sh', '/install/install_proto3.sh', '/install/install_buildifier.sh', '/install/install_auditwheel.sh', '/install/install_golang.sh', 'chmod 644 /etc/bazel.bazelrc']"
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.rbe.cuda10.1-cudnn7-ubuntu18.04-manylinux2010-multipython,FROM,2,"['nvidia/cuda:10.1-cudnn7-devel-ubuntu18.04 as devtoolset', 'nvidia/cuda:10.1-cudnn7-devel-ubuntu18.04']"
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.rbe.cuda10.1-cudnn7-ubuntu18.04-manylinux2010-multipython,ENV,2,"['DEBIAN_FRONTEND=noninteractive', 'CLANG_VERSION=""r42cab985fd95ba4f3f290e7bb26b93805edb447d""']"
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.rbe.cuda10.1-cudnn7-ubuntu18.04-manylinux2010-multipython,RUN,16,"['apt-get update && apt-get install -y       cpio       file       flex       g++       make       rpm2cpio       unar       wget       &&     rm -rf /var/lib/apt/lists/*', '/build_devtoolset.sh devtoolset-7 /dt7', '/build_devtoolset.sh devtoolset-8 /dt8', 'apt-get update && apt-get install -y     libnvinfer-dev=6.0.1-1+cuda10.1     libnvinfer6=6.0.1-1+cuda10.1     libnvinfer-plugin-dev=6.0.1-1+cuda10.1     libnvinfer-plugin6=6.0.1-1+cuda10.1       &&     rm -rf /var/lib/apt/lists/*', '/install/install_bootstrap_deb_packages.sh', '/install/install_deb_packages.sh', 'apt-get update && apt-get install -y     libbz2-dev     libffi-dev     libgdbm-dev     libncurses5-dev     libnss3-dev     libreadline-dev     patchelf       &&     rm -rf /var/lib/apt/lists/*', '/install/install_bazel.sh', '/install/build_and_install_python.sh ""3.5.9""', '/install/build_and_install_python.sh ""3.6.9""', '/install/build_and_install_python.sh ""3.7.7""', '/install/build_and_install_python.sh ""3.8.2""', '/install/install_pip_packages_by_version.sh ""/usr/local/bin/pip3.6""', '/install/install_pip_packages_by_version.sh ""/usr/local/bin/pip3.7""', '/install/install_pip_packages_by_version.sh ""/usr/local/bin/pip3.8""', '/install/install_latest_clang.sh']"
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.rbe.cuda10.1-cudnn7-ubuntu18.04-manylinux2010-multipython,ADD,3,"['devtoolset/fixlinks.sh fixlinks.sh', 'devtoolset/build_devtoolset.sh build_devtoolset.sh', 'devtoolset/rpm-patch.sh rpm-patch.sh']"
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.rbe.cuda10.1-cudnn7-ubuntu18.04-manylinux2010-multipython,COPY,8,"['--from=devtoolset /dt7 /dt7', '--from=devtoolset /dt8 /dt8', 'install/install_bootstrap_deb_packages.sh /install/', 'install/install_deb_packages.sh /install/', 'install/install_bazel.sh /install/', 'install/build_and_install_python.sh /install/', 'install/install_pip_packages_by_version.sh /install/', 'install/install_latest_clang.sh /install/']"
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.rbe.cuda10.1-cudnn7-ubuntu18.04-manylinux2010-multipython,ARG,1,['DEBIAN_FRONTEND=noninteractive']
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.rocm,FROM,1,['ubuntu:bionic']
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.rocm,MAINTAINER,1,['Jeff Poznanovic <jeffrey.poznanovic@amd.com>']
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.rocm,ARG,5,"['ROCM_DEB_REPO=https://repo.radeon.com/rocm/apt/4.5.2/', 'ROCM_BUILD_NAME=ubuntu', 'ROCM_BUILD_NUM=main', 'ROCM_PATH=/opt/rocm-4.5.2', 'DEBIAN_FRONTEND=noninteractive']"
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.rocm,ENV,11,"['DEBIAN_FRONTEND noninteractive', 'TF_NEED_ROCM 1', 'HOME /root/', 'HCC_HOME=$ROCM_PATH/hcc', 'HIP_PATH=$ROCM_PATH/hip', 'OPENCL_ROOT=$ROCM_PATH/opencl', 'PATH=""$HCC_HOME/bin:$HIP_PATH/bin:${PATH}""', 'PATH=""$ROCM_PATH/bin:${PATH}""', 'PATH=""$OPENCL_ROOT/bin:${PATH}""', 'TF_NEED_ROCM 1', 'HIP_HIDDEN_FREE_MEM=320']"
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.rocm,RUN,12,"['apt-get --allow-unauthenticated update && apt install -y wget software-properties-common', 'apt-get clean all', 'bin/bash -c \'if [[ $ROCM_DEB_REPO == https://repo.radeon.com/rocm/*  ]] ; then       wget -qO -  https://repo.radeon.com/rocm/rocm.gpg.key | apt-key add -;       echo ""deb [arch=amd64] $ROCM_DEB_REPO $ROCM_BUILD_NAME $ROCM_BUILD_NUM"" > /etc/apt/sources.list.d/rocm.list;     else       echo ""deb [arch=amd64 trusted=yes] $ROCM_DEB_REPO $ROCM_BUILD_NAME $ROCM_BUILD_NUM"" > /etc/apt/sources.list.d/rocm.list ;     fi\'', 'apt-get update --allow-insecure-repositories && DEBIAN_FRONTEND=noninteractive apt-get install -y   build-essential   bsdmainutils   clang-6.0   clang-format-6.0   clang-tidy-6.0   cmake   cmake-qt-gui   ssh   curl   apt-utils   pkg-config   g++-multilib   git   kmod   libunwind-dev   libfftw3-dev   libelf-dev   libncurses5-dev   libpthread-stubs0-dev   vim   gfortran   libboost-program-options-dev   libssl-dev   libboost-dev   libboost-system-dev   libboost-filesystem-dev   rpm   libnuma-dev   pciutils   virtualenv   python-pip   python3-pip   libxml2   libxml2-dev   wget &&   apt-get clean &&   rm -rf /var/lib/apt/lists/*', 'apt-get update --allow-insecure-repositories &&     DEBIAN_FRONTEND=noninteractive apt-get install -y --allow-unauthenticated     rocm-dev rocm-libs rccl &&     apt-get clean &&     rm -rf /var/lib/apt/lists/*', 'bash -c \'echo -e ""gfx900\\ngfx906\\ngfx908"" >> ${ROCM_PATH}/bin/target.lst\'', 'touch ${ROCM_PATH}/.info/version', '/install/install_bootstrap_deb_packages.sh', '/install/install_deb_packages.sh', '/install/install_pip_packages.sh', '/install/install_bazel.sh', '/install/install_golang.sh']"
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.rocm,COPY,2,"['install/*.sh /install/', 'install/.bazelrc /etc/bazel.bazelrc']"
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.cpu.ppc64le,FROM,1,['ubuntu:16.04']
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.cpu.ppc64le,LABEL,1,"['maintainer=""William Irons <wdirons@us.ibm.com>""']"
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.cpu.ppc64le,COPY,2,"['install/*.sh /install/', 'install/.bazelrc /etc/bazel.bazelrc']"
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.cpu.ppc64le,RUN,11,"['/install/install_bootstrap_deb_packages.sh', 'add-apt-repository -y ppa:openjdk-r/ppa', '/install/install_deb_packages.sh', '/install/install_openblas_ppc64le.sh', '/install/install_hdf5_ppc64le.sh', '/install/install_pip_packages.sh', '/install/install_bazel_from_source.sh', '/install/install_proto3.sh', '/install/install_buildifier_from_source.sh', '/install/install_auditwheel.sh', '/install/install_golang_ppc64le.sh']"
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.android,FROM,1,['ubuntu:16.04']
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.android,LABEL,1,"['maintainer=""Jan Prach <jendap@google.com>""']"
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.android,COPY,2,"['install/*.sh /install/', 'install/.bazelrc /etc/bazel.bazelrc']"
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.android,RUN,9,"['/install/install_bootstrap_deb_packages.sh', 'add-apt-repository -y ppa:openjdk-r/ppa &&     add-apt-repository -y ppa:george-edison55/cmake-3.x', '/install/install_deb_packages.sh', '/install/install_bazel.sh', 'apt-get update && apt-get install -y         python-numpy         &&     apt-get clean &&     rm -rf /var/lib/apt/lists/*', 'mkdir -p ${ANDROID_DEV_HOME}', 'cd ${ANDROID_DEV_HOME} &&     wget -q ${ANDROID_SDK_URL} &&     unzip ${ANDROID_SDK_FILENAME} -d android-sdk-linux &&     rm ${ANDROID_SDK_FILENAME} &&     bash -c ""ln -s ${ANDROID_DEV_HOME}/android-sdk-* ${ANDROID_SDK_HOME}"" &&     echo y | android update sdk --no-ui -a --filter tools,platform-tools,android-${ANDROID_API_LEVEL},build-tools-${ANDROID_BUILD_TOOLS_VERSION}', 'cd ${ANDROID_DEV_HOME} &&     wget -q ${ANDROID_NDK_URL} &&     unzip ${ANDROID_NDK_FILENAME} -d ${ANDROID_DEV_HOME} &&     rm ${ANDROID_NDK_FILENAME} &&     bash -c ""ln -s ${ANDROID_DEV_HOME}/android-ndk-* ${ANDROID_NDK_HOME}""', 'chmod -R go=u ${ANDROID_DEV_HOME}']"
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.android,ENV,12,"['ANDROID_DEV_HOME /android', 'ANDROID_SDK_FILENAME tools_r25.2.5-linux.zip', 'ANDROID_SDK_URL https://dl.google.com/android/repository/${ANDROID_SDK_FILENAME}', 'ANDROID_API_LEVEL 23', 'ANDROID_NDK_API_LEVEL 21', 'ANDROID_BUILD_TOOLS_VERSION 28.0.0', 'ANDROID_SDK_HOME ${ANDROID_DEV_HOME}/sdk', 'PATH ${PATH}:${ANDROID_SDK_HOME}/tools:${ANDROID_SDK_HOME}/platform-tools', 'ANDROID_NDK_FILENAME android-ndk-r18b-linux-x86_64.zip', 'ANDROID_NDK_URL https://dl.google.com/android/repository/${ANDROID_NDK_FILENAME}', 'ANDROID_NDK_HOME ${ANDROID_DEV_HOME}/ndk', 'PATH ${PATH}:${ANDROID_NDK_HOME}']"
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.rbe.cuda9.0-cudnn7-ubuntu14.04,FROM,1,['gcr.io/clang-docker-builder/clang-ubuntu14_04']
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.rbe.cuda9.0-cudnn7-ubuntu14.04,LABEL,4,"['maintainer=""Manuel Klimek <klimek@google.com>""', 'com.nvidia.volumes.needed=""nvidia_driver""', 'com.nvidia.cuda.version=""${CUDA_VERSION}""', 'com.nvidia.cudnn.version=""${CUDNN_VERSION}""']"
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.rbe.cuda9.0-cudnn7-ubuntu14.04,RUN,10,"['apt-get update && apt-get install -y --no-install-recommends ca-certificates apt-transport-https gnupg-curl &&     rm -rf /var/lib/apt/lists/* &&     NVIDIA_GPGKEY_SUM=d1be581509378368edeec8c1eb2958702feedf3bc3d17011adbf24efacce4ab5 &&     NVIDIA_GPGKEY_FPR=ae09fe4bbd223a84b2ccfce3f60f4b3d7fa2af80 &&     apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1404/x86_64/7fa2af80.pub &&     apt-key adv --export --no-emit-version -a $NVIDIA_GPGKEY_FPR | tail -n +2 > cudasign.pub &&     echo ""$NVIDIA_GPGKEY_SUM  cudasign.pub"" | sha256sum -c --strict - && rm cudasign.pub &&     echo ""deb https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1604/x86_64 /"" > /etc/apt/sources.list.d/cuda.list &&     echo ""deb https://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1604/x86_64 /"" > /etc/apt/sources.list.d/nvidia-ml.list', 'apt-get update && apt-get install -y --no-install-recommends         cuda-cudart-$CUDA_PKG_VERSION         cuda-libraries-$CUDA_PKG_VERSION         cuda-cublas-9-0=9.0.176.4-1         cuda-libraries-dev-$CUDA_PKG_VERSION         cuda-nvml-dev-$CUDA_PKG_VERSION         cuda-minimal-build-$CUDA_PKG_VERSION         cuda-command-line-tools-$CUDA_PKG_VERSION         cuda-core-9-0=9.0.176.3-1         cuda-cublas-dev-9-0=9.0.176.4-1         libcudnn7-dev=$CUDNN_VERSION-1+cuda9.0         libcudnn7=$CUDNN_VERSION-1+cuda9.0         nvinfer-runtime-trt-repo-ubuntu1604-$TENSORRT_VERSION-ga-cuda9.0 &&     apt-get update && apt-get install -y --no-install-recommends         libnvinfer5=$TENSORRT_VERSION-1+cuda9.0         libnvinfer-dev=$TENSORRT_VERSION-1+cuda9.0 &&     ln -s cuda-9.0 /usr/local/cuda &&     apt-mark hold libcudnn7 libcudnn7-dev &&     rm -rf /var/lib/apt/lists/*', 'echo ""/usr/local/nvidia/lib"" >> /etc/ld.so.conf.d/nvidia.conf &&     echo ""/usr/local/nvidia/lib64"" >> /etc/ld.so.conf.d/nvidia.conf', 'ln -s libcuda.so /usr/local/cuda/lib64/stubs/libcuda.so.1', 'apt-get update &&     apt-get install -y software-properties-common &&     add-apt-repository ppa:ubuntu-toolchain-r/test -y &&     apt-get update &&     apt-get install -y libstdc++-7-dev &&     rm -rf /var/lib/apt/lists/*', '/install/install_bootstrap_deb_packages.sh', 'add-apt-repository -y ppa:openjdk-r/ppa &&     add-apt-repository -y ppa:george-edison55/cmake-3.x', '/install/install_deb_packages.sh', '/install/install_pip_packages.sh', '/install/install_golang.sh']"
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.rbe.cuda9.0-cudnn7-ubuntu14.04,ENV,9,"['CUDA_VERSION 9.0.176', 'CUDA_PKG_VERSION 9-0=$CUDA_VERSION-1', 'PATH /usr/local/nvidia/bin:/usr/local/cuda/bin:${PATH}', 'NVIDIA_VISIBLE_DEVICES all', 'NVIDIA_DRIVER_CAPABILITIES compute,utility', 'NVIDIA_REQUIRE_CUDA ""cuda>=9.0""', 'TENSORRT_VERSION 5.0.2', 'CUDNN_VERSION 7.1.4.18', 'LD_LIBRARY_PATH /usr/local/nvidia/lib:/usr/local/nvidia/lib64:/usr/local/cuda/lib64/stubs']"
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.rbe.cuda9.0-cudnn7-ubuntu14.04,COPY,1,['install/*.sh /install/']
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.rbe.cuda9.0-cudnn7-ubuntu14.04,ARG,1,['DEBIAN_FRONTEND=noninteractive']
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.rbe.cpu,FROM,1,['launcher.gcr.io/google/rbe-ubuntu16-04:r327695']
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.rbe.cpu,LABEL,1,"['maintainer=""Yu Yi <yiyu@google.com>""']"
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.rbe.cpu,COPY,1,['install/*.sh /install/']
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.rbe.cpu,ENV,3,"['CC /usr/local/bin/clang', 'CXX /usr/local/bin/clang++', 'AR /usr/bin/ar']"
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.rbe.cpu,RUN,2,"['/install/install_pip_packages_remote.sh', '/install/install_pip_packages.sh']"
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.rbe.cuda11.4-cudnn8.2-ubuntu18.04-manylinux2010-multipython,FROM,2,"['nvidia/cuda:11.4.1-cudnn8-devel-ubuntu18.04 as devtoolset', 'nvidia/cuda:11.4.1-cudnn8-devel-ubuntu18.04']"
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.rbe.cuda11.4-cudnn8.2-ubuntu18.04-manylinux2010-multipython,ENV,2,"['DEBIAN_FRONTEND=noninteractive', 'CLANG_VERSION=""r7f6f9f4cf966c78a315d15d6e913c43cfa45c47c""']"
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.rbe.cuda11.4-cudnn8.2-ubuntu18.04-manylinux2010-multipython,RUN,18,"['apt-get update && apt-get install -y       cpio       file       flex       g++       make       patch       rpm2cpio       unar       wget       xz-utils       &&     rm -rf /var/lib/apt/lists/*', '/build_devtoolset.sh devtoolset-7 /dt7', '/build_devtoolset.sh devtoolset-8 /dt8', 'apt-get update &&     apt-get install -y         libnvinfer-dev=8.0.1-1+cuda11.3         libnvinfer8=8.0.1-1+cuda11.3         libnvinfer-plugin-dev=8.0.1-1+cuda11.3         libnvinfer-plugin8=8.0.1-1+cuda11.3 &&     rm -rf /var/lib/apt/lists/*', '/install/install_bootstrap_deb_packages.sh', '/install/install_deb_packages.sh', 'apt-get update && apt-get install -y     libbz2-dev     libffi-dev     libgdbm-dev     libncurses5-dev     libnss3-dev     libreadline-dev     libsqlite3-dev     patchelf       &&     rm -rf /var/lib/apt/lists/*', '/install/install_bazel.sh', '/install/build_and_install_python.sh ""3.7.7""', '/install/build_and_install_python.sh ""3.8.2""', '/install/build_and_install_python.sh ""3.9.4""', '/install/build_and_install_python.sh ""3.10.0""', '/install/install_pip_packages_by_version.sh ""/usr/local/bin/pip3.7""', '/install/install_pip_packages_by_version.sh ""/usr/local/bin/pip3.8""', '/install/install_pip_packages_by_version.sh ""/usr/local/bin/pip3.9""', '/usr/local/bin/pip3.10 install --upgrade pip', '/usr/local/bin/pip3.10 install --prefer-binary --upgrade numpy auditwheel wheel setuptools virtualenv', '/install/install_latest_clang.sh']"
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.rbe.cuda11.4-cudnn8.2-ubuntu18.04-manylinux2010-multipython,ADD,3,"['devtoolset/fixlinks.sh fixlinks.sh', 'devtoolset/build_devtoolset.sh build_devtoolset.sh', 'devtoolset/rpm-patch.sh rpm-patch.sh']"
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.rbe.cuda11.4-cudnn8.2-ubuntu18.04-manylinux2010-multipython,COPY,8,"['--from=devtoolset /dt7 /dt7', '--from=devtoolset /dt8 /dt8', 'install/install_bootstrap_deb_packages.sh /install/', 'install/install_deb_packages.sh /install/', 'install/install_bazel.sh /install/', 'install/build_and_install_python.sh /install/', 'install/install_pip_packages_by_version.sh /install/', 'install/install_latest_clang.sh /install/']"
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.rbe.cuda11.4-cudnn8.2-ubuntu18.04-manylinux2010-multipython,ARG,1,['DEBIAN_FRONTEND=noninteractive']
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.rbe.cuda10.0-cudnn7-ubuntu16.04-manylinux2010,FROM,2,"['nvidia/cuda:10.0-cudnn7-devel-ubuntu16.04 as devtoolset', 'nvidia/cuda:10.0-cudnn7-devel-ubuntu16.04']"
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.rbe.cuda10.0-cudnn7-ubuntu16.04-manylinux2010,ENV,2,"['DEBIAN_FRONTEND=noninteractive', 'CLANG_VERSION=""r373795""']"
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.rbe.cuda10.0-cudnn7-ubuntu16.04-manylinux2010,RUN,21,"['apt-get update && apt-get install -y       cpio       file       flex       g++       make       rpm2cpio       unar       wget       &&     rm -rf /var/lib/apt/lists/*', '/build_devtoolset.sh devtoolset-7 /dt7', '/build_devtoolset.sh devtoolset-8 /dt8', 'apt-get update && apt-get install -y     libnvinfer-dev=5.1.5-1+cuda10.0     libnvinfer5=5.1.5-1+cuda10.0       &&     rm -rf /var/lib/apt/lists/*', '/install/install_bootstrap_deb_packages.sh', '/install/install_deb_packages.sh', '/install/install_latest_clang.sh', '/install/install_bazel.sh', 'yes """" | add-apt-repository ppa:deadsnakes/ppa', 'apt-get update && apt-get install -y     python3.6 python3.6-dev python3-pip python3.6-venv &&     rm -rf /var/lib/apt/lists/* &&     python3.6 -m pip install pip --upgrade &&     update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.6 0', '/install/install_pip_packages.sh', 'apt-get update && apt-get install -y python3.8 python3.8-dev python3.8-venv', 'rm -rf /var/lib/apt/lists/*', 'curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py', 'python3.8 get-pip.py', 'python3.8 -m pip install --upgrade pip setuptools wheel', 'ln -s ""/usr/include/x86_64-linux-gnu/python3.6m"" ""/dt7/usr/include/x86_64-linux-gnu/python3.6m""', 'ln -s ""/usr/include/x86_64-linux-gnu/python3.6m"" ""/dt8/usr/include/x86_64-linux-gnu/python3.6m""', 'ln -s ""/usr/include/x86_64-linux-gnu/python3.8"" ""/dt7/usr/include/x86_64-linux-gnu/python3.8""', 'ln -s ""/usr/include/x86_64-linux-gnu/python3.8"" ""/dt8/usr/include/x86_64-linux-gnu/python3.8""', 'cp /usr/lib/python3/dist-packages/apt_pkg.cpython-35m-x86_64-linux-gnu.so        /usr/lib/python3/dist-packages/apt_pkg.so']"
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.rbe.cuda10.0-cudnn7-ubuntu16.04-manylinux2010,ADD,3,"['devtoolset/fixlinks.sh fixlinks.sh', 'devtoolset/build_devtoolset.sh build_devtoolset.sh', 'devtoolset/rpm-patch.sh rpm-patch.sh']"
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.rbe.cuda10.0-cudnn7-ubuntu16.04-manylinux2010,COPY,3,"['--from=devtoolset /dt7 /dt7', '--from=devtoolset /dt8 /dt8', 'install/*.sh /install/']"
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.rbe.cuda10.0-cudnn7-ubuntu16.04-manylinux2010,ARG,1,['DEBIAN_FRONTEND=noninteractive']
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.rbe.gpu,FROM,1,['nvidia/cuda:10.0-cudnn7-devel-ubuntu16.04']
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.rbe.gpu,LABEL,1,"['maintainer=""Nick Lopez <ngiraldo@google.com>""']"
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.rbe.gpu,RUN,8,"['cp -P /usr/include/cudnn.h /usr/local/cuda/include', 'cp -P /usr/lib/x86_64-linux-gnu/libcudnn* /usr/local/cuda/lib64', '/install/install_bootstrap_deb_packages.sh', 'add-apt-repository -y ppa:openjdk-r/ppa &&     add-apt-repository -y ppa:george-edison55/cmake-3.x', '/install/install_deb_packages.sh', '/install/install_pip_packages.sh', '/install/install_golang.sh', 'cd /tmp &&     wget https://storage.googleapis.com/clang-builds-stable/clang-ubuntu16_04/clang_r337145.tar.gz &&     echo ""ab98c63eb09c04112cc992bc95ebc0dcea8c5e9d0760438789be2896cdc69ff8  clang_r337145.tar.gz"" | sha256sum -c &&     tar -C /usr/local -xf clang_r323528.tar.gz &&     rm clang_r337145.tar.gz']"
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.rbe.gpu,COPY,1,['install/*.sh /install/']
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.rbe.gpu,ARG,1,['DEBIAN_FRONTEND=noninteractive']
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.rbe.cuda10.0-cudnn7-ubuntu14.04,FROM,1,['gcr.io/clang-docker-builder/clang-ubuntu14_04']
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.rbe.cuda10.0-cudnn7-ubuntu14.04,LABEL,2,"['maintainer=""Manuel Klimek <klimek@google.com>""', 'com.nvidia.cudnn.version=""${CUDNN_VERSION}""']"
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.rbe.cuda10.0-cudnn7-ubuntu14.04,RUN,9,"['apt-get update && apt-get install -y --no-install-recommends ca-certificates apt-transport-https gnupg-curl &&     rm -rf /var/lib/apt/lists/* &&     NVIDIA_GPGKEY_SUM=d1be581509378368edeec8c1eb2958702feedf3bc3d17011adbf24efacce4ab5 &&     NVIDIA_GPGKEY_FPR=ae09fe4bbd223a84b2ccfce3f60f4b3d7fa2af80 &&     apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1604/x86_64/7fa2af80.pub &&     apt-key adv --export --no-emit-version -a $NVIDIA_GPGKEY_FPR | tail -n +2 > cudasign.pub &&     echo ""$NVIDIA_GPGKEY_SUM  cudasign.pub"" | sha256sum -c --strict - && rm cudasign.pub &&     echo ""deb https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1604/x86_64 /"" > /etc/apt/sources.list.d/cuda.list &&     echo ""deb https://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1604/x86_64 /"" > /etc/apt/sources.list.d/nvidia-ml.list', 'apt-get update && apt-get install -y --no-install-recommends         cuda-command-line-tools-$CUDA_PKG_VERSION         cuda-compat-10-0=410.48-1         cuda-cudart-$CUDA_PKG_VERSION         cuda-libraries-$CUDA_PKG_VERSION         cuda-libraries-dev-$CUDA_PKG_VERSION         cuda-minimal-build-$CUDA_PKG_VERSION         cuda-nvml-dev-$CUDA_PKG_VERSION         cuda-nvtx-$CUDA_PKG_VERSION         libcudnn7=$CUDNN_VERSION-1+cuda10.0         libcudnn7=$CUDNN_VERSION-1+cuda10.0         libcudnn7-dev=$CUDNN_VERSION-1+cuda10.0         nvinfer-runtime-trt-repo-ubuntu1604-$TENSORRT_VERSION-ga-cuda10.0 &&     apt-get update && apt-get install -y --no-install-recommends         libnvinfer5=$TENSORRT_VERSION-1+cuda10.0         libnvinfer-dev=$TENSORRT_VERSION-1+cuda10.0 &&     ln -s cuda-10.0 /usr/local/cuda &&     apt-mark hold libcudnn7 &&     rm -rf /var/lib/apt/lists/*', 'ln -s libcuda.so /usr/local/cuda/lib64/stubs/libcuda.so.1', 'apt-get update &&     apt-get install -y software-properties-common &&     add-apt-repository ppa:ubuntu-toolchain-r/test -y &&     apt-get update &&     apt-get install -y --no-install-recommends g++-7 &&     rm -rf /var/lib/apt/lists/*', '/install/install_bootstrap_deb_packages.sh', 'add-apt-repository -y ppa:openjdk-r/ppa &&     add-apt-repository -y ppa:george-edison55/cmake-3.x', '/install/install_deb_packages.sh', '/install/install_pip_packages.sh', '/install/install_golang.sh']"
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.rbe.cuda10.0-cudnn7-ubuntu14.04,ENV,9,"['CUDA_VERSION 10.0.130', 'CUDA_PKG_VERSION 10-0=$CUDA_VERSION-1', 'CUDNN_VERSION 7.3.1.20', 'TENSORRT_VERSION 5.0.2', 'NVIDIA_DRIVER_CAPABILITIES compute,utility', 'NVIDIA_REQUIRE_CUDA ""cuda>=10.0,driver>=410""', 'NVIDIA_VISIBLE_DEVICES all', 'PATH /usr/local/cuda/bin:${PATH}', 'LD_LIBRARY_PATH /usr/local/cuda/lib64/stubs']"
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.rbe.cuda10.0-cudnn7-ubuntu14.04,COPY,1,['install/*.sh /install/']
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.rbe.cuda10.0-cudnn7-ubuntu14.04,ARG,1,['DEBIAN_FRONTEND=noninteractive']
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.custom_op_gpu,FROM,1,['nvidia/cuda:10.0-cudnn7-devel-ubuntu14.04']
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.custom_op_gpu,LABEL,1,"['maintainer=""Yifei Feng <yifeif@google.com>""']"
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.custom_op_gpu,COPY,2,"['install/*.sh /install/', 'install/.bazelrc /etc/bazel.bazelrc']"
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.custom_op_gpu,RUN,9,"['/install/install_bootstrap_deb_packages.sh', 'add-apt-repository -y ppa:openjdk-r/ppa &&     add-apt-repository -y ppa:george-edison55/cmake-3.x', '/install/install_deb_packages.sh', '/install/install_pip_packages.sh', '/install/install_bazel.sh', '/install/install_proto3.sh', '/install/install_buildifier.sh', '/install/install_auditwheel.sh', '/install/install_golang.sh']"
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.custom_op_gpu,ENV,1,['TF_NEED_CUDA 1']
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.cpu-py36,FROM,1,['ubuntu:16.04']
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.cpu-py36,LABEL,1,"['maintainer=""Rama Ketineni <rama.ketineni@intel.com>""']"
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.cpu-py36,COPY,2,"['install/*.sh /install/', 'install/.bazelrc /etc/bazel.bazelrc']"
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.cpu-py36,RUN,15,"['/install/install_bootstrap_deb_packages.sh', 'add-apt-repository -y ppa:openjdk-r/ppa &&    add-apt-repository -y ppa:george-edison55/cmake-3.x', '/install/install_deb_packages.sh', 'add-apt-repository ppa:ubuntu-toolchain-r/test', 'apt update', 'apt -y install gcc-7 g++-7', 'update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-7 700                          --slave /usr/bin/g++ g++ /usr/bin/g++-7', '/install/install_pi_python3x_toolchain.sh ""3.6""', 'update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.6 0', 'python3 -V', '/install/install_bazel.sh', '/install/install_proto3.sh', '/install/install_buildifier.sh', '/install/install_auditwheel.sh', '/install/install_golang.sh']"
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.rbe.cuda11.1-cudnn8-ubuntu18.04-manylinux2010-multipython,FROM,2,"['nvidia/cuda:11.1.1-cudnn8-devel-ubuntu18.04 as devtoolset', 'nvidia/cuda:11.1.1-cudnn8-devel-ubuntu18.04']"
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.rbe.cuda11.1-cudnn8-ubuntu18.04-manylinux2010-multipython,ENV,3,"['DEBIAN_FRONTEND=noninteractive', 'CLANG_VERSION=""r7f6f9f4cf966c78a315d15d6e913c43cfa45c47c""', 'LD_LIBRARY_PATH=""${LD_LIBRARY_PATH}:/usr/local/cuda-11.1/lib64""']"
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.rbe.cuda11.1-cudnn8-ubuntu18.04-manylinux2010-multipython,RUN,15,"['apt-get update && apt-get install -y       cpio       file       flex       g++       make       patch       rpm2cpio       unar       wget       xz-utils       &&     rm -rf /var/lib/apt/lists/*', '/build_devtoolset.sh devtoolset-7 /dt7', '/build_devtoolset.sh devtoolset-8 /dt8', 'echo     deb https://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1604/x86_64 /     > /etc/apt/sources.list.d/nvidia-ml.list       &&     apt-get update && apt-get install -y     libnvinfer-dev=7.2.2-1+cuda11.1     libnvinfer7=7.2.2-1+cuda11.1     libnvinfer-plugin-dev=7.2.2-1+cuda11.1     libnvinfer-plugin7=7.2.2-1+cuda11.1       &&     rm -rf /var/lib/apt/lists/*', '/install/install_bootstrap_deb_packages.sh', '/install/install_deb_packages.sh', 'apt-get update && apt-get install -y     libbz2-dev     libffi-dev     libgdbm-dev     libncurses5-dev     libnss3-dev     libreadline-dev     libsqlite3-dev     patchelf       &&     rm -rf /var/lib/apt/lists/*', '/install/install_bazel.sh', '/install/build_and_install_python.sh ""3.7.7""', '/install/build_and_install_python.sh ""3.8.2""', '/install/build_and_install_python.sh ""3.9.4""', '/install/install_pip_packages_by_version.sh ""/usr/local/bin/pip3.7""', '/install/install_pip_packages_by_version.sh ""/usr/local/bin/pip3.8""', '/install/install_pip_packages_by_version.sh ""/usr/local/bin/pip3.9""', '/install/install_latest_clang.sh']"
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.rbe.cuda11.1-cudnn8-ubuntu18.04-manylinux2010-multipython,ADD,3,"['devtoolset/fixlinks.sh fixlinks.sh', 'devtoolset/build_devtoolset.sh build_devtoolset.sh', 'devtoolset/rpm-patch.sh rpm-patch.sh']"
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.rbe.cuda11.1-cudnn8-ubuntu18.04-manylinux2010-multipython,COPY,8,"['--from=devtoolset /dt7 /dt7', '--from=devtoolset /dt8 /dt8', 'install/install_bootstrap_deb_packages.sh /install/', 'install/install_deb_packages.sh /install/', 'install/install_bazel.sh /install/', 'install/build_and_install_python.sh /install/', 'install/install_pip_packages_by_version.sh /install/', 'install/install_latest_clang.sh /install/']"
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.rbe.cuda11.1-cudnn8-ubuntu18.04-manylinux2010-multipython,ARG,1,['DEBIAN_FRONTEND=noninteractive']
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.rbe.cuda11.2-cudnn8.1-ubuntu18.04-manylinux2014-multipython,FROM,2,"['nvidia/cuda:11.2.1-cudnn8-devel-ubuntu18.04 as devtoolset', 'nvidia/cuda:11.2.1-cudnn8-devel-ubuntu18.04']"
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.rbe.cuda11.2-cudnn8.1-ubuntu18.04-manylinux2014-multipython,ENV,3,"['DEBIAN_FRONTEND=noninteractive', 'CLANG_VERSION=""r7f6f9f4cf966c78a315d15d6e913c43cfa45c47c""', 'LD_LIBRARY_PATH=""${LD_LIBRARY_PATH}:/usr/local/cuda-11.1/lib64""']"
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.rbe.cuda11.2-cudnn8.1-ubuntu18.04-manylinux2014-multipython,RUN,15,"['apt-get update && apt-get install -y       cpio       file       flex       g++       make       patch       rpm2cpio       unar       wget       xz-utils       &&     rm -rf /var/lib/apt/lists/*', '/build_devtoolset.sh devtoolset-7 /dt7', '/build_devtoolset.sh devtoolset-8 /dt8', 'echo     deb https://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1804/x86_64 /     > /etc/apt/sources.list.d/nvidia-ml.list       &&     apt-get update && apt-get install -y     libnvinfer-dev=7.2.2-1+cuda11.1     libnvinfer7=7.2.2-1+cuda11.1     libnvinfer-plugin-dev=7.2.2-1+cuda11.1     libnvinfer-plugin7=7.2.2-1+cuda11.1       &&     rm -rf /var/lib/apt/lists/*', '/install/install_bootstrap_deb_packages.sh', '/install/install_deb_packages.sh', 'apt-get update && apt-get install -y     libbz2-dev     libffi-dev     libgdbm-dev     libncurses5-dev     libnss3-dev     libreadline-dev     libsqlite3-dev     patchelf       &&     rm -rf /var/lib/apt/lists/*', '/install/install_bazel.sh', '/install/build_and_install_python.sh ""3.7.7""', '/install/build_and_install_python.sh ""3.8.2""', '/install/build_and_install_python.sh ""3.9.4""', '/install/install_pip_packages_by_version.sh ""/usr/local/bin/pip3.7""', '/install/install_pip_packages_by_version.sh ""/usr/local/bin/pip3.8""', '/install/install_pip_packages_by_version.sh ""/usr/local/bin/pip3.9""', '/install/install_latest_clang.sh']"
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.rbe.cuda11.2-cudnn8.1-ubuntu18.04-manylinux2014-multipython,ADD,3,"['devtoolset/fixlinks.sh fixlinks.sh', 'devtoolset/build_devtoolset.sh build_devtoolset.sh', 'devtoolset/rpm-patch.sh rpm-patch.sh']"
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.rbe.cuda11.2-cudnn8.1-ubuntu18.04-manylinux2014-multipython,COPY,8,"['--from=devtoolset /dt7 /dt7', '--from=devtoolset /dt8 /dt8', 'install/install_bootstrap_deb_packages.sh /install/', 'install/install_deb_packages.sh /install/', 'install/install_bazel.sh /install/', 'install/build_and_install_python.sh /install/', 'install/install_pip_packages_by_version.sh /install/', 'install/install_latest_clang.sh /install/']"
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/Dockerfile.rbe.cuda11.2-cudnn8.1-ubuntu18.04-manylinux2014-multipython,ARG,1,['DEBIAN_FRONTEND=noninteractive']
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/linux/mkl/Dockerfile.devel-mkl,ARG,20,"['ROOT_CONTAINER_TAG=devel', 'ROOT_CONTAINER=tensorflow/tensorflow', 'PYTHON=""python""', 'WHL_DIR=""/tmp/pip""', 'PIP=""pip""', 'TARGET_PLATFORM=""haswell""', 'CONFIG_V2_DISABLE=""""', 'CONFIG_BFLOAT16_BUILD=""""', 'ENABLE_SECURE_BUILD', 'BAZEL_VERSION=""""', 'ENABLE_DNNL1=""""', 'ENABLE_HOROVOD=""""', 'ENABLE_GCC8=""""', 'OPENMPI_VERSION=""""', 'OPENMPI_DOWNLOAD_URL=""""', 'HOROVOD_VERSION=""""', 'INSTALL_HOROVOD_FROM_COMMIT=""""', 'BUILD_SSH=""""', 'TF_NIGHTLY_FLAG=""""', 'RELEASE_CONTAINER=""""']"
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/linux/mkl/Dockerfile.devel-mkl,FROM,1,['${ROOT_CONTAINER}:${ROOT_CONTAINER_TAG}']
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/linux/mkl/Dockerfile.devel-mkl,LABEL,1,"['maintainer=""Clayne Robison <clayne.b.robison@intel.com>""']"
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/linux/mkl/Dockerfile.devel-mkl,ENV,2,"['DEBIAN_FRONTEND=noninteractive', 'CI_BUILD_PYTHON ${PYTHON}']"
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/linux/mkl/Dockerfile.devel-mkl,RUN,9,"['if [ ""${BAZEL_VERSION}"" != """" ]; then         curl -fSsL -O https://github.com/bazelbuild/bazel/releases/download/$BAZEL_VERSION/bazel-$BAZEL_VERSION-installer-linux-x86_64.sh &&         chmod +x bazel-$BAZEL_VERSION-installer-linux-x86_64.sh &&         ./bazel-$BAZEL_VERSION-installer-linux-x86_64.sh &&         rm -rf bazel-$BAZEL_VERSION-installer-linux-x86_64.sh;     fi', 'if [ ""${ENABLE_GCC8}"" = ""yes"" ]; then         add-apt-repository ppa:ubuntu-toolchain-r/test -y &&         apt-get update &&         apt-get install gcc-8 g++-8  -y &&         update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 80 --slave /usr/bin/g++ g++ /usr/bin/g++-8 --slave /usr/bin/gcov gcov /usr/bin/gcov-8 &&         update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-7 70 --slave /usr/bin/g++ g++ /usr/bin/g++-7 --slave /usr/bin/gcov gcov /usr/bin/gcov-7 ;    fi', 'yes """" | ${PYTHON} configure.py', '${PYTHON} set-build-env.py -p ${TARGET_PLATFORM} -f /root/.mkl.bazelrc     ${CONFIG_V2_DISABLE} ${ENABLE_SECURE_BUILD} ${CONFIG_BFLOAT16_BUILD} ${ENABLE_DNNL1}', 'echo ""import /root/.mkl.bazelrc"" >>/root/.bazelrc', '${PIP} install future>=0.17.1', 'bazel --bazelrc=/root/.bazelrc build -c opt     tensorflow/tools/pip_package:build_pip_package &&     bazel-bin/tensorflow/tools/pip_package/build_pip_package ""${TF_NIGHTLY_FLAG}"" ""${WHL_DIR}"" &&     ${PIP} --no-cache-dir install --upgrade ""${WHL_DIR}""/*.whl &&     rm -rf /root/.cache', 'if [ ""${ENABLE_HOROVOD}"" = ""yes"" ]; then         chmod +x install_openmpi_horovod.sh &&         OPENMPI_VERSION=${OPENMPI_VERSION} OPENMPI_DOWNLOAD_URL=${OPENMPI_DOWNLOAD_URL} BUILD_SSH=${BUILD_SSH}         INSTALL_HOROVOD_FROM_COMMIT=${INSTALL_HOROVOD_FROM_COMMIT} HOROVOD_VERSION=${HOROVOD_VERSION} ./install_openmpi_horovod.sh &&         rm -rf install_openmpi_horovod.sh;     fi', 'if [ ""${RELEASE_CONTAINER}"" = ""yes"" ]; then     ${PIP} uninstall --yes cryptography &&     rm -rf /usr/lib/python3/dist-packages/pycrypto-2.6.1.egg-info;     fi']"
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/linux/mkl/Dockerfile.devel-mkl,WORKDIR,3,"['/', '/tensorflow', '/root']"
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/linux/mkl/Dockerfile.devel-mkl,COPY,2,"['tensorflow/ /tensorflow/', 'install_openmpi_horovod.sh .']"
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/linux/mkl/Dockerfile.devel-mkl,ADD,1,['set-build-env.py .']
tensorflow/tensorflow,latest,/tensorflow/tools/ci_build/linux/mkl/Dockerfile.devel-mkl,EXPOSE,2,"['6006', '8888']"
tensorflow/tensorflow,latest,/tensorflow/tools/gcs_test/Dockerfile,FROM,1,['ubuntu:16.04']
tensorflow/tensorflow,latest,/tensorflow/tools/gcs_test/Dockerfile,LABEL,1,"['maintainer=""Shanqing Cai <cais@google.com>""']"
tensorflow/tensorflow,latest,/tensorflow/tools/gcs_test/Dockerfile,RUN,7,"['apt-get update', 'apt-get install -y     curl     libcurl4-openssl-dev     python     python-pip', 'curl -O https://dl.google.com/dl/cloudsdk/channels/rapid/install_google_cloud_sdk.bash', 'chmod +x install_google_cloud_sdk.bash', './install_google_cloud_sdk.bash --disable-prompts --install-dir=/var/gcloud', 'pip install /tensorflow-*.whl', 'mkdir -p /gcs-smoke/python']"
tensorflow/tensorflow,latest,/tensorflow/tools/gcs_test/Dockerfile,COPY,3,"['tensorflow-*.whl /', 'gcs_smoke_wrapper.sh /gcs-smoke/', 'python/gcs_smoke.py /gcs-smoke/python/']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/tflite-android.Dockerfile,FROM,1,['tensorflow/tensorflow:devel']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/tflite-android.Dockerfile,ENV,12,"['ANDROID_DEV_HOME /android', 'ANDROID_SDK_FILENAME commandlinetools-linux-6858069_latest.zip', 'ANDROID_SDK_URL https://dl.google.com/android/repository/${ANDROID_SDK_FILENAME}', 'ANDROID_API_LEVEL 23', 'ANDROID_NDK_API_LEVEL 21', 'ANDROID_BUILD_TOOLS_VERSION 30.0.0', 'ANDROID_SDK_HOME ${ANDROID_DEV_HOME}/sdk', 'PATH ${PATH}:${ANDROID_SDK_HOME}/cmdline-tools/latest/bin:${ANDROID_SDK_HOME}/platform-tools', 'ANDROID_NDK_FILENAME android-ndk-r19c-linux-x86_64.zip', 'ANDROID_NDK_URL https://dl.google.com/android/repository/${ANDROID_NDK_FILENAME}', 'ANDROID_NDK_HOME ${ANDROID_DEV_HOME}/ndk', 'PATH ${PATH}:${ANDROID_NDK_HOME}']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/tflite-android.Dockerfile,RUN,6,"['mkdir -p ${ANDROID_DEV_HOME}', 'apt-get install -y --no-install-recommends default-jdk', 'mkdir -p ${ANDROID_SDK_HOME}/cmdline-tools', 'cd ${ANDROID_DEV_HOME} &&     wget -q ${ANDROID_SDK_URL} &&     unzip ${ANDROID_SDK_FILENAME} -d /tmp &&     mv /tmp/cmdline-tools ${ANDROID_SDK_HOME}/cmdline-tools/latest &&     rm ${ANDROID_SDK_FILENAME}', 'cd ${ANDROID_DEV_HOME} &&     wget -q ${ANDROID_NDK_URL} &&     unzip ${ANDROID_NDK_FILENAME} -d ${ANDROID_DEV_HOME} &&     rm ${ANDROID_NDK_FILENAME} &&     bash -c ""ln -s ${ANDROID_DEV_HOME}/android-ndk-* ${ANDROID_NDK_HOME}""', 'chmod -R go=u ${ANDROID_DEV_HOME}']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/tools.Dockerfile,FROM,1,['ubuntu:18.04']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/tools.Dockerfile,LABEL,1,"['maintainer=""Austin Anderson <angerson@google.com>""']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/tools.Dockerfile,RUN,3,"['apt-get update && apt-get install -y python3 python3-pip bash curl docker.io', ""pip3 install --upgrade pip setuptools pyyaml absl-py cerberus 'docker<=4.3.0'"", 'chmod a+rwx /etc/bash.bashrc']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/tools.Dockerfile,WORKDIR,1,['/tf']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/tools.Dockerfile,VOLUME,1,"['[""/tf""]']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/tools.Dockerfile,COPY,1,['bashrc /etc/bash.bashrc']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/devel-gpu-jupyter.Dockerfile,ARG,13,"['UBUNTU_VERSION=20.04', 'ARCH=', 'CUDA=11.2', 'ARCH', 'CUDA', 'CUDNN=8.1.0.77-1', 'CUDNN_MAJOR_VERSION=8', 'LIB_DIR_PREFIX=x86_64', 'LIBNVINFER=7.2.2-1', 'LIBNVINFER_MAJOR_VERSION=7', 'CACHE_STOP=1', 'CHECKOUT_TF_SRC=0', 'BAZEL_VERSION=4.2.2']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/devel-gpu-jupyter.Dockerfile,FROM,1,['nvidia/cuda${ARCH:+-$ARCH}:${CUDA}.1-base-ubuntu${UBUNTU_VERSION} as base']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/devel-gpu-jupyter.Dockerfile,SHELL,1,"['[""/bin/bash"", ""-c""]']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/devel-gpu-jupyter.Dockerfile,ENV,7,"['DEBIAN_FRONTEND=noninteractive', 'LD_LIBRARY_PATH /usr/local/cuda-11.0/targets/x86_64-linux/lib:/usr/local/cuda/extras/CUPTI/lib64:/usr/local/cuda/lib64:/usr/include/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:$LD_LIBRARY_PATH:/usr/local/cuda/lib64/stubs:/usr/local/cuda-11.0/lib64:/usr/local/cuda-11.2/lib64', 'TF_NEED_CUDA 1', 'TF_NEED_TENSORRT 1', 'TF_CUDA_VERSION=${CUDA}', 'TF_CUDNN_VERSION=${CUDNN_MAJOR_VERSION}', 'LANG C.UTF-8']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/devel-gpu-jupyter.Dockerfile,RUN,25,"[""apt-get update && apt-get install -y --no-install-recommends         build-essential         clang-format         cuda-command-line-tools-${CUDA/./-}         libcublas-${CUDA/./-}         libcublas-dev-${CUDA/./-}         cuda-nvprune-${CUDA/./-}         cuda-nvrtc-${CUDA/./-}         cuda-nvrtc-dev-${CUDA/./-}         cuda-cudart-dev-${CUDA/./-}         libcufft-dev-${CUDA/./-}         libcurand-dev-${CUDA/./-}         libcusolver-dev-${CUDA/./-}         libcusparse-dev-${CUDA/./-}         libcudnn8=${CUDNN}+cuda${CUDA}         libcudnn8-dev=${CUDNN}+cuda${CUDA}         libcurl3-dev         libfreetype6-dev         libhdf5-serial-dev         libzmq3-dev         pkg-config         rsync         software-properties-common         unzip         zip         zlib1g-dev         wget         git         &&     find /usr/local/cuda-${CUDA}/lib64/ -type f -name 'lib*_static.a' -not -name 'libcudart_static.a' -delete &&     rm /usr/lib/${LIB_DIR_PREFIX}-linux-gnu/libcudnn_static_v8.a"", '[[ ""${ARCH}"" = ""ppc64le"" ]] || { apt-get update &&         apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1804/x86_64/7fa2af80.pub &&         echo ""deb https://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1804/x86_64 /""  > /etc/apt/sources.list.d/tensorRT.list &&         apt-get update &&         apt-get install -y --no-install-recommends libnvinfer${LIBNVINFER_MAJOR_VERSION}=${LIBNVINFER}+cuda11.0         libnvinfer-dev=${LIBNVINFER}+cuda11.0         libnvinfer-plugin-dev=${LIBNVINFER}+cuda11.0         libnvinfer-plugin${LIBNVINFER_MAJOR_VERSION}=${LIBNVINFER}+cuda11.0         && apt-get clean         && rm -rf /var/lib/apt/lists/*; }', 'test ""${CHECKOUT_TF_SRC}"" -eq 1 && git clone --depth=1 https://github.com/tensorflow/tensorflow.git /tensorflow_src || true', 'ln -s /usr/local/cuda/lib64/stubs/libcuda.so /usr/local/cuda/lib64/stubs/libcuda.so.1     && echo ""/usr/local/cuda/lib64/stubs"" > /etc/ld.so.conf.d/z-cuda-stubs.conf     && ldconfig', 'apt-get update && apt-get install -y     python3     python3-pip', 'python3 -m pip --no-cache-dir install --upgrade     ""pip<20.3""     setuptools', 'ln -s $(which python3) /usr/local/bin/python', 'apt-get update && apt-get install -y     build-essential     curl     git     wget     openjdk-8-jdk     python3-dev     virtualenv     swig', ""python3 -m pip --no-cache-dir install     Pillow     h5py     keras_preprocessing     tb-nightly     matplotlib     mock     'numpy<1.19.0'     scipy     sklearn     pandas     future     portpicker     enum34"", 'mkdir /bazel &&     wget -O /bazel/installer.sh ""https://github.com/bazelbuild/bazel/releases/download/${BAZEL_VERSION}/bazel-${BAZEL_VERSION}-installer-linux-x86_64.sh"" &&     wget -O /bazel/LICENSE.txt ""https://raw.githubusercontent.com/bazelbuild/bazel/master/LICENSE"" &&     chmod +x /bazel/installer.sh &&     /bazel/installer.sh &&     rm -f /bazel/installer.sh', 'chmod a+rwx /etc/bash.bashrc', 'python3 -m pip install --no-cache-dir jupyter matplotlib', 'python3 -m pip install --no-cache-dir jupyter_http_over_ws ipykernel==5.1.1 nbformat==4.4.0 jedi==0.17.2', 'jupyter serverextension enable --py jupyter_http_over_ws', 'mkdir -p /tf/tensorflow-tutorials && chmod -R a+rwx /tf/', 'mkdir /.local && chmod a+rwx /.local', 'apt-get update && apt-get install -y --no-install-recommends wget git', 'wget https://raw.githubusercontent.com/tensorflow/docs/master/site/en/tutorials/keras/classification.ipynb', 'wget https://raw.githubusercontent.com/tensorflow/docs/master/site/en/tutorials/keras/overfit_and_underfit.ipynb', 'wget https://raw.githubusercontent.com/tensorflow/docs/master/site/en/tutorials/keras/regression.ipynb', 'wget https://raw.githubusercontent.com/tensorflow/docs/master/site/en/tutorials/keras/save_and_load.ipynb', 'wget https://raw.githubusercontent.com/tensorflow/docs/master/site/en/tutorials/keras/text_classification.ipynb', 'wget https://raw.githubusercontent.com/tensorflow/docs/master/site/en/tutorials/keras/text_classification_with_hub.ipynb', 'apt-get autoremove -y && apt-get remove -y wget', 'python3 -m ipykernel.kernelspec']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/devel-gpu-jupyter.Dockerfile,COPY,2,"['bashrc /etc/bash.bashrc', 'readme-for-jupyter.md README.md']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/devel-gpu-jupyter.Dockerfile,WORKDIR,2,"['/tf/tensorflow-tutorials', '/tf']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/devel-gpu-jupyter.Dockerfile,EXPOSE,1,['8888']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/devel-gpu-jupyter.Dockerfile,CMD,1,"['[""bash"", ""-c"", ""source /etc/bash.bashrc && jupyter notebook --notebook-dir=/tf --ip 0.0.0.0 --no-browser --allow-root""]']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/cpu.Dockerfile,ARG,3,"['UBUNTU_VERSION=20.04', 'TF_PACKAGE=tensorflow', 'TF_PACKAGE_VERSION=']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/cpu.Dockerfile,FROM,1,['ubuntu:${UBUNTU_VERSION} as base']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/cpu.Dockerfile,ENV,2,"['DEBIAN_FRONTEND=noninteractive', 'LANG C.UTF-8']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/cpu.Dockerfile,RUN,6,"['apt-get update && apt-get install -y curl', 'apt-get update && apt-get install -y     python3     python3-pip', 'python3 -m pip --no-cache-dir install --upgrade     ""pip<20.3""     setuptools', 'ln -s $(which python3) /usr/local/bin/python', 'python3 -m pip install --no-cache-dir ${TF_PACKAGE}${TF_PACKAGE_VERSION:+==${TF_PACKAGE_VERSION}}', 'chmod a+rwx /etc/bash.bashrc']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/cpu.Dockerfile,COPY,1,['bashrc /etc/bash.bashrc']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/devel-cpu-jupyter.Dockerfile,ARG,4,"['UBUNTU_VERSION=20.04', 'CACHE_STOP=1', 'CHECKOUT_TF_SRC=0', 'BAZEL_VERSION=4.2.2']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/devel-cpu-jupyter.Dockerfile,FROM,1,['ubuntu:${UBUNTU_VERSION} AS base']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/devel-cpu-jupyter.Dockerfile,ENV,3,"['DEBIAN_FRONTEND=noninteractive', 'CI_BUILD_PYTHON python', 'LANG C.UTF-8']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/devel-cpu-jupyter.Dockerfile,RUN,24,"['apt-get update && apt-get install -y --no-install-recommends         build-essential         curl         git         libcurl3-dev         libfreetype6-dev         libhdf5-serial-dev         libzmq3-dev         pkg-config         rsync         software-properties-common         sudo         unzip         zip         zlib1g-dev         openjdk-8-jdk         openjdk-8-jre-headless         &&     apt-get clean &&     rm -rf /var/lib/apt/lists/*', 'chmod a+w /etc/passwd /etc/group', 'test ""${CHECKOUT_TF_SRC}"" -eq 1 && git clone https://github.com/tensorflow/tensorflow.git /tensorflow_src || true', 'apt-get update && apt-get install -y     python3     python3-pip', 'python3 -m pip --no-cache-dir install --upgrade     ""pip<20.3""     setuptools', 'ln -s $(which python3) /usr/local/bin/python', 'apt-get update && apt-get install -y     build-essential     curl     git     wget     openjdk-8-jdk     python3-dev     virtualenv     swig', ""python3 -m pip --no-cache-dir install     Pillow     h5py     keras_preprocessing     tb-nightly     matplotlib     mock     'numpy<1.19.0'     scipy     sklearn     pandas     future     portpicker     enum34"", 'mkdir /bazel &&     wget -O /bazel/installer.sh ""https://github.com/bazelbuild/bazel/releases/download/${BAZEL_VERSION}/bazel-${BAZEL_VERSION}-installer-linux-x86_64.sh"" &&     wget -O /bazel/LICENSE.txt ""https://raw.githubusercontent.com/bazelbuild/bazel/master/LICENSE"" &&     chmod +x /bazel/installer.sh &&     /bazel/installer.sh &&     rm -f /bazel/installer.sh', 'chmod a+rwx /etc/bash.bashrc', 'python3 -m pip install --no-cache-dir jupyter matplotlib', 'python3 -m pip install --no-cache-dir jupyter_http_over_ws ipykernel==5.1.1 nbformat==4.4.0 jedi==0.17.2', 'jupyter serverextension enable --py jupyter_http_over_ws', 'mkdir -p /tf/tensorflow-tutorials && chmod -R a+rwx /tf/', 'mkdir /.local && chmod a+rwx /.local', 'apt-get update && apt-get install -y --no-install-recommends wget git', 'wget https://raw.githubusercontent.com/tensorflow/docs/master/site/en/tutorials/keras/classification.ipynb', 'wget https://raw.githubusercontent.com/tensorflow/docs/master/site/en/tutorials/keras/overfit_and_underfit.ipynb', 'wget https://raw.githubusercontent.com/tensorflow/docs/master/site/en/tutorials/keras/regression.ipynb', 'wget https://raw.githubusercontent.com/tensorflow/docs/master/site/en/tutorials/keras/save_and_load.ipynb', 'wget https://raw.githubusercontent.com/tensorflow/docs/master/site/en/tutorials/keras/text_classification.ipynb', 'wget https://raw.githubusercontent.com/tensorflow/docs/master/site/en/tutorials/keras/text_classification_with_hub.ipynb', 'apt-get autoremove -y && apt-get remove -y wget', 'python3 -m ipykernel.kernelspec']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/devel-cpu-jupyter.Dockerfile,COPY,2,"['bashrc /etc/bash.bashrc', 'readme-for-jupyter.md README.md']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/devel-cpu-jupyter.Dockerfile,WORKDIR,2,"['/tf/tensorflow-tutorials', '/tf']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/devel-cpu-jupyter.Dockerfile,EXPOSE,1,['8888']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/devel-cpu-jupyter.Dockerfile,CMD,1,"['[""bash"", ""-c"", ""source /etc/bash.bashrc && jupyter notebook --notebook-dir=/tf --ip 0.0.0.0 --no-browser --allow-root""]']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/devel-gpu.Dockerfile,ARG,13,"['UBUNTU_VERSION=20.04', 'ARCH=', 'CUDA=11.2', 'ARCH', 'CUDA', 'CUDNN=8.1.0.77-1', 'CUDNN_MAJOR_VERSION=8', 'LIB_DIR_PREFIX=x86_64', 'LIBNVINFER=7.2.2-1', 'LIBNVINFER_MAJOR_VERSION=7', 'CACHE_STOP=1', 'CHECKOUT_TF_SRC=0', 'BAZEL_VERSION=4.2.2']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/devel-gpu.Dockerfile,FROM,1,['nvidia/cuda${ARCH:+-$ARCH}:${CUDA}.1-base-ubuntu${UBUNTU_VERSION} as base']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/devel-gpu.Dockerfile,SHELL,1,"['[""/bin/bash"", ""-c""]']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/devel-gpu.Dockerfile,ENV,7,"['DEBIAN_FRONTEND=noninteractive', 'LD_LIBRARY_PATH /usr/local/cuda-11.0/targets/x86_64-linux/lib:/usr/local/cuda/extras/CUPTI/lib64:/usr/local/cuda/lib64:/usr/include/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:$LD_LIBRARY_PATH:/usr/local/cuda/lib64/stubs:/usr/local/cuda-11.0/lib64:/usr/local/cuda-11.2/lib64', 'TF_NEED_CUDA 1', 'TF_NEED_TENSORRT 1', 'TF_CUDA_VERSION=${CUDA}', 'TF_CUDNN_VERSION=${CUDNN_MAJOR_VERSION}', 'LANG C.UTF-8']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/devel-gpu.Dockerfile,RUN,11,"[""apt-get update && apt-get install -y --no-install-recommends         build-essential         clang-format         cuda-command-line-tools-${CUDA/./-}         libcublas-${CUDA/./-}         libcublas-dev-${CUDA/./-}         cuda-nvprune-${CUDA/./-}         cuda-nvrtc-${CUDA/./-}         cuda-nvrtc-dev-${CUDA/./-}         cuda-cudart-dev-${CUDA/./-}         libcufft-dev-${CUDA/./-}         libcurand-dev-${CUDA/./-}         libcusolver-dev-${CUDA/./-}         libcusparse-dev-${CUDA/./-}         libcudnn8=${CUDNN}+cuda${CUDA}         libcudnn8-dev=${CUDNN}+cuda${CUDA}         libcurl3-dev         libfreetype6-dev         libhdf5-serial-dev         libzmq3-dev         pkg-config         rsync         software-properties-common         unzip         zip         zlib1g-dev         wget         git         &&     find /usr/local/cuda-${CUDA}/lib64/ -type f -name 'lib*_static.a' -not -name 'libcudart_static.a' -delete &&     rm /usr/lib/${LIB_DIR_PREFIX}-linux-gnu/libcudnn_static_v8.a"", '[[ ""${ARCH}"" = ""ppc64le"" ]] || { apt-get update &&         apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1804/x86_64/7fa2af80.pub &&         echo ""deb https://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1804/x86_64 /""  > /etc/apt/sources.list.d/tensorRT.list &&         apt-get update &&         apt-get install -y --no-install-recommends libnvinfer${LIBNVINFER_MAJOR_VERSION}=${LIBNVINFER}+cuda11.0         libnvinfer-dev=${LIBNVINFER}+cuda11.0         libnvinfer-plugin-dev=${LIBNVINFER}+cuda11.0         libnvinfer-plugin${LIBNVINFER_MAJOR_VERSION}=${LIBNVINFER}+cuda11.0         && apt-get clean         && rm -rf /var/lib/apt/lists/*; }', 'test ""${CHECKOUT_TF_SRC}"" -eq 1 && git clone --depth=1 https://github.com/tensorflow/tensorflow.git /tensorflow_src || true', 'ln -s /usr/local/cuda/lib64/stubs/libcuda.so /usr/local/cuda/lib64/stubs/libcuda.so.1     && echo ""/usr/local/cuda/lib64/stubs"" > /etc/ld.so.conf.d/z-cuda-stubs.conf     && ldconfig', 'apt-get update && apt-get install -y     python3     python3-pip', 'python3 -m pip --no-cache-dir install --upgrade     ""pip<20.3""     setuptools', 'ln -s $(which python3) /usr/local/bin/python', 'apt-get update && apt-get install -y     build-essential     curl     git     wget     openjdk-8-jdk     python3-dev     virtualenv     swig', ""python3 -m pip --no-cache-dir install     Pillow     h5py     keras_preprocessing     tb-nightly     matplotlib     mock     'numpy<1.19.0'     scipy     sklearn     pandas     future     portpicker     enum34"", 'mkdir /bazel &&     wget -O /bazel/installer.sh ""https://github.com/bazelbuild/bazel/releases/download/${BAZEL_VERSION}/bazel-${BAZEL_VERSION}-installer-linux-x86_64.sh"" &&     wget -O /bazel/LICENSE.txt ""https://raw.githubusercontent.com/bazelbuild/bazel/master/LICENSE"" &&     chmod +x /bazel/installer.sh &&     /bazel/installer.sh &&     rm -f /bazel/installer.sh', 'chmod a+rwx /etc/bash.bashrc']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/devel-gpu.Dockerfile,COPY,1,['bashrc /etc/bash.bashrc']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/devel-cpu.Dockerfile,ARG,4,"['UBUNTU_VERSION=20.04', 'CACHE_STOP=1', 'CHECKOUT_TF_SRC=0', 'BAZEL_VERSION=4.2.2']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/devel-cpu.Dockerfile,FROM,1,['ubuntu:${UBUNTU_VERSION} AS base']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/devel-cpu.Dockerfile,ENV,3,"['DEBIAN_FRONTEND=noninteractive', 'CI_BUILD_PYTHON python', 'LANG C.UTF-8']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/devel-cpu.Dockerfile,RUN,10,"['apt-get update && apt-get install -y --no-install-recommends         build-essential         curl         git         libcurl3-dev         libfreetype6-dev         libhdf5-serial-dev         libzmq3-dev         pkg-config         rsync         software-properties-common         sudo         unzip         zip         zlib1g-dev         openjdk-8-jdk         openjdk-8-jre-headless         &&     apt-get clean &&     rm -rf /var/lib/apt/lists/*', 'chmod a+w /etc/passwd /etc/group', 'test ""${CHECKOUT_TF_SRC}"" -eq 1 && git clone https://github.com/tensorflow/tensorflow.git /tensorflow_src || true', 'apt-get update && apt-get install -y     python3     python3-pip', 'python3 -m pip --no-cache-dir install --upgrade     ""pip<20.3""     setuptools', 'ln -s $(which python3) /usr/local/bin/python', 'apt-get update && apt-get install -y     build-essential     curl     git     wget     openjdk-8-jdk     python3-dev     virtualenv     swig', ""python3 -m pip --no-cache-dir install     Pillow     h5py     keras_preprocessing     tb-nightly     matplotlib     mock     'numpy<1.19.0'     scipy     sklearn     pandas     future     portpicker     enum34"", 'mkdir /bazel &&     wget -O /bazel/installer.sh ""https://github.com/bazelbuild/bazel/releases/download/${BAZEL_VERSION}/bazel-${BAZEL_VERSION}-installer-linux-x86_64.sh"" &&     wget -O /bazel/LICENSE.txt ""https://raw.githubusercontent.com/bazelbuild/bazel/master/LICENSE"" &&     chmod +x /bazel/installer.sh &&     /bazel/installer.sh &&     rm -f /bazel/installer.sh', 'chmod a+rwx /etc/bash.bashrc']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/devel-cpu.Dockerfile,COPY,1,['bashrc /etc/bash.bashrc']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/gpu-jupyter.Dockerfile,ARG,12,"['UBUNTU_VERSION=20.04', 'ARCH=', 'CUDA=11.2', 'ARCH', 'CUDA', 'CUDNN=8.1.0.77-1', 'CUDNN_MAJOR_VERSION=8', 'LIB_DIR_PREFIX=x86_64', 'LIBNVINFER=7.2.2-1', 'LIBNVINFER_MAJOR_VERSION=7', 'TF_PACKAGE=tensorflow', 'TF_PACKAGE_VERSION=']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/gpu-jupyter.Dockerfile,FROM,1,['nvidia/cuda${ARCH:+-$ARCH}:${CUDA}.1-base-ubuntu${UBUNTU_VERSION} as base']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/gpu-jupyter.Dockerfile,ENV,3,"['DEBIAN_FRONTEND=noninteractive', 'LD_LIBRARY_PATH /usr/local/cuda-11.0/targets/x86_64-linux/lib:/usr/local/cuda/extras/CUPTI/lib64:/usr/local/cuda/lib64:$LD_LIBRARY_PATH', 'LANG C.UTF-8']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/gpu-jupyter.Dockerfile,SHELL,1,"['[""/bin/bash"", ""-c""]']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/gpu-jupyter.Dockerfile,RUN,22,"['apt-get update && apt-get install -y --no-install-recommends         build-essential         cuda-command-line-tools-${CUDA/./-}         libcublas-${CUDA/./-}         cuda-nvrtc-${CUDA/./-}         libcufft-${CUDA/./-}         libcurand-${CUDA/./-}         libcusolver-${CUDA/./-}         libcusparse-${CUDA/./-}         curl         libcudnn8=${CUDNN}+cuda${CUDA}         libfreetype6-dev         libhdf5-serial-dev         libzmq3-dev         pkg-config         software-properties-common         unzip', '[[ ""${ARCH}"" = ""ppc64le"" ]] || { apt-get update &&         apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1804/x86_64/7fa2af80.pub &&         echo ""deb https://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1804/x86_64 /""  > /etc/apt/sources.list.d/tensorRT.list &&         apt-get update &&         apt-get install -y --no-install-recommends libnvinfer${LIBNVINFER_MAJOR_VERSION}=${LIBNVINFER}+cuda11.0         libnvinfer-plugin${LIBNVINFER_MAJOR_VERSION}=${LIBNVINFER}+cuda11.0         && apt-get clean         && rm -rf /var/lib/apt/lists/*; }', 'ln -s /usr/local/cuda/lib64/stubs/libcuda.so /usr/local/cuda/lib64/stubs/libcuda.so.1     && echo ""/usr/local/cuda/lib64/stubs"" > /etc/ld.so.conf.d/z-cuda-stubs.conf     && ldconfig', 'apt-get update && apt-get install -y     python3     python3-pip', 'python3 -m pip --no-cache-dir install --upgrade     ""pip<20.3""     setuptools', 'ln -s $(which python3) /usr/local/bin/python', 'python3 -m pip install --no-cache-dir ${TF_PACKAGE}${TF_PACKAGE_VERSION:+==${TF_PACKAGE_VERSION}}', 'chmod a+rwx /etc/bash.bashrc', 'python3 -m pip install --no-cache-dir jupyter matplotlib', 'python3 -m pip install --no-cache-dir jupyter_http_over_ws ipykernel==5.1.1 nbformat==4.4.0 jedi==0.17.2', 'jupyter serverextension enable --py jupyter_http_over_ws', 'mkdir -p /tf/tensorflow-tutorials && chmod -R a+rwx /tf/', 'mkdir /.local && chmod a+rwx /.local', 'apt-get update && apt-get install -y --no-install-recommends wget git', 'wget https://raw.githubusercontent.com/tensorflow/docs/master/site/en/tutorials/keras/classification.ipynb', 'wget https://raw.githubusercontent.com/tensorflow/docs/master/site/en/tutorials/keras/overfit_and_underfit.ipynb', 'wget https://raw.githubusercontent.com/tensorflow/docs/master/site/en/tutorials/keras/regression.ipynb', 'wget https://raw.githubusercontent.com/tensorflow/docs/master/site/en/tutorials/keras/save_and_load.ipynb', 'wget https://raw.githubusercontent.com/tensorflow/docs/master/site/en/tutorials/keras/text_classification.ipynb', 'wget https://raw.githubusercontent.com/tensorflow/docs/master/site/en/tutorials/keras/text_classification_with_hub.ipynb', 'apt-get autoremove -y && apt-get remove -y wget', 'python3 -m ipykernel.kernelspec']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/gpu-jupyter.Dockerfile,COPY,2,"['bashrc /etc/bash.bashrc', 'readme-for-jupyter.md README.md']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/gpu-jupyter.Dockerfile,WORKDIR,2,"['/tf/tensorflow-tutorials', '/tf']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/gpu-jupyter.Dockerfile,EXPOSE,1,['8888']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/gpu-jupyter.Dockerfile,CMD,1,"['[""bash"", ""-c"", ""source /etc/bash.bashrc && jupyter notebook --notebook-dir=/tf --ip 0.0.0.0 --no-browser --allow-root""]']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/gpu.Dockerfile,ARG,12,"['UBUNTU_VERSION=20.04', 'ARCH=', 'CUDA=11.2', 'ARCH', 'CUDA', 'CUDNN=8.1.0.77-1', 'CUDNN_MAJOR_VERSION=8', 'LIB_DIR_PREFIX=x86_64', 'LIBNVINFER=7.2.2-1', 'LIBNVINFER_MAJOR_VERSION=7', 'TF_PACKAGE=tensorflow', 'TF_PACKAGE_VERSION=']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/gpu.Dockerfile,FROM,1,['nvidia/cuda${ARCH:+-$ARCH}:${CUDA}.1-base-ubuntu${UBUNTU_VERSION} as base']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/gpu.Dockerfile,ENV,3,"['DEBIAN_FRONTEND=noninteractive', 'LD_LIBRARY_PATH /usr/local/cuda-11.0/targets/x86_64-linux/lib:/usr/local/cuda/extras/CUPTI/lib64:/usr/local/cuda/lib64:$LD_LIBRARY_PATH', 'LANG C.UTF-8']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/gpu.Dockerfile,SHELL,1,"['[""/bin/bash"", ""-c""]']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/gpu.Dockerfile,RUN,8,"['apt-get update && apt-get install -y --no-install-recommends         build-essential         cuda-command-line-tools-${CUDA/./-}         libcublas-${CUDA/./-}         cuda-nvrtc-${CUDA/./-}         libcufft-${CUDA/./-}         libcurand-${CUDA/./-}         libcusolver-${CUDA/./-}         libcusparse-${CUDA/./-}         curl         libcudnn8=${CUDNN}+cuda${CUDA}         libfreetype6-dev         libhdf5-serial-dev         libzmq3-dev         pkg-config         software-properties-common         unzip', '[[ ""${ARCH}"" = ""ppc64le"" ]] || { apt-get update &&         apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1804/x86_64/7fa2af80.pub &&         echo ""deb https://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1804/x86_64 /""  > /etc/apt/sources.list.d/tensorRT.list &&         apt-get update &&         apt-get install -y --no-install-recommends libnvinfer${LIBNVINFER_MAJOR_VERSION}=${LIBNVINFER}+cuda11.0         libnvinfer-plugin${LIBNVINFER_MAJOR_VERSION}=${LIBNVINFER}+cuda11.0         && apt-get clean         && rm -rf /var/lib/apt/lists/*; }', 'ln -s /usr/local/cuda/lib64/stubs/libcuda.so /usr/local/cuda/lib64/stubs/libcuda.so.1     && echo ""/usr/local/cuda/lib64/stubs"" > /etc/ld.so.conf.d/z-cuda-stubs.conf     && ldconfig', 'apt-get update && apt-get install -y     python3     python3-pip', 'python3 -m pip --no-cache-dir install --upgrade     ""pip<20.3""     setuptools', 'ln -s $(which python3) /usr/local/bin/python', 'python3 -m pip install --no-cache-dir ${TF_PACKAGE}${TF_PACKAGE_VERSION:+==${TF_PACKAGE_VERSION}}', 'chmod a+rwx /etc/bash.bashrc']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/gpu.Dockerfile,COPY,1,['bashrc /etc/bash.bashrc']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/cpu-jupyter.Dockerfile,ARG,3,"['UBUNTU_VERSION=20.04', 'TF_PACKAGE=tensorflow', 'TF_PACKAGE_VERSION=']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/cpu-jupyter.Dockerfile,FROM,1,['ubuntu:${UBUNTU_VERSION} as base']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/cpu-jupyter.Dockerfile,ENV,2,"['DEBIAN_FRONTEND=noninteractive', 'LANG C.UTF-8']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/cpu-jupyter.Dockerfile,RUN,20,"['apt-get update && apt-get install -y curl', 'apt-get update && apt-get install -y     python3     python3-pip', 'python3 -m pip --no-cache-dir install --upgrade     ""pip<20.3""     setuptools', 'ln -s $(which python3) /usr/local/bin/python', 'python3 -m pip install --no-cache-dir ${TF_PACKAGE}${TF_PACKAGE_VERSION:+==${TF_PACKAGE_VERSION}}', 'chmod a+rwx /etc/bash.bashrc', 'python3 -m pip install --no-cache-dir jupyter matplotlib', 'python3 -m pip install --no-cache-dir jupyter_http_over_ws ipykernel==5.1.1 nbformat==4.4.0 jedi==0.17.2', 'jupyter serverextension enable --py jupyter_http_over_ws', 'mkdir -p /tf/tensorflow-tutorials && chmod -R a+rwx /tf/', 'mkdir /.local && chmod a+rwx /.local', 'apt-get update && apt-get install -y --no-install-recommends wget git', 'wget https://raw.githubusercontent.com/tensorflow/docs/master/site/en/tutorials/keras/classification.ipynb', 'wget https://raw.githubusercontent.com/tensorflow/docs/master/site/en/tutorials/keras/overfit_and_underfit.ipynb', 'wget https://raw.githubusercontent.com/tensorflow/docs/master/site/en/tutorials/keras/regression.ipynb', 'wget https://raw.githubusercontent.com/tensorflow/docs/master/site/en/tutorials/keras/save_and_load.ipynb', 'wget https://raw.githubusercontent.com/tensorflow/docs/master/site/en/tutorials/keras/text_classification.ipynb', 'wget https://raw.githubusercontent.com/tensorflow/docs/master/site/en/tutorials/keras/text_classification_with_hub.ipynb', 'apt-get autoremove -y && apt-get remove -y wget', 'python3 -m ipykernel.kernelspec']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/cpu-jupyter.Dockerfile,COPY,2,"['bashrc /etc/bash.bashrc', 'readme-for-jupyter.md README.md']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/cpu-jupyter.Dockerfile,WORKDIR,2,"['/tf/tensorflow-tutorials', '/tf']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/cpu-jupyter.Dockerfile,EXPOSE,1,['8888']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/cpu-jupyter.Dockerfile,CMD,1,"['[""bash"", ""-c"", ""source /etc/bash.bashrc && jupyter notebook --notebook-dir=/tf --ip 0.0.0.0 --no-browser --allow-root""]']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/ppc64le/devel-gpu-ppc64le-jupyter.Dockerfile,ARG,12,"['UBUNTU_VERSION=20.04', 'ARCH=', 'CUDA=11.2', 'ARCH', 'CUDA', 'CUDNN=8.1.0.77-1', 'CUDNN_MAJOR_VERSION=8', 'LIB_DIR_PREFIX=x86_64', 'LIBNVINFER=8.0.0-1', 'LIBNVINFER_MAJOR_VERSION=8', 'CACHE_STOP=1', 'CHECKOUT_TF_SRC=0']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/ppc64le/devel-gpu-ppc64le-jupyter.Dockerfile,FROM,1,['nvidia/cuda${ARCH:+-$ARCH}:${CUDA}.1-base-ubuntu${UBUNTU_VERSION} as base']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/ppc64le/devel-gpu-ppc64le-jupyter.Dockerfile,SHELL,1,"['[""/bin/bash"", ""-c""]']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/ppc64le/devel-gpu-ppc64le-jupyter.Dockerfile,ENV,8,"['DEBIAN_FRONTEND=noninteractive', 'LD_LIBRARY_PATH /usr/local/cuda/extras/CUPTI/lib64:/usr/local/cuda/lib64:/usr/include/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:$LD_LIBRARY_PATH:/usr/local/cuda/lib64/stubs:/usr/local/cuda-11.0/lib64:/usr/local/cuda-11.2/lib64', 'TF_NEED_CUDA 1', 'TF_NEED_TENSORRT 1', 'TF_CUDA_VERSION=${CUDA}', 'TF_CUDNN_VERSION=${CUDNN_MAJOR_VERSION}', 'LANG C.UTF-8', 'BAZEL_VERSION 4.2.2']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/ppc64le/devel-gpu-ppc64le-jupyter.Dockerfile,RUN,25,"[""apt-get update && apt-get install -y --no-install-recommends         build-essential         cuda-command-line-tools-${CUDA/./-}         libcublas-${CUDA/./-}         libcublas-dev-${CUDA/./-}         cuda-nvprune-${CUDA/./-}         cuda-nvrtc-${CUDA/./-}         cuda-nvrtc-dev-${CUDA/./-}         cuda-cudart-dev-${CUDA/./-}         libcufft-dev-${CUDA/./-}         libcurand-dev-${CUDA/./-}         libcusolver-dev-${CUDA/./-}         libcusparse-dev-${CUDA/./-}         libcudnn8=${CUDNN}+cuda${CUDA}         libcudnn8-dev=${CUDNN}+cuda${CUDA}         libcurl3-dev         libfreetype6-dev         libhdf5-serial-dev         libzmq3-dev         pkg-config         rsync         software-properties-common         unzip         zip         zlib1g-dev         wget         git         &&     find /usr/local/cuda-${CUDA}/lib64/ -type f -name 'lib*_static.a' -not -name 'libcudart_static.a' -delete &&     rm /usr/lib/${LIB_DIR_PREFIX}-linux-gnu/libcudnn_static_v8.a"", '[[ ""${ARCH}"" = ""ppc64le"" ]] || { apt-get update &&         apt-get install -y --no-install-recommends libnvinfer${LIBNVINFER_MAJOR_VERSION}=${LIBNVINFER}+cuda11.0         libnvinfer-dev=${LIBNVINFER}+cuda11.0         libnvinfer-plugin-dev=${LIBNVINFER}+cuda11.0         libnvinfer-plugin${LIBNVINFER_MAJOR_VERSION}=${LIBNVINFER}+cuda11.0         && apt-get clean         && rm -rf /var/lib/apt/lists/*; }', 'test ""${CHECKOUT_TF_SRC}"" -eq 1 && git clone https://github.com/tensorflow/tensorflow.git /tensorflow_src || true', 'ln -s /usr/local/cuda/lib64/stubs/libcuda.so /usr/local/cuda/lib64/stubs/libcuda.so.1     && echo ""/usr/local/cuda/lib64/stubs"" > /etc/ld.so.conf.d/z-cuda-stubs.conf     && ldconfig', 'apt-get update && apt-get install -y     python3     python3-pip', 'python3 -m pip --no-cache-dir install --upgrade     ""pip<20.3""     setuptools', 'ln -s $(which python3) /usr/local/bin/python', 'apt-get update && apt-get install -y     build-essential     curl     git     openjdk-8-jdk     python3-dev     virtualenv     swig', ""python3 -m pip --no-cache-dir install     Pillow     h5py     keras_preprocessing     tb-nightly     matplotlib     mock     'numpy<1.19.0'     scipy     sklearn     pandas     portpicker     enum34"", 'mkdir /bazel &&     cd /bazel &&     curl -fSsL -O https://github.com/bazelbuild/bazel/releases/download/$BAZEL_VERSION/bazel-$BAZEL_VERSION-dist.zip &&     unzip bazel-$BAZEL_VERSION-dist.zip &&     bash ./compile.sh &&     cp output/bazel /usr/local/bin/ &&     rm -rf /bazel &&     cd -', 'chmod a+rwx /etc/bash.bashrc', 'python3 -m pip install --no-cache-dir jupyter matplotlib', 'python3 -m pip install --no-cache-dir jupyter_http_over_ws ipykernel==5.1.1 nbformat==4.4.0 jedi==0.17.2', 'jupyter serverextension enable --py jupyter_http_over_ws', 'mkdir -p /tf/tensorflow-tutorials && chmod -R a+rwx /tf/', 'mkdir /.local && chmod a+rwx /.local', 'apt-get update && apt-get install -y --no-install-recommends wget git', 'wget https://raw.githubusercontent.com/tensorflow/docs/master/site/en/tutorials/keras/classification.ipynb', 'wget https://raw.githubusercontent.com/tensorflow/docs/master/site/en/tutorials/keras/overfit_and_underfit.ipynb', 'wget https://raw.githubusercontent.com/tensorflow/docs/master/site/en/tutorials/keras/regression.ipynb', 'wget https://raw.githubusercontent.com/tensorflow/docs/master/site/en/tutorials/keras/save_and_load.ipynb', 'wget https://raw.githubusercontent.com/tensorflow/docs/master/site/en/tutorials/keras/text_classification.ipynb', 'wget https://raw.githubusercontent.com/tensorflow/docs/master/site/en/tutorials/keras/text_classification_with_hub.ipynb', 'apt-get autoremove -y && apt-get remove -y wget', 'python3 -m ipykernel.kernelspec']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/ppc64le/devel-gpu-ppc64le-jupyter.Dockerfile,WORKDIR,3,"['/', '/tf/tensorflow-tutorials', '/tf']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/ppc64le/devel-gpu-ppc64le-jupyter.Dockerfile,COPY,2,"['bashrc /etc/bash.bashrc', 'readme-for-jupyter.md README.md']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/ppc64le/devel-gpu-ppc64le-jupyter.Dockerfile,EXPOSE,1,['8888']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/ppc64le/devel-gpu-ppc64le-jupyter.Dockerfile,CMD,1,"['[""bash"", ""-c"", ""source /etc/bash.bashrc && jupyter notebook --notebook-dir=/tf --ip 0.0.0.0 --no-browser --allow-root""]']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/ppc64le/cpu-ppc64le.Dockerfile,ARG,3,"['UBUNTU_VERSION=20.04', 'TF_PACKAGE=tensorflow', 'CACHE_STOP=1']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/ppc64le/cpu-ppc64le.Dockerfile,FROM,1,['ubuntu:${UBUNTU_VERSION} as base']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/ppc64le/cpu-ppc64le.Dockerfile,ENV,2,"['DEBIAN_FRONTEND=noninteractive', 'LANG C.UTF-8']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/ppc64le/cpu-ppc64le.Dockerfile,RUN,8,"['apt-get update && apt-get install -y curl', 'apt-get update && apt-get install -y     python3     python3-pip', 'python3 -m pip --no-cache-dir install --upgrade     ""pip<20.3""     setuptools', 'ln -s $(which python3) /usr/local/bin/python', 'apt-get update && apt-get install -y curl libhdf5-dev wget', 'python3 -m pip install --no-cache-dir --global-option=build_ext             --global-option=-I/usr/include/hdf5/serial/             --global-option=-L/usr/lib/powerpc64le-linux-gnu/hdf5/serial             h5py', 'if [ ${TF_PACKAGE} = tensorflow-gpu ]; then         BASE=https://powerci.osuosl.org/job/TensorFlow_PPC64LE_GPU_Release_Build/lastSuccessfulBuild/;     elif [ ${TF_PACKAGE} = tf-nightly-gpu ]; then         BASE=https://powerci.osuosl.org/job/TensorFlow_PPC64LE_GPU_Nightly_Artifact/lastSuccessfulBuild/;     elif [ ${TF_PACKAGE} = tensorflow ]; then         BASE=https://powerci.osuosl.org/job/TensorFlow_PPC64LE_CPU_Release_Build/lastSuccessfulBuild/;     elif [ ${TF_PACKAGE} = tf-nightly ]; then         BASE=https://powerci.osuosl.org/job/TensorFlow_PPC64LE_CPU_Nightly_Artifact/lastSuccessfulBuild/;     fi;     MAJOR=`python3 -c \'import sys; print(sys.version_info[0])\'`;     MINOR=`python3 -c \'import sys; print(sys.version_info[1])\'`;     PACKAGE=$(wget -qO- ${BASE}""api/xml?xpath=//fileName&wrapper=artifacts"" | grep -o ""[^<>]*cp${MAJOR}${MINOR}[^<>]*.whl"");     wget ${BASE}""artifact/tensorflow_pkg/""${PACKAGE};     python3 -m pip install --no-cache-dir ${PACKAGE}', 'chmod a+rwx /etc/bash.bashrc']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/ppc64le/cpu-ppc64le.Dockerfile,COPY,1,['bashrc /etc/bash.bashrc']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/ppc64le/cpu-ppc64le-jupyter.Dockerfile,ARG,3,"['UBUNTU_VERSION=20.04', 'TF_PACKAGE=tensorflow', 'CACHE_STOP=1']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/ppc64le/cpu-ppc64le-jupyter.Dockerfile,FROM,1,['ubuntu:${UBUNTU_VERSION} as base']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/ppc64le/cpu-ppc64le-jupyter.Dockerfile,ENV,2,"['DEBIAN_FRONTEND=noninteractive', 'LANG C.UTF-8']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/ppc64le/cpu-ppc64le-jupyter.Dockerfile,RUN,22,"['apt-get update && apt-get install -y curl', 'apt-get update && apt-get install -y     python3     python3-pip', 'python3 -m pip --no-cache-dir install --upgrade     ""pip<20.3""     setuptools', 'ln -s $(which python3) /usr/local/bin/python', 'apt-get update && apt-get install -y curl libhdf5-dev wget', 'python3 -m pip install --no-cache-dir --global-option=build_ext             --global-option=-I/usr/include/hdf5/serial/             --global-option=-L/usr/lib/powerpc64le-linux-gnu/hdf5/serial             h5py', 'if [ ${TF_PACKAGE} = tensorflow-gpu ]; then         BASE=https://powerci.osuosl.org/job/TensorFlow_PPC64LE_GPU_Release_Build/lastSuccessfulBuild/;     elif [ ${TF_PACKAGE} = tf-nightly-gpu ]; then         BASE=https://powerci.osuosl.org/job/TensorFlow_PPC64LE_GPU_Nightly_Artifact/lastSuccessfulBuild/;     elif [ ${TF_PACKAGE} = tensorflow ]; then         BASE=https://powerci.osuosl.org/job/TensorFlow_PPC64LE_CPU_Release_Build/lastSuccessfulBuild/;     elif [ ${TF_PACKAGE} = tf-nightly ]; then         BASE=https://powerci.osuosl.org/job/TensorFlow_PPC64LE_CPU_Nightly_Artifact/lastSuccessfulBuild/;     fi;     MAJOR=`python3 -c \'import sys; print(sys.version_info[0])\'`;     MINOR=`python3 -c \'import sys; print(sys.version_info[1])\'`;     PACKAGE=$(wget -qO- ${BASE}""api/xml?xpath=//fileName&wrapper=artifacts"" | grep -o ""[^<>]*cp${MAJOR}${MINOR}[^<>]*.whl"");     wget ${BASE}""artifact/tensorflow_pkg/""${PACKAGE};     python3 -m pip install --no-cache-dir ${PACKAGE}', 'chmod a+rwx /etc/bash.bashrc', 'python3 -m pip install --no-cache-dir jupyter matplotlib', 'python3 -m pip install --no-cache-dir jupyter_http_over_ws ipykernel==5.1.1 nbformat==4.4.0 jedi==0.17.2', 'jupyter serverextension enable --py jupyter_http_over_ws', 'mkdir -p /tf/tensorflow-tutorials && chmod -R a+rwx /tf/', 'mkdir /.local && chmod a+rwx /.local', 'apt-get update && apt-get install -y --no-install-recommends wget git', 'wget https://raw.githubusercontent.com/tensorflow/docs/master/site/en/tutorials/keras/classification.ipynb', 'wget https://raw.githubusercontent.com/tensorflow/docs/master/site/en/tutorials/keras/overfit_and_underfit.ipynb', 'wget https://raw.githubusercontent.com/tensorflow/docs/master/site/en/tutorials/keras/regression.ipynb', 'wget https://raw.githubusercontent.com/tensorflow/docs/master/site/en/tutorials/keras/save_and_load.ipynb', 'wget https://raw.githubusercontent.com/tensorflow/docs/master/site/en/tutorials/keras/text_classification.ipynb', 'wget https://raw.githubusercontent.com/tensorflow/docs/master/site/en/tutorials/keras/text_classification_with_hub.ipynb', 'apt-get autoremove -y && apt-get remove -y wget', 'python3 -m ipykernel.kernelspec']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/ppc64le/cpu-ppc64le-jupyter.Dockerfile,COPY,2,"['bashrc /etc/bash.bashrc', 'readme-for-jupyter.md README.md']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/ppc64le/cpu-ppc64le-jupyter.Dockerfile,WORKDIR,2,"['/tf/tensorflow-tutorials', '/tf']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/ppc64le/cpu-ppc64le-jupyter.Dockerfile,EXPOSE,1,['8888']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/ppc64le/cpu-ppc64le-jupyter.Dockerfile,CMD,1,"['[""bash"", ""-c"", ""source /etc/bash.bashrc && jupyter notebook --notebook-dir=/tf --ip 0.0.0.0 --no-browser --allow-root""]']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/ppc64le/gpu-ppc64le.Dockerfile,ARG,12,"['UBUNTU_VERSION=20.04', 'ARCH=', 'CUDA=11.2', 'ARCH', 'CUDA', 'CUDNN=8.1.0.77-1', 'CUDNN_MAJOR_VERSION=8', 'LIB_DIR_PREFIX=x86_64', 'LIBNVINFER=8.0.0-1', 'LIBNVINFER_MAJOR_VERSION=8', 'TF_PACKAGE=tensorflow', 'CACHE_STOP=1']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/ppc64le/gpu-ppc64le.Dockerfile,FROM,1,['nvidia/cuda${ARCH:+-$ARCH}:${CUDA}.1-base-ubuntu${UBUNTU_VERSION} as base']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/ppc64le/gpu-ppc64le.Dockerfile,ENV,3,"['DEBIAN_FRONTEND=noninteractive', 'LD_LIBRARY_PATH /usr/local/cuda/extras/CUPTI/lib64:/usr/local/cuda/lib64:$LD_LIBRARY_PATH', 'LANG C.UTF-8']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/ppc64le/gpu-ppc64le.Dockerfile,SHELL,1,"['[""/bin/bash"", ""-c""]']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/ppc64le/gpu-ppc64le.Dockerfile,RUN,10,"['apt-get update && apt-get install -y --no-install-recommends         build-essential         cuda-command-line-tools-${CUDA/./-}         libcublas-${CUDA/./-}         cuda-nvrtc-${CUDA/./-}         libcufft-${CUDA/./-}         libcurand-${CUDA/./-}         libcusolver-${CUDA/./-}         libcusparse-${CUDA/./-}         curl         libcudnn8=${CUDNN}+cuda${CUDA}         libfreetype6-dev         libhdf5-serial-dev         libzmq3-dev         pkg-config         software-properties-common         unzip', '[[ ""${ARCH}"" = ""ppc64le"" ]] || { apt-get update &&         apt-get install -y --no-install-recommends libnvinfer${LIBNVINFER_MAJOR_VERSION}=${LIBNVINFER}+cuda11.0         libnvinfer-plugin${LIBNVINFER_MAJOR_VERSION}=${LIBNVINFER}+cuda11.0         && apt-get clean         && rm -rf /var/lib/apt/lists/*; }', 'ln -s /usr/local/cuda/lib64/stubs/libcuda.so /usr/local/cuda/lib64/stubs/libcuda.so.1     && echo ""/usr/local/cuda/lib64/stubs"" > /etc/ld.so.conf.d/z-cuda-stubs.conf     && ldconfig', 'apt-get update && apt-get install -y     python3     python3-pip', 'python3 -m pip --no-cache-dir install --upgrade     ""pip<20.3""     setuptools', 'ln -s $(which python3) /usr/local/bin/python', 'apt-get update && apt-get install -y curl libhdf5-dev wget', 'python3 -m pip install --no-cache-dir --global-option=build_ext             --global-option=-I/usr/include/hdf5/serial/             --global-option=-L/usr/lib/powerpc64le-linux-gnu/hdf5/serial             h5py', 'if [ ${TF_PACKAGE} = tensorflow-gpu ]; then         BASE=https://powerci.osuosl.org/job/TensorFlow_PPC64LE_GPU_Release_Build/lastSuccessfulBuild/;     elif [ ${TF_PACKAGE} = tf-nightly-gpu ]; then         BASE=https://powerci.osuosl.org/job/TensorFlow_PPC64LE_GPU_Nightly_Artifact/lastSuccessfulBuild/;     elif [ ${TF_PACKAGE} = tensorflow ]; then         BASE=https://powerci.osuosl.org/job/TensorFlow_PPC64LE_CPU_Release_Build/lastSuccessfulBuild/;     elif [ ${TF_PACKAGE} = tf-nightly ]; then         BASE=https://powerci.osuosl.org/job/TensorFlow_PPC64LE_CPU_Nightly_Artifact/lastSuccessfulBuild/;     fi;     MAJOR=`python3 -c \'import sys; print(sys.version_info[0])\'`;     MINOR=`python3 -c \'import sys; print(sys.version_info[1])\'`;     PACKAGE=$(wget -qO- ${BASE}""api/xml?xpath=//fileName&wrapper=artifacts"" | grep -o ""[^<>]*cp${MAJOR}${MINOR}[^<>]*.whl"");     wget ${BASE}""artifact/tensorflow_pkg/""${PACKAGE};     python3 -m pip install --no-cache-dir ${PACKAGE}', 'chmod a+rwx /etc/bash.bashrc']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/ppc64le/gpu-ppc64le.Dockerfile,COPY,1,['bashrc /etc/bash.bashrc']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/ppc64le/gpu-ppc64le-jupyter.Dockerfile,ARG,12,"['UBUNTU_VERSION=20.04', 'ARCH=', 'CUDA=11.2', 'ARCH', 'CUDA', 'CUDNN=8.1.0.77-1', 'CUDNN_MAJOR_VERSION=8', 'LIB_DIR_PREFIX=x86_64', 'LIBNVINFER=8.0.0-1', 'LIBNVINFER_MAJOR_VERSION=8', 'TF_PACKAGE=tensorflow', 'CACHE_STOP=1']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/ppc64le/gpu-ppc64le-jupyter.Dockerfile,FROM,1,['nvidia/cuda${ARCH:+-$ARCH}:${CUDA}.1-base-ubuntu${UBUNTU_VERSION} as base']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/ppc64le/gpu-ppc64le-jupyter.Dockerfile,ENV,3,"['DEBIAN_FRONTEND=noninteractive', 'LD_LIBRARY_PATH /usr/local/cuda/extras/CUPTI/lib64:/usr/local/cuda/lib64:$LD_LIBRARY_PATH', 'LANG C.UTF-8']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/ppc64le/gpu-ppc64le-jupyter.Dockerfile,SHELL,1,"['[""/bin/bash"", ""-c""]']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/ppc64le/gpu-ppc64le-jupyter.Dockerfile,RUN,24,"['apt-get update && apt-get install -y --no-install-recommends         build-essential         cuda-command-line-tools-${CUDA/./-}         libcublas-${CUDA/./-}         cuda-nvrtc-${CUDA/./-}         libcufft-${CUDA/./-}         libcurand-${CUDA/./-}         libcusolver-${CUDA/./-}         libcusparse-${CUDA/./-}         curl         libcudnn8=${CUDNN}+cuda${CUDA}         libfreetype6-dev         libhdf5-serial-dev         libzmq3-dev         pkg-config         software-properties-common         unzip', '[[ ""${ARCH}"" = ""ppc64le"" ]] || { apt-get update &&         apt-get install -y --no-install-recommends libnvinfer${LIBNVINFER_MAJOR_VERSION}=${LIBNVINFER}+cuda11.0         libnvinfer-plugin${LIBNVINFER_MAJOR_VERSION}=${LIBNVINFER}+cuda11.0         && apt-get clean         && rm -rf /var/lib/apt/lists/*; }', 'ln -s /usr/local/cuda/lib64/stubs/libcuda.so /usr/local/cuda/lib64/stubs/libcuda.so.1     && echo ""/usr/local/cuda/lib64/stubs"" > /etc/ld.so.conf.d/z-cuda-stubs.conf     && ldconfig', 'apt-get update && apt-get install -y     python3     python3-pip', 'python3 -m pip --no-cache-dir install --upgrade     ""pip<20.3""     setuptools', 'ln -s $(which python3) /usr/local/bin/python', 'apt-get update && apt-get install -y curl libhdf5-dev wget', 'python3 -m pip install --no-cache-dir --global-option=build_ext             --global-option=-I/usr/include/hdf5/serial/             --global-option=-L/usr/lib/powerpc64le-linux-gnu/hdf5/serial             h5py', 'if [ ${TF_PACKAGE} = tensorflow-gpu ]; then         BASE=https://powerci.osuosl.org/job/TensorFlow_PPC64LE_GPU_Release_Build/lastSuccessfulBuild/;     elif [ ${TF_PACKAGE} = tf-nightly-gpu ]; then         BASE=https://powerci.osuosl.org/job/TensorFlow_PPC64LE_GPU_Nightly_Artifact/lastSuccessfulBuild/;     elif [ ${TF_PACKAGE} = tensorflow ]; then         BASE=https://powerci.osuosl.org/job/TensorFlow_PPC64LE_CPU_Release_Build/lastSuccessfulBuild/;     elif [ ${TF_PACKAGE} = tf-nightly ]; then         BASE=https://powerci.osuosl.org/job/TensorFlow_PPC64LE_CPU_Nightly_Artifact/lastSuccessfulBuild/;     fi;     MAJOR=`python3 -c \'import sys; print(sys.version_info[0])\'`;     MINOR=`python3 -c \'import sys; print(sys.version_info[1])\'`;     PACKAGE=$(wget -qO- ${BASE}""api/xml?xpath=//fileName&wrapper=artifacts"" | grep -o ""[^<>]*cp${MAJOR}${MINOR}[^<>]*.whl"");     wget ${BASE}""artifact/tensorflow_pkg/""${PACKAGE};     python3 -m pip install --no-cache-dir ${PACKAGE}', 'chmod a+rwx /etc/bash.bashrc', 'python3 -m pip install --no-cache-dir jupyter matplotlib', 'python3 -m pip install --no-cache-dir jupyter_http_over_ws ipykernel==5.1.1 nbformat==4.4.0 jedi==0.17.2', 'jupyter serverextension enable --py jupyter_http_over_ws', 'mkdir -p /tf/tensorflow-tutorials && chmod -R a+rwx /tf/', 'mkdir /.local && chmod a+rwx /.local', 'apt-get update && apt-get install -y --no-install-recommends wget git', 'wget https://raw.githubusercontent.com/tensorflow/docs/master/site/en/tutorials/keras/classification.ipynb', 'wget https://raw.githubusercontent.com/tensorflow/docs/master/site/en/tutorials/keras/overfit_and_underfit.ipynb', 'wget https://raw.githubusercontent.com/tensorflow/docs/master/site/en/tutorials/keras/regression.ipynb', 'wget https://raw.githubusercontent.com/tensorflow/docs/master/site/en/tutorials/keras/save_and_load.ipynb', 'wget https://raw.githubusercontent.com/tensorflow/docs/master/site/en/tutorials/keras/text_classification.ipynb', 'wget https://raw.githubusercontent.com/tensorflow/docs/master/site/en/tutorials/keras/text_classification_with_hub.ipynb', 'apt-get autoremove -y && apt-get remove -y wget', 'python3 -m ipykernel.kernelspec']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/ppc64le/gpu-ppc64le-jupyter.Dockerfile,COPY,2,"['bashrc /etc/bash.bashrc', 'readme-for-jupyter.md README.md']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/ppc64le/gpu-ppc64le-jupyter.Dockerfile,WORKDIR,2,"['/tf/tensorflow-tutorials', '/tf']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/ppc64le/gpu-ppc64le-jupyter.Dockerfile,EXPOSE,1,['8888']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/ppc64le/gpu-ppc64le-jupyter.Dockerfile,CMD,1,"['[""bash"", ""-c"", ""source /etc/bash.bashrc && jupyter notebook --notebook-dir=/tf --ip 0.0.0.0 --no-browser --allow-root""]']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/ppc64le/devel-cpu-ppc64le.Dockerfile,ARG,3,"['UBUNTU_VERSION=20.04', 'CACHE_STOP=1', 'CHECKOUT_TF_SRC=0']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/ppc64le/devel-cpu-ppc64le.Dockerfile,FROM,1,['ubuntu:${UBUNTU_VERSION} AS base']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/ppc64le/devel-cpu-ppc64le.Dockerfile,ENV,4,"['DEBIAN_FRONTEND=noninteractive', 'CI_BUILD_PYTHON python', 'LANG C.UTF-8', 'BAZEL_VERSION 4.2.2']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/ppc64le/devel-cpu-ppc64le.Dockerfile,RUN,10,"['apt-get update && apt-get install -y --no-install-recommends         build-essential         curl         git         libcurl3-dev         libfreetype6-dev         libhdf5-serial-dev         libzmq3-dev         pkg-config         rsync         software-properties-common         sudo         unzip         zip         zlib1g-dev         openjdk-8-jdk         openjdk-8-jre-headless         &&     apt-get clean &&     rm -rf /var/lib/apt/lists/*', 'chmod a+w /etc/passwd /etc/group', 'test ""${CHECKOUT_TF_SRC}"" -eq 1 && git clone https://github.com/tensorflow/tensorflow.git /tensorflow_src || true', 'apt-get update && apt-get install -y     python3     python3-pip', 'python3 -m pip --no-cache-dir install --upgrade     ""pip<20.3""     setuptools', 'ln -s $(which python3) /usr/local/bin/python', 'apt-get update && apt-get install -y     build-essential     curl     git     openjdk-8-jdk     python3-dev     virtualenv     swig', ""python3 -m pip --no-cache-dir install     Pillow     h5py     keras_preprocessing     tb-nightly     matplotlib     mock     'numpy<1.19.0'     scipy     sklearn     pandas     portpicker     enum34"", 'mkdir /bazel &&     cd /bazel &&     curl -fSsL -O https://github.com/bazelbuild/bazel/releases/download/$BAZEL_VERSION/bazel-$BAZEL_VERSION-dist.zip &&     unzip bazel-$BAZEL_VERSION-dist.zip &&     bash ./compile.sh &&     cp output/bazel /usr/local/bin/ &&     rm -rf /bazel &&     cd -', 'chmod a+rwx /etc/bash.bashrc']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/ppc64le/devel-cpu-ppc64le.Dockerfile,WORKDIR,1,['/']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/ppc64le/devel-cpu-ppc64le.Dockerfile,COPY,1,['bashrc /etc/bash.bashrc']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/ppc64le/devel-cpu-ppc64le-jupyter.Dockerfile,ARG,3,"['UBUNTU_VERSION=20.04', 'CACHE_STOP=1', 'CHECKOUT_TF_SRC=0']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/ppc64le/devel-cpu-ppc64le-jupyter.Dockerfile,FROM,1,['ubuntu:${UBUNTU_VERSION} AS base']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/ppc64le/devel-cpu-ppc64le-jupyter.Dockerfile,ENV,4,"['DEBIAN_FRONTEND=noninteractive', 'CI_BUILD_PYTHON python', 'LANG C.UTF-8', 'BAZEL_VERSION 4.2.2']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/ppc64le/devel-cpu-ppc64le-jupyter.Dockerfile,RUN,24,"['apt-get update && apt-get install -y --no-install-recommends         build-essential         curl         git         libcurl3-dev         libfreetype6-dev         libhdf5-serial-dev         libzmq3-dev         pkg-config         rsync         software-properties-common         sudo         unzip         zip         zlib1g-dev         openjdk-8-jdk         openjdk-8-jre-headless         &&     apt-get clean &&     rm -rf /var/lib/apt/lists/*', 'chmod a+w /etc/passwd /etc/group', 'test ""${CHECKOUT_TF_SRC}"" -eq 1 && git clone https://github.com/tensorflow/tensorflow.git /tensorflow_src || true', 'apt-get update && apt-get install -y     python3     python3-pip', 'python3 -m pip --no-cache-dir install --upgrade     ""pip<20.3""     setuptools', 'ln -s $(which python3) /usr/local/bin/python', 'apt-get update && apt-get install -y     build-essential     curl     git     openjdk-8-jdk     python3-dev     virtualenv     swig', ""python3 -m pip --no-cache-dir install     Pillow     h5py     keras_preprocessing     tb-nightly     matplotlib     mock     'numpy<1.19.0'     scipy     sklearn     pandas     portpicker     enum34"", 'mkdir /bazel &&     cd /bazel &&     curl -fSsL -O https://github.com/bazelbuild/bazel/releases/download/$BAZEL_VERSION/bazel-$BAZEL_VERSION-dist.zip &&     unzip bazel-$BAZEL_VERSION-dist.zip &&     bash ./compile.sh &&     cp output/bazel /usr/local/bin/ &&     rm -rf /bazel &&     cd -', 'chmod a+rwx /etc/bash.bashrc', 'python3 -m pip install --no-cache-dir jupyter matplotlib', 'python3 -m pip install --no-cache-dir jupyter_http_over_ws ipykernel==5.1.1 nbformat==4.4.0 jedi==0.17.2', 'jupyter serverextension enable --py jupyter_http_over_ws', 'mkdir -p /tf/tensorflow-tutorials && chmod -R a+rwx /tf/', 'mkdir /.local && chmod a+rwx /.local', 'apt-get update && apt-get install -y --no-install-recommends wget git', 'wget https://raw.githubusercontent.com/tensorflow/docs/master/site/en/tutorials/keras/classification.ipynb', 'wget https://raw.githubusercontent.com/tensorflow/docs/master/site/en/tutorials/keras/overfit_and_underfit.ipynb', 'wget https://raw.githubusercontent.com/tensorflow/docs/master/site/en/tutorials/keras/regression.ipynb', 'wget https://raw.githubusercontent.com/tensorflow/docs/master/site/en/tutorials/keras/save_and_load.ipynb', 'wget https://raw.githubusercontent.com/tensorflow/docs/master/site/en/tutorials/keras/text_classification.ipynb', 'wget https://raw.githubusercontent.com/tensorflow/docs/master/site/en/tutorials/keras/text_classification_with_hub.ipynb', 'apt-get autoremove -y && apt-get remove -y wget', 'python3 -m ipykernel.kernelspec']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/ppc64le/devel-cpu-ppc64le-jupyter.Dockerfile,WORKDIR,3,"['/', '/tf/tensorflow-tutorials', '/tf']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/ppc64le/devel-cpu-ppc64le-jupyter.Dockerfile,COPY,2,"['bashrc /etc/bash.bashrc', 'readme-for-jupyter.md README.md']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/ppc64le/devel-cpu-ppc64le-jupyter.Dockerfile,EXPOSE,1,['8888']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/ppc64le/devel-cpu-ppc64le-jupyter.Dockerfile,CMD,1,"['[""bash"", ""-c"", ""source /etc/bash.bashrc && jupyter notebook --notebook-dir=/tf --ip 0.0.0.0 --no-browser --allow-root""]']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/ppc64le/devel-gpu-ppc64le.Dockerfile,ARG,12,"['UBUNTU_VERSION=20.04', 'ARCH=', 'CUDA=11.2', 'ARCH', 'CUDA', 'CUDNN=8.1.0.77-1', 'CUDNN_MAJOR_VERSION=8', 'LIB_DIR_PREFIX=x86_64', 'LIBNVINFER=8.0.0-1', 'LIBNVINFER_MAJOR_VERSION=8', 'CACHE_STOP=1', 'CHECKOUT_TF_SRC=0']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/ppc64le/devel-gpu-ppc64le.Dockerfile,FROM,1,['nvidia/cuda${ARCH:+-$ARCH}:${CUDA}.1-base-ubuntu${UBUNTU_VERSION} as base']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/ppc64le/devel-gpu-ppc64le.Dockerfile,SHELL,1,"['[""/bin/bash"", ""-c""]']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/ppc64le/devel-gpu-ppc64le.Dockerfile,ENV,8,"['DEBIAN_FRONTEND=noninteractive', 'LD_LIBRARY_PATH /usr/local/cuda/extras/CUPTI/lib64:/usr/local/cuda/lib64:/usr/include/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:$LD_LIBRARY_PATH:/usr/local/cuda/lib64/stubs:/usr/local/cuda-11.0/lib64:/usr/local/cuda-11.2/lib64', 'TF_NEED_CUDA 1', 'TF_NEED_TENSORRT 1', 'TF_CUDA_VERSION=${CUDA}', 'TF_CUDNN_VERSION=${CUDNN_MAJOR_VERSION}', 'LANG C.UTF-8', 'BAZEL_VERSION 4.2.2']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/ppc64le/devel-gpu-ppc64le.Dockerfile,RUN,11,"[""apt-get update && apt-get install -y --no-install-recommends         build-essential         cuda-command-line-tools-${CUDA/./-}         libcublas-${CUDA/./-}         libcublas-dev-${CUDA/./-}         cuda-nvprune-${CUDA/./-}         cuda-nvrtc-${CUDA/./-}         cuda-nvrtc-dev-${CUDA/./-}         cuda-cudart-dev-${CUDA/./-}         libcufft-dev-${CUDA/./-}         libcurand-dev-${CUDA/./-}         libcusolver-dev-${CUDA/./-}         libcusparse-dev-${CUDA/./-}         libcudnn8=${CUDNN}+cuda${CUDA}         libcudnn8-dev=${CUDNN}+cuda${CUDA}         libcurl3-dev         libfreetype6-dev         libhdf5-serial-dev         libzmq3-dev         pkg-config         rsync         software-properties-common         unzip         zip         zlib1g-dev         wget         git         &&     find /usr/local/cuda-${CUDA}/lib64/ -type f -name 'lib*_static.a' -not -name 'libcudart_static.a' -delete &&     rm /usr/lib/${LIB_DIR_PREFIX}-linux-gnu/libcudnn_static_v8.a"", '[[ ""${ARCH}"" = ""ppc64le"" ]] || { apt-get update &&         apt-get install -y --no-install-recommends libnvinfer${LIBNVINFER_MAJOR_VERSION}=${LIBNVINFER}+cuda11.0         libnvinfer-dev=${LIBNVINFER}+cuda11.0         libnvinfer-plugin-dev=${LIBNVINFER}+cuda11.0         libnvinfer-plugin${LIBNVINFER_MAJOR_VERSION}=${LIBNVINFER}+cuda11.0         && apt-get clean         && rm -rf /var/lib/apt/lists/*; }', 'test ""${CHECKOUT_TF_SRC}"" -eq 1 && git clone https://github.com/tensorflow/tensorflow.git /tensorflow_src || true', 'ln -s /usr/local/cuda/lib64/stubs/libcuda.so /usr/local/cuda/lib64/stubs/libcuda.so.1     && echo ""/usr/local/cuda/lib64/stubs"" > /etc/ld.so.conf.d/z-cuda-stubs.conf     && ldconfig', 'apt-get update && apt-get install -y     python3     python3-pip', 'python3 -m pip --no-cache-dir install --upgrade     ""pip<20.3""     setuptools', 'ln -s $(which python3) /usr/local/bin/python', 'apt-get update && apt-get install -y     build-essential     curl     git     openjdk-8-jdk     python3-dev     virtualenv     swig', ""python3 -m pip --no-cache-dir install     Pillow     h5py     keras_preprocessing     tb-nightly     matplotlib     mock     'numpy<1.19.0'     scipy     sklearn     pandas     portpicker     enum34"", 'mkdir /bazel &&     cd /bazel &&     curl -fSsL -O https://github.com/bazelbuild/bazel/releases/download/$BAZEL_VERSION/bazel-$BAZEL_VERSION-dist.zip &&     unzip bazel-$BAZEL_VERSION-dist.zip &&     bash ./compile.sh &&     cp output/bazel /usr/local/bin/ &&     rm -rf /bazel &&     cd -', 'chmod a+rwx /etc/bash.bashrc']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/ppc64le/devel-gpu-ppc64le.Dockerfile,WORKDIR,1,['/']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/ppc64le/devel-gpu-ppc64le.Dockerfile,COPY,1,['bashrc /etc/bash.bashrc']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/arm64v8/devel-cpu-arm64v8-jupyter.Dockerfile,ARG,3,"['UBUNTU_VERSION=20.04', 'CACHE_STOP=1', 'CHECKOUT_TF_SRC=0']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/arm64v8/devel-cpu-arm64v8-jupyter.Dockerfile,FROM,1,['ubuntu:${UBUNTU_VERSION} AS base']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/arm64v8/devel-cpu-arm64v8-jupyter.Dockerfile,ENV,4,"['DEBIAN_FRONTEND=noninteractive', 'CI_BUILD_PYTHON python', 'LANG C.UTF-8', 'BAZEL_VERSION 4.2.2']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/arm64v8/devel-cpu-arm64v8-jupyter.Dockerfile,RUN,25,"['apt-get update && apt-get install -y --no-install-recommends         build-essential         curl         git         libcurl3-dev         libfreetype6-dev         libhdf5-serial-dev         libzmq3-dev         pkg-config         rsync         software-properties-common         sudo         unzip         zip         zlib1g-dev         openjdk-8-jdk         openjdk-8-jre-headless         &&     apt-get clean &&     rm -rf /var/lib/apt/lists/*', 'chmod a+w /etc/passwd /etc/group', 'test ""${CHECKOUT_TF_SRC}"" -eq 1 && git clone https://github.com/tensorflow/tensorflow.git /tensorflow_src || true', 'apt-get update && apt-get install -y     python3     python3-pip', 'python3 -m pip --no-cache-dir install --upgrade     ""pip<20.3""     setuptools', 'ln -s $(which python3) /usr/local/bin/python', 'apt-get update && apt-get install -y     build-essential     curl     git     openjdk-8-jdk     python3-dev     virtualenv     swig', 'apt-get update && apt-get install -y     gfortran     libblas-dev     liblapack-dev', ""python3 -m pip --no-cache-dir install     Pillow     keras_preprocessing     tb-nightly     h5py     matplotlib     mock     'numpy<1.19.0'     scipy     sklearn     pandas     portpicker     enum34"", 'mkdir /bazel &&     cd /bazel &&     curl -fSsL -O https://github.com/bazelbuild/bazel/releases/download/$BAZEL_VERSION/bazel-$BAZEL_VERSION-dist.zip &&     unzip bazel-$BAZEL_VERSION-dist.zip &&     bash ./compile.sh &&     cp output/bazel /usr/local/bin/ &&     rm -rf /bazel &&     cd -', 'chmod a+rwx /etc/bash.bashrc', 'python3 -m pip install --no-cache-dir jupyter matplotlib', 'python3 -m pip install --no-cache-dir jupyter_http_over_ws ipykernel==5.1.1 nbformat==4.4.0 jedi==0.17.2', 'jupyter serverextension enable --py jupyter_http_over_ws', 'mkdir -p /tf/tensorflow-tutorials && chmod -R a+rwx /tf/', 'mkdir /.local && chmod a+rwx /.local', 'apt-get update && apt-get install -y --no-install-recommends wget git', 'wget https://raw.githubusercontent.com/tensorflow/docs/master/site/en/tutorials/keras/classification.ipynb', 'wget https://raw.githubusercontent.com/tensorflow/docs/master/site/en/tutorials/keras/overfit_and_underfit.ipynb', 'wget https://raw.githubusercontent.com/tensorflow/docs/master/site/en/tutorials/keras/regression.ipynb', 'wget https://raw.githubusercontent.com/tensorflow/docs/master/site/en/tutorials/keras/save_and_load.ipynb', 'wget https://raw.githubusercontent.com/tensorflow/docs/master/site/en/tutorials/keras/text_classification.ipynb', 'wget https://raw.githubusercontent.com/tensorflow/docs/master/site/en/tutorials/keras/text_classification_with_hub.ipynb', 'apt-get autoremove -y && apt-get remove -y wget', 'python3 -m ipykernel.kernelspec']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/arm64v8/devel-cpu-arm64v8-jupyter.Dockerfile,WORKDIR,3,"['/', '/tf/tensorflow-tutorials', '/tf']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/arm64v8/devel-cpu-arm64v8-jupyter.Dockerfile,COPY,2,"['bashrc /etc/bash.bashrc', 'readme-for-jupyter.md README.md']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/arm64v8/devel-cpu-arm64v8-jupyter.Dockerfile,EXPOSE,1,['8888']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/arm64v8/devel-cpu-arm64v8-jupyter.Dockerfile,CMD,1,"['[""bash"", ""-c"", ""source /etc/bash.bashrc && jupyter notebook --notebook-dir=/tf --ip 0.0.0.0 --no-browser --allow-root""]']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/arm64v8/devel-cpu-arm64v8.Dockerfile,ARG,3,"['UBUNTU_VERSION=20.04', 'CACHE_STOP=1', 'CHECKOUT_TF_SRC=0']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/arm64v8/devel-cpu-arm64v8.Dockerfile,FROM,1,['ubuntu:${UBUNTU_VERSION} AS base']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/arm64v8/devel-cpu-arm64v8.Dockerfile,ENV,4,"['DEBIAN_FRONTEND=noninteractive', 'CI_BUILD_PYTHON python', 'LANG C.UTF-8', 'BAZEL_VERSION 4.2.2']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/arm64v8/devel-cpu-arm64v8.Dockerfile,RUN,11,"['apt-get update && apt-get install -y --no-install-recommends         build-essential         curl         git         libcurl3-dev         libfreetype6-dev         libhdf5-serial-dev         libzmq3-dev         pkg-config         rsync         software-properties-common         sudo         unzip         zip         zlib1g-dev         openjdk-8-jdk         openjdk-8-jre-headless         &&     apt-get clean &&     rm -rf /var/lib/apt/lists/*', 'chmod a+w /etc/passwd /etc/group', 'test ""${CHECKOUT_TF_SRC}"" -eq 1 && git clone https://github.com/tensorflow/tensorflow.git /tensorflow_src || true', 'apt-get update && apt-get install -y     python3     python3-pip', 'python3 -m pip --no-cache-dir install --upgrade     ""pip<20.3""     setuptools', 'ln -s $(which python3) /usr/local/bin/python', 'apt-get update && apt-get install -y     build-essential     curl     git     openjdk-8-jdk     python3-dev     virtualenv     swig', 'apt-get update && apt-get install -y     gfortran     libblas-dev     liblapack-dev', ""python3 -m pip --no-cache-dir install     Pillow     keras_preprocessing     tb-nightly     h5py     matplotlib     mock     'numpy<1.19.0'     scipy     sklearn     pandas     portpicker     enum34"", 'mkdir /bazel &&     cd /bazel &&     curl -fSsL -O https://github.com/bazelbuild/bazel/releases/download/$BAZEL_VERSION/bazel-$BAZEL_VERSION-dist.zip &&     unzip bazel-$BAZEL_VERSION-dist.zip &&     bash ./compile.sh &&     cp output/bazel /usr/local/bin/ &&     rm -rf /bazel &&     cd -', 'chmod a+rwx /etc/bash.bashrc']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/arm64v8/devel-cpu-arm64v8.Dockerfile,WORKDIR,1,['/']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/arm64v8/devel-cpu-arm64v8.Dockerfile,COPY,1,['bashrc /etc/bash.bashrc']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-16.04.Dockerfile,ARG,4,"['UBUNTU_VERSION=20.04', 'PYTHON=python3', 'TF_PACKAGE=tensorflow', 'TF_PACKAGE_VERSION=']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-16.04.Dockerfile,FROM,1,['ubuntu:${UBUNTU_VERSION} as base']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-16.04.Dockerfile,ENV,1,['LANG C.UTF-8']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-16.04.Dockerfile,RUN,8,"['apt-get update && apt-get install -y --no-install-recommends --fix-missing     curl     software-properties-common', 'add-apt-repository ppa:deadsnakes/ppa', 'apt-get update && apt-get install -y --no-install-recommends --fix-missing     ${PYTHON}', 'curl -fSsL https://bootstrap.pypa.io/get-pip.py | ${PYTHON}', '${PYTHON} -m pip --no-cache-dir install --upgrade     pip     setuptools', 'ln -sf $(which ${PYTHON}) /usr/local/bin/python &&     ln -sf $(which ${PYTHON}) /usr/local/bin/python3 &&     ln -sf $(which ${PYTHON}) /usr/bin/python &&     ln -sf $(which ${PYTHON}) /usr/bin/python3', 'python3 -m pip install --no-cache-dir ${TF_PACKAGE}${TF_PACKAGE_VERSION:+==${TF_PACKAGE_VERSION}}', 'chmod a+rwx /etc/bash.bashrc']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-16.04.Dockerfile,COPY,1,['bashrc /etc/bash.bashrc']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-16.04-mpich-horovod.Dockerfile,ARG,9,"['UBUNTU_VERSION=20.04', 'PYTHON=python3', 'TF_PACKAGE=tensorflow', 'TF_PACKAGE_VERSION=', 'DEBIAN_FRONTEND=""noninteractive""', 'HOROVOD_WITHOUT_PYTORCH=1', 'HOROVOD_WITHOUT_MXNET=1', 'HOROVOD_WITH_TENSORFLOW=1', 'HOROVOD_VERSION=v0.21.1']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-16.04-mpich-horovod.Dockerfile,FROM,1,['ubuntu:${UBUNTU_VERSION} as base']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-16.04-mpich-horovod.Dockerfile,ENV,1,['LANG C.UTF-8']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-16.04-mpich-horovod.Dockerfile,RUN,19,"['apt-get update && apt-get install -y --no-install-recommends --fix-missing     curl     software-properties-common', 'add-apt-repository ppa:deadsnakes/ppa', 'apt-get update && apt-get install -y --no-install-recommends --fix-missing     ${PYTHON}', 'curl -fSsL https://bootstrap.pypa.io/get-pip.py | ${PYTHON}', '${PYTHON} -m pip --no-cache-dir install --upgrade     pip     setuptools', 'ln -sf $(which ${PYTHON}) /usr/local/bin/python &&     ln -sf $(which ${PYTHON}) /usr/local/bin/python3 &&     ln -sf $(which ${PYTHON}) /usr/bin/python &&     ln -sf $(which ${PYTHON}) /usr/bin/python3', 'python3 -m pip install --no-cache-dir ${TF_PACKAGE}${TF_PACKAGE_VERSION:+==${TF_PACKAGE_VERSION}}', 'apt-get update && apt-get install -y --no-install-recommends --fix-missing     mpich     libmpich-dev     openssh-client     openssh-server &&     apt-get clean &&     rm -rf /var/lib/apt/lists/*', 'mv /usr/bin/mpirun /usr/bin/mpirun.real &&     echo \'#!/bin/bash\' > /usr/bin/mpirun &&     echo \'mpirun.real ""$@""\' >> /usr/bin/mpirun &&     chmod a+x /usr/bin/mpirun', ""sed -i 's/# if __GNUC__ > 5/# if __GNUC__ > 9/g' /usr/include/mpich/mpicxx.h"", 'mkdir -p /var/run/sshd', 'cat /etc/ssh/ssh_config | grep -v StrictHostKeyChecking > /etc/ssh/ssh_config.new &&     echo ""    StrictHostKeyChecking no"" >> /etc/ssh/ssh_config.new &&     mv /etc/ssh/ssh_config.new /etc/ssh/ssh_config', 'apt-get update && apt-get install -y --no-install-recommends --fix-missing     software-properties-common', 'cd /usr/lib/python3/dist-packages &&     ln -sf apt_pkg.cpython-35m-x86_64-linux-gnu.so apt_pkg.so', 'add-apt-repository ppa:ubuntu-toolchain-r/test', 'apt-get update && apt-get install -y --no-install-recommends --fix-missing     build-essential     cmake     g++-8     gcc-8     git     ${PYTHON}-dev', 'update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-5 500 --slave /usr/bin/g++ g++ /usr/bin/g++-5 &&     update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 800 --slave /usr/bin/g++ g++ /usr/bin/g++-8', '${PYTHON} -m pip install git+https://github.com/horovod/horovod.git@${HOROVOD_VERSION}', 'chmod a+rwx /etc/bash.bashrc']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-16.04-mpich-horovod.Dockerfile,COPY,1,['bashrc /etc/bash.bashrc']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/centos-7-devel-mpi-horovod-jupyter.Dockerfile,ARG,8,"['CENTOS_VERSION=8', 'CACHE_STOP=1', 'CHECKOUT_TF_SRC=0', 'TF_BRANCH=master', 'PYTHON=python3', 'BAZEL_VERSION=4.2.2', 'CHECKOUT_HOROVOD_SRC=0', 'HOROVOD_BRANCH=master']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/centos-7-devel-mpi-horovod-jupyter.Dockerfile,FROM,1,['centos:${CENTOS_VERSION} AS base']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/centos-7-devel-mpi-horovod-jupyter.Dockerfile,RUN,21,"['yum clean all &&     yum update -y &&     yum install -y epel-release', 'yum update -y &&     yum install -y         curl         freetype-devel         gcc         gcc-c++         git         hdf5-devel         java-1.8.0-openjdk         java-1.8.0-openjdk-devel         java-1.8.0-openjdk-headless         libcurl-devel         make         pkg-config         rsync         sudo         unzip         zeromq-devel         zip         zlib-devel &&         yum clean all', 'test ""${CHECKOUT_TF_SRC}"" -eq 1 && git clone https://github.com/tensorflow/tensorflow.git --branch ""${TF_BRANCH}"" --single-branch /tensorflow_src || true', 'yum update -y && yum install -y     ${PYTHON}     ${PYTHON}-pip     which &&     yum clean all', '${PYTHON} -m pip --no-cache-dir install --upgrade     pip     setuptools', 'ln -sf $(which ${PYTHON}) /usr/local/bin/python &&     ln -sf $(which ${PYTHON}) /usr/local/bin/python3 &&     ln -sf $(which ${PYTHON}) /usr/bin/python', ""sed -i 's#/usr/bin/python#/usr/bin/python2#g' /usr/bin/yum /usr/libexec/urlgrabber-ext-down"", 'mkdir /bazel &&     curl -fSsL -o /bazel/installer.sh ""https://github.com/bazelbuild/bazel/releases/download/${BAZEL_VERSION}/bazel-${BAZEL_VERSION}-installer-linux-x86_64.sh"" &&     curl -fSsL -o /bazel/LICENSE.txt ""https://raw.githubusercontent.com/bazelbuild/bazel/master/LICENSE"" &&     bash /bazel/installer.sh &&     rm -f /bazel/installer.sh', 'yum update -y && yum install -y     openmpi     openmpi-devel     openssh     openssh-server     which &&     yum clean all', 'mv -f $(which mpirun) /usr/bin/mpirun.real &&     echo \'#!/bin/bash\' > /usr/bin/mpirun &&     echo \'mpirun.real --allow-run-as-root ""$@""\' >> /usr/bin/mpirun &&     chmod a+x /usr/bin/mpirun', 'echo ""btl_tcp_if_exclude = lo,docker0"" >> /etc/openmpi-x86_64/openmpi-mca-params.conf', 'mkdir -p /var/run/sshd', 'cat /etc/ssh/sshd_config | grep -v StrictHostKeyChecking > /etc/ssh/sshd_config.new &&     echo ""    StrictHostKeyChecking no"" >> /etc/ssh/sshd_config.new &&     mv -f /etc/ssh/sshd_config.new /etc/ssh/sshd_config', 'test ""${CHECKOUT_HOROVOD_SRC}"" -eq 1 && git clone --branch ""${HOROVOD_BRANCH}"" --single-branch --recursive https://github.com/uber/horovod.git /horovod_src || true', 'chmod a+rwx /etc/bash.bashrc', '${PYTHON} -m pip install --no-cache-dir jupyter matplotlib', '${PYTHON} -m pip install --no-cache-dir jupyter_http_over_ws ipykernel==5.1.1 nbformat==4.4.0', 'jupyter serverextension enable --py jupyter_http_over_ws', 'mkdir -p /tf/ && chmod -R a+rwx /tf/', 'mkdir /.local && chmod a+rwx /.local', '${PYTHON} -m ipykernel.kernelspec']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/centos-7-devel-mpi-horovod-jupyter.Dockerfile,ENV,3,"['CI_BUILD_PYTHON python', 'LANG C.UTF-8', 'PATH=""/usr/lib64/openmpi/bin:${PATH}""']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/centos-7-devel-mpi-horovod-jupyter.Dockerfile,COPY,1,['bashrc /etc/bash.bashrc']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/centos-7-devel-mpi-horovod-jupyter.Dockerfile,WORKDIR,1,['/tf']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/centos-7-devel-mpi-horovod-jupyter.Dockerfile,EXPOSE,1,['8888']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/centos-7-devel-mpi-horovod-jupyter.Dockerfile,CMD,1,"['[""bash"", ""-c"", ""source /etc/bash.bashrc && jupyter notebook --notebook-dir=/tf --ip 0.0.0.0 --no-browser --allow-root""]']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-18.04-devel-mpi-horovod.Dockerfile,ARG,10,"['UBUNTU_VERSION=20.04', 'DEBIAN_FRONTEND=""noninteractive""', 'CACHE_STOP=1', 'CHECKOUT_TF_SRC=0', 'TF_BRANCH=master', 'PYTHON=python3', 'BAZEL_VERSION=4.2.2', 'DEBIAN_FRONTEND=""noninteractive""', 'CHECKOUT_HOROVOD_SRC=0', 'HOROVOD_BRANCH=master']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-18.04-devel-mpi-horovod.Dockerfile,FROM,1,['ubuntu:${UBUNTU_VERSION} AS base']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-18.04-devel-mpi-horovod.Dockerfile,RUN,14,"['apt-get update && apt-get install -y --no-install-recommends --fix-missing         build-essential         curl         git         libcurl3-dev         libfreetype6-dev         libhdf5-serial-dev         libzmq3-dev         pkg-config         rsync         software-properties-common         sudo         unzip         zip         zlib1g-dev         openjdk-8-jdk         openjdk-8-jre-headless         &&     apt-get clean &&     rm -rf /var/lib/apt/lists/*', 'test ""${CHECKOUT_TF_SRC}"" -eq 1 && git clone https://github.com/tensorflow/tensorflow.git --branch ""${TF_BRANCH}"" --single-branch /tensorflow_src || true', 'apt-get update && apt-get install -y --no-install-recommends --fix-missing     ${PYTHON}     ${PYTHON}-pip', '${PYTHON} -m pip --no-cache-dir install --upgrade     pip     setuptools', 'ln -s $(which ${PYTHON}) /usr/local/bin/python', 'apt-get update && apt-get install -y --no-install-recommends --fix-missing     curl', 'mkdir /bazel &&     curl -fSsL -o /bazel/installer.sh ""https://github.com/bazelbuild/bazel/releases/download/${BAZEL_VERSION}/bazel-${BAZEL_VERSION}-installer-linux-x86_64.sh"" &&     curl -fSsL -o /bazel/LICENSE.txt ""https://raw.githubusercontent.com/bazelbuild/bazel/master/LICENSE"" &&     bash /bazel/installer.sh &&     rm -f /bazel/installer.sh', 'apt-get update && apt-get install -y --no-install-recommends --fix-missing     libopenmpi-dev     openmpi-bin     openmpi-common     openssh-client     openssh-server &&     apt-get clean &&     rm -rf /var/lib/apt/lists/*', 'mv /usr/bin/mpirun /usr/bin/mpirun.real &&     echo \'#!/bin/bash\' > /usr/bin/mpirun &&     echo \'mpirun.real --allow-run-as-root ""$@""\' >> /usr/bin/mpirun &&     chmod a+x /usr/bin/mpirun', 'echo ""btl_tcp_if_exclude = lo,docker0"" >> /etc/openmpi/openmpi-mca-params.conf', 'mkdir -p /var/run/sshd', 'cat /etc/ssh/ssh_config | grep -v StrictHostKeyChecking > /etc/ssh/ssh_config.new &&     echo ""    StrictHostKeyChecking no"" >> /etc/ssh/ssh_config.new &&     mv /etc/ssh/ssh_config.new /etc/ssh/ssh_config', 'test ""${CHECKOUT_HOROVOD_SRC}"" -eq 1 && git clone --branch ""${HOROVOD_BRANCH}"" --single-branch --recursive https://github.com/uber/horovod.git /horovod_src || true', 'chmod a+rwx /etc/bash.bashrc']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-18.04-devel-mpi-horovod.Dockerfile,ENV,2,"['CI_BUILD_PYTHON python', 'LANG C.UTF-8']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-18.04-devel-mpi-horovod.Dockerfile,COPY,1,['bashrc /etc/bash.bashrc']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/centos-8.Dockerfile,ARG,4,"['CENTOS_VERSION=8', 'PYTHON=python3', 'TF_PACKAGE=tensorflow', 'TF_PACKAGE_VERSION=']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/centos-8.Dockerfile,FROM,1,['centos:${CENTOS_VERSION} as base']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/centos-8.Dockerfile,ENV,1,['LANG C.UTF-8']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/centos-8.Dockerfile,RUN,5,"['yum update -y && yum install -y     ${PYTHON}     ${PYTHON}-pip     which &&     yum clean all', '${PYTHON} -m pip --no-cache-dir install --upgrade     pip     setuptools', 'ln -sf $(which ${PYTHON}) /usr/local/bin/python &&     ln -sf $(which ${PYTHON}) /usr/local/bin/python3 &&     ln -sf $(which ${PYTHON}) /usr/bin/python', 'python3 -m pip install --no-cache-dir ${TF_PACKAGE}${TF_PACKAGE_VERSION:+==${TF_PACKAGE_VERSION}}', 'chmod a+rwx /etc/bash.bashrc']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/centos-8.Dockerfile,COPY,1,['bashrc /etc/bash.bashrc']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-16.04-mpich-horovod-jupyter.Dockerfile,ARG,9,"['UBUNTU_VERSION=20.04', 'PYTHON=python3', 'TF_PACKAGE=tensorflow', 'TF_PACKAGE_VERSION=', 'DEBIAN_FRONTEND=""noninteractive""', 'HOROVOD_WITHOUT_PYTORCH=1', 'HOROVOD_WITHOUT_MXNET=1', 'HOROVOD_WITH_TENSORFLOW=1', 'HOROVOD_VERSION=v0.21.1']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-16.04-mpich-horovod-jupyter.Dockerfile,FROM,1,['ubuntu:${UBUNTU_VERSION} as base']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-16.04-mpich-horovod-jupyter.Dockerfile,ENV,1,['LANG C.UTF-8']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-16.04-mpich-horovod-jupyter.Dockerfile,RUN,25,"['apt-get update && apt-get install -y --no-install-recommends --fix-missing     curl     software-properties-common', 'add-apt-repository ppa:deadsnakes/ppa', 'apt-get update && apt-get install -y --no-install-recommends --fix-missing     ${PYTHON}', 'curl -fSsL https://bootstrap.pypa.io/get-pip.py | ${PYTHON}', '${PYTHON} -m pip --no-cache-dir install --upgrade     pip     setuptools', 'ln -sf $(which ${PYTHON}) /usr/local/bin/python &&     ln -sf $(which ${PYTHON}) /usr/local/bin/python3 &&     ln -sf $(which ${PYTHON}) /usr/bin/python &&     ln -sf $(which ${PYTHON}) /usr/bin/python3', 'python3 -m pip install --no-cache-dir ${TF_PACKAGE}${TF_PACKAGE_VERSION:+==${TF_PACKAGE_VERSION}}', 'apt-get update && apt-get install -y --no-install-recommends --fix-missing     mpich     libmpich-dev     openssh-client     openssh-server &&     apt-get clean &&     rm -rf /var/lib/apt/lists/*', 'mv /usr/bin/mpirun /usr/bin/mpirun.real &&     echo \'#!/bin/bash\' > /usr/bin/mpirun &&     echo \'mpirun.real ""$@""\' >> /usr/bin/mpirun &&     chmod a+x /usr/bin/mpirun', ""sed -i 's/# if __GNUC__ > 5/# if __GNUC__ > 9/g' /usr/include/mpich/mpicxx.h"", 'mkdir -p /var/run/sshd', 'cat /etc/ssh/ssh_config | grep -v StrictHostKeyChecking > /etc/ssh/ssh_config.new &&     echo ""    StrictHostKeyChecking no"" >> /etc/ssh/ssh_config.new &&     mv /etc/ssh/ssh_config.new /etc/ssh/ssh_config', 'apt-get update && apt-get install -y --no-install-recommends --fix-missing     software-properties-common', 'cd /usr/lib/python3/dist-packages &&     ln -sf apt_pkg.cpython-35m-x86_64-linux-gnu.so apt_pkg.so', 'add-apt-repository ppa:ubuntu-toolchain-r/test', 'apt-get update && apt-get install -y --no-install-recommends --fix-missing     build-essential     cmake     g++-8     gcc-8     git     ${PYTHON}-dev', 'update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-5 500 --slave /usr/bin/g++ g++ /usr/bin/g++-5 &&     update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 800 --slave /usr/bin/g++ g++ /usr/bin/g++-8', '${PYTHON} -m pip install git+https://github.com/horovod/horovod.git@${HOROVOD_VERSION}', 'chmod a+rwx /etc/bash.bashrc', '${PYTHON} -m pip install --no-cache-dir jupyter matplotlib', '${PYTHON} -m pip install --no-cache-dir jupyter_http_over_ws ipykernel==5.1.1 nbformat==4.4.0', 'jupyter serverextension enable --py jupyter_http_over_ws', 'mkdir -p /tf/ && chmod -R a+rwx /tf/', 'mkdir /.local && chmod a+rwx /.local', '${PYTHON} -m ipykernel.kernelspec']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-16.04-mpich-horovod-jupyter.Dockerfile,COPY,1,['bashrc /etc/bash.bashrc']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-16.04-mpich-horovod-jupyter.Dockerfile,WORKDIR,1,['/tf']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-16.04-mpich-horovod-jupyter.Dockerfile,EXPOSE,1,['8888']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-16.04-mpich-horovod-jupyter.Dockerfile,CMD,1,"['[""bash"", ""-c"", ""source /etc/bash.bashrc && jupyter notebook --notebook-dir=/tf --ip 0.0.0.0 --no-browser --allow-root""]']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/centos-8-devel-mpich-horovod.Dockerfile,ARG,9,"['CENTOS_VERSION=8', 'CENTOS_VERSION=8', 'CACHE_STOP=1', 'CHECKOUT_TF_SRC=0', 'TF_BRANCH=master', 'PYTHON=python3', 'BAZEL_VERSION=4.2.2', 'CHECKOUT_HOROVOD_SRC=0', 'HOROVOD_BRANCH=master']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/centos-8-devel-mpich-horovod.Dockerfile,FROM,1,['centos:${CENTOS_VERSION} AS base']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/centos-8-devel-mpich-horovod.Dockerfile,RUN,13,"['dnf install -y \'dnf-command(config-manager)\' &&     dnf config-manager --set-enabled powertools &&     dnf install -y https://dl.fedoraproject.org/pub/epel/epel-release-latest-""${CENTOS_VERSION}"".noarch.rpm &&     dnf clean all', 'yum update -y &&     yum install -y         curl         freetype-devel         gcc         gcc-c++         git         hdf5-devel         java-1.8.0-openjdk         java-1.8.0-openjdk-devel         java-1.8.0-openjdk-headless         libcurl-devel         make         pkg-config         rsync         sudo         unzip         zeromq-devel         zip         zlib-devel &&         yum clean all', 'test ""${CHECKOUT_TF_SRC}"" -eq 1 && git clone https://github.com/tensorflow/tensorflow.git --branch ""${TF_BRANCH}"" --single-branch /tensorflow_src || true', 'yum update -y && yum install -y     ${PYTHON}     ${PYTHON}-pip     which &&     yum clean all', '${PYTHON} -m pip --no-cache-dir install --upgrade     pip     setuptools', 'ln -sf $(which ${PYTHON}) /usr/local/bin/python &&     ln -sf $(which ${PYTHON}) /usr/local/bin/python3 &&     ln -sf $(which ${PYTHON}) /usr/bin/python', 'mkdir /bazel &&     curl -fSsL -o /bazel/installer.sh ""https://github.com/bazelbuild/bazel/releases/download/${BAZEL_VERSION}/bazel-${BAZEL_VERSION}-installer-linux-x86_64.sh"" &&     curl -fSsL -o /bazel/LICENSE.txt ""https://raw.githubusercontent.com/bazelbuild/bazel/master/LICENSE"" &&     bash /bazel/installer.sh &&     rm -f /bazel/installer.sh', 'yum update -y && yum install -y     mpich     mpich-devel     openssh     openssh-server     redhat-rpm-config     which &&     yum clean all', 'mv -f $(which mpirun) /usr/bin/mpirun.real &&     echo \'#!/bin/bash\' > /usr/bin/mpirun &&     echo \'mpirun.real ""$@""\' >> /usr/bin/mpirun &&     chmod a+x /usr/bin/mpirun', 'mkdir -p /var/run/sshd', 'cat /etc/ssh/sshd_config | grep -v StrictHostKeyChecking > /etc/ssh/sshd_config.new &&     echo ""    StrictHostKeyChecking no"" >> /etc/ssh/sshd_config.new &&     mv -f /etc/ssh/sshd_config.new /etc/ssh/sshd_config', 'test ""${CHECKOUT_HOROVOD_SRC}"" -eq 1 && git clone --branch ""${HOROVOD_BRANCH}"" --single-branch --recursive https://github.com/uber/horovod.git /horovod_src || true', 'chmod a+rwx /etc/bash.bashrc']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/centos-8-devel-mpich-horovod.Dockerfile,ENV,3,"['CI_BUILD_PYTHON python', 'LANG C.UTF-8', 'PATH=""/usr/lib64/mpich/bin:${PATH}""']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/centos-8-devel-mpich-horovod.Dockerfile,COPY,1,['bashrc /etc/bash.bashrc']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-20.04-mpi-horovod-jupyter.Dockerfile,ARG,9,"['UBUNTU_VERSION=20.04', 'PYTHON=python3', 'TF_PACKAGE=tensorflow', 'TF_PACKAGE_VERSION=', 'DEBIAN_FRONTEND=""noninteractive""', 'HOROVOD_WITHOUT_PYTORCH=1', 'HOROVOD_WITHOUT_MXNET=1', 'HOROVOD_WITH_TENSORFLOW=1', 'HOROVOD_VERSION=v0.21.1']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-20.04-mpi-horovod-jupyter.Dockerfile,FROM,1,['ubuntu:${UBUNTU_VERSION} as base']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-20.04-mpi-horovod-jupyter.Dockerfile,ENV,1,['LANG C.UTF-8']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-20.04-mpi-horovod-jupyter.Dockerfile,RUN,19,"['apt-get update && apt-get install -y --no-install-recommends --fix-missing     ${PYTHON}     ${PYTHON}-pip', '${PYTHON} -m pip --no-cache-dir install --upgrade     pip     setuptools', 'ln -s $(which ${PYTHON}) /usr/local/bin/python', 'python3 -m pip install --no-cache-dir ${TF_PACKAGE}${TF_PACKAGE_VERSION:+==${TF_PACKAGE_VERSION}}', 'apt-get update && apt-get install -y --no-install-recommends --fix-missing     libopenmpi-dev     openmpi-bin     openmpi-common     openssh-client     openssh-server &&     apt-get clean &&     rm -rf /var/lib/apt/lists/*', 'mv /usr/bin/mpirun /usr/bin/mpirun.real &&     echo \'#!/bin/bash\' > /usr/bin/mpirun &&     echo \'mpirun.real --allow-run-as-root ""$@""\' >> /usr/bin/mpirun &&     chmod a+x /usr/bin/mpirun', 'echo ""btl_tcp_if_exclude = lo,docker0"" >> /etc/openmpi/openmpi-mca-params.conf', 'mkdir -p /var/run/sshd', 'cat /etc/ssh/ssh_config | grep -v StrictHostKeyChecking > /etc/ssh/ssh_config.new &&     echo ""    StrictHostKeyChecking no"" >> /etc/ssh/ssh_config.new &&     mv /etc/ssh/ssh_config.new /etc/ssh/ssh_config', 'apt-get update && apt-get install -y --no-install-recommends --fix-missing     build-essential     cmake     g++-8     gcc-8     git     ${PYTHON}-dev', 'update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 100 --slave /usr/bin/g++ g++ /usr/bin/g++-9 &&     update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 800 --slave /usr/bin/g++ g++ /usr/bin/g++-8', '${PYTHON} -m pip install git+https://github.com/horovod/horovod.git@${HOROVOD_VERSION}', 'chmod a+rwx /etc/bash.bashrc', '${PYTHON} -m pip install --no-cache-dir jupyter matplotlib', '${PYTHON} -m pip install --no-cache-dir jupyter_http_over_ws ipykernel==5.1.1 nbformat==4.4.0', 'jupyter serverextension enable --py jupyter_http_over_ws', 'mkdir -p /tf/ && chmod -R a+rwx /tf/', 'mkdir /.local && chmod a+rwx /.local', '${PYTHON} -m ipykernel.kernelspec']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-20.04-mpi-horovod-jupyter.Dockerfile,COPY,1,['bashrc /etc/bash.bashrc']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-20.04-mpi-horovod-jupyter.Dockerfile,WORKDIR,1,['/tf']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-20.04-mpi-horovod-jupyter.Dockerfile,EXPOSE,1,['8888']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-20.04-mpi-horovod-jupyter.Dockerfile,CMD,1,"['[""bash"", ""-c"", ""source /etc/bash.bashrc && jupyter notebook --notebook-dir=/tf --ip 0.0.0.0 --no-browser --allow-root""]']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/centos-7-devel-jupyter.Dockerfile,ARG,6,"['CENTOS_VERSION=8', 'CACHE_STOP=1', 'CHECKOUT_TF_SRC=0', 'TF_BRANCH=master', 'PYTHON=python3', 'BAZEL_VERSION=4.2.2']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/centos-7-devel-jupyter.Dockerfile,FROM,1,['centos:${CENTOS_VERSION} AS base']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/centos-7-devel-jupyter.Dockerfile,RUN,15,"['yum clean all &&     yum update -y &&     yum install -y epel-release', 'yum update -y &&     yum install -y         curl         freetype-devel         gcc         gcc-c++         git         hdf5-devel         java-1.8.0-openjdk         java-1.8.0-openjdk-devel         java-1.8.0-openjdk-headless         libcurl-devel         make         pkg-config         rsync         sudo         unzip         zeromq-devel         zip         zlib-devel &&         yum clean all', 'test ""${CHECKOUT_TF_SRC}"" -eq 1 && git clone https://github.com/tensorflow/tensorflow.git --branch ""${TF_BRANCH}"" --single-branch /tensorflow_src || true', 'yum update -y && yum install -y     ${PYTHON}     ${PYTHON}-pip     which &&     yum clean all', '${PYTHON} -m pip --no-cache-dir install --upgrade     pip     setuptools', 'ln -sf $(which ${PYTHON}) /usr/local/bin/python &&     ln -sf $(which ${PYTHON}) /usr/local/bin/python3 &&     ln -sf $(which ${PYTHON}) /usr/bin/python', ""sed -i 's#/usr/bin/python#/usr/bin/python2#g' /usr/bin/yum /usr/libexec/urlgrabber-ext-down"", 'mkdir /bazel &&     curl -fSsL -o /bazel/installer.sh ""https://github.com/bazelbuild/bazel/releases/download/${BAZEL_VERSION}/bazel-${BAZEL_VERSION}-installer-linux-x86_64.sh"" &&     curl -fSsL -o /bazel/LICENSE.txt ""https://raw.githubusercontent.com/bazelbuild/bazel/master/LICENSE"" &&     bash /bazel/installer.sh &&     rm -f /bazel/installer.sh', 'chmod a+rwx /etc/bash.bashrc', '${PYTHON} -m pip install --no-cache-dir jupyter matplotlib', '${PYTHON} -m pip install --no-cache-dir jupyter_http_over_ws ipykernel==5.1.1 nbformat==4.4.0', 'jupyter serverextension enable --py jupyter_http_over_ws', 'mkdir -p /tf/ && chmod -R a+rwx /tf/', 'mkdir /.local && chmod a+rwx /.local', '${PYTHON} -m ipykernel.kernelspec']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/centos-7-devel-jupyter.Dockerfile,ENV,2,"['CI_BUILD_PYTHON python', 'LANG C.UTF-8']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/centos-7-devel-jupyter.Dockerfile,COPY,1,['bashrc /etc/bash.bashrc']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/centos-7-devel-jupyter.Dockerfile,WORKDIR,1,['/tf']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/centos-7-devel-jupyter.Dockerfile,EXPOSE,1,['8888']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/centos-7-devel-jupyter.Dockerfile,CMD,1,"['[""bash"", ""-c"", ""source /etc/bash.bashrc && jupyter notebook --notebook-dir=/tf --ip 0.0.0.0 --no-browser --allow-root""]']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-18.04-mpi-horovod.Dockerfile,ARG,9,"['UBUNTU_VERSION=20.04', 'PYTHON=python3', 'TF_PACKAGE=tensorflow', 'TF_PACKAGE_VERSION=', 'DEBIAN_FRONTEND=""noninteractive""', 'HOROVOD_WITHOUT_PYTORCH=1', 'HOROVOD_WITHOUT_MXNET=1', 'HOROVOD_WITH_TENSORFLOW=1', 'HOROVOD_VERSION=v0.21.1']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-18.04-mpi-horovod.Dockerfile,FROM,1,['ubuntu:${UBUNTU_VERSION} as base']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-18.04-mpi-horovod.Dockerfile,ENV,1,['LANG C.UTF-8']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-18.04-mpi-horovod.Dockerfile,RUN,13,"['apt-get update && apt-get install -y --no-install-recommends --fix-missing     ${PYTHON}     ${PYTHON}-pip', '${PYTHON} -m pip --no-cache-dir install --upgrade     pip     setuptools', 'ln -s $(which ${PYTHON}) /usr/local/bin/python', 'python3 -m pip install --no-cache-dir ${TF_PACKAGE}${TF_PACKAGE_VERSION:+==${TF_PACKAGE_VERSION}}', 'apt-get update && apt-get install -y --no-install-recommends --fix-missing     libopenmpi-dev     openmpi-bin     openmpi-common     openssh-client     openssh-server &&     apt-get clean &&     rm -rf /var/lib/apt/lists/*', 'mv /usr/bin/mpirun /usr/bin/mpirun.real &&     echo \'#!/bin/bash\' > /usr/bin/mpirun &&     echo \'mpirun.real --allow-run-as-root ""$@""\' >> /usr/bin/mpirun &&     chmod a+x /usr/bin/mpirun', 'echo ""btl_tcp_if_exclude = lo,docker0"" >> /etc/openmpi/openmpi-mca-params.conf', 'mkdir -p /var/run/sshd', 'cat /etc/ssh/ssh_config | grep -v StrictHostKeyChecking > /etc/ssh/ssh_config.new &&     echo ""    StrictHostKeyChecking no"" >> /etc/ssh/ssh_config.new &&     mv /etc/ssh/ssh_config.new /etc/ssh/ssh_config', 'apt-get update && apt-get install -y --no-install-recommends --fix-missing     build-essential     cmake     g++-8     gcc-8     git     ${PYTHON}-dev', 'update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-7 700 --slave /usr/bin/g++ g++ /usr/bin/g++-7 &&     update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 800 --slave /usr/bin/g++ g++ /usr/bin/g++-8', '${PYTHON} -m pip install git+https://github.com/horovod/horovod.git@${HOROVOD_VERSION}', 'chmod a+rwx /etc/bash.bashrc']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-18.04-mpi-horovod.Dockerfile,COPY,1,['bashrc /etc/bash.bashrc']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/centos-8-jupyter.Dockerfile,ARG,4,"['CENTOS_VERSION=8', 'PYTHON=python3', 'TF_PACKAGE=tensorflow', 'TF_PACKAGE_VERSION=']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/centos-8-jupyter.Dockerfile,FROM,1,['centos:${CENTOS_VERSION} as base']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/centos-8-jupyter.Dockerfile,ENV,1,['LANG C.UTF-8']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/centos-8-jupyter.Dockerfile,RUN,11,"['yum update -y && yum install -y     ${PYTHON}     ${PYTHON}-pip     which &&     yum clean all', '${PYTHON} -m pip --no-cache-dir install --upgrade     pip     setuptools', 'ln -sf $(which ${PYTHON}) /usr/local/bin/python &&     ln -sf $(which ${PYTHON}) /usr/local/bin/python3 &&     ln -sf $(which ${PYTHON}) /usr/bin/python', 'python3 -m pip install --no-cache-dir ${TF_PACKAGE}${TF_PACKAGE_VERSION:+==${TF_PACKAGE_VERSION}}', 'chmod a+rwx /etc/bash.bashrc', '${PYTHON} -m pip install --no-cache-dir jupyter matplotlib', '${PYTHON} -m pip install --no-cache-dir jupyter_http_over_ws ipykernel==5.1.1 nbformat==4.4.0', 'jupyter serverextension enable --py jupyter_http_over_ws', 'mkdir -p /tf/ && chmod -R a+rwx /tf/', 'mkdir /.local && chmod a+rwx /.local', '${PYTHON} -m ipykernel.kernelspec']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/centos-8-jupyter.Dockerfile,COPY,1,['bashrc /etc/bash.bashrc']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/centos-8-jupyter.Dockerfile,WORKDIR,1,['/tf']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/centos-8-jupyter.Dockerfile,EXPOSE,1,['8888']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/centos-8-jupyter.Dockerfile,CMD,1,"['[""bash"", ""-c"", ""source /etc/bash.bashrc && jupyter notebook --notebook-dir=/tf --ip 0.0.0.0 --no-browser --allow-root""]']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-16.04-mpi-horovod-jupyter.Dockerfile,ARG,9,"['UBUNTU_VERSION=20.04', 'PYTHON=python3', 'TF_PACKAGE=tensorflow', 'TF_PACKAGE_VERSION=', 'DEBIAN_FRONTEND=""noninteractive""', 'HOROVOD_WITHOUT_PYTORCH=1', 'HOROVOD_WITHOUT_MXNET=1', 'HOROVOD_WITH_TENSORFLOW=1', 'HOROVOD_VERSION=v0.21.1']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-16.04-mpi-horovod-jupyter.Dockerfile,FROM,1,['ubuntu:${UBUNTU_VERSION} as base']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-16.04-mpi-horovod-jupyter.Dockerfile,ENV,1,['LANG C.UTF-8']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-16.04-mpi-horovod-jupyter.Dockerfile,RUN,25,"['apt-get update && apt-get install -y --no-install-recommends --fix-missing     curl     software-properties-common', 'add-apt-repository ppa:deadsnakes/ppa', 'apt-get update && apt-get install -y --no-install-recommends --fix-missing     ${PYTHON}', 'curl -fSsL https://bootstrap.pypa.io/get-pip.py | ${PYTHON}', '${PYTHON} -m pip --no-cache-dir install --upgrade     pip     setuptools', 'ln -sf $(which ${PYTHON}) /usr/local/bin/python &&     ln -sf $(which ${PYTHON}) /usr/local/bin/python3 &&     ln -sf $(which ${PYTHON}) /usr/bin/python &&     ln -sf $(which ${PYTHON}) /usr/bin/python3', 'python3 -m pip install --no-cache-dir ${TF_PACKAGE}${TF_PACKAGE_VERSION:+==${TF_PACKAGE_VERSION}}', 'apt-get update && apt-get install -y --no-install-recommends --fix-missing     libopenmpi-dev     openmpi-bin     openmpi-common     openssh-client     openssh-server &&     apt-get clean &&     rm -rf /var/lib/apt/lists/*', 'mv /usr/bin/mpirun /usr/bin/mpirun.real &&     echo \'#!/bin/bash\' > /usr/bin/mpirun &&     echo \'mpirun.real --allow-run-as-root ""$@""\' >> /usr/bin/mpirun &&     chmod a+x /usr/bin/mpirun', 'echo ""btl_tcp_if_exclude = lo,docker0"" >> /etc/openmpi/openmpi-mca-params.conf', 'mkdir -p /var/run/sshd', 'cat /etc/ssh/ssh_config | grep -v StrictHostKeyChecking > /etc/ssh/ssh_config.new &&     echo ""    StrictHostKeyChecking no"" >> /etc/ssh/ssh_config.new &&     mv /etc/ssh/ssh_config.new /etc/ssh/ssh_config', 'apt-get update && apt-get install -y --no-install-recommends --fix-missing     software-properties-common', 'cd /usr/lib/python3/dist-packages &&     ln -sf apt_pkg.cpython-35m-x86_64-linux-gnu.so apt_pkg.so', 'add-apt-repository ppa:ubuntu-toolchain-r/test', 'apt-get update && apt-get install -y --no-install-recommends --fix-missing     build-essential     cmake     g++-8     gcc-8     git     ${PYTHON}-dev', 'update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-5 500 --slave /usr/bin/g++ g++ /usr/bin/g++-5 &&     update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 800 --slave /usr/bin/g++ g++ /usr/bin/g++-8', '${PYTHON} -m pip install git+https://github.com/horovod/horovod.git@${HOROVOD_VERSION}', 'chmod a+rwx /etc/bash.bashrc', '${PYTHON} -m pip install --no-cache-dir jupyter matplotlib', '${PYTHON} -m pip install --no-cache-dir jupyter_http_over_ws ipykernel==5.1.1 nbformat==4.4.0', 'jupyter serverextension enable --py jupyter_http_over_ws', 'mkdir -p /tf/ && chmod -R a+rwx /tf/', 'mkdir /.local && chmod a+rwx /.local', '${PYTHON} -m ipykernel.kernelspec']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-16.04-mpi-horovod-jupyter.Dockerfile,COPY,1,['bashrc /etc/bash.bashrc']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-16.04-mpi-horovod-jupyter.Dockerfile,WORKDIR,1,['/tf']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-16.04-mpi-horovod-jupyter.Dockerfile,EXPOSE,1,['8888']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-16.04-mpi-horovod-jupyter.Dockerfile,CMD,1,"['[""bash"", ""-c"", ""source /etc/bash.bashrc && jupyter notebook --notebook-dir=/tf --ip 0.0.0.0 --no-browser --allow-root""]']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-20.04-devel-jupyter.Dockerfile,ARG,7,"['UBUNTU_VERSION=20.04', 'DEBIAN_FRONTEND=""noninteractive""', 'CACHE_STOP=1', 'CHECKOUT_TF_SRC=0', 'TF_BRANCH=master', 'PYTHON=python3', 'BAZEL_VERSION=4.2.2']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-20.04-devel-jupyter.Dockerfile,FROM,1,['ubuntu:${UBUNTU_VERSION} AS base']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-20.04-devel-jupyter.Dockerfile,RUN,14,"['apt-get update && apt-get install -y --no-install-recommends --fix-missing         build-essential         curl         git         libcurl3-dev         libfreetype6-dev         libhdf5-serial-dev         libzmq3-dev         pkg-config         rsync         software-properties-common         sudo         unzip         zip         zlib1g-dev         openjdk-8-jdk         openjdk-8-jre-headless         &&     apt-get clean &&     rm -rf /var/lib/apt/lists/*', 'test ""${CHECKOUT_TF_SRC}"" -eq 1 && git clone https://github.com/tensorflow/tensorflow.git --branch ""${TF_BRANCH}"" --single-branch /tensorflow_src || true', 'apt-get update && apt-get install -y --no-install-recommends --fix-missing     ${PYTHON}     ${PYTHON}-pip', '${PYTHON} -m pip --no-cache-dir install --upgrade     pip     setuptools', 'ln -s $(which ${PYTHON}) /usr/local/bin/python', 'apt-get update && apt-get install -y --no-install-recommends --fix-missing     curl', 'mkdir /bazel &&     curl -fSsL -o /bazel/installer.sh ""https://github.com/bazelbuild/bazel/releases/download/${BAZEL_VERSION}/bazel-${BAZEL_VERSION}-installer-linux-x86_64.sh"" &&     curl -fSsL -o /bazel/LICENSE.txt ""https://raw.githubusercontent.com/bazelbuild/bazel/master/LICENSE"" &&     bash /bazel/installer.sh &&     rm -f /bazel/installer.sh', 'chmod a+rwx /etc/bash.bashrc', '${PYTHON} -m pip install --no-cache-dir jupyter matplotlib', '${PYTHON} -m pip install --no-cache-dir jupyter_http_over_ws ipykernel==5.1.1 nbformat==4.4.0', 'jupyter serverextension enable --py jupyter_http_over_ws', 'mkdir -p /tf/ && chmod -R a+rwx /tf/', 'mkdir /.local && chmod a+rwx /.local', '${PYTHON} -m ipykernel.kernelspec']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-20.04-devel-jupyter.Dockerfile,ENV,2,"['CI_BUILD_PYTHON python', 'LANG C.UTF-8']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-20.04-devel-jupyter.Dockerfile,COPY,1,['bashrc /etc/bash.bashrc']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-20.04-devel-jupyter.Dockerfile,WORKDIR,1,['/tf']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-20.04-devel-jupyter.Dockerfile,EXPOSE,1,['8888']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-20.04-devel-jupyter.Dockerfile,CMD,1,"['[""bash"", ""-c"", ""source /etc/bash.bashrc && jupyter notebook --notebook-dir=/tf --ip 0.0.0.0 --no-browser --allow-root""]']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/centos-8-mpi-horovod.Dockerfile,ARG,8,"['CENTOS_VERSION=8', 'PYTHON=python3', 'TF_PACKAGE=tensorflow', 'TF_PACKAGE_VERSION=', 'HOROVOD_WITHOUT_PYTORCH=1', 'HOROVOD_WITHOUT_MXNET=1', 'HOROVOD_WITH_TENSORFLOW=1', 'HOROVOD_VERSION=v0.21.1']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/centos-8-mpi-horovod.Dockerfile,FROM,1,['centos:${CENTOS_VERSION} as base']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/centos-8-mpi-horovod.Dockerfile,ENV,2,"['LANG C.UTF-8', 'PATH=""/usr/lib64/openmpi/bin:${PATH}""']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/centos-8-mpi-horovod.Dockerfile,RUN,12,"['yum update -y && yum install -y     ${PYTHON}     ${PYTHON}-pip     which &&     yum clean all', '${PYTHON} -m pip --no-cache-dir install --upgrade     pip     setuptools', 'ln -sf $(which ${PYTHON}) /usr/local/bin/python &&     ln -sf $(which ${PYTHON}) /usr/local/bin/python3 &&     ln -sf $(which ${PYTHON}) /usr/bin/python', 'python3 -m pip install --no-cache-dir ${TF_PACKAGE}${TF_PACKAGE_VERSION:+==${TF_PACKAGE_VERSION}}', 'yum update -y && yum install -y     openmpi     openmpi-devel     openssh     openssh-server     which &&     yum clean all', 'mv -f $(which mpirun) /usr/bin/mpirun.real &&     echo \'#!/bin/bash\' > /usr/bin/mpirun &&     echo \'mpirun.real --allow-run-as-root ""$@""\' >> /usr/bin/mpirun &&     chmod a+x /usr/bin/mpirun', 'echo ""btl_tcp_if_exclude = lo,docker0"" >> /etc/openmpi-x86_64/openmpi-mca-params.conf', 'mkdir -p /var/run/sshd', 'cat /etc/ssh/sshd_config | grep -v StrictHostKeyChecking > /etc/ssh/sshd_config.new &&     echo ""    StrictHostKeyChecking no"" >> /etc/ssh/sshd_config.new &&     mv -f /etc/ssh/sshd_config.new /etc/ssh/sshd_config', 'yum update -y && yum install -y     cmake     gcc     gcc-c++     git     make     ${PYTHON}-devel &&     yum clean all', '${PYTHON} -m pip install git+https://github.com/horovod/horovod.git@${HOROVOD_VERSION}', 'chmod a+rwx /etc/bash.bashrc']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/centos-8-mpi-horovod.Dockerfile,COPY,1,['bashrc /etc/bash.bashrc']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-16.04-devel-mpich-horovod-jupyter.Dockerfile,ARG,10,"['UBUNTU_VERSION=20.04', 'DEBIAN_FRONTEND=""noninteractive""', 'CACHE_STOP=1', 'CHECKOUT_TF_SRC=0', 'TF_BRANCH=master', 'PYTHON=python3', 'BAZEL_VERSION=4.2.2', 'DEBIAN_FRONTEND=""noninteractive""', 'CHECKOUT_HOROVOD_SRC=0', 'HOROVOD_BRANCH=master']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-16.04-devel-mpich-horovod-jupyter.Dockerfile,FROM,1,['ubuntu:${UBUNTU_VERSION} AS base']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-16.04-devel-mpich-horovod-jupyter.Dockerfile,RUN,23,"['apt-get update && apt-get install -y --no-install-recommends --fix-missing         build-essential         curl         git         libcurl3-dev         libfreetype6-dev         libhdf5-serial-dev         libzmq3-dev         pkg-config         rsync         software-properties-common         sudo         unzip         zip         zlib1g-dev         openjdk-8-jdk         openjdk-8-jre-headless         &&     apt-get clean &&     rm -rf /var/lib/apt/lists/*', 'test ""${CHECKOUT_TF_SRC}"" -eq 1 && git clone https://github.com/tensorflow/tensorflow.git --branch ""${TF_BRANCH}"" --single-branch /tensorflow_src || true', 'apt-get update && apt-get install -y --no-install-recommends --fix-missing     curl     software-properties-common', 'add-apt-repository ppa:deadsnakes/ppa', 'apt-get update && apt-get install -y --no-install-recommends --fix-missing     ${PYTHON}', 'curl -fSsL https://bootstrap.pypa.io/get-pip.py | ${PYTHON}', '${PYTHON} -m pip --no-cache-dir install --upgrade     pip     setuptools', 'ln -sf $(which ${PYTHON}) /usr/local/bin/python &&     ln -sf $(which ${PYTHON}) /usr/local/bin/python3 &&     ln -sf $(which ${PYTHON}) /usr/bin/python &&     ln -sf $(which ${PYTHON}) /usr/bin/python3', 'apt-get update && apt-get install -y --no-install-recommends --fix-missing     curl', 'mkdir /bazel &&     curl -fSsL -o /bazel/installer.sh ""https://github.com/bazelbuild/bazel/releases/download/${BAZEL_VERSION}/bazel-${BAZEL_VERSION}-installer-linux-x86_64.sh"" &&     curl -fSsL -o /bazel/LICENSE.txt ""https://raw.githubusercontent.com/bazelbuild/bazel/master/LICENSE"" &&     bash /bazel/installer.sh &&     rm -f /bazel/installer.sh', 'apt-get update && apt-get install -y --no-install-recommends --fix-missing     mpich     libmpich-dev     openssh-client     openssh-server &&     apt-get clean &&     rm -rf /var/lib/apt/lists/*', 'mv /usr/bin/mpirun /usr/bin/mpirun.real &&     echo \'#!/bin/bash\' > /usr/bin/mpirun &&     echo \'mpirun.real ""$@""\' >> /usr/bin/mpirun &&     chmod a+x /usr/bin/mpirun', ""sed -i 's/# if __GNUC__ > 5/# if __GNUC__ > 9/g' /usr/include/mpich/mpicxx.h"", 'mkdir -p /var/run/sshd', 'cat /etc/ssh/ssh_config | grep -v StrictHostKeyChecking > /etc/ssh/ssh_config.new &&     echo ""    StrictHostKeyChecking no"" >> /etc/ssh/ssh_config.new &&     mv /etc/ssh/ssh_config.new /etc/ssh/ssh_config', 'test ""${CHECKOUT_HOROVOD_SRC}"" -eq 1 && git clone --branch ""${HOROVOD_BRANCH}"" --single-branch --recursive https://github.com/uber/horovod.git /horovod_src || true', 'chmod a+rwx /etc/bash.bashrc', '${PYTHON} -m pip install --no-cache-dir jupyter matplotlib', '${PYTHON} -m pip install --no-cache-dir jupyter_http_over_ws ipykernel==5.1.1 nbformat==4.4.0', 'jupyter serverextension enable --py jupyter_http_over_ws', 'mkdir -p /tf/ && chmod -R a+rwx /tf/', 'mkdir /.local && chmod a+rwx /.local', '${PYTHON} -m ipykernel.kernelspec']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-16.04-devel-mpich-horovod-jupyter.Dockerfile,ENV,2,"['CI_BUILD_PYTHON python', 'LANG C.UTF-8']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-16.04-devel-mpich-horovod-jupyter.Dockerfile,COPY,1,['bashrc /etc/bash.bashrc']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-16.04-devel-mpich-horovod-jupyter.Dockerfile,WORKDIR,1,['/tf']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-16.04-devel-mpich-horovod-jupyter.Dockerfile,EXPOSE,1,['8888']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-16.04-devel-mpich-horovod-jupyter.Dockerfile,CMD,1,"['[""bash"", ""-c"", ""source /etc/bash.bashrc && jupyter notebook --notebook-dir=/tf --ip 0.0.0.0 --no-browser --allow-root""]']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-16.04-devel-mpi-horovod.Dockerfile,ARG,10,"['UBUNTU_VERSION=20.04', 'DEBIAN_FRONTEND=""noninteractive""', 'CACHE_STOP=1', 'CHECKOUT_TF_SRC=0', 'TF_BRANCH=master', 'PYTHON=python3', 'BAZEL_VERSION=4.2.2', 'DEBIAN_FRONTEND=""noninteractive""', 'CHECKOUT_HOROVOD_SRC=0', 'HOROVOD_BRANCH=master']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-16.04-devel-mpi-horovod.Dockerfile,FROM,1,['ubuntu:${UBUNTU_VERSION} AS base']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-16.04-devel-mpi-horovod.Dockerfile,RUN,17,"['apt-get update && apt-get install -y --no-install-recommends --fix-missing         build-essential         curl         git         libcurl3-dev         libfreetype6-dev         libhdf5-serial-dev         libzmq3-dev         pkg-config         rsync         software-properties-common         sudo         unzip         zip         zlib1g-dev         openjdk-8-jdk         openjdk-8-jre-headless         &&     apt-get clean &&     rm -rf /var/lib/apt/lists/*', 'test ""${CHECKOUT_TF_SRC}"" -eq 1 && git clone https://github.com/tensorflow/tensorflow.git --branch ""${TF_BRANCH}"" --single-branch /tensorflow_src || true', 'apt-get update && apt-get install -y --no-install-recommends --fix-missing     curl     software-properties-common', 'add-apt-repository ppa:deadsnakes/ppa', 'apt-get update && apt-get install -y --no-install-recommends --fix-missing     ${PYTHON}', 'curl -fSsL https://bootstrap.pypa.io/get-pip.py | ${PYTHON}', '${PYTHON} -m pip --no-cache-dir install --upgrade     pip     setuptools', 'ln -sf $(which ${PYTHON}) /usr/local/bin/python &&     ln -sf $(which ${PYTHON}) /usr/local/bin/python3 &&     ln -sf $(which ${PYTHON}) /usr/bin/python &&     ln -sf $(which ${PYTHON}) /usr/bin/python3', 'apt-get update && apt-get install -y --no-install-recommends --fix-missing     curl', 'mkdir /bazel &&     curl -fSsL -o /bazel/installer.sh ""https://github.com/bazelbuild/bazel/releases/download/${BAZEL_VERSION}/bazel-${BAZEL_VERSION}-installer-linux-x86_64.sh"" &&     curl -fSsL -o /bazel/LICENSE.txt ""https://raw.githubusercontent.com/bazelbuild/bazel/master/LICENSE"" &&     bash /bazel/installer.sh &&     rm -f /bazel/installer.sh', 'apt-get update && apt-get install -y --no-install-recommends --fix-missing     libopenmpi-dev     openmpi-bin     openmpi-common     openssh-client     openssh-server &&     apt-get clean &&     rm -rf /var/lib/apt/lists/*', 'mv /usr/bin/mpirun /usr/bin/mpirun.real &&     echo \'#!/bin/bash\' > /usr/bin/mpirun &&     echo \'mpirun.real --allow-run-as-root ""$@""\' >> /usr/bin/mpirun &&     chmod a+x /usr/bin/mpirun', 'echo ""btl_tcp_if_exclude = lo,docker0"" >> /etc/openmpi/openmpi-mca-params.conf', 'mkdir -p /var/run/sshd', 'cat /etc/ssh/ssh_config | grep -v StrictHostKeyChecking > /etc/ssh/ssh_config.new &&     echo ""    StrictHostKeyChecking no"" >> /etc/ssh/ssh_config.new &&     mv /etc/ssh/ssh_config.new /etc/ssh/ssh_config', 'test ""${CHECKOUT_HOROVOD_SRC}"" -eq 1 && git clone --branch ""${HOROVOD_BRANCH}"" --single-branch --recursive https://github.com/uber/horovod.git /horovod_src || true', 'chmod a+rwx /etc/bash.bashrc']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-16.04-devel-mpi-horovod.Dockerfile,ENV,2,"['CI_BUILD_PYTHON python', 'LANG C.UTF-8']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-16.04-devel-mpi-horovod.Dockerfile,COPY,1,['bashrc /etc/bash.bashrc']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/centos-7.Dockerfile,ARG,4,"['CENTOS_VERSION=8', 'PYTHON=python3', 'TF_PACKAGE=tensorflow', 'TF_PACKAGE_VERSION=']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/centos-7.Dockerfile,FROM,1,['centos:${CENTOS_VERSION} as base']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/centos-7.Dockerfile,ENV,1,['LANG C.UTF-8']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/centos-7.Dockerfile,RUN,6,"['yum update -y && yum install -y     ${PYTHON}     ${PYTHON}-pip     which &&     yum clean all', '${PYTHON} -m pip --no-cache-dir install --upgrade     pip     setuptools', 'ln -sf $(which ${PYTHON}) /usr/local/bin/python &&     ln -sf $(which ${PYTHON}) /usr/local/bin/python3 &&     ln -sf $(which ${PYTHON}) /usr/bin/python', ""sed -i 's#/usr/bin/python#/usr/bin/python2#g' /usr/bin/yum /usr/libexec/urlgrabber-ext-down"", 'python3 -m pip install --no-cache-dir ${TF_PACKAGE}${TF_PACKAGE_VERSION:+==${TF_PACKAGE_VERSION}}', 'chmod a+rwx /etc/bash.bashrc']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/centos-7.Dockerfile,COPY,1,['bashrc /etc/bash.bashrc']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-18.04-mpi-horovod-jupyter.Dockerfile,ARG,9,"['UBUNTU_VERSION=20.04', 'PYTHON=python3', 'TF_PACKAGE=tensorflow', 'TF_PACKAGE_VERSION=', 'DEBIAN_FRONTEND=""noninteractive""', 'HOROVOD_WITHOUT_PYTORCH=1', 'HOROVOD_WITHOUT_MXNET=1', 'HOROVOD_WITH_TENSORFLOW=1', 'HOROVOD_VERSION=v0.21.1']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-18.04-mpi-horovod-jupyter.Dockerfile,FROM,1,['ubuntu:${UBUNTU_VERSION} as base']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-18.04-mpi-horovod-jupyter.Dockerfile,ENV,1,['LANG C.UTF-8']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-18.04-mpi-horovod-jupyter.Dockerfile,RUN,19,"['apt-get update && apt-get install -y --no-install-recommends --fix-missing     ${PYTHON}     ${PYTHON}-pip', '${PYTHON} -m pip --no-cache-dir install --upgrade     pip     setuptools', 'ln -s $(which ${PYTHON}) /usr/local/bin/python', 'python3 -m pip install --no-cache-dir ${TF_PACKAGE}${TF_PACKAGE_VERSION:+==${TF_PACKAGE_VERSION}}', 'apt-get update && apt-get install -y --no-install-recommends --fix-missing     libopenmpi-dev     openmpi-bin     openmpi-common     openssh-client     openssh-server &&     apt-get clean &&     rm -rf /var/lib/apt/lists/*', 'mv /usr/bin/mpirun /usr/bin/mpirun.real &&     echo \'#!/bin/bash\' > /usr/bin/mpirun &&     echo \'mpirun.real --allow-run-as-root ""$@""\' >> /usr/bin/mpirun &&     chmod a+x /usr/bin/mpirun', 'echo ""btl_tcp_if_exclude = lo,docker0"" >> /etc/openmpi/openmpi-mca-params.conf', 'mkdir -p /var/run/sshd', 'cat /etc/ssh/ssh_config | grep -v StrictHostKeyChecking > /etc/ssh/ssh_config.new &&     echo ""    StrictHostKeyChecking no"" >> /etc/ssh/ssh_config.new &&     mv /etc/ssh/ssh_config.new /etc/ssh/ssh_config', 'apt-get update && apt-get install -y --no-install-recommends --fix-missing     build-essential     cmake     g++-8     gcc-8     git     ${PYTHON}-dev', 'update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-7 700 --slave /usr/bin/g++ g++ /usr/bin/g++-7 &&     update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 800 --slave /usr/bin/g++ g++ /usr/bin/g++-8', '${PYTHON} -m pip install git+https://github.com/horovod/horovod.git@${HOROVOD_VERSION}', 'chmod a+rwx /etc/bash.bashrc', '${PYTHON} -m pip install --no-cache-dir jupyter matplotlib', '${PYTHON} -m pip install --no-cache-dir jupyter_http_over_ws ipykernel==5.1.1 nbformat==4.4.0', 'jupyter serverextension enable --py jupyter_http_over_ws', 'mkdir -p /tf/ && chmod -R a+rwx /tf/', 'mkdir /.local && chmod a+rwx /.local', '${PYTHON} -m ipykernel.kernelspec']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-18.04-mpi-horovod-jupyter.Dockerfile,COPY,1,['bashrc /etc/bash.bashrc']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-18.04-mpi-horovod-jupyter.Dockerfile,WORKDIR,1,['/tf']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-18.04-mpi-horovod-jupyter.Dockerfile,EXPOSE,1,['8888']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-18.04-mpi-horovod-jupyter.Dockerfile,CMD,1,"['[""bash"", ""-c"", ""source /etc/bash.bashrc && jupyter notebook --notebook-dir=/tf --ip 0.0.0.0 --no-browser --allow-root""]']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-20.04-devel-mpi-horovod.Dockerfile,ARG,10,"['UBUNTU_VERSION=20.04', 'DEBIAN_FRONTEND=""noninteractive""', 'CACHE_STOP=1', 'CHECKOUT_TF_SRC=0', 'TF_BRANCH=master', 'PYTHON=python3', 'BAZEL_VERSION=4.2.2', 'DEBIAN_FRONTEND=""noninteractive""', 'CHECKOUT_HOROVOD_SRC=0', 'HOROVOD_BRANCH=master']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-20.04-devel-mpi-horovod.Dockerfile,FROM,1,['ubuntu:${UBUNTU_VERSION} AS base']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-20.04-devel-mpi-horovod.Dockerfile,RUN,14,"['apt-get update && apt-get install -y --no-install-recommends --fix-missing         build-essential         curl         git         libcurl3-dev         libfreetype6-dev         libhdf5-serial-dev         libzmq3-dev         pkg-config         rsync         software-properties-common         sudo         unzip         zip         zlib1g-dev         openjdk-8-jdk         openjdk-8-jre-headless         &&     apt-get clean &&     rm -rf /var/lib/apt/lists/*', 'test ""${CHECKOUT_TF_SRC}"" -eq 1 && git clone https://github.com/tensorflow/tensorflow.git --branch ""${TF_BRANCH}"" --single-branch /tensorflow_src || true', 'apt-get update && apt-get install -y --no-install-recommends --fix-missing     ${PYTHON}     ${PYTHON}-pip', '${PYTHON} -m pip --no-cache-dir install --upgrade     pip     setuptools', 'ln -s $(which ${PYTHON}) /usr/local/bin/python', 'apt-get update && apt-get install -y --no-install-recommends --fix-missing     curl', 'mkdir /bazel &&     curl -fSsL -o /bazel/installer.sh ""https://github.com/bazelbuild/bazel/releases/download/${BAZEL_VERSION}/bazel-${BAZEL_VERSION}-installer-linux-x86_64.sh"" &&     curl -fSsL -o /bazel/LICENSE.txt ""https://raw.githubusercontent.com/bazelbuild/bazel/master/LICENSE"" &&     bash /bazel/installer.sh &&     rm -f /bazel/installer.sh', 'apt-get update && apt-get install -y --no-install-recommends --fix-missing     libopenmpi-dev     openmpi-bin     openmpi-common     openssh-client     openssh-server &&     apt-get clean &&     rm -rf /var/lib/apt/lists/*', 'mv /usr/bin/mpirun /usr/bin/mpirun.real &&     echo \'#!/bin/bash\' > /usr/bin/mpirun &&     echo \'mpirun.real --allow-run-as-root ""$@""\' >> /usr/bin/mpirun &&     chmod a+x /usr/bin/mpirun', 'echo ""btl_tcp_if_exclude = lo,docker0"" >> /etc/openmpi/openmpi-mca-params.conf', 'mkdir -p /var/run/sshd', 'cat /etc/ssh/ssh_config | grep -v StrictHostKeyChecking > /etc/ssh/ssh_config.new &&     echo ""    StrictHostKeyChecking no"" >> /etc/ssh/ssh_config.new &&     mv /etc/ssh/ssh_config.new /etc/ssh/ssh_config', 'test ""${CHECKOUT_HOROVOD_SRC}"" -eq 1 && git clone --branch ""${HOROVOD_BRANCH}"" --single-branch --recursive https://github.com/uber/horovod.git /horovod_src || true', 'chmod a+rwx /etc/bash.bashrc']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-20.04-devel-mpi-horovod.Dockerfile,ENV,2,"['CI_BUILD_PYTHON python', 'LANG C.UTF-8']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-20.04-devel-mpi-horovod.Dockerfile,COPY,1,['bashrc /etc/bash.bashrc']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/centos-8-devel-mpi-horovod.Dockerfile,ARG,9,"['CENTOS_VERSION=8', 'CENTOS_VERSION=8', 'CACHE_STOP=1', 'CHECKOUT_TF_SRC=0', 'TF_BRANCH=master', 'PYTHON=python3', 'BAZEL_VERSION=4.2.2', 'CHECKOUT_HOROVOD_SRC=0', 'HOROVOD_BRANCH=master']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/centos-8-devel-mpi-horovod.Dockerfile,FROM,1,['centos:${CENTOS_VERSION} AS base']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/centos-8-devel-mpi-horovod.Dockerfile,RUN,14,"['dnf install -y \'dnf-command(config-manager)\' &&     dnf config-manager --set-enabled powertools &&     dnf install -y https://dl.fedoraproject.org/pub/epel/epel-release-latest-""${CENTOS_VERSION}"".noarch.rpm &&     dnf clean all', 'yum update -y &&     yum install -y         curl         freetype-devel         gcc         gcc-c++         git         hdf5-devel         java-1.8.0-openjdk         java-1.8.0-openjdk-devel         java-1.8.0-openjdk-headless         libcurl-devel         make         pkg-config         rsync         sudo         unzip         zeromq-devel         zip         zlib-devel &&         yum clean all', 'test ""${CHECKOUT_TF_SRC}"" -eq 1 && git clone https://github.com/tensorflow/tensorflow.git --branch ""${TF_BRANCH}"" --single-branch /tensorflow_src || true', 'yum update -y && yum install -y     ${PYTHON}     ${PYTHON}-pip     which &&     yum clean all', '${PYTHON} -m pip --no-cache-dir install --upgrade     pip     setuptools', 'ln -sf $(which ${PYTHON}) /usr/local/bin/python &&     ln -sf $(which ${PYTHON}) /usr/local/bin/python3 &&     ln -sf $(which ${PYTHON}) /usr/bin/python', 'mkdir /bazel &&     curl -fSsL -o /bazel/installer.sh ""https://github.com/bazelbuild/bazel/releases/download/${BAZEL_VERSION}/bazel-${BAZEL_VERSION}-installer-linux-x86_64.sh"" &&     curl -fSsL -o /bazel/LICENSE.txt ""https://raw.githubusercontent.com/bazelbuild/bazel/master/LICENSE"" &&     bash /bazel/installer.sh &&     rm -f /bazel/installer.sh', 'yum update -y && yum install -y     openmpi     openmpi-devel     openssh     openssh-server     which &&     yum clean all', 'mv -f $(which mpirun) /usr/bin/mpirun.real &&     echo \'#!/bin/bash\' > /usr/bin/mpirun &&     echo \'mpirun.real --allow-run-as-root ""$@""\' >> /usr/bin/mpirun &&     chmod a+x /usr/bin/mpirun', 'echo ""btl_tcp_if_exclude = lo,docker0"" >> /etc/openmpi-x86_64/openmpi-mca-params.conf', 'mkdir -p /var/run/sshd', 'cat /etc/ssh/sshd_config | grep -v StrictHostKeyChecking > /etc/ssh/sshd_config.new &&     echo ""    StrictHostKeyChecking no"" >> /etc/ssh/sshd_config.new &&     mv -f /etc/ssh/sshd_config.new /etc/ssh/sshd_config', 'test ""${CHECKOUT_HOROVOD_SRC}"" -eq 1 && git clone --branch ""${HOROVOD_BRANCH}"" --single-branch --recursive https://github.com/uber/horovod.git /horovod_src || true', 'chmod a+rwx /etc/bash.bashrc']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/centos-8-devel-mpi-horovod.Dockerfile,ENV,3,"['CI_BUILD_PYTHON python', 'LANG C.UTF-8', 'PATH=""/usr/lib64/openmpi/bin:${PATH}""']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/centos-8-devel-mpi-horovod.Dockerfile,COPY,1,['bashrc /etc/bash.bashrc']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/centos-8-mpich-horovod.Dockerfile,ARG,8,"['CENTOS_VERSION=8', 'PYTHON=python3', 'TF_PACKAGE=tensorflow', 'TF_PACKAGE_VERSION=', 'HOROVOD_WITHOUT_PYTORCH=1', 'HOROVOD_WITHOUT_MXNET=1', 'HOROVOD_WITH_TENSORFLOW=1', 'HOROVOD_VERSION=v0.21.1']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/centos-8-mpich-horovod.Dockerfile,FROM,1,['centos:${CENTOS_VERSION} as base']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/centos-8-mpich-horovod.Dockerfile,ENV,2,"['LANG C.UTF-8', 'PATH=""/usr/lib64/mpich/bin:${PATH}""']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/centos-8-mpich-horovod.Dockerfile,RUN,11,"['yum update -y && yum install -y     ${PYTHON}     ${PYTHON}-pip     which &&     yum clean all', '${PYTHON} -m pip --no-cache-dir install --upgrade     pip     setuptools', 'ln -sf $(which ${PYTHON}) /usr/local/bin/python &&     ln -sf $(which ${PYTHON}) /usr/local/bin/python3 &&     ln -sf $(which ${PYTHON}) /usr/bin/python', 'python3 -m pip install --no-cache-dir ${TF_PACKAGE}${TF_PACKAGE_VERSION:+==${TF_PACKAGE_VERSION}}', 'yum update -y && yum install -y     mpich     mpich-devel     openssh     openssh-server     redhat-rpm-config     which &&     yum clean all', 'mv -f $(which mpirun) /usr/bin/mpirun.real &&     echo \'#!/bin/bash\' > /usr/bin/mpirun &&     echo \'mpirun.real ""$@""\' >> /usr/bin/mpirun &&     chmod a+x /usr/bin/mpirun', 'mkdir -p /var/run/sshd', 'cat /etc/ssh/sshd_config | grep -v StrictHostKeyChecking > /etc/ssh/sshd_config.new &&     echo ""    StrictHostKeyChecking no"" >> /etc/ssh/sshd_config.new &&     mv -f /etc/ssh/sshd_config.new /etc/ssh/sshd_config', 'yum update -y && yum install -y     cmake     gcc     gcc-c++     git     make     ${PYTHON}-devel &&     yum clean all', '${PYTHON} -m pip install git+https://github.com/horovod/horovod.git@${HOROVOD_VERSION}', 'chmod a+rwx /etc/bash.bashrc']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/centos-8-mpich-horovod.Dockerfile,COPY,1,['bashrc /etc/bash.bashrc']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-18.04-mpich-horovod.Dockerfile,ARG,9,"['UBUNTU_VERSION=20.04', 'PYTHON=python3', 'TF_PACKAGE=tensorflow', 'TF_PACKAGE_VERSION=', 'DEBIAN_FRONTEND=""noninteractive""', 'HOROVOD_WITHOUT_PYTORCH=1', 'HOROVOD_WITHOUT_MXNET=1', 'HOROVOD_WITH_TENSORFLOW=1', 'HOROVOD_VERSION=v0.21.1']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-18.04-mpich-horovod.Dockerfile,FROM,1,['ubuntu:${UBUNTU_VERSION} as base']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-18.04-mpich-horovod.Dockerfile,ENV,1,['LANG C.UTF-8']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-18.04-mpich-horovod.Dockerfile,RUN,12,"['apt-get update && apt-get install -y --no-install-recommends --fix-missing     ${PYTHON}     ${PYTHON}-pip', '${PYTHON} -m pip --no-cache-dir install --upgrade     pip     setuptools', 'ln -s $(which ${PYTHON}) /usr/local/bin/python', 'python3 -m pip install --no-cache-dir ${TF_PACKAGE}${TF_PACKAGE_VERSION:+==${TF_PACKAGE_VERSION}}', 'apt-get update && apt-get install -y --no-install-recommends --fix-missing     mpich     libmpich-dev     openssh-client     openssh-server &&     apt-get clean &&     rm -rf /var/lib/apt/lists/*', 'mv /usr/bin/mpirun /usr/bin/mpirun.real &&     echo \'#!/bin/bash\' > /usr/bin/mpirun &&     echo \'mpirun.real ""$@""\' >> /usr/bin/mpirun &&     chmod a+x /usr/bin/mpirun', 'mkdir -p /var/run/sshd', 'cat /etc/ssh/ssh_config | grep -v StrictHostKeyChecking > /etc/ssh/ssh_config.new &&     echo ""    StrictHostKeyChecking no"" >> /etc/ssh/ssh_config.new &&     mv /etc/ssh/ssh_config.new /etc/ssh/ssh_config', 'apt-get update && apt-get install -y --no-install-recommends --fix-missing     build-essential     cmake     g++-8     gcc-8     git     ${PYTHON}-dev', 'update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-7 700 --slave /usr/bin/g++ g++ /usr/bin/g++-7 &&     update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 800 --slave /usr/bin/g++ g++ /usr/bin/g++-8', '${PYTHON} -m pip install git+https://github.com/horovod/horovod.git@${HOROVOD_VERSION}', 'chmod a+rwx /etc/bash.bashrc']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-18.04-mpich-horovod.Dockerfile,COPY,1,['bashrc /etc/bash.bashrc']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/centos-7-mpi-horovod.Dockerfile,ARG,8,"['CENTOS_VERSION=8', 'PYTHON=python3', 'TF_PACKAGE=tensorflow', 'TF_PACKAGE_VERSION=', 'HOROVOD_WITHOUT_PYTORCH=1', 'HOROVOD_WITHOUT_MXNET=1', 'HOROVOD_WITH_TENSORFLOW=1', 'HOROVOD_VERSION=v0.21.1']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/centos-7-mpi-horovod.Dockerfile,FROM,1,['centos:${CENTOS_VERSION} as base']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/centos-7-mpi-horovod.Dockerfile,ENV,5,"['LANG C.UTF-8', 'PATH=""/usr/lib64/openmpi/bin:${PATH}""', 'LC_ALL=en_US.UTF-8', 'LC_CTYPE=en_US.UTF-8', 'PATH=/opt/rh/devtoolset-8/root/usr/bin:/opt/rh/sclo-git25/root/usr/bin:/opt/rh/llvm-toolset-7/root/usr/bin:${PATH}']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/centos-7-mpi-horovod.Dockerfile,RUN,13,"['yum update -y && yum install -y     ${PYTHON}     ${PYTHON}-pip     which &&     yum clean all', '${PYTHON} -m pip --no-cache-dir install --upgrade     pip     setuptools', 'ln -sf $(which ${PYTHON}) /usr/local/bin/python &&     ln -sf $(which ${PYTHON}) /usr/local/bin/python3 &&     ln -sf $(which ${PYTHON}) /usr/bin/python', ""sed -i 's#/usr/bin/python#/usr/bin/python2#g' /usr/bin/yum /usr/libexec/urlgrabber-ext-down"", 'python3 -m pip install --no-cache-dir ${TF_PACKAGE}${TF_PACKAGE_VERSION:+==${TF_PACKAGE_VERSION}}', 'yum update -y && yum install -y     openmpi     openmpi-devel     openssh     openssh-server     which &&     yum clean all', 'mv -f $(which mpirun) /usr/bin/mpirun.real &&     echo \'#!/bin/bash\' > /usr/bin/mpirun &&     echo \'mpirun.real --allow-run-as-root ""$@""\' >> /usr/bin/mpirun &&     chmod a+x /usr/bin/mpirun', 'echo ""btl_tcp_if_exclude = lo,docker0"" >> /etc/openmpi-x86_64/openmpi-mca-params.conf', 'mkdir -p /var/run/sshd', 'cat /etc/ssh/sshd_config | grep -v StrictHostKeyChecking > /etc/ssh/sshd_config.new &&     echo ""    StrictHostKeyChecking no"" >> /etc/ssh/sshd_config.new &&     mv -f /etc/ssh/sshd_config.new /etc/ssh/sshd_config', 'yum update -y &&     yum install -y centos-release-scl &&     yum install -y         devtoolset-8         devtoolset-8-make         llvm-toolset-7-cmake         ${PYTHON}-devel         sclo-git25 &&     yum clean all', '${PYTHON} -m pip install git+https://github.com/horovod/horovod.git@${HOROVOD_VERSION}', 'chmod a+rwx /etc/bash.bashrc']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/centos-7-mpi-horovod.Dockerfile,COPY,1,['bashrc /etc/bash.bashrc']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-18.04-devel-mpich-horovod-jupyter.Dockerfile,ARG,10,"['UBUNTU_VERSION=20.04', 'DEBIAN_FRONTEND=""noninteractive""', 'CACHE_STOP=1', 'CHECKOUT_TF_SRC=0', 'TF_BRANCH=master', 'PYTHON=python3', 'BAZEL_VERSION=4.2.2', 'DEBIAN_FRONTEND=""noninteractive""', 'CHECKOUT_HOROVOD_SRC=0', 'HOROVOD_BRANCH=master']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-18.04-devel-mpich-horovod-jupyter.Dockerfile,FROM,1,['ubuntu:${UBUNTU_VERSION} AS base']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-18.04-devel-mpich-horovod-jupyter.Dockerfile,RUN,19,"['apt-get update && apt-get install -y --no-install-recommends --fix-missing         build-essential         curl         git         libcurl3-dev         libfreetype6-dev         libhdf5-serial-dev         libzmq3-dev         pkg-config         rsync         software-properties-common         sudo         unzip         zip         zlib1g-dev         openjdk-8-jdk         openjdk-8-jre-headless         &&     apt-get clean &&     rm -rf /var/lib/apt/lists/*', 'test ""${CHECKOUT_TF_SRC}"" -eq 1 && git clone https://github.com/tensorflow/tensorflow.git --branch ""${TF_BRANCH}"" --single-branch /tensorflow_src || true', 'apt-get update && apt-get install -y --no-install-recommends --fix-missing     ${PYTHON}     ${PYTHON}-pip', '${PYTHON} -m pip --no-cache-dir install --upgrade     pip     setuptools', 'ln -s $(which ${PYTHON}) /usr/local/bin/python', 'apt-get update && apt-get install -y --no-install-recommends --fix-missing     curl', 'mkdir /bazel &&     curl -fSsL -o /bazel/installer.sh ""https://github.com/bazelbuild/bazel/releases/download/${BAZEL_VERSION}/bazel-${BAZEL_VERSION}-installer-linux-x86_64.sh"" &&     curl -fSsL -o /bazel/LICENSE.txt ""https://raw.githubusercontent.com/bazelbuild/bazel/master/LICENSE"" &&     bash /bazel/installer.sh &&     rm -f /bazel/installer.sh', 'apt-get update && apt-get install -y --no-install-recommends --fix-missing     mpich     libmpich-dev     openssh-client     openssh-server &&     apt-get clean &&     rm -rf /var/lib/apt/lists/*', 'mv /usr/bin/mpirun /usr/bin/mpirun.real &&     echo \'#!/bin/bash\' > /usr/bin/mpirun &&     echo \'mpirun.real ""$@""\' >> /usr/bin/mpirun &&     chmod a+x /usr/bin/mpirun', 'mkdir -p /var/run/sshd', 'cat /etc/ssh/ssh_config | grep -v StrictHostKeyChecking > /etc/ssh/ssh_config.new &&     echo ""    StrictHostKeyChecking no"" >> /etc/ssh/ssh_config.new &&     mv /etc/ssh/ssh_config.new /etc/ssh/ssh_config', 'test ""${CHECKOUT_HOROVOD_SRC}"" -eq 1 && git clone --branch ""${HOROVOD_BRANCH}"" --single-branch --recursive https://github.com/uber/horovod.git /horovod_src || true', 'chmod a+rwx /etc/bash.bashrc', '${PYTHON} -m pip install --no-cache-dir jupyter matplotlib', '${PYTHON} -m pip install --no-cache-dir jupyter_http_over_ws ipykernel==5.1.1 nbformat==4.4.0', 'jupyter serverextension enable --py jupyter_http_over_ws', 'mkdir -p /tf/ && chmod -R a+rwx /tf/', 'mkdir /.local && chmod a+rwx /.local', '${PYTHON} -m ipykernel.kernelspec']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-18.04-devel-mpich-horovod-jupyter.Dockerfile,ENV,2,"['CI_BUILD_PYTHON python', 'LANG C.UTF-8']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-18.04-devel-mpich-horovod-jupyter.Dockerfile,COPY,1,['bashrc /etc/bash.bashrc']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-18.04-devel-mpich-horovod-jupyter.Dockerfile,WORKDIR,1,['/tf']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-18.04-devel-mpich-horovod-jupyter.Dockerfile,EXPOSE,1,['8888']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-18.04-devel-mpich-horovod-jupyter.Dockerfile,CMD,1,"['[""bash"", ""-c"", ""source /etc/bash.bashrc && jupyter notebook --notebook-dir=/tf --ip 0.0.0.0 --no-browser --allow-root""]']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-20.04-devel.Dockerfile,ARG,7,"['UBUNTU_VERSION=20.04', 'DEBIAN_FRONTEND=""noninteractive""', 'CACHE_STOP=1', 'CHECKOUT_TF_SRC=0', 'TF_BRANCH=master', 'PYTHON=python3', 'BAZEL_VERSION=4.2.2']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-20.04-devel.Dockerfile,FROM,1,['ubuntu:${UBUNTU_VERSION} AS base']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-20.04-devel.Dockerfile,RUN,8,"['apt-get update && apt-get install -y --no-install-recommends --fix-missing         build-essential         curl         git         libcurl3-dev         libfreetype6-dev         libhdf5-serial-dev         libzmq3-dev         pkg-config         rsync         software-properties-common         sudo         unzip         zip         zlib1g-dev         openjdk-8-jdk         openjdk-8-jre-headless         &&     apt-get clean &&     rm -rf /var/lib/apt/lists/*', 'test ""${CHECKOUT_TF_SRC}"" -eq 1 && git clone https://github.com/tensorflow/tensorflow.git --branch ""${TF_BRANCH}"" --single-branch /tensorflow_src || true', 'apt-get update && apt-get install -y --no-install-recommends --fix-missing     ${PYTHON}     ${PYTHON}-pip', '${PYTHON} -m pip --no-cache-dir install --upgrade     pip     setuptools', 'ln -s $(which ${PYTHON}) /usr/local/bin/python', 'apt-get update && apt-get install -y --no-install-recommends --fix-missing     curl', 'mkdir /bazel &&     curl -fSsL -o /bazel/installer.sh ""https://github.com/bazelbuild/bazel/releases/download/${BAZEL_VERSION}/bazel-${BAZEL_VERSION}-installer-linux-x86_64.sh"" &&     curl -fSsL -o /bazel/LICENSE.txt ""https://raw.githubusercontent.com/bazelbuild/bazel/master/LICENSE"" &&     bash /bazel/installer.sh &&     rm -f /bazel/installer.sh', 'chmod a+rwx /etc/bash.bashrc']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-20.04-devel.Dockerfile,ENV,2,"['CI_BUILD_PYTHON python', 'LANG C.UTF-8']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-20.04-devel.Dockerfile,COPY,1,['bashrc /etc/bash.bashrc']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-18.04.Dockerfile,ARG,4,"['UBUNTU_VERSION=20.04', 'PYTHON=python3', 'TF_PACKAGE=tensorflow', 'TF_PACKAGE_VERSION=']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-18.04.Dockerfile,FROM,1,['ubuntu:${UBUNTU_VERSION} as base']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-18.04.Dockerfile,ENV,1,['LANG C.UTF-8']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-18.04.Dockerfile,RUN,5,"['apt-get update && apt-get install -y --no-install-recommends --fix-missing     ${PYTHON}     ${PYTHON}-pip', '${PYTHON} -m pip --no-cache-dir install --upgrade     pip     setuptools', 'ln -s $(which ${PYTHON}) /usr/local/bin/python', 'python3 -m pip install --no-cache-dir ${TF_PACKAGE}${TF_PACKAGE_VERSION:+==${TF_PACKAGE_VERSION}}', 'chmod a+rwx /etc/bash.bashrc']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-18.04.Dockerfile,COPY,1,['bashrc /etc/bash.bashrc']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-20.04-devel-mpich-horovod-jupyter.Dockerfile,ARG,10,"['UBUNTU_VERSION=20.04', 'DEBIAN_FRONTEND=""noninteractive""', 'CACHE_STOP=1', 'CHECKOUT_TF_SRC=0', 'TF_BRANCH=master', 'PYTHON=python3', 'BAZEL_VERSION=4.2.2', 'DEBIAN_FRONTEND=""noninteractive""', 'CHECKOUT_HOROVOD_SRC=0', 'HOROVOD_BRANCH=master']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-20.04-devel-mpich-horovod-jupyter.Dockerfile,FROM,1,['ubuntu:${UBUNTU_VERSION} AS base']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-20.04-devel-mpich-horovod-jupyter.Dockerfile,RUN,19,"['apt-get update && apt-get install -y --no-install-recommends --fix-missing         build-essential         curl         git         libcurl3-dev         libfreetype6-dev         libhdf5-serial-dev         libzmq3-dev         pkg-config         rsync         software-properties-common         sudo         unzip         zip         zlib1g-dev         openjdk-8-jdk         openjdk-8-jre-headless         &&     apt-get clean &&     rm -rf /var/lib/apt/lists/*', 'test ""${CHECKOUT_TF_SRC}"" -eq 1 && git clone https://github.com/tensorflow/tensorflow.git --branch ""${TF_BRANCH}"" --single-branch /tensorflow_src || true', 'apt-get update && apt-get install -y --no-install-recommends --fix-missing     ${PYTHON}     ${PYTHON}-pip', '${PYTHON} -m pip --no-cache-dir install --upgrade     pip     setuptools', 'ln -s $(which ${PYTHON}) /usr/local/bin/python', 'apt-get update && apt-get install -y --no-install-recommends --fix-missing     curl', 'mkdir /bazel &&     curl -fSsL -o /bazel/installer.sh ""https://github.com/bazelbuild/bazel/releases/download/${BAZEL_VERSION}/bazel-${BAZEL_VERSION}-installer-linux-x86_64.sh"" &&     curl -fSsL -o /bazel/LICENSE.txt ""https://raw.githubusercontent.com/bazelbuild/bazel/master/LICENSE"" &&     bash /bazel/installer.sh &&     rm -f /bazel/installer.sh', 'apt-get update && apt-get install -y --no-install-recommends --fix-missing     mpich     libmpich-dev     openssh-client     openssh-server &&     apt-get clean &&     rm -rf /var/lib/apt/lists/*', 'mv /usr/bin/mpirun /usr/bin/mpirun.real &&     echo \'#!/bin/bash\' > /usr/bin/mpirun &&     echo \'mpirun.real ""$@""\' >> /usr/bin/mpirun &&     chmod a+x /usr/bin/mpirun', 'mkdir -p /var/run/sshd', 'cat /etc/ssh/ssh_config | grep -v StrictHostKeyChecking > /etc/ssh/ssh_config.new &&     echo ""    StrictHostKeyChecking no"" >> /etc/ssh/ssh_config.new &&     mv /etc/ssh/ssh_config.new /etc/ssh/ssh_config', 'test ""${CHECKOUT_HOROVOD_SRC}"" -eq 1 && git clone --branch ""${HOROVOD_BRANCH}"" --single-branch --recursive https://github.com/uber/horovod.git /horovod_src || true', 'chmod a+rwx /etc/bash.bashrc', '${PYTHON} -m pip install --no-cache-dir jupyter matplotlib', '${PYTHON} -m pip install --no-cache-dir jupyter_http_over_ws ipykernel==5.1.1 nbformat==4.4.0', 'jupyter serverextension enable --py jupyter_http_over_ws', 'mkdir -p /tf/ && chmod -R a+rwx /tf/', 'mkdir /.local && chmod a+rwx /.local', '${PYTHON} -m ipykernel.kernelspec']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-20.04-devel-mpich-horovod-jupyter.Dockerfile,ENV,2,"['CI_BUILD_PYTHON python', 'LANG C.UTF-8']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-20.04-devel-mpich-horovod-jupyter.Dockerfile,COPY,1,['bashrc /etc/bash.bashrc']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-20.04-devel-mpich-horovod-jupyter.Dockerfile,WORKDIR,1,['/tf']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-20.04-devel-mpich-horovod-jupyter.Dockerfile,EXPOSE,1,['8888']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-20.04-devel-mpich-horovod-jupyter.Dockerfile,CMD,1,"['[""bash"", ""-c"", ""source /etc/bash.bashrc && jupyter notebook --notebook-dir=/tf --ip 0.0.0.0 --no-browser --allow-root""]']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/centos-7-mpi-horovod-jupyter.Dockerfile,ARG,8,"['CENTOS_VERSION=8', 'PYTHON=python3', 'TF_PACKAGE=tensorflow', 'TF_PACKAGE_VERSION=', 'HOROVOD_WITHOUT_PYTORCH=1', 'HOROVOD_WITHOUT_MXNET=1', 'HOROVOD_WITH_TENSORFLOW=1', 'HOROVOD_VERSION=v0.21.1']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/centos-7-mpi-horovod-jupyter.Dockerfile,FROM,1,['centos:${CENTOS_VERSION} as base']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/centos-7-mpi-horovod-jupyter.Dockerfile,ENV,5,"['LANG C.UTF-8', 'PATH=""/usr/lib64/openmpi/bin:${PATH}""', 'LC_ALL=en_US.UTF-8', 'LC_CTYPE=en_US.UTF-8', 'PATH=/opt/rh/devtoolset-8/root/usr/bin:/opt/rh/sclo-git25/root/usr/bin:/opt/rh/llvm-toolset-7/root/usr/bin:${PATH}']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/centos-7-mpi-horovod-jupyter.Dockerfile,RUN,19,"['yum update -y && yum install -y     ${PYTHON}     ${PYTHON}-pip     which &&     yum clean all', '${PYTHON} -m pip --no-cache-dir install --upgrade     pip     setuptools', 'ln -sf $(which ${PYTHON}) /usr/local/bin/python &&     ln -sf $(which ${PYTHON}) /usr/local/bin/python3 &&     ln -sf $(which ${PYTHON}) /usr/bin/python', ""sed -i 's#/usr/bin/python#/usr/bin/python2#g' /usr/bin/yum /usr/libexec/urlgrabber-ext-down"", 'python3 -m pip install --no-cache-dir ${TF_PACKAGE}${TF_PACKAGE_VERSION:+==${TF_PACKAGE_VERSION}}', 'yum update -y && yum install -y     openmpi     openmpi-devel     openssh     openssh-server     which &&     yum clean all', 'mv -f $(which mpirun) /usr/bin/mpirun.real &&     echo \'#!/bin/bash\' > /usr/bin/mpirun &&     echo \'mpirun.real --allow-run-as-root ""$@""\' >> /usr/bin/mpirun &&     chmod a+x /usr/bin/mpirun', 'echo ""btl_tcp_if_exclude = lo,docker0"" >> /etc/openmpi-x86_64/openmpi-mca-params.conf', 'mkdir -p /var/run/sshd', 'cat /etc/ssh/sshd_config | grep -v StrictHostKeyChecking > /etc/ssh/sshd_config.new &&     echo ""    StrictHostKeyChecking no"" >> /etc/ssh/sshd_config.new &&     mv -f /etc/ssh/sshd_config.new /etc/ssh/sshd_config', 'yum update -y &&     yum install -y centos-release-scl &&     yum install -y         devtoolset-8         devtoolset-8-make         llvm-toolset-7-cmake         ${PYTHON}-devel         sclo-git25 &&     yum clean all', '${PYTHON} -m pip install git+https://github.com/horovod/horovod.git@${HOROVOD_VERSION}', 'chmod a+rwx /etc/bash.bashrc', '${PYTHON} -m pip install --no-cache-dir jupyter matplotlib', '${PYTHON} -m pip install --no-cache-dir jupyter_http_over_ws ipykernel==5.1.1 nbformat==4.4.0', 'jupyter serverextension enable --py jupyter_http_over_ws', 'mkdir -p /tf/ && chmod -R a+rwx /tf/', 'mkdir /.local && chmod a+rwx /.local', '${PYTHON} -m ipykernel.kernelspec']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/centos-7-mpi-horovod-jupyter.Dockerfile,COPY,1,['bashrc /etc/bash.bashrc']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/centos-7-mpi-horovod-jupyter.Dockerfile,WORKDIR,1,['/tf']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/centos-7-mpi-horovod-jupyter.Dockerfile,EXPOSE,1,['8888']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/centos-7-mpi-horovod-jupyter.Dockerfile,CMD,1,"['[""bash"", ""-c"", ""source /etc/bash.bashrc && jupyter notebook --notebook-dir=/tf --ip 0.0.0.0 --no-browser --allow-root""]']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-18.04-mpich-horovod-jupyter.Dockerfile,ARG,9,"['UBUNTU_VERSION=20.04', 'PYTHON=python3', 'TF_PACKAGE=tensorflow', 'TF_PACKAGE_VERSION=', 'DEBIAN_FRONTEND=""noninteractive""', 'HOROVOD_WITHOUT_PYTORCH=1', 'HOROVOD_WITHOUT_MXNET=1', 'HOROVOD_WITH_TENSORFLOW=1', 'HOROVOD_VERSION=v0.21.1']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-18.04-mpich-horovod-jupyter.Dockerfile,FROM,1,['ubuntu:${UBUNTU_VERSION} as base']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-18.04-mpich-horovod-jupyter.Dockerfile,ENV,1,['LANG C.UTF-8']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-18.04-mpich-horovod-jupyter.Dockerfile,RUN,18,"['apt-get update && apt-get install -y --no-install-recommends --fix-missing     ${PYTHON}     ${PYTHON}-pip', '${PYTHON} -m pip --no-cache-dir install --upgrade     pip     setuptools', 'ln -s $(which ${PYTHON}) /usr/local/bin/python', 'python3 -m pip install --no-cache-dir ${TF_PACKAGE}${TF_PACKAGE_VERSION:+==${TF_PACKAGE_VERSION}}', 'apt-get update && apt-get install -y --no-install-recommends --fix-missing     mpich     libmpich-dev     openssh-client     openssh-server &&     apt-get clean &&     rm -rf /var/lib/apt/lists/*', 'mv /usr/bin/mpirun /usr/bin/mpirun.real &&     echo \'#!/bin/bash\' > /usr/bin/mpirun &&     echo \'mpirun.real ""$@""\' >> /usr/bin/mpirun &&     chmod a+x /usr/bin/mpirun', 'mkdir -p /var/run/sshd', 'cat /etc/ssh/ssh_config | grep -v StrictHostKeyChecking > /etc/ssh/ssh_config.new &&     echo ""    StrictHostKeyChecking no"" >> /etc/ssh/ssh_config.new &&     mv /etc/ssh/ssh_config.new /etc/ssh/ssh_config', 'apt-get update && apt-get install -y --no-install-recommends --fix-missing     build-essential     cmake     g++-8     gcc-8     git     ${PYTHON}-dev', 'update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-7 700 --slave /usr/bin/g++ g++ /usr/bin/g++-7 &&     update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 800 --slave /usr/bin/g++ g++ /usr/bin/g++-8', '${PYTHON} -m pip install git+https://github.com/horovod/horovod.git@${HOROVOD_VERSION}', 'chmod a+rwx /etc/bash.bashrc', '${PYTHON} -m pip install --no-cache-dir jupyter matplotlib', '${PYTHON} -m pip install --no-cache-dir jupyter_http_over_ws ipykernel==5.1.1 nbformat==4.4.0', 'jupyter serverextension enable --py jupyter_http_over_ws', 'mkdir -p /tf/ && chmod -R a+rwx /tf/', 'mkdir /.local && chmod a+rwx /.local', '${PYTHON} -m ipykernel.kernelspec']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-18.04-mpich-horovod-jupyter.Dockerfile,COPY,1,['bashrc /etc/bash.bashrc']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-18.04-mpich-horovod-jupyter.Dockerfile,WORKDIR,1,['/tf']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-18.04-mpich-horovod-jupyter.Dockerfile,EXPOSE,1,['8888']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-18.04-mpich-horovod-jupyter.Dockerfile,CMD,1,"['[""bash"", ""-c"", ""source /etc/bash.bashrc && jupyter notebook --notebook-dir=/tf --ip 0.0.0.0 --no-browser --allow-root""]']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-16.04-devel-mpich-horovod.Dockerfile,ARG,10,"['UBUNTU_VERSION=20.04', 'DEBIAN_FRONTEND=""noninteractive""', 'CACHE_STOP=1', 'CHECKOUT_TF_SRC=0', 'TF_BRANCH=master', 'PYTHON=python3', 'BAZEL_VERSION=4.2.2', 'DEBIAN_FRONTEND=""noninteractive""', 'CHECKOUT_HOROVOD_SRC=0', 'HOROVOD_BRANCH=master']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-16.04-devel-mpich-horovod.Dockerfile,FROM,1,['ubuntu:${UBUNTU_VERSION} AS base']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-16.04-devel-mpich-horovod.Dockerfile,RUN,17,"['apt-get update && apt-get install -y --no-install-recommends --fix-missing         build-essential         curl         git         libcurl3-dev         libfreetype6-dev         libhdf5-serial-dev         libzmq3-dev         pkg-config         rsync         software-properties-common         sudo         unzip         zip         zlib1g-dev         openjdk-8-jdk         openjdk-8-jre-headless         &&     apt-get clean &&     rm -rf /var/lib/apt/lists/*', 'test ""${CHECKOUT_TF_SRC}"" -eq 1 && git clone https://github.com/tensorflow/tensorflow.git --branch ""${TF_BRANCH}"" --single-branch /tensorflow_src || true', 'apt-get update && apt-get install -y --no-install-recommends --fix-missing     curl     software-properties-common', 'add-apt-repository ppa:deadsnakes/ppa', 'apt-get update && apt-get install -y --no-install-recommends --fix-missing     ${PYTHON}', 'curl -fSsL https://bootstrap.pypa.io/get-pip.py | ${PYTHON}', '${PYTHON} -m pip --no-cache-dir install --upgrade     pip     setuptools', 'ln -sf $(which ${PYTHON}) /usr/local/bin/python &&     ln -sf $(which ${PYTHON}) /usr/local/bin/python3 &&     ln -sf $(which ${PYTHON}) /usr/bin/python &&     ln -sf $(which ${PYTHON}) /usr/bin/python3', 'apt-get update && apt-get install -y --no-install-recommends --fix-missing     curl', 'mkdir /bazel &&     curl -fSsL -o /bazel/installer.sh ""https://github.com/bazelbuild/bazel/releases/download/${BAZEL_VERSION}/bazel-${BAZEL_VERSION}-installer-linux-x86_64.sh"" &&     curl -fSsL -o /bazel/LICENSE.txt ""https://raw.githubusercontent.com/bazelbuild/bazel/master/LICENSE"" &&     bash /bazel/installer.sh &&     rm -f /bazel/installer.sh', 'apt-get update && apt-get install -y --no-install-recommends --fix-missing     mpich     libmpich-dev     openssh-client     openssh-server &&     apt-get clean &&     rm -rf /var/lib/apt/lists/*', 'mv /usr/bin/mpirun /usr/bin/mpirun.real &&     echo \'#!/bin/bash\' > /usr/bin/mpirun &&     echo \'mpirun.real ""$@""\' >> /usr/bin/mpirun &&     chmod a+x /usr/bin/mpirun', ""sed -i 's/# if __GNUC__ > 5/# if __GNUC__ > 9/g' /usr/include/mpich/mpicxx.h"", 'mkdir -p /var/run/sshd', 'cat /etc/ssh/ssh_config | grep -v StrictHostKeyChecking > /etc/ssh/ssh_config.new &&     echo ""    StrictHostKeyChecking no"" >> /etc/ssh/ssh_config.new &&     mv /etc/ssh/ssh_config.new /etc/ssh/ssh_config', 'test ""${CHECKOUT_HOROVOD_SRC}"" -eq 1 && git clone --branch ""${HOROVOD_BRANCH}"" --single-branch --recursive https://github.com/uber/horovod.git /horovod_src || true', 'chmod a+rwx /etc/bash.bashrc']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-16.04-devel-mpich-horovod.Dockerfile,ENV,2,"['CI_BUILD_PYTHON python', 'LANG C.UTF-8']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-16.04-devel-mpich-horovod.Dockerfile,COPY,1,['bashrc /etc/bash.bashrc']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/centos-7-devel-mpich-horovod-jupyter.Dockerfile,ARG,8,"['CENTOS_VERSION=8', 'CACHE_STOP=1', 'CHECKOUT_TF_SRC=0', 'TF_BRANCH=master', 'PYTHON=python3', 'BAZEL_VERSION=4.2.2', 'CHECKOUT_HOROVOD_SRC=0', 'HOROVOD_BRANCH=master']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/centos-7-devel-mpich-horovod-jupyter.Dockerfile,FROM,1,['centos:${CENTOS_VERSION} AS base']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/centos-7-devel-mpich-horovod-jupyter.Dockerfile,RUN,20,"['yum clean all &&     yum update -y &&     yum install -y epel-release', 'yum update -y &&     yum install -y         curl         freetype-devel         gcc         gcc-c++         git         hdf5-devel         java-1.8.0-openjdk         java-1.8.0-openjdk-devel         java-1.8.0-openjdk-headless         libcurl-devel         make         pkg-config         rsync         sudo         unzip         zeromq-devel         zip         zlib-devel &&         yum clean all', 'test ""${CHECKOUT_TF_SRC}"" -eq 1 && git clone https://github.com/tensorflow/tensorflow.git --branch ""${TF_BRANCH}"" --single-branch /tensorflow_src || true', 'yum update -y && yum install -y     ${PYTHON}     ${PYTHON}-pip     which &&     yum clean all', '${PYTHON} -m pip --no-cache-dir install --upgrade     pip     setuptools', 'ln -sf $(which ${PYTHON}) /usr/local/bin/python &&     ln -sf $(which ${PYTHON}) /usr/local/bin/python3 &&     ln -sf $(which ${PYTHON}) /usr/bin/python', ""sed -i 's#/usr/bin/python#/usr/bin/python2#g' /usr/bin/yum /usr/libexec/urlgrabber-ext-down"", 'mkdir /bazel &&     curl -fSsL -o /bazel/installer.sh ""https://github.com/bazelbuild/bazel/releases/download/${BAZEL_VERSION}/bazel-${BAZEL_VERSION}-installer-linux-x86_64.sh"" &&     curl -fSsL -o /bazel/LICENSE.txt ""https://raw.githubusercontent.com/bazelbuild/bazel/master/LICENSE"" &&     bash /bazel/installer.sh &&     rm -f /bazel/installer.sh', 'yum update -y && yum install -y     mpich     mpich-devel     openssh     openssh-server     redhat-rpm-config     which &&     yum clean all', 'mv -f $(which mpirun) /usr/bin/mpirun.real &&     echo \'#!/bin/bash\' > /usr/bin/mpirun &&     echo \'mpirun.real ""$@""\' >> /usr/bin/mpirun &&     chmod a+x /usr/bin/mpirun', 'mkdir -p /var/run/sshd', 'cat /etc/ssh/sshd_config | grep -v StrictHostKeyChecking > /etc/ssh/sshd_config.new &&     echo ""    StrictHostKeyChecking no"" >> /etc/ssh/sshd_config.new &&     mv -f /etc/ssh/sshd_config.new /etc/ssh/sshd_config', 'test ""${CHECKOUT_HOROVOD_SRC}"" -eq 1 && git clone --branch ""${HOROVOD_BRANCH}"" --single-branch --recursive https://github.com/uber/horovod.git /horovod_src || true', 'chmod a+rwx /etc/bash.bashrc', '${PYTHON} -m pip install --no-cache-dir jupyter matplotlib', '${PYTHON} -m pip install --no-cache-dir jupyter_http_over_ws ipykernel==5.1.1 nbformat==4.4.0', 'jupyter serverextension enable --py jupyter_http_over_ws', 'mkdir -p /tf/ && chmod -R a+rwx /tf/', 'mkdir /.local && chmod a+rwx /.local', '${PYTHON} -m ipykernel.kernelspec']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/centos-7-devel-mpich-horovod-jupyter.Dockerfile,ENV,3,"['CI_BUILD_PYTHON python', 'LANG C.UTF-8', 'PATH=""/usr/lib64/mpich/bin:${PATH}""']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/centos-7-devel-mpich-horovod-jupyter.Dockerfile,COPY,1,['bashrc /etc/bash.bashrc']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/centos-7-devel-mpich-horovod-jupyter.Dockerfile,WORKDIR,1,['/tf']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/centos-7-devel-mpich-horovod-jupyter.Dockerfile,EXPOSE,1,['8888']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/centos-7-devel-mpich-horovod-jupyter.Dockerfile,CMD,1,"['[""bash"", ""-c"", ""source /etc/bash.bashrc && jupyter notebook --notebook-dir=/tf --ip 0.0.0.0 --no-browser --allow-root""]']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-18.04-devel-jupyter.Dockerfile,ARG,7,"['UBUNTU_VERSION=20.04', 'DEBIAN_FRONTEND=""noninteractive""', 'CACHE_STOP=1', 'CHECKOUT_TF_SRC=0', 'TF_BRANCH=master', 'PYTHON=python3', 'BAZEL_VERSION=4.2.2']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-18.04-devel-jupyter.Dockerfile,FROM,1,['ubuntu:${UBUNTU_VERSION} AS base']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-18.04-devel-jupyter.Dockerfile,RUN,14,"['apt-get update && apt-get install -y --no-install-recommends --fix-missing         build-essential         curl         git         libcurl3-dev         libfreetype6-dev         libhdf5-serial-dev         libzmq3-dev         pkg-config         rsync         software-properties-common         sudo         unzip         zip         zlib1g-dev         openjdk-8-jdk         openjdk-8-jre-headless         &&     apt-get clean &&     rm -rf /var/lib/apt/lists/*', 'test ""${CHECKOUT_TF_SRC}"" -eq 1 && git clone https://github.com/tensorflow/tensorflow.git --branch ""${TF_BRANCH}"" --single-branch /tensorflow_src || true', 'apt-get update && apt-get install -y --no-install-recommends --fix-missing     ${PYTHON}     ${PYTHON}-pip', '${PYTHON} -m pip --no-cache-dir install --upgrade     pip     setuptools', 'ln -s $(which ${PYTHON}) /usr/local/bin/python', 'apt-get update && apt-get install -y --no-install-recommends --fix-missing     curl', 'mkdir /bazel &&     curl -fSsL -o /bazel/installer.sh ""https://github.com/bazelbuild/bazel/releases/download/${BAZEL_VERSION}/bazel-${BAZEL_VERSION}-installer-linux-x86_64.sh"" &&     curl -fSsL -o /bazel/LICENSE.txt ""https://raw.githubusercontent.com/bazelbuild/bazel/master/LICENSE"" &&     bash /bazel/installer.sh &&     rm -f /bazel/installer.sh', 'chmod a+rwx /etc/bash.bashrc', '${PYTHON} -m pip install --no-cache-dir jupyter matplotlib', '${PYTHON} -m pip install --no-cache-dir jupyter_http_over_ws ipykernel==5.1.1 nbformat==4.4.0', 'jupyter serverextension enable --py jupyter_http_over_ws', 'mkdir -p /tf/ && chmod -R a+rwx /tf/', 'mkdir /.local && chmod a+rwx /.local', '${PYTHON} -m ipykernel.kernelspec']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-18.04-devel-jupyter.Dockerfile,ENV,2,"['CI_BUILD_PYTHON python', 'LANG C.UTF-8']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-18.04-devel-jupyter.Dockerfile,COPY,1,['bashrc /etc/bash.bashrc']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-18.04-devel-jupyter.Dockerfile,WORKDIR,1,['/tf']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-18.04-devel-jupyter.Dockerfile,EXPOSE,1,['8888']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-18.04-devel-jupyter.Dockerfile,CMD,1,"['[""bash"", ""-c"", ""source /etc/bash.bashrc && jupyter notebook --notebook-dir=/tf --ip 0.0.0.0 --no-browser --allow-root""]']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-20.04-jupyter.Dockerfile,ARG,4,"['UBUNTU_VERSION=20.04', 'PYTHON=python3', 'TF_PACKAGE=tensorflow', 'TF_PACKAGE_VERSION=']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-20.04-jupyter.Dockerfile,FROM,1,['ubuntu:${UBUNTU_VERSION} as base']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-20.04-jupyter.Dockerfile,ENV,1,['LANG C.UTF-8']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-20.04-jupyter.Dockerfile,RUN,11,"['apt-get update && apt-get install -y --no-install-recommends --fix-missing     ${PYTHON}     ${PYTHON}-pip', '${PYTHON} -m pip --no-cache-dir install --upgrade     pip     setuptools', 'ln -s $(which ${PYTHON}) /usr/local/bin/python', 'python3 -m pip install --no-cache-dir ${TF_PACKAGE}${TF_PACKAGE_VERSION:+==${TF_PACKAGE_VERSION}}', 'chmod a+rwx /etc/bash.bashrc', '${PYTHON} -m pip install --no-cache-dir jupyter matplotlib', '${PYTHON} -m pip install --no-cache-dir jupyter_http_over_ws ipykernel==5.1.1 nbformat==4.4.0', 'jupyter serverextension enable --py jupyter_http_over_ws', 'mkdir -p /tf/ && chmod -R a+rwx /tf/', 'mkdir /.local && chmod a+rwx /.local', '${PYTHON} -m ipykernel.kernelspec']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-20.04-jupyter.Dockerfile,COPY,1,['bashrc /etc/bash.bashrc']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-20.04-jupyter.Dockerfile,WORKDIR,1,['/tf']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-20.04-jupyter.Dockerfile,EXPOSE,1,['8888']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-20.04-jupyter.Dockerfile,CMD,1,"['[""bash"", ""-c"", ""source /etc/bash.bashrc && jupyter notebook --notebook-dir=/tf --ip 0.0.0.0 --no-browser --allow-root""]']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/centos-8-devel-mpi-horovod-jupyter.Dockerfile,ARG,9,"['CENTOS_VERSION=8', 'CENTOS_VERSION=8', 'CACHE_STOP=1', 'CHECKOUT_TF_SRC=0', 'TF_BRANCH=master', 'PYTHON=python3', 'BAZEL_VERSION=4.2.2', 'CHECKOUT_HOROVOD_SRC=0', 'HOROVOD_BRANCH=master']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/centos-8-devel-mpi-horovod-jupyter.Dockerfile,FROM,1,['centos:${CENTOS_VERSION} AS base']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/centos-8-devel-mpi-horovod-jupyter.Dockerfile,RUN,20,"['dnf install -y \'dnf-command(config-manager)\' &&     dnf config-manager --set-enabled powertools &&     dnf install -y https://dl.fedoraproject.org/pub/epel/epel-release-latest-""${CENTOS_VERSION}"".noarch.rpm &&     dnf clean all', 'yum update -y &&     yum install -y         curl         freetype-devel         gcc         gcc-c++         git         hdf5-devel         java-1.8.0-openjdk         java-1.8.0-openjdk-devel         java-1.8.0-openjdk-headless         libcurl-devel         make         pkg-config         rsync         sudo         unzip         zeromq-devel         zip         zlib-devel &&         yum clean all', 'test ""${CHECKOUT_TF_SRC}"" -eq 1 && git clone https://github.com/tensorflow/tensorflow.git --branch ""${TF_BRANCH}"" --single-branch /tensorflow_src || true', 'yum update -y && yum install -y     ${PYTHON}     ${PYTHON}-pip     which &&     yum clean all', '${PYTHON} -m pip --no-cache-dir install --upgrade     pip     setuptools', 'ln -sf $(which ${PYTHON}) /usr/local/bin/python &&     ln -sf $(which ${PYTHON}) /usr/local/bin/python3 &&     ln -sf $(which ${PYTHON}) /usr/bin/python', 'mkdir /bazel &&     curl -fSsL -o /bazel/installer.sh ""https://github.com/bazelbuild/bazel/releases/download/${BAZEL_VERSION}/bazel-${BAZEL_VERSION}-installer-linux-x86_64.sh"" &&     curl -fSsL -o /bazel/LICENSE.txt ""https://raw.githubusercontent.com/bazelbuild/bazel/master/LICENSE"" &&     bash /bazel/installer.sh &&     rm -f /bazel/installer.sh', 'yum update -y && yum install -y     openmpi     openmpi-devel     openssh     openssh-server     which &&     yum clean all', 'mv -f $(which mpirun) /usr/bin/mpirun.real &&     echo \'#!/bin/bash\' > /usr/bin/mpirun &&     echo \'mpirun.real --allow-run-as-root ""$@""\' >> /usr/bin/mpirun &&     chmod a+x /usr/bin/mpirun', 'echo ""btl_tcp_if_exclude = lo,docker0"" >> /etc/openmpi-x86_64/openmpi-mca-params.conf', 'mkdir -p /var/run/sshd', 'cat /etc/ssh/sshd_config | grep -v StrictHostKeyChecking > /etc/ssh/sshd_config.new &&     echo ""    StrictHostKeyChecking no"" >> /etc/ssh/sshd_config.new &&     mv -f /etc/ssh/sshd_config.new /etc/ssh/sshd_config', 'test ""${CHECKOUT_HOROVOD_SRC}"" -eq 1 && git clone --branch ""${HOROVOD_BRANCH}"" --single-branch --recursive https://github.com/uber/horovod.git /horovod_src || true', 'chmod a+rwx /etc/bash.bashrc', '${PYTHON} -m pip install --no-cache-dir jupyter matplotlib', '${PYTHON} -m pip install --no-cache-dir jupyter_http_over_ws ipykernel==5.1.1 nbformat==4.4.0', 'jupyter serverextension enable --py jupyter_http_over_ws', 'mkdir -p /tf/ && chmod -R a+rwx /tf/', 'mkdir /.local && chmod a+rwx /.local', '${PYTHON} -m ipykernel.kernelspec']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/centos-8-devel-mpi-horovod-jupyter.Dockerfile,ENV,3,"['CI_BUILD_PYTHON python', 'LANG C.UTF-8', 'PATH=""/usr/lib64/openmpi/bin:${PATH}""']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/centos-8-devel-mpi-horovod-jupyter.Dockerfile,COPY,1,['bashrc /etc/bash.bashrc']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/centos-8-devel-mpi-horovod-jupyter.Dockerfile,WORKDIR,1,['/tf']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/centos-8-devel-mpi-horovod-jupyter.Dockerfile,EXPOSE,1,['8888']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/centos-8-devel-mpi-horovod-jupyter.Dockerfile,CMD,1,"['[""bash"", ""-c"", ""source /etc/bash.bashrc && jupyter notebook --notebook-dir=/tf --ip 0.0.0.0 --no-browser --allow-root""]']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-20.04.Dockerfile,ARG,4,"['UBUNTU_VERSION=20.04', 'PYTHON=python3', 'TF_PACKAGE=tensorflow', 'TF_PACKAGE_VERSION=']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-20.04.Dockerfile,FROM,1,['ubuntu:${UBUNTU_VERSION} as base']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-20.04.Dockerfile,ENV,1,['LANG C.UTF-8']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-20.04.Dockerfile,RUN,5,"['apt-get update && apt-get install -y --no-install-recommends --fix-missing     ${PYTHON}     ${PYTHON}-pip', '${PYTHON} -m pip --no-cache-dir install --upgrade     pip     setuptools', 'ln -s $(which ${PYTHON}) /usr/local/bin/python', 'python3 -m pip install --no-cache-dir ${TF_PACKAGE}${TF_PACKAGE_VERSION:+==${TF_PACKAGE_VERSION}}', 'chmod a+rwx /etc/bash.bashrc']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-20.04.Dockerfile,COPY,1,['bashrc /etc/bash.bashrc']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-20.04-mpich-horovod-jupyter.Dockerfile,ARG,9,"['UBUNTU_VERSION=20.04', 'PYTHON=python3', 'TF_PACKAGE=tensorflow', 'TF_PACKAGE_VERSION=', 'DEBIAN_FRONTEND=""noninteractive""', 'HOROVOD_WITHOUT_PYTORCH=1', 'HOROVOD_WITHOUT_MXNET=1', 'HOROVOD_WITH_TENSORFLOW=1', 'HOROVOD_VERSION=v0.21.1']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-20.04-mpich-horovod-jupyter.Dockerfile,FROM,1,['ubuntu:${UBUNTU_VERSION} as base']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-20.04-mpich-horovod-jupyter.Dockerfile,ENV,1,['LANG C.UTF-8']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-20.04-mpich-horovod-jupyter.Dockerfile,RUN,18,"['apt-get update && apt-get install -y --no-install-recommends --fix-missing     ${PYTHON}     ${PYTHON}-pip', '${PYTHON} -m pip --no-cache-dir install --upgrade     pip     setuptools', 'ln -s $(which ${PYTHON}) /usr/local/bin/python', 'python3 -m pip install --no-cache-dir ${TF_PACKAGE}${TF_PACKAGE_VERSION:+==${TF_PACKAGE_VERSION}}', 'apt-get update && apt-get install -y --no-install-recommends --fix-missing     mpich     libmpich-dev     openssh-client     openssh-server &&     apt-get clean &&     rm -rf /var/lib/apt/lists/*', 'mv /usr/bin/mpirun /usr/bin/mpirun.real &&     echo \'#!/bin/bash\' > /usr/bin/mpirun &&     echo \'mpirun.real ""$@""\' >> /usr/bin/mpirun &&     chmod a+x /usr/bin/mpirun', 'mkdir -p /var/run/sshd', 'cat /etc/ssh/ssh_config | grep -v StrictHostKeyChecking > /etc/ssh/ssh_config.new &&     echo ""    StrictHostKeyChecking no"" >> /etc/ssh/ssh_config.new &&     mv /etc/ssh/ssh_config.new /etc/ssh/ssh_config', 'apt-get update && apt-get install -y --no-install-recommends --fix-missing     build-essential     cmake     g++-8     gcc-8     git     ${PYTHON}-dev', 'update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 100 --slave /usr/bin/g++ g++ /usr/bin/g++-9 &&     update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 800 --slave /usr/bin/g++ g++ /usr/bin/g++-8', '${PYTHON} -m pip install git+https://github.com/horovod/horovod.git@${HOROVOD_VERSION}', 'chmod a+rwx /etc/bash.bashrc', '${PYTHON} -m pip install --no-cache-dir jupyter matplotlib', '${PYTHON} -m pip install --no-cache-dir jupyter_http_over_ws ipykernel==5.1.1 nbformat==4.4.0', 'jupyter serverextension enable --py jupyter_http_over_ws', 'mkdir -p /tf/ && chmod -R a+rwx /tf/', 'mkdir /.local && chmod a+rwx /.local', '${PYTHON} -m ipykernel.kernelspec']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-20.04-mpich-horovod-jupyter.Dockerfile,COPY,1,['bashrc /etc/bash.bashrc']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-20.04-mpich-horovod-jupyter.Dockerfile,WORKDIR,1,['/tf']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-20.04-mpich-horovod-jupyter.Dockerfile,EXPOSE,1,['8888']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-20.04-mpich-horovod-jupyter.Dockerfile,CMD,1,"['[""bash"", ""-c"", ""source /etc/bash.bashrc && jupyter notebook --notebook-dir=/tf --ip 0.0.0.0 --no-browser --allow-root""]']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/centos-7-mpich-horovod-jupyter.Dockerfile,ARG,8,"['CENTOS_VERSION=8', 'PYTHON=python3', 'TF_PACKAGE=tensorflow', 'TF_PACKAGE_VERSION=', 'HOROVOD_WITHOUT_PYTORCH=1', 'HOROVOD_WITHOUT_MXNET=1', 'HOROVOD_WITH_TENSORFLOW=1', 'HOROVOD_VERSION=v0.21.1']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/centos-7-mpich-horovod-jupyter.Dockerfile,FROM,1,['centos:${CENTOS_VERSION} as base']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/centos-7-mpich-horovod-jupyter.Dockerfile,ENV,5,"['LANG C.UTF-8', 'PATH=""/usr/lib64/mpich/bin:${PATH}""', 'LC_ALL=en_US.UTF-8', 'LC_CTYPE=en_US.UTF-8', 'PATH=/opt/rh/devtoolset-8/root/usr/bin:/opt/rh/sclo-git25/root/usr/bin:/opt/rh/llvm-toolset-7/root/usr/bin:${PATH}']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/centos-7-mpich-horovod-jupyter.Dockerfile,RUN,18,"['yum update -y && yum install -y     ${PYTHON}     ${PYTHON}-pip     which &&     yum clean all', '${PYTHON} -m pip --no-cache-dir install --upgrade     pip     setuptools', 'ln -sf $(which ${PYTHON}) /usr/local/bin/python &&     ln -sf $(which ${PYTHON}) /usr/local/bin/python3 &&     ln -sf $(which ${PYTHON}) /usr/bin/python', ""sed -i 's#/usr/bin/python#/usr/bin/python2#g' /usr/bin/yum /usr/libexec/urlgrabber-ext-down"", 'python3 -m pip install --no-cache-dir ${TF_PACKAGE}${TF_PACKAGE_VERSION:+==${TF_PACKAGE_VERSION}}', 'yum update -y && yum install -y     mpich     mpich-devel     openssh     openssh-server     redhat-rpm-config     which &&     yum clean all', 'mv -f $(which mpirun) /usr/bin/mpirun.real &&     echo \'#!/bin/bash\' > /usr/bin/mpirun &&     echo \'mpirun.real ""$@""\' >> /usr/bin/mpirun &&     chmod a+x /usr/bin/mpirun', 'mkdir -p /var/run/sshd', 'cat /etc/ssh/sshd_config | grep -v StrictHostKeyChecking > /etc/ssh/sshd_config.new &&     echo ""    StrictHostKeyChecking no"" >> /etc/ssh/sshd_config.new &&     mv -f /etc/ssh/sshd_config.new /etc/ssh/sshd_config', 'yum update -y &&     yum install -y centos-release-scl &&     yum install -y         devtoolset-8         devtoolset-8-make         llvm-toolset-7-cmake         ${PYTHON}-devel         sclo-git25 &&     yum clean all', '${PYTHON} -m pip install git+https://github.com/horovod/horovod.git@${HOROVOD_VERSION}', 'chmod a+rwx /etc/bash.bashrc', '${PYTHON} -m pip install --no-cache-dir jupyter matplotlib', '${PYTHON} -m pip install --no-cache-dir jupyter_http_over_ws ipykernel==5.1.1 nbformat==4.4.0', 'jupyter serverextension enable --py jupyter_http_over_ws', 'mkdir -p /tf/ && chmod -R a+rwx /tf/', 'mkdir /.local && chmod a+rwx /.local', '${PYTHON} -m ipykernel.kernelspec']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/centos-7-mpich-horovod-jupyter.Dockerfile,COPY,1,['bashrc /etc/bash.bashrc']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/centos-7-mpich-horovod-jupyter.Dockerfile,WORKDIR,1,['/tf']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/centos-7-mpich-horovod-jupyter.Dockerfile,EXPOSE,1,['8888']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/centos-7-mpich-horovod-jupyter.Dockerfile,CMD,1,"['[""bash"", ""-c"", ""source /etc/bash.bashrc && jupyter notebook --notebook-dir=/tf --ip 0.0.0.0 --no-browser --allow-root""]']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-16.04-devel.Dockerfile,ARG,7,"['UBUNTU_VERSION=20.04', 'DEBIAN_FRONTEND=""noninteractive""', 'CACHE_STOP=1', 'CHECKOUT_TF_SRC=0', 'TF_BRANCH=master', 'PYTHON=python3', 'BAZEL_VERSION=4.2.2']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-16.04-devel.Dockerfile,FROM,1,['ubuntu:${UBUNTU_VERSION} AS base']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-16.04-devel.Dockerfile,RUN,11,"['apt-get update && apt-get install -y --no-install-recommends --fix-missing         build-essential         curl         git         libcurl3-dev         libfreetype6-dev         libhdf5-serial-dev         libzmq3-dev         pkg-config         rsync         software-properties-common         sudo         unzip         zip         zlib1g-dev         openjdk-8-jdk         openjdk-8-jre-headless         &&     apt-get clean &&     rm -rf /var/lib/apt/lists/*', 'test ""${CHECKOUT_TF_SRC}"" -eq 1 && git clone https://github.com/tensorflow/tensorflow.git --branch ""${TF_BRANCH}"" --single-branch /tensorflow_src || true', 'apt-get update && apt-get install -y --no-install-recommends --fix-missing     curl     software-properties-common', 'add-apt-repository ppa:deadsnakes/ppa', 'apt-get update && apt-get install -y --no-install-recommends --fix-missing     ${PYTHON}', 'curl -fSsL https://bootstrap.pypa.io/get-pip.py | ${PYTHON}', '${PYTHON} -m pip --no-cache-dir install --upgrade     pip     setuptools', 'ln -sf $(which ${PYTHON}) /usr/local/bin/python &&     ln -sf $(which ${PYTHON}) /usr/local/bin/python3 &&     ln -sf $(which ${PYTHON}) /usr/bin/python &&     ln -sf $(which ${PYTHON}) /usr/bin/python3', 'apt-get update && apt-get install -y --no-install-recommends --fix-missing     curl', 'mkdir /bazel &&     curl -fSsL -o /bazel/installer.sh ""https://github.com/bazelbuild/bazel/releases/download/${BAZEL_VERSION}/bazel-${BAZEL_VERSION}-installer-linux-x86_64.sh"" &&     curl -fSsL -o /bazel/LICENSE.txt ""https://raw.githubusercontent.com/bazelbuild/bazel/master/LICENSE"" &&     bash /bazel/installer.sh &&     rm -f /bazel/installer.sh', 'chmod a+rwx /etc/bash.bashrc']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-16.04-devel.Dockerfile,ENV,2,"['CI_BUILD_PYTHON python', 'LANG C.UTF-8']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-16.04-devel.Dockerfile,COPY,1,['bashrc /etc/bash.bashrc']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-20.04-devel-mpich-horovod.Dockerfile,ARG,10,"['UBUNTU_VERSION=20.04', 'DEBIAN_FRONTEND=""noninteractive""', 'CACHE_STOP=1', 'CHECKOUT_TF_SRC=0', 'TF_BRANCH=master', 'PYTHON=python3', 'BAZEL_VERSION=4.2.2', 'DEBIAN_FRONTEND=""noninteractive""', 'CHECKOUT_HOROVOD_SRC=0', 'HOROVOD_BRANCH=master']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-20.04-devel-mpich-horovod.Dockerfile,FROM,1,['ubuntu:${UBUNTU_VERSION} AS base']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-20.04-devel-mpich-horovod.Dockerfile,RUN,13,"['apt-get update && apt-get install -y --no-install-recommends --fix-missing         build-essential         curl         git         libcurl3-dev         libfreetype6-dev         libhdf5-serial-dev         libzmq3-dev         pkg-config         rsync         software-properties-common         sudo         unzip         zip         zlib1g-dev         openjdk-8-jdk         openjdk-8-jre-headless         &&     apt-get clean &&     rm -rf /var/lib/apt/lists/*', 'test ""${CHECKOUT_TF_SRC}"" -eq 1 && git clone https://github.com/tensorflow/tensorflow.git --branch ""${TF_BRANCH}"" --single-branch /tensorflow_src || true', 'apt-get update && apt-get install -y --no-install-recommends --fix-missing     ${PYTHON}     ${PYTHON}-pip', '${PYTHON} -m pip --no-cache-dir install --upgrade     pip     setuptools', 'ln -s $(which ${PYTHON}) /usr/local/bin/python', 'apt-get update && apt-get install -y --no-install-recommends --fix-missing     curl', 'mkdir /bazel &&     curl -fSsL -o /bazel/installer.sh ""https://github.com/bazelbuild/bazel/releases/download/${BAZEL_VERSION}/bazel-${BAZEL_VERSION}-installer-linux-x86_64.sh"" &&     curl -fSsL -o /bazel/LICENSE.txt ""https://raw.githubusercontent.com/bazelbuild/bazel/master/LICENSE"" &&     bash /bazel/installer.sh &&     rm -f /bazel/installer.sh', 'apt-get update && apt-get install -y --no-install-recommends --fix-missing     mpich     libmpich-dev     openssh-client     openssh-server &&     apt-get clean &&     rm -rf /var/lib/apt/lists/*', 'mv /usr/bin/mpirun /usr/bin/mpirun.real &&     echo \'#!/bin/bash\' > /usr/bin/mpirun &&     echo \'mpirun.real ""$@""\' >> /usr/bin/mpirun &&     chmod a+x /usr/bin/mpirun', 'mkdir -p /var/run/sshd', 'cat /etc/ssh/ssh_config | grep -v StrictHostKeyChecking > /etc/ssh/ssh_config.new &&     echo ""    StrictHostKeyChecking no"" >> /etc/ssh/ssh_config.new &&     mv /etc/ssh/ssh_config.new /etc/ssh/ssh_config', 'test ""${CHECKOUT_HOROVOD_SRC}"" -eq 1 && git clone --branch ""${HOROVOD_BRANCH}"" --single-branch --recursive https://github.com/uber/horovod.git /horovod_src || true', 'chmod a+rwx /etc/bash.bashrc']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-20.04-devel-mpich-horovod.Dockerfile,ENV,2,"['CI_BUILD_PYTHON python', 'LANG C.UTF-8']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-20.04-devel-mpich-horovod.Dockerfile,COPY,1,['bashrc /etc/bash.bashrc']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/centos-8-devel-jupyter.Dockerfile,ARG,7,"['CENTOS_VERSION=8', 'CENTOS_VERSION=8', 'CACHE_STOP=1', 'CHECKOUT_TF_SRC=0', 'TF_BRANCH=master', 'PYTHON=python3', 'BAZEL_VERSION=4.2.2']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/centos-8-devel-jupyter.Dockerfile,FROM,1,['centos:${CENTOS_VERSION} AS base']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/centos-8-devel-jupyter.Dockerfile,RUN,14,"['dnf install -y \'dnf-command(config-manager)\' &&     dnf config-manager --set-enabled powertools &&     dnf install -y https://dl.fedoraproject.org/pub/epel/epel-release-latest-""${CENTOS_VERSION}"".noarch.rpm &&     dnf clean all', 'yum update -y &&     yum install -y         curl         freetype-devel         gcc         gcc-c++         git         hdf5-devel         java-1.8.0-openjdk         java-1.8.0-openjdk-devel         java-1.8.0-openjdk-headless         libcurl-devel         make         pkg-config         rsync         sudo         unzip         zeromq-devel         zip         zlib-devel &&         yum clean all', 'test ""${CHECKOUT_TF_SRC}"" -eq 1 && git clone https://github.com/tensorflow/tensorflow.git --branch ""${TF_BRANCH}"" --single-branch /tensorflow_src || true', 'yum update -y && yum install -y     ${PYTHON}     ${PYTHON}-pip     which &&     yum clean all', '${PYTHON} -m pip --no-cache-dir install --upgrade     pip     setuptools', 'ln -sf $(which ${PYTHON}) /usr/local/bin/python &&     ln -sf $(which ${PYTHON}) /usr/local/bin/python3 &&     ln -sf $(which ${PYTHON}) /usr/bin/python', 'mkdir /bazel &&     curl -fSsL -o /bazel/installer.sh ""https://github.com/bazelbuild/bazel/releases/download/${BAZEL_VERSION}/bazel-${BAZEL_VERSION}-installer-linux-x86_64.sh"" &&     curl -fSsL -o /bazel/LICENSE.txt ""https://raw.githubusercontent.com/bazelbuild/bazel/master/LICENSE"" &&     bash /bazel/installer.sh &&     rm -f /bazel/installer.sh', 'chmod a+rwx /etc/bash.bashrc', '${PYTHON} -m pip install --no-cache-dir jupyter matplotlib', '${PYTHON} -m pip install --no-cache-dir jupyter_http_over_ws ipykernel==5.1.1 nbformat==4.4.0', 'jupyter serverextension enable --py jupyter_http_over_ws', 'mkdir -p /tf/ && chmod -R a+rwx /tf/', 'mkdir /.local && chmod a+rwx /.local', '${PYTHON} -m ipykernel.kernelspec']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/centos-8-devel-jupyter.Dockerfile,ENV,2,"['CI_BUILD_PYTHON python', 'LANG C.UTF-8']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/centos-8-devel-jupyter.Dockerfile,COPY,1,['bashrc /etc/bash.bashrc']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/centos-8-devel-jupyter.Dockerfile,WORKDIR,1,['/tf']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/centos-8-devel-jupyter.Dockerfile,EXPOSE,1,['8888']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/centos-8-devel-jupyter.Dockerfile,CMD,1,"['[""bash"", ""-c"", ""source /etc/bash.bashrc && jupyter notebook --notebook-dir=/tf --ip 0.0.0.0 --no-browser --allow-root""]']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/centos-8-mpi-horovod-jupyter.Dockerfile,ARG,8,"['CENTOS_VERSION=8', 'PYTHON=python3', 'TF_PACKAGE=tensorflow', 'TF_PACKAGE_VERSION=', 'HOROVOD_WITHOUT_PYTORCH=1', 'HOROVOD_WITHOUT_MXNET=1', 'HOROVOD_WITH_TENSORFLOW=1', 'HOROVOD_VERSION=v0.21.1']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/centos-8-mpi-horovod-jupyter.Dockerfile,FROM,1,['centos:${CENTOS_VERSION} as base']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/centos-8-mpi-horovod-jupyter.Dockerfile,ENV,2,"['LANG C.UTF-8', 'PATH=""/usr/lib64/openmpi/bin:${PATH}""']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/centos-8-mpi-horovod-jupyter.Dockerfile,RUN,18,"['yum update -y && yum install -y     ${PYTHON}     ${PYTHON}-pip     which &&     yum clean all', '${PYTHON} -m pip --no-cache-dir install --upgrade     pip     setuptools', 'ln -sf $(which ${PYTHON}) /usr/local/bin/python &&     ln -sf $(which ${PYTHON}) /usr/local/bin/python3 &&     ln -sf $(which ${PYTHON}) /usr/bin/python', 'python3 -m pip install --no-cache-dir ${TF_PACKAGE}${TF_PACKAGE_VERSION:+==${TF_PACKAGE_VERSION}}', 'yum update -y && yum install -y     openmpi     openmpi-devel     openssh     openssh-server     which &&     yum clean all', 'mv -f $(which mpirun) /usr/bin/mpirun.real &&     echo \'#!/bin/bash\' > /usr/bin/mpirun &&     echo \'mpirun.real --allow-run-as-root ""$@""\' >> /usr/bin/mpirun &&     chmod a+x /usr/bin/mpirun', 'echo ""btl_tcp_if_exclude = lo,docker0"" >> /etc/openmpi-x86_64/openmpi-mca-params.conf', 'mkdir -p /var/run/sshd', 'cat /etc/ssh/sshd_config | grep -v StrictHostKeyChecking > /etc/ssh/sshd_config.new &&     echo ""    StrictHostKeyChecking no"" >> /etc/ssh/sshd_config.new &&     mv -f /etc/ssh/sshd_config.new /etc/ssh/sshd_config', 'yum update -y && yum install -y     cmake     gcc     gcc-c++     git     make     ${PYTHON}-devel &&     yum clean all', '${PYTHON} -m pip install git+https://github.com/horovod/horovod.git@${HOROVOD_VERSION}', 'chmod a+rwx /etc/bash.bashrc', '${PYTHON} -m pip install --no-cache-dir jupyter matplotlib', '${PYTHON} -m pip install --no-cache-dir jupyter_http_over_ws ipykernel==5.1.1 nbformat==4.4.0', 'jupyter serverextension enable --py jupyter_http_over_ws', 'mkdir -p /tf/ && chmod -R a+rwx /tf/', 'mkdir /.local && chmod a+rwx /.local', '${PYTHON} -m ipykernel.kernelspec']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/centos-8-mpi-horovod-jupyter.Dockerfile,COPY,1,['bashrc /etc/bash.bashrc']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/centos-8-mpi-horovod-jupyter.Dockerfile,WORKDIR,1,['/tf']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/centos-8-mpi-horovod-jupyter.Dockerfile,EXPOSE,1,['8888']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/centos-8-mpi-horovod-jupyter.Dockerfile,CMD,1,"['[""bash"", ""-c"", ""source /etc/bash.bashrc && jupyter notebook --notebook-dir=/tf --ip 0.0.0.0 --no-browser --allow-root""]']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/centos-7-devel-mpi-horovod.Dockerfile,ARG,8,"['CENTOS_VERSION=8', 'CACHE_STOP=1', 'CHECKOUT_TF_SRC=0', 'TF_BRANCH=master', 'PYTHON=python3', 'BAZEL_VERSION=4.2.2', 'CHECKOUT_HOROVOD_SRC=0', 'HOROVOD_BRANCH=master']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/centos-7-devel-mpi-horovod.Dockerfile,FROM,1,['centos:${CENTOS_VERSION} AS base']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/centos-7-devel-mpi-horovod.Dockerfile,RUN,15,"['yum clean all &&     yum update -y &&     yum install -y epel-release', 'yum update -y &&     yum install -y         curl         freetype-devel         gcc         gcc-c++         git         hdf5-devel         java-1.8.0-openjdk         java-1.8.0-openjdk-devel         java-1.8.0-openjdk-headless         libcurl-devel         make         pkg-config         rsync         sudo         unzip         zeromq-devel         zip         zlib-devel &&         yum clean all', 'test ""${CHECKOUT_TF_SRC}"" -eq 1 && git clone https://github.com/tensorflow/tensorflow.git --branch ""${TF_BRANCH}"" --single-branch /tensorflow_src || true', 'yum update -y && yum install -y     ${PYTHON}     ${PYTHON}-pip     which &&     yum clean all', '${PYTHON} -m pip --no-cache-dir install --upgrade     pip     setuptools', 'ln -sf $(which ${PYTHON}) /usr/local/bin/python &&     ln -sf $(which ${PYTHON}) /usr/local/bin/python3 &&     ln -sf $(which ${PYTHON}) /usr/bin/python', ""sed -i 's#/usr/bin/python#/usr/bin/python2#g' /usr/bin/yum /usr/libexec/urlgrabber-ext-down"", 'mkdir /bazel &&     curl -fSsL -o /bazel/installer.sh ""https://github.com/bazelbuild/bazel/releases/download/${BAZEL_VERSION}/bazel-${BAZEL_VERSION}-installer-linux-x86_64.sh"" &&     curl -fSsL -o /bazel/LICENSE.txt ""https://raw.githubusercontent.com/bazelbuild/bazel/master/LICENSE"" &&     bash /bazel/installer.sh &&     rm -f /bazel/installer.sh', 'yum update -y && yum install -y     openmpi     openmpi-devel     openssh     openssh-server     which &&     yum clean all', 'mv -f $(which mpirun) /usr/bin/mpirun.real &&     echo \'#!/bin/bash\' > /usr/bin/mpirun &&     echo \'mpirun.real --allow-run-as-root ""$@""\' >> /usr/bin/mpirun &&     chmod a+x /usr/bin/mpirun', 'echo ""btl_tcp_if_exclude = lo,docker0"" >> /etc/openmpi-x86_64/openmpi-mca-params.conf', 'mkdir -p /var/run/sshd', 'cat /etc/ssh/sshd_config | grep -v StrictHostKeyChecking > /etc/ssh/sshd_config.new &&     echo ""    StrictHostKeyChecking no"" >> /etc/ssh/sshd_config.new &&     mv -f /etc/ssh/sshd_config.new /etc/ssh/sshd_config', 'test ""${CHECKOUT_HOROVOD_SRC}"" -eq 1 && git clone --branch ""${HOROVOD_BRANCH}"" --single-branch --recursive https://github.com/uber/horovod.git /horovod_src || true', 'chmod a+rwx /etc/bash.bashrc']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/centos-7-devel-mpi-horovod.Dockerfile,ENV,3,"['CI_BUILD_PYTHON python', 'LANG C.UTF-8', 'PATH=""/usr/lib64/openmpi/bin:${PATH}""']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/centos-7-devel-mpi-horovod.Dockerfile,COPY,1,['bashrc /etc/bash.bashrc']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-20.04-mpi-horovod.Dockerfile,ARG,9,"['UBUNTU_VERSION=20.04', 'PYTHON=python3', 'TF_PACKAGE=tensorflow', 'TF_PACKAGE_VERSION=', 'DEBIAN_FRONTEND=""noninteractive""', 'HOROVOD_WITHOUT_PYTORCH=1', 'HOROVOD_WITHOUT_MXNET=1', 'HOROVOD_WITH_TENSORFLOW=1', 'HOROVOD_VERSION=v0.21.1']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-20.04-mpi-horovod.Dockerfile,FROM,1,['ubuntu:${UBUNTU_VERSION} as base']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-20.04-mpi-horovod.Dockerfile,ENV,1,['LANG C.UTF-8']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-20.04-mpi-horovod.Dockerfile,RUN,13,"['apt-get update && apt-get install -y --no-install-recommends --fix-missing     ${PYTHON}     ${PYTHON}-pip', '${PYTHON} -m pip --no-cache-dir install --upgrade     pip     setuptools', 'ln -s $(which ${PYTHON}) /usr/local/bin/python', 'python3 -m pip install --no-cache-dir ${TF_PACKAGE}${TF_PACKAGE_VERSION:+==${TF_PACKAGE_VERSION}}', 'apt-get update && apt-get install -y --no-install-recommends --fix-missing     libopenmpi-dev     openmpi-bin     openmpi-common     openssh-client     openssh-server &&     apt-get clean &&     rm -rf /var/lib/apt/lists/*', 'mv /usr/bin/mpirun /usr/bin/mpirun.real &&     echo \'#!/bin/bash\' > /usr/bin/mpirun &&     echo \'mpirun.real --allow-run-as-root ""$@""\' >> /usr/bin/mpirun &&     chmod a+x /usr/bin/mpirun', 'echo ""btl_tcp_if_exclude = lo,docker0"" >> /etc/openmpi/openmpi-mca-params.conf', 'mkdir -p /var/run/sshd', 'cat /etc/ssh/ssh_config | grep -v StrictHostKeyChecking > /etc/ssh/ssh_config.new &&     echo ""    StrictHostKeyChecking no"" >> /etc/ssh/ssh_config.new &&     mv /etc/ssh/ssh_config.new /etc/ssh/ssh_config', 'apt-get update && apt-get install -y --no-install-recommends --fix-missing     build-essential     cmake     g++-8     gcc-8     git     ${PYTHON}-dev', 'update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 100 --slave /usr/bin/g++ g++ /usr/bin/g++-9 &&     update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 800 --slave /usr/bin/g++ g++ /usr/bin/g++-8', '${PYTHON} -m pip install git+https://github.com/horovod/horovod.git@${HOROVOD_VERSION}', 'chmod a+rwx /etc/bash.bashrc']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-20.04-mpi-horovod.Dockerfile,COPY,1,['bashrc /etc/bash.bashrc']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-18.04-jupyter.Dockerfile,ARG,4,"['UBUNTU_VERSION=20.04', 'PYTHON=python3', 'TF_PACKAGE=tensorflow', 'TF_PACKAGE_VERSION=']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-18.04-jupyter.Dockerfile,FROM,1,['ubuntu:${UBUNTU_VERSION} as base']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-18.04-jupyter.Dockerfile,ENV,1,['LANG C.UTF-8']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-18.04-jupyter.Dockerfile,RUN,11,"['apt-get update && apt-get install -y --no-install-recommends --fix-missing     ${PYTHON}     ${PYTHON}-pip', '${PYTHON} -m pip --no-cache-dir install --upgrade     pip     setuptools', 'ln -s $(which ${PYTHON}) /usr/local/bin/python', 'python3 -m pip install --no-cache-dir ${TF_PACKAGE}${TF_PACKAGE_VERSION:+==${TF_PACKAGE_VERSION}}', 'chmod a+rwx /etc/bash.bashrc', '${PYTHON} -m pip install --no-cache-dir jupyter matplotlib', '${PYTHON} -m pip install --no-cache-dir jupyter_http_over_ws ipykernel==5.1.1 nbformat==4.4.0', 'jupyter serverextension enable --py jupyter_http_over_ws', 'mkdir -p /tf/ && chmod -R a+rwx /tf/', 'mkdir /.local && chmod a+rwx /.local', '${PYTHON} -m ipykernel.kernelspec']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-18.04-jupyter.Dockerfile,COPY,1,['bashrc /etc/bash.bashrc']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-18.04-jupyter.Dockerfile,WORKDIR,1,['/tf']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-18.04-jupyter.Dockerfile,EXPOSE,1,['8888']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-18.04-jupyter.Dockerfile,CMD,1,"['[""bash"", ""-c"", ""source /etc/bash.bashrc && jupyter notebook --notebook-dir=/tf --ip 0.0.0.0 --no-browser --allow-root""]']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/centos-7-devel.Dockerfile,ARG,6,"['CENTOS_VERSION=8', 'CACHE_STOP=1', 'CHECKOUT_TF_SRC=0', 'TF_BRANCH=master', 'PYTHON=python3', 'BAZEL_VERSION=4.2.2']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/centos-7-devel.Dockerfile,FROM,1,['centos:${CENTOS_VERSION} AS base']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/centos-7-devel.Dockerfile,RUN,9,"['yum clean all &&     yum update -y &&     yum install -y epel-release', 'yum update -y &&     yum install -y         curl         freetype-devel         gcc         gcc-c++         git         hdf5-devel         java-1.8.0-openjdk         java-1.8.0-openjdk-devel         java-1.8.0-openjdk-headless         libcurl-devel         make         pkg-config         rsync         sudo         unzip         zeromq-devel         zip         zlib-devel &&         yum clean all', 'test ""${CHECKOUT_TF_SRC}"" -eq 1 && git clone https://github.com/tensorflow/tensorflow.git --branch ""${TF_BRANCH}"" --single-branch /tensorflow_src || true', 'yum update -y && yum install -y     ${PYTHON}     ${PYTHON}-pip     which &&     yum clean all', '${PYTHON} -m pip --no-cache-dir install --upgrade     pip     setuptools', 'ln -sf $(which ${PYTHON}) /usr/local/bin/python &&     ln -sf $(which ${PYTHON}) /usr/local/bin/python3 &&     ln -sf $(which ${PYTHON}) /usr/bin/python', ""sed -i 's#/usr/bin/python#/usr/bin/python2#g' /usr/bin/yum /usr/libexec/urlgrabber-ext-down"", 'mkdir /bazel &&     curl -fSsL -o /bazel/installer.sh ""https://github.com/bazelbuild/bazel/releases/download/${BAZEL_VERSION}/bazel-${BAZEL_VERSION}-installer-linux-x86_64.sh"" &&     curl -fSsL -o /bazel/LICENSE.txt ""https://raw.githubusercontent.com/bazelbuild/bazel/master/LICENSE"" &&     bash /bazel/installer.sh &&     rm -f /bazel/installer.sh', 'chmod a+rwx /etc/bash.bashrc']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/centos-7-devel.Dockerfile,ENV,2,"['CI_BUILD_PYTHON python', 'LANG C.UTF-8']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/centos-7-devel.Dockerfile,COPY,1,['bashrc /etc/bash.bashrc']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-18.04-devel.Dockerfile,ARG,7,"['UBUNTU_VERSION=20.04', 'DEBIAN_FRONTEND=""noninteractive""', 'CACHE_STOP=1', 'CHECKOUT_TF_SRC=0', 'TF_BRANCH=master', 'PYTHON=python3', 'BAZEL_VERSION=4.2.2']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-18.04-devel.Dockerfile,FROM,1,['ubuntu:${UBUNTU_VERSION} AS base']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-18.04-devel.Dockerfile,RUN,8,"['apt-get update && apt-get install -y --no-install-recommends --fix-missing         build-essential         curl         git         libcurl3-dev         libfreetype6-dev         libhdf5-serial-dev         libzmq3-dev         pkg-config         rsync         software-properties-common         sudo         unzip         zip         zlib1g-dev         openjdk-8-jdk         openjdk-8-jre-headless         &&     apt-get clean &&     rm -rf /var/lib/apt/lists/*', 'test ""${CHECKOUT_TF_SRC}"" -eq 1 && git clone https://github.com/tensorflow/tensorflow.git --branch ""${TF_BRANCH}"" --single-branch /tensorflow_src || true', 'apt-get update && apt-get install -y --no-install-recommends --fix-missing     ${PYTHON}     ${PYTHON}-pip', '${PYTHON} -m pip --no-cache-dir install --upgrade     pip     setuptools', 'ln -s $(which ${PYTHON}) /usr/local/bin/python', 'apt-get update && apt-get install -y --no-install-recommends --fix-missing     curl', 'mkdir /bazel &&     curl -fSsL -o /bazel/installer.sh ""https://github.com/bazelbuild/bazel/releases/download/${BAZEL_VERSION}/bazel-${BAZEL_VERSION}-installer-linux-x86_64.sh"" &&     curl -fSsL -o /bazel/LICENSE.txt ""https://raw.githubusercontent.com/bazelbuild/bazel/master/LICENSE"" &&     bash /bazel/installer.sh &&     rm -f /bazel/installer.sh', 'chmod a+rwx /etc/bash.bashrc']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-18.04-devel.Dockerfile,ENV,2,"['CI_BUILD_PYTHON python', 'LANG C.UTF-8']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-18.04-devel.Dockerfile,COPY,1,['bashrc /etc/bash.bashrc']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/centos-7-devel-mpich-horovod.Dockerfile,ARG,8,"['CENTOS_VERSION=8', 'CACHE_STOP=1', 'CHECKOUT_TF_SRC=0', 'TF_BRANCH=master', 'PYTHON=python3', 'BAZEL_VERSION=4.2.2', 'CHECKOUT_HOROVOD_SRC=0', 'HOROVOD_BRANCH=master']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/centos-7-devel-mpich-horovod.Dockerfile,FROM,1,['centos:${CENTOS_VERSION} AS base']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/centos-7-devel-mpich-horovod.Dockerfile,RUN,14,"['yum clean all &&     yum update -y &&     yum install -y epel-release', 'yum update -y &&     yum install -y         curl         freetype-devel         gcc         gcc-c++         git         hdf5-devel         java-1.8.0-openjdk         java-1.8.0-openjdk-devel         java-1.8.0-openjdk-headless         libcurl-devel         make         pkg-config         rsync         sudo         unzip         zeromq-devel         zip         zlib-devel &&         yum clean all', 'test ""${CHECKOUT_TF_SRC}"" -eq 1 && git clone https://github.com/tensorflow/tensorflow.git --branch ""${TF_BRANCH}"" --single-branch /tensorflow_src || true', 'yum update -y && yum install -y     ${PYTHON}     ${PYTHON}-pip     which &&     yum clean all', '${PYTHON} -m pip --no-cache-dir install --upgrade     pip     setuptools', 'ln -sf $(which ${PYTHON}) /usr/local/bin/python &&     ln -sf $(which ${PYTHON}) /usr/local/bin/python3 &&     ln -sf $(which ${PYTHON}) /usr/bin/python', ""sed -i 's#/usr/bin/python#/usr/bin/python2#g' /usr/bin/yum /usr/libexec/urlgrabber-ext-down"", 'mkdir /bazel &&     curl -fSsL -o /bazel/installer.sh ""https://github.com/bazelbuild/bazel/releases/download/${BAZEL_VERSION}/bazel-${BAZEL_VERSION}-installer-linux-x86_64.sh"" &&     curl -fSsL -o /bazel/LICENSE.txt ""https://raw.githubusercontent.com/bazelbuild/bazel/master/LICENSE"" &&     bash /bazel/installer.sh &&     rm -f /bazel/installer.sh', 'yum update -y && yum install -y     mpich     mpich-devel     openssh     openssh-server     redhat-rpm-config     which &&     yum clean all', 'mv -f $(which mpirun) /usr/bin/mpirun.real &&     echo \'#!/bin/bash\' > /usr/bin/mpirun &&     echo \'mpirun.real ""$@""\' >> /usr/bin/mpirun &&     chmod a+x /usr/bin/mpirun', 'mkdir -p /var/run/sshd', 'cat /etc/ssh/sshd_config | grep -v StrictHostKeyChecking > /etc/ssh/sshd_config.new &&     echo ""    StrictHostKeyChecking no"" >> /etc/ssh/sshd_config.new &&     mv -f /etc/ssh/sshd_config.new /etc/ssh/sshd_config', 'test ""${CHECKOUT_HOROVOD_SRC}"" -eq 1 && git clone --branch ""${HOROVOD_BRANCH}"" --single-branch --recursive https://github.com/uber/horovod.git /horovod_src || true', 'chmod a+rwx /etc/bash.bashrc']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/centos-7-devel-mpich-horovod.Dockerfile,ENV,3,"['CI_BUILD_PYTHON python', 'LANG C.UTF-8', 'PATH=""/usr/lib64/mpich/bin:${PATH}""']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/centos-7-devel-mpich-horovod.Dockerfile,COPY,1,['bashrc /etc/bash.bashrc']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-16.04-mpi-horovod.Dockerfile,ARG,9,"['UBUNTU_VERSION=20.04', 'PYTHON=python3', 'TF_PACKAGE=tensorflow', 'TF_PACKAGE_VERSION=', 'DEBIAN_FRONTEND=""noninteractive""', 'HOROVOD_WITHOUT_PYTORCH=1', 'HOROVOD_WITHOUT_MXNET=1', 'HOROVOD_WITH_TENSORFLOW=1', 'HOROVOD_VERSION=v0.21.1']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-16.04-mpi-horovod.Dockerfile,FROM,1,['ubuntu:${UBUNTU_VERSION} as base']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-16.04-mpi-horovod.Dockerfile,ENV,1,['LANG C.UTF-8']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-16.04-mpi-horovod.Dockerfile,RUN,19,"['apt-get update && apt-get install -y --no-install-recommends --fix-missing     curl     software-properties-common', 'add-apt-repository ppa:deadsnakes/ppa', 'apt-get update && apt-get install -y --no-install-recommends --fix-missing     ${PYTHON}', 'curl -fSsL https://bootstrap.pypa.io/get-pip.py | ${PYTHON}', '${PYTHON} -m pip --no-cache-dir install --upgrade     pip     setuptools', 'ln -sf $(which ${PYTHON}) /usr/local/bin/python &&     ln -sf $(which ${PYTHON}) /usr/local/bin/python3 &&     ln -sf $(which ${PYTHON}) /usr/bin/python &&     ln -sf $(which ${PYTHON}) /usr/bin/python3', 'python3 -m pip install --no-cache-dir ${TF_PACKAGE}${TF_PACKAGE_VERSION:+==${TF_PACKAGE_VERSION}}', 'apt-get update && apt-get install -y --no-install-recommends --fix-missing     libopenmpi-dev     openmpi-bin     openmpi-common     openssh-client     openssh-server &&     apt-get clean &&     rm -rf /var/lib/apt/lists/*', 'mv /usr/bin/mpirun /usr/bin/mpirun.real &&     echo \'#!/bin/bash\' > /usr/bin/mpirun &&     echo \'mpirun.real --allow-run-as-root ""$@""\' >> /usr/bin/mpirun &&     chmod a+x /usr/bin/mpirun', 'echo ""btl_tcp_if_exclude = lo,docker0"" >> /etc/openmpi/openmpi-mca-params.conf', 'mkdir -p /var/run/sshd', 'cat /etc/ssh/ssh_config | grep -v StrictHostKeyChecking > /etc/ssh/ssh_config.new &&     echo ""    StrictHostKeyChecking no"" >> /etc/ssh/ssh_config.new &&     mv /etc/ssh/ssh_config.new /etc/ssh/ssh_config', 'apt-get update && apt-get install -y --no-install-recommends --fix-missing     software-properties-common', 'cd /usr/lib/python3/dist-packages &&     ln -sf apt_pkg.cpython-35m-x86_64-linux-gnu.so apt_pkg.so', 'add-apt-repository ppa:ubuntu-toolchain-r/test', 'apt-get update && apt-get install -y --no-install-recommends --fix-missing     build-essential     cmake     g++-8     gcc-8     git     ${PYTHON}-dev', 'update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-5 500 --slave /usr/bin/g++ g++ /usr/bin/g++-5 &&     update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 800 --slave /usr/bin/g++ g++ /usr/bin/g++-8', '${PYTHON} -m pip install git+https://github.com/horovod/horovod.git@${HOROVOD_VERSION}', 'chmod a+rwx /etc/bash.bashrc']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-16.04-mpi-horovod.Dockerfile,COPY,1,['bashrc /etc/bash.bashrc']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-16.04-jupyter.Dockerfile,ARG,4,"['UBUNTU_VERSION=20.04', 'PYTHON=python3', 'TF_PACKAGE=tensorflow', 'TF_PACKAGE_VERSION=']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-16.04-jupyter.Dockerfile,FROM,1,['ubuntu:${UBUNTU_VERSION} as base']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-16.04-jupyter.Dockerfile,ENV,1,['LANG C.UTF-8']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-16.04-jupyter.Dockerfile,RUN,14,"['apt-get update && apt-get install -y --no-install-recommends --fix-missing     curl     software-properties-common', 'add-apt-repository ppa:deadsnakes/ppa', 'apt-get update && apt-get install -y --no-install-recommends --fix-missing     ${PYTHON}', 'curl -fSsL https://bootstrap.pypa.io/get-pip.py | ${PYTHON}', '${PYTHON} -m pip --no-cache-dir install --upgrade     pip     setuptools', 'ln -sf $(which ${PYTHON}) /usr/local/bin/python &&     ln -sf $(which ${PYTHON}) /usr/local/bin/python3 &&     ln -sf $(which ${PYTHON}) /usr/bin/python &&     ln -sf $(which ${PYTHON}) /usr/bin/python3', 'python3 -m pip install --no-cache-dir ${TF_PACKAGE}${TF_PACKAGE_VERSION:+==${TF_PACKAGE_VERSION}}', 'chmod a+rwx /etc/bash.bashrc', '${PYTHON} -m pip install --no-cache-dir jupyter matplotlib', '${PYTHON} -m pip install --no-cache-dir jupyter_http_over_ws ipykernel==5.1.1 nbformat==4.4.0', 'jupyter serverextension enable --py jupyter_http_over_ws', 'mkdir -p /tf/ && chmod -R a+rwx /tf/', 'mkdir /.local && chmod a+rwx /.local', '${PYTHON} -m ipykernel.kernelspec']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-16.04-jupyter.Dockerfile,COPY,1,['bashrc /etc/bash.bashrc']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-16.04-jupyter.Dockerfile,WORKDIR,1,['/tf']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-16.04-jupyter.Dockerfile,EXPOSE,1,['8888']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-16.04-jupyter.Dockerfile,CMD,1,"['[""bash"", ""-c"", ""source /etc/bash.bashrc && jupyter notebook --notebook-dir=/tf --ip 0.0.0.0 --no-browser --allow-root""]']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-16.04-devel-mpi-horovod-jupyter.Dockerfile,ARG,10,"['UBUNTU_VERSION=20.04', 'DEBIAN_FRONTEND=""noninteractive""', 'CACHE_STOP=1', 'CHECKOUT_TF_SRC=0', 'TF_BRANCH=master', 'PYTHON=python3', 'BAZEL_VERSION=4.2.2', 'DEBIAN_FRONTEND=""noninteractive""', 'CHECKOUT_HOROVOD_SRC=0', 'HOROVOD_BRANCH=master']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-16.04-devel-mpi-horovod-jupyter.Dockerfile,FROM,1,['ubuntu:${UBUNTU_VERSION} AS base']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-16.04-devel-mpi-horovod-jupyter.Dockerfile,RUN,23,"['apt-get update && apt-get install -y --no-install-recommends --fix-missing         build-essential         curl         git         libcurl3-dev         libfreetype6-dev         libhdf5-serial-dev         libzmq3-dev         pkg-config         rsync         software-properties-common         sudo         unzip         zip         zlib1g-dev         openjdk-8-jdk         openjdk-8-jre-headless         &&     apt-get clean &&     rm -rf /var/lib/apt/lists/*', 'test ""${CHECKOUT_TF_SRC}"" -eq 1 && git clone https://github.com/tensorflow/tensorflow.git --branch ""${TF_BRANCH}"" --single-branch /tensorflow_src || true', 'apt-get update && apt-get install -y --no-install-recommends --fix-missing     curl     software-properties-common', 'add-apt-repository ppa:deadsnakes/ppa', 'apt-get update && apt-get install -y --no-install-recommends --fix-missing     ${PYTHON}', 'curl -fSsL https://bootstrap.pypa.io/get-pip.py | ${PYTHON}', '${PYTHON} -m pip --no-cache-dir install --upgrade     pip     setuptools', 'ln -sf $(which ${PYTHON}) /usr/local/bin/python &&     ln -sf $(which ${PYTHON}) /usr/local/bin/python3 &&     ln -sf $(which ${PYTHON}) /usr/bin/python &&     ln -sf $(which ${PYTHON}) /usr/bin/python3', 'apt-get update && apt-get install -y --no-install-recommends --fix-missing     curl', 'mkdir /bazel &&     curl -fSsL -o /bazel/installer.sh ""https://github.com/bazelbuild/bazel/releases/download/${BAZEL_VERSION}/bazel-${BAZEL_VERSION}-installer-linux-x86_64.sh"" &&     curl -fSsL -o /bazel/LICENSE.txt ""https://raw.githubusercontent.com/bazelbuild/bazel/master/LICENSE"" &&     bash /bazel/installer.sh &&     rm -f /bazel/installer.sh', 'apt-get update && apt-get install -y --no-install-recommends --fix-missing     libopenmpi-dev     openmpi-bin     openmpi-common     openssh-client     openssh-server &&     apt-get clean &&     rm -rf /var/lib/apt/lists/*', 'mv /usr/bin/mpirun /usr/bin/mpirun.real &&     echo \'#!/bin/bash\' > /usr/bin/mpirun &&     echo \'mpirun.real --allow-run-as-root ""$@""\' >> /usr/bin/mpirun &&     chmod a+x /usr/bin/mpirun', 'echo ""btl_tcp_if_exclude = lo,docker0"" >> /etc/openmpi/openmpi-mca-params.conf', 'mkdir -p /var/run/sshd', 'cat /etc/ssh/ssh_config | grep -v StrictHostKeyChecking > /etc/ssh/ssh_config.new &&     echo ""    StrictHostKeyChecking no"" >> /etc/ssh/ssh_config.new &&     mv /etc/ssh/ssh_config.new /etc/ssh/ssh_config', 'test ""${CHECKOUT_HOROVOD_SRC}"" -eq 1 && git clone --branch ""${HOROVOD_BRANCH}"" --single-branch --recursive https://github.com/uber/horovod.git /horovod_src || true', 'chmod a+rwx /etc/bash.bashrc', '${PYTHON} -m pip install --no-cache-dir jupyter matplotlib', '${PYTHON} -m pip install --no-cache-dir jupyter_http_over_ws ipykernel==5.1.1 nbformat==4.4.0', 'jupyter serverextension enable --py jupyter_http_over_ws', 'mkdir -p /tf/ && chmod -R a+rwx /tf/', 'mkdir /.local && chmod a+rwx /.local', '${PYTHON} -m ipykernel.kernelspec']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-16.04-devel-mpi-horovod-jupyter.Dockerfile,ENV,2,"['CI_BUILD_PYTHON python', 'LANG C.UTF-8']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-16.04-devel-mpi-horovod-jupyter.Dockerfile,COPY,1,['bashrc /etc/bash.bashrc']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-16.04-devel-mpi-horovod-jupyter.Dockerfile,WORKDIR,1,['/tf']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-16.04-devel-mpi-horovod-jupyter.Dockerfile,EXPOSE,1,['8888']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-16.04-devel-mpi-horovod-jupyter.Dockerfile,CMD,1,"['[""bash"", ""-c"", ""source /etc/bash.bashrc && jupyter notebook --notebook-dir=/tf --ip 0.0.0.0 --no-browser --allow-root""]']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-18.04-devel-mpi-horovod-jupyter.Dockerfile,ARG,10,"['UBUNTU_VERSION=20.04', 'DEBIAN_FRONTEND=""noninteractive""', 'CACHE_STOP=1', 'CHECKOUT_TF_SRC=0', 'TF_BRANCH=master', 'PYTHON=python3', 'BAZEL_VERSION=4.2.2', 'DEBIAN_FRONTEND=""noninteractive""', 'CHECKOUT_HOROVOD_SRC=0', 'HOROVOD_BRANCH=master']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-18.04-devel-mpi-horovod-jupyter.Dockerfile,FROM,1,['ubuntu:${UBUNTU_VERSION} AS base']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-18.04-devel-mpi-horovod-jupyter.Dockerfile,RUN,20,"['apt-get update && apt-get install -y --no-install-recommends --fix-missing         build-essential         curl         git         libcurl3-dev         libfreetype6-dev         libhdf5-serial-dev         libzmq3-dev         pkg-config         rsync         software-properties-common         sudo         unzip         zip         zlib1g-dev         openjdk-8-jdk         openjdk-8-jre-headless         &&     apt-get clean &&     rm -rf /var/lib/apt/lists/*', 'test ""${CHECKOUT_TF_SRC}"" -eq 1 && git clone https://github.com/tensorflow/tensorflow.git --branch ""${TF_BRANCH}"" --single-branch /tensorflow_src || true', 'apt-get update && apt-get install -y --no-install-recommends --fix-missing     ${PYTHON}     ${PYTHON}-pip', '${PYTHON} -m pip --no-cache-dir install --upgrade     pip     setuptools', 'ln -s $(which ${PYTHON}) /usr/local/bin/python', 'apt-get update && apt-get install -y --no-install-recommends --fix-missing     curl', 'mkdir /bazel &&     curl -fSsL -o /bazel/installer.sh ""https://github.com/bazelbuild/bazel/releases/download/${BAZEL_VERSION}/bazel-${BAZEL_VERSION}-installer-linux-x86_64.sh"" &&     curl -fSsL -o /bazel/LICENSE.txt ""https://raw.githubusercontent.com/bazelbuild/bazel/master/LICENSE"" &&     bash /bazel/installer.sh &&     rm -f /bazel/installer.sh', 'apt-get update && apt-get install -y --no-install-recommends --fix-missing     libopenmpi-dev     openmpi-bin     openmpi-common     openssh-client     openssh-server &&     apt-get clean &&     rm -rf /var/lib/apt/lists/*', 'mv /usr/bin/mpirun /usr/bin/mpirun.real &&     echo \'#!/bin/bash\' > /usr/bin/mpirun &&     echo \'mpirun.real --allow-run-as-root ""$@""\' >> /usr/bin/mpirun &&     chmod a+x /usr/bin/mpirun', 'echo ""btl_tcp_if_exclude = lo,docker0"" >> /etc/openmpi/openmpi-mca-params.conf', 'mkdir -p /var/run/sshd', 'cat /etc/ssh/ssh_config | grep -v StrictHostKeyChecking > /etc/ssh/ssh_config.new &&     echo ""    StrictHostKeyChecking no"" >> /etc/ssh/ssh_config.new &&     mv /etc/ssh/ssh_config.new /etc/ssh/ssh_config', 'test ""${CHECKOUT_HOROVOD_SRC}"" -eq 1 && git clone --branch ""${HOROVOD_BRANCH}"" --single-branch --recursive https://github.com/uber/horovod.git /horovod_src || true', 'chmod a+rwx /etc/bash.bashrc', '${PYTHON} -m pip install --no-cache-dir jupyter matplotlib', '${PYTHON} -m pip install --no-cache-dir jupyter_http_over_ws ipykernel==5.1.1 nbformat==4.4.0', 'jupyter serverextension enable --py jupyter_http_over_ws', 'mkdir -p /tf/ && chmod -R a+rwx /tf/', 'mkdir /.local && chmod a+rwx /.local', '${PYTHON} -m ipykernel.kernelspec']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-18.04-devel-mpi-horovod-jupyter.Dockerfile,ENV,2,"['CI_BUILD_PYTHON python', 'LANG C.UTF-8']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-18.04-devel-mpi-horovod-jupyter.Dockerfile,COPY,1,['bashrc /etc/bash.bashrc']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-18.04-devel-mpi-horovod-jupyter.Dockerfile,WORKDIR,1,['/tf']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-18.04-devel-mpi-horovod-jupyter.Dockerfile,EXPOSE,1,['8888']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-18.04-devel-mpi-horovod-jupyter.Dockerfile,CMD,1,"['[""bash"", ""-c"", ""source /etc/bash.bashrc && jupyter notebook --notebook-dir=/tf --ip 0.0.0.0 --no-browser --allow-root""]']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-20.04-mpich-horovod.Dockerfile,ARG,9,"['UBUNTU_VERSION=20.04', 'PYTHON=python3', 'TF_PACKAGE=tensorflow', 'TF_PACKAGE_VERSION=', 'DEBIAN_FRONTEND=""noninteractive""', 'HOROVOD_WITHOUT_PYTORCH=1', 'HOROVOD_WITHOUT_MXNET=1', 'HOROVOD_WITH_TENSORFLOW=1', 'HOROVOD_VERSION=v0.21.1']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-20.04-mpich-horovod.Dockerfile,FROM,1,['ubuntu:${UBUNTU_VERSION} as base']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-20.04-mpich-horovod.Dockerfile,ENV,1,['LANG C.UTF-8']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-20.04-mpich-horovod.Dockerfile,RUN,12,"['apt-get update && apt-get install -y --no-install-recommends --fix-missing     ${PYTHON}     ${PYTHON}-pip', '${PYTHON} -m pip --no-cache-dir install --upgrade     pip     setuptools', 'ln -s $(which ${PYTHON}) /usr/local/bin/python', 'python3 -m pip install --no-cache-dir ${TF_PACKAGE}${TF_PACKAGE_VERSION:+==${TF_PACKAGE_VERSION}}', 'apt-get update && apt-get install -y --no-install-recommends --fix-missing     mpich     libmpich-dev     openssh-client     openssh-server &&     apt-get clean &&     rm -rf /var/lib/apt/lists/*', 'mv /usr/bin/mpirun /usr/bin/mpirun.real &&     echo \'#!/bin/bash\' > /usr/bin/mpirun &&     echo \'mpirun.real ""$@""\' >> /usr/bin/mpirun &&     chmod a+x /usr/bin/mpirun', 'mkdir -p /var/run/sshd', 'cat /etc/ssh/ssh_config | grep -v StrictHostKeyChecking > /etc/ssh/ssh_config.new &&     echo ""    StrictHostKeyChecking no"" >> /etc/ssh/ssh_config.new &&     mv /etc/ssh/ssh_config.new /etc/ssh/ssh_config', 'apt-get update && apt-get install -y --no-install-recommends --fix-missing     build-essential     cmake     g++-8     gcc-8     git     ${PYTHON}-dev', 'update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 100 --slave /usr/bin/g++ g++ /usr/bin/g++-9 &&     update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 800 --slave /usr/bin/g++ g++ /usr/bin/g++-8', '${PYTHON} -m pip install git+https://github.com/horovod/horovod.git@${HOROVOD_VERSION}', 'chmod a+rwx /etc/bash.bashrc']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-20.04-mpich-horovod.Dockerfile,COPY,1,['bashrc /etc/bash.bashrc']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-16.04-devel-jupyter.Dockerfile,ARG,7,"['UBUNTU_VERSION=20.04', 'DEBIAN_FRONTEND=""noninteractive""', 'CACHE_STOP=1', 'CHECKOUT_TF_SRC=0', 'TF_BRANCH=master', 'PYTHON=python3', 'BAZEL_VERSION=4.2.2']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-16.04-devel-jupyter.Dockerfile,FROM,1,['ubuntu:${UBUNTU_VERSION} AS base']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-16.04-devel-jupyter.Dockerfile,RUN,17,"['apt-get update && apt-get install -y --no-install-recommends --fix-missing         build-essential         curl         git         libcurl3-dev         libfreetype6-dev         libhdf5-serial-dev         libzmq3-dev         pkg-config         rsync         software-properties-common         sudo         unzip         zip         zlib1g-dev         openjdk-8-jdk         openjdk-8-jre-headless         &&     apt-get clean &&     rm -rf /var/lib/apt/lists/*', 'test ""${CHECKOUT_TF_SRC}"" -eq 1 && git clone https://github.com/tensorflow/tensorflow.git --branch ""${TF_BRANCH}"" --single-branch /tensorflow_src || true', 'apt-get update && apt-get install -y --no-install-recommends --fix-missing     curl     software-properties-common', 'add-apt-repository ppa:deadsnakes/ppa', 'apt-get update && apt-get install -y --no-install-recommends --fix-missing     ${PYTHON}', 'curl -fSsL https://bootstrap.pypa.io/get-pip.py | ${PYTHON}', '${PYTHON} -m pip --no-cache-dir install --upgrade     pip     setuptools', 'ln -sf $(which ${PYTHON}) /usr/local/bin/python &&     ln -sf $(which ${PYTHON}) /usr/local/bin/python3 &&     ln -sf $(which ${PYTHON}) /usr/bin/python &&     ln -sf $(which ${PYTHON}) /usr/bin/python3', 'apt-get update && apt-get install -y --no-install-recommends --fix-missing     curl', 'mkdir /bazel &&     curl -fSsL -o /bazel/installer.sh ""https://github.com/bazelbuild/bazel/releases/download/${BAZEL_VERSION}/bazel-${BAZEL_VERSION}-installer-linux-x86_64.sh"" &&     curl -fSsL -o /bazel/LICENSE.txt ""https://raw.githubusercontent.com/bazelbuild/bazel/master/LICENSE"" &&     bash /bazel/installer.sh &&     rm -f /bazel/installer.sh', 'chmod a+rwx /etc/bash.bashrc', '${PYTHON} -m pip install --no-cache-dir jupyter matplotlib', '${PYTHON} -m pip install --no-cache-dir jupyter_http_over_ws ipykernel==5.1.1 nbformat==4.4.0', 'jupyter serverextension enable --py jupyter_http_over_ws', 'mkdir -p /tf/ && chmod -R a+rwx /tf/', 'mkdir /.local && chmod a+rwx /.local', '${PYTHON} -m ipykernel.kernelspec']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-16.04-devel-jupyter.Dockerfile,ENV,2,"['CI_BUILD_PYTHON python', 'LANG C.UTF-8']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-16.04-devel-jupyter.Dockerfile,COPY,1,['bashrc /etc/bash.bashrc']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-16.04-devel-jupyter.Dockerfile,WORKDIR,1,['/tf']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-16.04-devel-jupyter.Dockerfile,EXPOSE,1,['8888']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-16.04-devel-jupyter.Dockerfile,CMD,1,"['[""bash"", ""-c"", ""source /etc/bash.bashrc && jupyter notebook --notebook-dir=/tf --ip 0.0.0.0 --no-browser --allow-root""]']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-18.04-devel-mpich-horovod.Dockerfile,ARG,10,"['UBUNTU_VERSION=20.04', 'DEBIAN_FRONTEND=""noninteractive""', 'CACHE_STOP=1', 'CHECKOUT_TF_SRC=0', 'TF_BRANCH=master', 'PYTHON=python3', 'BAZEL_VERSION=4.2.2', 'DEBIAN_FRONTEND=""noninteractive""', 'CHECKOUT_HOROVOD_SRC=0', 'HOROVOD_BRANCH=master']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-18.04-devel-mpich-horovod.Dockerfile,FROM,1,['ubuntu:${UBUNTU_VERSION} AS base']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-18.04-devel-mpich-horovod.Dockerfile,RUN,13,"['apt-get update && apt-get install -y --no-install-recommends --fix-missing         build-essential         curl         git         libcurl3-dev         libfreetype6-dev         libhdf5-serial-dev         libzmq3-dev         pkg-config         rsync         software-properties-common         sudo         unzip         zip         zlib1g-dev         openjdk-8-jdk         openjdk-8-jre-headless         &&     apt-get clean &&     rm -rf /var/lib/apt/lists/*', 'test ""${CHECKOUT_TF_SRC}"" -eq 1 && git clone https://github.com/tensorflow/tensorflow.git --branch ""${TF_BRANCH}"" --single-branch /tensorflow_src || true', 'apt-get update && apt-get install -y --no-install-recommends --fix-missing     ${PYTHON}     ${PYTHON}-pip', '${PYTHON} -m pip --no-cache-dir install --upgrade     pip     setuptools', 'ln -s $(which ${PYTHON}) /usr/local/bin/python', 'apt-get update && apt-get install -y --no-install-recommends --fix-missing     curl', 'mkdir /bazel &&     curl -fSsL -o /bazel/installer.sh ""https://github.com/bazelbuild/bazel/releases/download/${BAZEL_VERSION}/bazel-${BAZEL_VERSION}-installer-linux-x86_64.sh"" &&     curl -fSsL -o /bazel/LICENSE.txt ""https://raw.githubusercontent.com/bazelbuild/bazel/master/LICENSE"" &&     bash /bazel/installer.sh &&     rm -f /bazel/installer.sh', 'apt-get update && apt-get install -y --no-install-recommends --fix-missing     mpich     libmpich-dev     openssh-client     openssh-server &&     apt-get clean &&     rm -rf /var/lib/apt/lists/*', 'mv /usr/bin/mpirun /usr/bin/mpirun.real &&     echo \'#!/bin/bash\' > /usr/bin/mpirun &&     echo \'mpirun.real ""$@""\' >> /usr/bin/mpirun &&     chmod a+x /usr/bin/mpirun', 'mkdir -p /var/run/sshd', 'cat /etc/ssh/ssh_config | grep -v StrictHostKeyChecking > /etc/ssh/ssh_config.new &&     echo ""    StrictHostKeyChecking no"" >> /etc/ssh/ssh_config.new &&     mv /etc/ssh/ssh_config.new /etc/ssh/ssh_config', 'test ""${CHECKOUT_HOROVOD_SRC}"" -eq 1 && git clone --branch ""${HOROVOD_BRANCH}"" --single-branch --recursive https://github.com/uber/horovod.git /horovod_src || true', 'chmod a+rwx /etc/bash.bashrc']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-18.04-devel-mpich-horovod.Dockerfile,ENV,2,"['CI_BUILD_PYTHON python', 'LANG C.UTF-8']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-18.04-devel-mpich-horovod.Dockerfile,COPY,1,['bashrc /etc/bash.bashrc']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/centos-8-devel.Dockerfile,ARG,7,"['CENTOS_VERSION=8', 'CENTOS_VERSION=8', 'CACHE_STOP=1', 'CHECKOUT_TF_SRC=0', 'TF_BRANCH=master', 'PYTHON=python3', 'BAZEL_VERSION=4.2.2']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/centos-8-devel.Dockerfile,FROM,1,['centos:${CENTOS_VERSION} AS base']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/centos-8-devel.Dockerfile,RUN,8,"['dnf install -y \'dnf-command(config-manager)\' &&     dnf config-manager --set-enabled powertools &&     dnf install -y https://dl.fedoraproject.org/pub/epel/epel-release-latest-""${CENTOS_VERSION}"".noarch.rpm &&     dnf clean all', 'yum update -y &&     yum install -y         curl         freetype-devel         gcc         gcc-c++         git         hdf5-devel         java-1.8.0-openjdk         java-1.8.0-openjdk-devel         java-1.8.0-openjdk-headless         libcurl-devel         make         pkg-config         rsync         sudo         unzip         zeromq-devel         zip         zlib-devel &&         yum clean all', 'test ""${CHECKOUT_TF_SRC}"" -eq 1 && git clone https://github.com/tensorflow/tensorflow.git --branch ""${TF_BRANCH}"" --single-branch /tensorflow_src || true', 'yum update -y && yum install -y     ${PYTHON}     ${PYTHON}-pip     which &&     yum clean all', '${PYTHON} -m pip --no-cache-dir install --upgrade     pip     setuptools', 'ln -sf $(which ${PYTHON}) /usr/local/bin/python &&     ln -sf $(which ${PYTHON}) /usr/local/bin/python3 &&     ln -sf $(which ${PYTHON}) /usr/bin/python', 'mkdir /bazel &&     curl -fSsL -o /bazel/installer.sh ""https://github.com/bazelbuild/bazel/releases/download/${BAZEL_VERSION}/bazel-${BAZEL_VERSION}-installer-linux-x86_64.sh"" &&     curl -fSsL -o /bazel/LICENSE.txt ""https://raw.githubusercontent.com/bazelbuild/bazel/master/LICENSE"" &&     bash /bazel/installer.sh &&     rm -f /bazel/installer.sh', 'chmod a+rwx /etc/bash.bashrc']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/centos-8-devel.Dockerfile,ENV,2,"['CI_BUILD_PYTHON python', 'LANG C.UTF-8']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/centos-8-devel.Dockerfile,COPY,1,['bashrc /etc/bash.bashrc']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/centos-8-mpich-horovod-jupyter.Dockerfile,ARG,8,"['CENTOS_VERSION=8', 'PYTHON=python3', 'TF_PACKAGE=tensorflow', 'TF_PACKAGE_VERSION=', 'HOROVOD_WITHOUT_PYTORCH=1', 'HOROVOD_WITHOUT_MXNET=1', 'HOROVOD_WITH_TENSORFLOW=1', 'HOROVOD_VERSION=v0.21.1']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/centos-8-mpich-horovod-jupyter.Dockerfile,FROM,1,['centos:${CENTOS_VERSION} as base']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/centos-8-mpich-horovod-jupyter.Dockerfile,ENV,2,"['LANG C.UTF-8', 'PATH=""/usr/lib64/mpich/bin:${PATH}""']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/centos-8-mpich-horovod-jupyter.Dockerfile,RUN,17,"['yum update -y && yum install -y     ${PYTHON}     ${PYTHON}-pip     which &&     yum clean all', '${PYTHON} -m pip --no-cache-dir install --upgrade     pip     setuptools', 'ln -sf $(which ${PYTHON}) /usr/local/bin/python &&     ln -sf $(which ${PYTHON}) /usr/local/bin/python3 &&     ln -sf $(which ${PYTHON}) /usr/bin/python', 'python3 -m pip install --no-cache-dir ${TF_PACKAGE}${TF_PACKAGE_VERSION:+==${TF_PACKAGE_VERSION}}', 'yum update -y && yum install -y     mpich     mpich-devel     openssh     openssh-server     redhat-rpm-config     which &&     yum clean all', 'mv -f $(which mpirun) /usr/bin/mpirun.real &&     echo \'#!/bin/bash\' > /usr/bin/mpirun &&     echo \'mpirun.real ""$@""\' >> /usr/bin/mpirun &&     chmod a+x /usr/bin/mpirun', 'mkdir -p /var/run/sshd', 'cat /etc/ssh/sshd_config | grep -v StrictHostKeyChecking > /etc/ssh/sshd_config.new &&     echo ""    StrictHostKeyChecking no"" >> /etc/ssh/sshd_config.new &&     mv -f /etc/ssh/sshd_config.new /etc/ssh/sshd_config', 'yum update -y && yum install -y     cmake     gcc     gcc-c++     git     make     ${PYTHON}-devel &&     yum clean all', '${PYTHON} -m pip install git+https://github.com/horovod/horovod.git@${HOROVOD_VERSION}', 'chmod a+rwx /etc/bash.bashrc', '${PYTHON} -m pip install --no-cache-dir jupyter matplotlib', '${PYTHON} -m pip install --no-cache-dir jupyter_http_over_ws ipykernel==5.1.1 nbformat==4.4.0', 'jupyter serverextension enable --py jupyter_http_over_ws', 'mkdir -p /tf/ && chmod -R a+rwx /tf/', 'mkdir /.local && chmod a+rwx /.local', '${PYTHON} -m ipykernel.kernelspec']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/centos-8-mpich-horovod-jupyter.Dockerfile,COPY,1,['bashrc /etc/bash.bashrc']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/centos-8-mpich-horovod-jupyter.Dockerfile,WORKDIR,1,['/tf']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/centos-8-mpich-horovod-jupyter.Dockerfile,EXPOSE,1,['8888']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/centos-8-mpich-horovod-jupyter.Dockerfile,CMD,1,"['[""bash"", ""-c"", ""source /etc/bash.bashrc && jupyter notebook --notebook-dir=/tf --ip 0.0.0.0 --no-browser --allow-root""]']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/centos-8-devel-mpich-horovod-jupyter.Dockerfile,ARG,9,"['CENTOS_VERSION=8', 'CENTOS_VERSION=8', 'CACHE_STOP=1', 'CHECKOUT_TF_SRC=0', 'TF_BRANCH=master', 'PYTHON=python3', 'BAZEL_VERSION=4.2.2', 'CHECKOUT_HOROVOD_SRC=0', 'HOROVOD_BRANCH=master']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/centos-8-devel-mpich-horovod-jupyter.Dockerfile,FROM,1,['centos:${CENTOS_VERSION} AS base']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/centos-8-devel-mpich-horovod-jupyter.Dockerfile,RUN,19,"['dnf install -y \'dnf-command(config-manager)\' &&     dnf config-manager --set-enabled powertools &&     dnf install -y https://dl.fedoraproject.org/pub/epel/epel-release-latest-""${CENTOS_VERSION}"".noarch.rpm &&     dnf clean all', 'yum update -y &&     yum install -y         curl         freetype-devel         gcc         gcc-c++         git         hdf5-devel         java-1.8.0-openjdk         java-1.8.0-openjdk-devel         java-1.8.0-openjdk-headless         libcurl-devel         make         pkg-config         rsync         sudo         unzip         zeromq-devel         zip         zlib-devel &&         yum clean all', 'test ""${CHECKOUT_TF_SRC}"" -eq 1 && git clone https://github.com/tensorflow/tensorflow.git --branch ""${TF_BRANCH}"" --single-branch /tensorflow_src || true', 'yum update -y && yum install -y     ${PYTHON}     ${PYTHON}-pip     which &&     yum clean all', '${PYTHON} -m pip --no-cache-dir install --upgrade     pip     setuptools', 'ln -sf $(which ${PYTHON}) /usr/local/bin/python &&     ln -sf $(which ${PYTHON}) /usr/local/bin/python3 &&     ln -sf $(which ${PYTHON}) /usr/bin/python', 'mkdir /bazel &&     curl -fSsL -o /bazel/installer.sh ""https://github.com/bazelbuild/bazel/releases/download/${BAZEL_VERSION}/bazel-${BAZEL_VERSION}-installer-linux-x86_64.sh"" &&     curl -fSsL -o /bazel/LICENSE.txt ""https://raw.githubusercontent.com/bazelbuild/bazel/master/LICENSE"" &&     bash /bazel/installer.sh &&     rm -f /bazel/installer.sh', 'yum update -y && yum install -y     mpich     mpich-devel     openssh     openssh-server     redhat-rpm-config     which &&     yum clean all', 'mv -f $(which mpirun) /usr/bin/mpirun.real &&     echo \'#!/bin/bash\' > /usr/bin/mpirun &&     echo \'mpirun.real ""$@""\' >> /usr/bin/mpirun &&     chmod a+x /usr/bin/mpirun', 'mkdir -p /var/run/sshd', 'cat /etc/ssh/sshd_config | grep -v StrictHostKeyChecking > /etc/ssh/sshd_config.new &&     echo ""    StrictHostKeyChecking no"" >> /etc/ssh/sshd_config.new &&     mv -f /etc/ssh/sshd_config.new /etc/ssh/sshd_config', 'test ""${CHECKOUT_HOROVOD_SRC}"" -eq 1 && git clone --branch ""${HOROVOD_BRANCH}"" --single-branch --recursive https://github.com/uber/horovod.git /horovod_src || true', 'chmod a+rwx /etc/bash.bashrc', '${PYTHON} -m pip install --no-cache-dir jupyter matplotlib', '${PYTHON} -m pip install --no-cache-dir jupyter_http_over_ws ipykernel==5.1.1 nbformat==4.4.0', 'jupyter serverextension enable --py jupyter_http_over_ws', 'mkdir -p /tf/ && chmod -R a+rwx /tf/', 'mkdir /.local && chmod a+rwx /.local', '${PYTHON} -m ipykernel.kernelspec']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/centos-8-devel-mpich-horovod-jupyter.Dockerfile,ENV,3,"['CI_BUILD_PYTHON python', 'LANG C.UTF-8', 'PATH=""/usr/lib64/mpich/bin:${PATH}""']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/centos-8-devel-mpich-horovod-jupyter.Dockerfile,COPY,1,['bashrc /etc/bash.bashrc']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/centos-8-devel-mpich-horovod-jupyter.Dockerfile,WORKDIR,1,['/tf']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/centos-8-devel-mpich-horovod-jupyter.Dockerfile,EXPOSE,1,['8888']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/centos-8-devel-mpich-horovod-jupyter.Dockerfile,CMD,1,"['[""bash"", ""-c"", ""source /etc/bash.bashrc && jupyter notebook --notebook-dir=/tf --ip 0.0.0.0 --no-browser --allow-root""]']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/centos-7-mpich-horovod.Dockerfile,ARG,8,"['CENTOS_VERSION=8', 'PYTHON=python3', 'TF_PACKAGE=tensorflow', 'TF_PACKAGE_VERSION=', 'HOROVOD_WITHOUT_PYTORCH=1', 'HOROVOD_WITHOUT_MXNET=1', 'HOROVOD_WITH_TENSORFLOW=1', 'HOROVOD_VERSION=v0.21.1']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/centos-7-mpich-horovod.Dockerfile,FROM,1,['centos:${CENTOS_VERSION} as base']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/centos-7-mpich-horovod.Dockerfile,ENV,5,"['LANG C.UTF-8', 'PATH=""/usr/lib64/mpich/bin:${PATH}""', 'LC_ALL=en_US.UTF-8', 'LC_CTYPE=en_US.UTF-8', 'PATH=/opt/rh/devtoolset-8/root/usr/bin:/opt/rh/sclo-git25/root/usr/bin:/opt/rh/llvm-toolset-7/root/usr/bin:${PATH}']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/centos-7-mpich-horovod.Dockerfile,RUN,12,"['yum update -y && yum install -y     ${PYTHON}     ${PYTHON}-pip     which &&     yum clean all', '${PYTHON} -m pip --no-cache-dir install --upgrade     pip     setuptools', 'ln -sf $(which ${PYTHON}) /usr/local/bin/python &&     ln -sf $(which ${PYTHON}) /usr/local/bin/python3 &&     ln -sf $(which ${PYTHON}) /usr/bin/python', ""sed -i 's#/usr/bin/python#/usr/bin/python2#g' /usr/bin/yum /usr/libexec/urlgrabber-ext-down"", 'python3 -m pip install --no-cache-dir ${TF_PACKAGE}${TF_PACKAGE_VERSION:+==${TF_PACKAGE_VERSION}}', 'yum update -y && yum install -y     mpich     mpich-devel     openssh     openssh-server     redhat-rpm-config     which &&     yum clean all', 'mv -f $(which mpirun) /usr/bin/mpirun.real &&     echo \'#!/bin/bash\' > /usr/bin/mpirun &&     echo \'mpirun.real ""$@""\' >> /usr/bin/mpirun &&     chmod a+x /usr/bin/mpirun', 'mkdir -p /var/run/sshd', 'cat /etc/ssh/sshd_config | grep -v StrictHostKeyChecking > /etc/ssh/sshd_config.new &&     echo ""    StrictHostKeyChecking no"" >> /etc/ssh/sshd_config.new &&     mv -f /etc/ssh/sshd_config.new /etc/ssh/sshd_config', 'yum update -y &&     yum install -y centos-release-scl &&     yum install -y         devtoolset-8         devtoolset-8-make         llvm-toolset-7-cmake         ${PYTHON}-devel         sclo-git25 &&     yum clean all', '${PYTHON} -m pip install git+https://github.com/horovod/horovod.git@${HOROVOD_VERSION}', 'chmod a+rwx /etc/bash.bashrc']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/centos-7-mpich-horovod.Dockerfile,COPY,1,['bashrc /etc/bash.bashrc']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-20.04-devel-mpi-horovod-jupyter.Dockerfile,ARG,10,"['UBUNTU_VERSION=20.04', 'DEBIAN_FRONTEND=""noninteractive""', 'CACHE_STOP=1', 'CHECKOUT_TF_SRC=0', 'TF_BRANCH=master', 'PYTHON=python3', 'BAZEL_VERSION=4.2.2', 'DEBIAN_FRONTEND=""noninteractive""', 'CHECKOUT_HOROVOD_SRC=0', 'HOROVOD_BRANCH=master']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-20.04-devel-mpi-horovod-jupyter.Dockerfile,FROM,1,['ubuntu:${UBUNTU_VERSION} AS base']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-20.04-devel-mpi-horovod-jupyter.Dockerfile,RUN,20,"['apt-get update && apt-get install -y --no-install-recommends --fix-missing         build-essential         curl         git         libcurl3-dev         libfreetype6-dev         libhdf5-serial-dev         libzmq3-dev         pkg-config         rsync         software-properties-common         sudo         unzip         zip         zlib1g-dev         openjdk-8-jdk         openjdk-8-jre-headless         &&     apt-get clean &&     rm -rf /var/lib/apt/lists/*', 'test ""${CHECKOUT_TF_SRC}"" -eq 1 && git clone https://github.com/tensorflow/tensorflow.git --branch ""${TF_BRANCH}"" --single-branch /tensorflow_src || true', 'apt-get update && apt-get install -y --no-install-recommends --fix-missing     ${PYTHON}     ${PYTHON}-pip', '${PYTHON} -m pip --no-cache-dir install --upgrade     pip     setuptools', 'ln -s $(which ${PYTHON}) /usr/local/bin/python', 'apt-get update && apt-get install -y --no-install-recommends --fix-missing     curl', 'mkdir /bazel &&     curl -fSsL -o /bazel/installer.sh ""https://github.com/bazelbuild/bazel/releases/download/${BAZEL_VERSION}/bazel-${BAZEL_VERSION}-installer-linux-x86_64.sh"" &&     curl -fSsL -o /bazel/LICENSE.txt ""https://raw.githubusercontent.com/bazelbuild/bazel/master/LICENSE"" &&     bash /bazel/installer.sh &&     rm -f /bazel/installer.sh', 'apt-get update && apt-get install -y --no-install-recommends --fix-missing     libopenmpi-dev     openmpi-bin     openmpi-common     openssh-client     openssh-server &&     apt-get clean &&     rm -rf /var/lib/apt/lists/*', 'mv /usr/bin/mpirun /usr/bin/mpirun.real &&     echo \'#!/bin/bash\' > /usr/bin/mpirun &&     echo \'mpirun.real --allow-run-as-root ""$@""\' >> /usr/bin/mpirun &&     chmod a+x /usr/bin/mpirun', 'echo ""btl_tcp_if_exclude = lo,docker0"" >> /etc/openmpi/openmpi-mca-params.conf', 'mkdir -p /var/run/sshd', 'cat /etc/ssh/ssh_config | grep -v StrictHostKeyChecking > /etc/ssh/ssh_config.new &&     echo ""    StrictHostKeyChecking no"" >> /etc/ssh/ssh_config.new &&     mv /etc/ssh/ssh_config.new /etc/ssh/ssh_config', 'test ""${CHECKOUT_HOROVOD_SRC}"" -eq 1 && git clone --branch ""${HOROVOD_BRANCH}"" --single-branch --recursive https://github.com/uber/horovod.git /horovod_src || true', 'chmod a+rwx /etc/bash.bashrc', '${PYTHON} -m pip install --no-cache-dir jupyter matplotlib', '${PYTHON} -m pip install --no-cache-dir jupyter_http_over_ws ipykernel==5.1.1 nbformat==4.4.0', 'jupyter serverextension enable --py jupyter_http_over_ws', 'mkdir -p /tf/ && chmod -R a+rwx /tf/', 'mkdir /.local && chmod a+rwx /.local', '${PYTHON} -m ipykernel.kernelspec']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-20.04-devel-mpi-horovod-jupyter.Dockerfile,ENV,2,"['CI_BUILD_PYTHON python', 'LANG C.UTF-8']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-20.04-devel-mpi-horovod-jupyter.Dockerfile,COPY,1,['bashrc /etc/bash.bashrc']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-20.04-devel-mpi-horovod-jupyter.Dockerfile,WORKDIR,1,['/tf']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-20.04-devel-mpi-horovod-jupyter.Dockerfile,EXPOSE,1,['8888']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/ubuntu-20.04-devel-mpi-horovod-jupyter.Dockerfile,CMD,1,"['[""bash"", ""-c"", ""source /etc/bash.bashrc && jupyter notebook --notebook-dir=/tf --ip 0.0.0.0 --no-browser --allow-root""]']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/centos-7-jupyter.Dockerfile,ARG,4,"['CENTOS_VERSION=8', 'PYTHON=python3', 'TF_PACKAGE=tensorflow', 'TF_PACKAGE_VERSION=']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/centos-7-jupyter.Dockerfile,FROM,1,['centos:${CENTOS_VERSION} as base']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/centos-7-jupyter.Dockerfile,ENV,1,['LANG C.UTF-8']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/centos-7-jupyter.Dockerfile,RUN,12,"['yum update -y && yum install -y     ${PYTHON}     ${PYTHON}-pip     which &&     yum clean all', '${PYTHON} -m pip --no-cache-dir install --upgrade     pip     setuptools', 'ln -sf $(which ${PYTHON}) /usr/local/bin/python &&     ln -sf $(which ${PYTHON}) /usr/local/bin/python3 &&     ln -sf $(which ${PYTHON}) /usr/bin/python', ""sed -i 's#/usr/bin/python#/usr/bin/python2#g' /usr/bin/yum /usr/libexec/urlgrabber-ext-down"", 'python3 -m pip install --no-cache-dir ${TF_PACKAGE}${TF_PACKAGE_VERSION:+==${TF_PACKAGE_VERSION}}', 'chmod a+rwx /etc/bash.bashrc', '${PYTHON} -m pip install --no-cache-dir jupyter matplotlib', '${PYTHON} -m pip install --no-cache-dir jupyter_http_over_ws ipykernel==5.1.1 nbformat==4.4.0', 'jupyter serverextension enable --py jupyter_http_over_ws', 'mkdir -p /tf/ && chmod -R a+rwx /tf/', 'mkdir /.local && chmod a+rwx /.local', '${PYTHON} -m ipykernel.kernelspec']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/centos-7-jupyter.Dockerfile,COPY,1,['bashrc /etc/bash.bashrc']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/centos-7-jupyter.Dockerfile,WORKDIR,1,['/tf']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/centos-7-jupyter.Dockerfile,EXPOSE,1,['8888']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/dockerfiles/onednn/centos-7-jupyter.Dockerfile,CMD,1,"['[""bash"", ""-c"", ""source /etc/bash.bashrc && jupyter notebook --notebook-dir=/tf --ip 0.0.0.0 --no-browser --allow-root""]']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/partials/shell.partial.Dockerfile,COPY,1,['bashrc /etc/bash.bashrc']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/partials/shell.partial.Dockerfile,RUN,1,['chmod a+rwx /etc/bash.bashrc']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/partials/jupyter.partial.Dockerfile,RUN,14,"['python3 -m pip install --no-cache-dir jupyter matplotlib', 'python3 -m pip install --no-cache-dir jupyter_http_over_ws ipykernel==5.1.1 nbformat==4.4.0 jedi==0.17.2', 'jupyter serverextension enable --py jupyter_http_over_ws', 'mkdir -p /tf/tensorflow-tutorials && chmod -R a+rwx /tf/', 'mkdir /.local && chmod a+rwx /.local', 'apt-get update && apt-get install -y --no-install-recommends wget git', 'wget https://raw.githubusercontent.com/tensorflow/docs/master/site/en/tutorials/keras/classification.ipynb', 'wget https://raw.githubusercontent.com/tensorflow/docs/master/site/en/tutorials/keras/overfit_and_underfit.ipynb', 'wget https://raw.githubusercontent.com/tensorflow/docs/master/site/en/tutorials/keras/regression.ipynb', 'wget https://raw.githubusercontent.com/tensorflow/docs/master/site/en/tutorials/keras/save_and_load.ipynb', 'wget https://raw.githubusercontent.com/tensorflow/docs/master/site/en/tutorials/keras/text_classification.ipynb', 'wget https://raw.githubusercontent.com/tensorflow/docs/master/site/en/tutorials/keras/text_classification_with_hub.ipynb', 'apt-get autoremove -y && apt-get remove -y wget', 'python3 -m ipykernel.kernelspec']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/partials/jupyter.partial.Dockerfile,WORKDIR,2,"['/tf/tensorflow-tutorials', '/tf']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/partials/jupyter.partial.Dockerfile,COPY,1,['readme-for-jupyter.md README.md']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/partials/jupyter.partial.Dockerfile,EXPOSE,1,['8888']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/partials/jupyter.partial.Dockerfile,CMD,1,"['[""bash"", ""-c"", ""source /etc/bash.bashrc && jupyter notebook --notebook-dir=/tf --ip 0.0.0.0 --no-browser --allow-root""]']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/partials/tensorflow-ppc64le.partial.Dockerfile,ARG,2,"['TF_PACKAGE=tensorflow', 'CACHE_STOP=1']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/partials/tensorflow-ppc64le.partial.Dockerfile,RUN,3,"['apt-get update && apt-get install -y curl libhdf5-dev wget', 'python3 -m pip install --no-cache-dir --global-option=build_ext             --global-option=-I/usr/include/hdf5/serial/             --global-option=-L/usr/lib/powerpc64le-linux-gnu/hdf5/serial             h5py', 'if [ ${TF_PACKAGE} = tensorflow-gpu ]; then         BASE=https://powerci.osuosl.org/job/TensorFlow_PPC64LE_GPU_Release_Build/lastSuccessfulBuild/;     elif [ ${TF_PACKAGE} = tf-nightly-gpu ]; then         BASE=https://powerci.osuosl.org/job/TensorFlow_PPC64LE_GPU_Nightly_Artifact/lastSuccessfulBuild/;     elif [ ${TF_PACKAGE} = tensorflow ]; then         BASE=https://powerci.osuosl.org/job/TensorFlow_PPC64LE_CPU_Release_Build/lastSuccessfulBuild/;     elif [ ${TF_PACKAGE} = tf-nightly ]; then         BASE=https://powerci.osuosl.org/job/TensorFlow_PPC64LE_CPU_Nightly_Artifact/lastSuccessfulBuild/;     fi;     MAJOR=`python3 -c \'import sys; print(sys.version_info[0])\'`;     MINOR=`python3 -c \'import sys; print(sys.version_info[1])\'`;     PACKAGE=$(wget -qO- ${BASE}""api/xml?xpath=//fileName&wrapper=artifacts"" | grep -o ""[^<>]*cp${MAJOR}${MINOR}[^<>]*.whl"");     wget ${BASE}""artifact/tensorflow_pkg/""${PACKAGE};     python3 -m pip install --no-cache-dir ${PACKAGE}']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/partials/tensorflow.partial.Dockerfile,ARG,2,"['TF_PACKAGE=tensorflow', 'TF_PACKAGE_VERSION=']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/partials/tensorflow.partial.Dockerfile,RUN,1,['python3 -m pip install --no-cache-dir ${TF_PACKAGE}${TF_PACKAGE_VERSION:+==${TF_PACKAGE_VERSION}}']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/partials/onednn/jupyter.partial.Dockerfile,RUN,6,"['${PYTHON} -m pip install --no-cache-dir jupyter matplotlib', '${PYTHON} -m pip install --no-cache-dir jupyter_http_over_ws ipykernel==5.1.1 nbformat==4.4.0', 'jupyter serverextension enable --py jupyter_http_over_ws', 'mkdir -p /tf/ && chmod -R a+rwx /tf/', 'mkdir /.local && chmod a+rwx /.local', '${PYTHON} -m ipykernel.kernelspec']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/partials/onednn/jupyter.partial.Dockerfile,WORKDIR,1,['/tf']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/partials/onednn/jupyter.partial.Dockerfile,EXPOSE,1,['8888']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/partials/onednn/jupyter.partial.Dockerfile,CMD,1,"['[""bash"", ""-c"", ""source /etc/bash.bashrc && jupyter notebook --notebook-dir=/tf --ip 0.0.0.0 --no-browser --allow-root""]']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/partials/onednn/centos/mpich.partial.Dockerfile,RUN,4,"['yum update -y && yum install -y     mpich     mpich-devel     openssh     openssh-server     redhat-rpm-config     which &&     yum clean all', 'mv -f $(which mpirun) /usr/bin/mpirun.real &&     echo \'#!/bin/bash\' > /usr/bin/mpirun &&     echo \'mpirun.real ""$@""\' >> /usr/bin/mpirun &&     chmod a+x /usr/bin/mpirun', 'mkdir -p /var/run/sshd', 'cat /etc/ssh/sshd_config | grep -v StrictHostKeyChecking > /etc/ssh/sshd_config.new &&     echo ""    StrictHostKeyChecking no"" >> /etc/ssh/sshd_config.new &&     mv -f /etc/ssh/sshd_config.new /etc/ssh/sshd_config']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/partials/onednn/centos/mpich.partial.Dockerfile,ENV,1,"['PATH=""/usr/lib64/mpich/bin:${PATH}""']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/partials/onednn/centos/devel-8.partial.Dockerfile,FROM,1,['centos:${CENTOS_VERSION} AS base']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/partials/onednn/centos/devel-8.partial.Dockerfile,ARG,1,['CENTOS_VERSION=8']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/partials/onednn/centos/devel-8.partial.Dockerfile,RUN,1,"['dnf install -y \'dnf-command(config-manager)\' &&     dnf config-manager --set-enabled powertools &&     dnf install -y https://dl.fedoraproject.org/pub/epel/epel-release-latest-""${CENTOS_VERSION}"".noarch.rpm &&     dnf clean all']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/partials/onednn/centos/version.partial.Dockerfile,ARG,1,['CENTOS_VERSION=8']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/partials/onednn/centos/bazel.partial.Dockerfile,ARG,1,['BAZEL_VERSION=4.2.2']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/partials/onednn/centos/bazel.partial.Dockerfile,RUN,1,"['mkdir /bazel &&     curl -fSsL -o /bazel/installer.sh ""https://github.com/bazelbuild/bazel/releases/download/${BAZEL_VERSION}/bazel-${BAZEL_VERSION}-installer-linux-x86_64.sh"" &&     curl -fSsL -o /bazel/LICENSE.txt ""https://raw.githubusercontent.com/bazelbuild/bazel/master/LICENSE"" &&     bash /bazel/installer.sh &&     rm -f /bazel/installer.sh']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/partials/onednn/centos/horovod.partial.Dockerfile,ARG,4,"['HOROVOD_WITHOUT_PYTORCH=1', 'HOROVOD_WITHOUT_MXNET=1', 'HOROVOD_WITH_TENSORFLOW=1', 'HOROVOD_VERSION=v0.21.1']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/partials/onednn/centos/horovod.partial.Dockerfile,RUN,2,"['yum update -y && yum install -y     cmake     gcc     gcc-c++     git     make     ${PYTHON}-devel &&     yum clean all', '${PYTHON} -m pip install git+https://github.com/horovod/horovod.git@${HOROVOD_VERSION}']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/partials/onednn/centos/devel.partial.Dockerfile,RUN,2,"['yum update -y &&     yum install -y         curl         freetype-devel         gcc         gcc-c++         git         hdf5-devel         java-1.8.0-openjdk         java-1.8.0-openjdk-devel         java-1.8.0-openjdk-headless         libcurl-devel         make         pkg-config         rsync         sudo         unzip         zeromq-devel         zip         zlib-devel &&         yum clean all', 'test ""${CHECKOUT_TF_SRC}"" -eq 1 && git clone https://github.com/tensorflow/tensorflow.git --branch ""${TF_BRANCH}"" --single-branch /tensorflow_src || true']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/partials/onednn/centos/devel.partial.Dockerfile,ENV,1,['CI_BUILD_PYTHON python']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/partials/onednn/centos/devel.partial.Dockerfile,ARG,3,"['CACHE_STOP=1', 'CHECKOUT_TF_SRC=0', 'TF_BRANCH=master']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/partials/onednn/centos/horovod-7.partial.Dockerfile,ARG,4,"['HOROVOD_WITHOUT_PYTORCH=1', 'HOROVOD_WITHOUT_MXNET=1', 'HOROVOD_WITH_TENSORFLOW=1', 'HOROVOD_VERSION=v0.21.1']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/partials/onednn/centos/horovod-7.partial.Dockerfile,ENV,3,"['LC_ALL=en_US.UTF-8', 'LC_CTYPE=en_US.UTF-8', 'PATH=/opt/rh/devtoolset-8/root/usr/bin:/opt/rh/sclo-git25/root/usr/bin:/opt/rh/llvm-toolset-7/root/usr/bin:${PATH}']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/partials/onednn/centos/horovod-7.partial.Dockerfile,RUN,2,"['yum update -y &&     yum install -y centos-release-scl &&     yum install -y         devtoolset-8         devtoolset-8-make         llvm-toolset-7-cmake         ${PYTHON}-devel         sclo-git25 &&     yum clean all', '${PYTHON} -m pip install git+https://github.com/horovod/horovod.git@${HOROVOD_VERSION}']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/partials/onednn/centos/yum-py2.partial.Dockerfile,RUN,1,"[""sed -i 's#/usr/bin/python#/usr/bin/python2#g' /usr/bin/yum /usr/libexec/urlgrabber-ext-down""]"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/partials/onednn/centos/cpu.partial.Dockerfile,FROM,1,['centos:${CENTOS_VERSION} as base']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/partials/onednn/centos/python.partial.Dockerfile,ENV,1,['LANG C.UTF-8']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/partials/onednn/centos/python.partial.Dockerfile,ARG,1,['PYTHON=python3']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/partials/onednn/centos/python.partial.Dockerfile,RUN,3,"['yum update -y && yum install -y     ${PYTHON}     ${PYTHON}-pip     which &&     yum clean all', '${PYTHON} -m pip --no-cache-dir install --upgrade     pip     setuptools', 'ln -sf $(which ${PYTHON}) /usr/local/bin/python &&     ln -sf $(which ${PYTHON}) /usr/local/bin/python3 &&     ln -sf $(which ${PYTHON}) /usr/bin/python']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/partials/onednn/centos/devel-horovod.partial.Dockerfile,ARG,2,"['CHECKOUT_HOROVOD_SRC=0', 'HOROVOD_BRANCH=master']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/partials/onednn/centos/devel-horovod.partial.Dockerfile,RUN,1,"['test ""${CHECKOUT_HOROVOD_SRC}"" -eq 1 && git clone --branch ""${HOROVOD_BRANCH}"" --single-branch --recursive https://github.com/uber/horovod.git /horovod_src || true']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/partials/onednn/centos/devel-7.partial.Dockerfile,FROM,1,['centos:${CENTOS_VERSION} AS base']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/partials/onednn/centos/devel-7.partial.Dockerfile,RUN,1,['yum clean all &&     yum update -y &&     yum install -y epel-release']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/partials/onednn/centos/mpi.partial.Dockerfile,RUN,5,"['yum update -y && yum install -y     openmpi     openmpi-devel     openssh     openssh-server     which &&     yum clean all', 'mv -f $(which mpirun) /usr/bin/mpirun.real &&     echo \'#!/bin/bash\' > /usr/bin/mpirun &&     echo \'mpirun.real --allow-run-as-root ""$@""\' >> /usr/bin/mpirun &&     chmod a+x /usr/bin/mpirun', 'echo ""btl_tcp_if_exclude = lo,docker0"" >> /etc/openmpi-x86_64/openmpi-mca-params.conf', 'mkdir -p /var/run/sshd', 'cat /etc/ssh/sshd_config | grep -v StrictHostKeyChecking > /etc/ssh/sshd_config.new &&     echo ""    StrictHostKeyChecking no"" >> /etc/ssh/sshd_config.new &&     mv -f /etc/ssh/sshd_config.new /etc/ssh/sshd_config']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/partials/onednn/centos/mpi.partial.Dockerfile,ENV,1,"['PATH=""/usr/lib64/openmpi/bin:${PATH}""']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/partials/onednn/ubuntu/mpich.partial.Dockerfile,ARG,1,"['DEBIAN_FRONTEND=""noninteractive""']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/partials/onednn/ubuntu/mpich.partial.Dockerfile,RUN,4,"['apt-get update && apt-get install -y --no-install-recommends --fix-missing     mpich     libmpich-dev     openssh-client     openssh-server &&     apt-get clean &&     rm -rf /var/lib/apt/lists/*', 'mv /usr/bin/mpirun /usr/bin/mpirun.real &&     echo \'#!/bin/bash\' > /usr/bin/mpirun &&     echo \'mpirun.real ""$@""\' >> /usr/bin/mpirun &&     chmod a+x /usr/bin/mpirun', 'mkdir -p /var/run/sshd', 'cat /etc/ssh/ssh_config | grep -v StrictHostKeyChecking > /etc/ssh/ssh_config.new &&     echo ""    StrictHostKeyChecking no"" >> /etc/ssh/ssh_config.new &&     mv /etc/ssh/ssh_config.new /etc/ssh/ssh_config']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/partials/onednn/ubuntu/python3.partial.Dockerfile,ENV,1,['LANG C.UTF-8']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/partials/onednn/ubuntu/python3.partial.Dockerfile,ARG,1,['PYTHON=python3']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/partials/onednn/ubuntu/python3.partial.Dockerfile,RUN,6,"['apt-get update && apt-get install -y --no-install-recommends --fix-missing     curl     software-properties-common', 'add-apt-repository ppa:deadsnakes/ppa', 'apt-get update && apt-get install -y --no-install-recommends --fix-missing     ${PYTHON}', 'curl -fSsL https://bootstrap.pypa.io/get-pip.py | ${PYTHON}', '${PYTHON} -m pip --no-cache-dir install --upgrade     pip     setuptools', 'ln -sf $(which ${PYTHON}) /usr/local/bin/python &&     ln -sf $(which ${PYTHON}) /usr/local/bin/python3 &&     ln -sf $(which ${PYTHON}) /usr/bin/python &&     ln -sf $(which ${PYTHON}) /usr/bin/python3']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/partials/onednn/ubuntu/version.partial.Dockerfile,ARG,1,['UBUNTU_VERSION=20.04']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/partials/onednn/ubuntu/2004-horovod.partial.Dockerfile,ARG,4,"['HOROVOD_WITHOUT_PYTORCH=1', 'HOROVOD_WITHOUT_MXNET=1', 'HOROVOD_WITH_TENSORFLOW=1', 'HOROVOD_VERSION=v0.21.1']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/partials/onednn/ubuntu/2004-horovod.partial.Dockerfile,RUN,3,"['apt-get update && apt-get install -y --no-install-recommends --fix-missing     build-essential     cmake     g++-8     gcc-8     git     ${PYTHON}-dev', 'update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 100 --slave /usr/bin/g++ g++ /usr/bin/g++-9 &&     update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 800 --slave /usr/bin/g++ g++ /usr/bin/g++-8', '${PYTHON} -m pip install git+https://github.com/horovod/horovod.git@${HOROVOD_VERSION}']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/partials/onednn/ubuntu/1604-mpich.partial.Dockerfile,ARG,1,"['DEBIAN_FRONTEND=""noninteractive""']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/partials/onednn/ubuntu/1604-mpich.partial.Dockerfile,RUN,5,"['apt-get update && apt-get install -y --no-install-recommends --fix-missing     mpich     libmpich-dev     openssh-client     openssh-server &&     apt-get clean &&     rm -rf /var/lib/apt/lists/*', 'mv /usr/bin/mpirun /usr/bin/mpirun.real &&     echo \'#!/bin/bash\' > /usr/bin/mpirun &&     echo \'mpirun.real ""$@""\' >> /usr/bin/mpirun &&     chmod a+x /usr/bin/mpirun', ""sed -i 's/# if __GNUC__ > 5/# if __GNUC__ > 9/g' /usr/include/mpich/mpicxx.h"", 'mkdir -p /var/run/sshd', 'cat /etc/ssh/ssh_config | grep -v StrictHostKeyChecking > /etc/ssh/ssh_config.new &&     echo ""    StrictHostKeyChecking no"" >> /etc/ssh/ssh_config.new &&     mv /etc/ssh/ssh_config.new /etc/ssh/ssh_config']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/partials/onednn/ubuntu/bazel.partial.Dockerfile,RUN,2,"['apt-get update && apt-get install -y --no-install-recommends --fix-missing     curl', 'mkdir /bazel &&     curl -fSsL -o /bazel/installer.sh ""https://github.com/bazelbuild/bazel/releases/download/${BAZEL_VERSION}/bazel-${BAZEL_VERSION}-installer-linux-x86_64.sh"" &&     curl -fSsL -o /bazel/LICENSE.txt ""https://raw.githubusercontent.com/bazelbuild/bazel/master/LICENSE"" &&     bash /bazel/installer.sh &&     rm -f /bazel/installer.sh']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/partials/onednn/ubuntu/bazel.partial.Dockerfile,ARG,1,['BAZEL_VERSION=4.2.2']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/partials/onednn/ubuntu/horovod.partial.Dockerfile,ARG,4,"['HOROVOD_WITHOUT_PYTORCH=1', 'HOROVOD_WITHOUT_MXNET=1', 'HOROVOD_WITH_TENSORFLOW=1', 'HOROVOD_VERSION=v0.21.1']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/partials/onednn/ubuntu/horovod.partial.Dockerfile,RUN,3,"['apt-get update && apt-get install -y --no-install-recommends --fix-missing     build-essential     cmake     g++-8     gcc-8     git     ${PYTHON}-dev', 'update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-7 700 --slave /usr/bin/g++ g++ /usr/bin/g++-7 &&     update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 800 --slave /usr/bin/g++ g++ /usr/bin/g++-8', '${PYTHON} -m pip install git+https://github.com/horovod/horovod.git@${HOROVOD_VERSION}']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/partials/onednn/ubuntu/devel.partial.Dockerfile,FROM,1,['ubuntu:${UBUNTU_VERSION} AS base']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/partials/onednn/ubuntu/devel.partial.Dockerfile,ARG,4,"['DEBIAN_FRONTEND=""noninteractive""', 'CACHE_STOP=1', 'CHECKOUT_TF_SRC=0', 'TF_BRANCH=master']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/partials/onednn/ubuntu/devel.partial.Dockerfile,RUN,2,"['apt-get update && apt-get install -y --no-install-recommends --fix-missing         build-essential         curl         git         libcurl3-dev         libfreetype6-dev         libhdf5-serial-dev         libzmq3-dev         pkg-config         rsync         software-properties-common         sudo         unzip         zip         zlib1g-dev         openjdk-8-jdk         openjdk-8-jre-headless         &&     apt-get clean &&     rm -rf /var/lib/apt/lists/*', 'test ""${CHECKOUT_TF_SRC}"" -eq 1 && git clone https://github.com/tensorflow/tensorflow.git --branch ""${TF_BRANCH}"" --single-branch /tensorflow_src || true']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/partials/onednn/ubuntu/devel.partial.Dockerfile,ENV,1,['CI_BUILD_PYTHON python']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/partials/onednn/ubuntu/1604-horovod.partial.Dockerfile,ARG,4,"['HOROVOD_WITHOUT_PYTORCH=1', 'HOROVOD_WITHOUT_MXNET=1', 'HOROVOD_WITH_TENSORFLOW=1', 'HOROVOD_VERSION=v0.21.1']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/partials/onednn/ubuntu/1604-horovod.partial.Dockerfile,RUN,6,"['apt-get update && apt-get install -y --no-install-recommends --fix-missing     software-properties-common', 'cd /usr/lib/python3/dist-packages &&     ln -sf apt_pkg.cpython-35m-x86_64-linux-gnu.so apt_pkg.so', 'add-apt-repository ppa:ubuntu-toolchain-r/test', 'apt-get update && apt-get install -y --no-install-recommends --fix-missing     build-essential     cmake     g++-8     gcc-8     git     ${PYTHON}-dev', 'update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-5 500 --slave /usr/bin/g++ g++ /usr/bin/g++-5 &&     update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 800 --slave /usr/bin/g++ g++ /usr/bin/g++-8', '${PYTHON} -m pip install git+https://github.com/horovod/horovod.git@${HOROVOD_VERSION}']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/partials/onednn/ubuntu/cpu.partial.Dockerfile,FROM,1,['ubuntu:${UBUNTU_VERSION} as base']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/partials/onednn/ubuntu/python.partial.Dockerfile,ENV,1,['LANG C.UTF-8']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/partials/onednn/ubuntu/python.partial.Dockerfile,ARG,1,['PYTHON=python3']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/partials/onednn/ubuntu/python.partial.Dockerfile,RUN,3,"['apt-get update && apt-get install -y --no-install-recommends --fix-missing     ${PYTHON}     ${PYTHON}-pip', '${PYTHON} -m pip --no-cache-dir install --upgrade     pip     setuptools', 'ln -s $(which ${PYTHON}) /usr/local/bin/python']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/partials/onednn/ubuntu/devel-horovod.partial.Dockerfile,ARG,2,"['CHECKOUT_HOROVOD_SRC=0', 'HOROVOD_BRANCH=master']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/partials/onednn/ubuntu/devel-horovod.partial.Dockerfile,RUN,1,"['test ""${CHECKOUT_HOROVOD_SRC}"" -eq 1 && git clone --branch ""${HOROVOD_BRANCH}"" --single-branch --recursive https://github.com/uber/horovod.git /horovod_src || true']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/partials/onednn/ubuntu/mpi.partial.Dockerfile,ARG,1,"['DEBIAN_FRONTEND=""noninteractive""']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/partials/onednn/ubuntu/mpi.partial.Dockerfile,RUN,5,"['apt-get update && apt-get install -y --no-install-recommends --fix-missing     libopenmpi-dev     openmpi-bin     openmpi-common     openssh-client     openssh-server &&     apt-get clean &&     rm -rf /var/lib/apt/lists/*', 'mv /usr/bin/mpirun /usr/bin/mpirun.real &&     echo \'#!/bin/bash\' > /usr/bin/mpirun &&     echo \'mpirun.real --allow-run-as-root ""$@""\' >> /usr/bin/mpirun &&     chmod a+x /usr/bin/mpirun', 'echo ""btl_tcp_if_exclude = lo,docker0"" >> /etc/openmpi/openmpi-mca-params.conf', 'mkdir -p /var/run/sshd', 'cat /etc/ssh/ssh_config | grep -v StrictHostKeyChecking > /etc/ssh/ssh_config.new &&     echo ""    StrictHostKeyChecking no"" >> /etc/ssh/ssh_config.new &&     mv /etc/ssh/ssh_config.new /etc/ssh/ssh_config']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/partials/ubuntu/version.partial.Dockerfile,ARG,1,['UBUNTU_VERSION=20.04']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/partials/ubuntu/bazelbuild-arm64v8.partial.Dockerfile,RUN,4,"['apt-get update && apt-get install -y     build-essential     curl     git     openjdk-8-jdk     python3-dev     virtualenv     swig', 'apt-get update && apt-get install -y     gfortran     libblas-dev     liblapack-dev', ""python3 -m pip --no-cache-dir install     Pillow     keras_preprocessing     tb-nightly     h5py     matplotlib     mock     'numpy<1.19.0'     scipy     sklearn     pandas     portpicker     enum34"", 'mkdir /bazel &&     cd /bazel &&     curl -fSsL -O https://github.com/bazelbuild/bazel/releases/download/$BAZEL_VERSION/bazel-$BAZEL_VERSION-dist.zip &&     unzip bazel-$BAZEL_VERSION-dist.zip &&     bash ./compile.sh &&     cp output/bazel /usr/local/bin/ &&     rm -rf /bazel &&     cd -']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/partials/ubuntu/bazelbuild-arm64v8.partial.Dockerfile,ENV,1,['BAZEL_VERSION 4.2.2']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/partials/ubuntu/bazelbuild-arm64v8.partial.Dockerfile,WORKDIR,1,['/']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/partials/ubuntu/bazel.partial.Dockerfile,RUN,3,"['apt-get update && apt-get install -y     build-essential     curl     git     wget     openjdk-8-jdk     python3-dev     virtualenv     swig', ""python3 -m pip --no-cache-dir install     Pillow     h5py     keras_preprocessing     tb-nightly     matplotlib     mock     'numpy<1.19.0'     scipy     sklearn     pandas     future     portpicker     enum34"", 'mkdir /bazel &&     wget -O /bazel/installer.sh ""https://github.com/bazelbuild/bazel/releases/download/${BAZEL_VERSION}/bazel-${BAZEL_VERSION}-installer-linux-x86_64.sh"" &&     wget -O /bazel/LICENSE.txt ""https://raw.githubusercontent.com/bazelbuild/bazel/master/LICENSE"" &&     chmod +x /bazel/installer.sh &&     /bazel/installer.sh &&     rm -f /bazel/installer.sh']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/partials/ubuntu/bazel.partial.Dockerfile,ARG,1,['BAZEL_VERSION=4.2.2']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/partials/ubuntu/devel-cpu.partial.Dockerfile,FROM,1,['ubuntu:${UBUNTU_VERSION} AS base']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/partials/ubuntu/devel-cpu.partial.Dockerfile,ENV,2,"['DEBIAN_FRONTEND=noninteractive', 'CI_BUILD_PYTHON python']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/partials/ubuntu/devel-cpu.partial.Dockerfile,RUN,3,"['apt-get update && apt-get install -y --no-install-recommends         build-essential         clang-format         curl         git         libcurl3-dev         libfreetype6-dev         libhdf5-serial-dev         libzmq3-dev         pkg-config         rsync         software-properties-common         sudo         unzip         zip         zlib1g-dev         openjdk-8-jdk         openjdk-8-jre-headless         &&     apt-get clean &&     rm -rf /var/lib/apt/lists/*', 'chmod a+w /etc/passwd /etc/group', 'test ""${CHECKOUT_TF_SRC}"" -eq 1 && git clone --depth=1 https://github.com/tensorflow/tensorflow.git /tensorflow_src || true']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/partials/ubuntu/devel-cpu.partial.Dockerfile,ARG,2,"['CACHE_STOP=1', 'CHECKOUT_TF_SRC=0']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/partials/ubuntu/bazelbuild.partial.Dockerfile,RUN,3,"['apt-get update && apt-get install -y     build-essential     curl     git     openjdk-8-jdk     python3-dev     virtualenv     swig', ""python3 -m pip --no-cache-dir install     Pillow     h5py     keras_preprocessing     tb-nightly     matplotlib     mock     'numpy<1.19.0'     scipy     sklearn     pandas     portpicker     enum34"", 'mkdir /bazel &&     cd /bazel &&     curl -fSsL -O https://github.com/bazelbuild/bazel/releases/download/$BAZEL_VERSION/bazel-$BAZEL_VERSION-dist.zip &&     unzip bazel-$BAZEL_VERSION-dist.zip &&     bash ./compile.sh &&     cp output/bazel /usr/local/bin/ &&     rm -rf /bazel &&     cd -']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/partials/ubuntu/bazelbuild.partial.Dockerfile,ENV,1,['BAZEL_VERSION 4.2.2']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/partials/ubuntu/bazelbuild.partial.Dockerfile,WORKDIR,1,['/']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/partials/ubuntu/cpu.partial.Dockerfile,FROM,1,['ubuntu:${UBUNTU_VERSION} as base']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/partials/ubuntu/cpu.partial.Dockerfile,ENV,1,['DEBIAN_FRONTEND=noninteractive']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/partials/ubuntu/cpu.partial.Dockerfile,RUN,1,['apt-get update && apt-get install -y curl']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/partials/ubuntu/nvidia.partial.Dockerfile,ARG,9,"['ARCH=', 'CUDA=11.2', 'ARCH', 'CUDA', 'CUDNN=8.1.0.77-1', 'CUDNN_MAJOR_VERSION=8', 'LIB_DIR_PREFIX=x86_64', 'LIBNVINFER=7.2.2-1', 'LIBNVINFER_MAJOR_VERSION=7']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/partials/ubuntu/nvidia.partial.Dockerfile,FROM,1,['nvidia/cuda${ARCH:+-$ARCH}:${CUDA}.1-base-ubuntu${UBUNTU_VERSION} as base']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/partials/ubuntu/nvidia.partial.Dockerfile,ENV,2,"['DEBIAN_FRONTEND=noninteractive', 'LD_LIBRARY_PATH /usr/local/cuda-11.0/targets/x86_64-linux/lib:/usr/local/cuda/extras/CUPTI/lib64:/usr/local/cuda/lib64:$LD_LIBRARY_PATH']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/partials/ubuntu/nvidia.partial.Dockerfile,SHELL,1,"['[""/bin/bash"", ""-c""]']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/partials/ubuntu/nvidia.partial.Dockerfile,RUN,3,"['apt-get update && apt-get install -y --no-install-recommends         build-essential         cuda-command-line-tools-${CUDA/./-}         libcublas-${CUDA/./-}         cuda-nvrtc-${CUDA/./-}         libcufft-${CUDA/./-}         libcurand-${CUDA/./-}         libcusolver-${CUDA/./-}         libcusparse-${CUDA/./-}         curl         libcudnn8=${CUDNN}+cuda${CUDA}         libfreetype6-dev         libhdf5-serial-dev         libzmq3-dev         pkg-config         software-properties-common         unzip', '[[ ""${ARCH}"" = ""ppc64le"" ]] || { apt-get update &&         apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1804/x86_64/7fa2af80.pub &&         echo ""deb https://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1804/x86_64 /""  > /etc/apt/sources.list.d/tensorRT.list &&         apt-get update &&         apt-get install -y --no-install-recommends libnvinfer${LIBNVINFER_MAJOR_VERSION}=${LIBNVINFER}+cuda11.0         libnvinfer-plugin${LIBNVINFER_MAJOR_VERSION}=${LIBNVINFER}+cuda11.0         && apt-get clean         && rm -rf /var/lib/apt/lists/*; }', 'ln -s /usr/local/cuda/lib64/stubs/libcuda.so /usr/local/cuda/lib64/stubs/libcuda.so.1     && echo ""/usr/local/cuda/lib64/stubs"" > /etc/ld.so.conf.d/z-cuda-stubs.conf     && ldconfig']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/partials/ubuntu/python.partial.Dockerfile,ENV,1,['LANG C.UTF-8']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/partials/ubuntu/python.partial.Dockerfile,RUN,3,"['apt-get update && apt-get install -y     python3     python3-pip', 'python3 -m pip --no-cache-dir install --upgrade     ""pip<20.3""     setuptools', 'ln -s $(which python3) /usr/local/bin/python']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/partials/ubuntu/devel-nvidia.partial.Dockerfile,ARG,11,"['ARCH=', 'CUDA=11.2', 'ARCH', 'CUDA', 'CUDNN=8.1.0.77-1', 'CUDNN_MAJOR_VERSION=8', 'LIB_DIR_PREFIX=x86_64', 'LIBNVINFER=7.2.2-1', 'LIBNVINFER_MAJOR_VERSION=7', 'CACHE_STOP=1', 'CHECKOUT_TF_SRC=0']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/partials/ubuntu/devel-nvidia.partial.Dockerfile,FROM,1,['nvidia/cuda${ARCH:+-$ARCH}:${CUDA}.1-base-ubuntu${UBUNTU_VERSION} as base']
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/partials/ubuntu/devel-nvidia.partial.Dockerfile,SHELL,1,"['[""/bin/bash"", ""-c""]']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/partials/ubuntu/devel-nvidia.partial.Dockerfile,ENV,6,"['DEBIAN_FRONTEND=noninteractive', 'LD_LIBRARY_PATH /usr/local/cuda-11.0/targets/x86_64-linux/lib:/usr/local/cuda/extras/CUPTI/lib64:/usr/local/cuda/lib64:/usr/include/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:$LD_LIBRARY_PATH:/usr/local/cuda/lib64/stubs:/usr/local/cuda-11.0/lib64:/usr/local/cuda-11.2/lib64', 'TF_NEED_CUDA 1', 'TF_NEED_TENSORRT 1', 'TF_CUDA_VERSION=${CUDA}', 'TF_CUDNN_VERSION=${CUDNN_MAJOR_VERSION}']"
tensorflow/tensorflow,latest,/tensorflow/tools/dockerfiles/partials/ubuntu/devel-nvidia.partial.Dockerfile,RUN,4,"[""apt-get update && apt-get install -y --no-install-recommends         build-essential         clang-format         cuda-command-line-tools-${CUDA/./-}         libcublas-${CUDA/./-}         libcublas-dev-${CUDA/./-}         cuda-nvprune-${CUDA/./-}         cuda-nvrtc-${CUDA/./-}         cuda-nvrtc-dev-${CUDA/./-}         cuda-cudart-dev-${CUDA/./-}         libcufft-dev-${CUDA/./-}         libcurand-dev-${CUDA/./-}         libcusolver-dev-${CUDA/./-}         libcusparse-dev-${CUDA/./-}         libcudnn8=${CUDNN}+cuda${CUDA}         libcudnn8-dev=${CUDNN}+cuda${CUDA}         libcurl3-dev         libfreetype6-dev         libhdf5-serial-dev         libzmq3-dev         pkg-config         rsync         software-properties-common         unzip         zip         zlib1g-dev         wget         git         &&     find /usr/local/cuda-${CUDA}/lib64/ -type f -name 'lib*_static.a' -not -name 'libcudart_static.a' -delete &&     rm /usr/lib/${LIB_DIR_PREFIX}-linux-gnu/libcudnn_static_v8.a"", '[[ ""${ARCH}"" = ""ppc64le"" ]] || { apt-get update &&         apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1804/x86_64/7fa2af80.pub &&         echo ""deb https://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1804/x86_64 /""  > /etc/apt/sources.list.d/tensorRT.list &&         apt-get update &&         apt-get install -y --no-install-recommends libnvinfer${LIBNVINFER_MAJOR_VERSION}=${LIBNVINFER}+cuda11.0         libnvinfer-dev=${LIBNVINFER}+cuda11.0         libnvinfer-plugin-dev=${LIBNVINFER}+cuda11.0         libnvinfer-plugin${LIBNVINFER_MAJOR_VERSION}=${LIBNVINFER}+cuda11.0         && apt-get clean         && rm -rf /var/lib/apt/lists/*; }', 'test ""${CHECKOUT_TF_SRC}"" -eq 1 && git clone --depth=1 https://github.com/tensorflow/tensorflow.git /tensorflow_src || true', 'ln -s /usr/local/cuda/lib64/stubs/libcuda.so /usr/local/cuda/lib64/stubs/libcuda.so.1     && echo ""/usr/local/cuda/lib64/stubs"" > /etc/ld.so.conf.d/z-cuda-stubs.conf     && ldconfig']"
tensorflow/tensorflow,latest,/tensorflow/lite/tools/pip_package/Dockerfile,ARG,1,['IMAGE']
tensorflow/tensorflow,latest,/tensorflow/lite/tools/pip_package/Dockerfile,FROM,1,['${IMAGE}']
tensorflow/tensorflow,latest,/tensorflow/lite/tools/pip_package/Dockerfile,COPY,1,['update_sources.sh /']
tensorflow/tensorflow,latest,/tensorflow/lite/tools/pip_package/Dockerfile,RUN,12,"['/update_sources.sh', 'dpkg --add-architecture armhf', 'dpkg --add-architecture arm64', 'apt-get update &&     apt-get install -y       debhelper       dh-python       python-all       python-setuptools       python-wheel       python-numpy       python-pip       pybind11-dev       libpython-dev       libpython-dev:armhf       libpython-dev:arm64       python3-all       python3-setuptools       python3-wheel       python3-numpy       python3-pip       libpython3-dev       libpython3-dev:armhf       libpython3-dev:arm64       crossbuild-essential-armhf       crossbuild-essential-arm64       zlib1g-dev        zlib1g-dev:armhf       zlib1g-dev:arm64       curl       unzip       git &&     apt-get clean', 'pip install pip --upgrade', 'pip install pybind11', 'pip3 install pip --upgrade', 'pip3 install pybind11', 'curl -OL https://github.com/Kitware/CMake/releases/download/v3.16.8/cmake-3.16.8-Linux-x86_64.sh', 'mkdir /opt/cmake', 'sh cmake-3.16.8-Linux-x86_64.sh --prefix=/opt/cmake --skip-license', 'ln -s /opt/cmake/bin/cmake /usr/local/bin/cmake']"
tensorflow/tensorflow,latest,/tensorflow/lite/tools/pip_package/Dockerfile.py3,ARG,2,"['IMAGE', 'PYTHON_VERSION']"
tensorflow/tensorflow,latest,/tensorflow/lite/tools/pip_package/Dockerfile.py3,FROM,1,['${IMAGE}']
tensorflow/tensorflow,latest,/tensorflow/lite/tools/pip_package/Dockerfile.py3,COPY,1,['update_sources.sh /']
tensorflow/tensorflow,latest,/tensorflow/lite/tools/pip_package/Dockerfile.py3,RUN,18,"['/update_sources.sh', 'dpkg --add-architecture armhf', 'dpkg --add-architecture arm64', 'apt-get update &&     apt-get install -y       software-properties-common       debhelper       crossbuild-essential-armhf       crossbuild-essential-arm64       zlib1g-dev        zlib1g-dev:armhf       zlib1g-dev:arm64       curl       unzip       git &&     apt-get clean', 'yes | add-apt-repository ppa:deadsnakes/ppa', 'apt-get update &&     apt-get install -y       python$PYTHON_VERSION       python$PYTHON_VERSION-dev       python$PYTHON_VERSION-distutils       libpython$PYTHON_VERSION-dev       libpython$PYTHON_VERSION-dev:armhf       libpython$PYTHON_VERSION-dev:arm64', 'ln -sf /usr/bin/python$PYTHON_VERSION /usr/bin/python3', 'curl -OL https://bootstrap.pypa.io/get-pip.py', 'python3 get-pip.py', 'rm get-pip.py', 'pip3 install --upgrade pip', 'pip3 install numpy~=1.19.2 setuptools pybind11', 'ln -sf /usr/include/python$PYTHON_VERSION /usr/include/python3', 'ln -sf /usr/local/lib/python$PYTHON_VERSION/dist-packages/numpy/core/include/numpy /usr/include/python3/numpy', 'curl -OL https://github.com/Kitware/CMake/releases/download/v3.16.8/cmake-3.16.8-Linux-x86_64.sh', 'mkdir /opt/cmake', 'sh cmake-3.16.8-Linux-x86_64.sh --prefix=/opt/cmake --skip-license', 'ln -s /opt/cmake/bin/cmake /usr/local/bin/cmake']"
BVLC/caffe,latest,/docker/gpu/Dockerfile,FROM,1,['nvidia/cuda:8.0-cudnn6-devel-ubuntu16.04']
BVLC/caffe,latest,/docker/gpu/Dockerfile,LABEL,1,['maintainer caffe-maint@googlegroups.com']
BVLC/caffe,latest,/docker/gpu/Dockerfile,RUN,3,"['apt-get update && apt-get install -y --no-install-recommends         build-essential         cmake         git         wget         libatlas-base-dev         libboost-all-dev         libgflags-dev         libgoogle-glog-dev         libhdf5-serial-dev         libleveldb-dev         liblmdb-dev         libopencv-dev         libprotobuf-dev         libsnappy-dev         protobuf-compiler         python-dev         python-numpy         python-pip         python-setuptools         python-scipy &&     rm -rf /var/lib/apt/lists/*', 'git clone -b ${CLONE_TAG} --depth 1 https://github.com/BVLC/caffe.git . &&     pip install --upgrade pip &&     cd python && for req in $(cat requirements.txt) pydot; do pip install $req; done && cd .. &&     git clone https://github.com/NVIDIA/nccl.git && cd nccl && make -j install && cd .. && rm -rf nccl &&     mkdir build && cd build &&     cmake -DUSE_CUDNN=1 -DUSE_NCCL=1 .. &&     make -j""$(nproc)""', 'echo ""$CAFFE_ROOT/build/lib"" >> /etc/ld.so.conf.d/caffe.conf && ldconfig']"
BVLC/caffe,latest,/docker/gpu/Dockerfile,ENV,5,"['CAFFE_ROOT=/opt/caffe', 'CLONE_TAG=1.0', 'PYCAFFE_ROOT $CAFFE_ROOT/python', 'PYTHONPATH $PYCAFFE_ROOT:$PYTHONPATH', 'PATH $CAFFE_ROOT/build/tools:$PYCAFFE_ROOT:$PATH']"
BVLC/caffe,latest,/docker/gpu/Dockerfile,WORKDIR,2,"['$CAFFE_ROOT', '/workspace']"
BVLC/caffe,latest,/docker/cpu/Dockerfile,FROM,1,['ubuntu:16.04']
BVLC/caffe,latest,/docker/cpu/Dockerfile,LABEL,1,['maintainer caffe-maint@googlegroups.com']
BVLC/caffe,latest,/docker/cpu/Dockerfile,RUN,3,"['apt-get update && apt-get install -y --no-install-recommends         build-essential         cmake         git         wget         libatlas-base-dev         libboost-all-dev         libgflags-dev         libgoogle-glog-dev         libhdf5-serial-dev         libleveldb-dev         liblmdb-dev         libopencv-dev         libprotobuf-dev         libsnappy-dev         protobuf-compiler         python-dev         python-numpy         python-pip         python-setuptools         python-scipy &&     rm -rf /var/lib/apt/lists/*', 'git clone -b ${CLONE_TAG} --depth 1 https://github.com/BVLC/caffe.git . &&     pip install --upgrade pip &&     cd python && for req in $(cat requirements.txt) pydot; do pip install $req; done && cd .. &&     mkdir build && cd build &&     cmake -DCPU_ONLY=1 .. &&     make -j""$(nproc)""', 'echo ""$CAFFE_ROOT/build/lib"" >> /etc/ld.so.conf.d/caffe.conf && ldconfig']"
BVLC/caffe,latest,/docker/cpu/Dockerfile,ENV,5,"['CAFFE_ROOT=/opt/caffe', 'CLONE_TAG=1.0', 'PYCAFFE_ROOT $CAFFE_ROOT/python', 'PYTHONPATH $PYCAFFE_ROOT:$PYTHONPATH', 'PATH $CAFFE_ROOT/build/tools:$PYCAFFE_ROOT:$PATH']"
BVLC/caffe,latest,/docker/cpu/Dockerfile,WORKDIR,2,"['$CAFFE_ROOT', '/workspace']"
pytorch/pytorch,latest,/Dockerfile,ARG,8,"['BASE_IMAGE=ubuntu:18.04', 'PYTHON_VERSION=3.8', 'PYTHON_VERSION=3.8', 'PYTHON_VERSION=3.8', 'CUDA_VERSION=11.1', 'CUDA_CHANNEL=nvidia', 'INSTALL_CHANNEL=pytorch-nightly', 'PYTORCH_VERSION']"
pytorch/pytorch,latest,/Dockerfile,FROM,7,"['${BASE_IMAGE} as dev-base', 'dev-base as conda', 'dev-base as submodule-update', 'conda as build', 'conda as conda-installs', '${BASE_IMAGE} as official', 'official as dev']"
pytorch/pytorch,latest,/Dockerfile,RUN,9,"['--mount=type=cache,id=apt-dev,target=/var/cache/apt     apt-get update && apt-get install -y --no-install-recommends         build-essential         ca-certificates         ccache         cmake         curl         git         libjpeg-dev         libpng-dev &&     rm -rf /var/lib/apt/lists/*', '/usr/sbin/update-ccache-symlinks', 'mkdir /opt/ccache && ccache --set-config=cache_dir=/opt/ccache', 'curl -fsSL -v -o ~/miniconda.sh -O  https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh  &&     chmod +x ~/miniconda.sh &&     ~/miniconda.sh -b -p /opt/conda &&     rm ~/miniconda.sh &&     /opt/conda/bin/conda install -y python=${PYTHON_VERSION} conda-build pyyaml numpy ipython&&     /opt/conda/bin/conda clean -ya', 'git submodule update --init --recursive --jobs 0', '--mount=type=cache,target=/opt/ccache     TORCH_CUDA_ARCH_LIST=""3.5 5.2 6.0 6.1 7.0+PTX 8.0"" TORCH_NVCC_FLAGS=""-Xfatbin -compress-all""     CMAKE_PREFIX_PATH=""$(dirname $(which conda))/../""     python setup.py install', '/opt/conda/bin/conda install -c ""${INSTALL_CHANNEL}"" -c ""${CUDA_CHANNEL}"" -y python=${PYTHON_VERSION} pytorch torchvision torchtext ""cudatoolkit=${CUDA_VERSION}"" &&     /opt/conda/bin/conda clean -ya', '/opt/conda/bin/pip install torchelastic', '--mount=type=cache,id=apt-final,target=/var/cache/apt     apt-get update && apt-get install -y --no-install-recommends         ca-certificates         libjpeg-dev         libpng-dev &&     rm -rf /var/lib/apt/lists/*']"
pytorch/pytorch,latest,/Dockerfile,ENV,7,"['PATH /opt/conda/bin:$PATH', 'CONDA_OVERRIDE_CUDA=${CUDA_VERSION}', 'PATH /opt/conda/bin:$PATH', 'NVIDIA_VISIBLE_DEVICES all', 'NVIDIA_DRIVER_CAPABILITIES compute,utility', 'LD_LIBRARY_PATH /usr/local/nvidia/lib:/usr/local/nvidia/lib64', 'PYTORCH_VERSION ${PYTORCH_VERSION}']"
pytorch/pytorch,latest,/Dockerfile,WORKDIR,3,"['/opt/pytorch', '/opt/pytorch', '/workspace']"
pytorch/pytorch,latest,/Dockerfile,COPY,5,"['. .', '--from=conda /opt/conda /opt/conda', '--from=submodule-update /opt/pytorch /opt/pytorch', '--from=conda-installs /opt/conda /opt/conda', '--from=build /opt/conda /opt/conda']"
pytorch/pytorch,latest,/Dockerfile,LABEL,1,"['com.nvidia.volumes.needed=""nvidia_driver""']"
pytorch/pytorch,latest,/docker/pytorch/ubuntu_cpu_gpu/Dockerfile,ARG,4,"['BASE_IMAGE', 'PYTHON_VERSION', 'MAGMA_CUDA_VERSION', 'TORCH_CUDA_ARCH_LIST_VAR']"
pytorch/pytorch,latest,/docker/pytorch/ubuntu_cpu_gpu/Dockerfile,FROM,2,"['${BASE_IMAGE} as dev-base', 'dev-base as conda']"
pytorch/pytorch,latest,/docker/pytorch/ubuntu_cpu_gpu/Dockerfile,RUN,11,"['apt-get update && apt-get install -y --no-install-recommends         build-essential         ca-certificates         ccache         cmake         curl         git         git-lfs         libjpeg-dev         libpng-dev         openmpi-bin         wget &&     rm -rf /var/lib/apt/lists/*', '/usr/sbin/update-ccache-symlinks', 'mkdir /opt/ccache && ccache --set-config=cache_dir=/opt/ccache', 'curl -fsSL -v -o ~/miniconda.sh -O  https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh  &&     chmod +x ~/miniconda.sh &&     ~/miniconda.sh -b -p /opt/conda &&     rm ~/miniconda.sh &&     /opt/conda/bin/conda install -y python=${PYTHON_VER} conda-build pyyaml numpy ipython cython typing typing_extensions mkl mkl-include ninja &&     /opt/conda/bin/conda clean -ya', 'if [ -z ""$MAGMA_CUDA_VERSION"" ] ; then     echo ""Building with CPU support ..."";   else     echo ""Building with GPU/CUDA support ..."";     conda install -y -c pytorch ${MAGMA_CUDA_VERSION} && conda clean -ya;   fi', 'chmod -R ugo+rw /opt/conda/', 'if [ -z ""$TORCH_CUDA_ARCH_LIST_VAR"" ] ; then     echo ""Continuing CPU build ..."";   else     echo ""Setting CUDA env vars and installing openmpi ..."";     ln -s /usr/lib/x86_64-linux-gnu/libmpi_cxx.so.20 /usr/lib/x86_64-linux-gnu/libmpi_cxx.so.1;     ln -s /usr/lib/x86_64-linux-gnu/libmpi.so.20.10.1 /usr/lib/x86_64-linux-gnu/libmpi.so.12;   fi', 'curl -sL https://aka.ms/InstallAzureCLIDeb | bash', 'pip install --upgrade pip --target /opt/az/lib/python3.6/site-packages/', 'wget https://raw.githubusercontent.com/pytorch/builder/f121b0919d799b5ea2030c92ca266cf4cddf6656/common/install_mkl.sh', 'bash ./install_mkl.sh && rm install_mkl.sh']"
pytorch/pytorch,latest,/docker/pytorch/ubuntu_cpu_gpu/Dockerfile,ENV,5,"['PATH /opt/conda/bin:$PATH', 'PYTHON_VER=$PYTHON_VERSION', 'TORCH_CUDA_ARCH_LIST=${TORCH_CUDA_ARCH_LIST_VAR:+${TORCH_CUDA_ARCH_LIST_VAR}}', 'TORCH_NVCC_FLAGS=${TORCH_CUDA_ARCH_LIST_VAR:+""-Xfatbin -compress-all""}', 'CMAKE_PREFIX_PATH=""$(dirname $(which conda))/../""']"
pytorch/pytorch,latest,/docker/pytorch/ubuntu_cpu_gpu/Dockerfile,WORKDIR,1,['/opt/pytorch']
pytorch/pytorch,latest,/docker/cpu-blis/Dockerfile,ARG,3,"['BASE_IMAGE=ubuntu:18.04', 'PYTHON_VERSION=3.8', 'BLIS_URL=https://github.com/amd/blis.git']"
pytorch/pytorch,latest,/docker/cpu-blis/Dockerfile,FROM,2,"['${BASE_IMAGE} as dev-base', 'dev-base as conda']"
pytorch/pytorch,latest,/docker/cpu-blis/Dockerfile,CMD,1,"['echo ""Welcome to the PyTorch Docker Container!"" &&     echo ""Version of PyTorch Installed: "" && python -c \'import torch; print(torch.__version__)\' &&     echo ""Version of Torchvision Installed: "" && python -c \'import torchvision; print(torchvision.__version__)\' &&     echo ""LDD output showing successful linking with BLIS: "" && ldd /opt/conda/lib/python3.8/site-packages/torch/_C.cpython-38-x86_64-linux-gnu.so &&     /bin/bash']"
pytorch/pytorch,latest,/docker/cpu-blis/Dockerfile,RUN,8,"['--mount=type=cache,id=apt-dev,target=/var/cache/apt     apt-get update && apt-get install -y --no-install-recommends         build-essential         ca-certificates         ccache         cmake         curl         git         libjpeg-dev         libpng-dev         vim         wget &&     rm -rf /var/lib/apt/lists/*', '/usr/sbin/update-ccache-symlinks', 'mkdir /opt/ccache && ccache --set-config=cache_dir=/opt/ccache', 'wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O ~/miniconda.sh &&     chmod +x ~/miniconda.sh &&     ~/miniconda.sh -b -p /opt/conda &&     rm ~/miniconda.sh &&     /opt/conda/bin/conda install -y python=${PYTHON_VERSION} conda-build &&     /opt/conda/bin/conda install -y nomkl pyyaml numpy ipython ninja setuptools cmake cffi typing future &&     /opt/conda/bin/conda clean -ya', 'conda install typing_extensions', 'git clone ${BLIS_URL} && cd blis &&     ./configure --prefix=/root/BLISBuild --enable-cblas --enable-threading=openmp auto && make -j && make install &&     if [ ! -e /root/BLISBuild/lib/libblis.so ] ; then cp /root/BLISBuild/lib/libblis*.so /root/BLISBuild/lib/libblis.so ; fi', 'git clone https://github.com/pytorch/pytorch.git && cd pytorch &&     git submodule update --init --recursive --jobs 0 &&     export PATH=/root/BLISBuild/include/blis:$PATH LD_LIBRARY_PATH=/root/BLISBuild/lib:$LD_LIBRARY_PATH &&     export BLIS_HOME=/root/BLISBuild BLAS=BLIS USE_MKLDNN_CBLAS=ON WITH_BLAS=blis && python setup.py install', 'git clone https://github.com/pytorch/vision.git && cd vision &&     python setup.py install']"
pytorch/pytorch,latest,/docker/cpu-blis/Dockerfile,ENV,1,['PATH /opt/conda/bin:$PATH']
pytorch/pytorch,latest,/docker/cpu-blis/Dockerfile,WORKDIR,1,['/root']
pytorch/pytorch,latest,/caffe2/contrib/docker-ubuntu-14.04/Dockerfile,FROM,1,['ubuntu:trusty-20190515']
pytorch/pytorch,latest,/caffe2/contrib/docker-ubuntu-14.04/Dockerfile,MAINTAINER,1,['caffe-dev <caffe-dev@googlegroups.com>']
pytorch/pytorch,latest,/caffe2/contrib/docker-ubuntu-14.04/Dockerfile,RUN,14,"['apt-get update && apt-get install -q -y   build-essential   wget', 'cd /tmp &&   wget http://developer.download.nvidia.com/compute/cuda/7_0/Prod/local_installers/cuda_7.0.28_linux.run &&   chmod +x cuda_*_linux.run && ./cuda_*_linux.run -extract=`pwd` &&   ./NVIDIA-Linux-x86_64-*.run -s --no-kernel-module &&   ./cuda-linux64-rel-*.run -noprompt &&   rm -rf *', 'nvcc --version', 'apt-get update && apt-get install -q -y   git   libeigen3-dev   libgoogle-glog-dev   libleveldb-dev   liblmdb-dev   libopencv-dev   libprotobuf-dev   libsnappy-dev   zlib1g-dev   libbz2-dev   protobuf-compiler   python-dev   python-pip', 'cd /tmp &&   git clone https://github.com/facebook/rocksdb.git &&   cd /tmp/rocksdb &&   make && make install &&   cd / &&   rm -rf /tmp/rocksdb', 'cd /tmp &&   wget http://www.open-mpi.org/software/ompi/v1.10/downloads/openmpi-1.10.0.tar.gz &&   tar xzvf openmpi-1.10.0.tar.gz &&   cd /tmp/openmpi-1.10.0 &&   ./configure --with-cuda --with-threads &&   make && make install &&   cd / &&   rm -rf /tmp/openmpi-1.10.0 &&   rm /tmp/openmpi-1.10.0.tar.gz', 'apt-get install -q -y autoconf libtool', 'mkdir /tmp/zeromq-build &&   cd /tmp/zeromq-build &&   wget https://github.com/zeromq/zeromq4-1/archive/v4.1.3.tar.gz &&   tar xzvf v4.1.3.tar.gz --strip 1 &&   ./autogen.sh &&   ./configure --without-libsodium &&   make && make install &&   cd / &&   rm -rf /tmp/zeromq-build', 'pip install --upgrade pip', 'pip install   matplotlib   numpy   protobuf', 'apt-get install -q -y   gfortran   graphviz   libatlas-base-dev   vim', 'pip install   flask   ipython   notebook   pydot   python-nvd3   scipy   tornado', 'pip install   scikit-image', 'cd /opt &&   git clone https://github.com/Yangqing/caffe2.git &&   cd /opt/caffe2 &&   make']"
pytorch/pytorch,latest,/caffe2/contrib/docker-ubuntu-14.04/Dockerfile,ENV,2,"['LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/cuda/lib64', 'PATH=$PATH:/usr/local/cuda/bin']"
pytorch/pytorch,latest,/.circleci/docker/centos-rocm/Dockerfile,ARG,14,"['CENTOS_VERSION', 'CENTOS_VERSION', 'PYTORCH_ROCM_ARCH', 'EC2', 'DEVTOOLSET_VERSION', 'GLIBC_VERSION', 'ANACONDA_PYTHON_VERSION', 'PROTOBUF', 'DB', 'VISION', 'ROCM_VERSION', 'CMAKE_VERSION', 'NINJA_VERSION', 'BUILD_ENVIRONMENT']"
pytorch/pytorch,latest,/.circleci/docker/centos-rocm/Dockerfile,FROM,1,['centos:${CENTOS_VERSION}']
pytorch/pytorch,latest,/.circleci/docker/centos-rocm/Dockerfile,ENV,16,"['PYTORCH_ROCM_ARCH ${PYTORCH_ROCM_ARCH}', 'BASH_ENV ""/etc/profile""', 'PATH /opt/conda/bin:$PATH', 'INSTALLED_PROTOBUF ${PROTOBUF}', 'INSTALLED_DB ${DB}', 'INSTALLED_VISION ${VISION}', 'PATH /opt/rocm/bin:$PATH', 'PATH /opt/rocm/hcc/bin:$PATH', 'PATH /opt/rocm/hip/bin:$PATH', 'PATH /opt/rocm/opencl/bin:$PATH', 'PATH /opt/rocm/llvm/bin:$PATH', 'MAGMA_HOME /opt/rocm/magma', 'LANG en_US.utf8', 'LC_ALL en_US.utf8', 'PATH /opt/cache/bin:$PATH', 'BUILD_ENVIRONMENT ${BUILD_ENVIRONMENT}']"
pytorch/pytorch,latest,/.circleci/docker/centos-rocm/Dockerfile,ADD,12,"['./common/install_base.sh install_base.sh', './common/install_devtoolset.sh install_devtoolset.sh', './common/install_glibc.sh install_glibc.sh', './common/install_user.sh install_user.sh', './common/install_conda.sh install_conda.sh', './common/install_protobuf.sh install_protobuf.sh', './common/install_db.sh install_db.sh', './common/install_vision.sh install_vision.sh', './common/install_rocm.sh install_rocm.sh', './common/install_cmake.sh install_cmake.sh', './common/install_ninja.sh install_ninja.sh', './common/install_cache.sh install_cache.sh']"
pytorch/pytorch,latest,/.circleci/docker/centos-rocm/Dockerfile,RUN,23,"['bash ./install_base.sh && rm install_base.sh', 'yum -y remove git', 'yum -y remove git-*', 'yum -y install https://packages.endpoint.com/rhel/7/os/x86_64/endpoint-repo-1.9-1.x86_64.rpm', 'yum install -y git', 'bash ./install_devtoolset.sh && rm install_devtoolset.sh', 'if [ -n ""${GLIBC_VERSION}"" ]; then bash ./install_glibc.sh; fi', 'rm install_glibc.sh', 'bash ./install_user.sh && rm install_user.sh', 'bash ./install_conda.sh && rm install_conda.sh', 'if [ -n ""${PROTOBUF}"" ]; then bash ./install_protobuf.sh; fi', 'rm install_protobuf.sh', 'if [ -n ""${DB}"" ]; then bash ./install_db.sh; fi', 'rm install_db.sh', 'if [ -n ""${VISION}"" ]; then bash ./install_vision.sh; fi', 'rm install_vision.sh', 'bash ./install_rocm.sh', 'rm install_rocm.sh', 'if [ -n ""${CMAKE_VERSION}"" ]; then bash ./install_cmake.sh; fi', 'rm install_cmake.sh', 'if [ -n ""${NINJA_VERSION}"" ]; then bash ./install_ninja.sh; fi', 'rm install_ninja.sh', 'bash ./install_cache.sh && rm install_cache.sh']"
pytorch/pytorch,latest,/.circleci/docker/centos-rocm/Dockerfile,USER,1,['jenkins']
pytorch/pytorch,latest,/.circleci/docker/centos-rocm/Dockerfile,CMD,1,"['[""bash""]']"
pytorch/pytorch,latest,/.circleci/docker/ubuntu-rocm/Dockerfile,ARG,15,"['UBUNTU_VERSION', 'UBUNTU_VERSION', 'PYTORCH_ROCM_ARCH', 'EC2', 'LLVMDEV', 'CLANG_VERSION', 'ANACONDA_PYTHON_VERSION', 'GCC_VERSION', 'PROTOBUF', 'DB', 'VISION', 'ROCM_VERSION', 'CMAKE_VERSION', 'NINJA_VERSION', 'BUILD_ENVIRONMENT']"
pytorch/pytorch,latest,/.circleci/docker/ubuntu-rocm/Dockerfile,FROM,1,['ubuntu:${UBUNTU_VERSION}']
pytorch/pytorch,latest,/.circleci/docker/ubuntu-rocm/Dockerfile,ENV,16,"['DEBIAN_FRONTEND noninteractive', 'PYTORCH_ROCM_ARCH ${PYTORCH_ROCM_ARCH}', 'PATH /opt/conda/bin:$PATH', 'INSTALLED_PROTOBUF ${PROTOBUF}', 'INSTALLED_DB ${DB}', 'INSTALLED_VISION ${VISION}', 'PATH /opt/rocm/bin:$PATH', 'PATH /opt/rocm/hcc/bin:$PATH', 'PATH /opt/rocm/hip/bin:$PATH', 'PATH /opt/rocm/opencl/bin:$PATH', 'PATH /opt/rocm/llvm/bin:$PATH', 'MAGMA_HOME /opt/rocm/magma', 'LANG C.UTF-8', 'LC_ALL C.UTF-8', 'PATH /opt/cache/bin:$PATH', 'BUILD_ENVIRONMENT ${BUILD_ENVIRONMENT}']"
pytorch/pytorch,latest,/.circleci/docker/ubuntu-rocm/Dockerfile,ADD,12,"['./common/install_base.sh install_base.sh', './common/install_clang.sh install_clang.sh', './common/install_user.sh install_user.sh', './common/install_conda.sh install_conda.sh', './common/install_gcc.sh install_gcc.sh', './common/install_protobuf.sh install_protobuf.sh', './common/install_db.sh install_db.sh', './common/install_vision.sh install_vision.sh', './common/install_rocm.sh install_rocm.sh', './common/install_cmake.sh install_cmake.sh', './common/install_ninja.sh install_ninja.sh', './common/install_cache.sh install_cache.sh']"
pytorch/pytorch,latest,/.circleci/docker/ubuntu-rocm/Dockerfile,RUN,18,"['bash ./install_base.sh && rm install_base.sh', 'bash ./install_clang.sh && rm install_clang.sh', 'bash ./install_user.sh && rm install_user.sh', 'bash ./install_conda.sh && rm install_conda.sh', 'bash ./install_gcc.sh && rm install_gcc.sh', 'if [ -n ""${PROTOBUF}"" ]; then bash ./install_protobuf.sh; fi', 'rm install_protobuf.sh', 'if [ -n ""${DB}"" ]; then bash ./install_db.sh; fi', 'rm install_db.sh', 'if [ -n ""${VISION}"" ]; then bash ./install_vision.sh; fi', 'rm install_vision.sh', 'bash ./install_rocm.sh', 'rm install_rocm.sh', 'if [ -n ""${CMAKE_VERSION}"" ]; then bash ./install_cmake.sh; fi', 'rm install_cmake.sh', 'if [ -n ""${NINJA_VERSION}"" ]; then bash ./install_ninja.sh; fi', 'rm install_ninja.sh', 'bash ./install_cache.sh && rm install_cache.sh']"
pytorch/pytorch,latest,/.circleci/docker/ubuntu-rocm/Dockerfile,USER,1,['jenkins']
pytorch/pytorch,latest,/.circleci/docker/ubuntu-rocm/Dockerfile,CMD,1,"['[""bash""]']"
pytorch/pytorch,latest,/.circleci/docker/ubuntu-cuda/Dockerfile,ARG,19,"['UBUNTU_VERSION', 'CUDA_VERSION', 'CUDNN_VERSION', 'IMAGE_NAME', 'UBUNTU_VERSION', 'CUDA_VERSION', 'CUDNN_VERSION', 'EC2', 'KATEX', 'ANACONDA_PYTHON_VERSION', 'GCC_VERSION', 'CLANG_VERSION', 'PROTOBUF', 'DB', 'VISION', 'TENSORRT_VERSION', 'CMAKE_VERSION', 'BUILD_ENVIRONMENT', 'INSTALL_CUDNN']"
pytorch/pytorch,latest,/.circleci/docker/ubuntu-cuda/Dockerfile,FROM,1,['${IMAGE_NAME}']
pytorch/pytorch,latest,/.circleci/docker/ubuntu-cuda/Dockerfile,ENV,12,"['DEBIAN_FRONTEND noninteractive', 'PATH /opt/conda/bin:$PATH', 'INSTALLED_PROTOBUF ${PROTOBUF}', 'INSTALLED_DB ${DB}', 'INSTALLED_VISION ${VISION}', 'OPENSSL_ROOT_DIR /opt/openssl', 'PATH /opt/cache/bin:$PATH', 'CMAKE_CUDA_COMPILER_LAUNCHER=/opt/cache/bin/sccache', 'BUILD_ENVIRONMENT ${BUILD_ENVIRONMENT}', 'TORCH_CUDA_ARCH_LIST Maxwell', 'TORCH_NVCC_FLAGS ""-Xfatbin -compress-all""', 'CUDA_PATH /usr/local/cuda']"
pytorch/pytorch,latest,/.circleci/docker/ubuntu-cuda/Dockerfile,ADD,17,"['./common/install_base.sh install_base.sh', './common/install_user.sh install_user.sh', './common/install_katex.sh install_katex.sh', './common/install_conda.sh install_conda.sh', './common/install_gcc.sh install_gcc.sh', './common/install_clang.sh install_clang.sh', './common/install_protobuf.sh install_protobuf.sh', './common/install_db.sh install_db.sh', './common/install_vision.sh install_vision.sh', './common/install_openssl.sh install_openssl.sh', './common/install_tensorrt.sh install_tensorrt.sh', './common/install_cmake.sh install_cmake.sh', './common/install_cache.sh install_cache.sh', './common/install_jni.sh install_jni.sh', './java/jni.h jni.h', './common/install_openmpi.sh install_openmpi.sh', './common/install_cudnn8.sh install_cudnn8.sh']"
pytorch/pytorch,latest,/.circleci/docker/ubuntu-cuda/Dockerfile,RUN,23,"['bash ./install_base.sh && rm install_base.sh', 'bash ./install_user.sh && rm install_user.sh', 'bash ./install_katex.sh && rm install_katex.sh', 'bash ./install_conda.sh && rm install_conda.sh', 'bash ./install_gcc.sh && rm install_gcc.sh', 'bash ./install_clang.sh && rm install_clang.sh', 'if [ -n ""${PROTOBUF}"" ]; then bash ./install_protobuf.sh; fi', 'rm install_protobuf.sh', 'if [ -n ""${DB}"" ]; then bash ./install_db.sh; fi', 'rm install_db.sh', 'if [ -n ""${VISION}"" ]; then bash ./install_vision.sh; fi', 'rm install_vision.sh', 'bash ./install_openssl.sh', 'if [ -n ""${TENSORRT_VERSION}"" ]; then bash ./install_tensorrt.sh; fi', 'rm install_tensorrt.sh', 'if [ -n ""${CMAKE_VERSION}"" ]; then bash ./install_cmake.sh; fi', 'rm install_cmake.sh', 'bash ./install_cache.sh && rm install_cache.sh', 'bash ./install_jni.sh && rm install_jni.sh', 'if [ -n ""${CUDA_VERSION}"" ]; then bash install_openmpi.sh; fi', 'rm install_openmpi.sh', 'if [ -n ""${INSTALL_CUDNN}"" ]; then bash install_cudnn8.sh; fi', 'rm install_cudnn8.sh']"
pytorch/pytorch,latest,/.circleci/docker/ubuntu-cuda/Dockerfile,COPY,1,['--from=pytorch/llvm:9.0.1 /opt/llvm /opt/llvm']
pytorch/pytorch,latest,/.circleci/docker/ubuntu-cuda/Dockerfile,USER,1,['jenkins']
pytorch/pytorch,latest,/.circleci/docker/ubuntu-cuda/Dockerfile,CMD,1,"['[""bash""]']"
pytorch/pytorch,latest,/.circleci/docker/ubuntu/Dockerfile,ARG,20,"['UBUNTU_VERSION', 'UBUNTU_VERSION', 'EC2', 'LLVMDEV', 'CLANG_VERSION', 'THRIFT', 'KATEX', 'ANACONDA_PYTHON_VERSION', 'GCC_VERSION', 'PROTOBUF', 'DB', 'VISION', 'ANDROID', 'ANDROID_NDK', 'GRADLE_VERSION', 'VULKAN_SDK_VERSION', 'SWIFTSHADER', 'CMAKE_VERSION', 'NINJA_VERSION', 'BUILD_ENVIRONMENT']"
pytorch/pytorch,latest,/.circleci/docker/ubuntu/Dockerfile,FROM,1,['ubuntu:${UBUNTU_VERSION}']
pytorch/pytorch,latest,/.circleci/docker/ubuntu/Dockerfile,ENV,10,"['DEBIAN_FRONTEND noninteractive', 'INSTALLED_THRIFT ${THRIFT}', 'PATH /opt/conda/bin:$PATH', 'INSTALLED_PROTOBUF ${PROTOBUF}', 'INSTALLED_DB ${DB}', 'INSTALLED_VISION ${VISION}', 'INSTALLED_ANDROID ${ANDROID}', 'OPENSSL_ROOT_DIR /opt/openssl', 'PATH /opt/cache/bin:$PATH', 'BUILD_ENVIRONMENT ${BUILD_ENVIRONMENT}']"
pytorch/pytorch,latest,/.circleci/docker/ubuntu/Dockerfile,ADD,22,"['./common/install_base.sh install_base.sh', './common/install_clang.sh install_clang.sh', './common/install_thrift.sh install_thrift.sh', './common/install_user.sh install_user.sh', './common/install_katex.sh install_katex.sh', './common/install_conda.sh install_conda.sh', './common/install_gcc.sh install_gcc.sh', './common/install_lcov.sh install_lcov.sh', './common/install_protobuf.sh install_protobuf.sh', './common/install_db.sh install_db.sh', './common/install_vision.sh install_vision.sh', './common/install_android.sh install_android.sh', './android/AndroidManifest.xml AndroidManifest.xml', './android/build.gradle build.gradle', './common/install_vulkan_sdk.sh install_vulkan_sdk.sh', './common/install_swiftshader.sh install_swiftshader.sh', './common/install_cmake.sh install_cmake.sh', './common/install_ninja.sh install_ninja.sh', './common/install_openssl.sh install_openssl.sh', './common/install_cache.sh install_cache.sh', './common/install_jni.sh install_jni.sh', './java/jni.h jni.h']"
pytorch/pytorch,latest,/.circleci/docker/ubuntu/Dockerfile,RUN,30,"['bash ./install_base.sh && rm install_base.sh', 'bash ./install_clang.sh && rm install_clang.sh', 'if [ -n ""${THRIFT}"" ]; then bash ./install_thrift.sh; fi', 'rm install_thrift.sh', 'bash ./install_user.sh && rm install_user.sh', 'bash ./install_katex.sh && rm install_katex.sh', 'bash ./install_conda.sh && rm install_conda.sh', 'bash ./install_gcc.sh && rm install_gcc.sh', 'bash ./install_lcov.sh && rm install_lcov.sh', 'if [ -n ""${PROTOBUF}"" ]; then bash ./install_protobuf.sh; fi', 'rm install_protobuf.sh', 'if [ -n ""${DB}"" ]; then bash ./install_db.sh; fi', 'rm install_db.sh', 'if [ -n ""${VISION}"" ]; then bash ./install_vision.sh; fi', 'rm install_vision.sh', 'if [ -n ""${ANDROID}"" ]; then bash ./install_android.sh; fi', 'rm install_android.sh', 'rm AndroidManifest.xml', 'rm build.gradle', 'if [ -n ""${VULKAN_SDK_VERSION}"" ]; then bash ./install_vulkan_sdk.sh; fi', 'rm install_vulkan_sdk.sh', 'if [ -n ""${SWIFTSHADER}"" ]; then bash ./install_swiftshader.sh; fi', 'rm install_swiftshader.sh', 'if [ -n ""${CMAKE_VERSION}"" ]; then bash ./install_cmake.sh; fi', 'rm install_cmake.sh', 'if [ -n ""${NINJA_VERSION}"" ]; then bash ./install_ninja.sh; fi', 'rm install_ninja.sh', 'bash ./install_openssl.sh', 'bash ./install_cache.sh && rm install_cache.sh', 'bash ./install_jni.sh && rm install_jni.sh']"
pytorch/pytorch,latest,/.circleci/docker/ubuntu/Dockerfile,COPY,1,['--from=pytorch/llvm:9.0.1 /opt/llvm /opt/llvm']
pytorch/pytorch,latest,/.circleci/docker/ubuntu/Dockerfile,USER,1,['jenkins']
pytorch/pytorch,latest,/.circleci/docker/ubuntu/Dockerfile,CMD,1,"['[""bash""]']"
ageitgey/face_recognition,latest,/Dockerfile.gpu,FROM,1,['nvidia/cuda:9.0-cudnn7-devel']
ageitgey/face_recognition,latest,/Dockerfile.gpu,RUN,13,"['apt update -y; apt install -y git cmake libsm6 libxext6 libxrender-dev python3 python3-pip', 'pip3 install scikit-build', 'apt install -y software-properties-common', 'add-apt-repository ppa:ubuntu-toolchain-r/test', 'apt update -y; apt install -y gcc-6 g++-6', 'update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-6 50', 'update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-6 50', ""git clone -b 'v19.16' --single-branch https://github.com/davisking/dlib.git"", 'mkdir -p /dlib/build', 'cmake -H/dlib -B/dlib/build -DDLIB_USE_CUDA=1 -DUSE_AVX_INSTRUCTIONS=1', 'cmake --build /dlib/build', 'cd /dlib; python3 /dlib/setup.py install', 'pip3 install face_recognition']"
ageitgey/face_recognition,latest,/Dockerfile,FROM,1,['python:3.6-slim-stretch']
ageitgey/face_recognition,latest,/Dockerfile,RUN,4,"['apt-get -y update', 'apt-get install -y --fix-missing     build-essential     cmake     gfortran     git     wget     curl     graphicsmagick     libgraphicsmagick1-dev     libatlas-base-dev     libavcodec-dev     libavformat-dev     libgtk2.0-dev     libjpeg-dev     liblapack-dev     libswscale-dev     pkg-config     python3-dev     python3-numpy     software-properties-common     zip     && apt-get clean && rm -rf /tmp/* /var/tmp/*', ""cd ~ &&     mkdir -p dlib &&     git clone -b 'v19.9' --single-branch https://github.com/davisking/dlib.git dlib/ &&     cd  dlib/ &&     python3 setup.py install --yes USE_AVX_INSTRUCTIONS"", 'cd /root/face_recognition &&     pip3 install -r requirements.txt &&     python3 setup.py install']"
ageitgey/face_recognition,latest,/Dockerfile,COPY,1,['. /root/face_recognition']
ageitgey/face_recognition,latest,/Dockerfile,CMD,1,['cd /root/face_recognition/examples &&     python3 recognize_faces_in_pictures.py']
ageitgey/face_recognition,latest,/docker/Dockerfile-python-example,FROM,1,['animcogn/face_recognition:cpu']
ageitgey/face_recognition,latest,/docker/Dockerfile-python-example,COPY,1,['. /root/face_recognition']
ageitgey/face_recognition,latest,/docker/Dockerfile-python-example,RUN,1,['cd /root/face_recognition &&     pip3 install -r requirements.txt &&     python3 setup.py install']
ageitgey/face_recognition,latest,/docker/Dockerfile-python-example,CMD,1,['cd /root/face_recognition/examples &&     python3 recognize_faces_in_pictures.py']
ageitgey/face_recognition,latest,/docker/gpu-jupyter-kubeflow/Dockerfile,FROM,1,['animcogn/face_recognition:gpu']
ageitgey/face_recognition,latest,/docker/gpu-jupyter-kubeflow/Dockerfile,RUN,2,"['useradd -ms /bin/bash jovyan &&     chown -R jovyan:jovyan /opt/venv &&     echo \'PATH=""/opt/venv/bin:$PATH""\' >> /home/jovyan/.bashrc', 'pip3 install jupyterlab']"
ageitgey/face_recognition,latest,/docker/gpu-jupyter-kubeflow/Dockerfile,USER,1,['jovyan']
ageitgey/face_recognition,latest,/docker/gpu-jupyter-kubeflow/Dockerfile,ENV,2,"['PATH=""/opt/venv/bin:$PATH""', 'NB_PREFIX /']"
ageitgey/face_recognition,latest,/docker/gpu-jupyter-kubeflow/Dockerfile,CMD,1,"['[""sh"", ""-c"", ""jupyter lab --notebook-dir=/home/jovyan --ip=0.0.0.0 --no-browser --allow-root --port=8888 --NotebookApp.token=\'\' --NotebookApp.password=\'\' --NotebookApp.allow_origin=\'*\' --NotebookApp.base_url=${NB_PREFIX}""]']"
ageitgey/face_recognition,latest,/docker/gpu/Dockerfile,FROM,2,"['nvidia/cuda:11.2.0-cudnn8-devel AS compile', 'nvidia/cuda:11.2.0-cudnn8-runtime']"
ageitgey/face_recognition,latest,/docker/gpu/Dockerfile,ENV,5,"['DEBIAN_FRONTEND=noninteractive', 'VIRTUAL_ENV=/opt/venv', 'PATH=""$VIRTUAL_ENV/bin:$PATH""', 'CFLAGS=-static', 'PATH=""/opt/venv/bin:$PATH""']"
ageitgey/face_recognition,latest,/docker/gpu/Dockerfile,RUN,6,"['apt-get update -y && apt-get install -y     git     cmake     libsm6     libxext6     libxrender-dev     python3     python3-pip     python3-venv     python3-dev     python3-numpy     gcc     build-essential     gfortran     wget     curl     graphicsmagick     libgraphicsmagick1-dev     libatlas-base-dev     libavcodec-dev     libavformat-dev     libgtk2.0-dev     libjpeg-dev     liblapack-dev     libswscale-dev     pkg-config     software-properties-common     zip     && apt-get clean && rm -rf /tmp/* /var/tmp/*', 'python3 -m venv $VIRTUAL_ENV', 'pip3 install --upgrade pip &&     pip3 install scikit-build', ""git clone -b 'v19.21' --single-branch https://github.com/davisking/dlib.git dlib/ &&     mkdir -p /dlib/build &&     cmake -H/dlib -B/dlib/build -DDLIB_USE_CUDA=1 -DUSE_AVX_INSTRUCTIONS=1 &&     cmake --build /dlib/build &&     cd /dlib &&     python3 /dlib/setup.py install --set BUILD_SHARED_LIBS=OFF"", 'pip3 install face_recognition', 'apt-get update && apt-get install -y     python3     python3-distutils']"
ageitgey/face_recognition,latest,/docker/gpu/Dockerfile,COPY,3,"['--from=compile /opt/venv /opt/venv', '--from=compile     /lib/x86_64-linux-gnu/libpthread.so.0     /lib/x86_64-linux-gnu/libdl.so.2     /lib/x86_64-linux-gnu/librt.so.1     /lib/x86_64-linux-gnu/libX11.so.6     /lib/x86_64-linux-gnu/libpng16.so.16     /lib/x86_64-linux-gnu/libjpeg.so.8     /lib/x86_64-linux-gnu/libcudnn.so.8     /lib/x86_64-linux-gnu/libstdc++.so.6     /lib/x86_64-linux-gnu/libm.so.6     /lib/x86_64-linux-gnu/libgcc_s.so.1     /lib/x86_64-linux-gnu/libc.so.6     /lib/x86_64-linux-gnu/libxcb.so.1     /lib/x86_64-linux-gnu/libz.so.1     /lib/x86_64-linux-gnu/libXau.so.6     /lib/x86_64-linux-gnu/libXdmcp.so.6     /lib/x86_64-linux-gnu/libbsd.so.0     /lib/x86_64-linux-gnu/', '--from=compile     /usr/local/cuda/lib64/libcublas.so.11     /usr/local/cuda/lib64/libcurand.so.10     /usr/local/cuda/lib64/libcusolver.so.11     /usr/local/cuda/lib64/libcublasLt.so.11     /usr/local/cuda/lib64/']"
ageitgey/face_recognition,latest,/docker/cpu/Dockerfile,FROM,2,"['python:3.8-slim-buster AS compile', 'python:3.8-slim-buster']"
ageitgey/face_recognition,latest,/docker/cpu/Dockerfile,RUN,4,"['apt-get -y update && apt-get install -y --fix-missing     build-essential     cmake     gfortran     git     wget     curl     graphicsmagick     libgraphicsmagick1-dev     libatlas-base-dev     libavcodec-dev     libavformat-dev     libgtk2.0-dev     libjpeg-dev     liblapack-dev     libswscale-dev     pkg-config     python3-dev     python3-numpy     software-properties-common     zip     && apt-get clean && rm -rf /tmp/* /var/tmp/*', 'python3 -m venv $VIRTUAL_ENV', ""pip3 install --upgrade pip &&     git clone -b 'v19.21' --single-branch https://github.com/davisking/dlib.git &&     cd dlib/ &&     python3 setup.py install --set BUILD_SHARED_LIBS=OFF"", 'pip3 install face_recognition']"
ageitgey/face_recognition,latest,/docker/cpu/Dockerfile,ENV,4,"['VIRTUAL_ENV=/opt/venv', 'PATH=""$VIRTUAL_ENV/bin:$PATH""', 'CFLAGS=-static', 'PATH=""/opt/venv/bin:$PATH""']"
ageitgey/face_recognition,latest,/docker/cpu/Dockerfile,COPY,3,"['--from=compile /opt/venv /opt/venv', '--from=compile     /lib/x86_64-linux-gnu/libpthread.so.0     /lib/x86_64-linux-gnu/libz.so.1     /lib/x86_64-linux-gnu/libm.so.6     /lib/x86_64-linux-gnu/libgcc_s.so.1     /lib/x86_64-linux-gnu/libc.so.6     /lib/x86_64-linux-gnu/libdl.so.2     /lib/x86_64-linux-gnu/librt.so.1     /lib/x86_64-linux-gnu/', '--from=compile     /usr/lib/x86_64-linux-gnu/libX11.so.6     /usr/lib/x86_64-linux-gnu/libXext.so.6     /usr/lib/x86_64-linux-gnu/libpng16.so.16     /usr/lib/x86_64-linux-gnu/libjpeg.so.62     /usr/lib/x86_64-linux-gnu/libstdc++.so.6     /usr/lib/x86_64-linux-gnu/libxcb.so.1     /usr/lib/x86_64-linux-gnu/libXau.so.6     /usr/lib/x86_64-linux-gnu/libXdmcp.so.6     /usr/lib/x86_64-linux-gnu/libbsd.so.0     /usr/lib/x86_64-linux-gnu/']"
ageitgey/face_recognition,latest,/docker/cpu-jupyter-kubeflow/Dockerfile,FROM,1,['animcogn/face_recognition:cpu']
ageitgey/face_recognition,latest,/docker/cpu-jupyter-kubeflow/Dockerfile,RUN,2,"['useradd -ms /bin/bash jovyan &&     chown -R jovyan:jovyan /opt/venv &&     echo \'PATH=""/opt/venv/bin:$PATH""\' >> /home/jovyan/.bashrc', 'pip3 install jupyterlab']"
ageitgey/face_recognition,latest,/docker/cpu-jupyter-kubeflow/Dockerfile,USER,1,['jovyan']
ageitgey/face_recognition,latest,/docker/cpu-jupyter-kubeflow/Dockerfile,ENV,2,"['PATH=""/opt/venv/bin:$PATH""', 'NB_PREFIX /']"
ageitgey/face_recognition,latest,/docker/cpu-jupyter-kubeflow/Dockerfile,CMD,1,"['[""sh"", ""-c"", ""jupyter lab --notebook-dir=/home/jovyan --ip=0.0.0.0 --no-browser --allow-root --port=8888 --NotebookApp.token=\'\' --NotebookApp.password=\'\' --NotebookApp.allow_origin=\'*\' --NotebookApp.base_url=${NB_PREFIX}""]']"
PaddlePaddle/Paddle,latest,/tools/dockerfile/Dockerfile.ipu,FROM,1,['graphcore/poplar:latest']
PaddlePaddle/Paddle,latest,/tools/dockerfile/Dockerfile.ipu,MAINTAINER,1,['PaddlePaddle Authors <paddle-dev@baidu.com>']
PaddlePaddle/Paddle,latest,/tools/dockerfile/Dockerfile.ipu,ARG,2,"['WITH_AVX', 'CONDA_FILE=Miniconda3-py37_4.9.2-Linux-x86_64.sh']"
PaddlePaddle/Paddle,latest,/tools/dockerfile/Dockerfile.ipu,ENV,7,"['HOME /root', 'WITH_AVX=${WITH_AVX:-ON}', 'PATH=/usr/local/gcc-8.2/bin:$PATH', 'PATH=/home/cmake-3.16.0-Linux-x86_64/bin:$PATH', 'PATH=/opt/conda/bin:${PATH}', 'GOROOT=/usr/local/go GOPATH=/root/gopath', 'PATH=${PATH}:${GOROOT}/bin:${GOPATH}/bin']"
PaddlePaddle/Paddle,latest,/tools/dockerfile/Dockerfile.ipu,COPY,2,"['paddle/scripts/docker/root/ /root/', 'tools/dockerfile/build_scripts /build_scripts']"
PaddlePaddle/Paddle,latest,/tools/dockerfile/Dockerfile.ipu,RUN,29,"['apt-get update && apt-get install -y apt-utils', 'ln -snf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime', 'apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends tzdata', 'apt-get update && apt-get install -y software-properties-common && add-apt-repository ppa:deadsnakes/ppa && add-apt-repository ppa:ubuntu-toolchain-r/test', 'apt-get update && apt-get install -y curl wget vim git unzip unrar tar xz-utils libssl-dev bzip2 gzip make libgcc-s1 sudo openssh-server             coreutils ntp language-pack-zh-hans python-qt4 libsm6 libxext6 libxrender-dev libgl1-mesa-glx libsqlite3-dev libopenblas-dev             bison graphviz libjpeg-dev zlib1g zlib1g-dev automake locales swig net-tools libtool module-init-tools numactl libnuma-dev             openssl libffi-dev pciutils libblas-dev gfortran libblas3 liblapack-dev liblapack3 default-jre screen tmux gdb lldb gcc g++', 'apt-get update && apt-get install -y rdma-core librdmacm1', 'bash /build_scripts/install_gcc.sh gcc82 && rm -rf /build_scripts', 'cp gcc gcc.bak && cp g++ g++.bak && rm gcc && rm g++', 'ln -s /usr/local/gcc-8.2/bin/gcc /usr/local/bin/gcc', 'ln -s /usr/local/gcc-8.2/bin/g++ /usr/local/bin/g++', 'ln -s /usr/local/gcc-8.2/bin/gcc /usr/bin/gcc', 'ln -s /usr/local/gcc-8.2/bin/g++ /usr/bin/g++', 'wget -q https://cmake.org/files/v3.16/cmake-3.16.0-Linux-x86_64.tar.gz && tar -zxvf cmake-3.16.0-Linux-x86_64.tar.gz && rm cmake-3.16.0-Linux-x86_64.tar.gz', 'cd /opt && wget -q https://repo.anaconda.com/miniconda/${CONDA_FILE} && chmod +x ${CONDA_FILE}', 'mkdir /opt/conda && ./${CONDA_FILE} -b -f -p ""/opt/conda"" && rm -rf ${CONDA_FILE}', 'conda init bash && conda install -n base jupyter jupyterlab', 'wget -qO- https://paddle-ci.cdn.bcebos.com/go1.8.1.linux-amd64.tar.gz |     tar -xz -C /usr/local &&     mkdir /root/gopath &&     mkdir /root/gopath/bin &&     mkdir /root/gopath/src', 'curl -s -q https://glide.sh/get | sh', 'git config --global credential.helper store', 'localedef -i en_US -f UTF-8 en_US.UTF-8', '/opt/conda/bin/pip install pre-commit pylint pytest astroid isort protocol PyGithub', 'wget https://raw.githubusercontent.com/PaddlePaddle/Paddle/develop/python/requirements.txt -O /root/requirements.txt', '/opt/conda/bin/pip install -r /root/requirements.txt &&     rm -rf /root/requirements.txt', 'wget https://raw.githubusercontent.com/PaddlePaddle/Paddle/develop/python/unittest_py/requirements.txt -O /root/requirements.txt', '/opt/conda/bin/pip install -r /root/requirements.txt && rm -rf /root/requirements.txt', 'wget -q https://paddle-ci.cdn.bcebos.com/patchelf_0.10-2_amd64.deb &&     dpkg -i patchelf_0.10-2_amd64.deb', 'wget https://paddle-ci.gz.bcebos.com/ccache-3.7.9.tar.gz &&     tar xf ccache-3.7.9.tar.gz && mkdir /usr/local/ccache-3.7.9 && cd ccache-3.7.9 &&     ./configure -prefix=/usr/local/ccache-3.7.9 &&     make -j8 && make install &&     ln -s /usr/local/ccache-3.7.9/bin/ccache /usr/local/bin/ccache', 'wget https://paddle-ci.cdn.bcebos.com/clang+llvm-3.8.0-x86_64-linux-gnu-ubuntu-16.04.tar.xz &&     tar xf clang+llvm-3.8.0-x86_64-linux-gnu-ubuntu-16.04.tar.xz && cd clang+llvm-3.8.0-x86_64-linux-gnu-ubuntu-16.04 &&     cp -r * /usr/local && cd .. && rm -rf clang+llvm-3.8.0-x86_64-linux-gnu-ubuntu-16.04 && rm -rf clang+llvm-3.8.0-x86_64-linux-gnu-ubuntu-16.04.tar.xz', 'apt-get clean -y']"
PaddlePaddle/Paddle,latest,/tools/dockerfile/Dockerfile.ipu,WORKDIR,3,"['/usr/bin', '/home', '/opt']"
PaddlePaddle/Paddle,latest,/tools/dockerfile/Dockerfile.ipu,EXPOSE,1,['22']
PaddlePaddle/Paddle,latest,/tools/dockerfile/Dockerfile.ubuntu18,FROM,1,['nvidia/cuda:<baseimg>']
PaddlePaddle/Paddle,latest,/tools/dockerfile/Dockerfile.ubuntu18,MAINTAINER,1,['PaddlePaddle Authors <paddle-dev@baidu.com>']
PaddlePaddle/Paddle,latest,/tools/dockerfile/Dockerfile.ubuntu18,ARG,2,"['WITH_GPU', 'WITH_AVX']"
PaddlePaddle/Paddle,latest,/tools/dockerfile/Dockerfile.ubuntu18,ENV,9,"['WITH_GPU=${WITH_GPU:-ON}', 'WITH_AVX=${WITH_AVX:-ON}', 'DEBIAN_FRONTEND=noninteractive', 'LD_LIBRARY_PATH=/usr/local/cuda-11.2/targets/x86_64-linux/lib:$LD_LIBRARY_PATH', 'HOME /root', 'PATH=/usr/local/gcc-8.2/bin:$PATH', 'PATH=/home/cmake-3.16.0-Linux-x86_64/bin:$PATH', 'GOROOT=/usr/local/go GOPATH=/root/gopath', 'PATH=${PATH}:${GOROOT}/bin:${GOPATH}/bin']"
PaddlePaddle/Paddle,latest,/tools/dockerfile/Dockerfile.ubuntu18,COPY,3,"['paddle/scripts/docker/root/ /root/', 'tools/dockerfile/build_scripts /build_scripts', './python/requirements.txt /root/']"
PaddlePaddle/Paddle,latest,/tools/dockerfile/Dockerfile.ubuntu18,RUN,29,"['apt-get update &&   apt-get install -y software-properties-common && add-apt-repository ppa:deadsnakes/ppa &&   apt-get update &&   apt-get install -y curl wget vim git unzip unrar tar xz-utils libssl-dev bzip2 gzip     coreutils ntp language-pack-zh-hans python-qt4 libsm6 libxext6 libxrender-dev libgl1-mesa-glx     bison graphviz libjpeg-dev zlib1g-dev automake locales swig net-tools libtool module-init-tools', 'bash /build_scripts/install_trt.sh', 'bash /build_scripts/install_gcc.sh gcc82 && rm -rf /build_scripts', 'cp gcc gcc.bak && cp g++ g++.bak && rm gcc && rm g++', 'ln -s /usr/local/gcc-8.2/bin/gcc /usr/local/bin/gcc', 'ln -s /usr/local/gcc-8.2/bin/g++ /usr/local/bin/g++', 'ln -s /usr/local/gcc-8.2/bin/gcc /usr/bin/gcc', 'ln -s /usr/local/gcc-8.2/bin/g++ /usr/bin/g++', 'wget -q https://cmake.org/files/v3.16/cmake-3.16.0-Linux-x86_64.tar.gz && tar -zxvf cmake-3.16.0-Linux-x86_64.tar.gz && rm cmake-3.16.0-Linux-x86_64.tar.gz', 'apt-get update &&   apt-get install -y python2.7 python2.7-dev   python3.6 python3.6-dev   python3.7 python3.7-dev   python3.8 python3.8-dev python3.8-distutils   python3.9 python3.9-dev python3.9-distutils &&   rm /usr/bin/python && ln -s /usr/bin/python2.7 /usr/bin/python &&   rm /usr/bin/python3 && ln -s /usr/bin/python3.7 /usr/bin/python3', 'wget https://files.pythonhosted.org/packages/a7/e0/30642b9c2df516506d40b563b0cbd080c49c6b3f11a70b4c7a670f13a78b/setuptools-50.3.2.zip && apt-get -y install unzip && unzip setuptools-50.3.2.zip', 'python3.9 setup.py build && python3.9 setup.py install &&   python3.8 setup.py build && python3.8 setup.py install &&   python3.7 setup.py build && python3.7 setup.py install &&   python3.6 setup.py build && python3.6 setup.py install', 'wget https://files.pythonhosted.org/packages/b0/d1/8acb42f391cba52e35b131e442e80deffbb8d0676b93261d761b1f0ef8fb/setuptools-40.6.2.zip && apt-get -y install unzip && unzip setuptools-40.6.2.zip', 'python setup.py build && python setup.py install', 'wget https://files.pythonhosted.org/packages/28/af/2c76c8aa46ccdf7578b83d97a11a2d1858794d4be4a1610ade0d30182e8b/pip-20.0.1.tar.gz && tar -zxvf pip-20.0.1.tar.gz', 'python setup.py install &&   python3.9 setup.py install &&   python3.8 setup.py install &&   python3.7 setup.py install &&   python3.6 setup.py install', 'rm setuptools-40.6.2.zip setuptools-50.3.2.zip pip-20.0.1.tar.gz &&     rm -r setuptools-40.6.2 setuptools-50.3.2 pip-20.0.1', 'rm /usr/local/bin/pip && ln -s /usr/local/bin/pip2.7 /usr/local/bin/pip &&   rm /usr/local/bin/pip3 && ln -s /usr/local/bin/pip3.7 /usr/local/bin/pip3', 'wget -q https://ftp.gnu.org/gnu/binutils/binutils-2.33.1.tar.gz &&     tar -xzf binutils-2.33.1.tar.gz &&     cd binutils-2.33.1 &&     ./configure && make -j && make install && cd .. && rm -rf binutils-2.33.1 binutils-2.33.1.tar.gz', 'wget -qO- https://paddle-ci.cdn.bcebos.com/go1.8.1.linux-amd64.tar.gz |     tar -xz -C /usr/local &&     mkdir /root/gopath &&     mkdir /root/gopath/bin &&     mkdir /root/gopath/src', 'curl -s -q https://glide.sh/get | sh', 'git config --global credential.helper store', 'localedef -i en_US -f UTF-8 en_US.UTF-8', 'pip3.6 --no-cache-dir install pre-commit==1.10.4 ipython==5.3.0 &&     pip3.6 --no-cache-dir install ipykernel==4.6.0 wheel &&     pip3.7 --no-cache-dir install pre-commit==1.10.4 ipython==5.3.0 &&     pip3.7 --no-cache-dir install ipykernel==4.6.0 wheel &&     pip3.8 --no-cache-dir install pre-commit==1.10.4 ipython==5.3.0 &&     pip3.8 --no-cache-dir install ipykernel==4.6.0 wheel &&     pip3.9 --no-cache-dir install pre-commit==1.10.4 ipython==5.3.0 &&     pip3.9 --no-cache-dir install ipykernel==4.6.0 wheel &&     pip --no-cache-dir install pre-commit==1.10.4 ipython==5.3.0 &&     pip --no-cache-dir install ipykernel==4.6.0 wheel', 'pip3.6 --no-cache-dir install pylint pytest astroid isort &&     pip3.7 --no-cache-dir install pylint pytest astroid isort &&     pip3.8 --no-cache-dir install pylint pytest astroid isort &&     pip3.9 --no-cache-dir install pylint pytest astroid isort &&     pip --no-cache-dir install pylint pytest astroid isort', 'pip3.6 --no-cache-dir install -r /root/requirements.txt &&     pip3.7 --no-cache-dir install -r /root/requirements.txt &&     pip3.8 --no-cache-dir install -r /root/requirements.txt &&     pip3.9 --no-cache-dir install -r /root/requirements.txt &&     pip --no-cache-dir install -r /root/requirements.txt', 'wget -q https://paddle-ci.cdn.bcebos.com/patchelf_0.10-2_amd64.deb &&     dpkg -i patchelf_0.10-2_amd64.deb', 'wget https://paddle-ci.gz.bcebos.com/ccache-3.7.9.tar.gz &&     tar xf ccache-3.7.9.tar.gz && mkdir /usr/local/ccache-3.7.9 && cd ccache-3.7.9 &&     ./configure -prefix=/usr/local/ccache-3.7.9 &&     make -j8 && make install &&     ln -s /usr/local/ccache-3.7.9/bin/ccache /usr/local/bin/ccache', 'wget https://paddle-ci.cdn.bcebos.com/clang+llvm-3.8.0-x86_64-linux-gnu-ubuntu-16.04.tar.xz &&     tar xf clang+llvm-3.8.0-x86_64-linux-gnu-ubuntu-16.04.tar.xz && cd clang+llvm-3.8.0-x86_64-linux-gnu-ubuntu-16.04 &&     cp -r * /usr/local && cd .. && rm -rf clang+llvm-3.8.0-x86_64-linux-gnu-ubuntu-16.04 && rm -rf clang+llvm-3.8.0-x86_64-linux-gnu-ubuntu-16.04.tar.xz']"
PaddlePaddle/Paddle,latest,/tools/dockerfile/Dockerfile.ubuntu18,WORKDIR,9,"['/usr/bin', '/home', '/home', '/home/setuptools-50.3.2', '/home', '/home/setuptools-40.6.2', '/home', 'pip-20.0.1', '/home']"
PaddlePaddle/Paddle,latest,/tools/dockerfile/Dockerfile.ubuntu18,EXPOSE,1,['22']
PaddlePaddle/Paddle,latest,/tools/dockerfile/Dockerfile.release18,FROM,1,['nvidia/cuda:<baseimg>']
PaddlePaddle/Paddle,latest,/tools/dockerfile/Dockerfile.release18,MAINTAINER,1,['PaddlePaddle Authors <paddle-dev@baidu.com>']
PaddlePaddle/Paddle,latest,/tools/dockerfile/Dockerfile.release18,ARG,2,"['WITH_GPU', 'WITH_AVX']"
PaddlePaddle/Paddle,latest,/tools/dockerfile/Dockerfile.release18,ENV,9,"['WITH_GPU=${WITH_GPU:-ON}', 'WITH_AVX=${WITH_AVX:-ON}', 'DEBIAN_FRONTEND=noninteractive', 'LD_LIBRARY_PATH=/usr/local/cuda-11.2/targets/x86_64-linux/lib:$LD_LIBRARY_PATH', 'HOME /root', 'PATH=/usr/local/gcc-8.2/bin:$PATH', 'PATH=/home/cmake-3.16.0-Linux-x86_64/bin:$PATH', 'GOROOT=/usr/local/go GOPATH=/root/gopath', 'PATH=${PATH}:${GOROOT}/bin:${GOPATH}/bin']"
PaddlePaddle/Paddle,latest,/tools/dockerfile/Dockerfile.release18,COPY,3,"['paddle/scripts/docker/root/ /root/', 'tools/dockerfile/build_scripts /build_scripts', './python/requirements.txt /root/']"
PaddlePaddle/Paddle,latest,/tools/dockerfile/Dockerfile.release18,RUN,26,"['apt-get update &&   apt-get install -y software-properties-common && add-apt-repository ppa:deadsnakes/ppa &&   apt-get update &&   apt-get install -y curl wget vim git unzip unrar tar xz-utils libssl-dev bzip2 gzip     coreutils ntp language-pack-zh-hans python-qt4 libsm6 libxext6 libxrender-dev libgl1-mesa-glx     bison graphviz libjpeg-dev zlib1g-dev automake locales swig net-tools libtool module-init-tools', 'bash /build_scripts/install_gcc.sh gcc82 && rm -rf /build_scripts', 'cp gcc gcc.bak && cp g++ g++.bak && rm gcc && rm g++', 'ln -s /usr/local/gcc-8.2/bin/gcc /usr/local/bin/gcc', 'ln -s /usr/local/gcc-8.2/bin/g++ /usr/local/bin/g++', 'ln -s /usr/local/gcc-8.2/bin/gcc /usr/bin/gcc', 'ln -s /usr/local/gcc-8.2/bin/g++ /usr/bin/g++', 'wget -q https://cmake.org/files/v3.16/cmake-3.16.0-Linux-x86_64.tar.gz && tar -zxvf cmake-3.16.0-Linux-x86_64.tar.gz && rm cmake-3.16.0-Linux-x86_64.tar.gz', 'apt-get update &&   apt-get install -y python3.7 python3.7-dev &&   mv /usr/bin/python /usr/bin/python.bak && ln -s /usr/bin/python3.7 /usr/bin/python &&   mv /usr/bin/python3 /usr/bin/python3.bak && ln -s /usr/bin/python3.7 /usr/bin/python3', 'wget https://files.pythonhosted.org/packages/a7/e0/30642b9c2df516506d40b563b0cbd080c49c6b3f11a70b4c7a670f13a78b/setuptools-50.3.2.zip && apt-get -y install unzip && unzip setuptools-50.3.2.zip', 'python3.7 setup.py build && python3.7 setup.py install', 'wget https://files.pythonhosted.org/packages/28/af/2c76c8aa46ccdf7578b83d97a11a2d1858794d4be4a1610ade0d30182e8b/pip-20.0.1.tar.gz && tar -zxvf pip-20.0.1.tar.gz', 'python3.7 setup.py install', 'rm setuptools-50.3.2.zip pip-20.0.1.tar.gz &&     rm -r setuptools-50.3.2 pip-20.0.1', 'rm /usr/local/bin/pip && ln -s /usr/local/bin/pip3.7 /usr/local/bin/pip &&   rm /usr/local/bin/pip3 && ln -s /usr/local/bin/pip3.7 /usr/local/bin/pip3', 'wget -q https://ftp.gnu.org/gnu/binutils/binutils-2.33.1.tar.gz &&     tar -xzf binutils-2.33.1.tar.gz &&     cd binutils-2.33.1 &&     ./configure && make -j && make install && cd .. && rm -rf binutils-2.33.1 binutils-2.33.1.tar.gz', 'wget -qO- https://paddle-ci.cdn.bcebos.com/go1.8.1.linux-amd64.tar.gz |     tar -xz -C /usr/local &&     mkdir /root/gopath &&     mkdir /root/gopath/bin &&     mkdir /root/gopath/src', 'curl -s -q https://glide.sh/get | sh', 'git config --global credential.helper store', 'localedef -i en_US -f UTF-8 en_US.UTF-8', 'pip3.7 --no-cache-dir install pre-commit==1.10.4 ipython==5.3.0 &&     pip3.7 --no-cache-dir install ipykernel==4.6.0 wheel', 'pip3.7 --no-cache-dir install pylint pytest astroid isort', 'pip3.7 --no-cache-dir install -r /root/requirements.txt', 'wget -q https://paddle-ci.cdn.bcebos.com/patchelf_0.10-2_amd64.deb &&     dpkg -i patchelf_0.10-2_amd64.deb', 'wget https://paddle-ci.gz.bcebos.com/ccache-3.7.9.tar.gz &&     tar xf ccache-3.7.9.tar.gz && mkdir /usr/local/ccache-3.7.9 && cd ccache-3.7.9 &&     ./configure -prefix=/usr/local/ccache-3.7.9 &&     make -j8 && make install &&     ln -s /usr/local/ccache-3.7.9/bin/ccache /usr/local/bin/ccache', 'wget https://paddle-ci.cdn.bcebos.com/clang+llvm-3.8.0-x86_64-linux-gnu-ubuntu-16.04.tar.xz &&     tar xf clang+llvm-3.8.0-x86_64-linux-gnu-ubuntu-16.04.tar.xz && cd clang+llvm-3.8.0-x86_64-linux-gnu-ubuntu-16.04 &&     cp -r * /usr/local && cd .. && rm -rf clang+llvm-3.8.0-x86_64-linux-gnu-ubuntu-16.04 && rm -rf clang+llvm-3.8.0-x86_64-linux-gnu-ubuntu-16.04.tar.xz']"
PaddlePaddle/Paddle,latest,/tools/dockerfile/Dockerfile.release18,WORKDIR,7,"['/usr/bin', '/home', '/home', '/home/setuptools-50.3.2', '/home', 'pip-20.0.1', '/home']"
PaddlePaddle/Paddle,latest,/tools/dockerfile/Dockerfile.release18,EXPOSE,1,['22']
PaddlePaddle/Paddle,latest,/tools/dockerfile/Dockerfile.release16,FROM,1,['nvidia/cuda:<baseimg>']
PaddlePaddle/Paddle,latest,/tools/dockerfile/Dockerfile.release16,MAINTAINER,1,['PaddlePaddle Authors <paddle-dev@baidu.com>']
PaddlePaddle/Paddle,latest,/tools/dockerfile/Dockerfile.release16,ARG,2,"['WITH_GPU', 'WITH_AVX']"
PaddlePaddle/Paddle,latest,/tools/dockerfile/Dockerfile.release16,ENV,10,"['WITH_GPU=${WITH_GPU:-ON}', 'WITH_AVX=${WITH_AVX:-ON}', 'HOME /root', 'PATH=/home/cmake-3.16.0-Linux-x86_64/bin:$PATH', 'PATH=/usr/local/python3.7.0/include:${PATH}', 'PATH=/usr/local/python3.7.0/bin:${PATH}', 'LD_LIBRARY_PATH=/usr/local/python3.7.0/lib:${LD_LIBRARY_PATH}', 'CPLUS_INCLUDE_PATH=/usr/local/python3.7.0/include/python3.7:$CPLUS_INCLUDE_PATH', 'GOROOT=/usr/local/go GOPATH=/root/gopath', 'PATH=${PATH}:${GOROOT}/bin:${GOPATH}/bin']"
PaddlePaddle/Paddle,latest,/tools/dockerfile/Dockerfile.release16,COPY,3,"['paddle/scripts/docker/root/ /root/', 'tools/dockerfile/build_scripts /build_scripts', './python/requirements.txt /root/']"
PaddlePaddle/Paddle,latest,/tools/dockerfile/Dockerfile.release16,RUN,31,"['apt-get update &&     apt-get install -y make build-essential libssl-dev zlib1g-dev libbz2-dev     libreadline-dev libsqlite3-dev wget curl llvm libncurses5-dev libncursesw5-dev     xz-utils tk-dev libffi-dev liblzma-dev', 'apt-get update &&     apt-get install -y --allow-downgrades --allow-change-held-packages     patchelf git python-pip python-dev python-opencv openssh-server bison     wget unzip unrar tar xz-utils bzip2 gzip coreutils ntp     curl sed grep graphviz libjpeg-dev zlib1g-dev      python-matplotlib     automake locales clang-format swig      liblapack-dev liblapacke-dev     net-tools libtool module-init-tools vim &&     apt-get clean -y', 'wget https://github.com/koalaman/shellcheck/releases/download/v0.7.1/shellcheck-v0.7.1.linux.x86_64.tar.xz -O shellcheck-v0.7.1.linux.x86_64.tar.xz &&     tar -xf shellcheck-v0.7.1.linux.x86_64.tar.xz && cp  shellcheck-v0.7.1/shellcheck /usr/bin/shellcheck &&     rm -rf shellcheck-v0.7.1.linux.x86_64.tar.xz shellcheck-v0.7.1', 'wget -q https://cmake.org/files/v3.16/cmake-3.16.0-Linux-x86_64.tar.gz && tar -zxvf cmake-3.16.0-Linux-x86_64.tar.gz && rm cmake-3.16.0-Linux-x86_64.tar.gz', 'mkdir -p /root/python_build/ && wget -q https://www.sqlite.org/2018/sqlite-autoconf-3250300.tar.gz &&     tar -zxf sqlite-autoconf-3250300.tar.gz && cd sqlite-autoconf-3250300 &&     ./configure -prefix=/usr/local && make -j8 && make install && cd ../ && rm sqlite-autoconf-3250300.tar.gz &&     wget -q https://www.python.org/ftp/python/3.7.0/Python-3.7.0.tgz &&     tar -xzf Python-3.7.0.tgz && cd Python-3.7.0 &&     CFLAGS=""-Wformat"" ./configure --prefix=/usr/local/python3.7.0 --enable-shared > /dev/null &&     make -j8 > /dev/null && make altinstall > /dev/null && ldconfig', 'ln -sf /usr/local/python3.7.0/bin/python3.7 /usr/local/bin/python3 && ln -sf /usr/local/python3.7.0/bin/python3.7 /usr/bin/python3', 'mv /usr/bin/python /usr/bin/python.bak && ln -s /usr/local/python3.7.0/bin/python3.7 /usr/local/bin/python && ln -s /usr/local/python3.7.0/bin/python3.7 /usr/bin/python', 'rm -r /root/python_build', 'python3.7 -m pip uninstall -y pip setuptools', 'wget https://files.pythonhosted.org/packages/a7/e0/30642b9c2df516506d40b563b0cbd080c49c6b3f11a70b4c7a670f13a78b/setuptools-50.3.2.zip && apt-get -y install unzip && unzip setuptools-50.3.2.zip', 'python3.7 setup.py build && python3.7 setup.py install', 'wget https://files.pythonhosted.org/packages/28/af/2c76c8aa46ccdf7578b83d97a11a2d1858794d4be4a1610ade0d30182e8b/pip-20.0.1.tar.gz && tar -zxvf pip-20.0.1.tar.gz', 'python3.7 setup.py install', 'rm setuptools-50.3.2.zip pip-20.0.1.tar.gz &&     rm -r setuptools-50.3.2 pip-20.0.1', 'wget -qO- https://paddle-ci.cdn.bcebos.com/go1.8.1.linux-amd64.tar.gz |     tar -xz -C /usr/local &&     mkdir /root/gopath &&     mkdir /root/gopath/bin &&     mkdir /root/gopath/src', 'curl -s -q https://glide.sh/get | sh', 'bash /build_scripts/install_nccl2.sh', 'rm -rf /build_scripts', 'git config --global credential.helper store', 'localedef -i en_US -f UTF-8 en_US.UTF-8', 'pip3.7 --no-cache-dir install -U wheel py-cpuinfo==5.0.0 &&     pip3.7 --no-cache-dir install -U docopt PyYAML sphinx==1.5.6 &&     pip3.7 --no-cache-dir install sphinx-rtd-theme==0.1.9 recommonmark', ""pip3.7 --no-cache-dir install 'pre-commit==1.10.4' 'ipython==5.3.0' &&     pip3.7 --no-cache-dir install 'ipykernel==4.6.0' 'jupyter==1.0.0'"", 'pip3.7 --no-cache-dir install pylint pytest astroid isort', 'pip3.7 --no-cache-dir install coverage', 'pip3.7 --no-cache-dir install -r /root/requirements.txt', 'apt-get install -y libssl-dev libffi-dev && apt-get clean -y &&     pip3.7 install --upgrade pip &&     pip3.7 --no-cache-dir install certifi urllib3[secure]', 'wget -q https://launchpad.net/ubuntu/+archive/primary/+sourcefiles/binutils/2.27-9ubuntu1/binutils_2.27.orig.tar.gz &&     tar -xzf binutils_2.27.orig.tar.gz &&     cd binutils-2.27 &&     ./configure && make -j && make install && cd .. && rm -rf binutils-2.27 binutils_2.27.orig.tar.gz', 'apt-get install libprotobuf-dev -y', 'wget -q https://paddle-ci.cdn.bcebos.com/patchelf_0.10-2_amd64.deb &&     dpkg -i patchelf_0.10-2_amd64.deb', ""mkdir /var/run/sshd && echo 'root:root' | chpasswd && sed -ri 's/^PermitRootLogin\\s+.*/PermitRootLogin yes/' /etc/ssh/sshd_config && sed -ri 's/UsePAM yes/#UsePAM yes/g' /etc/ssh/sshd_config"", 'wget https://paddle-ci.gz.bcebos.com/ccache-3.7.9.tar.gz &&     tar xf ccache-3.7.9.tar.gz && mkdir /usr/local/ccache-3.7.9 && cd ccache-3.7.9 &&     ./configure -prefix=/usr/local/ccache-3.7.9 &&     make -j8 && make install &&     ln -s /usr/local/ccache-3.7.9/bin/ccache /usr/local/bin/ccache']"
PaddlePaddle/Paddle,latest,/tools/dockerfile/Dockerfile.release16,<INSTALL_GCC>,1,['']
PaddlePaddle/Paddle,latest,/tools/dockerfile/Dockerfile.release16,WORKDIR,7,"['/home', '/home', '/home/setuptools-50.3.2', '/home', 'pip-20.0.1', '/home', '/home']"
PaddlePaddle/Paddle,latest,/tools/dockerfile/Dockerfile.release16,CMD,1,['source ~/.bashrc']
PaddlePaddle/Paddle,latest,/tools/dockerfile/Dockerfile.release16,EXPOSE,1,['22']
PaddlePaddle/Paddle,latest,/tools/dockerfile/Dockerfile.centos,FROM,1,['nvidia/cuda:<baseimg>']
PaddlePaddle/Paddle,latest,/tools/dockerfile/Dockerfile.centos,MAINTAINER,1,"['Numenta, based on the ManyLinux project']"
PaddlePaddle/Paddle,latest,/tools/dockerfile/Dockerfile.centos,ENV,10,"['LC_ALL en_US.UTF-8', 'LANG en_US.UTF-8', 'LANGUAGE en_US.UTF-8', 'PATH /opt/rh/devtoolset-2/root/usr/bin:$PATH', 'LD_LIBRARY_PATH /usr/local/ssl/lib:/opt/rh/devtoolset-2/root/usr/lib64:/opt/rh/devtoolset-2/root/usr/lib:/usr/local/lib64:/usr/local/lib:${LD_LIBRARY_PATH}', 'PKG_CONFIG_PATH=/usr/local/lib/pkgconfig', 'SSL_CERT_FILE=/opt/_internal/certs.pem', 'GOROOT=/usr/local/go GOPATH=/root/gopath', 'PATH=/usr/local/ssl:${GOROOT}/bin:${GOPATH}/bin:${PATH}', 'LIBRARY_PATH=/usr/local/ssl/lib:$LIBRARY_PATH']"
PaddlePaddle/Paddle,latest,/tools/dockerfile/Dockerfile.centos,RUN,15,"['yum install -y bzip2 gettext-devel sqlite-devel zlib-devel openssl-devel pcre-devel vim tk-devel tkinter libtool xz graphviz wget curl-devel', 'bash build_scripts/build.sh', 'bash build_scripts/install_nccl2.sh', 'bash build_scripts/install_trt.sh', 'rm -rf build_scripts', 'ln -s /usr/local/ssl/include/openssl /usr/include', 'wget -q https://paddle-ci.gz.bcebos.com/git-2.17.1.tar.gz &&   tar -xvf git-2.17.1.tar.gz &&   cd git-2.17.1 &&   ./configure --with-openssl --prefix=/usr/local &&   make -j8 && make install', 'wget --no-check-certificate -qO- https://paddle-ci.gz.bcebos.com/go1.15.12.linux-amd64.tar.gz |     tar -xz -C /usr/local &&     mkdir /root/gopath &&     mkdir /root/gopath/bin &&     mkdir /root/gopath/src', 'cd /opt && wget -q --no-check-certificate https://paddle-ci.cdn.bcebos.com/protobuf-cpp-3.6.1.tar.gz &&     tar xzf protobuf-cpp-3.6.1.tar.gz &&     cd protobuf-3.6.1 && ./configure && make -j4 && make install && cd .. && rm -f protobuf-cpp-3.6.1.tar.gz', 'wget https://raw.githubusercontent.com/PaddlePaddle/Paddle/develop/python/requirements.txt -O /root/requirements.txt', 'LD_LIBRARY_PATH=/opt/_internal/cpython-3.6.0/lib/:${LD_LIBRARY_PATH} /opt/_internal/cpython-3.6.0/bin/pip3 install setuptools -U &&     LD_LIBRARY_PATH=/opt/_internal/cpython-3.7.0/lib/:${LD_LIBRARY_PATH} /opt/_internal/cpython-3.7.0/bin/pip3 install setuptools -U &&     LD_LIBRARY_PATH=/opt/_internal/cpython-3.8.0/lib/:${LD_LIBRARY_PATH} /opt/_internal/cpython-3.8.0/bin/pip3 install setuptools -U &&     LD_LIBRARY_PATH=/opt/_internal/cpython-3.9.0/lib/:${LD_LIBRARY_PATH} /opt/_internal/cpython-3.9.0/bin/pip3 install setuptools -U', 'LD_LIBRARY_PATH=/opt/_internal/cpython-3.6.0/lib/:${LD_LIBRARY_PATH} /opt/_internal/cpython-3.6.0/bin/pip3 install -r /root/requirements.txt &&     LD_LIBRARY_PATH=/opt/_internal/cpython-3.7.0/lib/:${LD_LIBRARY_PATH} /opt/_internal/cpython-3.7.0/bin/pip3 install -r /root/requirements.txt &&     LD_LIBRARY_PATH=/opt/_internal/cpython-3.8.0/lib/:${LD_LIBRARY_PATH} /opt/_internal/cpython-3.8.0/bin/pip3 install -r /root/requirements.txt &&     LD_LIBRARY_PATH=/opt/_internal/cpython-3.9.0/lib/:${LD_LIBRARY_PATH} /opt/_internal/cpython-3.9.0/bin/pip3 install -r /root/requirements.txt &&     go get github.com/Masterminds/glide &&     rm -rf /root/requirements.txt', ""LD_LIBRARY_PATH=/opt/_internal/cpython-3.6.0/lib/:${LD_LIBRARY_PATH} /opt/_internal/cpython-3.6.0/bin/pip3 install pre-commit 'ipython==5.3.0' &&     LD_LIBRARY_PATH=/opt/_internal/cpython-3.7.0/lib/:${LD_LIBRARY_PATH} /opt/_internal/cpython-3.7.0/bin/pip3 install pre-commit 'ipython==5.3.0' &&     LD_LIBRARY_PATH=/opt/_internal/cpython-3.8.0/lib/:${LD_LIBRARY_PATH} /opt/_internal/cpython-3.8.0/bin/pip3 install pre-commit 'ipython==5.3.0' &&     LD_LIBRARY_PATH=/opt/_internal/cpython-3.9.0/lib/:${LD_LIBRARY_PATH} /opt/_internal/cpython-3.9.0/bin/pip3 install pre-commit 'ipython==5.3.0'"", 'wget -O /opt/swig-2.0.12.tar.gz https://sourceforge.net/projects/swig/files/swig/swig-2.0.12/swig-2.0.12.tar.gz/download &&     cd /opt && tar xzf swig-2.0.12.tar.gz && cd /opt/swig-2.0.12 && ./configure && make && make install && cd /opt && rm swig-2.0.12.tar.gz', 'wget https://paddle-ci.gz.bcebos.com/ccache-3.7.9.tar.gz &&     tar xf ccache-3.7.9.tar.gz && mkdir /usr/local/ccache-3.7.9 && cd ccache-3.7.9 &&     ./configure -prefix=/usr/local/ccache-3.7.9 &&     make -j8 && make install &&     ln -s /usr/local/ccache-3.7.9/bin/ccache /usr/local/bin/ccache']"
PaddlePaddle/Paddle,latest,/tools/dockerfile/Dockerfile.centos,COPY,1,['build_scripts /build_scripts']
PaddlePaddle/Paddle,latest,/tools/dockerfile/Dockerfile.centos,CMD,1,"['[""bash"", ""/paddle/paddle/scripts/docker/build.sh""]']"
PaddlePaddle/Paddle,latest,/tools/dockerfile/Dockerfile.paddle-npu-build,FROM,1,['registry.baidubce.com/paddlepaddle/paddle-npu:latest-dev-cann5.0.2.alpha005-gcc82-x86_64-with-driver']
PaddlePaddle/Paddle,latest,/tools/dockerfile/Dockerfile.paddle-npu-build,RUN,2,"['apt-get install pigz -y', 'apt-get remove -y openjdk*']"
PaddlePaddle/Paddle,latest,/tools/dockerfile/Dockerfile.paddle-npu-build,CMD,1,"['[""/bin/bash""]']"
PaddlePaddle/Paddle,latest,/tools/dockerfile/Dockerfile.paddle-npu-build,EXPOSE,1,['22']
PaddlePaddle/Paddle,latest,/tools/dockerfile/ci_dockerfile.sh,FUNCTION,5,"['make_ubuntu_dockerfile(){', 'make_centos_dockerfile(){', 'make_cinn_dockerfile(){', 'make_ce_framework_dockcerfile(){', 'main() {']"
PaddlePaddle/Paddle,latest,/tools/dockerfile/ci_dockerfile.sh,"DOCKERFILE_NAME=""DOCKERFILE.CUDA10_CUDNN7_GCC82_UBUNTU16""",1,['']
PaddlePaddle/Paddle,latest,/tools/dockerfile/ci_dockerfile.sh,SED,34,"['""s/<baseimg>/10.1-cudnn7-devel-ubuntu16.04/g"" ./Dockerfile.ubuntu >${dockerfile_name}', '-i ""s#liblzma-dev#liblzma-dev openmpi-bin openmpi-doc libopenmpi-dev#g"" ${dockerfile_name}', '-i ""${dockerfile_line}i RUN wget --no-check-certificate -q https://paddle-edl.bj.bcebos.com/hadoop-2.7.7.tar.gz \\&\\&      tar -xzf  hadoop-2.7.7.tar.gz && mv hadoop-2.7.7 /usr/local/"" ${dockerfile_name}', '-i ""${dockerfile_line}i RUN apt remove git -y \\&\\& apt install -y libcurl4-openssl-dev gettext \\&\\& wget -q https://paddle-ci.gz.bcebos.com/git-2.17.1.tar.gz \\&\\&     tar -xvf git-2.17.1.tar.gz \\&\\&     cd git-2.17.1 \\&\\&     ./configure --with-openssl --with-curl --prefix=/usr/local \\&\\&     make -j8 \\&\\& make install "" ${dockerfile_name}', '-i ""${dockerfile_line}i RUN pip install wheel \\&\\& pip3 install PyGithub wheel \\&\\& pip3.7 install PyGithub "" ${dockerfile_name}', '-i ""s#<install_gcc>#WORKDIR /usr/bin \\    COPY tools/dockerfile/build_scripts /build_scripts \\    RUN bash /build_scripts/install_gcc.sh gcc82 \\&\\& rm -rf /build_scripts \\    RUN cp gcc  gcc.bak \\&\\& cp g++  g++.bak \\&\\& rm gcc \\&\\& rm g++ \\    RUN ln -s /usr/local/gcc-8.2/bin/gcc /usr/local/bin/gcc \\    RUN ln -s /usr/local/gcc-8.2/bin/g++ /usr/local/bin/g++ \\    RUN ln -s /usr/local/gcc-8.2/bin/gcc /usr/bin/gcc \\    RUN ln -s /usr/local/gcc-8.2/bin/g++ /usr/bin/g++ \\    ENV PATH=/usr/local/gcc-8.2/bin:\\$PATH #g"" ${dockerfile_name}', '-i ""s#bash /build_scripts/install_nccl2.sh#wget -q --no-proxy https://nccl2-deb.cdn.bcebos.com/nccl-repo-ubuntu1604-2.7.8-ga-cuda10.1_1-1_amd64.deb \\    RUN dpkg -i nccl-repo-ubuntu1604-2.7.8-ga-cuda10.1_1-1_amd64.deb \\    RUN apt update \\&\\& apt remove -y libnccl* --allow-change-held-packages \\&\\&  apt-get install -y libnccl2=2.7.8-1+cuda10.1 libnccl-dev=2.7.8-1+cuda10.1 pigz --allow-change-held-packages #g"" ${dockerfile_name}', '""s/<baseimg>/11.0-cudnn8-devel-centos7/g"" Dockerfile.centos >${dockerfile_name}', '-i ""s#COPY build_scripts /build_scripts#COPY tools/dockerfile/build_scripts  ./build_scripts#g"" ${dockerfile_name}', '-i ""${dockerfile_line}i RUN yum install -y pigz graphviz"" ${dockerfile_name}', '-i ""${dockerfile_line}i RUN rm -f /usr/bin/cc && ln -s /usr/local/gcc-5.4/bin/gcc /usr/bin/cc"" ${dockerfile_name}', '-i ""${dockerfile_line}i RUN rm -f /usr/bin/g++ && ln -s /usr/local/gcc-5.4/bin/g++ /usr/bin/g++"" ${dockerfile_name}', '-i ""${dockerfile_line}i RUN rm -f /usr/bin/c++ && ln -s /usr/local/gcc-5.4/bin/c++ /usr/bin/c++"" ${dockerfile_name}', '-i ""${dockerfile_line}i RUN rm -f /usr/bin/gcc && ln -s /usr/local/gcc-5.4/bin/gcc /usr/bin/gcc"" ${dockerfile_name}', '-i ""${dockerfile_line}i RUN ln -s /usr/lib64/libz.so /usr/local/lib/libz.so \\    RUN ln -s /usr/local/lib/libnccl.so /usr/local/cuda/lib64/"" ${dockerfile_name}', '-i $""${dockerfile_line}i RUN wget --no-check-certificate -q  https://paddle-edl.bj.bcebos.com/hadoop-2.7.7.tar.gz \\    RUN tar -xzf hadoop-2.7.7.tar.gz && mv hadoop-2.7.7 /usr/local/"" ${dockerfile_name}', '-i ""s#RUN bash build_scripts/build.sh#RUN bash build_scripts/install_gcc.sh gcc54 \\nRUN mv /usr/bin/cc /usr/bin/cc.bak \\&\\& ln -s /usr/local/gcc-5.4/bin/gcc /usr/bin/cc \\nENV PATH=/usr/local/gcc-5.4/bin:\\$PATH \\nRUN bash build_scripts/build.sh#g"" ${dockerfile_name}', '""s/<baseimg>/11.2.0-cudnn8-devel-ubuntu18.04/g"" ./Dockerfile.ubuntu18 >${dockerfile_name}', '-i ""7i ENV TZ=Asia/Beijing"" ${dockerfile_name}', '-i ""8i RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone"" ${dockerfile_name}', '-i ""9i RUN apt-get update && apt-get install -y liblzma-dev openmpi-bin openmpi-doc libopenmpi-dev"" ${dockerfile_name}', '-i ""${dockerfile_line}i RUN wget --no-check-certificate -q https://paddle-edl.bj.bcebos.com/hadoop-2.7.7.tar.gz \\&\\&      tar -xzf  hadoop-2.7.7.tar.gz && mv hadoop-2.7.7 /usr/local/"" ${dockerfile_name}', '-i ""${dockerfile_line}i RUN apt remove git -y \\&\\& apt install -y libcurl4-openssl-dev gettext \\&\\& wget -q https://paddle-ci.gz.bcebos.com/git-2.17.1.tar.gz \\&\\&     tar -xvf git-2.17.1.tar.gz \\&\\&     cd git-2.17.1 \\&\\&     ./configure --with-openssl --with-curl --prefix=/usr/local \\&\\&     make -j8 \\&\\& make install "" ${dockerfile_name}', '-i ""${dockerfile_line}i RUN pip install wheel \\&\\& pip3 install PyGithub wheel \\&\\& pip3.7 install PyGithub "" ${dockerfile_name}', '""s/<baseimg>/11.2.0-cudnn8-devel-ubuntu16.04/g"" ./Dockerfile.ubuntu >${dockerfile_name}', '-i ""7i RUN chmod 777 /tmp"" ${dockerfile_name}', '-i ""${dockerfile_line}i RUN wget --no-check-certificate -q https://paddle-edl.bj.bcebos.com/hadoop-2.7.7.tar.gz \\&\\&      tar -xzf  hadoop-2.7.7.tar.gz && mv hadoop-2.7.7 /usr/local/"" ${dockerfile_name}', '-i ""${dockerfile_line}i RUN apt remove git -y \\&\\& apt install -y pigz libcurl4-openssl-dev gettext \\&\\& wget -q https://paddle-ci.gz.bcebos.com/git-2.17.1.tar.gz \\&\\&     tar -xvf git-2.17.1.tar.gz \\&\\&     cd git-2.17.1 \\&\\&     ./configure --with-openssl --with-curl --prefix=/usr/local \\&\\&     make -j8 \\&\\& make install "" ${dockerfile_name}', '-i ""${dockerfile_line}i RUN pip install wheel \\&\\& pip3 install PyGithub wheel \\&\\& pip3.7 install PyGithub "" ${dockerfile_name}', '-i ""s#<install_gcc>#WORKDIR /usr/bin \\    COPY tools/dockerfile/build_scripts /build_scripts \\    RUN bash /build_scripts/install_gcc.sh gcc82 \\&\\& rm -rf /build_scripts \\    RUN cp gcc  gcc.bak \\&\\& cp g++  g++.bak \\&\\& rm gcc \\&\\& rm g++ \\    RUN ln -s /usr/local/gcc-8.2/bin/gcc /usr/local/bin/gcc \\    RUN ln -s /usr/local/gcc-8.2/bin/g++ /usr/local/bin/g++ \\    RUN ln -s /usr/local/gcc-8.2/bin/gcc /usr/bin/gcc \\    RUN ln -s /usr/local/gcc-8.2/bin/g++ /usr/bin/g++ \\    ENV PATH=/usr/local/gcc-8.2/bin:\\$PATH #g"" ${dockerfile_name}', ""-i 's#RUN bash /build_scripts/install_trt.sh#RUN bash /build_scripts/install_trt.sh trt8034#g' ${dockerfile_name}"", ""-i 's#28/af/2c76c8aa46ccdf7578b83d97a11a2d1858794d4be4a1610ade0d30182e8b/pip-20.0.1.tar.gz#b7/2d/ad02de84a4c9fd3b1958dc9fb72764de1aa2605a9d7e943837be6ad82337/pip-21.0.1.tar.gz#g' ${dockerfile_name}"", ""-i 's#pip-20.0.1#pip-21.0.1#g' ${dockerfile_name}"", ""-i 's#python setup.py install#python3.7 setup.py install#g' ${dockerfile_name}""]"
PaddlePaddle/Paddle,latest,/tools/dockerfile/ci_dockerfile.sh,DOCKERFILE_LINE=$(WC,4,"[""-l ${dockerfile_name}|awk '{print $1}')"", ""-l ${dockerfile_name}|awk '{print $1}')"", ""-l ${dockerfile_name}|awk '{print $1}')"", ""-l ${dockerfile_name}|awk '{print $1}')""]"
PaddlePaddle/Paddle,latest,/tools/dockerfile/ci_dockerfile.sh,},5,"['', '', '', '', '']"
PaddlePaddle/Paddle,latest,/tools/dockerfile/ci_dockerfile.sh,"DOCKERFILE_NAME=""DOCKERFILE.CUDA9_CUDNN7_GCC48_PY35_CENTOS6""",1,['']
PaddlePaddle/Paddle,latest,/tools/dockerfile/ci_dockerfile.sh,"DOCKERFILE_NAME=""DOCKERFILE.CUDA11_CUDNN8_GCC82_UBUNTU18_CINN""",1,['']
PaddlePaddle/Paddle,latest,/tools/dockerfile/ci_dockerfile.sh,"DOCKERFILE_NAME=""DOCKERFILE.CUDA11.2_CUDNN8_GCC82_TRT8""",1,['']
PaddlePaddle/Paddle,latest,/tools/dockerfile/ci_dockerfile.sh,MAKE_UBUNTU_DOCKERFILE,1,['']
PaddlePaddle/Paddle,latest,/tools/dockerfile/ci_dockerfile.sh,MAKE_CENTOS_DOCKERFILE,1,['']
PaddlePaddle/Paddle,latest,/tools/dockerfile/ci_dockerfile.sh,MAKE_CINN_DOCKERFILE,1,['']
PaddlePaddle/Paddle,latest,/tools/dockerfile/ci_dockerfile.sh,MAKE_CE_FRAMEWORK_DOCKCERFILE,1,['']
PaddlePaddle/Paddle,latest,/tools/dockerfile/ci_dockerfile.sh,MAIN,1,"['""$@""']"
PaddlePaddle/Paddle,latest,/tools/dockerfile/Dockerfile.npu_x86_64,FROM,1,['ubuntu:18.04']
PaddlePaddle/Paddle,latest,/tools/dockerfile/Dockerfile.npu_x86_64,MAINTAINER,1,['PaddlePaddle Authors <paddle-dev@baidu.com>']
PaddlePaddle/Paddle,latest,/tools/dockerfile/Dockerfile.npu_x86_64,RUN,33,"['apt-get update && apt-get install -y apt-utils', 'ln -snf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime', 'apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends tzdata', 'apt-get update && apt-get install -y software-properties-common && add-apt-repository ppa:deadsnakes/ppa && add-apt-repository ppa:ubuntu-toolchain-r/test', 'apt-get update && apt-get install -y curl wget vim git unzip unrar tar xz-utils libssl-dev bzip2 gzip make libgcc-s1 sudo openssh-server             coreutils ntp language-pack-zh-hans python-qt4 libsm6 libxext6 libxrender-dev libgl1-mesa-glx libsqlite3-dev libopenblas-dev             bison graphviz libjpeg-dev zlib1g zlib1g-dev automake locales swig net-tools libtool module-init-tools numactl libnuma-dev             openssl libffi-dev pciutils libblas-dev gfortran libblas3 liblapack-dev liblapack3 default-jre screen tmux gdb lldb gcc g++', 'wget -q https://paddle-ci.gz.bcebos.com/gcc-8.2.0.tar.xz &&     tar -xvf gcc-8.2.0.tar.xz && cd gcc-8.2.0 &&     unset LIBRARY_PATH CPATH C_INCLUDE_PATH PKG_CONFIG_PATH CPLUS_INCLUDE_PATH INCLUDE &&     ./contrib/download_prerequisites &&     cd .. && mkdir temp_gcc82 && cd temp_gcc82 &&     ../gcc-8.2.0/configure --prefix=/opt/compiler/gcc-8.2 --enable-threads=posix --disable-checking --disable-multilib &&     make -j8 && make install &&     cd .. && rm -rf temp_gcc82 && rm -rf gcc-8.2.0* &&     cd /usr/lib/x86_64-linux-gnu &&     mv libstdc++.so.6 libstdc++.so.6.bak && mv libstdc++.so.6.0.25 libstdc++.so.6.0.25.bak &&     ln -s /opt/compiler/gcc-8.2/lib64/libgfortran.so.5 /usr/lib/x86_64-linux-gnu/libstdc++.so.5 &&     ln -s /opt/compiler/gcc-8.2/lib64/libstdc++.so.6   /usr/lib/x86_64-linux-gnu/libstdc++.so.6 &&     cp /opt/compiler/gcc-8.2/lib64/libstdc++.so.6.0.25 /usr/lib/x86_64-linux-gnu &&     cd /usr/bin && mv gcc gcc.bak && mv g++ g++.bak &&     ln -s /opt/compiler/gcc-8.2/bin/gcc /usr/bin/gcc &&     ln -s /opt/compiler/gcc-8.2/bin/g++ /usr/bin/g++', 'wget -q https://cmake.org/files/v3.16/cmake-3.16.0-Linux-x86_64.tar.gz &&     tar -zxvf cmake-3.16.0-Linux-x86_64.tar.gz && rm cmake-3.16.0-Linux-x86_64.tar.gz &&     mv cmake-3.16.0-Linux-x86_64 cmake-3.16', 'cd /opt && wget -q https://repo.anaconda.com/miniconda/${CONDA_FILE} && chmod +x ${CONDA_FILE}', 'mkdir /opt/conda && ./${CONDA_FILE} -b -f -p ""/opt/conda"" && rm -rf ${CONDA_FILE}', 'conda init bash && conda install -n base jupyter jupyterlab', '/opt/conda/bin/pip install pre-commit pylint pylint pytest astroid isort coverage qtconsole', ""/opt/conda/bin/pip install 'numpy<1.20,>=1.13.3' 'decorator>=4.4.0' 'sympy>=1.4' 'cffi>=1.12.3' 'protobuf>=3.11.3'"", '/opt/conda/bin/pip install attrs pyyaml pathlib2 scipy requests psutil', 'wget https://raw.githubusercontent.com/PaddlePaddle/Paddle/develop/python/requirements.txt -O /root/requirements.txt', '/opt/conda/bin/pip install -r /root/requirements.txt && rm -rf /root/requirements.txt', 'wget https://raw.githubusercontent.com/PaddlePaddle/Paddle/develop/python/unittest_py/requirements.txt -O /root/requirements.txt', '/opt/conda/bin/pip install -r /root/requirements.txt && rm -rf /root/requirements.txt', 'wget -qO- https://paddle-ci.cdn.bcebos.com/go1.8.1.linux-amd64.tar.gz |     tar -xz -C /usr/local &&     mkdir /root/gopath &&     mkdir /root/gopath/bin &&     mkdir /root/gopath/src', 'curl -s -q https://glide.sh/get | sh', 'git config --global credential.helper store', 'localedef -i en_US -f UTF-8 en_US.UTF-8', 'apt-get install libprotobuf-dev -y', 'apt install lsof -y', 'wget -q https://paddle-ci.cdn.bcebos.com/patchelf_0.10-2_amd64.deb &&     dpkg -i patchelf_0.10-2_amd64.deb && rm -rf patchelf_0.10-2_amd64.deb', ""mkdir /var/run/sshd && echo 'root:root' | chpasswd && sed -ri 's/^PermitRootLogin\\s+.*/PermitRootLogin yes/' /etc/ssh/sshd_config && sed -ri 's/UsePAM yes/#UsePAM yes/g' /etc/ssh/sshd_config"", 'wget https://paddle-ci.gz.bcebos.com/ccache-3.7.9.tar.gz &&     tar xf ccache-3.7.9.tar.gz && mkdir /usr/local/ccache-3.7.9 && cd ccache-3.7.9 &&     ./configure -prefix=/usr/local/ccache-3.7.9 &&     make -j8 && make install && cd .. && rm -rf ccache-3.7.9* &&     ln -s /usr/local/ccache-3.7.9/bin/ccache /usr/local/bin/ccache', 'wget https://paddle-ci.cdn.bcebos.com/clang+llvm-3.8.0-x86_64-linux-gnu-ubuntu-16.04.tar.xz &&     tar xf clang+llvm-3.8.0-x86_64-linux-gnu-ubuntu-16.04.tar.xz && cd clang+llvm-3.8.0-x86_64-linux-gnu-ubuntu-16.04 &&     cp -r * /usr/local && cd .. && rm -rf clang+llvm-3.8.0-x86_64-linux-gnu-ubuntu-16.04 &&     rm -rf clang+llvm-3.8.0-x86_64-linux-gnu-ubuntu-16.04.tar.xz', 'groupadd HwHiAiUser &&     useradd -g HwHiAiUser -m -d /home/HwHiAiUser HwHiAiUser', 'mkdir -p /usr/local/Ascend/driver', 'chmod +x Ascend-cann-toolkit_${CANN_VERSION}_linux-x86_64.run &&     ./Ascend-cann-toolkit_${CANN_VERSION}_linux-x86_64.run --install --quiet &&     rm -rf Ascend-cann-toolkit_${CANN_VERSION}_linux-x86_64.run', 'chmod +x Ascend-cann-nnae_${CANN_VERSION}_linux-x86_64.run &&     ./Ascend-cann-nnae_${CANN_VERSION}_linux-x86_64.run --install --quiet &&     rm -rf Ascend-cann-nnae_${CANN_VERSION}_linux-x86_64.run', 'rm -rf /usr/local/Ascend/driver', 'apt-get clean -y']"
PaddlePaddle/Paddle,latest,/tools/dockerfile/Dockerfile.npu_x86_64,WORKDIR,4,"['/opt', '/opt', '/opt', '/usr/local/Ascend']"
PaddlePaddle/Paddle,latest,/tools/dockerfile/Dockerfile.npu_x86_64,ENV,22,"['PATH=/opt/compiler/gcc-8.2/bin:$PATH', 'LD_LIBRARY_PATH=/opt/compiler/gcc-8.2/lib:/opt/compiler/gcc-8.2/lib64:$LD_LIBRARY_PATH', 'PATH=/opt/cmake-3.16/bin:${PATH}', 'PATH=/opt/conda/bin:${PATH}', 'GOROOT=/usr/local/go GOPATH=/root/gopath', 'PATH=${PATH}:${GOROOT}/bin:${GOPATH}/bin', 'LD_LIBRARY_PATH=/usr/local/Ascend/driver/lib64:$LD_LIBRARY_PATH', 'LD_LIBRARY_PATH=/usr/local/Ascend/driver/lib64/common:$LD_LIBRARY_PATH', 'LD_LIBRARY_PATH=/usr/local/Ascend/driver/lib64/driver:$LD_LIBRARY_PATH', 'PATH=/usr/local/Ascend/ascend-toolkit/latest/atc/bin:$PATH', 'LD_LIBRARY_PATH=/usr/local/Ascend/ascend-toolkit/latest/atc/lib64:$LD_LIBRARY_PATH', 'PYTHONPATH=/usr/local/Ascend/ascend-toolkit/latest/pyACL/python/site-packages/acl:$PYTHONPATH', 'PYTHONPATH=/usr/local/Ascend/ascend-toolkit/latest/atc/python/site-packages:$PYTHONPATH', 'PYTHONPATH=/usr/local/Ascend/ascend-toolkit/latest/toolkit/python/site-packages:$PYTHONPATH', 'TOOLCHAIN_HOME=/usr/local/Ascend/ascend-toolkit/latest/toolkit', 'PATH=/usr/local/Ascend/nnae/latest/fwkacllib/bin:$PATH', 'PATH=/usr/local/Ascend/nnae/latest/fwkacllib/ccec_compiler/bin:$PATH', 'LD_LIBRARY_PATH=/usr/local/Ascend/nnae/latest/fwkacllib/lib64:$LD_LIBRARY_PATH', 'PYTHONPATH=/usr/local/Ascend/nnae/latest/fwkacllib/python/site-packages:$PYTHONPATH', 'ASCEND_AICPU_PATH=/usr/local/Ascend/nnae/latest', 'ASCEND_OPP_PATH=/usr/local/Ascend/nnae/latest/opp', 'ASCEND_GLOBAL_LOG_LEVEL=3']"
PaddlePaddle/Paddle,latest,/tools/dockerfile/Dockerfile.npu_x86_64,ARG,2,"['CONDA_FILE=Miniconda3-py37_4.9.2-Linux-x86_64.sh', 'CANN_VERSION=5.0.2.alpha005']"
PaddlePaddle/Paddle,latest,/tools/dockerfile/Dockerfile.npu_x86_64,CMD,1,['source ~/.bashrc']
PaddlePaddle/Paddle,latest,/tools/dockerfile/Dockerfile.npu_x86_64,COPY,4,"['ascend_install.info /etc/ascend_install.info', 'version.info /usr/local/Ascend/driver/version.info', 'Ascend-cann-toolkit_${CANN_VERSION}_linux-x86_64.run /usr/local/Ascend/', 'Ascend-cann-nnae_${CANN_VERSION}_linux-x86_64.run /usr/local/Ascend/']"
PaddlePaddle/Paddle,latest,/tools/dockerfile/Dockerfile.npu_x86_64,EXPOSE,1,['22']
PaddlePaddle/Paddle,latest,/tools/dockerfile/Dockerfile.rocm,FROM,1,['centos:7.8.2003']
PaddlePaddle/Paddle,latest,/tools/dockerfile/Dockerfile.rocm,MAINTAINER,1,['PaddlePaddle Authors <paddle-dev@baidu.com>']
PaddlePaddle/Paddle,latest,/tools/dockerfile/Dockerfile.rocm,ENV,18,"['LC_ALL en_US.UTF-8', 'LANG en_US.UTF-8', 'LANGUAGE en_US.UTF-8', 'PATH=/opt/rh/devtoolset-7/root/usr/bin:$PATH', 'LD_LIBRARY_PATH=/opt/rh/devtoolset-7/root/usr/lib64:/opt/rh/devtoolset-7/root/usr/lib:$LD_LIBRARY_PATH', 'PATH=/opt/cmake-3.16/bin:${PATH}', 'ROCM_PATH=/opt/rocm', 'HIP_PATH=/opt/rocm/hip', 'HIP_CLANG_PATH=/opt/rocm/llvm/bin', 'PATH=/opt/rocm/bin:$PATH', 'PATH=/opt/rocm/opencl/bin:$PATH', 'LD_LIBRARY_PATH=/opt/rocm/lib:$LD_LIBRARY_PATH', 'GOROOT=/usr/local/go', 'GOPATH=/root/gopath', 'PATH=${GOROOT}/bin:${GOPATH}/bin:${PATH}', 'CONDA_FILE=Miniconda3-py37_4.9.2-Linux-x86_64.sh', 'PATH=/opt/conda/bin:${PATH}', 'PATH=/opt/llvm-3.8.0/bin:${PATH}']"
PaddlePaddle/Paddle,latest,/tools/dockerfile/Dockerfile.rocm,RUN,31,"['yum install -y epel-release deltarpm sudo openssh-server gettext-devel sqlite-devel         zlib-devel openssl-devel pcre-devel vim tk-devel tkinter libtool xz graphviz wget curl-devel         make bzip2 git patch unzip bison yasm diffutils automake which file kernel-headers kernel-devel         net-tools numactl-devel chrpath screen initscripts', 'yum install -y yum-utils centos-release-scl &&     yum-config-manager --enable rhel-server-rhscl-7-rpms &&     yum-config-manager --enable rhel-7-server-rpms &&     yum-config-manager --enable rhel-7-server-optional-rpms &&     INSTALL_PKGS=""devtoolset-7-binutils devtoolset-7-gcc devtoolset-7-gcc-c++ devtoolset-7-gcc-gfortran devtoolset-7-gdb"" &&     yum install -y --setopt=tsflags=nodocs $INSTALL_PKGS &&     rpm -V $INSTALL_PKGS &&     yum -y clean all --enablerepo=\'*\'', 'echo ""source scl_source enable devtoolset-7"" > ""/etc/profile.d/devtoolset-7.sh""', 'wget -q https://cmake.org/files/v3.16/cmake-3.16.0-Linux-x86_64.tar.gz &&     tar -zxvf cmake-3.16.0-Linux-x86_64.tar.gz && rm cmake-3.16.0-Linux-x86_64.tar.gz &&     mv cmake-3.16.0-Linux-x86_64 cmake-3.16', 'yum install -y kmod wget openblas-devel epel-release', 'echo ""[ROCm]"" > /etc/yum.repos.d/rocm.repo &&     echo ""name=ROCm"" >> /etc/yum.repos.d/rocm.repo &&     echo ""baseurl=http://repo.radeon.com/rocm/yum/4.0.1"" >> /etc/yum.repos.d/rocm.repo &&     echo ""enabled=1"" >> /etc/yum.repos.d/rocm.repo &&     echo ""gpgcheck=0"" >> /etc/yum.repos.d/rocm.repo', 'yum install -y rocm-dev rocm-utils rocfft miopen-hip rocblas hipsparse rocrand rccl hipcub rocthrust rocprofiler-dev roctracer-dev', ""sed -i '21 a #include <thrust/system/hip/config.h>' /opt/rocm/include/thrust/system/hip/detail/error.inl"", 'cd /opt && wget -q https://paddle-ci.gz.bcebos.com/git-2.17.1.tar.gz &&   tar -xvf git-2.17.1.tar.gz &&   cd git-2.17.1 &&   ./configure --with-openssl --prefix=/usr/local &&   make -j8 && make install &&   cd .. && rm -rf git-2.17.1.tar.gz && rm -rf git-2.17.1', 'wget --no-check-certificate -qO- https://storage.googleapis.com/golang/go1.8.1.linux-amd64.tar.gz |     tar -xz -C /usr/local &&     mkdir /root/gopath &&     mkdir /root/gopath/bin &&     mkdir /root/gopath/src', 'cd /opt && wget -q --no-check-certificate https://paddle-ci.cdn.bcebos.com/protobuf-cpp-3.6.1.tar.gz &&     tar xzf protobuf-cpp-3.6.1.tar.gz &&     cd protobuf-3.6.1 && ./configure && make -j4 && make install &&     cd .. && rm -f protobuf-cpp-3.6.1.tar.gz && rm -rf protobuf-3.6.1', 'cd /opt && wget https://repo.anaconda.com/miniconda/${CONDA_FILE} && chmod +x ${CONDA_FILE}', 'mkdir /opt/conda && ./${CONDA_FILE} -b -f -p ""/opt/conda"" && rm -rf ${CONDA_FILE}', 'conda init bash && conda install -n base jupyter jupyterlab', '/opt/conda/bin/pip install pre-commit pylint pytest astroid isort protocol PyGithub', 'wget https://raw.githubusercontent.com/PaddlePaddle/Paddle/develop/python/requirements.txt -O /root/requirements.txt', '/opt/conda/bin/pip install -r /root/requirements.txt &&     rm -rf /root/requirements.txt', 'wget https://raw.githubusercontent.com/PaddlePaddle/Paddle/develop/python/unittest_py/requirements.txt -O /root/requirements.txt', '/opt/conda/bin/pip install -r /root/requirements.txt && rm -rf /root/requirements.txt', 'wget https://raw.githubusercontent.com/PaddlePaddle/PaddleClas/develop/requirements.txt -O /root/requirements.txt', '/opt/conda/bin/pip install -r /root/requirements.txt && rm -rf /root/requirements.txt', 'wget https://raw.githubusercontent.com/PaddlePaddle/PaddleDetection/develop/requirements.txt -O /root/requirements.txt', '/opt/conda/bin/pip install -r /root/requirements.txt && rm -rf /root/requirements.txt', 'sed -i ""s/^#PermitRootLogin/PermitRootLogin/"" /etc/ssh/sshd_config &&     sed -i ""s/^#PubkeyAuthentication/PubkeyAuthentication/"" /etc/ssh/sshd_config &&     sed -i ""s/^#RSAAuthentication/RSAAuthentication/"" /etc/ssh/sshd_config', 'wget https://copr.fedorainfracloud.org/coprs/alonid/llvm-3.8.0/repo/epel-7/alonid-llvm-3.8.0-epel-7.repo -P /etc/yum.repos.d/', 'yum install -y clang-3.8.0', 'yum install -y patchelf &&     yum clean all &&     rm -rf /var/cache/yum &&     rm -rf /var/lib/yum/yumdb &&     rm -rf /var/lib/yum/history', 'wget -O /opt/swig-2.0.12.tar.gz https://sourceforge.net/projects/swig/files/swig/swig-2.0.12/swig-2.0.12.tar.gz/download &&     cd /opt && tar xzf swig-2.0.12.tar.gz && cd /opt/swig-2.0.12 && ./configure && make && make install &&     cd /opt && rm swig-2.0.12.tar.gz && rm -rf swig-2.0.12', 'cd /opt && wget https://paddle-ci.gz.bcebos.com/ccache-3.7.9.tar.gz &&     tar xf ccache-3.7.9.tar.gz && mkdir /usr/local/ccache-3.7.9 && cd ccache-3.7.9 &&     ./configure -prefix=/usr/local/ccache-3.7.9 &&     make -j8 && make install &&     ln -s /usr/local/ccache-3.7.9/bin/ccache /usr/local/bin/ccache &&     cd .. && rm -rf ccache-3.7.9.tar.gz && rm -rf ccache-3.7.9', 'sed -i ""s/^#PermitRootLogin/PermitRootLogin/"" /etc/ssh/sshd_config &&     sed -i ""s/^#PubkeyAuthentication/PubkeyAuthentication/"" /etc/ssh/sshd_config &&     sed -i ""s/^#RSAAuthentication/RSAAuthentication/"" /etc/ssh/sshd_config &&     sed -i ""s/#UseDNS .*/UseDNS no/"" /etc/ssh/sshd_config', 'ssh-keygen -A']"
PaddlePaddle/Paddle,latest,/tools/dockerfile/Dockerfile.rocm,WORKDIR,1,['/opt']
PaddlePaddle/Paddle,latest,/tools/dockerfile/Dockerfile.rocm,EXPOSE,1,['22']
PaddlePaddle/Paddle,latest,/tools/dockerfile/Dockerfile.npu_aarch64,FROM,1,['ubuntu:18.04']
PaddlePaddle/Paddle,latest,/tools/dockerfile/Dockerfile.npu_aarch64,MAINTAINER,1,['PaddlePaddle Authors <paddle-dev@baidu.com>']
PaddlePaddle/Paddle,latest,/tools/dockerfile/Dockerfile.npu_aarch64,RUN,34,"['apt-get update && apt-get install -y apt-utils', 'ln -snf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime', 'apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends tzdata', 'apt-get update && apt-get install -y software-properties-common && add-apt-repository ppa:deadsnakes/ppa && add-apt-repository ppa:ubuntu-toolchain-r/test', 'apt-get update && apt-get install -y curl wget vim git unzip unrar tar xz-utils libssl-dev bzip2 gzip make libgcc-s1 sudo openssh-server             coreutils ntp language-pack-zh-hans python-qt4 libsm6 libxext6 libxrender-dev libgl1-mesa-glx libsqlite3-dev libopenblas-dev             bison graphviz libjpeg-dev zlib1g zlib1g-dev automake locales swig net-tools libtool module-init-tools numactl libnuma-dev             openssl libffi-dev pciutils libblas-dev gfortran libblas3 liblapack-dev liblapack3 default-jre screen tmux gdb lldb gcc g++', 'wget -q https://paddle-ci.gz.bcebos.com/gcc-8.2.0.tar.xz &&     tar -xvf gcc-8.2.0.tar.xz && cd gcc-8.2.0 &&     unset LIBRARY_PATH CPATH C_INCLUDE_PATH PKG_CONFIG_PATH CPLUS_INCLUDE_PATH INCLUDE &&     ./contrib/download_prerequisites &&     cd .. && mkdir temp_gcc82 && cd temp_gcc82 &&     ../gcc-8.2.0/configure --prefix=/opt/compiler/gcc-8.2 --enable-threads=posix --disable-checking --disable-multilib &&     make -j8 && make install &&     cd .. && rm -rf temp_gcc82 && rm -rf gcc-8.2.0* &&     cd /usr/lib/aarch64-linux-gnu &&     mv libstdc++.so.6 libstdc++.so.6.bak && mv libstdc++.so.6.0.25 libstdc++.so.6.0.25.bak &&     ln -s /opt/compiler/gcc-8.2/lib64/libgfortran.so.5 /usr/lib/aarch64-linux-gnu/libstdc++.so.5 &&     ln -s /opt/compiler/gcc-8.2/lib64/libstdc++.so.6   /usr/lib/aarch64-linux-gnu/libstdc++.so.6 &&     cp /opt/compiler/gcc-8.2/lib64/libstdc++.so.6.0.25 /usr/lib/aarch64-linux-gnu &&     cd /usr/bin && mv gcc gcc.bak && mv g++ g++.bak &&     ln -s /opt/compiler/gcc-8.2/bin/gcc /usr/bin/gcc &&     ln -s /opt/compiler/gcc-8.2/bin/g++ /usr/bin/g++', 'wget -q https://cmake.org/files/v3.19/cmake-3.19.8-Linux-aarch64.tar.gz &&     tar -zxvf cmake-3.19.8-Linux-aarch64.tar.gz && rm cmake-3.19.8-Linux-aarch64.tar.gz &&     mv cmake-3.19.8-Linux-aarch64 cmake-3.19', 'cd /opt && wget -q https://repo.anaconda.com/miniconda/${CONDA_FILE} && chmod +x ${CONDA_FILE}', 'mkdir /opt/conda && ./${CONDA_FILE} -b -f -p ""/opt/conda"" && rm -rf ${CONDA_FILE}', 'conda init bash && conda install -n base jupyter jupyterlab', '/opt/conda/bin/pip install pre-commit pylint pylint pytest astroid isort coverage qtconsole', ""/opt/conda/bin/pip install 'numpy<1.20,>=1.13.3' 'decorator>=4.4.0' 'sympy>=1.4' 'cffi>=1.12.3' 'protobuf>=3.11.3'"", '/opt/conda/bin/pip install attrs pyyaml pathlib2 scipy requests psutil', 'wget https://raw.githubusercontent.com/PaddlePaddle/Paddle/develop/python/requirements.txt -O /root/requirements.txt', '/opt/conda/bin/pip install -r /root/requirements.txt && rm -rf /root/requirements.txt', 'wget https://raw.githubusercontent.com/PaddlePaddle/Paddle/develop/python/unittest_py/requirements.txt -O /root/requirements.txt', '/opt/conda/bin/pip install -r /root/requirements.txt && rm -rf /root/requirements.txt', 'wget -qO- https://golang.org/dl/go1.16.5.linux-arm64.tar.gz |     tar -xz -C /usr/local &&     mkdir /root/gopath &&     mkdir /root/gopath/bin &&     mkdir /root/gopath/src', 'curl -s -q https://glide.sh/get | sh', 'git config --global credential.helper store', 'localedef -i en_US -f UTF-8 en_US.UTF-8', 'apt-get install libprotobuf-dev -y', 'apt install lsof -y', 'wget -q http://ports.ubuntu.com/pool/universe/p/patchelf/patchelf_0.10-2build1_arm64.deb &&     dpkg -i patchelf_0.10-2build1_arm64.deb && rm -rf patchelf_0.10-2build1_arm64.deb', ""mkdir /var/run/sshd && echo 'root:root' | chpasswd && sed -ri 's/^PermitRootLogin\\s+.*/PermitRootLogin yes/' /etc/ssh/sshd_config && sed -ri 's/UsePAM yes/#UsePAM yes/g' /etc/ssh/sshd_config"", 'wget https://paddle-ci.gz.bcebos.com/ccache-3.7.9.tar.gz &&     tar xf ccache-3.7.9.tar.gz && mkdir /usr/local/ccache-3.7.9 && cd ccache-3.7.9 &&     ./configure -prefix=/usr/local/ccache-3.7.9 &&     make -j8 && make install && cd .. && rm -rf ccache-3.7.9* &&     ln -s /usr/local/ccache-3.7.9/bin/ccache /usr/local/bin/ccache', 'wget https://releases.llvm.org/3.8.0/clang+llvm-3.8.0-aarch64-linux-gnu.tar.xz &&     tar xf clang+llvm-3.8.0-aarch64-linux-gnu.tar.xz && cd clang+llvm-3.8.0-aarch64-linux-gnu &&     cp -r * /usr/local && cd .. && rm -rf clang+llvm-3.8.0-aarch64-linux-gnu*', 'groupadd HwHiAiUser &&     useradd -g HwHiAiUser -m -d /home/HwHiAiUser HwHiAiUser', 'mkdir -p /usr/local/Ascend/driver', 'chmod +x Ascend-cann-toolkit_${CANN_VERSION}_linux-aarch64.run &&     ./Ascend-cann-toolkit_${CANN_VERSION}_linux-aarch64.run --install --quiet &&     rm -rf Ascend-cann-toolkit_${CANN_VERSION}_linux-aarch64.run', 'chmod +x Ascend-cann-nnae_${CANN_VERSION}_linux-aarch64.run &&     ./Ascend-cann-nnae_${CANN_VERSION}_linux-aarch64.run --install --quiet &&     rm -rf Ascend-cann-nnae_${CANN_VERSION}_linux-aarch64.run', 'rm -rf /usr/local/Ascend/driver', 'umask 0022 &&     if [ ! -d ""/lib64"" ];     then         mkdir /lib64 && ln -sf /lib/ld-linux-aarch64.so.1 /lib64/ld-linux-aarch64.so.1;     fi', 'apt-get clean -y']"
PaddlePaddle/Paddle,latest,/tools/dockerfile/Dockerfile.npu_aarch64,WORKDIR,4,"['/opt', '/opt', '/opt', '/usr/local/Ascend']"
PaddlePaddle/Paddle,latest,/tools/dockerfile/Dockerfile.npu_aarch64,ENV,22,"['PATH=/opt/compiler/gcc-8.2/bin:$PATH', 'LD_LIBRARY_PATH=/opt/compiler/gcc-8.2/lib:/opt/compiler/gcc-8.2/lib64:$LD_LIBRARY_PATH', 'PATH=/opt/cmake-3.19/bin:${PATH}', 'PATH=/opt/conda/bin:${PATH}', 'GOROOT=/usr/local/go GOPATH=/root/gopath', 'PATH=${PATH}:${GOROOT}/bin:${GOPATH}/bin', 'LD_LIBRARY_PATH=/usr/local/Ascend/driver/lib64:$LD_LIBRARY_PATH', 'LD_LIBRARY_PATH=/usr/local/Ascend/driver/lib64/common:$LD_LIBRARY_PATH', 'LD_LIBRARY_PATH=/usr/local/Ascend/driver/lib64/driver:$LD_LIBRARY_PATH', 'PATH=/usr/local/Ascend/ascend-toolkit/latest/atc/bin:$PATH', 'LD_LIBRARY_PATH=/usr/local/Ascend/ascend-toolkit/latest/atc/lib64:$LD_LIBRARY_PATH', 'PYTHONPATH=/usr/local/Ascend/ascend-toolkit/latest/pyACL/python/site-packages/acl:$PYTHONPATH', 'PYTHONPATH=/usr/local/Ascend/ascend-toolkit/latest/atc/python/site-packages:$PYTHONPATH', 'PYTHONPATH=/usr/local/Ascend/ascend-toolkit/latest/toolkit/python/site-packages:$PYTHONPATH', 'TOOLCHAIN_HOME=/usr/local/Ascend/ascend-toolkit/latest/toolkit', 'PATH=/usr/local/Ascend/nnae/latest/fwkacllib/bin:$PATH', 'PATH=/usr/local/Ascend/nnae/latest/fwkacllib/ccec_compiler/bin:$PATH', 'LD_LIBRARY_PATH=/usr/local/Ascend/nnae/latest/fwkacllib/lib64:$LD_LIBRARY_PATH', 'PYTHONPATH=/usr/local/Ascend/nnae/latest/fwkacllib/python/site-packages:$PYTHONPATH', 'ASCEND_AICPU_PATH=/usr/local/Ascend/nnae/latest', 'ASCEND_OPP_PATH=/usr/local/Ascend/nnae/latest/opp', 'ASCEND_GLOBAL_LOG_LEVEL=3']"
PaddlePaddle/Paddle,latest,/tools/dockerfile/Dockerfile.npu_aarch64,ARG,2,"['CONDA_FILE=Miniconda3-py37_4.9.2-Linux-aarch64.sh', 'CANN_VERSION=5.0.2.alpha005']"
PaddlePaddle/Paddle,latest,/tools/dockerfile/Dockerfile.npu_aarch64,CMD,1,['source ~/.bashrc']
PaddlePaddle/Paddle,latest,/tools/dockerfile/Dockerfile.npu_aarch64,COPY,4,"['ascend_install.info /etc/ascend_install.info', 'version.info /usr/local/Ascend/driver/version.info', 'Ascend-cann-toolkit_${CANN_VERSION}_linux-aarch64.run /usr/local/Ascend/', 'Ascend-cann-nnae_${CANN_VERSION}_linux-aarch64.run /usr/local/Ascend/']"
PaddlePaddle/Paddle,latest,/tools/dockerfile/Dockerfile.npu_aarch64,EXPOSE,1,['22']
PaddlePaddle/Paddle,latest,/tools/dockerfile/Dockerfile.ubuntu,FROM,1,['nvidia/cuda:<baseimg>']
PaddlePaddle/Paddle,latest,/tools/dockerfile/Dockerfile.ubuntu,MAINTAINER,1,['PaddlePaddle Authors <paddle-dev@baidu.com>']
PaddlePaddle/Paddle,latest,/tools/dockerfile/Dockerfile.ubuntu,ARG,2,"['WITH_GPU', 'WITH_AVX']"
PaddlePaddle/Paddle,latest,/tools/dockerfile/Dockerfile.ubuntu,ENV,15,"['WITH_GPU=${WITH_GPU:-ON}', 'WITH_AVX=${WITH_AVX:-ON}', 'HOME /root', 'PATH=/home/cmake-3.16.0-Linux-x86_64/bin:$PATH', 'PATH=/usr/local/python3.7.0/include:${PATH}', 'PATH=/usr/local/python3.7.0/bin:${PATH}', 'LD_LIBRARY_PATH=/usr/local/python3.7.0/lib:${LD_LIBRARY_PATH}', 'CPLUS_INCLUDE_PATH=/usr/local/python3.7.0/include/python3.7:$CPLUS_INCLUDE_PATH', 'version=2.7.15', 'PATH=/usr/local/python2.7.15/include:${PATH}', 'PATH=/usr/local/python2.7.15/bin:${PATH}', 'LD_LIBRARY_PATH=/usr/local/python2.7.15/lib:${LD_LIBRARY_PATH}', 'CPLUS_INCLUDE_PATH=/usr/local/python2.7.15/include/python2.7:$CPLUS_INCLUDE_PATH', 'GOROOT=/usr/local/go GOPATH=/root/gopath', 'PATH=${PATH}:${GOROOT}/bin:${GOPATH}/bin']"
PaddlePaddle/Paddle,latest,/tools/dockerfile/Dockerfile.ubuntu,COPY,3,"['paddle/scripts/docker/root/ /root/', 'tools/dockerfile/build_scripts /build_scripts', './python/requirements.txt /root/']"
PaddlePaddle/Paddle,latest,/tools/dockerfile/Dockerfile.ubuntu,RUN,39,"['apt-get update &&     apt-get install -y make build-essential libssl-dev zlib1g-dev libbz2-dev     libreadline-dev libsqlite3-dev wget curl llvm libncurses5-dev libncursesw5-dev     xz-utils tk-dev libffi-dev liblzma-dev', 'apt-get update &&     apt-get install -y --allow-downgrades --allow-change-held-packages     patchelf git python-pip python-dev python-opencv openssh-server bison     wget unzip unrar tar xz-utils bzip2 gzip coreutils ntp     curl sed grep graphviz libjpeg-dev zlib1g-dev      python-matplotlib     automake locales clang-format swig      liblapack-dev liblapacke-dev     net-tools libtool module-init-tools &&     apt-get clean -y', 'wget https://github.com/koalaman/shellcheck/releases/download/v0.7.1/shellcheck-v0.7.1.linux.x86_64.tar.xz -O shellcheck-v0.7.1.linux.x86_64.tar.xz &&     tar -xf shellcheck-v0.7.1.linux.x86_64.tar.xz && cp  shellcheck-v0.7.1/shellcheck /usr/bin/shellcheck &&     rm -rf shellcheck-v0.7.1.linux.x86_64.tar.xz shellcheck-v0.7.1', 'wget -q https://cmake.org/files/v3.16/cmake-3.16.0-Linux-x86_64.tar.gz && tar -zxvf cmake-3.16.0-Linux-x86_64.tar.gz && rm cmake-3.16.0-Linux-x86_64.tar.gz', 'mkdir -p /root/python_build/ && wget -q https://www.sqlite.org/2018/sqlite-autoconf-3250300.tar.gz &&     tar -zxf sqlite-autoconf-3250300.tar.gz && cd sqlite-autoconf-3250300 &&     ./configure -prefix=/usr/local && make -j8 && make install && cd ../ && rm sqlite-autoconf-3250300.tar.gz &&     wget -q https://www.python.org/ftp/python/3.6.0/Python-3.6.0.tgz &&     tar -xzf Python-3.6.0.tgz && cd Python-3.6.0 &&     CFLAGS=""-Wformat"" ./configure --prefix=/usr/local/ --enable-shared > /dev/null &&     make -j8 > /dev/null && make altinstall > /dev/null && ldconfig', 'wget -q https://www.python.org/ftp/python/3.7.0/Python-3.7.0.tgz &&     tar -xzf Python-3.7.0.tgz && cd Python-3.7.0 &&     CFLAGS=""-Wformat"" ./configure --prefix=/usr/local/python3.7.0 --enable-shared > /dev/null &&     make -j8 > /dev/null && make altinstall > /dev/null && ldconfig', 'wget -q https://www.python.org/ftp/python/3.8.0/Python-3.8.0.tgz &&     tar -xzf Python-3.8.0.tgz && cd Python-3.8.0 &&     CFLAGS=""-Wformat"" ./configure --prefix=/usr/local/ --enable-shared > /dev/null &&     make -j8 > /dev/null && make altinstall > /dev/null && ldconfig', 'wget -q https://www.python.org/ftp/python/3.9.0/Python-3.9.0.tgz &&     tar -xzf Python-3.9.0.tgz && cd Python-3.9.0 &&     CFLAGS=""-Wformat"" ./configure --prefix=/usr/local/ --enable-shared > /dev/null &&     make -j8 > /dev/null && make altinstall > /dev/null && ldconfig', 'ln -sf /usr/local/python3.7.0/bin/python3.7 /usr/local/bin/python3 && ln -sf /usr/local/python3.7.0/bin/python3.7 /usr/bin/python3', 'rm -r /root/python_build', 'wget https://www.python.org/ftp/python/$version/Python-$version.tgz && tar -xvf Python-$version.tgz', './configure --enable-unicode=ucs4 --enable-shared CFLAGS=-fPIC --prefix=/usr/local/python2.7.15 && make && make install', 'echo ""export PATH=/usr/local/python2.7.15/include:${PATH}"" >> ~/.bashrc && echo ""export PATH=/usr/local/python2.7.15/bin:${PATH}"" >> ~/.bashrc && echo ""export LD_LIBRARY_PATH=/usr/local/python2.7.15/lib:${LD_LIBRARY_PATH}"" >> ~/.bashrc && echo ""export CPLUS_INCLUDE_PATH=/usr/local/python2.7.15/include/python2.7:$CPLUS_INCLUDE_PATH"" >> ~/.bashrc', 'mv /usr/bin/python /usr/bin/python.bak && ln -s /usr/local/python2.7.15/bin/python2.7 /usr/local/bin/python && ln -s /usr/local/python2.7.15/bin/python2.7 /usr/bin/python', 'wget https://files.pythonhosted.org/packages/b0/d1/8acb42f391cba52e35b131e442e80deffbb8d0676b93261d761b1f0ef8fb/setuptools-40.6.2.zip && apt-get -y install unzip && unzip setuptools-40.6.2.zip', 'python setup.py build && python setup.py install', 'python3.9 -m pip uninstall -y pip setuptools &&   python3.8 -m pip uninstall -y pip setuptools &&   python3.7 -m pip uninstall -y pip setuptools &&   python3.6 -m pip uninstall -y pip setuptools', 'wget https://files.pythonhosted.org/packages/a7/e0/30642b9c2df516506d40b563b0cbd080c49c6b3f11a70b4c7a670f13a78b/setuptools-50.3.2.zip && apt-get -y install unzip && unzip setuptools-50.3.2.zip', 'python3.9 setup.py build && python3.9 setup.py install &&   python3.8 setup.py build && python3.8 setup.py install &&   python3.7 setup.py build && python3.7 setup.py install &&   python3.6 setup.py build && python3.6 setup.py install', 'wget https://files.pythonhosted.org/packages/28/af/2c76c8aa46ccdf7578b83d97a11a2d1858794d4be4a1610ade0d30182e8b/pip-20.0.1.tar.gz && tar -zxvf pip-20.0.1.tar.gz', 'python setup.py install &&   python3.9 setup.py install &&   python3.8 setup.py install &&   python3.7 setup.py install &&   python3.6 setup.py install', 'rm Python-$version.tgz setuptools-40.6.2.zip setuptools-50.3.2.zip pip-20.0.1.tar.gz &&     rm -r Python-$version setuptools-40.6.2 setuptools-50.3.2 pip-20.0.1', 'wget -qO- https://paddle-ci.gz.bcebos.com/go1.15.12.linux-amd64.tar.gz |     tar -xz -C /usr/local &&     mkdir /root/gopath &&     mkdir /root/gopath/bin &&     mkdir /root/gopath/src', 'curl -s -q https://glide.sh/get | sh', 'bash /build_scripts/install_trt.sh &&     bash /build_scripts/install_nccl2.sh', 'rm -rf /build_scripts', 'git config --global credential.helper store', 'localedef -i en_US -f UTF-8 en_US.UTF-8', 'pip3.6 --no-cache-dir install -U wheel py-cpuinfo==5.0.0 &&     pip3.6 --no-cache-dir install -U docopt PyYAML sphinx==1.5.6 &&     pip3.6 --no-cache-dir install sphinx-rtd-theme==0.1.9 recommonmark &&     pip3.7 --no-cache-dir install -U wheel py-cpuinfo==5.0.0 &&     pip3.7 --no-cache-dir install -U docopt PyYAML sphinx==1.5.6 &&     pip3.7 --no-cache-dir install sphinx-rtd-theme==0.1.9 recommonmark &&     pip3.8 --no-cache-dir install -U wheel py-cpuinfo==5.0.0 &&     pip3.8 --no-cache-dir install -U docopt PyYAML sphinx==1.5.6 &&     pip3.8 --no-cache-dir install sphinx-rtd-theme==0.1.9 recommonmark &&     pip3.9 --no-cache-dir install -U wheel py-cpuinfo==5.0.0 &&     pip3.9 --no-cache-dir install -U docopt PyYAML sphinx==1.5.6 &&     pip3.9 --no-cache-dir install sphinx-rtd-theme==0.1.9 recommonmark &&     pip --no-cache-dir install -U docopt PyYAML sphinx==1.5.6 &&     pip --no-cache-dir install sphinx-rtd-theme==0.1.9 recommonmark', ""pip3.6 --no-cache-dir install 'pre-commit==1.10.4' 'ipython==5.3.0' &&     pip3.6 --no-cache-dir install 'ipykernel==4.6.0' 'jupyter==1.0.0' &&     pip3.7 --no-cache-dir install 'pre-commit==1.10.4' 'ipython==5.3.0' &&     pip3.7 --no-cache-dir install 'ipykernel==4.6.0' 'jupyter==1.0.0' &&     pip3.8 --no-cache-dir install 'pre-commit==1.10.4' 'ipython==5.3.0' &&     pip3.8 --no-cache-dir install 'ipykernel==4.6.0' 'jupyter==1.0.0' &&     pip3.9 --no-cache-dir install 'pre-commit==1.10.4' 'ipython==5.3.0' &&     pip3.9 --no-cache-dir install 'ipykernel==4.6.0' 'jupyter==1.0.0' &&     pip --no-cache-dir install 'pre-commit==1.10.4' 'ipython==5.3.0' &&     pip --no-cache-dir install 'ipykernel==4.6.0' 'jupyter==1.0.0'"", 'pip3.6 --no-cache-dir install pylint pytest astroid isort &&     pip3.7 --no-cache-dir install pylint pytest astroid isort &&     pip3.8 --no-cache-dir install pylint pytest astroid isort &&     pip3.9 --no-cache-dir install pylint pytest astroid isort &&     pip --no-cache-dir install pylint pytest astroid isort', 'pip3.6 --no-cache-dir install coverage &&     pip3.7 --no-cache-dir install coverage &&     pip3.8 --no-cache-dir install coverage &&     pip3.9 --no-cache-dir install coverage &&     pip --no-cache-dir install coverage', 'pip3.6 --no-cache-dir install -r /root/requirements.txt &&     pip3.7 --no-cache-dir install -r /root/requirements.txt &&     pip3.8 --no-cache-dir install -r /root/requirements.txt &&     pip3.9 --no-cache-dir install -r /root/requirements.txt &&     pip --no-cache-dir install -r /root/requirements.txt', 'apt-get install -y libssl-dev libffi-dev && apt-get clean -y &&     pip3.6 install --upgrade pip==20.3.3 &&     pip3.7 install --upgrade pip &&     pip3.8 install --upgrade pip &&     pip3.9 install --upgrade pip &&     pip3.6 --no-cache-dir install certifi urllib3[secure] &&     pip3.7 --no-cache-dir install certifi urllib3[secure] &&     pip3.8 --no-cache-dir install certifi urllib3[secure] &&     pip3.9 --no-cache-dir install certifi urllib3[secure] &&     pip --no-cache-dir install certifi urllib3[secure]', 'wget -q https://launchpad.net/ubuntu/+archive/primary/+sourcefiles/binutils/2.27-9ubuntu1/binutils_2.27.orig.tar.gz &&     tar -xzf binutils_2.27.orig.tar.gz &&     cd binutils-2.27 &&     ./configure && make -j && make install && cd .. && rm -rf binutils-2.27 binutils_2.27.orig.tar.gz', 'apt-get install libprotobuf-dev -y', 'wget -q https://paddle-ci.cdn.bcebos.com/patchelf_0.10-2_amd64.deb &&     dpkg -i patchelf_0.10-2_amd64.deb', ""mkdir /var/run/sshd && echo 'root:root' | chpasswd && sed -ri 's/^PermitRootLogin\\s+.*/PermitRootLogin yes/' /etc/ssh/sshd_config && sed -ri 's/UsePAM yes/#UsePAM yes/g' /etc/ssh/sshd_config"", 'wget https://paddle-ci.gz.bcebos.com/ccache-3.7.9.tar.gz &&     tar xf ccache-3.7.9.tar.gz && mkdir /usr/local/ccache-3.7.9 && cd ccache-3.7.9 &&     ./configure -prefix=/usr/local/ccache-3.7.9 &&     make -j8 && make install &&     ln -s /usr/local/ccache-3.7.9/bin/ccache /usr/local/bin/ccache']"
PaddlePaddle/Paddle,latest,/tools/dockerfile/Dockerfile.ubuntu,<INSTALL_GCC>,1,['']
PaddlePaddle/Paddle,latest,/tools/dockerfile/Dockerfile.ubuntu,WORKDIR,11,"['/home', '/home', '/home/Python-$version', '/home', '/home/setuptools-40.6.2', '/home', '/home/setuptools-50.3.2', '/home', 'pip-20.0.1', '/home', '/home']"
PaddlePaddle/Paddle,latest,/tools/dockerfile/Dockerfile.ubuntu,CMD,1,['source ~/.bashrc']
PaddlePaddle/Paddle,latest,/tools/dockerfile/Dockerfile.ubuntu,EXPOSE,1,['22']
PaddlePaddle/Paddle,latest,/paddle/scripts/musl_build/Dockerfile,ARG,5,"['PYTHON_VERSION=3.7', 'package', 'requirement', 'requirement_ut', 'pip_index']"
PaddlePaddle/Paddle,latest,/paddle/scripts/musl_build/Dockerfile,FROM,1,['python:${PYTHON_VERSION}-alpine3.11']
PaddlePaddle/Paddle,latest,/paddle/scripts/musl_build/Dockerfile,USER,1,['root']
PaddlePaddle/Paddle,latest,/paddle/scripts/musl_build/Dockerfile,WORKDIR,1,['/root']
PaddlePaddle/Paddle,latest,/paddle/scripts/musl_build/Dockerfile,VOLUME,2,"['/root/.ccache', '/root/.cache']"
PaddlePaddle/Paddle,latest,/paddle/scripts/musl_build/Dockerfile,RUN,4,"['apk update', 'apk add --no-cache     g++ gfortran make cmake patchelf git ccache', 'if [ ""$package"" ]; then         set -e;         pkgs=$(echo ""$package"" | base64 -d -);         echo "">>> decode package:"";         echo ""$pkgs"";         for nm in $pkgs; do             echo "">>> intall package: $nm"";             apk add --no-cache --force-overwrite ""$nm"";         done;     fi', 'if [ ""$requirement"" ]; then         set -e;         echo ""$requirement"" | base64 -d - > ""requirement.txt"";         echo "">>> decode requirement:"";         cat ""requirement.txt"";         echo "">>> install python requirement:"";         PIP_ARGS=""--timeout 300"";         if [ ""$pip_index"" ]; then             PIP_DOMAIN=$(echo ""$pip_index"" | awk -F/ \'{print $3}\');             PIP_ARGS=""$PIP_ARGS -i $pip_index --trusted-host $PIP_DOMAIN"";             echo "">>> pip index: $pip_index"";         fi;         pip3 install $PIP_ARGS -r ""requirement.txt"";         rm -f ""requirement.txt"";         if [ ""$requirement_ut"" ]; then             echo ""$requirement_ut"" | base64 -d - > ""requirement_ut.txt"";             cat ""requirement_ut.txt"";             pip3 install $PIP_ARGS -r ""requirement_ut.txt"";             rm -f ""requirement_ut.txt"";         fi;     fi']"
PaddlePaddle/Paddle,latest,/paddle/scripts/musl_build/Dockerfile,ENTRYPOINT,1,"['[ ""/bin/sh"" ]']"
PaddlePaddle/Paddle,latest,/r/Dockerfile,FROM,1,['ubuntu:18.04']
PaddlePaddle/Paddle,latest,/r/Dockerfile,MAINTAINER,1,['PaddlePaddle Authors <paddle-dev@baidu.com>']
PaddlePaddle/Paddle,latest,/r/Dockerfile,WORKDIR,1,['/workspace']
PaddlePaddle/Paddle,latest,/r/Dockerfile,ENV,2,"['PATH /opt/python3/bin:/root/.local/bin:$PATH', 'LD_LIBRARY_PATH $LD_LIBRARY_PATH:/opt/python3/lib']"
PaddlePaddle/Paddle,latest,/r/Dockerfile,ADD,1,['https://mirrors.tuna.tsinghua.edu.cn/anaconda/miniconda/Miniconda3-4.7.12.1-Linux-x86_64.sh miniconda3.sh']
PaddlePaddle/Paddle,latest,/r/Dockerfile,RUN,7,"['/bin/bash miniconda3.sh -b -p /opt/python3/ &&     rm -f miniconda3.sh', 'mkdir -p ~/.pip &&     echo ""[global]"" >> ~/.pip/pip.conf &&     echo ""trusted-host =  mirrors.aliyun.com"" >> ~/.pip/pip.conf &&     echo ""index-url = https://mirrors.aliyun.com/pypi/simple"" >> ~/.pip/pip.conf', 'echo ""channels:"" >> ~/.condarc &&     echo ""  - conda-forge"" >> ~/.condarc &&     echo ""  - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main/"" >> ~/.condarc &&     echo ""  - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/"" >> ~/.condarc &&     echo ""  - defaults"" >> ~/.condarc &&     echo ""custom_channels:"" >> ~/.condarc &&     echo ""  conda-forge: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud"" >> ~/.condarc &&     echo ""  msys2: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud"" >> ~/.condarc &&     echo ""  bioconda: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud"" >> ~/.condarc &&     echo ""  menpo: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud"" >> ~/.condarc &&     echo ""  pytorch: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud"" >> ~/.condarc &&     echo ""  simpleitk: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud"" >> ~/.condarc &&     echo ""show_channel_urls: true"" >> ~/.condarc &&     echo ""channel_priority: strict"" >> ~/.condarc', 'conda install -y r -c conda-forge', '/opt/python3/bin/python -m pip install     https://paddle-wheel.bj.bcebos.com/0.0.0-cpu-mkl/paddlepaddle-0.0.0-cp37-cp37m-linux_x86_64.whl', 'Rscript -e \'install.packages(""reticulate"", repos=""https://cran.rstudio.com"")\'', 'cd example &&     curl -O https://paddle-inference-dist.cdn.bcebos.com/mobilenet-test-model-data.tar.gz &&     tar -zxvf mobilenet-test-model-data.tar.gz && rm mobilenet-test-model-data.tar.gz']"
PaddlePaddle/Paddle,latest,/r/Dockerfile,COPY,1,['example example']
RasaHQ/rasa,latest,/Dockerfile,ARG,3,"['IMAGE_BASE_NAME', 'BASE_IMAGE_HASH', 'BASE_BUILDER_IMAGE_HASH']"
RasaHQ/rasa,latest,/Dockerfile,FROM,2,"['${IMAGE_BASE_NAME}:base-builder-${BASE_BUILDER_IMAGE_HASH} as builder', '${IMAGE_BASE_NAME}:base-${BASE_IMAGE_HASH} as runner']"
RasaHQ/rasa,latest,/Dockerfile,COPY,2,"['. /build/', '--from=builder /opt/venv /opt/venv']"
RasaHQ/rasa,latest,/Dockerfile,WORKDIR,2,"['/build', '/app']"
RasaHQ/rasa,latest,/Dockerfile,RUN,2,"['python -m venv /opt/venv &&   . /opt/venv/bin/activate &&   pip install --no-cache-dir -U ""pip==21.*"" &&   poetry install --no-dev --no-root --no-interaction &&   poetry build -f wheel -n &&   pip install --no-deps dist/*.whl &&   rm -rf dist *.egg-info', 'chgrp -R 0 /app && chmod -R g=u /app && chmod o+wr /app']"
RasaHQ/rasa,latest,/Dockerfile,ENV,2,"['PATH=""/opt/venv/bin:$PATH""', 'HOME=/app']"
RasaHQ/rasa,latest,/Dockerfile,USER,1,['1001']
RasaHQ/rasa,latest,/Dockerfile,VOLUME,1,['/tmp']
RasaHQ/rasa,latest,/Dockerfile,SHELL,1,"['[""/bin/bash"", ""-o"", ""pipefail"", ""-c""]']"
RasaHQ/rasa,latest,/Dockerfile,EXPOSE,1,['5005']
RasaHQ/rasa,latest,/Dockerfile,ENTRYPOINT,1,"['[""rasa""]']"
RasaHQ/rasa,latest,/Dockerfile,CMD,1,"['[""--help""]']"
RasaHQ/rasa,latest,/docker/Dockerfile.full,ARG,4,"['IMAGE_BASE_NAME', 'BASE_IMAGE_HASH', 'BASE_MITIE_IMAGE_HASH', 'BASE_BUILDER_IMAGE_HASH']"
RasaHQ/rasa,latest,/docker/Dockerfile.full,FROM,3,"['${IMAGE_BASE_NAME}:base-mitie-${BASE_MITIE_IMAGE_HASH} as mitie', '${IMAGE_BASE_NAME}:base-builder-${BASE_BUILDER_IMAGE_HASH} as builder', '${IMAGE_BASE_NAME}:base-${BASE_IMAGE_HASH} as runner']"
RasaHQ/rasa,latest,/docker/Dockerfile.full,COPY,4,"['--from=mitie /build/data /build/data', '. /build/', 'docker/configs/config_pretrained_embeddings_spacy_en_duckling.yml /build/config.yml', '--from=builder /opt/venv /opt/venv']"
RasaHQ/rasa,latest,/docker/Dockerfile.full,WORKDIR,2,"['/build', '/app']"
RasaHQ/rasa,latest,/docker/Dockerfile.full,RUN,5,"['python -m venv /opt/venv &&   . /opt/venv/bin/activate &&   pip install --no-cache-dir -U ""pip==21.*""', '. /opt/venv/bin/activate && poetry install --extras full --no-dev --no-root --no-interaction', '. /opt/venv/bin/activate && make install-mitie &&   poetry build -f wheel -n &&   pip install --no-deps dist/*.whl &&   rm -rf dist *.egg-info', 'python -m spacy download en_core_web_md &&     python -m spacy download de_core_news_sm &&     python -m spacy link en_core_web_md en &&     python -m spacy link de_core_news_sm de', 'chgrp -R 0 /app && chmod -R g=u /app && chmod o+wr /app']"
RasaHQ/rasa,latest,/docker/Dockerfile.full,ENV,3,"['PATH=""/opt/venv/bin:$PATH""', 'PATH=""/opt/venv/bin:$PATH""', 'HOME=/app']"
RasaHQ/rasa,latest,/docker/Dockerfile.full,USER,1,['1001']
RasaHQ/rasa,latest,/docker/Dockerfile.full,VOLUME,1,['/tmp']
RasaHQ/rasa,latest,/docker/Dockerfile.full,SHELL,1,"['[""/bin/bash"", ""-o"", ""pipefail"", ""-c""]']"
RasaHQ/rasa,latest,/docker/Dockerfile.full,EXPOSE,1,['5005']
RasaHQ/rasa,latest,/docker/Dockerfile.full,ENTRYPOINT,1,"['[""rasa""]']"
RasaHQ/rasa,latest,/docker/Dockerfile.full,CMD,1,"['[""--help""]']"
RasaHQ/rasa,latest,/docker/Dockerfile.pretrained_embeddings_mitie_en,ARG,4,"['IMAGE_BASE_NAME', 'BASE_IMAGE_HASH', 'BASE_MITIE_IMAGE_HASH', 'BASE_BUILDER_IMAGE_HASH']"
RasaHQ/rasa,latest,/docker/Dockerfile.pretrained_embeddings_mitie_en,FROM,3,"['${IMAGE_BASE_NAME}:base-mitie-${BASE_MITIE_IMAGE_HASH} as mitie', '${IMAGE_BASE_NAME}:base-builder-${BASE_BUILDER_IMAGE_HASH} as builder', '${IMAGE_BASE_NAME}:base-${BASE_IMAGE_HASH} as runner']"
RasaHQ/rasa,latest,/docker/Dockerfile.pretrained_embeddings_mitie_en,COPY,4,"['--from=mitie /build/data /build/data', '. /build/', 'docker/configs/config_pretrained_embeddings_mitie.yml /build/config.yml', '--from=builder /opt/venv /opt/venv']"
RasaHQ/rasa,latest,/docker/Dockerfile.pretrained_embeddings_mitie_en,WORKDIR,2,"['/build', '/app']"
RasaHQ/rasa,latest,/docker/Dockerfile.pretrained_embeddings_mitie_en,RUN,4,"['python -m venv /opt/venv &&   . /opt/venv/bin/activate && pip install --no-cache-dir -U ""pip==21.*""', '. /opt/venv/bin/activate && poetry install --no-dev --no-root --no-interaction', '. /opt/venv/bin/activate && make install-mitie  &&   poetry build -f wheel -n &&   pip install --no-deps dist/*.whl &&   rm -rf dist *.egg-info', 'chgrp -R 0 /app && chmod -R g=u /app && chmod o+wr /app']"
RasaHQ/rasa,latest,/docker/Dockerfile.pretrained_embeddings_mitie_en,ENV,2,"['PATH=""/opt/venv/bin:$PATH""', 'HOME=/app']"
RasaHQ/rasa,latest,/docker/Dockerfile.pretrained_embeddings_mitie_en,USER,1,['1001']
RasaHQ/rasa,latest,/docker/Dockerfile.pretrained_embeddings_mitie_en,VOLUME,1,['/tmp']
RasaHQ/rasa,latest,/docker/Dockerfile.pretrained_embeddings_mitie_en,SHELL,1,"['[""/bin/bash"", ""-o"", ""pipefail"", ""-c""]']"
RasaHQ/rasa,latest,/docker/Dockerfile.pretrained_embeddings_mitie_en,EXPOSE,1,['5005']
RasaHQ/rasa,latest,/docker/Dockerfile.pretrained_embeddings_mitie_en,ENTRYPOINT,1,"['[""rasa""]']"
RasaHQ/rasa,latest,/docker/Dockerfile.pretrained_embeddings_mitie_en,CMD,1,"['[""--help""]']"
RasaHQ/rasa,latest,/docker/Dockerfile.base-builder,ARG,2,"['IMAGE_BASE_NAME', 'POETRY_VERSION']"
RasaHQ/rasa,latest,/docker/Dockerfile.base-builder,FROM,1,['${IMAGE_BASE_NAME}:base-poetry-${POETRY_VERSION}']
RasaHQ/rasa,latest,/docker/Dockerfile.base-builder,RUN,2,"['apt-get update -qq &&   apt-get install -y --no-install-recommends   build-essential   wget   openssh-client   graphviz-dev   pkg-config   git-core   openssl   libssl-dev   libffi7   libffi-dev   libpng-dev   && apt-get autoremove -y', 'apt-get update && apt-get dist-upgrade -y --no-install-recommends']"
RasaHQ/rasa,latest,/docker/Dockerfile.base-mitie,FROM,1,['alpine:latest']
RasaHQ/rasa,latest,/docker/Dockerfile.base-mitie,RUN,2,"['apk add --update make wget', 'make prepare-mitie']"
RasaHQ/rasa,latest,/docker/Dockerfile.base-mitie,WORKDIR,1,['/build']
RasaHQ/rasa,latest,/docker/Dockerfile.base-mitie,COPY,1,['./Makefile .']
RasaHQ/rasa,latest,/docker/Dockerfile.pretrained_embeddings_spacy_de,ARG,3,"['IMAGE_BASE_NAME', 'BASE_IMAGE_HASH', 'BASE_BUILDER_IMAGE_HASH']"
RasaHQ/rasa,latest,/docker/Dockerfile.pretrained_embeddings_spacy_de,FROM,2,"['${IMAGE_BASE_NAME}:base-builder-${BASE_BUILDER_IMAGE_HASH} as builder', '${IMAGE_BASE_NAME}:base-${BASE_IMAGE_HASH} as runner']"
RasaHQ/rasa,latest,/docker/Dockerfile.pretrained_embeddings_spacy_de,COPY,3,"['. /build/', 'docker/configs/config_pretrained_embeddings_spacy_de.yml /build/config.yml', '--from=builder /opt/venv /opt/venv']"
RasaHQ/rasa,latest,/docker/Dockerfile.pretrained_embeddings_spacy_de,WORKDIR,2,"['/build', '/app']"
RasaHQ/rasa,latest,/docker/Dockerfile.pretrained_embeddings_spacy_de,RUN,5,"['python -m venv /opt/venv &&   . /opt/venv/bin/activate && pip install --no-cache-dir -U ""pip==21.*""', '. /opt/venv/bin/activate && poetry install --extras spacy --no-dev --no-root --no-interaction', '. /opt/venv/bin/activate && poetry build -f wheel -n &&   pip install --no-deps dist/*.whl &&   rm -rf dist *.egg-info', 'python -m spacy download de_core_news_sm', 'chgrp -R 0 /app && chmod -R g=u /app && chmod o+wr /app']"
RasaHQ/rasa,latest,/docker/Dockerfile.pretrained_embeddings_spacy_de,ENV,3,"['PATH=""/opt/venv/bin:$PATH""', 'PATH=""/opt/venv/bin:$PATH""', 'HOME=/app']"
RasaHQ/rasa,latest,/docker/Dockerfile.pretrained_embeddings_spacy_de,USER,1,['1001']
RasaHQ/rasa,latest,/docker/Dockerfile.pretrained_embeddings_spacy_de,VOLUME,1,['/tmp']
RasaHQ/rasa,latest,/docker/Dockerfile.pretrained_embeddings_spacy_de,SHELL,1,"['[""/bin/bash"", ""-o"", ""pipefail"", ""-c""]']"
RasaHQ/rasa,latest,/docker/Dockerfile.pretrained_embeddings_spacy_de,EXPOSE,1,['5005']
RasaHQ/rasa,latest,/docker/Dockerfile.pretrained_embeddings_spacy_de,ENTRYPOINT,1,"['[""rasa""]']"
RasaHQ/rasa,latest,/docker/Dockerfile.pretrained_embeddings_spacy_de,CMD,1,"['[""--help""]']"
RasaHQ/rasa,latest,/docker/Dockerfile.pretrained_embeddings_spacy_en,ARG,3,"['IMAGE_BASE_NAME', 'BASE_IMAGE_HASH', 'BASE_BUILDER_IMAGE_HASH']"
RasaHQ/rasa,latest,/docker/Dockerfile.pretrained_embeddings_spacy_en,FROM,2,"['${IMAGE_BASE_NAME}:base-builder-${BASE_BUILDER_IMAGE_HASH} as builder', '${IMAGE_BASE_NAME}:base-${BASE_IMAGE_HASH} as runner']"
RasaHQ/rasa,latest,/docker/Dockerfile.pretrained_embeddings_spacy_en,COPY,3,"['. /build/', 'docker/configs/config_pretrained_embeddings_spacy_en.yml /build/config.yml', '--from=builder /opt/venv /opt/venv']"
RasaHQ/rasa,latest,/docker/Dockerfile.pretrained_embeddings_spacy_en,WORKDIR,2,"['/build', '/app']"
RasaHQ/rasa,latest,/docker/Dockerfile.pretrained_embeddings_spacy_en,RUN,5,"['python -m venv /opt/venv &&   . /opt/venv/bin/activate && pip install --no-cache-dir -U ""pip==21.*""', '. /opt/venv/bin/activate && poetry install --extras spacy --no-dev --no-root --no-interaction', '. /opt/venv/bin/activate && poetry build -f wheel -n &&   pip install --no-deps dist/*.whl &&   rm -rf dist *.egg-info', 'python -m spacy download en_core_web_md', 'chgrp -R 0 /app && chmod -R g=u /app && chmod o+wr /app']"
RasaHQ/rasa,latest,/docker/Dockerfile.pretrained_embeddings_spacy_en,ENV,3,"['PATH=""/opt/venv/bin:$PATH""', 'PATH=""/opt/venv/bin:$PATH""', 'HOME=/app']"
RasaHQ/rasa,latest,/docker/Dockerfile.pretrained_embeddings_spacy_en,USER,1,['1001']
RasaHQ/rasa,latest,/docker/Dockerfile.pretrained_embeddings_spacy_en,VOLUME,1,['/tmp']
RasaHQ/rasa,latest,/docker/Dockerfile.pretrained_embeddings_spacy_en,SHELL,1,"['[""/bin/bash"", ""-o"", ""pipefail"", ""-c""]']"
RasaHQ/rasa,latest,/docker/Dockerfile.pretrained_embeddings_spacy_en,EXPOSE,1,['5005']
RasaHQ/rasa,latest,/docker/Dockerfile.pretrained_embeddings_spacy_en,ENTRYPOINT,1,"['[""rasa""]']"
RasaHQ/rasa,latest,/docker/Dockerfile.pretrained_embeddings_spacy_en,CMD,1,"['[""--help""]']"
RasaHQ/rasa,latest,/docker/Dockerfile.base,FROM,1,['ubuntu:20.04']
RasaHQ/rasa,latest,/docker/Dockerfile.base,ENV,1,"['DEBIAN_FRONTEND=""noninteractive""']"
RasaHQ/rasa,latest,/docker/Dockerfile.base,RUN,4,"['apt-get update -qq &&   apt-get install -y --no-install-recommends   python3   python3-venv   python3-pip   python3-dev   libpq-dev   curl   && apt-get autoremove -y', 'apt-get update && apt-get dist-upgrade -y --no-install-recommends', 'update-alternatives --install /usr/bin/python python /usr/bin/python3 100    && update-alternatives --install /usr/bin/pip pip /usr/bin/pip3 100', 'useradd -rm -d /app -s /sbin/nologin -g root -u 1001 rasa && groupadd -g 1001 rasa']"
RasaHQ/rasa,latest,/docker/Dockerfile.base-poetry,ARG,3,"['IMAGE_BASE_NAME', 'BASE_IMAGE_HASH', 'POETRY_VERSION']"
RasaHQ/rasa,latest,/docker/Dockerfile.base-poetry,FROM,1,['${IMAGE_BASE_NAME}:base-${BASE_IMAGE_HASH}']
RasaHQ/rasa,latest,/docker/Dockerfile.base-poetry,ENV,2,"['POETRY_VERSION ${POETRY_VERSION}', 'PATH ""/root/.poetry/bin:${PATH}""']"
RasaHQ/rasa,latest,/docker/Dockerfile.base-poetry,RUN,1,['curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python']
mozilla/DeepSpeech,latest,/Dockerfile.train.tmpl,FROM,1,['tensorflow/tensorflow:1.15.4-gpu-py3']
mozilla/DeepSpeech,latest,/Dockerfile.train.tmpl,ENV,1,['DEBIAN_FRONTEND=noninteractive     DEEPSPEECH_REPO=#DEEPSPEECH_REPO#     DEEPSPEECH_SHA=#DEEPSPEECH_SHA#']
mozilla/DeepSpeech,latest,/Dockerfile.train.tmpl,RUN,6,"['apt-get update && apt-get install -y --no-install-recommends     apt-utils     bash-completion     build-essential     cmake     curl     git     libboost-all-dev     libbz2-dev     liblzma-dev     locales     python3-venv     unzip     xz-utils     wget &&     apt-get purge -y python3-xdg &&     apt-get install -y --no-install-recommends libopus0 libsndfile1 &&     rm -rf /var/lib/apt/lists/*', 'git clone $DEEPSPEECH_REPO DeepSpeech &&     cd /DeepSpeech && git fetch origin $DEEPSPEECH_SHA && git checkout $DEEPSPEECH_SHA &&     git submodule sync kenlm/ && git submodule update --init kenlm/', 'cd /DeepSpeech/native_client/ctcdecode && make NUM_PROCESSES=$(nproc) bindings &&     pip3 install --upgrade dist/*.whl', 'cd /DeepSpeech && pip3 install --upgrade pip==20.2.2 wheel==0.34.2 setuptools==49.6.0 &&     DS_NODECODER=y DS_NOTENSORFLOW=y pip3 install --upgrade -e . &&     curl -vsSL https://github.com/mozilla/DeepSpeech/releases/download/v0.9.3/linux.amd64.convert_graphdef_memmapped_format.xz | xz -d > convert_graphdef_memmapped_format &&     chmod +x convert_graphdef_memmapped_format', 'wget -O - https://gitlab.com/libeigen/eigen/-/archive/3.3.8/eigen-3.3.8.tar.bz2 | tar xj &&     mkdir -p build &&     cd build &&     EIGEN3_ROOT=/DeepSpeech/kenlm/eigen-3.3.8 cmake .. &&     make -j $(nproc)', './bin/run-ldc93s1.sh']"
mozilla/DeepSpeech,latest,/Dockerfile.train.tmpl,WORKDIR,3,"['/', '/DeepSpeech/kenlm', '/DeepSpeech']"
mozilla/DeepSpeech,latest,/Dockerfile.build.tmpl,FROM,1,['nvidia/cuda:10.1-cudnn7-devel-ubuntu18.04']
mozilla/DeepSpeech,latest,/Dockerfile.build.tmpl,ENV,2,"['DEEPSPEECH_REPO=#DEEPSPEECH_REPO#     DEEPSPEECH_SHA=#DEEPSPEECH_SHA#', 'TF_NEED_ROCM=0     TF_NEED_OPENCL_SYCL=0     TF_NEED_OPENCL=0     TF_NEED_CUDA=1     TF_CUDA_PATHS=""/usr,/usr/local/cuda-10.1,/usr/lib/x86_64-linux-gnu/""     TF_CUDA_VERSION=10.1     TF_CUDNN_VERSION=7.6     TF_CUDA_COMPUTE_CAPABILITIES=6.0     TF_NCCL_VERSION=2.8     TF_BUILD_CONTAINER_TYPE=GPU     TF_BUILD_OPTIONS=OPT     TF_BUILD_DISABLE_GCP=1     TF_BUILD_ENABLE_XLA=0     TF_BUILD_PYTHON_VERSION=PYTHON3     TF_BUILD_IS_OPT=OPT     TF_BUILD_IS_PIP=PIP     TFDIR=/DeepSpeech/tensorflow     PYTHONIOENCODING=UTF-8     CC_OPT_FLAGS=""-mavx -mavx2 -msse4.1 -msse4.2 -mfma""     TF_NEED_GCP=0     TF_NEED_HDFS=0     TF_NEED_JEMALLOC=1     TF_NEED_OPENCL=0     TF_CUDA_CLANG=0     TF_NEED_MKL=0     TF_ENABLE_XLA=0     TF_NEED_AWS=0     TF_NEED_KAFKA=0     TF_NEED_NGRAPH=0     TF_DOWNLOAD_CLANG=0     TF_NEED_TENSORRT=0     TF_NEED_GDR=0     TF_NEED_VERBS=0     TF_NEED_OPENCL_SYCL=0     PYTHON_BIN_PATH=/usr/bin/python3.6     PYTHON_LIB_PATH=/usr/local/lib/python3.6/dist-packages']"
mozilla/DeepSpeech,latest,/Dockerfile.build.tmpl,RUN,6,"['apt-get update && apt-get install -y --no-install-recommends     apt-utils     bash-completion     build-essential     ca-certificates     cmake     curl     g++     gcc     git     libbz2-dev     libboost-all-dev     libgsm1-dev     libltdl-dev     liblzma-dev     libmagic-dev     libpng-dev     libsox-fmt-mp3     libsox-dev     locales     openjdk-8-jdk     pkg-config     python3     python3-dev     python3-pip     python3-wheel     python3-numpy     sox     unzip     wget     zlib1g-dev;     update-alternatives --install /usr/bin/pip pip /usr/bin/pip3 1 &&     update-alternatives --install /usr/bin/python python /usr/bin/python3 1;     curl -LO ""https://github.com/bazelbuild/bazel/releases/download/3.1.0/bazel_3.1.0-linux-x86_64.deb"" && dpkg -i bazel_*.deb;     rm -rf /var/lib/apt/lists/* bazel_*.deb', 'echo ""startup --batch"" >>/etc/bazel.bazelrc;     echo ""build --spawn_strategy=standalone --genrule_strategy=standalone"" >> /etc/bazel.bazelrc', 'git clone --recursive $DEEPSPEECH_REPO DeepSpeech &&     cd /DeepSpeech &&     git fetch origin $DEEPSPEECH_SHA && git checkout $DEEPSPEECH_SHA;     git submodule sync tensorflow/ && git submodule update --init tensorflow/;     git submodule sync kenlm/ && git submodule update --init kenlm/', 'cd /DeepSpeech/tensorflow && ./configure && bazel build \t--workspace_status_command=""bash native_client/bazel_workspace_status_cmd.sh"" \t--config=monolithic \t--config=cuda \t-c opt \t--copt=-O3 \t--copt=""-D_GLIBCXX_USE_CXX11_ABI=0"" \t--copt=-mtune=generic \t--copt=-march=x86-64 \t--copt=-msse \t--copt=-msse2 \t--copt=-msse3 \t--copt=-msse4.1 \t--copt=-msse4.2 \t--copt=-mavx \t--copt=-fvisibility=hidden \t//native_client:libdeepspeech.so \t--verbose_failures \t--action_env=LD_LIBRARY_PATH=${LD_LIBRARY_PATH} &&     cp bazel-bin/native_client/libdeepspeech.so /DeepSpeech/native_client/ &&     rm -fr /root/.cache/*', 'cd /DeepSpeech/native_client && make NUM_PROCESSES=$(nproc) deepspeech ;     cd /DeepSpeech/native_client/python && make NUM_PROCESSES=$(nproc) bindings;     pip3 install --upgrade dist/*.whl;     cd /DeepSpeech/native_client/ctcdecode && make NUM_PROCESSES=$(nproc) bindings;     pip3 install --upgrade dist/*.whl', 'wget -O - https://gitlab.com/libeigen/eigen/-/archive/3.3.8/eigen-3.3.8.tar.bz2 | tar xj;     mkdir -p build &&     cd build &&     EIGEN3_ROOT=/DeepSpeech/kenlm/eigen-3.3.8 cmake .. &&     make -j $(nproc)']"
mozilla/DeepSpeech,latest,/Dockerfile.build.tmpl,WORKDIR,3,"['/', '/DeepSpeech/kenlm', '/DeepSpeech']"
ray-project/ray,latest,/docker/development/Dockerfile,FROM,1,['rayproject/ray-deps:latest']
ray-project/ray,latest,/docker/development/Dockerfile,ADD,2,"['ray.tar /ray', 'git-rev /ray/git-rev']"
ray-project/ray,latest,/docker/development/Dockerfile,RUN,6,"['sudo apt-get update && sudo apt-get install -y curl unzip cmake gcc g++ && sudo apt-get clean', 'sudo chown -R ray:users /ray && cd /ray && git init && ./ci/travis/install-bazel.sh --system', 'echo \'build --remote_cache=""https://storage.googleapis.com/ray-bazel-cache""\' >> $HOME/.bazelrc', ""echo 'build --remote_upload_local_results=false' >> $HOME/.bazelrc"", 'bazel build //:ray_pkg || bazel build --jobs 1 //:ray_pkg', 'pip install -e .']"
ray-project/ray,latest,/docker/development/Dockerfile,ENV,1,['PATH=$PATH:/home/ray/bin']
ray-project/ray,latest,/docker/development/Dockerfile,WORKDIR,3,"['/ray/', '/ray/python/', '/ray']"
ray-project/ray,latest,/docker/ray-ml/Dockerfile,ARG,2,"['BASE_IMAGE', 'PYTHON_MINOR_VERSION=7']"
ray-project/ray,latest,/docker/ray-ml/Dockerfile,FROM,1,"['rayproject/ray:nightly""$BASE_IMAGE""']"
ray-project/ray,latest,/docker/ray-ml/Dockerfile,COPY,7,"['requirements.txt ./', 'requirements_dl.txt ./', 'requirements_ml_docker.txt ./', 'requirements_rllib.txt ./', 'requirements_tune.txt ./requirements_tune.txt', 'requirements_upstream.txt ./', 'install_atari_roms.sh ./install_atari_roms.sh']"
ray-project/ray,latest,/docker/ray-ml/Dockerfile,RUN,2,"['sudo apt-get update     && sudo apt-get install -y gcc         cmake         libgtk2.0-dev         zlib1g-dev         libgl1-mesa-dev         unzip         unrar     && $HOME/anaconda3/bin/pip install -U pip     && $HOME/anaconda3/bin/pip --use-deprecated=legacy-resolver --no-cache-dir install -r requirements.txt     && $HOME/anaconda3/bin/pip --no-cache-dir install -U -r requirements_rllib.txt     && $HOME/anaconda3/bin/pip --no-cache-dir install -U -r requirements_tune.txt     && $HOME/anaconda3/bin/pip --no-cache-dir install -U -r requirements_ml_docker.txt     && $HOME/anaconda3/bin/pip --no-cache-dir install -U -r requirements_upstream.txt     && if [ $(python -c \'import sys; print(sys.version_info.minor)\') != ""6"" ]; then         $HOME/anaconda3/bin/pip uninstall dataclasses typing -y; fi      && sudo rm requirements.txt && sudo rm requirements_ml_docker.txt     && sudo rm requirements_tune.txt && sudo rm requirements_rllib.txt     && sudo rm requirements_upstream.txt     && sudo apt-get clean', 'python -c ""import tensorflow_probability""']"
ray-project/ray,latest,/docker/examples/Dockerfile,FROM,1,['rayproject/ray:latest']
ray-project/ray,latest,/docker/examples/Dockerfile,RUN,2,"['apt-get update && apt-get install -y zlib1g-dev libgl1-mesa-dev libgtk2.0-dev && apt-get clean', 'pip install --no-cache-dir -U pip     autorom[accept-rom-license]     gym[atari]     scikit-image     tensorflow     lz4     pytest-timeout     smart_open     tensorflow_probability     dm_tree     h5py   # Mutes FutureWarnings     bayesian-optimization     hyperopt     ConfigSpace==0.4.10     sigopt     nevergrad     scikit-optimize     hpbandster     lightgbm     xgboost     torch     torchvision     tensorboardX     dragonfly-opt     zoopt     tabulate     mlflow     pytest-remotedata>=0.3.1     matplotlib     jupyter     pandas']"
ray-project/ray,latest,/docker/ray-deps/Dockerfile,ARG,4,"['BASE_IMAGE=""""', 'AUTOSCALER=""autoscaler""', 'WHEEL_PATH', 'FIND_LINKS_PATH="".whl""']"
ray-project/ray,latest,/docker/ray-deps/Dockerfile,FROM,1,"['rayproject/base-deps:nightly""$BASE_IMAGE""']"
ray-project/ray,latest,/docker/ray-deps/Dockerfile,ENV,2,"['LC_ALL=C.UTF-8', 'LANG=C.UTF-8']"
ray-project/ray,latest,/docker/ray-deps/Dockerfile,COPY,2,"['$WHEEL_PATH .', '$FIND_LINKS_PATH $FIND_LINKS_PATH']"
ray-project/ray,latest,/docker/ray-deps/Dockerfile,RUN,1,"['$HOME/anaconda3/bin/pip --no-cache-dir install --find-links $FIND_LINKS_PATH     $(basename $WHEEL_PATH)[all]     $(if [ ""$AUTOSCALER"" = ""autoscaler"" ]; then echo         ""six==1.13.0""         ""boto3==1.4.8""         ""google-api-python-client==1.7.8""         ""google-oauth""         ""kubernetes""         ""azure-cli-core==2.29.1""         ""azure-identity==1.7.0""         ""azure-mgmt-compute==23.1.0""         ""azure-mgmt-network==19.0.0""         ""azure-mgmt-resource==20.0.0""         ""msrestazure==0.6.4""; fi)     $(if [ $($HOME/anaconda3/bin/python -c ""import sys; print(sys.version_info.minor)"") != 6 ]         && [ ""$AUTOSCALER"" = ""autoscaler"" ]; then echo ""kopf""; fi)     && $HOME/anaconda3/bin/pip uninstall ray -y && sudo rm $(basename $WHEEL_PATH)']"
ray-project/ray,latest,/docker/ray/Dockerfile,ARG,3,"['BASE_IMAGE', 'WHEEL_PATH', 'FIND_LINKS_PATH="".whl""']"
ray-project/ray,latest,/docker/ray/Dockerfile,FROM,1,"['rayproject/ray-deps:nightly""$BASE_IMAGE""']"
ray-project/ray,latest,/docker/ray/Dockerfile,ENV,2,"['LC_ALL=C.UTF-8', 'LANG=C.UTF-8']"
ray-project/ray,latest,/docker/ray/Dockerfile,COPY,2,"['$WHEEL_PATH .', '$FIND_LINKS_PATH $FIND_LINKS_PATH']"
ray-project/ray,latest,/docker/ray/Dockerfile,RUN,1,['$HOME/anaconda3/bin/pip --no-cache-dir install `basename $WHEEL_PATH`[all] --find-links $FIND_LINKS_PATH && sudo rm `basename $WHEEL_PATH`']
ray-project/ray,latest,/docker/ray-worker-container/Dockerfile,ARG,7,"['BASE_IMAGE=""ubuntu:21.04""', 'BASE_IMAGE', 'AUTOSCALER=""autoscaler""', 'DEBIAN_FRONTEND=noninteractive', 'PYTHON_VERSION=3.7.7', 'WHEEL_PATH', 'FIND_LINKS_PATH="".whl""']"
ray-project/ray,latest,/docker/ray-worker-container/Dockerfile,FROM,1,['${BASE_IMAGE}']
ray-project/ray,latest,/docker/ray-worker-container/Dockerfile,ENV,4,"['TZ=America/Los_Angeles', 'PATH ""/root/anaconda3/bin:$PATH""', 'LC_ALL=C.UTF-8', 'LANG=C.UTF-8']"
ray-project/ray,latest,/docker/ray-worker-container/Dockerfile,RUN,4,"['apt-get update -y     && apt-get install -y sudo tzdata     && rm -rf /var/lib/apt/lists/*     && apt-get clean', 'apt-get update -y && sudo apt-get upgrade -y     && sudo apt-get install -y         git         wget         cmake         g++         zlib1g-dev         $(if [ ""$AUTOSCALER"" = ""autoscaler"" ]; then echo         tmux         screen         rsync         openssh-client         gnupg; fi)         unzip     && wget         --quiet ""https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh""         -O /tmp/miniconda.sh     && /bin/bash /tmp/miniconda.sh -b -u -p $HOME/anaconda3     && $HOME/anaconda3/bin/conda init     && echo \'export PATH=$HOME/anaconda3/bin:$PATH\' >> /root/.bashrc     && rm /tmp/miniconda.sh     && $HOME/anaconda3/bin/conda install -y         libgcc python=$PYTHON_VERSION     && $HOME/anaconda3/bin/conda clean -y --all     && $HOME/anaconda3/bin/pip install --no-cache-dir         flatbuffers         cython==0.29.26         numpy==1.15.4         psutil         blist     && $HOME/anaconda3/bin/pip uninstall -y dask     && sudo apt-get autoremove -y cmake zlib1g-dev         $(if [ ""$BASE_IMAGE"" = ""ubuntu:focal"" ]; then echo         g++; fi)     && (if [ ""$AUTOSCALER"" = ""autoscaler"" ];         then wget -O - -q https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -         && sudo touch /etc/apt/sources.list.d/kubernetes.list         && echo ""deb http://apt.kubernetes.io/ kubernetes-xenial main"" | sudo tee -a /etc/apt/sources.list.d/kubernetes.list         && sudo apt-get update         && sudo apt-get install kubectl;     else sudo apt-get autoremove -y wget;     fi;)     && sudo rm -rf /var/lib/apt/lists/*     && sudo apt-get clean', 'apt-get update -y     && apt-get install -y gnupg curl golang wget make git libseccomp-dev     && apt-get -y install podman runc     && rm -rf /var/lib/apt/lists/*     && apt-get clean', '$HOME/anaconda3/bin/pip --no-cache-dir install `basename $WHEEL_PATH`[all] --find-links $FIND_LINKS_PATH && sudo rm `basename $WHEEL_PATH`']"
ray-project/ray,latest,/docker/ray-worker-container/Dockerfile,COPY,2,"['$WHEEL_PATH .', '$FIND_LINKS_PATH $FIND_LINKS_PATH']"
ray-project/ray,latest,/docker/base-deps/Dockerfile,ARG,7,"['BASE_IMAGE=""ubuntu:focal""', 'BASE_IMAGE', 'AUTOSCALER=""autoscaler""', 'DEBIAN_FRONTEND=noninteractive', 'PYTHON_VERSION=3.7.7', 'RAY_UID=1000', 'RAY_GID=100']"
ray-project/ray,latest,/docker/base-deps/Dockerfile,FROM,1,['${BASE_IMAGE}']
ray-project/ray,latest,/docker/base-deps/Dockerfile,ENV,3,"['TZ=America/Los_Angeles', 'PATH ""/home/ray/anaconda3/bin:$PATH""', 'HOME=/home/ray']"
ray-project/ray,latest,/docker/base-deps/Dockerfile,RUN,2,"[""apt-get update -y     && apt-get install -y sudo tzdata     && useradd -ms /bin/bash -d /home/ray ray --uid $RAY_UID --gid $RAY_GID     && usermod -aG sudo ray     && echo 'ray ALL=NOPASSWD: ALL' >> /etc/sudoers     && rm -rf /var/lib/apt/lists/*     && apt-get clean"", 'sudo apt-get update -y && sudo apt-get upgrade -y     && sudo apt-get install -y         git         wget         cmake         g++         zlib1g-dev         $(if [ ""$AUTOSCALER"" = ""autoscaler"" ]; then echo         tmux         screen         rsync         openssh-client         gnupg; fi)     && wget         --quiet ""https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh""         -O /tmp/miniconda.sh     && /bin/bash /tmp/miniconda.sh -b -u -p $HOME/anaconda3     && $HOME/anaconda3/bin/conda init     && echo \'export PATH=$HOME/anaconda3/bin:$PATH\' >> /home/ray/.bashrc     && rm /tmp/miniconda.sh     && $HOME/anaconda3/bin/conda install -y         libgcc python=$PYTHON_VERSION     && $HOME/anaconda3/bin/conda clean -y --all     && $HOME/anaconda3/bin/pip install --no-cache-dir         flatbuffers         cython==0.29.26         numpy\\>=1.20         psutil         blist     && $HOME/anaconda3/bin/pip uninstall -y dask     && sudo apt-get autoremove -y cmake zlib1g-dev         $(if [ ""$BASE_IMAGE"" = ""ubuntu:focal"" ]; then echo         g++; fi)     && (if [ ""$AUTOSCALER"" = ""autoscaler"" ];         then wget -O - -q https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -         && sudo touch /etc/apt/sources.list.d/kubernetes.list         && echo ""deb http://apt.kubernetes.io/ kubernetes-xenial main"" | sudo tee -a /etc/apt/sources.list.d/kubernetes.list         && sudo apt-get update         && sudo apt-get install kubectl;     else sudo apt-get autoremove -y wget;     fi;)     && sudo rm -rf /var/lib/apt/lists/*     && sudo apt-get clean']"
ray-project/ray,latest,/docker/base-deps/Dockerfile,USER,1,['$RAY_UID']
ray-project/ray,latest,/docker/base-deps/Dockerfile,WORKDIR,1,['$HOME']
ray-project/ray,latest,/.gitpod/Dockerfile,FROM,1,['ubuntu:20.10']
ray-project/ray,latest,/.gitpod/Dockerfile,ENV,6,"['SHELL=/bin/bash', 'TERM=xterm-256color', 'LANG=C.UTF-8', 'LC_TERMINAL=iTerm2', 'LC_TERMINAL_VERSION=3.4.4', 'SKIP_THIRDPARTY_INSTALL=1']"
ray-project/ray,latest,/.gitpod/Dockerfile,ARG,1,['DEBIAN_FRONTEND=noninteractive']
ray-project/ray,latest,/.gitpod/Dockerfile,RUN,2,"['set -x; apt update     && ln -fs /usr/share/zoneinfo/America/Los_Angeles /etc/localtime     && apt install emacs gdb wget npm git build-essential curl unzip zip psmisc curl gnupg python3 pip iptables ycmd -y     && dpkg-reconfigure --frontend noninteractive tzdata     && apt install default-jre default-jdk clang rtags tmux clang-format shellcheck cmake autogen python-dev automake autoconf libtool -y     && curl -fsSL https://bazel.build/bazel-release.pub.gpg | gpg --dearmor > bazel.gpg     && mv bazel.gpg /etc/apt/trusted.gpg.d/     && echo ""deb [arch=amd64] https://storage.googleapis.com/bazel-apt stable jdk1.8"" | tee /etc/apt/sources.list.d/bazel.list     && apt update && apt install bazel-3.7.2 -y     && pip3 install cython==0.29.26 pytest pandas tree tabulate pexpect sklearn joblib black==21.12b0 yapf==0.23.0 flake8==3.9.1 mypy==0.782 flake8-quotes flake8-bugbear==21.9.2 setproctitle==1.1.10 psutil     && python3 -c  \'print(""startup --output_base=/workspace/ray/.bazel-cache\\nstartup --host_jvm_args=-Xmx1800m\\nbuild --jobs=6"")\' > /etc/bazel.bazelrc', 'update-alternatives --install /usr/local/bin/python python /usr/bin/python3 30     && update-alternatives --install /usr/bin/bazel bazel /usr/bin/bazel-3.7.2 30     && echo ""kernel.yama.ptrace_scope = 0"" > /etc/sysctl.d/10-ptrace.conf']"
ray-project/ray,latest,/.buildkite/Dockerfile.gpu,FROM,1,['nvidia/cuda:11.2.0-cudnn8-devel-ubuntu18.04']
ray-project/ray,latest,/.buildkite/Dockerfile.gpu,ARG,4,"['REMOTE_CACHE_URL', 'BUILDKITE_PULL_REQUEST', 'BUILDKITE_COMMIT', 'BUILDKITE_PULL_REQUEST_BASE_BRANCH']"
ray-project/ray,latest,/.buildkite/Dockerfile.gpu,ENV,19,"['DEBIAN_FRONTEND=noninteractive', 'TZ=America/Los_Angeles', 'BUILDKITE=true', 'CI=true', 'PYTHON=3.6', 'RAY_USE_RANDOM_PORTS=1', 'RAY_DEFAULT_BUILD=1', 'RAY_INSTALL_JAVA=1', 'BUILDKITE_PULL_REQUEST=${BUILDKITE_PULL_REQUEST}', 'BUILDKITE_COMMIT=${BUILDKITE_COMMIT}', 'BUILDKITE_PULL_REQUEST_BASE_BRANCH=${BUILDKITE_PULL_REQUEST_BASE_BRANCH}', 'DOCKER_TLS_CERTDIR=/certs', 'DOCKER_HOST=tcp://docker:2376', 'DOCKER_TLS_VERIFY=1', 'DOCKER_CERT_PATH=/certs/client', 'TRAVIS_COMMIT=${BUILDKITE_COMMIT}', 'BUILDKITE_BAZEL_CACHE_URL=${REMOTE_CACHE_URL}', 'LC_ALL=en_US.utf8', 'LANG=en_US.utf8']"
ray-project/ray,latest,/.buildkite/Dockerfile.gpu,RUN,13,"['apt-get update -qq && apt-get upgrade -qq', 'apt-get install -y -qq     software-properties-common curl git build-essential     sudo unzip unrar apt-utils dialog tzdata wget rsync     language-pack-en tmux cmake gdb vim htop     libgtk2.0-dev zlib1g-dev libgl1-mesa-dev maven     openjdk-8-jre openjdk-8-jdk', 'add-apt-repository ppa:ubuntu-toolchain-r/test && apt-get update -qq &&     apt-get install -y -qq gcc-9 g++-9', 'update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 90 --slave /usr/bin/g++ g++ /usr/bin/g++-9     --slave /usr/bin/gcov gcov /usr/bin/gcov-9', 'curl -o- https://get.docker.com | sh', 'locale -a', 'echo ""ulimit -c 0"" >> /root/.bashrc', '(echo ""build --remote_cache=${REMOTE_CACHE_URL}"" >> /root/.bazelrc);     (if [ ""${BUILDKITE_PULL_REQUEST}"" != ""false"" ]; then (echo ""build --remote_upload_local_results=false"" >> /root/.bazelrc); fi);     cat /root/.bazelrc', 'mkdir /ray', './ci/travis/ci.sh init', 'bash --login -i ./ci/travis/ci.sh build', 'bash --login -i -c ""python ./ci/travis/determine_tests_to_run.py --output=json > affected_set.json""', 'cat affected_set.json']"
ray-project/ray,latest,/.buildkite/Dockerfile.gpu,WORKDIR,1,['/ray']
ray-project/ray,latest,/.buildkite/Dockerfile.gpu,COPY,1,['. .']
ray-project/ray,latest,/.buildkite/Dockerfile,FROM,1,['ubuntu:focal']
ray-project/ray,latest,/.buildkite/Dockerfile,ARG,6,"['REMOTE_CACHE_URL', 'BUILDKITE_PULL_REQUEST', 'BUILDKITE_COMMIT', 'BUILDKITE_PULL_REQUEST_BASE_BRANCH', 'PYTHON=3.6', 'INSTALL_DEPENDENCIES']"
ray-project/ray,latest,/.buildkite/Dockerfile,ENV,19,"['DEBIAN_FRONTEND=noninteractive', 'TZ=America/Los_Angeles', 'BUILDKITE=true', 'CI=true', 'PYTHON=$PYTHON', 'RAY_USE_RANDOM_PORTS=1', 'RAY_DEFAULT_BUILD=1', 'RAY_INSTALL_JAVA=1', 'BUILDKITE_PULL_REQUEST=${BUILDKITE_PULL_REQUEST}', 'BUILDKITE_COMMIT=${BUILDKITE_COMMIT}', 'BUILDKITE_PULL_REQUEST_BASE_BRANCH=${BUILDKITE_PULL_REQUEST_BASE_BRANCH}', 'DOCKER_TLS_CERTDIR=/certs', 'DOCKER_HOST=tcp://docker:2376', 'DOCKER_TLS_VERIFY=1', 'DOCKER_CERT_PATH=/certs/client', 'TRAVIS_COMMIT=${BUILDKITE_COMMIT}', 'BUILDKITE_BAZEL_CACHE_URL=${REMOTE_CACHE_URL}', 'LC_ALL=en_US.utf8', 'LANG=en_US.utf8']"
ray-project/ray,latest,/.buildkite/Dockerfile,RUN,14,"['apt-get update -qq && apt-get upgrade -qq', 'apt-get install -y -qq     curl python-is-python3 git build-essential     sudo unzip unrar apt-utils dialog tzdata wget rsync     language-pack-en tmux cmake gdb vim htop     libgtk2.0-dev zlib1g-dev libgl1-mesa-dev maven     openjdk-8-jre openjdk-8-jdk clang-format-12 jq     clang-tidy-12 clang-12', 'update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 90 --slave /usr/bin/g++ g++ /usr/bin/g++-9     --slave /usr/bin/gcov gcov /usr/bin/gcov-9', 'ln -s /usr/bin/clang-format-12 /usr/bin/clang-format &&     ln -s /usr/bin/clang-tidy-12 /usr/bin/clang-tidy &&     ln -s /usr/bin/clang-12 /usr/bin/clang', 'curl -o- https://get.docker.com | sh', 'locale -a', 'echo ""ulimit -c 0"" >> /root/.bashrc', '(echo ""build --remote_cache=${REMOTE_CACHE_URL}"" >> /root/.bazelrc);     (if [ ""${BUILDKITE_PULL_REQUEST}"" != ""false"" ]; then (echo ""build --remote_upload_local_results=false"" >> /root/.bazelrc); fi);     cat /root/.bazelrc', 'mkdir /ray', './ci/travis/ci.sh init', 'bash --login -i ./ci/travis/ci.sh build', '(if [ ""${INSTALL_DEPENDENCIES}"" = ""ML"" ]; then RLLIB_TESTING=1 TRAIN_TESTING=1 TUNE_TESTING=1 bash --login -i ./ci/travis/install-dependencies.sh; fi)', 'bash --login -i -c ""python ./ci/travis/determine_tests_to_run.py --output=json > affected_set.json""', 'cat affected_set.json']"
ray-project/ray,latest,/.buildkite/Dockerfile,WORKDIR,1,['/ray']
ray-project/ray,latest,/.buildkite/Dockerfile,COPY,1,['. .']
Alluxio/alluxio,latest,/integration/docker/Dockerfile,FROM,2,"['golang:1.15.13-alpine AS dev', 'alpine:3.10.2 AS final']"
Alluxio/alluxio,latest,/integration/docker/Dockerfile,ENV,7,"['GO111MODULE=on', 'MAX_IDLE_THREADS ""64""', 'LD_LIBRARY_PATH ""/usr/local/lib:${LD_LIBRARY_PATH}""', 'TINI_VERSION v0.18.0', 'JAVA_HOME /usr/lib/jvm/java-1.8-openjdk', 'LD_LIBRARY_PATH /lib64:${LD_LIBRARY_PATH}', 'PATH=""/opt/alluxio/bin:${PATH}""']"
Alluxio/alluxio,latest,/integration/docker/Dockerfile,RUN,11,"['mkdir -p /alluxio-csi', 'cd /alluxio-csi &&     CGO_ENABLED=0 go build -o /usr/local/bin/alluxio-csi', 'cd /opt &&     (if ls | grep -q "".tar.gz""; then tar -xzf *.tar.gz && rm *.tar.gz; fi) &&     ln -s alluxio-* alluxio', 'if [ ${ENABLE_DYNAMIC_USER} = ""true"" ] ; then        chmod -R 777 /opt/* ;     fi', 'apk update && apk upgrade &&   apk add --no-cache ca-certificates wget bash &&   apk add --no-cache --virtual .build-deps   build-base pkgconfig eudev git gcc make cmake gettext-dev libtool autoconf automake &&   ./dockerfile-common.sh install-libfuse &&   rm -rf libfuse &&   apk del --no-cache .build-deps', 'chmod +x /usr/local/bin/tini', 'apk add --no-cache openjdk8 openjdk8-jre-lib unzip vim', 'echo ""networkaddress.cache.ttl=0"" >> ${JAVA_HOME}/jre/lib/security/java.security', './dockerfile-common.sh user-operation ${ALLUXIO_USERNAME} ${ALLUXIO_GROUP} ${ALLUXIO_UID} ${ALLUXIO_GID} alpine', 'cp /opt/alluxio/conf/log4j.properties /tmp/log4j.properties', './dockerfile-common.sh enable-dynamic-user ${ENABLE_DYNAMIC_USER}']"
Alluxio/alluxio,latest,/integration/docker/Dockerfile,COPY,4,"['./csi /alluxio-csi', '--chown=${ALLUXIO_USERNAME}:${ALLUXIO_GROUP} conf /opt/alluxio/conf/', '--chown=${ALLUXIO_USERNAME}:${ALLUXIO_GROUP} entrypoint.sh /', '--from=dev /usr/local/bin/alluxio-csi /usr/local/bin/']"
Alluxio/alluxio,latest,/integration/docker/Dockerfile,ARG,7,"['ALLUXIO_TARBALL=http://downloads.alluxio.io/downloads/files/2.8.0-SNAPSHOT/alluxio-2.8.0-SNAPSHOT-bin.tar.gz', 'ENABLE_DYNAMIC_USER=false', 'ALLUXIO_USERNAME=alluxio', 'ALLUXIO_GROUP=alluxio', 'ALLUXIO_UID=1000', 'ALLUXIO_GID=1000', 'ENABLE_DYNAMIC_USER=true']"
Alluxio/alluxio,latest,/integration/docker/Dockerfile,ADD,3,"['${ALLUXIO_TARBALL} /opt/', 'dockerfile-common.sh /', 'https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini-static /usr/local/bin/tini']"
Alluxio/alluxio,latest,/integration/docker/Dockerfile,WORKDIR,2,"['/', '/opt/alluxio']"
Alluxio/alluxio,latest,/integration/docker/Dockerfile,USER,1,['${ALLUXIO_UID}']
Alluxio/alluxio,latest,/integration/docker/Dockerfile,ENTRYPOINT,1,"['[""/entrypoint.sh""]']"
Alluxio/alluxio,latest,/integration/docker/Dockerfile-dev,FROM,2,"['golang:1.15.13-alpine AS dev', 'centos:7 AS final']"
Alluxio/alluxio,latest,/integration/docker/Dockerfile-dev,ENV,7,"['GO111MODULE=on', 'MAX_IDLE_THREADS ""64""', 'LD_LIBRARY_PATH ""/usr/local/lib:${LD_LIBRARY_PATH}""', 'TINI_VERSION v0.18.0', 'JAVA_HOME /usr/lib/jvm/java-1.8.0-openjdk', 'LD_LIBRARY_PATH /lib64:${LD_LIBRARY_PATH}', 'PATH=""/opt/alluxio/bin:${PATH}""']"
Alluxio/alluxio,latest,/integration/docker/Dockerfile-dev,RUN,12,"['mkdir -p /alluxio-csi', 'cd /alluxio-csi &&     CGO_ENABLED=0 go build -o /usr/local/bin/alluxio-csi', 'cd /opt &&     (if ls | grep -q "".tar.gz""; then tar -xzf *.tar.gz && rm *.tar.gz; fi) &&     ln -s alluxio-* alluxio', 'if [ ${ENABLE_DYNAMIC_USER} = ""true"" ] ; then        chmod -R 777 /opt/* ;     fi', 'yum update -y && yum upgrade -y &&     yum install -y ca-certificates pkgconfig wget udev git &&     yum install -y gcc gcc-c++ make cmake gettext-devel libtool autoconf &&     yum clean all &&     ./dockerfile-common.sh install-libfuse', 'chmod +x /usr/local/bin/tini', 'yum install -y java-1.8.0-openjdk-devel java-1.8.0-openjdk &&     yum install -y java-11-openjdk-devel java-11-openjdk &&     yum install -y unzip vim &&     yum clean all', 'wget -qO /tmp/arthas.zip ""https://github.com/alibaba/arthas/releases/download/arthas-all-3.4.6/arthas-bin.zip"" &&     mkdir -p /opt/arthas &&     unzip /tmp/arthas.zip -d /opt/arthas &&     rm /tmp/arthas.zip', 'wget -qO /tmp/async-profiler-1.8.3-linux-x64.tar.gz ""https://github.com/jvm-profiling-tools/async-profiler/releases/download/v1.8.3/async-profiler-1.8.3-linux-x64.tar.gz"" &&     tar -xvf /tmp/async-profiler-1.8.3-linux-x64.tar.gz -C /opt &&     mv /opt/async-profiler-* /opt/async-profiler &&     rm /tmp/async-profiler-1.8.3-linux-x64.tar.gz', 'echo ""networkaddress.cache.ttl=0"" >> ${JAVA_HOME}/jre/lib/security/java.security', './dockerfile-common.sh user-operation ${ALLUXIO_USERNAME} ${ALLUXIO_GROUP} ${ALLUXIO_UID} ${ALLUXIO_GID} centos', './dockerfile-common.sh enable-dynamic-user ${ENABLE_DYNAMIC_USER}']"
Alluxio/alluxio,latest,/integration/docker/Dockerfile-dev,COPY,4,"['./csi /alluxio-csi', '--chown=${ALLUXIO_USERNAME}:${ALLUXIO_GROUP} conf /opt/alluxio/conf/', '--chown=${ALLUXIO_USERNAME}:${ALLUXIO_GROUP} entrypoint.sh /', '--from=dev /usr/local/bin/alluxio-csi /usr/local/bin/']"
Alluxio/alluxio,latest,/integration/docker/Dockerfile-dev,ARG,7,"['ALLUXIO_TARBALL=http://downloads.alluxio.io/downloads/files/2.8.0-SNAPSHOT/alluxio-2.8.0-SNAPSHOT-bin.tar.gz', 'ENABLE_DYNAMIC_USER=false', 'ALLUXIO_USERNAME=alluxio', 'ALLUXIO_GROUP=alluxio', 'ALLUXIO_UID=1000', 'ALLUXIO_GID=1000', 'ENABLE_DYNAMIC_USER=true']"
Alluxio/alluxio,latest,/integration/docker/Dockerfile-dev,ADD,3,"['${ALLUXIO_TARBALL} /opt/', 'dockerfile-common.sh /', 'https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini /usr/local/bin/tini']"
Alluxio/alluxio,latest,/integration/docker/Dockerfile-dev,WORKDIR,2,"['/', '/opt/alluxio']"
Alluxio/alluxio,latest,/integration/docker/Dockerfile-dev,USER,1,['${ALLUXIO_UID}']
Alluxio/alluxio,latest,/integration/docker/Dockerfile-dev,ENTRYPOINT,1,"['[""/entrypoint.sh""]']"
Alluxio/alluxio,latest,/integration/docker/dockerfile-common.sh,FUNCTION,4,"['installLibfuse {', 'userOperation {', 'enableDynamicUser {', 'main {']"
Alluxio/alluxio,latest,/integration/docker/dockerfile-common.sh,GIT,2,"['clone https://github.com/Alluxio/libfuse.git', 'checkout fuse_2_9_5_customize_multi_threads']"
Alluxio/alluxio,latest,/integration/docker/dockerfile-common.sh,CD,2,"['libfuse', '..']"
Alluxio/alluxio,latest,/integration/docker/dockerfile-common.sh,BASH,1,['makeconf.sh']
Alluxio/alluxio,latest,/integration/docker/dockerfile-common.sh,./CONFIGURE,1,['']
Alluxio/alluxio,latest,/integration/docker/dockerfile-common.sh,MAKE,2,"['-j8', 'install']"
Alluxio/alluxio,latest,/integration/docker/dockerfile-common.sh,},4,"['', '', '', '']"
Alluxio/alluxio,latest,/integration/docker/dockerfile-common.sh,IF,5,"['[ $# -ne 5 ]; then', '[ ""$username"" !=  ""root"" ]       && [ ""$groupName"" != ""root"" ]       && [ $uid -ne 0 ]       && [ $gid -ne 0 ]; then', '[ ""$5"" = ""alpine"" ]; then', '[ $# -ne 1 ]; then', '[ ""$1"" = ""true"" ]; then']"
Alluxio/alluxio,latest,/integration/docker/dockerfile-common.sh,ECHO,5,"['""Error: user-operation: 5 parameters required. $# provided.""', '""Error: user-operation: unknown operating system or not supported.""', '""Error: enable-dynamic user: 1 parameter required. $# provided.""', '""user_allow_other"" >> /etc/fuse.conf', '""Error: dockerfile-common.sh unknown command.""']"
Alluxio/alluxio,latest,/integration/docker/dockerfile-common.sh,EXIT,4,"['1', '1', '1', '1']"
Alluxio/alluxio,latest,/integration/docker/dockerfile-common.sh,FI,5,"['', '', '', '', '']"
Alluxio/alluxio,latest,/integration/docker/dockerfile-common.sh,USERNAME=$1,1,['']
Alluxio/alluxio,latest,/integration/docker/dockerfile-common.sh,GROUPNAME=$2,1,['']
Alluxio/alluxio,latest,/integration/docker/dockerfile-common.sh,UID=$3,1,['']
Alluxio/alluxio,latest,/integration/docker/dockerfile-common.sh,GID=$4,1,['']
Alluxio/alluxio,latest,/integration/docker/dockerfile-common.sh,ADDGROUP,2,"['--gid $gid $groupName', '$username root']"
Alluxio/alluxio,latest,/integration/docker/dockerfile-common.sh,ADDUSER,1,['--system --uid $uid -G $groupName $username']
Alluxio/alluxio,latest,/integration/docker/dockerfile-common.sh,ELIF,1,"['[ ""$5"" = ""centos"" ]; then']"
Alluxio/alluxio,latest,/integration/docker/dockerfile-common.sh,GROUPADD,1,['--gid $gid $groupName']
Alluxio/alluxio,latest,/integration/docker/dockerfile-common.sh,USERADD,1,['--system -m --uid $uid --gid $gid $username']
Alluxio/alluxio,latest,/integration/docker/dockerfile-common.sh,USERMOD,1,['-a -G root $username']
Alluxio/alluxio,latest,/integration/docker/dockerfile-common.sh,ELSE,1,['']
Alluxio/alluxio,latest,/integration/docker/dockerfile-common.sh,MKDIR,2,"['-p /journal', '/mnt/alluxio-fuse']"
Alluxio/alluxio,latest,/integration/docker/dockerfile-common.sh,CHOWN,2,"['-R $uid:$gid /journal', '-R $uid:$gid /mnt/alluxio-fuse']"
Alluxio/alluxio,latest,/integration/docker/dockerfile-common.sh,CHMOD,3,"['-R g=u /journal', '-R 777 /journal', '-R 777 /mnt']"
Alluxio/alluxio,latest,/integration/docker/dockerfile-common.sh,COMMAND=$1,1,['']
Alluxio/alluxio,latest,/integration/docker/dockerfile-common.sh,SHIFT,1,['']
Alluxio/alluxio,latest,/integration/docker/dockerfile-common.sh,CASE,1,['$command in']
Alluxio/alluxio,latest,/integration/docker/dockerfile-common.sh,"""INSTALL-LIBFUSE"")",1,['']
Alluxio/alluxio,latest,/integration/docker/dockerfile-common.sh,INSTALLLIBFUSE,1,['']
Alluxio/alluxio,latest,/integration/docker/dockerfile-common.sh,;;,3,"['', '', '']"
Alluxio/alluxio,latest,/integration/docker/dockerfile-common.sh,"""USER-OPERATION"")",1,['']
Alluxio/alluxio,latest,/integration/docker/dockerfile-common.sh,USEROPERATION,1,"['""$@""']"
Alluxio/alluxio,latest,/integration/docker/dockerfile-common.sh,"""ENABLE-DYNAMIC-USER"")",1,['']
Alluxio/alluxio,latest,/integration/docker/dockerfile-common.sh,ENABLEDYNAMICUSER,1,"['""$@""']"
Alluxio/alluxio,latest,/integration/docker/dockerfile-common.sh,*),1,['']
Alluxio/alluxio,latest,/integration/docker/dockerfile-common.sh,ESAC,1,['']
Alluxio/alluxio,latest,/integration/docker/dockerfile-common.sh,MAIN,1,"['""$@""']"
Alluxio/alluxio,latest,/integration/docker/hms/Dockerfile,FROM,1,['openjdk:8-jdk-alpine']
Alluxio/alluxio,latest,/integration/docker/hms/Dockerfile,ADD,3,"['http://apache.cs.utah.edu/hive/hive-2.3.6/apache-hive-2.3.6-bin.tar.gz /opt/', 'http://apache.cs.utah.edu/hadoop/common/hadoop-2.9.2/hadoop-2.9.2.tar.gz /opt/', 'https://dev.mysql.com/get/Downloads/Connector-J/mysql-connector-java-5.1.48.tar.gz /opt/']"
Alluxio/alluxio,latest,/integration/docker/hms/Dockerfile,RUN,4,"['cd /opt &&     (if ls | grep -q "".tar.gz""; then ls *.tar.gz | xargs -n1 tar -xzf && rm *.tar.gz; fi) &&     ln -s apache-hive-* hive &&     ln -s hadoop-* hadoop &&     ln -s mysql-connector-java-* mysql-connector-java', 'cp /opt/mysql-connector-java/*-bin.jar /opt/hive/lib', 'apk --no-cache --update add bash libc6-compat shadow mysql mysql-client &&     rm -rf /var/cache/apk/*', '/opt/initialize.sh']"
Alluxio/alluxio,latest,/integration/docker/hms/Dockerfile,ENV,1,"['PATH=""/opt/hive/bin:/opt/hadoop/bin:${PATH}""']"
Alluxio/alluxio,latest,/integration/docker/hms/Dockerfile,COPY,2,"['initialize.sh /opt/', 'entrypoint.sh /opt/']"
Alluxio/alluxio,latest,/integration/docker/hms/Dockerfile,EXPOSE,1,['9083']
Alluxio/alluxio,latest,/integration/docker/hms/Dockerfile,WORKDIR,1,['/opt/']
Alluxio/alluxio,latest,/integration/docker/hms/Dockerfile,ENTRYPOINT,1,"['[""/opt/entrypoint.sh""]']"
Alluxio/alluxio,latest,/integration/kubernetes/operator/alluxio/Dockerfile.webhook,FROM,2,"['golang:1.14.2 as builder', 'alpine:3.10']"
Alluxio/alluxio,latest,/integration/kubernetes/operator/alluxio/Dockerfile.webhook,WORKDIR,2,"['/go/src/github.com/Alluxio/alluxio', '/']"
Alluxio/alluxio,latest,/integration/kubernetes/operator/alluxio/Dockerfile.webhook,COPY,2,"['. .', '--from=builder /go/bin/alluxio-webhook /usr/bin/alluxio-webhook']"
Alluxio/alluxio,latest,/integration/kubernetes/operator/alluxio/Dockerfile.webhook,RUN,3,"['CGO_ENABLED=0 GOOS=linux GOARCH=amd64 GO111MODULE=off go build -a -o /go/bin/alluxio-webhook cmd/webhook/*.go', 'apk add --update curl tzdata iproute2 bash libc6-compat vim &&   \trm -rf /var/cache/apk/* &&  \tcp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime &&  \techo ""Asia/Shanghai"" >  /etc/timezone', 'chmod u+x /usr/bin/alluxio-webhook']"
Alluxio/alluxio,latest,/integration/kubernetes/operator/alluxio/Dockerfile.webhook,ENTRYPOINT,1,"['[""alluxio-webhook""]']"
Alluxio/alluxio,latest,/integration/kubernetes/operator/alluxio/Dockerfile,FROM,2,"['golang:1.14.2 as builder', 'alpine:3.10']"
Alluxio/alluxio,latest,/integration/kubernetes/operator/alluxio/Dockerfile,WORKDIR,1,['/go/src/github.com/Alluxio/alluxio']
Alluxio/alluxio,latest,/integration/kubernetes/operator/alluxio/Dockerfile,COPY,3,"['. .', '--from=builder /go/bin/alluxio-controller /usr/local/bin/alluxio-controller', '--from=builder /go/bin/dlv /usr/local/bin/dlv']"
Alluxio/alluxio,latest,/integration/kubernetes/operator/alluxio/Dockerfile,RUN,6,"['CGO_ENABLED=0 GOOS=linux GOARCH=amd64 GO111MODULE=off go build -gcflags=""-N -l"" -a -o /go/bin/alluxio-controller cmd/controller/main.go', 'go get github.com/go-delve/delve/cmd/dlv', 'apk add --update curl tzdata iproute2 bash libc6-compat vim &&   \trm -rf /var/cache/apk/* &&  \tcp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime &&  \techo ""Asia/Shanghai"" >  /etc/timezone', 'curl -o helm-v3.0.3-linux-amd64.tar.gz http://aliacs-k8s-cn-hangzhou.oss-cn-hangzhou.aliyuncs.com/public/pkg/helm/helm-v3.0.3-linux-amd64.tar.gz &&     tar -xvf helm-v3.0.3-linux-amd64.tar.gz &&     mv linux-amd64/helm /usr/local/bin/ddc-helm &&     chmod u+x /usr/local/bin/ddc-helm &&     rm -f helm-v3.0.3-linux-amd64.tar.gz', 'curl -o /usr/local/bin/kubectl https://storage.googleapis.com/kubernetes-release/release/${K8S_VERSION}/bin/linux/amd64/kubectl && chmod +x /usr/local/bin/kubectl', 'chmod -R u+x /usr/local/bin/']"
Alluxio/alluxio,latest,/integration/kubernetes/operator/alluxio/Dockerfile,ENV,1,['K8S_VERSION v1.14.8']
Alluxio/alluxio,latest,/integration/kubernetes/operator/alluxio/Dockerfile,ADD,1,['charts/alluxio-repo/ /charts']
Alluxio/alluxio,latest,/integration/kubernetes/operator/alluxio/Dockerfile,CMD,1,['alluxio-controller']
Alluxio/alluxio,latest,/integration/kubernetes/operator/alluxio/Dockerfile.debug,FROM,1,['golang:1.13.10-alpine3.11']
Alluxio/alluxio,latest,/integration/kubernetes/operator/alluxio/Dockerfile.debug,RUN,2,"['apk add --update curl tzdata iproute2 bash libc6-compat vim &&   \trm -rf /var/cache/apk/* &&  \tcp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime &&  \techo ""Asia/Shanghai"" >  /etc/timezone', 'go get github.com/go-delve/delve/cmd/dlv']"
Alluxio/alluxio,latest,/integration/kubernetes/operator/alluxio/Dockerfile.debug,WORKDIR,1,['/go/src/github.com/Alluxio/alluxio']
Alluxio/alluxio,latest,/integration/kubernetes/operator/alluxio/Dockerfile.debug,COPY,1,['. .']
Alluxio/alluxio,latest,/integration/kubernetes/operator/alluxio/Dockerfile.debug,ENV,1,['CGO_ENABLED=0 GOOS=linux GOARCH=amd64 GO111MODULE=off']
Alluxio/alluxio,latest,/integration/kubernetes/operator/alluxio/Dockerfile.debug,CMD,1,"['[""dlv"", ""debug"", ""--headless"", ""--listen"", ""\':12345\'"", ""--log"", ""--api-version=2"", ""cmd/controller/main.go""]']"
Alluxio/alluxio,latest,/integration/kubernetes/operator/alluxio/cmd/webhook/check-mount/Dockerfile,FROM,1,['python:3.7-alpine3.11']
Alluxio/alluxio,latest,/integration/kubernetes/operator/alluxio/cmd/webhook/check-mount/Dockerfile,RUN,2,"['apk add --update curl tzdata iproute2 bash libc6-compat wget sudo vim &&   \trm -rf /var/cache/apk/* &&  \tcp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime &&  \techo ""Asia/Shanghai"" >  /etc/timezone &&     pip3 install nsenter bash', 'chmod u+x /check-mount.sh']"
Alluxio/alluxio,latest,/integration/kubernetes/operator/alluxio/cmd/webhook/check-mount/Dockerfile,ADD,1,['check-mount.sh /']
Alluxio/alluxio,latest,/integration/kubernetes/operator/alluxio/cmd/webhook/check-mount/Dockerfile,ENTRYPOINT,1,"['[""/check-mount.sh""]']"
Alluxio/alluxio,latest,/integration/kubernetes/operator/alluxio/charts/alluxio-repo/alluxio-job/docker/Dockerfile,FROM,1,['alluxio/alluxio:2.2.0-SNAPSHOT']
Alluxio/alluxio,latest,/integration/kubernetes/operator/alluxio/charts/alluxio-repo/alluxio-job/docker/Dockerfile,ADD,1,['load-data.sh /usr/bin/load-data.sh']
Alluxio/alluxio,latest,/integration/kubernetes/operator/alluxio/charts/alluxio-repo/alluxio-job/docker/Dockerfile,USER,1,['root']
Alluxio/alluxio,latest,/integration/kubernetes/operator/alluxio/charts/alluxio-repo/alluxio-job/docker/Dockerfile,RUN,1,['chmod u+x /usr/bin/load-data.sh']
Alluxio/alluxio,latest,/integration/kubernetes/operator/alluxio/charts/alluxio-repo/alluxio-job/docker/Dockerfile,ENTRYPOINT,1,"['[""load-data.sh""]']"
Alluxio/alluxio,latest,/integration/kubernetes/operator/alluxio/examples/demo-1/docker/Dockerfile,FROM,1,['alpine:3.11']
Alluxio/alluxio,latest,/integration/kubernetes/operator/alluxio/examples/demo-1/docker/Dockerfile,RUN,1,"['apk add --update curl tzdata iproute2 bash libc6-compat vim rsync &&   \trm -rf /var/cache/apk/* &&  \tcp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime &&  \techo ""Asia/Shanghai"" >  /etc/timezone']"
Alluxio/alluxio,latest,/dev/jenkins/Dockerfile-jdk8,FROM,1,['maven:3.6.3-jdk-8']
Alluxio/alluxio,latest,/dev/jenkins/Dockerfile-jdk8,RUN,4,"['mkdir -p /home/jenkins &&     chmod -R 777 /home/jenkins &&     chmod g+w /etc/passwd &&     mkdir -p /.config &&     chmod -R 777 /.config &&     apt-get update -y &&     apt-get upgrade -y ca-certificates &&     apt-get install -y build-essential fuse make ruby ruby-dev', 'gem install jekyll bundler', 'wget https://dl.google.com/go/go1.12.linux-amd64.tar.gz &&     tar -xvf go1.12.linux-amd64.tar.gz &&     mv go /usr/local', 'wget --quiet https://releases.hashicorp.com/terraform/0.12.24/terraform_0.12.24_linux_amd64.zip &&     unzip -o ./terraform_0.12.24_linux_amd64.zip -d /usr/local/bin/ &&     rm terraform_0.12.24_linux_amd64.zip']"
Alluxio/alluxio,latest,/dev/jenkins/Dockerfile-jdk8,ENV,2,"['GOROOT=/usr/local/go', 'PATH=$GOROOT/bin:$PATH']"
Alluxio/alluxio,latest,/dev/jenkins/Dockerfile-jdk11,FROM,1,['maven:3.6.3-jdk-11']
Alluxio/alluxio,latest,/dev/jenkins/Dockerfile-jdk11,ENV,7,"['JAVA_HOME /usr/local/openjdk-8', 'PATH $JAVA_HOME/bin:$PATH', 'JAVA_VERSION 8u262', 'JAVA_HOME /usr/local/openjdk-11', 'PATH $JAVA_HOME/bin:$PATH', 'GOROOT=/usr/local/go', 'PATH=$GOROOT/bin:$PATH']"
Alluxio/alluxio,latest,/dev/jenkins/Dockerfile-jdk11,RUN,7,"['{ echo \'#/bin/sh\'; echo \'echo ""$JAVA_HOME""\'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ ""$JAVA_HOME"" = ""$(docker-java-home)"" ]', 'set -eux; \t\tarch=""$(dpkg --print-architecture)""; \tcase ""$arch"" in \t\tamd64 | i386:x86-64) downloadUrl=https://github.com/AdoptOpenJDK/openjdk8-upstream-binaries/releases/download/jdk8u262-b10/OpenJDK8U-jdk_x64_linux_8u262b10.tar.gz ;; \t\t*) echo >&2 ""error: unsupported architecture: \'$arch\'""; exit 1 ;; \tesac; \t\twget -O openjdk.tgz.asc ""$downloadUrl.sign""; \twget -O openjdk.tgz ""$downloadUrl"" --progress=dot:giga; \t\texport GNUPGHOME=""$(mktemp -d)""; \tgpg --batch --keyserver hkps://keyserver.ubuntu.com --keyserver-options no-self-sigs-only --recv-keys CA5F11C6CE22644D42C6AC4492EF8D39DC13168F; \tgpg --batch --keyserver hkps://keyserver.ubuntu.com --recv-keys EAC843EBD3EFDB98CC772FADA5CD6035332FA671; \tgpg --batch --list-sigs --keyid-format 0xLONG CA5F11C6CE22644D42C6AC4492EF8D39DC13168F \t\t| tee /dev/stderr \t\t| grep \'0xA5CD6035332FA671\' \t\t| grep \'Andrew Haley\'; \tgpg --batch --verify openjdk.tgz.asc openjdk.tgz; \tgpgconf --kill all; \trm -rf ""$GNUPGHOME""; \t\tmkdir -p ""$JAVA_HOME""; \ttar --extract \t\t--file openjdk.tgz \t\t--directory ""$JAVA_HOME"" \t\t--strip-components 1 \t\t--no-same-owner \t; \trm openjdk.tgz*; \t\t\t{ \t\techo \'#!/usr/bin/env bash\'; \t\techo \'set -Eeuo pipefail\'; \t\techo \'if ! [ -d ""$JAVA_HOME"" ]; then echo >&2 ""error: missing JAVA_HOME environment variable""; exit 1; fi\'; \t\techo \'cacertsFile=; for f in ""$JAVA_HOME/lib/security/cacerts"" ""$JAVA_HOME/jre/lib/security/cacerts""; do if [ -e ""$f"" ]; then cacertsFile=""$f""; break; fi; done\'; \t\techo \'if [ -z ""$cacertsFile"" ] || ! [ -f ""$cacertsFile"" ]; then echo >&2 ""error: failed to find cacerts file in $JAVA_HOME""; exit 1; fi\'; \t\techo \'trust extract --overwrite --format=java-cacerts --filter=ca-anchors --purpose=server-auth ""$cacertsFile""\'; \t} > /etc/ca-certificates/update.d/docker-openjdk; \tchmod +x /etc/ca-certificates/update.d/docker-openjdk; \t/etc/ca-certificates/update.d/docker-openjdk; \t\tfind ""$JAVA_HOME/lib"" -name \'*.so\' -exec dirname \'{}\' \';\' | sort -u > /etc/ld.so.conf.d/docker-openjdk.conf; \tldconfig; \t\tjavac -version; \tjava -version', 'set -eux; \tjavac -version; \tjava -version', 'mkdir -p /home/jenkins &&     chmod -R 777 /home/jenkins &&     chmod g+w /etc/passwd &&     mkdir -p /.config &&     chmod -R 777 /.config &&     apt-get update -y &&     apt-get upgrade -y ca-certificates &&     apt-get install -y build-essential fuse make ruby ruby-dev', 'gem install jekyll bundler', 'wget https://dl.google.com/go/go1.12.linux-amd64.tar.gz &&     tar -xvf go1.12.linux-amd64.tar.gz &&     mv go /usr/local', 'wget --quiet https://releases.hashicorp.com/terraform/0.12.24/terraform_0.12.24_linux_amd64.zip &&     unzip -o ./terraform_0.12.24_linux_amd64.zip -d /usr/local/bin/ &&     rm terraform_0.12.24_linux_amd64.zip']"
mlflow/mlflow,latest,/Dockerfile,FROM,1,['continuumio/miniconda3']
mlflow/mlflow,latest,/Dockerfile,WORKDIR,1,['/app']
mlflow/mlflow,latest,/Dockerfile,ADD,1,['. /app']
mlflow/mlflow,latest,/Dockerfile,RUN,1,['apt-get update &&     apt-get install -y default-libmysqlclient-dev build-essential curl     cmake protobuf-compiler &&      conda install python=3.6 &&     pip install -r requirements/dev-requirements.txt --no-cache-dir &&     pip install --no-cache-dir -e . &&     mkdir -p /usr/share/man/man1 && apt-get install -y openjdk-11-jre-headless &&     curl -sL https://deb.nodesource.com/setup_14.x | bash - &&     apt-get update && apt-get install -y nodejs &&     cd mlflow/server/js &&     npm install &&     npm run build']
mlflow/mlflow,latest,/tests/resources/example_docker_project/Dockerfile,FROM,1,['continuumio/miniconda3:4.6.14']
mlflow/mlflow,latest,/tests/resources/example_docker_project/Dockerfile,RUN,3,"['apt-get update -y && apt-get install build-essential -y', 'conda install python=3.6', 'pip install mlflow && pip install sqlalchemy']"
mlflow/mlflow,latest,/tests/db/Dockerfile,FROM,1,['python:3.6']
mlflow/mlflow,latest,/tests/db/Dockerfile,WORKDIR,1,['/tmp/mlflow']
mlflow/mlflow,latest,/tests/db/Dockerfile,RUN,3,"['pip install psycopg2 pymysql mysqlclient', 'pip install dist/mlflow-*.whl', 'pip list']"
mlflow/mlflow,latest,/tests/db/Dockerfile,COPY,1,['dist ./dist']
mlflow/mlflow,latest,/tests/db/Dockerfile.mssql,FROM,1,['python:3.6']
mlflow/mlflow,latest,/tests/db/Dockerfile.mssql,WORKDIR,1,['/tmp/mlflow']
mlflow/mlflow,latest,/tests/db/Dockerfile.mssql,RUN,7,"['apt-get update && apt-get install -y     curl apt-transport-https debconf-utils     && rm -rf /var/lib/apt/lists/*', 'curl https://packages.microsoft.com/keys/microsoft.asc | apt-key add -', 'curl https://packages.microsoft.com/config/ubuntu/20.04/prod.list > /etc/apt/sources.list.d/mssql-release.list', 'apt-get update && ACCEPT_EULA=Y apt-get install -y mssql-tools unixodbc-dev', 'pip install pyodbc', 'pip install dist/mlflow-*.whl', 'pip list']"
mlflow/mlflow,latest,/tests/db/Dockerfile.mssql,COPY,1,['dist ./dist']
mlflow/mlflow,latest,/mlflow/R/mlflow/Dockerfile.dev,FROM,1,['rocker/r-ver:4.1.2']
mlflow/mlflow,latest,/mlflow/R/mlflow/Dockerfile.dev,WORKDIR,1,['/mlflow/mlflow/R/mlflow']
mlflow/mlflow,latest,/mlflow/R/mlflow/Dockerfile.dev,RUN,4,"['apt-get update -y', 'apt-get install git wget libxml2-dev libgit2-dev -y', ""TEMP_DEB=$(mktemp) &&     wget --directory-prefix $TEMP_DEB https://github.com/jgm/pandoc/releases/download/2.16.2/pandoc-2.16.2-1-amd64.deb &&     dpkg --install $(find $TEMP_DEB -name '*.deb') &&     rm -rf $TEMP_DEB"", 'Rscript -e \'source("".install-deps.R"", echo = TRUE)\'']"
mlflow/mlflow,latest,/mlflow/R/mlflow/Dockerfile.dev,COPY,2,"['DESCRIPTION .', '.install-deps.R .']"
mlflow/mlflow,latest,/examples/docker/Dockerfile,FROM,1,['continuumio/miniconda3:4.10.3']
mlflow/mlflow,latest,/examples/docker/Dockerfile,RUN,1,['pip install mlflow>=1.0     && pip install azure-storage-blob==12.3.0     && pip install numpy==1.21.2     && pip install scipy     && pip install pandas==1.3.3     && pip install scikit-learn==0.24.2     && pip install cloudpickle']
mlflow/mlflow,latest,/examples/mlflow_artifacts/Dockerfile,FROM,1,['python:3.6']
mlflow/mlflow,latest,/examples/mlflow_artifacts/Dockerfile,WORKDIR,1,['/app']
mlflow/mlflow,latest,/examples/mlflow_artifacts/Dockerfile,RUN,1,['pip install mlflow psycopg2 boto3']
mlflow/mlflow,latest,/examples/mlflow_artifacts/Dockerfile.dev,FROM,1,['python:3.6']
mlflow/mlflow,latest,/examples/mlflow_artifacts/Dockerfile.dev,WORKDIR,1,['/app']
mlflow/mlflow,latest,/examples/mlflow_artifacts/Dockerfile.dev,RUN,3,"['pip install psycopg2 boto3', 'pip install mlflow', 'pip install dist/mlflow-*.whl']"
mlflow/mlflow,latest,/examples/mlflow_artifacts/Dockerfile.dev,COPY,1,['dist ./dist']
mlflow/mlflow,latest,/dev/Dockerfile.protos,FROM,1,['ubuntu:20.04']
mlflow/mlflow,latest,/dev/Dockerfile.protos,WORKDIR,1,['/app']
mlflow/mlflow,latest,/dev/Dockerfile.protos,RUN,5,"['apt-get update --yes', 'apt-get install curl unzip --yes', 'curl -OL https://github.com/protocolbuffers/protobuf/releases/download/v3.6.0/protoc-3.6.0-linux-x86_64.zip', 'unzip protoc-3.6.0-linux-x86_64.zip -d /tmp/protoc', 'protoc --version']"
mlflow/mlflow,latest,/dev/Dockerfile.protos,ENV,1,"['PATH=""/tmp/protoc/bin:${PATH}""']"
mlflow/mlflow,latest,/dev/Dockerfile.protos.dockerignore,**,1,['']
wkentaro/labelme,latest,/docker/Dockerfile,FROM,1,['ubuntu:bionic']
wkentaro/labelme,latest,/docker/Dockerfile,LABEL,1,"['maintainer ""Kentaro Wada <www.kentaro.wada@gmail.com>""']"
wkentaro/labelme,latest,/docker/Dockerfile,ENV,2,"['DEBIAN_FRONTEND=noninteractive', 'LANG en-US']"
wkentaro/labelme,latest,/docker/Dockerfile,RUN,4,"['apt-get update -qq &&   apt-get install -qq -y     git     python3     python3-pip     python3-matplotlib     python3-pyqt5     && rm -rf /var/lib/apt/lists/*', 'python3 -m pip install -U pip setuptools wheel', 'python3 -m pip install -v git+https://github.com/wkentaro/labelme.git', 'mkdir /root/workdir']"
wkentaro/labelme,latest,/docker/Dockerfile,WORKDIR,1,['/root/workdir']
wkentaro/labelme,latest,/docker/Dockerfile,ENTRYPOINT,1,"['[ ""labelme"" ]']"
tensorflow/serving,latest,/tensorflow_serving/tools/docker/Dockerfile.gpu,ARG,4,"['TF_SERVING_VERSION=latest', 'TF_SERVING_BUILD_IMAGE=tensorflow/serving:${TF_SERVING_VERSION}-devel-gpu', 'TF_SERVING_VERSION_GIT_BRANCH=master', 'TF_SERVING_VERSION_GIT_COMMIT=head']"
tensorflow/serving,latest,/tensorflow_serving/tools/docker/Dockerfile.gpu,FROM,2,"['${TF_SERVING_BUILD_IMAGE} as build_image', 'nvidia/cuda:11.2.1-base-ubuntu18.04']"
tensorflow/serving,latest,/tensorflow_serving/tools/docker/Dockerfile.gpu,LABEL,3,"['maintainer=""gvasudevan@google.com""', 'tensorflow_serving_github_branchtag=${TF_SERVING_VERSION_GIT_BRANCH}', 'tensorflow_serving_github_commit=${TF_SERVING_VERSION_GIT_COMMIT}']"
tensorflow/serving,latest,/tensorflow_serving/tools/docker/Dockerfile.gpu,ENV,6,"['CUDNN_VERSION=8.1.0.77', 'TF_TENSORRT_VERSION=7.2.2', 'CUDA=11.2', 'LD_LIBRARY_PATH /usr/local/cuda/extras/CUPTI/lib64:$LD_LIBRARY_PATH', 'MODEL_BASE_PATH=/models', 'MODEL_NAME=model']"
tensorflow/serving,latest,/tensorflow_serving/tools/docker/Dockerfile.gpu,RUN,4,"['apt-get update && apt-get install -y --no-install-recommends         ca-certificates         cuda-command-line-tools-11-2         libcublas-11-2         libcublas-dev-11-2         libcufft-11-2         libcurand-11-2         libcusolver-11-2         libcusparse-11-2         libcudnn8=${CUDNN_VERSION}-1+cuda${CUDA}         libgomp1         &&     apt-get clean &&     rm -rf /var/lib/apt/lists/*', 'apt-get update &&         apt-get install -y --no-install-recommends libnvinfer7=${TF_TENSORRT_VERSION}-1+cuda11.1         libnvinfer-plugin7=${TF_TENSORRT_VERSION}-1+cuda11.1         && apt-get clean         && rm -rf /var/lib/apt/lists/*;', 'mkdir -p ${MODEL_BASE_PATH}', 'echo \'#!/bin/bash \\n\\ntensorflow_model_server --port=8500 --rest_api_port=8501 --model_name=${MODEL_NAME} --model_base_path=${MODEL_BASE_PATH}/${MODEL_NAME} ""$@""\' > /usr/bin/tf_serving_entrypoint.sh && chmod +x /usr/bin/tf_serving_entrypoint.sh']"
tensorflow/serving,latest,/tensorflow_serving/tools/docker/Dockerfile.gpu,COPY,1,['--from=build_image /usr/local/bin/tensorflow_model_server /usr/bin/tensorflow_model_server']
tensorflow/serving,latest,/tensorflow_serving/tools/docker/Dockerfile.gpu,EXPOSE,2,"['8500', '8501']"
tensorflow/serving,latest,/tensorflow_serving/tools/docker/Dockerfile.gpu,ENTRYPOINT,1,"['[""/usr/bin/tf_serving_entrypoint.sh""]']"
tensorflow/serving,latest,/tensorflow_serving/tools/docker/Dockerfile.devel,FROM,3,"['ubuntu:18.04 as base_build', 'base_build as binary_build', 'binary_build as clean_build']"
tensorflow/serving,latest,/tensorflow_serving/tools/docker/Dockerfile.devel,ARG,4,"['TF_SERVING_VERSION_GIT_BRANCH=master', 'TF_SERVING_VERSION_GIT_COMMIT=HEAD', 'TF_SERVING_BUILD_OPTIONS=""--config=release""', 'TF_SERVING_BAZEL_OPTIONS=""""']"
tensorflow/serving,latest,/tensorflow_serving/tools/docker/Dockerfile.devel,LABEL,3,"['maintainer=gvasudevan@google.com', 'tensorflow_serving_github_branchtag=${TF_SERVING_VERSION_GIT_BRANCH}', 'tensorflow_serving_github_commit=${TF_SERVING_VERSION_GIT_COMMIT}']"
tensorflow/serving,latest,/tensorflow_serving/tools/docker/Dockerfile.devel,RUN,12,"['apt-get update && apt-get install -y --no-install-recommends         automake         build-essential         ca-certificates         curl         git         libcurl3-dev         libfreetype6-dev         libpng-dev         libtool         libzmq3-dev         mlocate         openjdk-8-jdk        openjdk-8-jre-headless         pkg-config         python-dev         software-properties-common         swig         unzip         wget         zip         zlib1g-dev         python3-distutils         &&     apt-get clean &&     rm -rf /var/lib/apt/lists/*', 'curl -fSsL -O https://bootstrap.pypa.io/get-pip.py &&     python3 get-pip.py &&     rm get-pip.py', 'add-apt-repository ppa:deadsnakes/ppa &&     apt-get update && apt-get install -y     python3.7 python3.7-dev python3-pip python3.7-venv &&     rm -rf /var/lib/apt/lists/* &&     python3.7 -m pip install pip --upgrade &&     update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.7 0', 'update-alternatives --install /usr/bin/python python /usr/bin/python3.7 0', 'pip3 --no-cache-dir install     future>=0.17.1     grpcio     h5py     keras_applications>=1.0.8     keras_preprocessing>=1.1.0     mock     numpy     portpicker     requests     --ignore-installed setuptools     --ignore-installed six>=1.12.0', 'mkdir /bazel &&     cd /bazel &&     curl -H ""User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/57.0.2987.133 Safari/537.36"" -fSsL -O https://github.com/bazelbuild/bazel/releases/download/$BAZEL_VERSION/bazel-$BAZEL_VERSION-installer-linux-x86_64.sh &&     curl -H ""User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/57.0.2987.133 Safari/537.36"" -fSsL -o /bazel/LICENSE.txt https://raw.githubusercontent.com/bazelbuild/bazel/master/LICENSE &&     chmod +x bazel-*.sh &&     ./bazel-$BAZEL_VERSION-installer-linux-x86_64.sh &&     cd / &&     rm -f /bazel/bazel-$BAZEL_VERSION-installer-linux-x86_64.sh', 'curl -sSL --retry 5 https://github.com/tensorflow/serving/tarball/${TF_SERVING_VERSION_GIT_COMMIT} | tar --strip-components=1 -xzf -', 'echo ""Building with build options: ${TF_SERVING_BUILD_OPTIONS}""', 'echo ""Building with Bazel options: ${TF_SERVING_BAZEL_OPTIONS}""', 'bazel build --color=yes --curses=yes     ${TF_SERVING_BAZEL_OPTIONS}     --verbose_failures     --output_filter=DONT_MATCH_ANYTHING     ${TF_SERVING_BUILD_OPTIONS}     tensorflow_serving/model_servers:tensorflow_model_server &&     cp bazel-bin/tensorflow_serving/model_servers/tensorflow_model_server     /usr/local/bin/', 'bazel build --color=yes --curses=yes     ${TF_SERVING_BAZEL_OPTIONS}     --verbose_failures     --output_filter=DONT_MATCH_ANYTHING     ${TF_SERVING_BUILD_OPTIONS}     tensorflow_serving/tools/pip_package:build_pip_package &&     bazel-bin/tensorflow_serving/tools/pip_package/build_pip_package     /tmp/pip &&     pip --no-cache-dir install --upgrade     /tmp/pip/tensorflow_serving_api-*.whl &&     rm -rf /tmp/pip', 'bazel clean --expunge --color=yes &&     rm -rf /root/.cache']"
tensorflow/serving,latest,/tensorflow_serving/tools/docker/Dockerfile.devel,ENV,1,['BAZEL_VERSION 3.7.2']
tensorflow/serving,latest,/tensorflow_serving/tools/docker/Dockerfile.devel,WORKDIR,2,"['/', '/tensorflow-serving']"
tensorflow/serving,latest,/tensorflow_serving/tools/docker/Dockerfile.devel,CMD,1,"['[""/bin/bash""]']"
tensorflow/serving,latest,/tensorflow_serving/tools/docker/Dockerfile,ARG,4,"['TF_SERVING_VERSION=latest', 'TF_SERVING_BUILD_IMAGE=tensorflow/serving:${TF_SERVING_VERSION}-devel', 'TF_SERVING_VERSION_GIT_BRANCH=master', 'TF_SERVING_VERSION_GIT_COMMIT=head']"
tensorflow/serving,latest,/tensorflow_serving/tools/docker/Dockerfile,FROM,2,"['${TF_SERVING_BUILD_IMAGE} as build_image', 'ubuntu:18.04']"
tensorflow/serving,latest,/tensorflow_serving/tools/docker/Dockerfile,LABEL,3,"['maintainer=""gvasudevan@google.com""', 'tensorflow_serving_github_branchtag=${TF_SERVING_VERSION_GIT_BRANCH}', 'tensorflow_serving_github_commit=${TF_SERVING_VERSION_GIT_COMMIT}']"
tensorflow/serving,latest,/tensorflow_serving/tools/docker/Dockerfile,RUN,3,"['apt-get update && apt-get install -y --no-install-recommends         ca-certificates         &&     apt-get clean &&     rm -rf /var/lib/apt/lists/*', 'mkdir -p ${MODEL_BASE_PATH}', 'echo \'#!/bin/bash \\n\\ntensorflow_model_server --port=8500 --rest_api_port=8501 --model_name=${MODEL_NAME} --model_base_path=${MODEL_BASE_PATH}/${MODEL_NAME} ""$@""\' > /usr/bin/tf_serving_entrypoint.sh && chmod +x /usr/bin/tf_serving_entrypoint.sh']"
tensorflow/serving,latest,/tensorflow_serving/tools/docker/Dockerfile,COPY,1,['--from=build_image /usr/local/bin/tensorflow_model_server /usr/bin/tensorflow_model_server']
tensorflow/serving,latest,/tensorflow_serving/tools/docker/Dockerfile,EXPOSE,2,"['8500', '8501']"
tensorflow/serving,latest,/tensorflow_serving/tools/docker/Dockerfile,ENV,2,"['MODEL_BASE_PATH=/models', 'MODEL_NAME=model']"
tensorflow/serving,latest,/tensorflow_serving/tools/docker/Dockerfile,ENTRYPOINT,1,"['[""/usr/bin/tf_serving_entrypoint.sh""]']"
tensorflow/serving,latest,/tensorflow_serving/tools/docker/Dockerfile.devel-gpu,FROM,3,"['nvidia/cuda:11.2.1-base-ubuntu18.04 as base_build', 'base_build as binary_build', 'binary_build as clean_build']"
tensorflow/serving,latest,/tensorflow_serving/tools/docker/Dockerfile.devel-gpu,ARG,4,"['TF_SERVING_VERSION_GIT_BRANCH=master', 'TF_SERVING_VERSION_GIT_COMMIT=HEAD', 'TF_SERVING_BUILD_OPTIONS=""--config=release""', 'TF_SERVING_BAZEL_OPTIONS=""""']"
tensorflow/serving,latest,/tensorflow_serving/tools/docker/Dockerfile.devel-gpu,LABEL,3,"['maintainer=gvasudevan@google.com', 'tensorflow_serving_github_branchtag=${TF_SERVING_VERSION_GIT_BRANCH}', 'tensorflow_serving_github_commit=${TF_SERVING_VERSION_GIT_COMMIT}']"
tensorflow/serving,latest,/tensorflow_serving/tools/docker/Dockerfile.devel-gpu,ENV,13,"['CUDNN_VERSION=8.1.0.77', 'TF_TENSORRT_VERSION=7.2.2', 'CUDA=11.2', 'BAZEL_VERSION 3.7.2', 'CI_BUILD_PYTHON python', 'LD_LIBRARY_PATH /usr/local/cuda/extras/CUPTI/lib64:/usr/local/cuda/lib64:/usr/local/cuda/lib64/stubs:/usr/include/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:$LD_LIBRARY_PATH', 'TF_NEED_CUDA 1', 'TF_NEED_TENSORRT 1', 'TENSORRT_INSTALL_PATH=/usr/lib/x86_64-linux-gnu', 'TF_CUDA_VERSION=11.2', 'TF_CUDNN_VERSION=8', 'TF_NCCL_VERSION=', 'TMP=""/tmp""']"
tensorflow/serving,latest,/tensorflow_serving/tools/docker/Dockerfile.devel-gpu,RUN,14,"[""apt-get update && apt-get install -y --no-install-recommends         automake         build-essential         ca-certificates         cuda-command-line-tools-11-2         libcublas-11-2         libcublas-dev-11-2         cuda-nvrtc-11-2         cuda-nvrtc-dev-11-2         cuda-nvprune-11-2         cuda-cudart-dev-11-2         libcufft-dev-11-2         libcurand-dev-11-2         libcusolver-dev-11-2         libcusparse-dev-11-2         curl         git         libfreetype6-dev         libtool         libcudnn8=${CUDNN_VERSION}-1+cuda${CUDA}         libcudnn8-dev=${CUDNN_VERSION}-1+cuda${CUDA}         libcurl3-dev         libzmq3-dev         mlocate         openjdk-8-jdk        openjdk-8-jre-headless         pkg-config         python-dev         software-properties-common         swig         unzip         wget         zip         zlib1g-dev         python3-distutils         python-distutils-extra         &&     apt-get clean &&     rm -rf /var/lib/apt/lists/* &&     find /usr/local/cuda-11.2/lib64/ -type f -name 'lib*_static.a' -not -name 'libcudart_static.a' -delete &&     rm /usr/lib/x86_64-linux-gnu/libcudnn_static_v8.a"", 'apt-get update &&         apt-get install -y --no-install-recommends libnvinfer7=${TF_TENSORRT_VERSION}-1+cuda11.1         libnvinfer-dev=${TF_TENSORRT_VERSION}-1+cuda11.1         libnvinfer-plugin-dev=${TF_TENSORRT_VERSION}-1+cuda11.1         libnvinfer-plugin7=${TF_TENSORRT_VERSION}-1+cuda11.1         libnvonnxparsers7=${TF_TENSORRT_VERSION}-1+cuda11.1         libnvparsers7=${TF_TENSORRT_VERSION}-1+cuda11.1        libnvonnxparsers-dev=${TF_TENSORRT_VERSION}-1+cuda11.1         libnvparsers-dev=${TF_TENSORRT_VERSION}-1+cuda11.1         && apt-get clean         && rm -rf /var/lib/apt/lists/*;', 'add-apt-repository ppa:deadsnakes/ppa &&     apt-get update && apt-get install -y     python3.7 python3.7-dev python3-pip python3.7-venv &&     rm -rf /var/lib/apt/lists/* &&     python3.7 -m pip install pip --upgrade &&     update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.7 0', 'update-alternatives --install /usr/bin/python python /usr/bin/python3.7 0', 'curl -fSsL -O https://bootstrap.pypa.io/get-pip.py &&     python3 get-pip.py &&     rm get-pip.py', 'pip3 --no-cache-dir install     future>=0.17.1     grpcio     h5py     keras_applications>=1.0.8     keras_preprocessing>=1.1.0     mock     numpy     portpicker     requests      --ignore-installed six>=1.12.0', 'mkdir /bazel &&     cd /bazel &&     curl -H ""User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/57.0.2987.133 Safari/537.36"" -fSsL -O https://github.com/bazelbuild/bazel/releases/download/$BAZEL_VERSION/bazel-$BAZEL_VERSION-installer-linux-x86_64.sh &&     curl -H ""User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/57.0.2987.133 Safari/537.36"" -fSsL -o /bazel/LICENSE.txt https://raw.githubusercontent.com/bazelbuild/bazel/master/LICENSE &&     chmod +x bazel-*.sh &&     ./bazel-$BAZEL_VERSION-installer-linux-x86_64.sh &&     cd / &&     rm -f /bazel/bazel-$BAZEL_VERSION-installer-linux-x86_64.sh', 'mkdir /usr/lib/x86_64-linux-gnu/include/ &&   ln -s /usr/include/cudnn.h /usr/local/cuda/include/cudnn.h &&   ln -s /usr/lib/x86_64-linux-gnu/libcudnn.so /usr/local/cuda/lib64/libcudnn.so &&   ln -s /usr/lib/x86_64-linux-gnu/libcudnn.so.${TF_CUDNN_VERSION} /usr/local/cuda/lib64/libcudnn.so.${TF_CUDNN_VERSION}', 'curl -sSL --retry 5 https://github.com/tensorflow/serving/tarball/${TF_SERVING_VERSION_GIT_COMMIT} | tar --strip-components=1 -xzf -', 'echo ""Building with build options: ${TF_SERVING_BUILD_OPTIONS}""', 'echo ""Building with Bazel options: ${TF_SERVING_BAZEL_OPTIONS}""', 'ln -s /usr/local/cuda/lib64/stubs/libcuda.so /usr/local/cuda/lib64/stubs/libcuda.so.1 &&     LD_LIBRARY_PATH=/usr/local/cuda/lib64/stubs:${LD_LIBRARY_PATH}     bazel build --color=yes --curses=yes --config=cuda --copt=""-fPIC""    ${TF_SERVING_BAZEL_OPTIONS}     --verbose_failures     --output_filter=DONT_MATCH_ANYTHING     ${TF_SERVING_BUILD_OPTIONS}     tensorflow_serving/model_servers:tensorflow_model_server &&     cp bazel-bin/tensorflow_serving/model_servers/tensorflow_model_server     /usr/local/bin/ &&     rm /usr/local/cuda/lib64/stubs/libcuda.so.1', 'bazel build --color=yes --curses=yes     ${TF_SERVING_BAZEL_OPTIONS}     --verbose_failures     --output_filter=DONT_MATCH_ANYTHING     ${TF_SERVING_BUILD_OPTIONS}     tensorflow_serving/tools/pip_package:build_pip_package &&     bazel-bin/tensorflow_serving/tools/pip_package/build_pip_package     /tmp/pip &&     pip --no-cache-dir install --upgrade     /tmp/pip/tensorflow_serving_api_gpu-*.whl &&     rm -rf /tmp/pip', 'bazel clean --expunge --color=yes &&     rm -rf /root/.cache']"
tensorflow/serving,latest,/tensorflow_serving/tools/docker/Dockerfile.devel-gpu,WORKDIR,3,"['/', '/', '/tensorflow-serving']"
tensorflow/serving,latest,/tensorflow_serving/tools/docker/Dockerfile.devel-gpu,CMD,1,"['[""/bin/bash""]']"
tensorflow/serving,latest,/tensorflow_serving/tools/docker/Dockerfile.mkl,ARG,4,"['TF_SERVING_VERSION=latest', 'TF_SERVING_BUILD_IMAGE=tensorflow/serving:${TF_SERVING_VERSION}-devel-mkl', 'TF_SERVING_VERSION_GIT_BRANCH=master', 'TF_SERVING_VERSION_GIT_COMMIT=head']"
tensorflow/serving,latest,/tensorflow_serving/tools/docker/Dockerfile.mkl,FROM,2,"['${TF_SERVING_BUILD_IMAGE} as build_image', 'ubuntu:18.04']"
tensorflow/serving,latest,/tensorflow_serving/tools/docker/Dockerfile.mkl,LABEL,3,"['maintainer=""Abolfazl Shahbazi <abolfazl.shahbazi@intel.com>""', 'tensorflow_serving_github_branchtag=${TF_SERVING_VERSION_GIT_BRANCH}', 'tensorflow_serving_github_commit=${TF_SERVING_VERSION_GIT_COMMIT}']"
tensorflow/serving,latest,/tensorflow_serving/tools/docker/Dockerfile.mkl,RUN,3,"['apt-get update && apt-get install -y --no-install-recommends         ca-certificates         &&     apt-get clean &&     rm -rf /var/lib/apt/lists/*', 'mkdir -p ${MODEL_BASE_PATH}', 'echo \'#!/bin/bash \\n\\ntensorflow_model_server --port=8500 --rest_api_port=8501 --tensorflow_intra_op_parallelism=${TENSORFLOW_INTRA_OP_PARALLELISM} --tensorflow_inter_op_parallelism=${TENSORFLOW_INTER_OP_PARALLELISM} --model_name=${MODEL_NAME} --model_base_path=${MODEL_BASE_PATH}/${MODEL_NAME} ""$@""\' > /usr/bin/tf_serving_entrypoint.sh && chmod +x /usr/bin/tf_serving_entrypoint.sh']"
tensorflow/serving,latest,/tensorflow_serving/tools/docker/Dockerfile.mkl,COPY,2,"['--from=build_image /usr/local/bin/tensorflow_model_server /usr/bin/tensorflow_model_server', '--from=build_image /usr/local/lib/libiomp5.so /usr/local/lib']"
tensorflow/serving,latest,/tensorflow_serving/tools/docker/Dockerfile.mkl,ENV,11,"[""LIBRARY_PATH '/usr/local/lib:$LIBRARY_PATH'"", ""LD_LIBRARY_PATH '/usr/local/lib:$LD_LIBRARY_PATH'"", 'MODEL_BASE_PATH=/models', 'MODEL_NAME=model', 'OMP_NUM_THREADS=2', 'KMP_BLOCKTIME=1', 'KMP_SETTINGS=1', ""KMP_AFFINITY='granularity=fine,verbose,compact,1,0'"", 'MKLDNN_VERBOSE=0', 'TENSORFLOW_INTRA_OP_PARALLELISM=2', 'TENSORFLOW_INTER_OP_PARALLELISM=2']"
tensorflow/serving,latest,/tensorflow_serving/tools/docker/Dockerfile.mkl,EXPOSE,2,"['8500', '8501']"
tensorflow/serving,latest,/tensorflow_serving/tools/docker/Dockerfile.mkl,ENTRYPOINT,1,"['[""/usr/bin/tf_serving_entrypoint.sh""]']"
tensorflow/serving,latest,/tensorflow_serving/tools/docker/Dockerfile.devel-mkl,FROM,3,"['ubuntu:18.04 as base_build', 'base_build as binary_build', 'binary_build as clean_build']"
tensorflow/serving,latest,/tensorflow_serving/tools/docker/Dockerfile.devel-mkl,ARG,4,"['TF_SERVING_VERSION_GIT_BRANCH=master', 'TF_SERVING_VERSION_GIT_COMMIT=HEAD', 'TF_SERVING_BUILD_OPTIONS=""--config=mkl --config=release""', 'TF_SERVING_BAZEL_OPTIONS=""""']"
tensorflow/serving,latest,/tensorflow_serving/tools/docker/Dockerfile.devel-mkl,LABEL,3,"['maintainer=""Abolfazl Shahbazi <abolfazl.shahbazi@intel.com>""', 'tensorflow_serving_github_branchtag=${TF_SERVING_VERSION_GIT_BRANCH}', 'tensorflow_serving_github_commit=${TF_SERVING_VERSION_GIT_COMMIT}']"
tensorflow/serving,latest,/tensorflow_serving/tools/docker/Dockerfile.devel-mkl,RUN,13,"['apt-get update && apt-get install -y --no-install-recommends         automake         build-essential         ca-certificates         curl         git         libcurl3-dev         libfreetype6-dev         libpng-dev         libtool         libzmq3-dev         mlocate         openjdk-8-jdk        openjdk-8-jre-headless         pkg-config         python-dev         software-properties-common         swig         unzip         wget         zip         zlib1g-dev         python3-distutils         &&     apt-get clean &&     rm -rf /var/lib/apt/lists/*', 'curl -fSsL -O https://bootstrap.pypa.io/get-pip.py &&     python3 get-pip.py &&     rm get-pip.py', 'add-apt-repository ppa:deadsnakes/ppa &&     apt-get update && apt-get install -y     python3.7 python3.7-dev python3-pip python3.7-venv &&     rm -rf /var/lib/apt/lists/* &&     python3.7 -m pip install pip --upgrade &&     update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.7 0', 'update-alternatives --install /usr/bin/python python /usr/bin/python3.7 0', 'pip3 --no-cache-dir install     future>=0.17.1     grpcio     h5py     keras_applications>=1.0.8     keras_preprocessing>=1.1.0     mock     numpy     portpicker     requests     --ignore-installed six>=1.12.0', 'mkdir /bazel &&     cd /bazel &&     curl -H ""User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/57.0.2987.133 Safari/537.36"" -fSsL -O https://github.com/bazelbuild/bazel/releases/download/$BAZEL_VERSION/bazel-$BAZEL_VERSION-installer-linux-x86_64.sh &&     curl -H ""User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/57.0.2987.133 Safari/537.36"" -fSsL -o /bazel/LICENSE.txt https://raw.githubusercontent.com/bazelbuild/bazel/master/LICENSE &&     chmod +x bazel-*.sh &&     ./bazel-$BAZEL_VERSION-installer-linux-x86_64.sh &&     cd / &&     rm -f /bazel/bazel-$BAZEL_VERSION-installer-linux-x86_64.sh', 'curl -sSL --retry 5 https://github.com/tensorflow/serving/tarball/${TF_SERVING_VERSION_GIT_COMMIT} | tar --strip-components=1 -xzf -', 'echo ""Building with build options: ${TF_SERVING_BUILD_OPTIONS}""', 'echo ""Building with Bazel options: ${TF_SERVING_BAZEL_OPTIONS}""', 'bazel build --color=yes --curses=yes     ${TF_SERVING_BAZEL_OPTIONS}     --verbose_failures     --output_filter=DONT_MATCH_ANYTHING     ${TF_SERVING_BUILD_OPTIONS}     tensorflow_serving/model_servers:tensorflow_model_server &&     cp bazel-bin/tensorflow_serving/model_servers/tensorflow_model_server     /usr/local/bin/', 'bazel build --color=yes --curses=yes     ${TF_SERVING_BAZEL_OPTIONS}     --verbose_failures     --output_filter=DONT_MATCH_ANYTHING     ${TF_SERVING_BUILD_OPTIONS}     tensorflow_serving/tools/pip_package:build_pip_package &&     bazel-bin/tensorflow_serving/tools/pip_package/build_pip_package     /tmp/pip &&     pip --no-cache-dir install --upgrade     /tmp/pip/tensorflow_serving_api-*.whl &&     rm -rf /tmp/pip', 'cp /root/.cache/bazel/_bazel_root/*/execroot/tf_serving/bazel-out/k8-opt/bin/external/llvm_openmp/libiomp5.so /usr/local/lib/', 'bazel clean --expunge --color=yes &&     rm -rf /root/.cache']"
tensorflow/serving,latest,/tensorflow_serving/tools/docker/Dockerfile.devel-mkl,ENV,3,"['BAZEL_VERSION 3.7.2', ""LIBRARY_PATH '/usr/local/lib:$LIBRARY_PATH'"", ""LD_LIBRARY_PATH '/usr/local/lib:$LD_LIBRARY_PATH'""]"
tensorflow/serving,latest,/tensorflow_serving/tools/docker/Dockerfile.devel-mkl,WORKDIR,2,"['/', '/tensorflow-serving']"
tensorflow/serving,latest,/tensorflow_serving/tools/docker/Dockerfile.devel-mkl,CMD,1,"['[""/bin/bash""]']"
tensorflow/serving,latest,/tensorflow_serving/tools/docker/tests/dockerfile_devel_mkl_test.sh,DECLARE,8,"['-r PROJDIR=$(pwd)/tensorflow_serving', '-r USE_NVIDIA_RUNTIME=false', '-r IS_MKL_IMAGE=true', '-r IS_DEVEL_IMAGE=true', '-r MODELDIR=""${PROJDIR}/servables/tensorflow/testdata""', '-r MODELNAME=""saved_model_half_plus_two_mkl""', '-r REQUEST=\'{""instances"": [1.0,2.0,5.0]}\'', '-r RESPONSE=\'{""predictions"":[2.5,3.0,4.5]}\'']"
tensorflow/serving,latest,/tensorflow_serving/tools/docker/tests/dockerfile_devel_mkl_test.sh,SOURCE,1,['${PROJDIR}/tools/docker/tests/docker_test_lib.sh || exit 1']
tensorflow/serving,latest,/tensorflow_serving/tools/docker/tests/dockerfile_devel_mkl_test.sh,TEST_DOCKER_IMAGE,1,['${@: -1}']
tensorflow/serving,latest,/tensorflow_serving/tools/docker/tests/dockerfile_gpu_test.sh,DECLARE,8,"['-r PROJDIR=$(pwd)/tensorflow_serving', '-r USE_NVIDIA_RUNTIME=true', '-r IS_MKL_IMAGE=false', '-r IS_DEVEL_IMAGE=false', '-r MODELNAME=""saved_model_half_plus_two_gpu""', '-r MODELDIR=""${PROJDIR}/servables/tensorflow/testdata""', '-r REQUEST=\'{""instances"": [1.0,2.0,5.0]}\'', '-r RESPONSE=\'{""predictions"":[2.5,3.0,4.5]}\'']"
tensorflow/serving,latest,/tensorflow_serving/tools/docker/tests/dockerfile_gpu_test.sh,SOURCE,1,['${PROJDIR}/tools/docker/tests/docker_test_lib.sh || exit 1']
tensorflow/serving,latest,/tensorflow_serving/tools/docker/tests/dockerfile_gpu_test.sh,TEST_DOCKER_IMAGE,1,['${@: -1}']
tensorflow/serving,latest,/tensorflow_serving/tools/docker/tests/dockerfile_devel_test.sh,DECLARE,8,"['-r PROJDIR=$(pwd)/tensorflow_serving', '-r USE_NVIDIA_RUNTIME=false', '-r IS_MKL_IMAGE=false', '-r IS_DEVEL_IMAGE=true', '-r MODELDIR=""${PROJDIR}/servables/tensorflow/testdata""', '-r MODELNAME=""saved_model_half_plus_two_cpu""', '-r REQUEST=\'{""instances"": [1.0,2.0,5.0]}\'', '-r RESPONSE=\'{""predictions"":[2.5,3.0,4.5]}\'']"
tensorflow/serving,latest,/tensorflow_serving/tools/docker/tests/dockerfile_devel_test.sh,SOURCE,1,['${PROJDIR}/tools/docker/tests/docker_test_lib.sh || exit 1']
tensorflow/serving,latest,/tensorflow_serving/tools/docker/tests/dockerfile_devel_test.sh,TEST_DOCKER_IMAGE,1,['${@: -1}']
tensorflow/serving,latest,/tensorflow_serving/tools/docker/tests/dockerfile_test.sh,DECLARE,8,"['-r PROJDIR=$(pwd)/tensorflow_serving', '-r USE_NVIDIA_RUNTIME=false', '-r IS_MKL_IMAGE=false', '-r IS_DEVEL_IMAGE=false', '-r MODELDIR=""${PROJDIR}/servables/tensorflow/testdata""', '-r MODELNAME=""saved_model_half_plus_two_cpu""', '-r REQUEST=\'{""instances"": [1.0,2.0,5.0]}\'', '-r RESPONSE=\'{""predictions"":[2.5,3.0,4.5]}\'']"
tensorflow/serving,latest,/tensorflow_serving/tools/docker/tests/dockerfile_test.sh,SOURCE,1,['${PROJDIR}/tools/docker/tests/docker_test_lib.sh || exit 1']
tensorflow/serving,latest,/tensorflow_serving/tools/docker/tests/dockerfile_test.sh,TEST_DOCKER_IMAGE,1,['${@: -1}']
tensorflow/serving,latest,/tensorflow_serving/tools/docker/tests/dockerfile_mkl_test.sh,DECLARE,8,"['-r PROJDIR=$(pwd)/tensorflow_serving', '-r USE_NVIDIA_RUNTIME=false', '-r IS_MKL_IMAGE=true', '-r IS_DEVEL_IMAGE=false', '-r MODELDIR=""${PROJDIR}/servables/tensorflow/testdata""', '-r MODELNAME=""saved_model_half_plus_two_mkl""', '-r REQUEST=\'{""instances"": [1.0,2.0,5.0]}\'', '-r RESPONSE=\'{""predictions"":[2.5,3.0,4.5]}\'']"
tensorflow/serving,latest,/tensorflow_serving/tools/docker/tests/dockerfile_mkl_test.sh,SOURCE,1,['${PROJDIR}/tools/docker/tests/docker_test_lib.sh || exit 1']
tensorflow/serving,latest,/tensorflow_serving/tools/docker/tests/dockerfile_mkl_test.sh,TEST_DOCKER_IMAGE,1,['${@: -1}']
tensorflow/serving,latest,/tensorflow_serving/tools/docker/tests/dockerfile_devel_gpu_trt_test.sh,DECLARE,7,"['-r PROJDIR=$(pwd)/tensorflow_serving', '-r USE_NVIDIA_RUNTIME=true', '-r IS_DEVEL_IMAGE=true', '-r MODELNAME=""saved_model_half_plus_two_gpu_trt""', '-r MODELDIR=""${PROJDIR}/servables/tensorflow/testdata""', '-r REQUEST=\'{""instances"": [[1.0],[2.0],[5.0]]}\'', '-r RESPONSE=\'{""predictions"":[[2.5],[3.0],[4.5]]}\'']"
tensorflow/serving,latest,/tensorflow_serving/tools/docker/tests/dockerfile_devel_gpu_trt_test.sh,SOURCE,1,['${PROJDIR}/tools/docker/tests/docker_test_lib.sh || exit 1']
tensorflow/serving,latest,/tensorflow_serving/tools/docker/tests/dockerfile_devel_gpu_trt_test.sh,TEST_DOCKER_IMAGE,1,['${@: -1}']
tensorflow/serving,latest,/tensorflow_serving/tools/docker/tests/dockerfile_devel_gpu_test.sh,DECLARE,8,"['-r PROJDIR=$(pwd)/tensorflow_serving', '-r USE_NVIDIA_RUNTIME=true', '-r IS_MKL_IMAGE=false', '-r IS_DEVEL_IMAGE=true', '-r MODELNAME=""saved_model_half_plus_two_gpu""', '-r MODELDIR=""${PROJDIR}/servables/tensorflow/testdata""', '-r REQUEST=\'{""instances"": [1.0,2.0,5.0]}\'', '-r RESPONSE=\'{""predictions"":[2.5,3.0,4.5]}\'']"
tensorflow/serving,latest,/tensorflow_serving/tools/docker/tests/dockerfile_devel_gpu_test.sh,SOURCE,1,['${PROJDIR}/tools/docker/tests/docker_test_lib.sh || exit 1']
tensorflow/serving,latest,/tensorflow_serving/tools/docker/tests/dockerfile_devel_gpu_test.sh,TEST_DOCKER_IMAGE,1,['${@: -1}']
tensorflow/serving,latest,/tensorflow_serving/tools/docker/tests/dockerfile_gpu_trt_test.sh,DECLARE,7,"['-r PROJDIR=$(pwd)/tensorflow_serving', '-r USE_NVIDIA_RUNTIME=true', '-r IS_DEVEL_IMAGE=false', '-r MODELNAME=""saved_model_half_plus_two_gpu_trt""', '-r MODELDIR=""${PROJDIR}/servables/tensorflow/testdata""', '-r REQUEST=\'{""instances"": [[1.0],[2.0],[5.0]]}\'', '-r RESPONSE=\'{""predictions"":[[2.5],[3.0],[4.5]]}\'']"
tensorflow/serving,latest,/tensorflow_serving/tools/docker/tests/dockerfile_gpu_trt_test.sh,SOURCE,1,['${PROJDIR}/tools/docker/tests/docker_test_lib.sh || exit 1']
tensorflow/serving,latest,/tensorflow_serving/tools/docker/tests/dockerfile_gpu_trt_test.sh,TEST_DOCKER_IMAGE,1,['${@: -1}']
carla-simulator/carla,latest,/Util/Docker/Prerequisites.Dockerfile,FROM,1,['ubuntu:18.04']
carla-simulator/carla,latest,/Util/Docker/Prerequisites.Dockerfile,USER,2,"['root', 'carla']"
carla-simulator/carla,latest,/Util/Docker/Prerequisites.Dockerfile,ARG,2,"['EPIC_USER=user', 'EPIC_PASS=pass']"
carla-simulator/carla,latest,/Util/Docker/Prerequisites.Dockerfile,ENV,2,"['DEBIAN_FRONTEND=noninteractive', 'UE4_ROOT /home/carla/UE4.26']"
carla-simulator/carla,latest,/Util/Docker/Prerequisites.Dockerfile,RUN,4,"['apt-get update ;   apt-get install -y wget software-properties-common &&   add-apt-repository ppa:ubuntu-toolchain-r/test &&   wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key|apt-key add - &&   apt-add-repository ""deb http://apt.llvm.org/xenial/ llvm-toolchain-xenial-8 main"" &&   apt-get update ;   apt-get install -y build-essential     clang-8     lld-8     g++-7     cmake     ninja-build     libvulkan1     python     python-pip     python-dev     python3-dev     python3-pip     libpng-dev     libtiff5-dev     libjpeg-dev     tzdata     sed     curl     unzip     autoconf     libtool     rsync     libxml2-dev     git     aria2 &&   pip3 install -Iv setuptools==47.3.1 &&   pip3 install distro &&   update-alternatives --install /usr/bin/clang++ clang++ /usr/lib/llvm-8/bin/clang++ 180 &&   update-alternatives --install /usr/bin/clang clang /usr/lib/llvm-8/bin/clang 180', 'useradd -m carla', 'git clone --depth 1 -b carla ""https://${EPIC_USER}:${EPIC_PASS}@github.com/CarlaUnreal/UnrealEngine.git"" ${UE4_ROOT}', 'cd $UE4_ROOT &&   ./Setup.sh &&   ./GenerateProjectFiles.sh &&   make']"
carla-simulator/carla,latest,/Util/Docker/Prerequisites.Dockerfile,COPY,1,['--chown=carla:carla . /home/carla']
carla-simulator/carla,latest,/Util/Docker/Prerequisites.Dockerfile,WORKDIR,2,"['/home/carla', '/home/carla/']"
carla-simulator/carla,latest,/Util/Docker/Carla.Dockerfile,FROM,1,['carla-prerequisites:latest']
carla-simulator/carla,latest,/Util/Docker/Carla.Dockerfile,ARG,1,['GIT_BRANCH']
carla-simulator/carla,latest,/Util/Docker/Carla.Dockerfile,USER,1,['carla']
carla-simulator/carla,latest,/Util/Docker/Carla.Dockerfile,WORKDIR,2,"['/home/carla', '/home/carla/carla']"
carla-simulator/carla,latest,/Util/Docker/Carla.Dockerfile,RUN,1,['cd /home/carla/ &&   if [ -z ${GIT_BRANCH+x} ]; then git clone --depth 1 https://github.com/carla-simulator/carla.git;   else git clone --depth 1 --branch $GIT_BRANCH https://github.com/carla-simulator/carla.git; fi &&   cd /home/carla/carla &&   ./Update.sh &&   make CarlaUE4Editor &&   make PythonAPI &&   make build.utils &&   make package &&   rm -r /home/carla/carla/Dist']
carla-simulator/carla,latest,/Util/Docker/Release.Dockerfile,FROM,1,['nvidia/vulkan:1.1.121-cuda-10.1--ubuntu18.04']
carla-simulator/carla,latest,/Util/Docker/Release.Dockerfile,RUN,2,"[""packages='libsdl2-2.0 xserver-xorg libvulkan1 libomp5' && apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -y $packages --no-install-recommends"", 'useradd -m carla']"
carla-simulator/carla,latest,/Util/Docker/Release.Dockerfile,COPY,1,['--chown=carla:carla . /home/carla']
carla-simulator/carla,latest,/Util/Docker/Release.Dockerfile,USER,1,['carla']
carla-simulator/carla,latest,/Util/Docker/Release.Dockerfile,WORKDIR,1,['/home/carla']
carla-simulator/carla,latest,/Util/Docker/Release.Dockerfile,CMD,1,['/bin/bash CarlaUE4.sh']
horovod/horovod,latest,/Dockerfile.test.gpu,ARG,17,"['CUDA_DOCKER_VERSION=10.0-devel-ubuntu18.04', 'CUDA_DOCKER_VERSION=10.0-devel-ubuntu18.04', 'CUDNN_VERSION=7.6.0.64-1+cuda10.0', 'NCCL_VERSION_OVERRIDE=2.4.7-1+cuda10.0', 'MPI_KIND=OpenMPI', 'PYTHON_VERSION=3.6', 'GPP_VERSION=7', 'TENSORFLOW_PACKAGE=tensorflow-gpu==1.15.0', 'KERAS_PACKAGE=keras==2.2.4', 'PYTORCH_PACKAGE=torch==1.2.0', 'PYTORCH_LIGHTNING_PACKAGE=pytorch_lightning==0.7.6', 'TORCHVISION_PACKAGE=torchvision==0.4.0', 'MXNET_PACKAGE=mxnet-cu100==1.5.0', 'PYSPARK_PACKAGE=pyspark==2.4.7', 'SPARK_PACKAGE=spark-2.4.7/spark-2.4.7-bin-hadoop2.7.tgz', 'HOROVOD_BUILD_FLAGS=""HOROVOD_GPU_OPERATIONS=NCCL""', 'HOROVOD_MIXED_INSTALL=0']"
horovod/horovod,latest,/Dockerfile.test.gpu,FROM,1,['nvidia/cuda:${CUDA_DOCKER_VERSION}']
horovod/horovod,latest,/Dockerfile.test.gpu,SHELL,1,"['[""/bin/bash"", ""-euo"", ""pipefail"", ""-c""]']"
horovod/horovod,latest,/Dockerfile.test.gpu,RUN,49,"['apt-get update -qq && apt-get install -y --no-install-recommends software-properties-common', 'add-apt-repository ppa:ubuntu-toolchain-r/test', 'CUDNN_MAJOR=$(cut -d \'.\' -f 1 <<< ""${CUDNN_VERSION}"");     apt-get update -qq && apt-get install -y --allow-downgrades --allow-change-held-packages --no-install-recommends         wget         ca-certificates         openssh-client         openssh-server         git         build-essential         g++-${GPP_VERSION}         moreutils         libcudnn${CUDNN_MAJOR}=${CUDNN_VERSION}         libnccl2=${NCCL_VERSION_OVERRIDE}         libnccl-dev=${NCCL_VERSION_OVERRIDE}', ""ssh-keygen -f /root/.ssh/id_rsa -q -N ''"", 'cp -v /root/.ssh/id_rsa.pub /root/.ssh/authorized_keys', 'apt-get update -qq && apt-get install -y python${PYTHON_VERSION} python${PYTHON_VERSION}-dev python${PYTHON_VERSION}-distutils', 'ln -s -f /usr/bin/python${PYTHON_VERSION} /usr/bin/python', 'ln -s -f /usr/bin/python${PYTHON_VERSION} /usr/bin/python${PYTHON_VERSION/%.*/}', 'wget --progress=dot:mega https://bootstrap.pypa.io/get-pip.py && python get-pip.py && rm get-pip.py', 'pip install --no-cache-dir -U --force pip ""setuptools<60.1.0"" requests pytest mock pytest-forked parameterized', 'pip install --no-cache-dir -U cmake~=3.13.0', 'echo ""env SPARK_HOME=/spark SPARK_DRIVER_MEM=512m PYSPARK_PYTHON=/usr/bin/python${PYTHON_VERSION} PYSPARK_DRIVER_PYTHON=/usr/bin/python${PYTHON_VERSION} \\""\\$@\\"""" > /spark_env.sh', 'echo /spark_env.sh pytest -v --capture=no --continue-on-collection-errors --junit-xml=/artifacts/junit.\\$1.\\${HOROVOD_RANK:-\\${OMPI_COMM_WORLD_RANK:-\\${PMI_RANK}}}.\\$2.xml \\${@:2} > /pytest.sh', 'echo /spark_env.sh pytest -v --capture=no --continue-on-collection-errors --junit-xml=/artifacts/junit.\\$1.standalone.\\$2.xml --forked \\${@:2} > /pytest_standalone.sh', 'chmod a+x /spark_env.sh', 'chmod a+x /pytest.sh', 'chmod a+x /pytest_standalone.sh', 'if [[ -n ${SPARK_PACKAGE} ]]; then         wget --progress=dot:giga ""https://www.apache.org/dyn/closer.lua/spark/${SPARK_PACKAGE}?action=download"" -O - | tar -xzC /tmp;         archive=$(basename ""${SPARK_PACKAGE}"") bash -c ""mv -v /tmp/\\${archive/%.tgz/} /spark"";     fi', 'apt-get update -qq && apt install -y openjdk-8-jdk-headless', 'if [[ ${SPARK_PACKAGE} != *""-preview""* ]]; then         pip install --no-cache-dir ${PYSPARK_PACKAGE};     else         apt-get update -qq && apt-get install pandoc;         pip install --no-cache-dir pypandoc;         (cd /spark/python && python setup.py sdist && pip install --no-cache-dir dist/pyspark-*.tar.gz && rm dist/pyspark-*);     fi', 'pip install --no-cache-dir ray==1.3.0', 'if [[ ${MPI_KIND} == ""OpenMPI"" ]]; then         wget --progress=dot:mega -O /tmp/openmpi-3.0.0-bin.tar.gz https://github.com/horovod/horovod/files/1596799/openmpi-3.0.0-bin.tar.gz &&             cd /usr/local && tar -zxf /tmp/openmpi-3.0.0-bin.tar.gz && ldconfig &&             echo ""mpirun -allow-run-as-root -np 2 -H localhost:2 -bind-to none -map-by slot -mca mpi_abort_print_stack 1"" > /mpirun_command;     elif [[ ${MPI_KIND} == ""MPICH"" ]]; then         apt-get update -qq && apt-get install -y mpich &&             echo ""mpirun -np 2"" > /mpirun_command;     fi', 'echo NCCL_DEBUG=INFO >> /etc/nccl.conf', 'if [[ ${MPI_KIND} != ""None"" ]]; then         SETUPTOOLS_USE_DISTUTILS=stdlib pip install --no-cache-dir mpi4py;     fi', 'if [[ ${TENSORFLOW_PACKAGE} != ""tf-nightly-gpu"" ]]; then         pip install --no-cache-dir ${TENSORFLOW_PACKAGE};         if [[ ${KERAS_PACKAGE} != ""None"" ]]; then             if [[ ${TENSORFLOW_PACKAGE} == tensorflow*==1.* ]] || [[ ${TENSORFLOW_PACKAGE} == tensorflow*==2.[012345].* ]]; then                 h5py=""h5py<3"";             fi;             pip uninstall -y keras-nightly;             pip install --no-cache-dir ${KERAS_PACKAGE} ${h5py:-} ""scipy!=1.4.0"" ""pandas<1.1.0"";         fi;         mkdir -p ~/.keras;         ldconfig /usr/local/cuda/targets/x86_64-linux/lib/stubs;         python -c ""import tensorflow as tf; tf.keras.datasets.mnist.load_data()"";         ldconfig;     fi', 'if [[ ${PYTORCH_PACKAGE} != ""torch-nightly-cu""* ]]; then         pip install --no-cache-dir ${PYTORCH_PACKAGE} ${TORCHVISION_PACKAGE} -f https://download.pytorch.org/whl/${PYTORCH_PACKAGE/*+/}/torch_stable.html;         if [[ ""${TORCHVISION_PACKAGE/%+*/}"" == torchvision==0.[1234].* ]]; then             pip install --no-cache-dir ""Pillow<7.0"" --no-deps;         else             pip install --no-cache-dir ""Pillow!=8.3.0"" --no-deps;         fi;     fi', 'pip install ${PYTORCH_LIGHTNING_PACKAGE}', 'if [[ ${MXNET_PACKAGE} != ""mxnet-nightly-cu""* ]]; then         pip install --no-cache-dir ${MXNET_PACKAGE} ;     fi', 'mkdir -p /work', 'mkdir -p /data && wget --progress=dot:mega https://horovod-datasets.s3.amazonaws.com/mnist.bz2 -O /data/mnist.bz2', 'mkdir -p /work', 'mkdir -p /data && wget --progress=dot:mega https://horovod-datasets.s3.amazonaws.com/rossmann.tgz -O - | tar -xzC /data', 'wget --progress=dot:mega https://horovod-datasets.s3.amazonaws.com/pytorch_datasets.tgz -O - | tar -xzC /data', 'if [[ ${TENSORFLOW_PACKAGE} == ""tf-nightly-gpu"" ]]; then         pip install --no-cache-dir ${TENSORFLOW_PACKAGE};         if [[ ${KERAS_PACKAGE} != ""None"" ]]; then             pip uninstall -y keras-nightly;             pip install --no-cache-dir ${KERAS_PACKAGE} ""scipy!=1.4.0"" ""pandas<1.1.0"";         fi;         mkdir -p ~/.keras;         ldconfig /usr/local/cuda/targets/x86_64-linux/lib/stubs;         python -c ""import tensorflow as tf; tf.keras.datasets.mnist.load_data()"";         ldconfig;     fi', 'if [[ ${PYTORCH_PACKAGE} == ""torch-nightly-cu""* ]]; then         pip install --no-cache-dir --pre torch ${TORCHVISION_PACKAGE} -f https://download.pytorch.org/whl/nightly/${PYTORCH_PACKAGE/#torch-nightly-/}/torch_nightly.html;         pip install --no-cache-dir ""Pillow!=8.3.0"" --no-deps;     fi', 'if [[ ${MXNET_PACKAGE} == ""mxnet-nightly-cu""* ]]; then         pip install --no-cache-dir --pre ${MXNET_PACKAGE/-nightly/} -f https://dist.mxnet.io/python/${MXNET_PACKAGE/#mxnet-nightly-/};     fi', 'cd /horovod &&     python setup.py sdist &&     ldconfig /usr/local/cuda/targets/x86_64-linux/lib/stubs &&     bash -c ""${HOROVOD_BUILD_FLAGS} HOROVOD_WITH_TENSORFLOW=1 HOROVOD_WITH_PYTORCH=1 HOROVOD_WITH_MXNET=1 pip install --no-cache-dir -v $(ls /horovod/dist/horovod-*.tar.gz)[spark,ray]"" &&     ldconfig', 'pip freeze | sort', 'if [[ ${TENSORFLOW_PACKAGE} == ""tensorflow-gpu==1.1.0"" ]]; then         sed -i ""s/from tensorflow import keras/from tensorflow.contrib import keras/"" /horovod/examples/tensorflow/tensorflow_mnist.py;     fi', 'sed -i ""s/last_step=20000/last_step=100/"" /horovod/examples/tensorflow/tensorflow_mnist.py', 'sed -i ""s/dataset.take(20000/dataset.take(100/"" /horovod/examples/tensorflow/tensorflow_mnist_eager.py', 'sed -i ""s/dataset.take(10000/dataset.take(100/"" /horovod/examples/tensorflow2/tensorflow2_mnist.py', 'sed -i ""s/\'--epochs\', type=int, default=24,/\'--epochs\', type=int, default=9,/"" /horovod/examples/keras/keras_mnist_advanced.py', 'sed -i ""s/epochs=24/epochs=9/"" /horovod/examples/tensorflow2/tensorflow2_keras_mnist.py', 'sed -i ""s/\'--epochs\', type=int, default=10,/\'--epochs\', type=int, default=2,/"" /horovod/examples/pytorch/pytorch_mnist.py', 'sed -i ""s/x = Dense(1000,/x = Dense(100,/g"" /horovod/examples/spark/keras/keras_spark_rossmann_run.py', 'sed -i ""s/x = Dense(500,/x = Dense(50,/g"" /horovod/examples/spark/keras/keras_spark_rossmann_run.py', 'sed -i ""s/x = Dense(1000,/x = Dense(100,/g"" /horovod/examples/spark/keras/keras_spark_rossmann_estimator.py', 'sed -i ""s/x = Dense(500,/x = Dense(50,/g"" /horovod/examples/spark/keras/keras_spark_rossmann_estimator.py']"
horovod/horovod,latest,/Dockerfile.test.gpu,COPY,1,['. /horovod']
horovod/horovod,latest,/Dockerfile.test.gpu,ENV,1,['HOROVOD_MIXED_INSTALL=${HOROVOD_MIXED_INSTALL}']
horovod/horovod,latest,/Dockerfile.test.cpu,ARG,15,"['UBUNTU_VERSION=18.04', 'UBUNTU_VERSION=18.04', 'MPI_KIND=OpenMPI', 'PYTHON_VERSION=3.6', 'GPP_VERSION=7', 'TENSORFLOW_PACKAGE=tensorflow-cpu==1.15.0', 'KERAS_PACKAGE=keras==2.2.4', 'PYTORCH_PACKAGE=torch==1.2.0+cpu', 'PYTORCH_LIGHTNING_PACKAGE=pytorch_lightning==0.7.6', 'TORCHVISION_PACKAGE=torchvision==0.4.0+cpu', 'MXNET_PACKAGE=mxnet==1.5.0', 'PYSPARK_PACKAGE=pyspark==2.4.7', 'SPARK_PACKAGE=spark-2.4.7/spark-2.4.7-bin-hadoop2.7.tgz', 'CCL_PACKAGE=master', 'HOROVOD_BUILD_FLAGS=""""']"
horovod/horovod,latest,/Dockerfile.test.cpu,FROM,1,['ubuntu:${UBUNTU_VERSION}']
horovod/horovod,latest,/Dockerfile.test.cpu,SHELL,1,"['[""/bin/bash"", ""-euo"", ""pipefail"", ""-c""]']"
horovod/horovod,latest,/Dockerfile.test.cpu,RUN,56,"['apt-get update -qq && apt-get install -y --no-install-recommends software-properties-common', 'add-apt-repository ppa:ubuntu-toolchain-r/test', 'apt-get update -qq && apt-get install -y --no-install-recommends         wget         ca-certificates         openssh-client         openssh-server         git         build-essential         g++-${GPP_VERSION}         moreutils', ""ssh-keygen -f /root/.ssh/id_rsa -q -N ''"", 'cp -v /root/.ssh/id_rsa.pub /root/.ssh/authorized_keys', 'apt-get update -qq && apt-get install -y python${PYTHON_VERSION} python${PYTHON_VERSION}-dev python${PYTHON_VERSION}-distutils', 'ln -s -f /usr/bin/python${PYTHON_VERSION} /usr/bin/python', 'ln -s -f /usr/bin/python${PYTHON_VERSION} /usr/bin/python${PYTHON_VERSION/%.*/}', 'wget --progress=dot:mega https://bootstrap.pypa.io/get-pip.py && python get-pip.py && rm get-pip.py', 'pip install --no-cache-dir -U --force pip setuptools requests pytest mock pytest-forked parameterized', 'pip install --no-cache-dir -U cmake~=3.13.0', 'echo ""env SPARK_HOME=/spark SPARK_DRIVER_MEM=512m PYSPARK_PYTHON=/usr/bin/python${PYTHON_VERSION} PYSPARK_DRIVER_PYTHON=/usr/bin/python${PYTHON_VERSION} \\""\\$@\\"""" > /spark_env.sh', 'echo /spark_env.sh pytest -v --capture=no --continue-on-collection-errors --junit-xml=/artifacts/junit.\\$1.\\${HOROVOD_RANK:-\\${OMPI_COMM_WORLD_RANK:-\\${PMI_RANK}}}.\\$2.xml \\${@:2} > /pytest.sh', 'echo /spark_env.sh pytest -v --capture=no --continue-on-collection-errors --junit-xml=/artifacts/junit.\\$1.standalone.\\$2.xml --forked \\${@:2} > /pytest_standalone.sh', 'chmod a+x /spark_env.sh', 'chmod a+x /pytest.sh', 'chmod a+x /pytest_standalone.sh', 'if [[ -n ${SPARK_PACKAGE} ]]; then         wget --progress=dot:giga ""https://www.apache.org/dyn/closer.lua/spark/${SPARK_PACKAGE}?action=download"" -O - | tar -xzC /tmp;         archive=$(basename ""${SPARK_PACKAGE}"") bash -c ""mv -v /tmp/\\${archive/%.tgz/} /spark"";     fi', 'apt-get update -qq && apt install -y openjdk-8-jdk-headless', 'if [[ ${SPARK_PACKAGE} != *""-preview""* ]]; then         pip install --no-cache-dir ${PYSPARK_PACKAGE};     else         apt-get update -qq && apt-get install pandoc;         pip install --no-cache-dir pypandoc;         (cd /spark/python && python setup.py sdist && pip install --no-cache-dir dist/pyspark-*.tar.gz && rm dist/pyspark-*);     fi', 'pip install --no-cache-dir ray==1.7.0', 'if [[ ${MPI_KIND} == ""OpenMPI"" ]]; then         wget --progress=dot:mega -O /tmp/openmpi-3.0.0-bin.tar.gz https://github.com/horovod/horovod/files/1596799/openmpi-3.0.0-bin.tar.gz &&             cd /usr/local && tar -zxf /tmp/openmpi-3.0.0-bin.tar.gz && ldconfig &&             echo ""mpirun -allow-run-as-root -np 2 -H localhost:2 -bind-to none -map-by slot -mca mpi_abort_print_stack 1"" > /mpirun_command;     elif [[ ${MPI_KIND} == ""ONECCL"" ]]; then         wget --progress=dot:mega -O /tmp/oneccl.tar.gz https://github.com/oneapi-src/oneCCL/archive/${CCL_PACKAGE}.tar.gz &&             cd /tmp && tar -zxf oneccl.tar.gz &&             mkdir oneCCL-${CCL_PACKAGE}/build && cd oneCCL-${CCL_PACKAGE}/build && cmake .. -DCMAKE_INSTALL_PREFIX=/usr/local/oneccl -DCMAKE_BUILD_TYPE=Release && make -j install &&             cp /tmp/oneCCL-${CCL_PACKAGE}/mpi/include/*.h /usr/local/oneccl/include &&             cp /tmp/oneCCL-${CCL_PACKAGE}/mpi/bin/mpicc /usr/local/oneccl/bin &&             chmod +x /usr/local/oneccl/bin/mpicc &&             cp /tmp/oneCCL-${CCL_PACKAGE}/mpi/bin/mpicxx /usr/local/oneccl/bin &&             chmod +x /usr/local/oneccl/bin/mpicxx &&             cp /tmp/oneCCL-${CCL_PACKAGE}/mpi/bin/mpigcc /usr/local/oneccl/bin &&             chmod +x /usr/local/oneccl/bin/mpigcc &&             cp /tmp/oneCCL-${CCL_PACKAGE}/mpi/bin/mpigxx /usr/local/oneccl/bin &&             chmod +x /usr/local/oneccl/bin/mpigxx &&             cp /tmp/oneCCL-${CCL_PACKAGE}/mpi/lib/libmpicxx.so /usr/local/oneccl/lib &&             chmod +x /usr/local/oneccl/lib/libmpicxx.so &&             cp /tmp/oneCCL-${CCL_PACKAGE}/mpi/lib/libmpifort.so /usr/local/oneccl/lib &&             chmod +x /usr/local/oneccl/lib/libmpifort.so &&             sed -i \'s/if \\[ -z \\""\\${I_MPI_ROOT}\\"" \\]/if [ -z \\""${I_MPI_ROOT:-}\\"" ]/g\' /usr/local/oneccl/env/setvars.sh &&             sed -i \'s/ \\$1/ \\${1:-}/g\' /usr/local/oneccl/env/setvars.sh &&             echo "". /usr/local/oneccl/env/setvars.sh"" > /oneccl_env &&             chmod +x /oneccl_env &&             echo ""export CCL_ATL_TRANSPORT=ofi;                   export HOROVOD_CCL_CACHE=1;                   echo \\""\\$(env)\\"";                   echo \\""mpirun is \\$(which mpirun)\\"";                   echo \\""LD_LIBRARY_PATH is \\$(echo \\$LD_LIBRARY_PATH)\\"";                   echo \\""oneCCL links with \\$(ldd /usr/local/oneccl/lib/libccl.so)\\"";                   mpirun -np 2 -hosts localhost \\$@"" > /mpirun_command_ofi &&             chmod +x /mpirun_command_ofi &&             cp /mpirun_command_ofi /mpirun_command_mpi &&             sed -i \'s/export CCL_ATL_TRANSPORT=ofi;/export CCL_ATL_TRANSPORT=mpi;/g\' /mpirun_command_mpi &&             sed -i \'s/export HOROVOD_CCL_CACHE=1;/export HOROVOD_CCL_CACHE=0;/g\' /mpirun_command_mpi &&             echo ""/mpirun_command_mpi"" > /mpirun_command &&             echo ""-L/usr/local/oneccl/lib -lmpi -I/usr/local/oneccl/include"" > /mpicc_oneccl &&             chmod +x /mpicc_oneccl;     elif [[ ${MPI_KIND} == ""MPICH"" ]]; then         apt-get update -qq && apt-get install -y mpich &&             echo ""mpirun -np 2"" > /mpirun_command;     fi', 'if [[ ${MPI_KIND} != ""None"" ]]; then         if [[ ${MPI_KIND} == ""ONECCL"" ]]; then             export I_MPI_ROOT=/usr/local/oneccl;             export MPICC=/usr/local/oneccl/bin/mpicc;         fi;         SETUPTOOLS_USE_DISTUTILS=stdlib pip install --no-cache-dir mpi4py;     fi', 'if [[ ${TENSORFLOW_PACKAGE} != ""tf-nightly"" ]]; then         pip install --no-cache-dir ${TENSORFLOW_PACKAGE};         if [[ ${KERAS_PACKAGE} != ""None"" ]]; then             if [[ ${TENSORFLOW_PACKAGE} == tensorflow*==1.* ]] || [[ ${TENSORFLOW_PACKAGE} == tensorflow*==2.[012345].* ]]; then                 h5py=""h5py<3"";             fi;             pip uninstall -y keras-nightly;             pip install --no-cache-dir ${KERAS_PACKAGE} ${h5py:-} ""scipy!=1.4.0"" ""pandas<1.1.0"";         fi;         mkdir -p ~/.keras;         python -c ""import tensorflow as tf; tf.keras.datasets.mnist.load_data()"";     fi', 'if [[ ${PYTORCH_PACKAGE} != ""torch-nightly"" ]]; then         pip install --no-cache-dir ${PYTORCH_PACKAGE} ${TORCHVISION_PACKAGE} -f https://download.pytorch.org/whl/torch_stable.html;         if [[ ""${TORCHVISION_PACKAGE/%+*/}"" == torchvision==0.[1234].* ]]; then             pip install --no-cache-dir ""Pillow<7.0"" --no-deps;         else             pip install --no-cache-dir ""Pillow!=8.3.0"" --no-deps;         fi;     fi', 'pip install ${PYTORCH_LIGHTNING_PACKAGE}', 'if [[ ${MXNET_PACKAGE} != ""mxnet-nightly"" ]]; then         pip install --no-cache-dir ${MXNET_PACKAGE} ;     fi', 'mkdir -p /work', 'mkdir -p /data && wget --progress=dot:mega https://horovod-datasets.s3.amazonaws.com/mnist.bz2 -O /data/mnist.bz2', 'mkdir -p /work', 'mkdir -p /data && wget --progress=dot:mega https://horovod-datasets.s3.amazonaws.com/rossmann.tgz -O - | tar -xzC /data', 'wget --progress=dot:mega https://horovod-datasets.s3.amazonaws.com/pytorch_datasets.tgz -O - | tar -xzC /data', 'if [[ ${TENSORFLOW_PACKAGE} == ""tf-nightly"" ]]; then         pip install --no-cache-dir ${TENSORFLOW_PACKAGE};         if [[ ${KERAS_PACKAGE} != ""None"" ]]; then             pip uninstall -y keras-nightly;             pip install --no-cache-dir ${KERAS_PACKAGE} ""scipy!=1.4.0"" ""pandas<1.1.0"";         fi;         mkdir -p ~/.keras;         python -c ""import tensorflow as tf; tf.keras.datasets.mnist.load_data()"";     fi', 'if [[ ${PYTORCH_PACKAGE} == ""torch-nightly"" ]]; then         pip install --no-cache-dir --pre torch ${TORCHVISION_PACKAGE} -f https://download.pytorch.org/whl/nightly/cpu/torch_nightly.html;         pip install --no-cache-dir ""Pillow!=8.3.0"" --no-deps;     fi', 'if [[ ${MXNET_PACKAGE} == ""mxnet-nightly"" ]]; then         pip install --no-cache-dir --pre mxnet -f https://dist.mxnet.io/python/all;     fi', 'if [[ ${MPI_KIND} == ""ONECCL"" ]]; then       if [ -z ""${LD_LIBRARY_PATH:-}"" ]; then           export LD_LIBRARY_PATH="""";       fi;       if [ -z ""${PYTHONPATH:-}"" ]; then           export PYTHONPATH="""";       fi;       . /usr/local/oneccl/env/setvars.sh;       export I_MPI_ROOT=/usr/local/oneccl;       echo ""horovod python setup.py sdist, mpicxx is $(which mpicxx)"";     fi;     cd /horovod &&     python setup.py sdist &&     bash -c ""${HOROVOD_BUILD_FLAGS} HOROVOD_WITH_TENSORFLOW=1 HOROVOD_WITH_PYTORCH=1 HOROVOD_WITH_MXNET=1 pip install --no-cache-dir -v $(ls /horovod/dist/horovod-*.tar.gz)[spark,ray]""', 'pip freeze | sort', 'if [[ ${TENSORFLOW_PACKAGE} == ""tensorflow==1.1.0"" ]]; then         sed -i ""s/from tensorflow import keras/from tensorflow.contrib import keras/"" /horovod/examples/tensorflow/tensorflow_mnist.py;     fi', 'sed -i ""s/last_step=20000/last_step=100/"" /horovod/examples/tensorflow/tensorflow_mnist.py', 'sed -i ""s/dataset.take(20000/dataset.take(100/"" /horovod/examples/tensorflow/tensorflow_mnist_eager.py', 'sed -i ""s/dataset.take(10000/dataset.take(100/"" /horovod/examples/tensorflow2/tensorflow2_mnist.py', 'sed -i ""s/\'--epochs\', type=int, default=24,/\'--epochs\', type=int, default=9,/"" /horovod/examples/keras/keras_mnist_advanced.py', 'sed -i ""s/model.add(Conv2D(32, kernel_size=(3, 3),/model.add(Conv2D(1, kernel_size=(3, 3),/"" /horovod/examples/keras/keras_mnist_advanced.py', 'sed -i ""s/model.add(Conv2D(64, (3, 3), activation=\'relu\'))//"" /horovod/examples/keras/keras_mnist_advanced.py', 'sed -i ""s/epochs=24/epochs=9/"" /horovod/examples/tensorflow2/tensorflow2_keras_mnist.py', 'sed -i ""s/tf.keras.layers.Conv2D(32, \\\\[3, 3\\\\],/tf.keras.layers.Conv2D(1, [3, 3],/"" /horovod/examples/tensorflow2/tensorflow2_keras_mnist.py', 'sed -i -E ""s/\\s+tf.keras.layers.Conv2D\\(64, \\\\[3, 3\\\\], activation=\'relu\'\\),//"" /horovod/examples/tensorflow2/tensorflow2_keras_mnist.py', 'sed -i ""s/\'--epochs\', type=int, default=10,/\'--epochs\', type=int, default=2,/"" /horovod/examples/pytorch/pytorch_mnist.py', 'sed -i ""s/self.fc1 = nn.Linear(320, 50)/self.fc1 = nn.Linear(784, 50)/"" /horovod/examples/pytorch/pytorch_mnist.py', 'sed -i ""s/x = F.relu(F.max_pool2d(self.conv1(x), 2))//"" /horovod/examples/pytorch/pytorch_mnist.py', 'sed -i ""s/x = F.relu(F.max_pool2d(self.conv2_drop(self.conv2(x)), 2))//"" /horovod/examples/pytorch/pytorch_mnist.py', 'sed -i ""s/x = x.view(-1, 320)/x = x.view(-1, 784)/"" /horovod/examples/pytorch/pytorch_mnist.py', 'sed -i ""s/x = Dense(1000,/x = Dense(100,/g"" /horovod/examples/spark/keras/keras_spark_rossmann_run.py', 'sed -i ""s/x = Dense(500,/x = Dense(50,/g"" /horovod/examples/spark/keras/keras_spark_rossmann_run.py', 'sed -i ""s/x = Dense(1000,/x = Dense(100,/g"" /horovod/examples/spark/keras/keras_spark_rossmann_estimator.py', 'sed -i ""s/x = Dense(500,/x = Dense(50,/g"" /horovod/examples/spark/keras/keras_spark_rossmann_estimator.py']"
horovod/horovod,latest,/Dockerfile.test.cpu,COPY,1,['. /horovod']
horovod/horovod,latest,/docker/horovod-ray/Dockerfile,ARG,6,"['RAY_DOCKER_VERSION=nightly', 'RAY_DOCKER_VERSION=nightly', 'TENSORFLOW_VERSION=2.5.0', 'PYTORCH_VERSION=1.8.1+cu111', 'PYTORCH_LIGHTNING_VERSION=1.2.9', 'TORCHVISION_VERSION=0.9.1+cu111']"
horovod/horovod,latest,/docker/horovod-ray/Dockerfile,FROM,1,['rayproject/ray:${RAY_DOCKER_VERSION}-gpu']
horovod/horovod,latest,/docker/horovod-ray/Dockerfile,SHELL,1,"['[""/bin/bash"", ""-cu""]']"
horovod/horovod,latest,/docker/horovod-ray/Dockerfile,RUN,9,"['sudo apt-get update && DEBIAN_FRONTEND=""noninteractive"" sudo apt-get install -y         build-essential         wget         git         gpg         curl         rsync         vim     && sudo apt-get clean && sudo rm -rf /var/lib/apt/lists/*', 'pip install --no-cache-dir -U cmake~=3.13.0', 'pip install --no-cache-dir     torch==${PYTORCH_VERSION}     torchvision==${TORCHVISION_VERSION}     -f https://download.pytorch.org/whl/${PYTORCH_VERSION/*+/}/torch_stable.html', 'pip install --no-cache-dir pytorch_lightning==${PYTORCH_LIGHTNING_VERSION}', 'pip install --no-cache-dir future typing packaging', 'pip install --no-cache-dir     tensorflow==${TENSORFLOW_VERSION}     keras     h5py', 'sudo mkdir -p /horovod && sudo chown ray:users /horovod', 'python setup.py sdist &&     sudo ldconfig /usr/local/cuda/targets/x86_64-linux/lib/stubs &&     HOROVOD_GPU_OPERATIONS=NCCL HOROVOD_WITH_TENSORFLOW=1 HOROVOD_WITH_PYTORCH=1 pip install --no-cache-dir -v $(ls /horovod/dist/horovod-*.tar.gz)[ray] &&     horovodrun --check-build &&     sudo ldconfig', 'sudo ldconfig /usr/local/cuda/targets/x86_64-linux/lib/stubs &&     python -c ""import horovod.tensorflow as hvd; hvd.init()"" &&     python -c ""import horovod.torch as hvd; hvd.init()"" &&     sudo ldconfig']"
horovod/horovod,latest,/docker/horovod-ray/Dockerfile,USER,1,['ray']
horovod/horovod,latest,/docker/horovod-ray/Dockerfile,WORKDIR,2,"['/horovod', '""/horovod/examples""']"
horovod/horovod,latest,/docker/horovod-ray/Dockerfile,COPY,1,['--chown=ray:users . .']
horovod/horovod,latest,/docker/horovod/Dockerfile,ARG,12,"['CUDA_DOCKER_VERSION=11.2.2-devel-ubuntu18.04', 'CUDA_DOCKER_VERSION=11.2.2-devel-ubuntu18.04', 'TENSORFLOW_VERSION=2.5.0', 'PYTORCH_VERSION=1.8.1+cu111', 'PYTORCH_LIGHTNING_VERSION=1.2.9', 'TORCHVISION_VERSION=0.9.1+cu111', 'CUDNN_VERSION=8.1.1.33-1+cuda11.2', 'NCCL_VERSION=2.8.4-1+cuda11.2', 'MXNET_VERSION=1.8.0.post0', 'PYSPARK_PACKAGE=pyspark==3.1.1', 'SPARK_PACKAGE=spark-3.1.1/spark-3.1.1-bin-hadoop2.7.tgz', 'PYTHON_VERSION=3.7']"
horovod/horovod,latest,/docker/horovod/Dockerfile,FROM,1,['nvidia/cuda:${CUDA_DOCKER_VERSION}']
horovod/horovod,latest,/docker/horovod/Dockerfile,SHELL,1,"['[""/bin/bash"", ""-cu""]']"
horovod/horovod,latest,/docker/horovod/Dockerfile,RUN,16,"['apt-get update && apt-get install -y --allow-downgrades --allow-change-held-packages --no-install-recommends         build-essential         g++-7         git         gpg         curl         vim         wget         ca-certificates         libcudnn8=${CUDNN_VERSION}         libnccl2=${NCCL_VERSION}         libnccl-dev=${NCCL_VERSION}         libjpeg-dev         libpng-dev         python${PYTHON_VERSION}         python${PYTHON_VERSION}-dev         python${PYTHON_VERSION}-distutils         librdmacm1         libibverbs1         ibverbs-providers         openjdk-8-jdk-headless         openssh-client         openssh-server     && apt-get clean && rm -rf /var/lib/apt/lists/*', 'wget --progress=dot:mega -O /tmp/openmpi-3.0.0-bin.tar.gz https://github.com/horovod/horovod/files/1596799/openmpi-3.0.0-bin.tar.gz &&     cd /usr/local &&     tar -zxf /tmp/openmpi-3.0.0-bin.tar.gz &&     ldconfig &&     mpirun --version', 'mkdir -p /var/run/sshd', 'cat /etc/ssh/ssh_config | grep -v StrictHostKeyChecking > /etc/ssh/ssh_config.new &&     echo ""    StrictHostKeyChecking no"" >> /etc/ssh/ssh_config.new &&     mv /etc/ssh/ssh_config.new /etc/ssh/ssh_config', 'ln -s /usr/bin/python${PYTHON_VERSION} /usr/bin/python', 'curl -O https://bootstrap.pypa.io/get-pip.py &&     python get-pip.py &&     rm get-pip.py', 'pip install --no-cache-dir -U cmake~=3.13.0', 'pip install --no-cache-dir     torch==${PYTORCH_VERSION}     torchvision==${TORCHVISION_VERSION}     -f https://download.pytorch.org/whl/${PYTORCH_VERSION/*+/}/torch_stable.html', 'pip install --no-cache-dir pytorch_lightning==${PYTORCH_LIGHTNING_VERSION}', 'pip install --no-cache-dir future typing packaging', 'pip install --no-cache-dir     tensorflow==${TENSORFLOW_VERSION}     keras     h5py', 'pip install --no-cache-dir mxnet-cu112==${MXNET_VERSION}', 'wget --progress=dot:giga ""https://www.apache.org/dyn/closer.lua/spark/${SPARK_PACKAGE}?action=download"" -O - | tar -xzC /tmp;     archive=$(basename ""${SPARK_PACKAGE}"") bash -c ""mv -v /tmp/\\${archive/%.tgz/} /spark""', 'pip install --no-cache-dir ${PYSPARK_PACKAGE}', 'python setup.py sdist &&     ldconfig /usr/local/cuda/targets/x86_64-linux/lib/stubs &&     bash -c ""HOROVOD_GPU_OPERATIONS=NCCL HOROVOD_WITH_TENSORFLOW=1 HOROVOD_WITH_PYTORCH=1 HOROVOD_WITH_MXNET=1 pip install --no-cache-dir -v $(ls /horovod/dist/horovod-*.tar.gz)[spark,ray]"" &&     horovodrun --check-build &&     ldconfig', 'ldconfig /usr/local/cuda/targets/x86_64-linux/lib/stubs &&     python -c ""import horovod.tensorflow as hvd; hvd.init()"" &&     python -c ""import horovod.torch as hvd; hvd.init()"" &&     python -c ""import horovod.mxnet as hvd; hvd.init()"" &&     ldconfig']"
horovod/horovod,latest,/docker/horovod/Dockerfile,WORKDIR,2,"['/horovod', '""/horovod/examples""']"
horovod/horovod,latest,/docker/horovod/Dockerfile,COPY,1,['. .']
horovod/horovod,latest,/docker/horovod-cpu/Dockerfile,FROM,1,['ubuntu:18.04']
horovod/horovod,latest,/docker/horovod-cpu/Dockerfile,ARG,8,"['TENSORFLOW_VERSION=2.5.0', 'PYTORCH_VERSION=1.8.1', 'PYTORCH_LIGHTNING_VERSION=1.2.9', 'TORCHVISION_VERSION=0.9.1', 'MXNET_VERSION=1.8.0.post0', 'PYSPARK_PACKAGE=pyspark==3.1.1', 'SPARK_PACKAGE=spark-3.1.1/spark-3.1.1-bin-hadoop2.7.tgz', 'PYTHON_VERSION=3.7']"
horovod/horovod,latest,/docker/horovod-cpu/Dockerfile,SHELL,1,"['[""/bin/bash"", ""-cu""]']"
horovod/horovod,latest,/docker/horovod-cpu/Dockerfile,RUN,16,"['apt-get update && apt-get install -y --allow-downgrades --allow-change-held-packages --no-install-recommends         build-essential         g++-7         git         gpg         curl         vim         wget         ca-certificates         libjpeg-dev         libpng-dev         python${PYTHON_VERSION}         python${PYTHON_VERSION}-dev         python${PYTHON_VERSION}-distutils         librdmacm1         libibverbs1         ibverbs-providers         openjdk-8-jdk-headless         openssh-client         openssh-server     && apt-get clean && rm -rf /var/lib/apt/lists/*', 'wget --progress=dot:mega -O /tmp/openmpi-3.0.0-bin.tar.gz https://github.com/horovod/horovod/files/1596799/openmpi-3.0.0-bin.tar.gz &&     cd /usr/local &&     tar -zxf /tmp/openmpi-3.0.0-bin.tar.gz &&     ldconfig &&     mpirun --version', 'mkdir -p /var/run/sshd', 'cat /etc/ssh/ssh_config | grep -v StrictHostKeyChecking > /etc/ssh/ssh_config.new &&     echo ""    StrictHostKeyChecking no"" >> /etc/ssh/ssh_config.new &&     mv /etc/ssh/ssh_config.new /etc/ssh/ssh_config', 'ln -s /usr/bin/python${PYTHON_VERSION} /usr/bin/python', 'curl -O https://bootstrap.pypa.io/get-pip.py &&     python get-pip.py &&     rm get-pip.py', 'pip install --no-cache-dir -U cmake~=3.13.0', 'pip install --no-cache-dir torch==${PYTORCH_VERSION} torchvision==${TORCHVISION_VERSION}', 'pip install --no-cache-dir pytorch_lightning==${PYTORCH_LIGHTNING_VERSION}', 'pip install --no-cache-dir future typing packaging', 'pip install --no-cache-dir     tensorflow-cpu==${TENSORFLOW_VERSION}     keras     h5py', 'pip install --no-cache-dir mxnet==${MXNET_VERSION}', 'wget --progress=dot:giga ""https://www.apache.org/dyn/closer.lua/spark/${SPARK_PACKAGE}?action=download"" -O - | tar -xzC /tmp;     archive=$(basename ""${SPARK_PACKAGE}"") bash -c ""mv -v /tmp/\\${archive/%.tgz/} /spark""', 'pip install --no-cache-dir ${PYSPARK_PACKAGE}', 'python setup.py sdist &&     bash -c ""HOROVOD_WITH_TENSORFLOW=1 HOROVOD_WITH_PYTORCH=1 HOROVOD_WITH_MXNET=1 pip install --no-cache-dir -v $(ls /horovod/dist/horovod-*.tar.gz)[spark,ray]"" &&     horovodrun --check-build', 'python -c ""import horovod.tensorflow as hvd; hvd.init()"" &&     python -c ""import horovod.torch as hvd; hvd.init()"" &&     python -c ""import horovod.mxnet as hvd; hvd.init()""']"
horovod/horovod,latest,/docker/horovod-cpu/Dockerfile,WORKDIR,2,"['/horovod', '""/horovod/examples""']"
horovod/horovod,latest,/docker/horovod-cpu/Dockerfile,COPY,1,['. .']
PyTorchLightning/pytorch-lightning,latest,/dockers/base-cuda/Dockerfile,ARG,3,"['CUDA_VERSION=10.2', 'PYTHON_VERSION=3.9', 'PYTORCH_VERSION=1.8']"
PyTorchLightning/pytorch-lightning,latest,/dockers/base-cuda/Dockerfile,FROM,1,['nvidia/cuda:${CUDA_VERSION}-devel-ubuntu18.04']
PyTorchLightning/pytorch-lightning,latest,/dockers/base-cuda/Dockerfile,SHELL,1,"['[""/bin/bash"", ""-c""]']"
PyTorchLightning/pytorch-lightning,latest,/dockers/base-cuda/Dockerfile,ENV,2,"['DEBIAN_FRONTEND=noninteractive     TZ=Europe/Prague     PATH=""$PATH:/root/.local/bin""     CUDA_TOOLKIT_ROOT_DIR=""/usr/local/cuda""     TORCH_CUDA_ARCH_LIST=""3.7;5.0;6.0;7.0;7.5""     MKL_THREADING_LAYER=GNU     MAKEFLAGS=""-j$(nproc)""', 'HOROVOD_CUDA_HOME=$CUDA_TOOLKIT_ROOT_DIR     HOROVOD_BUILD_CUDA_CC_LIST=$TORCH_CUDA_ARCH_LIST     HOROVOD_GPU_OPERATIONS=NCCL     HOROVOD_WITH_PYTORCH=1     HOROVOD_WITHOUT_TENSORFLOW=1     HOROVOD_WITHOUT_MXNET=1     HOROVOD_WITH_GLOO=1     HOROVOD_WITHOUT_MPI=1']"
PyTorchLightning/pytorch-lightning,latest,/dockers/base-cuda/Dockerfile,RUN,7,"['apt-get update -qq --fix-missing  &&     apt-get install -y --no-install-recommends         build-essential         pkg-config         cmake         git         wget         curl         unzip         ca-certificates         software-properties-common         libopenmpi-dev     && ', 'wget https://bootstrap.pypa.io/get-pip.py --progress=bar:force:noscroll --no-check-certificate &&     python${PYTHON_VERSION} get-pip.py &&     rm get-pip.py && ', 'CUDA_VERSION_MAJOR=$(python -c ""import torch ; print(torch.version.cuda.split(\'.\')[0])"") &&     py_ver=$(python -c ""print(int(\'$PYTHON_VERSION\'.split(\'.\') >= \'3.9\'.split(\'.\')))"") &&     if [ $py_ver -eq ""0"" ]; then         pip install --extra-index-url https://developer.download.nvidia.com/compute/redist ""nvidia-dali-cuda${CUDA_VERSION_MAJOR}0>1.0"" ;         python -c \'from nvidia.dali.pipeline import Pipeline\' ;     fi', 'pip install --no-cache-dir --global-option=""--cuda_ext"" https://github.com/NVIDIA/apex/archive/refs/heads/master.zip &&     python -c ""from apex import amp""', 'pip install fairscale==0.4.0', 'pip install deepspeed==0.5.7', 'pip --version &&     pip list &&     python -c ""import sys; ver = sys.version_info ; assert f\'{ver.major}.{ver.minor}\' == \'$PYTHON_VERSION\', ver"" &&     python -c ""import torch; assert torch.__version__.startswith(\'$PYTORCH_VERSION\'), torch.__version__""']"
PyTorchLightning/pytorch-lightning,latest,/dockers/base-cuda/Dockerfile,ADD-APT-REPOSITORY,1,['ppa:deadsnakes/ppa &&     apt-get install -y         python${PYTHON_VERSION}         python${PYTHON_VERSION}-distutils         python${PYTHON_VERSION}-dev     && ']
PyTorchLightning/pytorch-lightning,latest,/dockers/base-cuda/Dockerfile,UPDATE-ALTERNATIVES,1,['--install /usr/bin/python${PYTHON_VERSION%%.*} python${PYTHON_VERSION%%.*} /usr/bin/python${PYTHON_VERSION} 1 &&     update-alternatives --install /usr/bin/python python /usr/bin/python${PYTHON_VERSION} 1 && ']
PyTorchLightning/pytorch-lightning,latest,/dockers/base-cuda/Dockerfile,APT-GET,1,['autoremove -y &&     apt-get clean &&     rm -rf /root/.cache &&     rm -rf /var/lib/apt/lists/*']
PyTorchLightning/pytorch-lightning,latest,/dockers/base-cuda/Dockerfile,COPY,2,"['./requirements.txt requirements.txt', './requirements/ ./requirements/']"
PyTorchLightning/pytorch-lightning,latest,/dockers/base-cuda/Dockerfile,PIP,1,['config set global.cache-dir false &&     python ./requirements/adjust_versions.py requirements.txt ${PYTORCH_VERSION} &&     python ./requirements/adjust_versions.py requirements/extra.txt ${PYTORCH_VERSION} &&     python ./requirements/adjust_versions.py requirements/examples.txt ${PYTORCH_VERSION} &&     pip install -r requirements/devel.txt --no-cache-dir &&     rm -rf requirements.* requirements/']
PyTorchLightning/pytorch-lightning,latest,/dockers/base-ipu/Dockerfile,FROM,1,['ubuntu:20.04']
PyTorchLightning/pytorch-lightning,latest,/dockers/base-ipu/Dockerfile,LABEL,1,"['maintainer=""PyTorchLightning <https://github.com/PyTorchLightning>""']"
PyTorchLightning/pytorch-lightning,latest,/dockers/base-ipu/Dockerfile,ARG,2,"['PYTHON_VERSION=3.9', 'CONDA_VERSION=4.9.2']"
PyTorchLightning/pytorch-lightning,latest,/dockers/base-ipu/Dockerfile,SHELL,1,"['[""/bin/bash"", ""-c""]']"
PyTorchLightning/pytorch-lightning,latest,/dockers/base-ipu/Dockerfile,ENV,3,"['DEBIAN_FRONTEND=noninteractive     CONDA_ENV=lightning', 'PATH=""/root/miniconda3/bin:$PATH""     LD_LIBRARY_PATH=""/root/miniconda3/lib:$LD_LIBRARY_PATH""', 'PATH=/root/miniconda3/envs/${CONDA_ENV}/bin:$PATH     LD_LIBRARY_PATH=""/root/miniconda3/envs/${CONDA_ENV}/lib:$LD_LIBRARY_PATH""     CONDA_DEFAULT_ENV=${CONDA_ENV}     MKL_THREADING_LAYER=GNU']"
PyTorchLightning/pytorch-lightning,latest,/dockers/base-ipu/Dockerfile,RUN,4,"['apt-get update -qq &&     apt-get install -y --no-install-recommends         build-essential         ca-certificates         cmake         curl         git         jq         libopenmpi-dev         unzip         wget     &&     curl -o ~/miniconda.sh https://repo.anaconda.com/miniconda/Miniconda3-py39_${CONDA_VERSION}-Linux-x86_64.sh &&     chmod +x ~/miniconda.sh &&     ~/miniconda.sh -b &&     rm ~/miniconda.sh &&     apt-get autoremove -y &&     apt-get clean &&     rm -rf /root/.cache &&     rm -rf /var/lib/apt/lists/*', 'conda create -y --name $CONDA_ENV python=${PYTHON_VERSION} pytorch=${PYTORCH_VERSION} cudatoolkit=${CUDA_VERSION} -c pytorch &&     conda init bash &&     python -c ""import re ; fname = \'environment.yml\' ; req = re.sub(r\'python>=[\\d\\.]+\', \'python=${PYTHON_VERSION}\', open(fname).read()) ; open(fname, \'w\').write(req)"" &&     python -c ""import re ; fname = \'environment.yml\' ; req = re.sub(r\'- pytorch[>=]+[\\d\\.]+\', \'# - pytorch=${PYTORCH_VERSION}\', open(fname).read()) ; open(fname, \'w\').write(req)"" &&     python -c ""fname = \'environment.yml\' ; req = open(fname).readlines() ; open(fname, \'w\').writelines([ln for ln in req if not any(n in ln for n in [\'pytorch>\', \'horovod\'])])"" &&     cat environment.yml &&     conda env update --file environment.yml &&     conda clean -ya &&     rm environment.yml', 'pip list | grep torch &&     python -c ""import torch; print(torch.__version__)"" &&     python adjust_versions.py requirements-extra.txt &&     python prune_packages.py requirements-extra.txt ""fairscale"" ""horovod"" &&     pip install -r requirements-extra.txt --no-cache-dir &&     pip install -r requirements-test.txt --no-cache-dir &&     rm requirements*', 'pip --version &&     conda info &&     pip list &&     python -c ""import sys; assert sys.version[:3] == \'$PYTHON_VERSION\', sys.version"" &&     python -c ""import torch; assert torch.__version__.startswith(\'$PYTORCH_VERSION\'), torch.__version__""']"
PyTorchLightning/pytorch-lightning,latest,/dockers/base-ipu/Dockerfile,COPY,5,"['environment.yml environment.yml', './requirements/extra.txt requirements-extra.txt', './requirements/test.txt requirements-test.txt', './requirements/adjust_versions.py adjust_versions.py', './.github/prune-packages.py prune_packages.py']"
PyTorchLightning/pytorch-lightning,latest,/dockers/base-xla/Dockerfile,FROM,1,['google/cloud-sdk:slim']
PyTorchLightning/pytorch-lightning,latest,/dockers/base-xla/Dockerfile,LABEL,1,"['maintainer=""PyTorchLightning <https://github.com/PyTorchLightning>""']"
PyTorchLightning/pytorch-lightning,latest,/dockers/base-xla/Dockerfile,ARG,3,"['PYTHON_VERSION=3.9', 'CONDA_VERSION=4.9.2', 'XLA_VERSION=1.8']"
PyTorchLightning/pytorch-lightning,latest,/dockers/base-xla/Dockerfile,SHELL,1,"['[""/bin/bash"", ""-c""]']"
PyTorchLightning/pytorch-lightning,latest,/dockers/base-xla/Dockerfile,ENV,3,"['DEBIAN_FRONTEND=noninteractive     CONDA_ENV=lightning', 'PATH=""/root/miniconda3/bin:$PATH""     LD_LIBRARY_PATH=""/root/miniconda3/lib:$LD_LIBRARY_PATH""', 'PATH=/root/miniconda3/envs/${CONDA_ENV}/bin:$PATH     LD_LIBRARY_PATH=""/root/miniconda3/envs/${CONDA_ENV}/lib:$LD_LIBRARY_PATH""     CONDA_DEFAULT_ENV=${CONDA_ENV}']"
PyTorchLightning/pytorch-lightning,latest,/dockers/base-xla/Dockerfile,RUN,6,"['lsb_release -a && cat /etc/*-release', 'apt-get update -qq &&     apt-get install -y --no-install-recommends         build-essential         cmake         wget         curl         unzip         ca-certificates         libomp5     &&     curl -o ~/miniconda.sh https://repo.anaconda.com/miniconda/Miniconda3-py39_${CONDA_VERSION}-Linux-x86_64.sh &&     chmod +x ~/miniconda.sh &&     ~/miniconda.sh -b &&     rm ~/miniconda.sh &&     apt-get autoremove -y &&     apt-get clean &&     rm -rf /root/.cache &&     rm -rf /var/lib/apt/lists/*', 'conda create -y --name $CONDA_ENV &&     conda init bash &&     python -c ""import re ; fname = \'environment.yml\' ; req = re.sub(r\'python>=[\\d\\.]+\', \'python=${PYTHON_VERSION}\', open(fname).read()) ; open(fname, \'w\').write(req)"" &&     python -c ""fname = \'environment.yml\' ; req = open(fname).readlines() ; open(fname, \'w\').writelines([ln for ln in req if not any(n in ln for n in [\'pytorch>\', \'horovod\'])])"" &&     cat environment.yml &&     conda env update --file environment.yml &&     conda clean -ya &&     rm environment.yml', 'pip --version &&     pip config set global.cache-dir false &&     conda remove pytorch torchvision &&     py_version=${PYTHON_VERSION/./} &&     gsutil cp ""gs://tpu-pytorch/wheels/torch-${XLA_VERSION}-cp${py_version}-cp${py_version}m-linux_x86_64.whl"" . &&     gsutil cp ""gs://tpu-pytorch/wheels/torch_xla-${XLA_VERSION}-cp${py_version}-cp${py_version}m-linux_x86_64.whl"" . &&     gsutil cp ""gs://tpu-pytorch/wheels/torchvision-${XLA_VERSION}-cp${py_version}-cp${py_version}m-linux_x86_64.whl"" . &&     pip install *.whl &&     rm *.whl', 'python --version &&     cd pytorch-lightning &&     python .github/prune-packages.py requirements.txt ""torch"" &&     python .github/prune-packages.py requirements/examples.txt ""torchvision"" &&     python .github/prune-packages.py requirements/extra.txt ""fairscale"" ""horovod"" &&     python ./requirements/adjust_versions.py ./requirements/extra.txt &&     pip install --requirement ./requirements/devel.txt --no-cache-dir &&     cd .. &&     rm -rf pytorch-lightning &&     rm -rf /root/.cache', 'pip --version &&     conda info &&     pip list &&     python -c ""import sys; assert sys.version[:3] == \'$PYTHON_VERSION\', sys.version"" &&     python -c ""import torch; assert torch.__version__.startswith(\'$XLA_VERSION\'), torch.__version__""']"
PyTorchLightning/pytorch-lightning,latest,/dockers/base-xla/Dockerfile,COPY,2,"['environment.yml environment.yml', './ ./pytorch-lightning/']"
PyTorchLightning/pytorch-lightning,latest,/dockers/release/Dockerfile,ARG,3,"['PYTHON_VERSION=3.9', 'PYTORCH_VERSION=1.8', 'LIGHTNING_VERSION=""""']"
PyTorchLightning/pytorch-lightning,latest,/dockers/release/Dockerfile,FROM,1,['pytorchlightning/pytorch_lightning:base-cuda-py${PYTHON_VERSION}-torch${PYTORCH_VERSION}']
PyTorchLightning/pytorch-lightning,latest,/dockers/release/Dockerfile,LABEL,1,"['maintainer=""PyTorchLightning <https://github.com/PyTorchLightning>""']"
PyTorchLightning/pytorch-lightning,latest,/dockers/release/Dockerfile,COPY,1,['./ /home/pytorch-lightning/']
PyTorchLightning/pytorch-lightning,latest,/dockers/release/Dockerfile,RUN,2,"['cd /home &&     mv pytorch-lightning/_notebooks notebooks &&     mv pytorch-lightning/pl_examples . &&     if [ ! -z ""$LIGHTNING_VERSION"" ] ; then         rm -rf pytorch-lightning ;         wget https://github.com/PyTorchLightning/pytorch-lightning/archive/${LIGHTNING_VERSION}.zip --progress=bar:force:noscroll ;         unzip ${LIGHTNING_VERSION}.zip ;         mv pytorch-lightning-*/ pytorch-lightning ;         rm *.zip ;     fi &&     pip install ./pytorch-lightning[""extra""] --no-cache-dir &&     rm -rf pytorch-lightning', 'python --version &&     pip --version &&     pip list &&     python -c ""import pytorch_lightning as pl; print(pl.__version__)""']"
PyTorchLightning/pytorch-lightning,latest,/dockers/nvidia/Dockerfile,ARG,2,"['PYTORCH_VERSION=21.11', 'LIGHTNING_VERSION=""""']"
PyTorchLightning/pytorch-lightning,latest,/dockers/nvidia/Dockerfile,FROM,1,['nvcr.io/nvidia/pytorch:${PYTORCH_VERSION}-py3']
PyTorchLightning/pytorch-lightning,latest,/dockers/nvidia/Dockerfile,LABEL,1,"['maintainer=""PyTorchLightning <https://github.com/PyTorchLightning>""']"
PyTorchLightning/pytorch-lightning,latest,/dockers/nvidia/Dockerfile,RUN,4,"['python -c ""import torch ; print(torch.__version__)"" >> torch_version.info', 'cd /workspace  &&     if [ ! -z ""$LIGHTNING_VERSION"" ] ; then         rm -rf pytorch-lightning ;         git clone https://github.com/PyTorchLightning/pytorch-lightning.git ;         cd pytorch-lightning ;         git checkout ${LIGHTNING_VERSION} ;         git submodule update --init --recursive ;         cd .. ;     fi &&     mv pytorch-lightning/_notebooks notebooks &&     mv pytorch-lightning/pl_examples . && ', 'pip install lightning-grid -U &&     pip install ""py>=1.10"" ""protobuf>=3.15.6"" --upgrade-strategy only-if-needed', 'TORCH_VERSION=$(cat torch_version.info) &&     rm torch_version.info &&     python --version &&     pip --version &&     pip list | grep torch &&     python -c ""import torch; assert torch.__version__.startswith(\'$TORCH_VERSION\'), torch.__version__"" &&     python -c ""import pytorch_lightning as pl; print(pl.__version__)""']"
PyTorchLightning/pytorch-lightning,latest,/dockers/nvidia/Dockerfile,COPY,1,['./ /workspace/pytorch-lightning/']
PyTorchLightning/pytorch-lightning,latest,/dockers/nvidia/Dockerfile,PYTHON,1,"['./pytorch-lightning/.github/prune-packages.py ./pytorch-lightning/requirements/extra.txt ""horovod"" &&     pip install ""Pillow>=8.2, !=8.3.0"" ""cryptography>=3.4"" ""py>=1.10"" --no-cache-dir --upgrade-strategy only-if-needed &&     pip install -r ./pytorch-lightning/requirements/extra.txt --no-cache-dir --upgrade-strategy only-if-needed &&     pip install -r ./pytorch-lightning/requirements/examples.txt --no-cache-dir --upgrade-strategy only-if-needed &&     pip install ./pytorch-lightning --no-cache-dir &&     rm -rf pytorch-lightning &&     pip install jupyterlab[all] -U &&     pip list']"
PyTorchLightning/pytorch-lightning,latest,/dockers/nvidia/Dockerfile,ENV,1,"['PYTHONPATH=""/workspace""']"
PyTorchLightning/pytorch-lightning,latest,/dockers/nvidia/Dockerfile,CMD,1,"['[""jupyter"", ""notebook"", ""--port=8888"", ""--no-browser"", ""--ip=0.0.0.0"", ""--allow-root""]']"
PyTorchLightning/pytorch-lightning,latest,/dockers/ipu-ci-runner/Dockerfile,ARG,2,"['PYTHON_VERSION=3.9', 'PYTORCH_VERSION=1.7']"
PyTorchLightning/pytorch-lightning,latest,/dockers/ipu-ci-runner/Dockerfile,FROM,1,['pytorchlightning/pytorch_lightning:base-ipu-py${PYTHON_VERSION}-torch${PYTORCH_VERSION}']
PyTorchLightning/pytorch-lightning,latest,/dockers/ipu-ci-runner/Dockerfile,LABEL,1,"['maintainer=""PyTorchLightning <https://github.com/PyTorchLightning>""']"
PyTorchLightning/pytorch-lightning,latest,/dockers/ipu-ci-runner/Dockerfile,RUN,2,"['echo ""ALL ALL=(ALL) NOPASSWD: ALL"" >> /etc/sudoers', 'curl -o /usr/local/bin/installdependencies.sh     ""https://raw.githubusercontent.com/microsoft/azure-pipelines-agent/d2acd5f77c6b3914cdb6ed0e5fbea672929c7da9/src/Misc/layoutbin/installdependencies.sh"" &&     chmod +x /usr/local/bin/installdependencies.sh &&     chmod +x /usr/local/bin/start.sh &&     /usr/local/bin/installdependencies.sh']"
PyTorchLightning/pytorch-lightning,latest,/dockers/ipu-ci-runner/Dockerfile,WORKDIR,1,['/azp']
PyTorchLightning/pytorch-lightning,latest,/dockers/ipu-ci-runner/Dockerfile,COPY,1,['./dockers/ipu-ci-runner/start.sh /usr/local/bin/']
PyTorchLightning/pytorch-lightning,latest,/dockers/ipu-ci-runner/Dockerfile,ENTRYPOINT,1,"['[""/usr/local/bin/start.sh""]']"
PyTorchLightning/pytorch-lightning,latest,/dockers/ipu-ci-runner/Dockerfile,CMD,1,"['[""bash""]']"
PyTorchLightning/pytorch-lightning,latest,/dockers/tpu-tests/Dockerfile,ARG,2,"['PYTHON_VERSION=3.9', 'PYTORCH_VERSION=1.8']"
PyTorchLightning/pytorch-lightning,latest,/dockers/tpu-tests/Dockerfile,FROM,1,['pytorchlightning/pytorch_lightning:base-xla-py${PYTHON_VERSION}-torch${PYTORCH_VERSION}']
PyTorchLightning/pytorch-lightning,latest,/dockers/tpu-tests/Dockerfile,LABEL,1,"['maintainer=""PyTorchLightning <https://github.com/PyTorchLightning>""']"
PyTorchLightning/pytorch-lightning,latest,/dockers/tpu-tests/Dockerfile,COPY,2,"['./ ./pytorch-lightning/', './dockers/tpu-tests/docker-entrypoint.sh /usr/local/bin/']"
PyTorchLightning/pytorch-lightning,latest,/dockers/tpu-tests/Dockerfile,RUN,3,"['cd pytorch-lightning &&     wget https://pl-public-data.s3.amazonaws.com/legacy/checkpoints.zip -P legacy/ &&     unzip -o legacy/checkpoints.zip -d legacy/ &&     ls -l legacy/checkpoints/', 'python .github/prune-packages.py ./pytorch-lightning/requirements/extra.txt ""fairscale"" ""horovod"" &&     pip install -r pytorch-lightning/requirements/devel.txt --no-cache-dir', 'chmod +x /usr/local/bin/docker-entrypoint.sh']"
PyTorchLightning/pytorch-lightning,latest,/dockers/tpu-tests/Dockerfile,ENTRYPOINT,1,"['[""/usr/local/bin/docker-entrypoint.sh""]']"
PyTorchLightning/pytorch-lightning,latest,/dockers/tpu-tests/Dockerfile,CMD,1,"['[""bash""]']"
PyTorchLightning/pytorch-lightning,latest,/dockers/base-conda/Dockerfile,ARG,4,"['CUDA_VERSION=11.1', 'PYTHON_VERSION=3.8', 'PYTORCH_VERSION=1.6', 'CONDA_VERSION=4.9.2']"
PyTorchLightning/pytorch-lightning,latest,/dockers/base-conda/Dockerfile,FROM,1,['nvidia/cuda:${CUDA_VERSION}-devel-ubuntu18.04']
PyTorchLightning/pytorch-lightning,latest,/dockers/base-conda/Dockerfile,SHELL,1,"['[""/bin/bash"", ""-c""]']"
PyTorchLightning/pytorch-lightning,latest,/dockers/base-conda/Dockerfile,ENV,3,"['PATH=""$PATH:/root/.local/bin""     DEBIAN_FRONTEND=noninteractive     TZ=Europe/Prague     MKL_THREADING_LAYER=GNU', 'PATH=""/root/miniconda3/bin:$PATH""     LD_LIBRARY_PATH=""/root/miniconda3/lib:$LD_LIBRARY_PATH""     CUDA_TOOLKIT_ROOT_DIR=""/usr/local/cuda""     MKL_THREADING_LAYER=GNU     MAKEFLAGS=""-j$(nproc)""     TORCH_CUDA_ARCH_LIST=""3.7;5.0;6.0;7.0;7.5""     CONDA_ENV=lightning', 'PATH=/root/miniconda3/envs/${CONDA_ENV}/bin:$PATH     LD_LIBRARY_PATH=""/root/miniconda3/envs/${CONDA_ENV}/lib:$LD_LIBRARY_PATH""     CONDA_DEFAULT_ENV=${CONDA_ENV}     HOROVOD_CUDA_HOME=$CUDA_TOOLKIT_ROOT_DIR     HOROVOD_BUILD_CUDA_CC_LIST=$TORCH_CUDA_ARCH_LIST     HOROVOD_GPU_OPERATIONS=NCCL     HOROVOD_WITH_PYTORCH=1     HOROVOD_WITHOUT_TENSORFLOW=1     HOROVOD_WITHOUT_MXNET=1     HOROVOD_WITH_GLOO=1     HOROVOD_WITHOUT_MPI=1']"
PyTorchLightning/pytorch-lightning,latest,/dockers/base-conda/Dockerfile,RUN,6,"['apt-get update -qq --fix-missing &&     apt-get install -y --no-install-recommends         build-essential         cmake         git         wget         curl         unzip         ca-certificates         libopenmpi-dev     && ', 'conda update -n base -c defaults conda &&     conda create -y --name $CONDA_ENV python=${PYTHON_VERSION} pytorch=${PYTORCH_VERSION} cudatoolkit=${CUDA_VERSION} -c nvidia -c pytorch -c pytorch-test -c pytorch-nightly &&     conda init bash &&     python -c ""import re ; fname = \'environment.yml\' ; req = re.sub(r\'- python[>=]+[\\d\\.]+\', \'# - python=${PYTHON_VERSION}\', open(fname).read()) ; open(fname, \'w\').write(req)"" &&     python -c ""import re ; fname = \'environment.yml\' ; req = re.sub(r\'- pytorch[>=]+[\\d\\.]+\', \'# - pytorch=${PYTORCH_VERSION}\', open(fname).read()) ; open(fname, \'w\').write(req)"" &&     cat environment.yml &&     conda env update --name $CONDA_ENV --file environment.yml &&     conda clean -ya &&     rm environment.yml', 'pip list | grep torch &&     python -c ""import torch; print(torch.__version__)"" &&     python requirements_adjust_versions.py requirements-extra.txt &&     python requirements_adjust_versions.py requirements-examples.txt &&     pip install -r requirements-extra.txt --no-cache-dir &&     pip install -r requirements-examples.txt --no-cache-dir --find-links https://download.pytorch.org/whl/nightly/torch_nightly.html &&     pip install -r requirements-test.txt --no-cache-dir &&     rm requirements*', 'CUDA_VERSION_MAJOR=$(python -c ""import torch ; print(torch.version.cuda.split(\'.\')[0])"") &&     py_ver=$(python -c ""print(int(\'$PYTHON_VERSION\'.split(\'.\') >= \'3.9\'.split(\'.\')))"") &&     if [ $py_ver -eq ""0"" ]; then         pip install --extra-index-url https://developer.download.nvidia.com/compute/redist ""nvidia-dali-cuda${CUDA_VERSION_MAJOR}0>1.0"" ;         python -c \'from nvidia.dali.pipeline import Pipeline\' ;     fi', 'pip install --no-cache-dir --global-option=""--cuda_ext"" https://github.com/NVIDIA/apex/archive/refs/heads/master.zip &&     python -c ""from apex import amp""', 'pip --version &&     conda info &&     pip list &&     python -c ""import sys; ver = sys.version_info ; assert f\'{ver.major}.{ver.minor}\' == \'$PYTHON_VERSION\', ver"" &&     python -c ""import torch; assert torch.__version__.startswith(\'$PYTORCH_VERSION\'), torch.__version__""']"
PyTorchLightning/pytorch-lightning,latest,/dockers/base-conda/Dockerfile,CURL,1,['-o ~/miniconda.sh https://repo.anaconda.com/miniconda/Miniconda3-py38_${CONDA_VERSION}-Linux-x86_64.sh &&     chmod +x ~/miniconda.sh &&     ~/miniconda.sh -b &&     rm ~/miniconda.sh && ']
PyTorchLightning/pytorch-lightning,latest,/dockers/base-conda/Dockerfile,APT-GET,1,['autoremove -y &&     apt-get clean &&     rm -rf /root/.cache &&     rm -rf /var/lib/apt/lists/*']
PyTorchLightning/pytorch-lightning,latest,/dockers/base-conda/Dockerfile,COPY,5,"['environment.yml environment.yml', './requirements/extra.txt requirements-extra.txt', './requirements/examples.txt requirements-examples.txt', './requirements/test.txt requirements-test.txt', './requirements/adjust_versions.py requirements_adjust_versions.py']"
deezer/spleeter,latest,/docker/cuda-9.2.dockerfile,ARG,1,['BASE=python:3.7']
deezer/spleeter,latest,/docker/cuda-9.2.dockerfile,FROM,1,['${BASE}']
deezer/spleeter,latest,/docker/cuda-9.2.dockerfile,RUN,9,"['apt-get update && apt-get install -y --no-install-recommends gnupg2 curl ca-certificates     && curl -fsSL https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1710/x86_64/7fa2af80.pub | apt-key add -     && echo ""deb https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1710/x86_64 /"" > /etc/apt/sources.list.d/cuda.list     && echo ""deb https://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1604/x86_64 /"" > /etc/apt/sources.list.d/nvidia-ml.list     && apt-get purge --autoremove -y curl     && rm -rf /var/lib/apt/lists/*', 'apt-get update     && apt-get install -y --no-install-recommends         cuda-cudart-$CUDA_PKG_VERSION     && ln -s cuda-9.2 /usr/local/cuda     && rm -rf /var/lib/apt/lists/*', 'echo ""/usr/local/nvidia/lib"" >> /etc/ld.so.conf.d/nvidia.conf     && echo ""/usr/local/nvidia/lib64"" >> /etc/ld.so.conf.d/nvidia.conf', 'apt-get update     && apt-get install -y --no-install-recommends         cuda-libraries-$CUDA_PKG_VERSION         cuda-nvtx-$CUDA_PKG_VERSION         libnccl2=$NCCL_VERSION-1+cuda9.2     && apt-mark hold libnccl2     && rm -rf /var/lib/apt/lists/*', 'apt-get update     && apt-get install -y --no-install-recommends libcudnn7=$CUDNN_VERSION-1+cuda9.2     && apt-mark hold libcudnn7     && rm -rf /var/lib/apt/lists/*', 'mkdir -p /model', 'apt-get update && apt-get install -y ffmpeg libsndfile1', 'pip install musdb museval', 'pip install spleeter-gpu==1.4.9']"
deezer/spleeter,latest,/docker/cuda-9.2.dockerfile,ENV,10,"['CUDA_VERSION 9.2.148', 'CUDA_PKG_VERSION 9-2=$CUDA_VERSION-1', 'PATH /usr/local/nvidia/bin:/usr/local/cuda/bin:${PATH}', 'LD_LIBRARY_PATH /usr/local/nvidia/lib:/usr/local/nvidia/lib64', 'NVIDIA_VISIBLE_DEVICES all', 'NVIDIA_DRIVER_CAPABILITIES compute,utility', 'NVIDIA_REQUIRE_CUDA ""cuda>=9.2""', 'NCCL_VERSION 2.3.7', 'CUDNN_VERSION 7.5.0.56', 'MODEL_PATH /model']"
deezer/spleeter,latest,/docker/cuda-9.2.dockerfile,LABEL,3,"['com.nvidia.volumes.needed=""nvidia_driver""', 'com.nvidia.cuda.version=""${CUDA_VERSION}""', 'com.nvidia.cudnn.version=""${CUDNN_VERSION}""']"
deezer/spleeter,latest,/docker/cuda-9.2.dockerfile,COPY,1,['audio_example.mp3 .']
deezer/spleeter,latest,/docker/cuda-9.2.dockerfile,ENTRYPOINT,1,"['[""spleeter""]']"
deezer/spleeter,latest,/docker/spleeter-model.dockerfile,ARG,2,"['BASE=researchdeezer/spleeter', 'MODEL=2stems']"
deezer/spleeter,latest,/docker/spleeter-model.dockerfile,FROM,1,['${BASE}']
deezer/spleeter,latest,/docker/spleeter-model.dockerfile,RUN,1,['mkdir -p /model/$MODEL     && wget -O /tmp/$MODEL.tar.gz https://github.com/deezer/spleeter/releases/download/v1.4.0/$MODEL.tar.gz     && tar -xvzf /tmp/$MODEL.tar.gz -C /model/$MODEL/     && touch /model/$MODEL/.probe']
deezer/spleeter,latest,/docker/cuda-10-0.dockerfile,ARG,1,['BASE=python:3.7']
deezer/spleeter,latest,/docker/cuda-10-0.dockerfile,FROM,1,['${BASE}']
deezer/spleeter,latest,/docker/cuda-10-0.dockerfile,ENV,9,"['CUDA_VERSION 10.0.130', 'CUDA_PKG_VERSION 10-0=$CUDA_VERSION-1', 'PATH /usr/local/nvidia/bin:/usr/local/cuda/bin:${PATH}', 'LD_LIBRARY_PATH /usr/local/nvidia/lib:/usr/local/nvidia/lib64', 'NVIDIA_VISIBLE_DEVICES=all', 'NVIDIA_DRIVER_CAPABILITIES compute,utility', 'NVIDIA_REQUIRE_CUDA ""cuda>=10.0 brand=tesla,driver>=384,driver<385 brand=tesla,driver>=410,driver<411""', 'NCCL_VERSION 2.4.2', 'CUDNN_VERSION 7.6.0.64']"
deezer/spleeter,latest,/docker/cuda-10-0.dockerfile,LABEL,3,"['com.nvidia.cuda.version=""${CUDA_VERSION}""', 'com.nvidia.cudnn.version=""${CUDNN_VERSION}""', 'com.nvidia.volumes.needed=""nvidia_driver""']"
deezer/spleeter,latest,/docker/cuda-10-0.dockerfile,RUN,1,"['apt-get update     && apt-get install -y --no-install-recommends         gnupg2         curl         ca-certificates     && curl -fsSL https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/7fa2af80.pub | apt-key add -     && echo ""deb https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64 /"" > /etc/apt/sources.list.d/cuda.list     && echo ""deb https://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1804/x86_64 /"" > /etc/apt/sources.list.d/nvidia-ml.list     && apt-get purge --autoremove -y curl     && apt-get update     && apt-get install -y --no-install-recommends         cuda-cudart-$CUDA_PKG_VERSION         cuda-compat-10-0     && ln -s cuda-10.0 /usr/local/cuda     && echo ""/usr/local/nvidia/lib"" >> /etc/ld.so.conf.d/nvidia.conf     && echo ""/usr/local/nvidia/lib64"" >> /etc/ld.so.conf.d/nvidia.conf     && apt-get install -y --no-install-recommends         cuda-toolkit-10-0         cuda-libraries-$CUDA_PKG_VERSION         cuda-nvtx-$CUDA_PKG_VERSION         libnccl2=$NCCL_VERSION-1+cuda10.0         libcudnn7=$CUDNN_VERSION-1+cuda10.0     && apt-mark hold libnccl2     && apt-mark hold libcudnn7     && rm -rf /var/lib/apt/lists/*']"
deezer/spleeter,latest,/docker/cuda-10-1.dockerfile,ARG,1,['BASE=python:3.8']
deezer/spleeter,latest,/docker/cuda-10-1.dockerfile,FROM,1,['${BASE}']
deezer/spleeter,latest,/docker/cuda-10-1.dockerfile,ENV,9,"['CUDA_VERSION 10.1.243', 'CUDA_PKG_VERSION 10-1=$CUDA_VERSION-1', 'PATH /usr/local/nvidia/bin:/usr/local/cuda/bin:${PATH}', 'LD_LIBRARY_PATH /usr/local/nvidia/lib:/usr/local/nvidia/lib64', 'NVIDIA_VISIBLE_DEVICES all', 'NVIDIA_DRIVER_CAPABILITIES compute,utility', 'NVIDIA_REQUIRE_CUDA ""cuda>=10.1 brand=tesla,driver>=396,driver<397 brand=tesla,driver>=410,driver<411 brand=tesla,driver>=418,driver<419""', 'CUDNN_VERSION 7.6.5.32', 'NCCL_VERSION 2.7.8']"
deezer/spleeter,latest,/docker/cuda-10-1.dockerfile,LABEL,3,"['com.nvidia.cuda.version=""${CUDA_VERSION}""', 'com.nvidia.cudnn.version=""${CUDNN_VERSION}""', 'com.nvidia.volumes.needed=""nvidia_driver""']"
deezer/spleeter,latest,/docker/cuda-10-1.dockerfile,RUN,1,"['apt-get update     && apt-get install -y --no-install-recommends         gnupg2         curl         ca-certificates     && curl -fsSL https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/7fa2af80.pub | apt-key add -     && echo ""deb https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64 /"" > /etc/apt/sources.list.d/cuda.list     && echo ""deb https://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1804/x86_64 /"" > /etc/apt/sources.list.d/nvidia-ml.list     && apt-get purge --autoremove -y curl     && apt-get update     && apt-get install -y --no-install-recommends         cuda-cudart-$CUDA_PKG_VERSION         cuda-compat-10-1     && ln -s cuda-10.1 /usr/local/cuda     && echo ""/usr/local/nvidia/lib"" >> /etc/ld.so.conf.d/nvidia.conf     && echo ""/usr/local/nvidia/lib64"" >> /etc/ld.so.conf.d/nvidia.conf     && apt-get install -y --no-install-recommends         cuda-libraries-$CUDA_PKG_VERSION         cuda-npp-$CUDA_PKG_VERSION         cuda-nvtx-$CUDA_PKG_VERSION         libcublas10=10.2.1.243-1         libcudnn7=$CUDNN_VERSION-1+cuda10.1         libnccl2=$NCCL_VERSION-1+cuda10.1     && apt-mark hold libnccl2     && apt-mark hold libcudnn7     && apt-mark hold libcublas10     && rm -rf /var/lib/apt/lists/*']"
deezer/spleeter,latest,/docker/spleeter-conda.dockerfile,ARG,2,"['BASE=conda', 'SPLEETER_VERSION=1.5.3']"
deezer/spleeter,latest,/docker/spleeter-conda.dockerfile,FROM,1,['${BASE}']
deezer/spleeter,latest,/docker/spleeter-conda.dockerfile,ENV,1,['MODEL_PATH /model']
deezer/spleeter,latest,/docker/spleeter-conda.dockerfile,RUN,4,"['mkdir -p /model', 'conda config --add channels conda-forge', 'conda install -y -c conda-forge musdb', 'conda install -y -c deezer-research spleeter']"
deezer/spleeter,latest,/docker/spleeter-conda.dockerfile,COPY,1,['docker/conda-entrypoint.sh spleeter-entrypoint.sh']
deezer/spleeter,latest,/docker/spleeter-conda.dockerfile,ENTRYPOINT,1,"['[""/bin/bash"", ""spleeter-entrypoint.sh""]']"
deezer/spleeter,latest,/docker/conda.dockerfile,ARG,1,['BASE=python:3.7']
deezer/spleeter,latest,/docker/conda.dockerfile,FROM,1,['${BASE}']
deezer/spleeter,latest,/docker/conda.dockerfile,RUN,1,"['apt-get update --fix-missing     && apt-get install -y wget bzip2 ca-certificates curl git     && apt-get clean     && rm -rf /var/lib/apt/lists/*     && wget --quiet https://repo.anaconda.com/miniconda/Miniconda3-4.6.14-Linux-x86_64.sh -O ~/miniconda.sh     && /bin/bash ~/miniconda.sh -b -p /opt/conda     && rm ~/miniconda.sh     && /opt/conda/bin/conda clean -tipsy     && ln -s /opt/conda/etc/profile.d/conda.sh /etc/profile.d/conda.sh     && echo "". /opt/conda/etc/profile.d/conda.sh"" >> ~/.bashrc     && echo ""conda activate base"" >> ~/.bashrc     && ln -s /opt/conda/bin/conda /usr/bin/conda']"
deezer/spleeter,latest,/docker/conda.dockerfile,SHELL,1,"['[""/bin/bash"", ""-c""]']"
deezer/spleeter,latest,/docker/spleeter.dockerfile,ARG,2,"['BASE=python:3.6', 'SPLEETER_VERSION=1.5.3']"
deezer/spleeter,latest,/docker/spleeter.dockerfile,FROM,1,['${BASE}']
deezer/spleeter,latest,/docker/spleeter.dockerfile,ENV,1,['MODEL_PATH /model']
deezer/spleeter,latest,/docker/spleeter.dockerfile,RUN,4,"['mkdir -p /model', 'apt-get update && apt-get install -y ffmpeg libsndfile1', 'pip install musdb museval', 'pip install spleeter==${SPLEETER_VERSION}']"
deezer/spleeter,latest,/docker/spleeter.dockerfile,ENTRYPOINT,1,"['[""spleeter""]']"
openvinotoolkit/cvat,latest,/Dockerfile,FROM,2,"['ubuntu:20.04 as build-image', 'ubuntu:20.04']"
openvinotoolkit/cvat,latest,/Dockerfile,ARG,16,"['http_proxy', 'https_proxy', 'no_proxy=""nuclio,${no_proxy}""', 'socks_proxy', 'DJANGO_CONFIGURATION=""production""', 'PREFIX=/opt/ffmpeg', 'PKG_CONFIG_PATH=${PREFIX}/lib/pkgconfig', 'http_proxy', 'https_proxy', 'no_proxy=""nuclio,${no_proxy}""', 'socks_proxy', 'TZ=""Etc/UTC""', 'USER=""django""', 'DJANGO_CONFIGURATION=""production""', 'CLAM_AV=""no""', ""INSTALL_SOURCES='no'""]"
openvinotoolkit/cvat,latest,/Dockerfile,RUN,11,"['apt-get update &&     DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -yq         apache2-dev         build-essential         curl         libldap2-dev         libsasl2-dev         nasm         git         pkg-config         python3-dev         python3-pip         python3-venv &&     rm -rf /var/lib/apt/lists/*', 'curl -sL https://github.com/cisco/openh264/archive/v${OPENH264_VERSION}.tar.gz --output openh264-${OPENH264_VERSION}.tar.gz &&     tar -zx --strip-components=1 -f openh264-${OPENH264_VERSION}.tar.gz &&     make -j5 && make install PREFIX=${PREFIX} && make clean', 'curl -sL https://ffmpeg.org/releases/ffmpeg-${FFMPEG_VERSION}.tar.bz2 --output - |     tar -jx --strip-components=1 &&     ./configure --disable-nonfree --disable-gpl --enable-libopenh264 --enable-shared --disable-static --prefix=""${PREFIX}"" &&     make -j5 && make install && make clean &&     tar -zcf ""/tmp/ffmpeg-$FFMPEG_VERSION.tar.gz"" . && mv ""/tmp/ffmpeg-$FFMPEG_VERSION.tar.gz"" .', 'python3 -m venv /opt/venv', 'python3 -m pip install --no-cache-dir -U pip==21.0.1 setuptools==53.0.0 wheel==0.36.2', 'DATUMARO_HEADLESS=1 python3 -m pip install --no-cache-dir -r /tmp/requirements/${DJANGO_CONFIGURATION}.txt', ""apt-get update &&     DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -yq         apache2         ca-certificates         libapache2-mod-xsendfile         libgomp1         libgl1         supervisor         libldap-2.4-2         libsasl2-2         libpython3-dev         tzdata         python3-distutils         p7zip-full         git         git-lfs         poppler-utils         ssh         curl &&     ln -fs /usr/share/zoneinfo/${TZ} /etc/localtime &&     dpkg-reconfigure -f noninteractive tzdata &&     rm -rf /var/lib/apt/lists/* &&     echo 'application/wasm wasm' >> /etc/mime.types"", 'adduser --shell /bin/bash --disabled-password --gecos """" ${USER} &&     if [ -z ${socks_proxy} ]; then         echo export ""GIT_SSH_COMMAND=\\""ssh -o StrictHostKeyChecking=no -o ConnectTimeout=30\\"""" >> ${HOME}/.bashrc;     else         echo export ""GIT_SSH_COMMAND=\\""ssh -o StrictHostKeyChecking=no -o ConnectTimeout=30 -o ProxyCommand=\'nc -X 5 -x ${socks_proxy} %h %p\'\\"""" >> ${HOME}/.bashrc;     fi', 'if [ ""$CLAM_AV"" = ""yes"" ]; then         apt-get update &&         apt-get --no-install-recommends install -yq             clamav             libclamunrar9 &&         sed -i \'s/ReceiveTimeout 30/ReceiveTimeout 300/g\' /etc/clamav/freshclam.conf &&         freshclam &&         chown -R ${USER}:${USER} /var/lib/clamav &&         rm -rf /var/lib/apt/lists/*;     fi', 'if [ ""$INSTALL_SOURCES"" = ""yes"" ]; then         sed -Ei \'s/^# deb-src /deb-src /\' /etc/apt/sources.list &&         apt-get update &&         dpkg --get-selections | while read -r line; do                    package=$(echo ""$line"" | awk \'{print $1}\');                   mkdir ""$package"";                                             (                                                                 cd ""$package"";                                                apt-get -q --download-only source ""$package"";             )                                                             done &&                                                   rm -rf /var/lib/apt/lists/*;                              fi', 'mkdir data share media keys logs /tmp/supervisord']"
openvinotoolkit/cvat,latest,/Dockerfile,ENV,7,"['FFMPEG_VERSION=4.3.1     OPENH264_VERSION=2.1.1', 'PATH=""/opt/venv/bin:${PATH}""', ""TERM=xterm     http_proxy=${http_proxy}       https_proxy=${https_proxy}     no_proxy=${no_proxy}     socks_proxy=${socks_proxy}     LANG='C.UTF-8'      LC_ALL='C.UTF-8'     TZ=${TZ}"", 'DJANGO_CONFIGURATION=${DJANGO_CONFIGURATION}', 'USER=${USER}', 'HOME /home/${USER}', 'PATH=""/opt/venv/bin:${PATH}""']"
openvinotoolkit/cvat,latest,/Dockerfile,WORKDIR,4,"['/tmp/openh264', '/tmp/ffmpeg', '${HOME}/sources', '${HOME}']"
openvinotoolkit/cvat,latest,/Dockerfile,COPY,10,"['cvat/requirements/ /tmp/requirements/', '--from=build-image /tmp/openh264/openh264*.tar.gz /tmp/ffmpeg/ffmpeg*.tar.gz ${HOME}/sources/', '--from=build-image /opt/venv /opt/venv', '--from=build-image /opt/ffmpeg /usr', '--chown=${USER} components /tmp/components', '--chown=${USER} ssh ${HOME}/.ssh', '--chown=${USER} supervisord.conf mod_wsgi.conf wait-for-it.sh manage.py ${HOME}/', '--chown=${USER} cvat/ ${HOME}/cvat', '--chown=${USER} utils/ ${HOME}/utils', '--chown=${USER} tests/ ${HOME}/tests']"
openvinotoolkit/cvat,latest,/Dockerfile,USER,1,['${USER}']
openvinotoolkit/cvat,latest,/Dockerfile,EXPOSE,1,['8080']
openvinotoolkit/cvat,latest,/Dockerfile,ENTRYPOINT,1,"['[""/usr/bin/supervisord""]']"
openvinotoolkit/cvat,latest,/Dockerfile.ui,FROM,2,"['node:lts-slim AS cvat-ui', 'nginx:mainline-alpine']"
openvinotoolkit/cvat,latest,/Dockerfile.ui,ARG,6,"['http_proxy', 'https_proxy', 'no_proxy', 'socks_proxy', 'PUBLIC_INSTANCE', 'WA_PAGE_VIEW_HIT']"
openvinotoolkit/cvat,latest,/Dockerfile.ui,ENV,1,"[""TERM=xterm     http_proxy=${http_proxy}       https_proxy=${https_proxy}     no_proxy=${no_proxy}     socks_proxy=${socks_proxy}     LANG='C.UTF-8'      LC_ALL='C.UTF-8'""]"
openvinotoolkit/cvat,latest,/Dockerfile.ui,COPY,13,"['package*.json /tmp/', 'cvat-core/package*.json /tmp/cvat-core/', 'cvat-canvas/package*.json /tmp/cvat-canvas/', 'cvat-canvas3d/package*.json /tmp/cvat-canvas3d/', 'cvat-ui/package*.json /tmp/cvat-ui/', 'cvat-data/package*.json /tmp/cvat-data/', 'cvat-data/ /tmp/cvat-data/', 'cvat-core/ /tmp/cvat-core/', 'cvat-canvas3d/ /tmp/cvat-canvas3d/', 'cvat-canvas/ /tmp/cvat-canvas/', 'cvat-ui/ /tmp/cvat-ui/', 'cvat-ui/react_nginx.conf /etc/nginx/conf.d/default.conf', '--from=cvat-ui /tmp/cvat-ui/dist /usr/share/nginx/html/']"
openvinotoolkit/cvat,latest,/Dockerfile.ui,WORKDIR,1,['/tmp/']
openvinotoolkit/cvat,latest,/Dockerfile.ui,RUN,3,"['npm ci --ignore-scripts', 'npm run build:cvat-ui', 'sed -i ""s/}/application\\/wasm wasm;\\n}/g"" /etc/nginx/mime.types']"
openvinotoolkit/cvat,latest,/Dockerfile.ci,FROM,1,['openvino/cvat_server']
openvinotoolkit/cvat,latest,/Dockerfile.ci,ENV,1,['DJANGO_CONFIGURATION=testing']
openvinotoolkit/cvat,latest,/Dockerfile.ci,USER,1,['root']
openvinotoolkit/cvat,latest,/Dockerfile.ci,RUN,3,"[""apt-get update &&     DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -yq         gpg-agent         gnupg2         apt-utils         build-essential         python3-dev         ruby         &&     curl https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - &&     echo 'deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main' | tee /etc/apt/sources.list.d/google-chrome.list &&     curl https://deb.nodesource.com/setup_16.x | bash - &&     DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -yq         google-chrome-stable         nodejs         &&     rm -rf /var/lib/apt/lists/*;"", 'DATUMARO_HEADLESS=1 python3 -m pip install --no-cache-dir -r /tmp/requirements/${DJANGO_CONFIGURATION}.txt &&     python3 -m pip install --no-cache-dir coveralls', 'gem install coveralls-lcov']"
openvinotoolkit/cvat,latest,/Dockerfile.ci,COPY,6,"['cvat/requirements/ /tmp/requirements/', 'utils ${HOME}/utils', 'cvat-core ${HOME}/cvat-core', 'cvat-data ${HOME}/cvat-data', 'tests ${HOME}/tests', '.coveragerc .']"
openvinotoolkit/cvat,latest,/Dockerfile.ci,ENTRYPOINT,1,['[]']
openvinotoolkit/cvat,latest,/components/analytics/kibana/Dockerfile,ARG,1,['ELK_VERSION']
openvinotoolkit/cvat,latest,/components/analytics/kibana/Dockerfile,FROM,1,['docker.elastic.co/kibana/kibana-oss:${ELK_VERSION}']
openvinotoolkit/cvat,latest,/components/analytics/kibana/Dockerfile,COPY,1,['kibana.yml /usr/share/kibana/config/']
openvinotoolkit/cvat,latest,/components/analytics/logstash/Dockerfile,ARG,1,['ELK_VERSION']
openvinotoolkit/cvat,latest,/components/analytics/logstash/Dockerfile,FROM,1,['docker.elastic.co/logstash/logstash-oss:${ELK_VERSION}']
openvinotoolkit/cvat,latest,/components/analytics/logstash/Dockerfile,RUN,1,['logstash-plugin install logstash-input-http logstash-filter-aggregate     logstash-filter-prune logstash-output-email']
openvinotoolkit/cvat,latest,/components/analytics/logstash/Dockerfile,COPY,2,"['logstash.yml  /usr/share/logstash/config/', 'logstash.conf /usr/share/logstash/pipeline/']"
openvinotoolkit/cvat,latest,/components/analytics/logstash/Dockerfile,EXPOSE,1,['8080']
openvinotoolkit/cvat,latest,/components/analytics/elasticsearch/Dockerfile,ARG,1,['ELK_VERSION']
openvinotoolkit/cvat,latest,/components/analytics/elasticsearch/Dockerfile,FROM,1,['docker.elastic.co/elasticsearch/elasticsearch-oss:${ELK_VERSION}']
openvinotoolkit/cvat,latest,/components/analytics/elasticsearch/Dockerfile,COPY,1,['--chown=elasticsearch:elasticsearch elasticsearch.yml /usr/share/elasticsearch/config/']
numenta/nupic,latest,/Dockerfile,FROM,1,['ubuntu:14.04']
numenta/nupic,latest,/Dockerfile,RUN,11,"['apt-get update &&     apt-get install -y     curl     wget     git-core     gcc     g++     cmake3     python     python2.7     python2.7-dev     zlib1g-dev     bzip2     libyaml-dev     libyaml-0-2', 'wget http://releases.numenta.org/pip/1ebd3cb7a5a3073058d0c9552ab074bd/get-pip.py -O - | python', 'pip install --upgrade setuptools', 'pip install wheel', 'pip install numpy pycapnp', 'cat ${NUPIC}/requirements.txt|grep ""^nupic\\.bindings""|cut -d ""=""  -f 3 > VERSION', 'wget -qO - https://github.com/numenta/nupic.core/archive/$(cat VERSION).tar.gz | tar --strip-components=1 -xzf -', 'cmake -DCMAKE_BUILD_TYPE=Debug -DCMAKE_INSTALL_PREFIX=../release -DPY_EXTENSIONS_DIR=../../bindings/py/nupic/bindings ../..', 'make install', 'python setup.py install', 'python setup.py install']"
numenta/nupic,latest,/Dockerfile,ENV,5,"['CC gcc', 'CXX g++', 'NUPIC /usr/local/src/nupic', 'NTA_DATA_PATH /usr/local/src/nupic/prediction/data', 'USER docker']"
numenta/nupic,latest,/Dockerfile,WORKDIR,5,"['/usr/local/src/nupic.core', '/usr/local/src/nupic.core/build/scripts', '/usr/local/src/nupic.core', '/usr/local/src/nupic', '/home/docker']"
numenta/nupic,latest,/Dockerfile,ADD,2,"['requirements.txt ${NUPIC}/requirements.txt', '. $NUPIC']"
numenta/nupic,latest,/Dockerfile-complete,FROM,1,['numenta/nupic']
numenta/nupic,latest,/Dockerfile-complete,MAINTAINER,1,['Allan Costa <allaninocencio@yahoo.com.br>']
numenta/nupic,latest,/Dockerfile-complete,RUN,3,"['apt-get update &&     DEBIAN_FRONTEND=noninteractive apt-get install -y mysql-server', 'echo ""#!/bin/bash\\nservice mysql start\\nexec \\$*"" >> /home/docker/startup.sh &&     chmod +x /home/docker/startup.sh', '/home/docker/startup.sh python $NUPIC/examples/swarm/test_db.py']"
numenta/nupic,latest,/Dockerfile-complete,ENTRYPOINT,1,"['[""/home/docker/startup.sh""]']"
tensorlayer/tensorlayer,latest,/docker/Dockerfile,ARG,3,"['TF_CONTAINER_VERSION', 'TL_VERSION', 'TF_CONTAINER_VERSION']"
tensorlayer/tensorlayer,latest,/docker/Dockerfile,FROM,1,['tensorflow/tensorflow:${TF_CONTAINER_VERSION}']
tensorlayer/tensorlayer,latest,/docker/Dockerfile,LABEL,1,"['version=""1.0"" maintainer=""Jonathan DEKHTIAR <contact@jonathandekhtiar.eu>""']"
tensorlayer/tensorlayer,latest,/docker/Dockerfile,RUN,1,"['echo ""Container Tag: ${TF_CONTAINER_VERSION}""     && apt-get update     && case $TF_CONTAINER_VERSION in             latest-py3 | latest-gpu-py3) apt-get install -y python3-tk  ;;             *)                           apt-get install -y python-tk ;;         esac     && if [ -z ""$TL_VERSION"" ]; then         echo ""Building a Nightly Release""         && apt-get install -y git         && mkdir /dist/ && cd /dist/         && git clone https://github.com/tensorlayer/tensorlayer.git         && cd tensorlayer         && pip install --disable-pip-version-check --no-cache-dir --upgrade -e .[all];     else         echo ""Building Tag Release: $TL_VERSION""         && pip install  --disable-pip-version-check --no-cache-dir --upgrade tensorlayer[all]==""$TL_VERSION"";     fi     && apt-get autoremove -y     && rm -rf /var/lib/apt/lists/*']"
tensorlayer/tensorlayer,latest,/docker/docs/Dockerfile,FROM,1,['ubuntu:bionic']
tensorlayer/tensorlayer,latest,/docker/docs/Dockerfile,ADD,2,"['docker/docs/sources.list.ustc /etc/apt/sources.list', '. /tensorlayer']"
tensorlayer/tensorlayer,latest,/docker/docs/Dockerfile,ENV,1,['DEBIAN_FRONTEND=noninteractive']
tensorlayer/tensorlayer,latest,/docker/docs/Dockerfile,RUN,5,"['apt update &&     apt install -y python3-pip python3-tk python-qt4 wget &&     pip3 install -i https://pypi.tuna.tsinghua.edu.cn/simple tensorflow', 'ln -s `which pip3` /usr/bin/pip &&     ./scripts/install-horovod-for-doc-test.sh', 'pip3 install -i https://pypi.tuna.tsinghua.edu.cn/simple .', 'pip3 install -i https://pypi.tuna.tsinghua.edu.cn/simple -e .[all]', 'make -C docs html']"
tensorlayer/tensorlayer,latest,/docker/docs/Dockerfile,WORKDIR,1,['/tensorlayer']
microsoft/nni,latest,/Dockerfile,FROM,1,['nvidia/cuda:10.2-cudnn8-runtime-ubuntu18.04']
microsoft/nni,latest,/Dockerfile,ARG,1,['NNI_RELEASE']
microsoft/nni,latest,/Dockerfile,LABEL,1,"[""maintainer='Microsoft NNI Team<nni@microsoft.com>'""]"
microsoft/nni,latest,/Dockerfile,ENV,2,"['DEBIAN_FRONTEND=noninteractive', 'PATH=/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/root/.local/bin:/usr/bin:/bin:/sbin']"
microsoft/nni,latest,/Dockerfile,RUN,16,"['apt-get -y update', 'apt-get -y install     sudo     apt-utils     git     curl     vim     unzip     wget     build-essential     cmake     libopenblas-dev     automake     openssh-client     openssh-server     lsof     python3.6     python3-dev     python3-pip     python3-tk     libcupti-dev', 'apt-get clean', 'rm -rf /var/lib/apt/lists/*', 'ln -s python3 /usr/bin/python', 'python3 -m pip install --upgrade pip==20.2.4 setuptools==50.3.2', 'python3 -m pip --no-cache-dir install numpy==1.19.5 scipy==1.5.4', 'python3 -m pip --no-cache-dir install tensorflow==2.3.1', 'python3 -m pip --no-cache-dir install Keras==2.4.3', 'python3 -m pip --no-cache-dir install torch==1.7.1 torchvision==0.8.2 pytorch-lightning==1.3.3', 'python3 -m pip --no-cache-dir install scikit-learn==0.24.1', 'python3 -m pip --no-cache-dir install pandas==1.1 lightgbm==2.2.2', 'python3 -m pip install nni-${NNI_RELEASE}-py3-none-manylinux1_x86_64.whl', 'python3 interim_patch.py', 'python3 -m pip --no-cache-dir install azureml', 'python3 -m pip --no-cache-dir install azureml-sdk']"
microsoft/nni,latest,/Dockerfile,COPY,2,"['dist/nni-${NNI_RELEASE}-py3-none-manylinux1_x86_64.whl .', 'test/vso_tools/interim_patch.py .']"
microsoft/nni,latest,/Dockerfile,WORKDIR,1,['/root']
microsoft/nni,latest,/examples/trials/cifar10_pytorch/adl.Dockerfile,FROM,1,['pytorch/pytorch:1.4-cuda10.1-cudnn7-runtime']
microsoft/nni,latest,/examples/trials/cifar10_pytorch/adl.Dockerfile,RUN,1,['pip install nni adaptdl tensorboard']
microsoft/nni,latest,/examples/trials/cifar10_pytorch/adl.Dockerfile,COPY,1,['./ /cifar10']
microsoft/nni,latest,/examples/trials/systems_auto_tuning/opevo/Dockerfile,FROM,1,['nvidia/cuda:10.0-cudnn7-devel-ubuntu18.04']
microsoft/nni,latest,/examples/trials/systems_auto_tuning/opevo/Dockerfile,ENV,6,"['PYTHONDONTWRITEBYTECODE 1', 'HIP_PLATFORM hcc', 'PATH $PATH:/opt/rocm/bin:/usr/local/nvidia/lib64/bin', 'TVM_HOME=/opt/tvm', 'PYTHONPATH=/usr/local/rocm/src:$TVM_HOME/python:$TVM_HOME/topi/python:$TVM_HOME/nnvm/python', 'HSA_USERPTR_FOR_PAGED_MEM=0']"
microsoft/nni,latest,/examples/trials/systems_auto_tuning/opevo/Dockerfile,RUN,11,"['env > /etc/environment', 'apt-get update && apt install -y --no-install-recommends git ca-certificates     python3-pip python3-wheel python3-setuptools python3-dev python3-pytest     vim less netcat-openbsd inetutils-ping curl patch iproute2     g++ libpci3 libnuma-dev make cmake file openssh-server kmod gdb libopenmpi-dev openmpi-bin         autoconf automake autotools-dev libtool multiarch-support     && rm -rf /var/lib/apt/lists/*', 'curl -sL http://repo.radeon.com/rocm/apt/debian/rocm.gpg.key | apt-key add - &&     printf ""deb [arch=amd64] http://repo.radeon.com/rocm/apt/3.3/ xenial main"" | tee /etc/apt/sources.list.d/rocm_hip.list &&     apt update && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends     rocm-dev zlib1g-dev unzip librdmacm-dev rocblas hipsparse rccl rocfft rocrand miopen-hip && apt-get clean && rm -rf /var/lib/apt/lists/*', 'ln -sf libcudart.so /usr/local/cuda-10.0/targets/x86_64-linux/lib/libcudart_static.a', 'pip3 install tornado psutil xgboost==0.80 numpy decorator attrs && rm -rf ~/.cache', 'git clone https://github.com/dmlc/tvm $TVM_HOME', ""cd $TVM_HOME && git checkout v0.6 && git submodule init && git submodule update &&     mkdir -p build && cd build && cp ../cmake/config.cmake . &&     sed -i 's/LLVM ON/LLVM OFF/g' config.cmake && sed -i 's/CUDA OFF/CUDA ON/g' config.cmake &&     cmake .. && make -j16"", 'pip3 install nni==1.5 && rm -rf ~/.cache', 'pip3 install torch==1.5.0+cpu torchvision==0.6.0+cpu -f https://download.pytorch.org/whl/torch_stable.html && rm -rf ~/.cache', 'ln -sf libcuda.so.1 $TVM_HOME/build/libcudart.so.10.0', 'cd $TVM_HOME && git apply tvm_v0.6.patch && cd build && make -j16']"
microsoft/nni,latest,/examples/trials/systems_auto_tuning/opevo/Dockerfile,ADD,3,"['tvm_patches/tvm_v0.6.patch $TVM_HOME/tvm_v0.6.patch', 'tvm_patches/libcuda.so.1 $TVM_HOME/build', 'src /root/']"
isl-org/Open3D,latest,/docs/_static/docker/Dockerfile,FROM,1,['ubuntu:18.04']
isl-org/Open3D,latest,/docs/_static/docker/Dockerfile,ENV,2,"['DEBIAN_FRONTEND noninteractive', 'HOME=/root']"
isl-org/Open3D,latest,/docs/_static/docker/Dockerfile,RUN,4,"['apt-get update &&     apt-get upgrade -y &&     apt-get install -y --no-install-recommends     apt-utils     build-essential     cmake     git     gdb     libeigen3-dev     libgl1-mesa-dev     libgl1-mesa-glx     libglew-dev     libglfw3-dev     libglu1-mesa-dev     libosmesa6-dev     libpng-dev     lxde     mesa-utils     ne     python3     python3-dev     python3-pip     python3-tk     python3-dbg     pybind11-dev     software-properties-common     x11vnc     xorg-dev     xterm     xvfb &&     rm -rf /var/lib/apt/lists/*', 'pip3 install --upgrade pip', 'pip3 install     matplotlib     numpy     opencv-python', 'chmod a+x .xinitrc']"
isl-org/Open3D,latest,/docs/_static/docker/Dockerfile,EXPOSE,1,['5920']
isl-org/Open3D,latest,/docs/_static/docker/Dockerfile,WORKDIR,2,"['$HOME', '$HOME/open3d']"
isl-org/Open3D,latest,/docs/_static/docker/Dockerfile,COPY,2,"['./setup/.xinitrc .', './setup/entrypoint.sh .']"
isl-org/Open3D,latest,/docs/_static/docker/Dockerfile,CMD,1,"['[""bash"", ""/root/entrypoint.sh""]']"
isl-org/Open3D,latest,/.github/workflows/Dockerfile.wheel,ARG,7,"['BASE_IMAGE=nvidia/cuda:11.0.3-cudnn8-devel-ubuntu18.04', 'DEVELOPER_BUILD=ON', 'CCACHE_TAR_NAME=open3d-ubuntu-1804-cuda-ci-ccache', 'CMAKE_VERSION=cmake-3.19.7-Linux-x86_64', 'CCACHE_VERSION=4.3', 'PYTHON_VERSION=3.6', 'CCACHE_VERSION=${CCACHE_VERSION}']"
isl-org/Open3D,latest,/.github/workflows/Dockerfile.wheel,FROM,1,['${BASE_IMAGE}']
isl-org/Open3D,latest,/.github/workflows/Dockerfile.wheel,ENV,11,"['DEVELOPER_BUILD=${DEVELOPER_BUILD}', 'CCACHE_TAR_NAME=${CCACHE_TAR_NAME}', 'CMAKE_VERSION=${CMAKE_VERSION}', 'PYTHON_VERSION=${PYTHON_VERSION}', 'DEBIAN_FRONTEND=noninteractive', 'TZ=America/Los_Angeles', 'SUDO=command', 'PATH=${HOME}/${CMAKE_VERSION}/bin:${PATH}', 'PATH=""/root/miniconda3/bin:${PATH}""', 'PATH=""/root/miniconda3/envs/open3d/bin:${PATH}""', 'OPEN3D_ML_ROOT=/root/Open3D-ML']"
isl-org/Open3D,latest,/.github/workflows/Dockerfile.wheel,SHELL,1,"['[""/bin/bash"", ""-c""]']"
isl-org/Open3D,latest,/.github/workflows/Dockerfile.wheel,RUN,16,"['apt-get update && apt-get install -y     git      wget     curl  && rm -rf /var/lib/apt/lists/*', 'CMAKE_VERSION_NUMBERS=$(echo ""${CMAKE_VERSION}"" | cut -d""-"" -f2)  && wget -q https://github.com/Kitware/CMake/releases/download/v${CMAKE_VERSION_NUMBERS}/${CMAKE_VERSION}.tar.gz  && tar -xf ${CMAKE_VERSION}.tar.gz  && cp -ar ${CMAKE_VERSION} ${HOME}', 'git clone https://github.com/ccache/ccache.git  && cd ccache  && git checkout v${CCACHE_VERSION} -b ${CCACHE_VERSION}  && mkdir build  && cd build  && cmake -DCMAKE_BUILD_TYPE=Release -DZSTD_FROM_INTERNET=ON ..  && make install -j$(nproc)  && which ccache  && ccache --version  && ccache -s', 'CCACHE_DIR=$(ccache -p | grep cache_dir | grep -oE ""[^ ]+$"")  && CCACHE_DIR_NAME=$(basename ${CCACHE_DIR})  && CCACHE_DIR_PARENT=$(dirname ${CCACHE_DIR})  && mkdir -p ${CCACHE_DIR_PARENT}  && cd ${CCACHE_DIR_PARENT}  && (wget -q https://storage.googleapis.com/open3d-ci-cache/${CCACHE_TAR_NAME}.tar.gz || true)  && if [ -f ${CCACHE_TAR_NAME}.tar.gz ]; then tar -xf ${CCACHE_TAR_NAME}.tar.gz; fi', 'ccache -M 5G  && ccache -s', 'wget -q https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh  && bash Miniconda3-latest-Linux-x86_64.sh -b  && rm Miniconda3-latest-Linux-x86_64.sh  && conda --version', 'conda create -y -n open3d python=${PYTHON_VERSION}  && source activate open3d', 'which python  && python --version', 'git clone https://github.com/isl-org/Open3D-ML.git ${OPEN3D_ML_ROOT}', '/root/Open3D/util/install_deps_ubuntu.sh assume-yes  && rm -rf /var/lib/apt/lists/*', 'source /root/Open3D/util/ci_utils.sh  && install_python_dependencies with-conda with-cuda with-jupyter', 'curl -fsSL https://deb.nodesource.com/setup_16.x | bash -  && apt-get install -y nodejs  && rm -rf /var/lib/apt/lists/*  && node --version', 'npm install -g yarn  && yarn --version', 'export NPROC=$(nproc)  && export SHARED=OFF  && export BUILD_TENSORFLOW_OPS=ON  && export BUILD_PYTORCH_OPS=ON  && source /root/Open3D/util/ci_utils.sh  && build_pip_conda_package build_azure_kinect build_jupyter', 'ccache -s  && CCACHE_DIR=$(ccache -p | grep cache_dir | grep -oE ""[^ ]+$"")  && CCACHE_DIR_NAME=$(basename ${CCACHE_DIR})  && CCACHE_DIR_PARENT=$(dirname ${CCACHE_DIR})  && cd ${CCACHE_DIR_PARENT}  && tar -czf /${CCACHE_TAR_NAME}.tar.gz ${CCACHE_DIR_NAME}', 'echo ""Docker build done.""']"
isl-org/Open3D,latest,/.github/workflows/Dockerfile.wheel,WORKDIR,2,"['/root', '/root/Open3D']"
isl-org/Open3D,latest,/.github/workflows/Dockerfile.wheel,COPY,5,"['./util/install_deps_ubuntu.sh /root/Open3D/util/', './util/ci_utils.sh /root/Open3D/util/', './python/requirements.txt /root/Open3D/python/', './python/requirements_jupyter.txt /root/Open3D/python/', '. /root/Open3D']"
isl-org/Open3D,latest,/.github/workflows/Dockerfile.openblas,ARG,5,"['BASE_IMAGE', 'CMAKE_VER', 'CCACHE_TAR_NAME', 'PYTHON_VERSION', 'DEVELOPER_BUILD']"
isl-org/Open3D,latest,/.github/workflows/Dockerfile.openblas,FROM,1,['${BASE_IMAGE}']
isl-org/Open3D,latest,/.github/workflows/Dockerfile.openblas,SHELL,1,"['[""/bin/bash"", ""-c""]']"
isl-org/Open3D,latest,/.github/workflows/Dockerfile.openblas,RUN,18,"['if [ -z ""${CMAKE_VER}""       ]; then echo ""Error: ARG CMAKE_VER       not specified.""; exit 1; fi  && if [ -z ""${CCACHE_TAR_NAME}"" ]; then echo ""Error: ARG CCACHE_TAR_NAME not specified.""; exit 1; fi  && if [ -z ""${PYTHON_VERSION}""  ]; then echo ""Error: ARG PYTHON_VERSION  not specified.""; exit 1; fi  && if [ -z ""${DEVELOPER_BUILD}"" ]; then echo ""Error: ARG DEVELOPER_BUILD not specified.""; exit 1; fi', 'apt-get update && apt-get install -y     wget     libgl1     libgomp1  && rm -rf /var/lib/apt/lists/*', 'apt-get update && apt-get install -y     build-essential     clang-7     git   && rm -rf /var/lib/apt/lists/*', 'apt-get update && apt-get install -y     ccache  && rm -rf /var/lib/apt/lists/*', 'mkdir -p /usr/lib/ccache  && ln -sf $(which ccache) /usr/lib/ccache/gcc  && ln -sf $(which ccache) /usr/lib/ccache/g++  && ln -sf $(which ccache) /usr/lib/ccache/clang-7', 'echo ${PATH}  && ls -alh /usr/lib/ccache  && echo ""gcc=$(which gcc)""  && gcc --version  && echo ""g++=$(which g++)""  && g++ --version  && echo ""clang-7=$(which clang-7)""  && clang-7 --version', 'CCACHE_DIR=$(ccache -p | grep ""cache_dir ="" | grep -oE ""[^ ]+$"")  && CCACHE_DIR_NAME=$(basename ${CCACHE_DIR})  && CCACHE_DIR_PARENT=$(dirname ${CCACHE_DIR})  && mkdir -p ${CCACHE_DIR_PARENT}  && cd ${CCACHE_DIR_PARENT}  && (wget -q https://storage.googleapis.com/open3d-ci-cache/${CCACHE_TAR_NAME}.tar.gz || true)  && if [ -f ${CCACHE_TAR_NAME}.tar.gz ]; then tar -xf ${CCACHE_TAR_NAME}.tar.gz; fi  && mkdir -p ${CCACHE_DIR}', 'ccache -M 5G  && ccache -s', 'apt-get update -y && apt-get install -y     make     build-essential     libssl-dev     zlib1g-dev     libbz2-dev     libreadline-dev     libsqlite3-dev     wget     llvm     libncurses5-dev     libncursesw5-dev     xz-utils     tk-dev     libffi-dev     liblzma-dev     python-openssl     git  && rm -rf /var/lib/apt/lists/*', 'git clone --depth=1 https://github.com/pyenv/pyenv.git /root/.pyenv', 'CMAKE_VER_NUMBERS=$(echo ""${CMAKE_VER}"" | cut -d""-"" -f2)  && wget -q https://github.com/Kitware/CMake/releases/download/v${CMAKE_VER_NUMBERS}/${CMAKE_VER}.tar.gz  && tar -xf ${CMAKE_VER}.tar.gz  && cp -ar ${CMAKE_VER} ${HOME}', '/root/Open3D/util/install_deps_ubuntu.sh assume-yes  && rm -rf /var/lib/apt/lists/*', 'pyenv install $(pyenv install --list | sort -r --version-sort | grep -m1 ""^ *${PYTHON_VERSION}\\."")', 'pyenv local $(pyenv versions | grep ${PYTHON_VERSION})', 'which python  && python --version  && python -m pip install -U     pip==""21.1.1""     wheel==""0.35.1""     setuptools==""50.3.2""     yapf==""0.30.0""     pytest==""6.0.1""', 'mkdir build  && cd build  && cmake     -DBUILD_UNIT_TESTS=ON     -DCMAKE_BUILD_TYPE=Release     -DCMAKE_INSTALL_PREFIX=~/open3d_install     -DDEVELOPER_BUILD=${DEVELOPER_BUILD}     ..  && make -j$(nproc)  && make install-pip-package -j$(nproc)  && make install -j$(nproc)', 'cp build/lib/python_package/pip_package/*.whl /', 'ccache -s  && CCACHE_DIR=$(ccache -p | grep ""cache_dir ="" | grep -oE ""[^ ]+$"")  && CCACHE_DIR_NAME=$(basename ${CCACHE_DIR})  && CCACHE_DIR_PARENT=$(dirname ${CCACHE_DIR})  && cd ${CCACHE_DIR_PARENT}  && tar -czf ${CCACHE_TAR_NAME}.tar.gz ${CCACHE_DIR_NAME}  && mv ${CCACHE_TAR_NAME}.tar.gz /']"
isl-org/Open3D,latest,/.github/workflows/Dockerfile.openblas,ENV,7,"['DEBIAN_FRONTEND=noninteractive', 'TZ=America/Los_Angeles', 'SUDO=command', 'PATH=""/usr/lib/ccache:${PATH}""', 'PYENV_ROOT=""/root/.pyenv""', 'PATH=""${PYENV_ROOT}/bin:${PYENV_ROOT}/shims:${PATH}""', 'PATH=${HOME}/${CMAKE_VER}/bin:${PATH}']"
isl-org/Open3D,latest,/.github/workflows/Dockerfile.openblas,COPY,2,"['./util/install_deps_ubuntu.sh /root/Open3D/util/', '. /root/Open3D']"
isl-org/Open3D,latest,/.github/workflows/Dockerfile.openblas,WORKDIR,1,['/root/Open3D']
isl-org/Open3D,latest,/.github/workflows/Dockerfile.cuda,ARG,9,"['BASE_IMAGE', 'DEVELOPER_BUILD', 'CCACHE_TAR_NAME', 'CMAKE_VERSION', 'CCACHE_VERSION', 'PYTHON_VERSION', 'SHARED', 'BUILD_TENSORFLOW_OPS', 'BUILD_PYTORCH_OPS']"
isl-org/Open3D,latest,/.github/workflows/Dockerfile.cuda,FROM,1,['${BASE_IMAGE}']
isl-org/Open3D,latest,/.github/workflows/Dockerfile.cuda,SHELL,1,"['[""/bin/bash"", ""-c""]']"
isl-org/Open3D,latest,/.github/workflows/Dockerfile.cuda,RUN,17,"['if [ -z ""${DEVELOPER_BUILD}""      ]; then echo ""Error: ARG DEVELOPER_BUILD      not specified.""; exit 1; fi  && if [ -z ""${CCACHE_TAR_NAME}""      ]; then echo ""Error: ARG CCACHE_TAR_NAME      not specified.""; exit 1; fi  && if [ -z ""${CMAKE_VERSION}""        ]; then echo ""Error: ARG CMAKE_VERSION        not specified.""; exit 1; fi  && if [ -z ""${CCACHE_VERSION}""       ]; then echo ""Error: ARG CCACHE_VERSION       not specified.""; exit 1; fi  && if [ -z ""${PYTHON_VERSION}""       ]; then echo ""Error: ARG PYTHON_VERSION       not specified.""; exit 1; fi  && if [ -z ""${SHARED}""               ]; then echo ""Error: ARG SHARED               not specified.""; exit 1; fi  && if [ -z ""${BUILD_TENSORFLOW_OPS}"" ]; then echo ""Error: ARG BUILD_TENSORFLOW_OPS not specified.""; exit 1; fi  && if [ -z ""${BUILD_PYTORCH_OPS}""    ]; then echo ""Error: ARG BUILD_PYTORCH_OPS    not specified.""; exit 1; fi', 'apt-get update && apt-get install -y     git      wget     curl  && rm -rf /var/lib/apt/lists/*', 'CMAKE_VERSION_NUMBERS=$(echo ""${CMAKE_VERSION}"" | cut -d""-"" -f2)  && wget -q https://github.com/Kitware/CMake/releases/download/v${CMAKE_VERSION_NUMBERS}/${CMAKE_VERSION}.tar.gz  && tar -xf ${CMAKE_VERSION}.tar.gz  && cp -ar ${CMAKE_VERSION} ${HOME}', 'git clone https://github.com/ccache/ccache.git  && cd ccache  && git checkout v${CCACHE_VERSION} -b ${CCACHE_VERSION}  && mkdir build  && cd build  && cmake -DCMAKE_BUILD_TYPE=Release -DZSTD_FROM_INTERNET=ON ..  && make install -j$(nproc)  && which ccache  && ccache --version  && ccache -s', 'CCACHE_DIR=$(ccache -p | grep cache_dir | grep -oE ""[^ ]+$"")  && CCACHE_DIR_NAME=$(basename ${CCACHE_DIR})  && CCACHE_DIR_PARENT=$(dirname ${CCACHE_DIR})  && mkdir -p ${CCACHE_DIR_PARENT}  && cd ${CCACHE_DIR_PARENT}  && (wget -q https://storage.googleapis.com/open3d-ci-cache/${CCACHE_TAR_NAME}.tar.gz || true)  && if [ -f ${CCACHE_TAR_NAME}.tar.gz ]; then tar -xf ${CCACHE_TAR_NAME}.tar.gz; fi  && mkdir -p ${CCACHE_DIR}', 'ccache -M 5G  && ccache -s', 'wget -q https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh  && bash Miniconda3-latest-Linux-x86_64.sh -b  && rm Miniconda3-latest-Linux-x86_64.sh  && conda --version', 'conda create -y -n open3d python=${PYTHON_VERSION}  && source activate open3d', 'which python  && python --version', 'git clone --depth 1 https://github.com/isl-org/Open3D-ML.git ${OPEN3D_ML_ROOT}', './util/install_deps_ubuntu.sh assume-yes  && rm -rf /var/lib/apt/lists/*', 'source util/ci_utils.sh  && install_python_dependencies with-conda with-cuda with-jupyter  && pip install -r python/requirements_test.txt', 'curl -fsSL https://deb.nodesource.com/setup_16.x | bash -  && apt-get install -y nodejs  && rm -rf /var/lib/apt/lists/*  && node --version', 'npm install -g yarn  && yarn --version', 'mkdir build  && cd build  && cmake -DBUILD_SHARED_LIBS=""${SHARED}""           -DCMAKE_BUILD_TYPE=Release           -DBUILD_LIBREALSENSE=ON           -DBUILD_CUDA_MODULE=ON           -DBUILD_COMMON_CUDA_ARCHS=ON           -DBUILD_COMMON_ISPC_ISAS=ON           -DGLIBCXX_USE_CXX11_ABI=$( { [ ""$BUILD_PYTORCH_OPS"" == ON ] || [ ""$BUILD_TENSORFLOW_OPS"" == ON ]; } && echo OFF || echo ON)           -DBUILD_TENSORFLOW_OPS=""${BUILD_TENSORFLOW_OPS}""           -DBUILD_PYTORCH_OPS=""${BUILD_PYTORCH_OPS}""           -DBUILD_UNIT_TESTS=ON           -DBUILD_BENCHMARKS=ON           -DBUILD_EXAMPLES=ON           -DCMAKE_INSTALL_PREFIX=~/open3d_install           ..  && make VERBOSE=1 -j$(nproc)  && make install-pip-package -j$(nproc)  && make install -j$(nproc)', 'ccache -s  && CCACHE_DIR=$(ccache -p | grep cache_dir | grep -oE ""[^ ]+$"")  && CCACHE_DIR_NAME=$(basename ${CCACHE_DIR})  && CCACHE_DIR_PARENT=$(dirname ${CCACHE_DIR})  && cd ${CCACHE_DIR_PARENT}  && tar -czf /${CCACHE_TAR_NAME}.tar.gz ${CCACHE_DIR_NAME}  && ls -alh /', 'echo ""Docker build done.""']"
isl-org/Open3D,latest,/.github/workflows/Dockerfile.cuda,ENV,15,"['DEVELOPER_BUILD=${DEVELOPER_BUILD}', 'CCACHE_TAR_NAME=${CCACHE_TAR_NAME}', 'CMAKE_VERSION=${CMAKE_VERSION}', 'CCACHE_VERSION=${CCACHE_VERSION}', 'PYTHON_VERSION=${PYTHON_VERSION}', 'SHARED=${SHARED}', 'BUILD_TENSORFLOW_OPS=${BUILD_TENSORFLOW_OPS}', 'BUILD_PYTORCH_OPS=${BUILD_PYTORCH_OPS}', 'DEBIAN_FRONTEND=noninteractive', 'TZ=America/Los_Angeles', 'SUDO=command', 'PATH=${HOME}/${CMAKE_VERSION}/bin:${PATH}', 'PATH=""/root/miniconda3/bin:${PATH}""', 'PATH=""/root/miniconda3/envs/open3d/bin:${PATH}""', 'OPEN3D_ML_ROOT=/root/Open3D-ML']"
isl-org/Open3D,latest,/.github/workflows/Dockerfile.cuda,WORKDIR,2,"['/root', '/root/Open3D']"
isl-org/Open3D,latest,/.github/workflows/Dockerfile.cuda,COPY,1,['. /root/Open3D']
isl-org/Open3D,latest,/3rdparty/webrtc/Dockerfile.webrtc,FROM,1,['ubuntu:18.04']
isl-org/Open3D,latest,/3rdparty/webrtc/Dockerfile.webrtc,ARG,1,['SUDO=command']
isl-org/Open3D,latest,/3rdparty/webrtc/Dockerfile.webrtc,COPY,1,['3rdparty/webrtc 3rdparty/webrtc']
isl-org/Open3D,latest,/3rdparty/webrtc/Dockerfile.webrtc,RUN,3,"['bash -c ""source 3rdparty/webrtc/webrtc_build.sh && install_dependencies_ubuntu purge-cache""', 'bash -c ""source 3rdparty/webrtc/webrtc_build.sh && download_webrtc_sources""', 'bash -c ""source 3rdparty/webrtc/webrtc_build.sh && build_webrtc""']"
chainer/chainer,latest,/.pfnci/chainermn.Dockerfile,ARG,1,['BASE_IMAGE=9.2-cudnn7-devel']
chainer/chainer,latest,/.pfnci/chainermn.Dockerfile,FROM,1,['nvidia/cuda:${BASE_IMAGE}']
chainer/chainer,latest,/.pfnci/chainermn.Dockerfile,RUN,6,"['apt-get update -y &&     apt-get install -y --no-install-recommends     git     cmake     libblas3     libblas-dev \tcurl \tzlib1g-dev     libreadline-dev     libsqlite3-dev     libssl-dev \tlibffi-dev \tbuild-essential     libbz2-dev \tssh \twget     &&     rm -rf /var/lib/apt/lists/* /var/cache/apt/archives/*', 'cd /tmp && wget -q https://www.open-mpi.org/software/ompi/v${OMPI_VERSION%\\.*}/downloads/openmpi-$OMPI_VERSION.tar.bz2 &&   tar -xjf openmpi-$OMPI_VERSION.tar.bz2', 'cd /tmp/openmpi-$OMPI_VERSION &&     ./configure --prefix=/usr --with-cuda --disable-oshmem --disable-mpi-java --disable-java --disable-mpi-fortran &&     make -j 10 && make install && cd && rm -r /tmp/openmpi-$OMPI_VERSION* &&     /usr/bin/ompi_info --parsable --all | grep -q ""mpi_built_with_cuda_support:value:true"" &&     rm -rf /tmp/openmpi-*', 'git clone https://github.com/pyenv/pyenv.git $PYENV_ROOT', 'touch $BASH_PROFILE &&     echo \'export PYENV_ROOT=""$PYENV_ROOT""\' >> $BASH_PROFILE && \techo \'export PATH=""$PYENV_ROOT/bin:$PATH""\' >> $BASH_PROFILE && \techo \'eval ""$(pyenv init -)""\' >> $BASH_PROFILE', '. $BASH_PROFILE && cd /cupy && pyenv install $PYTHON_VERSION && \tpyenv shell ${PYTHON_VERSION} && \tpip install -U pip && \tpip install cython && \tpip install chainer pytest mock mpi4py && \tpip uninstall -y chainer &&         pip install .']"
chainer/chainer,latest,/.pfnci/chainermn.Dockerfile,ENV,4,"['OMPI_VERSION 3.1.3', 'PYENV_ROOT /usr/local/pyenv', 'BASH_PROFILE /root/.bash_profile', 'PYTHON_VERSION 3.6.8']"
chainer/chainer,latest,/.pfnci/chainermn.Dockerfile,COPY,1,['. /cupy']
chainer/chainer,latest,/.pfnci/py37.Dockerfile,FROM,2,"['golang AS xpytest', 'nvidia/cuda:9.2-cudnn7-devel-ubuntu18.04']"
chainer/chainer,latest,/.pfnci/py37.Dockerfile,RUN,6,"['git clone --depth=1 https://github.com/chainer/xpytest.git /xpytest', 'cd /xpytest &&     go build -o /usr/local/bin/xpytest ./cmd/xpytest', 'apt-get update -y &&     apt-get install -y --no-install-recommends     python3.7-dev python3-pip python3-wheel python3-setuptools     wget git g++ make cmake libblas3 libblas-dev liblapack-dev &&     rm -rf /var/lib/apt/lists/* /var/cache/apt/archives/*', 'python3.7 -m pip install --upgrade pip setuptools', ""python3.7 -m pip install     'cython>=0.28.0' 'ideep4py<2.1'     'pytest==4.1.1' 'pytest-xdist==1.26.1' mock setuptools typing     typing_extensions filelock 'numpy>=1.9.0' 'protobuf==3.6.1' 'six>=1.9.0'"", 'cd /cupy && python3.7 -m pip install .']"
chainer/chainer,latest,/.pfnci/py37.Dockerfile,COPY,2,"['--from=xpytest /usr/local/bin/xpytest /usr/local/bin/xpytest', '. /cupy']"
chainer/chainer,latest,/.pfnci/py27and35.Dockerfile,FROM,2,"['golang AS xpytest', 'nvidia/cuda:9.2-cudnn7-devel-ubuntu16.04']"
chainer/chainer,latest,/.pfnci/py27and35.Dockerfile,RUN,6,"['git clone --depth=1 https://github.com/chainer/xpytest.git /xpytest', 'cd /xpytest &&     go build -o /usr/local/bin/xpytest ./cmd/xpytest', 'apt-get update -y &&     apt-get install -y --no-install-recommends     python-dev python-pip python-wheel python-setuptools     python3-dev python3-pip python3-wheel python3-setuptools     wget git g++ make cmake libblas3 libblas-dev liblapack-dev &&     rm -rf /var/lib/apt/lists/* /var/cache/apt/archives/*', 'python3.5 -m pip install --upgrade pip setuptools', ""python3.5 -m pip install     'cython>=0.28.0' 'ideep4py<2.1' 'pytest==4.1.1' 'pytest-xdist==1.26.1'     mock setuptools typing     typing_extensions filelock 'numpy>=1.9.0' 'protobuf>=3.0.0' 'six>=1.9.0'"", ""cd /cupy &&     echo 'install-%:\\n\\t$* -m pip install .\\n' > /tmp/install.mk &&     cat /tmp/install.mk &&     make -f /tmp/install.mk -j 2 install-python3.5""]"
chainer/chainer,latest,/.pfnci/py27and35.Dockerfile,COPY,2,"['--from=xpytest /usr/local/bin/xpytest /usr/local/bin/xpytest', '. /cupy']"
chainer/chainer,latest,/docker/intel/python3/Dockerfile,FROM,1,['ubuntu:16.04']
chainer/chainer,latest,/docker/intel/python3/Dockerfile,RUN,2,"['apt-get update -y &&     apt-get install -y --no-install-recommends     python3-dev     python3-pip     python3-wheel     python3-setuptools     git     g++     make     cmake     libblas3     libblas-dev     &&     rm -rf /var/lib/apt/lists/* /var/cache/apt/archives/*', ""CHAINER_BUILD_CHAINERX=1 pip3 install --no-cache-dir 'ideep4py<2.1' 'numpy<1.19' chainer==7.8.0""]"
chainer/chainer,latest,/docker/python3/Dockerfile,FROM,1,['nvidia/cuda:9.2-cudnn7-devel']
chainer/chainer,latest,/docker/python3/Dockerfile,RUN,2,"['apt-get update -y &&     apt-get install -y --no-install-recommends     python3-dev     python3-pip     python3-wheel     python3-setuptools     git     cmake     libblas3     libblas-dev     &&     rm -rf /var/lib/apt/lists/* /var/cache/apt/archives/*', ""CHAINER_BUILD_CHAINERX=1 CHAINERX_BUILD_CUDA=1 pip3 install --no-cache-dir 'numpy<1.19' cupy-cuda92==7.8.0 chainer==7.8.0""]"
chainer/chainer,latest,/scripts/ci/chainerx/jenkins/Dockerfile.template,FROM,1,['nvidia/cuda:9.2-cudnn7-devel-ubuntu16.04']
chainer/chainer,latest,/scripts/ci/chainerx/jenkins/Dockerfile.template,LABEL,1,['chainerx_test_image=1']
chainer/chainer,latest,/scripts/ci/chainerx/jenkins/Dockerfile.template,ARG,5,"['TEMP_DIR=/tmp/tmp-xchainer-ci-dockerfile', 'WORKSPACE_DIR', 'WORK_DIR', 'CONDA_DIR', 'USER_TEMP_DIR=""$TEMP_DIR""/user']"
chainer/chainer,latest,/scripts/ci/chainerx/jenkins/Dockerfile.template,RUN,11,"['mkdir -p ""$TEMP_DIR""', 'bash ""$TEMP_DIR""/setup-ubuntu.sh', 'mkdir -p ""$USER_TEMP_DIR""', 'mkdir -p ""$WORKSPACE_DIR""', 'useradd -m testuser -u {{{UID}}}', 'chown testuser:testuser ""$USER_TEMP_DIR""', 'chown testuser:testuser ""$WORKSPACE_DIR""', 'mkdir -p ""$WORK_DIR""', 'mkdir -p ""$CONDA_DIR""', 'bash ""$TEMP_DIR""/setup-conda.sh ""$USER_TEMP_DIR""/conda ""$CONDA_DIR""', 'bash -c \'source \'""$CONDA_DIR""\'/bin/activate testenv && pip install -U cython && pip install git+https://github.com/cupy/cupy@v7\'']"
chainer/chainer,latest,/scripts/ci/chainerx/jenkins/Dockerfile.template,ADD,2,"['setup-ubuntu.sh ""$TEMP_DIR""/', 'setup-conda.sh ""$TEMP_DIR""/']"
chainer/chainer,latest,/scripts/ci/chainerx/jenkins/Dockerfile.template,USER,1,['testuser']
chainer/chainer,latest,/scripts/ci/chainerx/jenkins/Dockerfile.template,WORKDIR,1,"['""$USER_TEMP_DIR""']"
chainer/chainer,latest,/onnx_chainer/.flexci/Dockerfile,FROM,1,['nvidia/cuda:10.1-cudnn7-devel']
chainer/chainer,latest,/onnx_chainer/.flexci/Dockerfile,LABEL,1,"['author=""Daisuke Tanaka <duaipp@gmail.com>, Shunta Saito <shunta.saito@gmail.com>""']"
chainer/chainer,latest,/onnx_chainer/.flexci/Dockerfile,RUN,4,"['apt-get update && apt-get install -y --no-install-recommends     ca-certificates     build-essential     curl     wget     git     libssl-dev     zlib1g-dev     libbz2-dev     libreadline-dev     libsqlite3-dev     libncurses5-dev     libncursesw5-dev     libffi-dev &&     rm -rf /var/lib/apt/lists/* /var/cache/apt/archives/*', 'curl -L -O https://github.com/pyenv/pyenv/archive/v1.2.9.tar.gz &&     tar zxf v1.2.9.tar.gz && rm -rf v1.2.9.tar.gz &&     mv pyenv-1.2.9 .pyenv', 'eval ""$(pyenv init -)""', 'if [ ${PYTHON_VERSION} = ""37"" ]; then         CONFIGURE_OPTS=""--enable-shared"" pyenv install 3.7.2;         pyenv global 3.7.2; pyenv rehash;     elif [ ${PYTHON_VERSION} = ""36"" ]; then         CONFIGURE_OPTS=""--enable-shared"" pyenv install 3.6.8;         pyenv global 3.6.8; pyenv rehash;     elif [ ${PYTHON_VERSION} = ""35"" ]; then         CONFIGURE_OPTS=""--enable-shared"" pyenv install 3.5.6;         pyenv global 3.5.6; pyenv rehash;     fi']"
chainer/chainer,latest,/onnx_chainer/.flexci/Dockerfile,WORKDIR,1,['/root']
chainer/chainer,latest,/onnx_chainer/.flexci/Dockerfile,ENV,6,"['PYENV_ROOT=/root/.pyenv', 'PATH $PYENV_ROOT/shims:$PYENV_ROOT/bin:$PATH', 'CUDA_PATH=/usr/local/cuda', 'PATH=$CUDA_PATH/bin:$PATH', 'CPATH=$CUDA_PATH/include:/usr/local/include:$CPATH', 'LD_LIBRARY_PATH=$CUDA_PATH/lib64:$CUDA_PATH/lib:/usr/local/lib:$LD_LIBRARY_PATH']"
chainer/chainer,latest,/onnx_chainer/.flexci/Dockerfile,ARG,1,['PYTHON_VERSION']
jina-ai/jina,latest,/tests/unit/peapods/peas/container/env-checker/Dockerfile,FROM,1,['jinaai/jina:test-pip']
jina-ai/jina,latest,/tests/unit/peapods/peas/container/env-checker/Dockerfile,ADD,1,['executor.py executor.yml ./']
jina-ai/jina,latest,/tests/unit/peapods/peas/container/env-checker/Dockerfile,ENTRYPOINT,1,"['[""jina"", ""executor"", ""--uses"", ""executor.yml""]']"
jina-ai/jina,latest,/tests/unit/peapods/peas/container/gateway-runtime/Dockerfile,FROM,1,['jinaai/jina:test-pip']
jina-ai/jina,latest,/tests/unit/peapods/peas/container/gateway-runtime/Dockerfile,ADD,1,['runtime.py ./']
jina-ai/jina,latest,/tests/unit/peapods/peas/container/gateway-runtime/Dockerfile,ENV,1,['JINA_LOG_LEVEL=DEBUG']
jina-ai/jina,latest,/tests/unit/peapods/peas/container/gateway-runtime/Dockerfile,ENTRYPOINT,1,"['[""python"", ""runtime.py""]']"
jina-ai/jina,latest,/tests/unit/peapods/peas/container/fail-start/Dockerfile,FROM,1,['jinaai/jina:test-pip']
jina-ai/jina,latest,/tests/unit/peapods/peas/container/fail-start/Dockerfile,ADD,1,['executor.py executor.yml ./']
jina-ai/jina,latest,/tests/unit/peapods/peas/container/fail-start/Dockerfile,ENTRYPOINT,1,"['[""jina"", ""executor"", ""--uses"", ""executor.yml""]']"
jina-ai/jina,latest,/tests/unit/peapods/peas/container/head-runtime/Dockerfile,FROM,1,['jinaai/jina:test-pip']
jina-ai/jina,latest,/tests/unit/peapods/peas/container/head-runtime/Dockerfile,ADD,1,['runtime.py ./']
jina-ai/jina,latest,/tests/unit/peapods/peas/container/head-runtime/Dockerfile,ENV,1,['JINA_LOG_LEVEL=DEBUG']
jina-ai/jina,latest,/tests/unit/peapods/peas/container/head-runtime/Dockerfile,ENTRYPOINT,1,"['[""python"", ""runtime.py""]']"
jina-ai/jina,latest,/tests/unit/hubble/Dockerfile,FROM,1,['jinaai/jina:test-pip']
jina-ai/jina,latest,/tests/unit/hubble/Dockerfile,COPY,2,"['requirements.txt /requirements.txt', '. /workspace']"
jina-ai/jina,latest,/tests/unit/hubble/Dockerfile,RUN,1,['pip install --default-timeout=1000 --compile -r requirements.txt']
jina-ai/jina,latest,/tests/unit/hubble/Dockerfile,WORKDIR,1,['/workspace']
jina-ai/jina,latest,/tests/unit/hubble/Dockerfile,ENTRYPOINT,1,"['[""jina"", ""executor"", ""--uses"", ""config.yml""]']"
jina-ai/jina,latest,/tests/unit/flow-construct/mwu-encoder/Dockerfile,FROM,1,['jinaai/jina:test-pip']
jina-ai/jina,latest,/tests/unit/flow-construct/mwu-encoder/Dockerfile,ADD,1,['*.py mwu_encoder.yml ./']
jina-ai/jina,latest,/tests/unit/flow-construct/mwu-encoder/Dockerfile,ENTRYPOINT,1,"['[""jina"", ""executor"", ""--uses"", ""mwu_encoder.yml""]']"
jina-ai/jina,latest,/tests/unit/hubble-executor/Dockerfile,FROM,1,['jinaai/jina:test-pip']
jina-ai/jina,latest,/tests/unit/hubble-executor/Dockerfile,ADD,1,['*.py *.yml ./']
jina-ai/jina,latest,/tests/unit/hubble-executor/Dockerfile,ENTRYPOINT,1,"['[""jina"", ""pod"", ""--uses"", ""config.yml""]']"
jina-ai/jina,latest,/tests/distributed/test_topologies_docker/mwu-encoder/Dockerfile,FROM,1,['jinaai/jina:test-pip']
jina-ai/jina,latest,/tests/distributed/test_topologies_docker/mwu-encoder/Dockerfile,ADD,1,['*.py mwu_encoder.yml ./']
jina-ai/jina,latest,/tests/distributed/test_topologies_docker/mwu-encoder/Dockerfile,ENTRYPOINT,1,"['[""jina"", ""executor"", ""--uses"", ""mwu_encoder.yml""]']"
jina-ai/jina,latest,/tests/distributed/test_remote_flows/executors/scalable_executor/Dockerfile,FROM,1,['jinaai/jina:test-pip']
jina-ai/jina,latest,/tests/distributed/test_remote_flows/executors/scalable_executor/Dockerfile,COPY,1,['. /workspace/']
jina-ai/jina,latest,/tests/distributed/test_remote_flows/executors/scalable_executor/Dockerfile,WORKDIR,1,['/workspace']
jina-ai/jina,latest,/tests/distributed/test_remote_flows/executors/scalable_executor/Dockerfile,ENTRYPOINT,1,"['[""jina"", ""executor"", ""--uses"", ""config.yml""]']"
jina-ai/jina,latest,/tests/distributed/test_remote_flows/executors/container_executor/Dockerfile,FROM,1,['jinaai/jina:test-pip']
jina-ai/jina,latest,/tests/distributed/test_remote_flows/executors/container_executor/Dockerfile,ADD,1,['*.py config.yml ./']
jina-ai/jina,latest,/tests/distributed/test_remote_flows/executors/container_executor/Dockerfile,ENTRYPOINT,1,"['[""jina"", ""executor"", ""--uses"", ""config.yml""]']"
jina-ai/jina,latest,/tests/distributed/test_workspaces/test_custom_dockerfile.py,IMPORT,2,"['os', 'numpy as np']"
jina-ai/jina,latest,/tests/distributed/test_workspaces/test_custom_dockerfile.py,FROM,1,"['jina import Flow, __default_host__, Document, Client']"
jina-ai/jina,latest,/tests/distributed/test_workspaces/test_custom_dockerfile.py,CUR_DIR,1,['= os.path.dirname(os.path.abspath(__file__))']
jina-ai/jina,latest,/tests/distributed/test_workspaces/test_custom_dockerfile.py,EXPOSED_PORT,1,['= 12345']
jina-ai/jina,latest,/tests/distributed/test_workspaces/test_custom_dockerfile.py,DEF,1,['test_custom_dockerfile():']
jina-ai/jina,latest,/tests/distributed/test_workspaces/test_custom_dockerfile.py,F,1,['= Flow(port_expose=exposed_port).add(']
jina-ai/jina,latest,/tests/distributed/test_workspaces/test_custom_dockerfile.py,"USES='DUMMYREDISINDEXER',",1,['']
jina-ai/jina,latest,/tests/distributed/test_workspaces/test_custom_dockerfile.py,"PY_MODULES='REDIS_EXECUTOR.PY',",1,['']
jina-ai/jina,latest,/tests/distributed/test_workspaces/test_custom_dockerfile.py,UPLOAD_FILES=[,1,['']
jina-ai/jina,latest,/tests/distributed/test_workspaces/test_custom_dockerfile.py,"OS.PATH.JOIN(CUR_DIR,",1,"[""'../../daemon/unit/models/good_ws_custom_dockerfile'),""]"
jina-ai/jina,latest,/tests/distributed/test_workspaces/test_custom_dockerfile.py,"],",1,['']
jina-ai/jina,latest,/tests/distributed/test_workspaces/test_custom_dockerfile.py,"HOST='LOCALHOST:8000',",1,['']
jina-ai/jina,latest,/tests/distributed/test_workspaces/test_custom_dockerfile.py,),2,"['', '']"
jina-ai/jina,latest,/tests/distributed/test_workspaces/test_custom_dockerfile.py,WITH,1,['f:']
jina-ai/jina,latest,/tests/distributed/test_workspaces/test_custom_dockerfile.py,C,1,['= Client(port=exposed_port)']
jina-ai/jina,latest,/tests/distributed/test_workspaces/test_custom_dockerfile.py,C.INDEX(,1,['']
jina-ai/jina,latest,/tests/distributed/test_workspaces/test_custom_dockerfile.py,INPUTS=(,1,['']
jina-ai/jina,latest,/tests/distributed/test_workspaces/test_custom_dockerfile.py,"DOCUMENT(TEXT=F'{I}',",1,"['embedding=np.random.rand(2, 3)) for i in range(5)']"
jina-ai/jina,latest,/tests/distributed/test_workspaces/test_custom_dockerfile.py,"),",1,['']
jina-ai/jina,latest,/tests/distributed/test_workspaces/test_custom_dockerfile.py,RESP,1,"[""= c.search(inputs=[Document(text='3')], return_results=True)""]"
jina-ai/jina,latest,/tests/distributed/test_workspaces/test_custom_dockerfile.py,ASSERT,2,"[""resp[0].docs[0].matches[0].text == '3'"", 'resp[0].docs[0].matches[0].embedding.shape == (2, 3)']"
jina-ai/jina,latest,/tests/distributed/test_rolling_update_container_runtime/pods/dbms/Dockerfile,FROM,1,['jinaai/jina:test-pip']
jina-ai/jina,latest,/tests/distributed/test_rolling_update_container_runtime/pods/dbms/Dockerfile,ADD,1,['*.py config.yml ./']
jina-ai/jina,latest,/tests/distributed/test_rolling_update_container_runtime/pods/dbms/Dockerfile,ENTRYPOINT,1,"['[""jina"", ""executor"", ""--uses"", ""config.yml""]']"
jina-ai/jina,latest,/tests/distributed/test_rolling_update_container_runtime/pods/query/Dockerfile,FROM,1,['jinaai/jina:test-pip']
jina-ai/jina,latest,/tests/distributed/test_rolling_update_container_runtime/pods/query/Dockerfile,ADD,1,['*.py config.yml ./']
jina-ai/jina,latest,/tests/distributed/test_rolling_update_container_runtime/pods/query/Dockerfile,ENTRYPOINT,1,"['[""jina"", ""executor"", ""--uses"", ""config.yml""]']"
jina-ai/jina,latest,/tests/distributed/test_simple_hub_pods/hub-mwu/Dockerfile,FROM,1,['jinaai/jina:test-pip']
jina-ai/jina,latest,/tests/distributed/test_simple_hub_pods/hub-mwu/Dockerfile,ADD,1,['*.py mwu_encoder.yml ./']
jina-ai/jina,latest,/tests/distributed/test_simple_hub_pods/hub-mwu/Dockerfile,ENTRYPOINT,1,"['[""jina"", ""pod"", ""--uses"", ""mwu_encoder.yml""]']"
jina-ai/jina,latest,/tests/integration/peas/container/gateway-runtime/Dockerfile,FROM,1,['jinaai/jina:test-pip']
jina-ai/jina,latest,/tests/integration/peas/container/gateway-runtime/Dockerfile,ADD,1,['runtime.py ./']
jina-ai/jina,latest,/tests/integration/peas/container/gateway-runtime/Dockerfile,ENV,1,['JINA_LOG_LEVEL=DEBUG']
jina-ai/jina,latest,/tests/integration/peas/container/gateway-runtime/Dockerfile,ENTRYPOINT,1,"['[""python"", ""runtime.py""]']"
jina-ai/jina,latest,/tests/integration/peas/container/worker-runtime/Dockerfile,FROM,1,['jinaai/jina:test-pip']
jina-ai/jina,latest,/tests/integration/peas/container/worker-runtime/Dockerfile,ENTRYPOINT,1,"['[""jina"", ""executor""]']"
jina-ai/jina,latest,/tests/integration/peas/container/head-runtime/Dockerfile,FROM,1,['jinaai/jina:test-pip']
jina-ai/jina,latest,/tests/integration/peas/container/head-runtime/Dockerfile,ADD,1,['runtime.py ./']
jina-ai/jina,latest,/tests/integration/peas/container/head-runtime/Dockerfile,ENV,1,['JINA_LOG_LEVEL=DEBUG']
jina-ai/jina,latest,/tests/integration/peas/container/head-runtime/Dockerfile,ENTRYPOINT,1,"['[""python"", ""runtime.py""]']"
jina-ai/jina,latest,/tests/integration/scale/scale-executor/Dockerfile,FROM,1,['jinaai/jina:test-pip']
jina-ai/jina,latest,/tests/integration/scale/scale-executor/Dockerfile,COPY,1,['. /workspace/']
jina-ai/jina,latest,/tests/integration/scale/scale-executor/Dockerfile,WORKDIR,1,['/workspace']
jina-ai/jina,latest,/tests/integration/scale/scale-executor/Dockerfile,ENTRYPOINT,1,"['[""jina"", ""executor"", ""--uses"", ""config.yml""]']"
jina-ai/jina,latest,/tests/integration/rolling_update/Dockerfile,FROM,1,['jinaai/jina:test-pip']
jina-ai/jina,latest,/tests/integration/rolling_update/Dockerfile,ENTRYPOINT,1,"['[""jina"", ""executor""]']"
jina-ai/jina,latest,/tests/integration/override_config_params/container/Dockerfile,FROM,1,['jinaai/jina:test-pip']
jina-ai/jina,latest,/tests/integration/override_config_params/container/Dockerfile,COPY,1,['. /workspace']
jina-ai/jina,latest,/tests/integration/override_config_params/container/Dockerfile,WORKDIR,1,['/workspace']
jina-ai/jina,latest,/tests/integration/override_config_params/container/Dockerfile,ENTRYPOINT,1,"['[""jina"", ""executor"", ""--uses"", ""default_config.yml""]']"
jina-ai/jina,latest,/tests/integration/container_runtime_args/replica-exec/Dockerfile,FROM,1,['jinaai/jina:test-pip']
jina-ai/jina,latest,/tests/integration/container_runtime_args/replica-exec/Dockerfile,COPY,1,['. /workspace']
jina-ai/jina,latest,/tests/integration/container_runtime_args/replica-exec/Dockerfile,WORKDIR,1,['/workspace']
jina-ai/jina,latest,/tests/integration/container_runtime_args/replica-exec/Dockerfile,ENTRYPOINT,1,"['[""jina"", ""executor"", ""--uses"", ""config.yml""]']"
jina-ai/jina,latest,/tests/integration/hub_usage/dummyhub_pretrained/Dockerfile,FROM,1,['jinaai/jina:test-pip']
jina-ai/jina,latest,/tests/integration/hub_usage/dummyhub_pretrained/Dockerfile,COPY,1,['. /workspace/']
jina-ai/jina,latest,/tests/integration/hub_usage/dummyhub_pretrained/Dockerfile,WORKDIR,1,['/workspace']
jina-ai/jina,latest,/tests/integration/hub_usage/dummyhub_pretrained/Dockerfile,ENTRYPOINT,1,"['[""jina"", ""executor"", ""--uses"", ""config.yml""]']"
jina-ai/jina,latest,/tests/integration/hub_usage/dummyhub/Dockerfile,FROM,1,['jinaai/jina:test-pip']
jina-ai/jina,latest,/tests/integration/hub_usage/dummyhub/Dockerfile,COPY,1,['. /workspace/']
jina-ai/jina,latest,/tests/integration/hub_usage/dummyhub/Dockerfile,WORKDIR,1,['/workspace']
jina-ai/jina,latest,/tests/integration/hub_usage/dummyhub/Dockerfile,ENTRYPOINT,1,"['[""jina"", ""executor"", ""--uses"", ""config.yml""]']"
jina-ai/jina,latest,/tests/integration/hub_usage/dummyhub_slow/Dockerfile,FROM,1,['jinaai/jina:test-pip']
jina-ai/jina,latest,/tests/integration/hub_usage/dummyhub_slow/Dockerfile,COPY,1,['. /workspace/']
jina-ai/jina,latest,/tests/integration/hub_usage/dummyhub_slow/Dockerfile,WORKDIR,1,['/workspace']
jina-ai/jina,latest,/tests/integration/hub_usage/dummyhub_slow/Dockerfile,ENTRYPOINT,1,"['[""jina"", ""executor"", ""--uses"", ""config.yml""]']"
jina-ai/jina,latest,/tests/integration/hub_usage/dummyhub_abs/Dockerfile,FROM,1,['jinaai/jina:test-pip']
jina-ai/jina,latest,/tests/integration/hub_usage/dummyhub_abs/Dockerfile,COPY,1,['. /workspace/']
jina-ai/jina,latest,/tests/integration/hub_usage/dummyhub_abs/Dockerfile,WORKDIR,1,['/workspace']
jina-ai/jina,latest,/tests/integration/hub_usage/dummyhub_abs/Dockerfile,ENTRYPOINT,1,"['[""jina"", ""executor"", ""--uses"", ""config.yml""]']"
jina-ai/jina,latest,/tests/integration/hub_usage/hub-mwu/Dockerfile,FROM,1,['jinaai/jina:test-pip']
jina-ai/jina,latest,/tests/integration/hub_usage/hub-mwu/Dockerfile,ADD,1,['*.py mwu_encoder.yml ./']
jina-ai/jina,latest,/tests/integration/hub_usage/hub-mwu/Dockerfile,ENTRYPOINT,1,"['[""jina"", ""pod"", ""--uses"", ""mwu_encoder.yml""]']"
jina-ai/jina,latest,/tests/integration/hub_usage/hub-mwu/multistage.Dockerfile,FROM,3,"['jinaai/jina:test-pip as base', 'base', 'base']"
jina-ai/jina,latest,/tests/integration/hub_usage/hub-mwu/multistage.Dockerfile,ADD,2,"['*.py mwu_encoder.yml ./', 'README.md ./']"
jina-ai/jina,latest,/tests/integration/hub_usage/hub-mwu/multistage.Dockerfile,ENTRYPOINT,1,"['[""jina"", ""pod"", ""--uses"", ""mwu_encoder.yml""]']"
jina-ai/jina,latest,/tests/integration/issues/github_3124/Dockerfile,FROM,1,['jinaai/jina:test-pip']
jina-ai/jina,latest,/tests/integration/issues/github_3124/Dockerfile,ENTRYPOINT,1,"['[""jina"", ""executor""]']"
jina-ai/jina,latest,/tests/k8s/executor-merger/Dockerfile,FROM,1,['jinaai/jina:test-pip']
jina-ai/jina,latest,/tests/k8s/executor-merger/Dockerfile,COPY,1,['. /workspace']
jina-ai/jina,latest,/tests/k8s/executor-merger/Dockerfile,WORKDIR,1,['/workspace']
jina-ai/jina,latest,/tests/k8s/executor-merger/Dockerfile,ENTRYPOINT,1,"['[""jina"", ""executor"", ""--uses"", ""config.yml""]']"
jina-ai/jina,latest,/tests/k8s/reload-executor/Dockerfile,FROM,1,['jinaai/jina:test-pip']
jina-ai/jina,latest,/tests/k8s/reload-executor/Dockerfile,COPY,1,['. /workspace']
jina-ai/jina,latest,/tests/k8s/reload-executor/Dockerfile,WORKDIR,1,['/workspace']
jina-ai/jina,latest,/tests/k8s/reload-executor/Dockerfile,ENTRYPOINT,1,"['[""jina"", ""executor"", ""--uses"", ""config.yml""]']"
jina-ai/jina,latest,/tests/k8s/slow-process-executor/Dockerfile,FROM,1,['jinaai/jina:test-pip']
jina-ai/jina,latest,/tests/k8s/slow-process-executor/Dockerfile,COPY,1,['. /workspace']
jina-ai/jina,latest,/tests/k8s/slow-process-executor/Dockerfile,WORKDIR,1,['/workspace']
jina-ai/jina,latest,/tests/k8s/slow-process-executor/Dockerfile,ENTRYPOINT,1,"['[""jina"", ""executor"", ""--uses"", ""config.yml""]']"
jina-ai/jina,latest,/tests/k8s/test-executor/Dockerfile,FROM,1,['jinaai/jina:test-pip']
jina-ai/jina,latest,/tests/k8s/test-executor/Dockerfile,COPY,1,['. /workspace']
jina-ai/jina,latest,/tests/k8s/test-executor/Dockerfile,WORKDIR,1,['/workspace']
jina-ai/jina,latest,/tests/k8s/test-executor/Dockerfile,ENTRYPOINT,1,"['[""jina"", ""executor"", ""--uses"", ""config.yml""]']"
jina-ai/jina,latest,/tests/daemon/unit/models/good_ws_custom_dockerfile/custom.Dockerfile,FROM,1,['jinaai/jina:test-daemon']
jina-ai/jina,latest,/tests/daemon/unit/models/good_ws_custom_dockerfile/custom.Dockerfile,COPY,1,['custom-requirements.txt custom-requirements.txt']
jina-ai/jina,latest,/tests/daemon/unit/models/good_ws_custom_dockerfile/custom.Dockerfile,RUN,2,"['pip install --no-cache-dir -r custom-requirements.txt', 'apt update && apt install -y redis-server']"
jina-ai/jina,latest,/tests/docker_compose/executor-merger/Dockerfile,FROM,1,['jinaai/jina:test-pip']
jina-ai/jina,latest,/tests/docker_compose/executor-merger/Dockerfile,COPY,1,['. /workspace']
jina-ai/jina,latest,/tests/docker_compose/executor-merger/Dockerfile,WORKDIR,1,['/workspace']
jina-ai/jina,latest,/tests/docker_compose/executor-merger/Dockerfile,ENTRYPOINT,1,"['[""jina"", ""executor"", ""--uses"", ""config.yml""]']"
jina-ai/jina,latest,/tests/docker_compose/reload-executor/Dockerfile,FROM,1,['jinaai/jina:test-pip']
jina-ai/jina,latest,/tests/docker_compose/reload-executor/Dockerfile,COPY,1,['. /workspace']
jina-ai/jina,latest,/tests/docker_compose/reload-executor/Dockerfile,WORKDIR,1,['/workspace']
jina-ai/jina,latest,/tests/docker_compose/reload-executor/Dockerfile,ENTRYPOINT,1,"['[""jina"", ""executor"", ""--uses"", ""config.yml""]']"
jina-ai/jina,latest,/tests/docker_compose/test-executor/Dockerfile,FROM,1,['jinaai/jina:test-pip']
jina-ai/jina,latest,/tests/docker_compose/test-executor/Dockerfile,COPY,1,['. /workspace']
jina-ai/jina,latest,/tests/docker_compose/test-executor/Dockerfile,WORKDIR,1,['/workspace']
jina-ai/jina,latest,/tests/docker_compose/test-executor/Dockerfile,ENTRYPOINT,1,"['[""jina"", ""executor"", ""--uses"", ""config.yml""]']"
jina-ai/jina,latest,/tests/jinahub/Dockerfile,FROM,1,['jinaai/jina:test-pip']
jina-ai/jina,latest,/tests/jinahub/Dockerfile,WORKDIR,1,['/']
jina-ai/jina,latest,/tests/jinahub/Dockerfile,RUN,1,['python -m pip install --no-cache-dir --upgrade pip &&     cd jina &&     pip install --ignore-installed -e .[devel] &&     cd ..']
jina-ai/jina,latest,/tests/jinahub/Dockerfile,COPY,1,['app.py flow.yml /']
jina-ai/jina,latest,/tests/jinahub/Dockerfile,ENTRYPOINT,1,"['[""python"", ""app.py""]']"
jina-ai/jina,latest,/tests/jinahub/hub_mwu/Dockerfile,FROM,1,['jinaai/jina:test-pip']
jina-ai/jina,latest,/tests/jinahub/hub_mwu/Dockerfile,ADD,1,['*.py mwu_encoder.yml ./']
jina-ai/jina,latest,/tests/jinahub/hub_mwu/Dockerfile,ENTRYPOINT,1,"['[""jina"", ""executor"", ""--uses"", ""mwu_encoder.yml""]']"
jina-ai/jina,latest,/daemon/Dockerfiles/default.Dockerfile,ARG,3,"['JINA_VERSION=master', 'PY_VERSION=py38', 'PIP_REQUIREMENTS']"
jina-ai/jina,latest,/daemon/Dockerfiles/default.Dockerfile,FROM,1,['jinaai/jina:$JINA_VERSION-$PY_VERSION-daemon']
jina-ai/jina,latest,/daemon/Dockerfiles/default.Dockerfile,RUN,1,"['if [ -n ""$PIP_REQUIREMENTS"" ]; then     echo ""Installing ${PIP_REQUIREMENTS}"";     for package in ${PIP_REQUIREMENTS}; do     pip install ""${package}"";     done;     fi']"
jina-ai/jina,latest,/daemon/Dockerfiles/default.Dockerfile,STOPSIGNAL,1,['SIGINT']
jina-ai/jina,latest,/daemon/Dockerfiles/devel.Dockerfile,ARG,2,"['LOCALTAG=test', 'PIP_REQUIREMENTS']"
jina-ai/jina,latest,/daemon/Dockerfiles/devel.Dockerfile,FROM,1,['jinaai/jina:$LOCALTAG-daemon']
jina-ai/jina,latest,/daemon/Dockerfiles/devel.Dockerfile,RUN,1,"['if [ -n ""$PIP_REQUIREMENTS"" ]; then \techo ""Installing ${PIP_REQUIREMENTS}""; \tfor package in ${PIP_REQUIREMENTS}; do \tpip install ""${package}""; \tdone; \tfi']"
jina-ai/jina,latest,/scripts/latency-tracking/Dockerfile,ARG,1,['JINA_VER']
jina-ai/jina,latest,/scripts/latency-tracking/Dockerfile,FROM,1,['jinaai/jina:$JINA_VER']
jina-ai/jina,latest,/scripts/latency-tracking/Dockerfile,WORKDIR,1,['/app']
jina-ai/jina,latest,/scripts/latency-tracking/Dockerfile,ADD,1,['. .']
jina-ai/jina,latest,/scripts/latency-tracking/Dockerfile,RUN,1,['pip install -r requirements.txt']
jina-ai/jina,latest,/scripts/latency-tracking/Dockerfile,ENTRYPOINT,1,"['[""python"", ""app.py""]']"
jina-ai/jina,latest,/jina/resources/executor-template/Dockerfile,FROM,1,['jinaai/jina:latest']
jina-ai/jina,latest,/jina/resources/executor-template/Dockerfile,COPY,2,"['requirements.txt /requirements.txt', '. /workspace']"
jina-ai/jina,latest,/jina/resources/executor-template/Dockerfile,RUN,1,['pip install --default-timeout=1000 --compile -r requirements.txt']
jina-ai/jina,latest,/jina/resources/executor-template/Dockerfile,WORKDIR,1,['/workspace']
jina-ai/jina,latest,/jina/resources/executor-template/Dockerfile,ENTRYPOINT,1,"['[""jina"", ""executor"", ""--uses"", ""config.yml""]']"
jina-ai/jina,latest,/Dockerfiles/pip.Dockerfile,ARG,2,"['PY_VERSION=3.7', 'PIP_TAG']"
jina-ai/jina,latest,/Dockerfiles/pip.Dockerfile,FROM,1,['python:${PY_VERSION}-slim']
jina-ai/jina,latest,/Dockerfiles/pip.Dockerfile,RUN,4,"['apt-get update && apt-get install --no-install-recommends -y gcc libc6-dev', 'cd /jina && pip install .""$PIP_TAG""', 'cat $HOME/.bashrc', 'grep -Fxq ""# JINA_CLI_BEGIN"" $HOME/.bashrc']"
jina-ai/jina,latest,/Dockerfiles/pip.Dockerfile,COPY,1,['. /jina/']
jina-ai/jina,latest,/Dockerfiles/pip.Dockerfile,ENTRYPOINT,1,"['[""jina""]']"
jina-ai/jina,latest,/Dockerfiles/dind.Dockerfile,FROM,1,['docker:git']
jina-ai/jina,latest,/Dockerfiles/dind.Dockerfile,RUN,1,['apk update && apk upgrade && apk --no-cache add curl bash make']
jina-ai/jina,latest,/Dockerfiles/dind.Dockerfile,CMD,1,"['[""bash""]']"
jina-ai/jina,latest,/Dockerfiles/protogen.Dockerfile,FROM,1,['python:3.7-slim']
jina-ai/jina,latest,/Dockerfiles/protogen.Dockerfile,RUN,3,"['apt-get update && apt-get install --no-install-recommends -y', 'apt-get install --no-install-recommends -y build-essential git autoconf libtool wget unzip zlib1g-dev pkg-config cmake', 'wget https://github.com/protocolbuffers/protobuf/releases/download/v3.19.1/protoc-3.19.1-linux-x86_64.zip  -O protobuf.zip     && unzip protobuf.zip && rm protobuf.zip &&     cp bin/protoc /usr/local/bin/ &&     cp -r include/* /usr/local/include/ &&     git clone --depth 1 https://github.com/grpc/grpc.git &&     cd grpc && git submodule update --depth 1 --init &&     mkdir -p cmake/build && cd cmake/build && cmake ../.. && make -j12']"
jina-ai/jina,latest,/Dockerfiles/protogen.Dockerfile,WORKDIR,3,"['/builder/', '/', '/jina/proto']"
jina-ai/jina,latest,/Dockerfiles/protogen.Dockerfile,ADD,1,['jina ./jina/']
jina-ai/jina,latest,/Dockerfiles/protogen.Dockerfile,ENTRYPOINT,1,"['[""bash"", ""./build-proto.sh"", ""/builder/grpc/cmake/build/grpc_python_plugin""]']"
jina-ai/jina,latest,/Dockerfiles/debianx.Dockerfile,ARG,12,"['PY_VERSION=3.7', 'PIP_TAG', 'APT_PACKAGES=""gcc libc-dev""', 'VCS_REF', 'PY_VERSION', 'BUILD_DATE', 'JINA_VERSION', 'TARGETPLATFORM', 'PIP_EXTRA_INDEX_URL=""https://www.piwheels.org/simple""', 'PIP_INSTALL_CORE', 'PIP_INSTALL_PERF', 'APT_PACKAGES=""gcc libc-dev make""']"
jina-ai/jina,latest,/Dockerfiles/debianx.Dockerfile,FROM,3,"['python:${PY_VERSION}-slim AS jina_dep', 'jina_dep AS jina', 'jina AS jina_daemon']"
jina-ai/jina,latest,/Dockerfiles/debianx.Dockerfile,LABEL,2,"['org.opencontainers.image.vendor=""Jina AI Limited""       org.opencontainers.image.licenses=""Apache 2.0""       org.opencontainers.image.title=""Jina""       org.opencontainers.image.description=""Cloud-native neural search framework for any kind of data""       org.opencontainers.image.authors=""hello@jina.ai""       org.opencontainers.image.url=""https://github.com/jina-ai/jina""       org.opencontainers.image.documentation=""https://docs.jina.ai""', 'org.opencontainers.image.created=${BUILD_DATE}       org.opencontainers.image.source=""https://github.com/jina-ai/jina/commit/${VCS_REF}""       org.opencontainers.image.version=${JINA_VERSION}       org.opencontainers.image.revision=${VCS_REF}']"
jina-ai/jina,latest,/Dockerfiles/debianx.Dockerfile,ENV,2,"['PIP_NO_CACHE_DIR=1     PIP_DISABLE_PIP_VERSION_CHECK=1     JINA_PIP_INSTALL_CORE=${PIP_INSTALL_CORE}     JINA_PIP_INSTALL_PERF=${PIP_INSTALL_PERF}', 'JINA_VERSION=${JINA_VERSION}     JINA_VCS_VERSION=${VCS_REF}     JINA_BUILD_DATE=${BUILD_DATE}']"
jina-ai/jina,latest,/Dockerfiles/debianx.Dockerfile,COPY,2,"['extra-requirements.txt setup.py /tmp/', '. /jina/']"
jina-ai/jina,latest,/Dockerfiles/debianx.Dockerfile,RUN,3,"['cd /tmp/ &&     if [ -n ""${APT_PACKAGES}"" ]; then apt-get update && apt-get install --no-install-recommends -y ${APT_PACKAGES}; fi &&     if [ -n ""${PIP_TAG}"" ]; then pip install --default-timeout=1000 --compile --extra-index-url $PIP_EXTRA_INDEX_URL "".[${PIP_TAG}]"" ; fi &&     pip install --default-timeout=1000 --compile --extra-index-url ${PIP_EXTRA_INDEX_URL} . &&     if [ -n ""${APT_PACKAGES}"" ]; then apt-get remove -y --auto-remove ${APT_PACKAGES} && apt-get autoremove && apt-get clean && rm -rf /var/lib/apt/lists/*; fi &&     rm -rf /tmp/* && rm -rf /jina', 'cd /jina &&     pip install --no-deps --compile . &&     rm -rf /tmp/* && rm -rf /jina', 'apt-get update && apt-get install --no-install-recommends -y git ruby-dev ${APT_PACKAGES} &&     gem install fluentd --no-doc &&     apt-get remove -y --auto-remove ${APT_PACKAGES} &&     apt-get autoremove && apt-get clean && rm -rf /var/lib/apt/lists/*']"
jina-ai/jina,latest,/Dockerfiles/debianx.Dockerfile,ENTRYPOINT,2,"['[""jina""]', '[""jinad""]']"
PaddlePaddle/Paddle-Lite,latest,/lite/tools/Dockerfile.gcc82-cuda10.1-cudnn7,FROM,1,['nvidia/cuda:10.1-cudnn7-devel-ubuntu18.04']
PaddlePaddle/Paddle-Lite,latest,/lite/tools/Dockerfile.gcc82-cuda10.1-cudnn7,MAINTAINER,1,['PaddlePaddle Authors <paddle-dev@baidu.com>']
PaddlePaddle/Paddle-Lite,latest,/lite/tools/Dockerfile.gcc82-cuda10.1-cudnn7,RUN,17,"['apt-get update && apt-get upgrade -y', 'apt-get install -y --no-install-recommends         curl         git         make         python         python-pip         python-dev         unzip         vim         wget         texinfo', 'apt-get update &&    DEBIAN_FRONTEND=noninteractive apt-get install -y make build-essential libssl-dev zlib1g-dev libbz2-dev    libreadline-dev libsqlite3-dev wget curl llvm libncurses5-dev libncursesw5-dev    xz-utils tk-dev libffi-dev liblzma-dev', 'wget http://ftp.tsukuba.wide.ad.jp/software/gcc/releases/gcc-8.2.0/gcc-8.2.0.tar.gz &&     tar xzvf gcc-8.2.0.tar.gz  &&     cd gcc-8.2.0/   &&    wget http://ftp.tsukuba.wide.ad.jp/software/gcc/infrastructure/gmp-6.1.0.tar.bz2  &&     wget http://ftp.tsukuba.wide.ad.jp/software/gcc/infrastructure/mpc-1.0.3.tar.gz  &&     wget http://ftp.tsukuba.wide.ad.jp/software/gcc/infrastructure/mpfr-3.1.4.tar.bz2 &&     wget http://ftp.tsukuba.wide.ad.jp/software/gcc/infrastructure/isl-0.18.tar.bz2 &&     tar -jxvf gmp-6.1.0.tar.bz2 &&  ln -s gmp-6.1.0/ gmp &&     tar -xzvf mpc-1.0.3.tar.gz  && ln -s mpc-1.0.3/ mpc &&     tar -jxvf mpfr-3.1.4.tar.bz2 && ln -s mpfr-3.1.4/ mpfr &&     tar -jxvf isl-0.18.tar.bz2 && ln -s isl-0.18/ isl &&     cd ../ && mkdir gcc-bulid  && cd gcc-bulid/ &&     ../gcc-8.2.0/configure CFLAGS=""-g3 -gdwarf-2 -O0"" CXXFLAGS=""-g3 -gdwarf-2 -O0"" CFLAGS_FOR_TARGET=""-g3  -gdwarf-2 -O0"" CXXFLAGS_FOR_TARGET=""-g3 -gdwarf-2 -O0"" --disable-multilib --enable-languages=c,c++ --prefix=/usr/local/gcc-8.2 &&     make -j 4 && make install', 'rm gcc', 'rm g++', 'ln -s /usr/local/gcc-8.2/bin/gcc /usr/local/bin/gcc', 'ln -s /usr/local/gcc-8.2/bin/g++ /usr/local/bin/g++', 'ln -s /usr/local/gcc-8.2/bin/gcc /usr/bin/gcc', 'ln -s /usr/local/gcc-8.2/bin/g++ /usr/bin/g++', 'apt-get install -y --no-install-recommends         libc6-i386         lib32stdc++6         redir         iptables         openjdk-8-jre         openjdk-8-jdk', 'curl -O https://mms-res.cdn.bcebos.com/cmake-3.10.3-Linux-x86_64.tar.gz &&         tar xzf cmake-3.10.3-Linux-x86_64.tar.gz &&         mv cmake-3.10.3-Linux-x86_64 /opt/cmake-3.10 &&         rm -f /usr/bin/cmake && ln -s /opt/cmake-3.10/bin/cmake /usr/bin/cmake &&         rm -f /usr/bin/ccmake && ln -s /opt/cmake-3.10/bin/ccmake /usr/bin/ccmake', 'apt-get install -y --no-install-recommends         g++-arm-linux-gnueabi         gcc-arm-linux-gnueabi         g++-arm-linux-gnueabihf         gcc-arm-linux-gnueabihf         gcc-aarch64-linux-gnu         g++-aarch64-linux-gnu', 'cd /tmp && curl -O https://dl.google.com/android/repository/android-ndk-r17c-linux-x86_64.zip', 'cd /opt && unzip /tmp/android-ndk-r17c-linux-x86_64.zip', 'apt-get install -y --no-install-recommends   g++-arm-linux-gnueabi gcc-arm-linux-gnueabi   g++-arm-linux-gnueabihf gcc-arm-linux-gnueabihf   gcc-aarch64-linux-gnu g++-aarch64-linux-gnu', 'rm -rf /sdk-tools-linux-4333796.zip /tmp/android-ndk-r17c-linux-x86_64.zip /cmake-3.10.3-Linux-x86_64.tar.gz']"
PaddlePaddle/Paddle-Lite,latest,/lite/tools/Dockerfile.gcc82-cuda10.1-cudnn7,WORKDIR,1,['/usr/bin']
PaddlePaddle/Paddle-Lite,latest,/lite/tools/Dockerfile.gcc82-cuda10.1-cudnn7,ENV,2,"['PATH=/usr/local/gcc-8.2/bin:$PATH', 'NDK_ROOT /opt/android-ndk-r17c']"
PaddlePaddle/Paddle-Lite,latest,/lite/tools/Dockerfile.gcc82-cuda10.1-cudnn7,EXPOSE,3,"['5555', '5557', '5900']"
PaddlePaddle/Paddle-Lite,latest,/lite/tools/Dockerfile.mobile,FROM,1,['ubuntu:16.04']
PaddlePaddle/Paddle-Lite,latest,/lite/tools/Dockerfile.mobile,MAINTAINER,1,['PaddlePaddle Authors <paddle-dev@baidu.com>']
PaddlePaddle/Paddle-Lite,latest,/lite/tools/Dockerfile.mobile,RUN,17,"[""echo 'deb <mirror> <version> main restricted universe multiverse\\ndeb <mirror> <version>-updates main restricted universe multiverse\\ndeb <mirror> <version>-backports main restricted universe multiverse\\ndeb <mirror> <version>-security main restricted universe multiverse\\n'> /etc/apt/sources.list"", ""sed -ie 's|<mirror>|http://mirrors.tuna.tsinghua.edu.cn/ubuntu/|' /etc/apt/sources.list"", ""sed -ie 's|<version>|xenial|' /etc/apt/sources.list"", 'apt-get update && apt-get upgrade -y', 'apt-get install -y --no-install-recommends         clang-format-3.8         curl         gcc         g++         git         make         patchelf         python         android-tools-adb         python-dev         python-pip         python-setuptools         unzip         vim         wget', 'apt-get install -y --no-install-recommends         libc6-i386         lib32stdc++6         redir         iptables         openjdk-8-jre         default-jdk', 'curl -O https://mms-res.cdn.bcebos.com/cmake-3.10.3-Linux-x86_64.tar.gz &&         tar xzf cmake-3.10.3-Linux-x86_64.tar.gz &&         mv cmake-3.10.3-Linux-x86_64 /opt/cmake-3.10 &&         ln -s /opt/cmake-3.10/bin/cmake /usr/bin/cmake &&         ln -s /opt/cmake-3.10/bin/ccmake /usr/bin/ccmake', 'apt-get install -y --no-install-recommends         g++-arm-linux-gnueabi         gcc-arm-linux-gnueabi         g++-arm-linux-gnueabihf         gcc-arm-linux-gnueabihf         gcc-aarch64-linux-gnu         g++-aarch64-linux-gnu', 'cd /tmp && curl -O https://dl.google.com/android/repository/android-ndk-r17c-linux-x86_64.zip', 'cd /tmp && curl -O https://dl.google.com/android/repository/android-ndk-r20b-linux-x86_64.zip', 'cd /opt && unzip /tmp/android-ndk-r17c-linux-x86_64.zip', 'cd /opt && unzip /tmp/android-ndk-r20b-linux-x86_64.zip', 'ln -s clang-format-3.8 /usr/bin/clang-format', 'pip install -i https://pypi.tuna.tsinghua.edu.cn/simple wheel', 'pip install -i https://pypi.tuna.tsinghua.edu.cn/simple pre-commit', 'apt-get autoremove -y && apt-get clean', 'rm -rf /sdk-tools-linux-4333796.zip /tmp/android-ndk-r17c-linux-x86_64.zip /cmake-3.10.3-Linux-x86_64.tar.gz']"
PaddlePaddle/Paddle-Lite,latest,/lite/tools/Dockerfile.mobile,ENV,2,"['NDK_ROOT /opt/android-ndk-r17c', 'NDK_ROOT_R20B /opt/android-ndk-r20b']"
PaddlePaddle/Paddle-Lite,latest,/lite/tools/Dockerfile.mobile,EXPOSE,1,['5900']
keras-team/autokeras,latest,/docker/pre-commit.Dockerfile,FROM,1,['python:3.7']
keras-team/autokeras,latest,/docker/pre-commit.Dockerfile,RUN,1,['pip install flake8 black isort']
keras-team/autokeras,latest,/docker/pre-commit.Dockerfile,WORKDIR,1,['/autokeras']
keras-team/autokeras,latest,/docker/pre-commit.Dockerfile,CMD,1,"['[""python"", ""docker/pre_commit.py""]']"
keras-team/autokeras,latest,/docker/devel.Dockerfile,FROM,1,['ubuntu:18.04']
keras-team/autokeras,latest,/docker/devel.Dockerfile,RUN,7,"['mkdir /app', 'apt-get update && apt-get install -y --no-install-recommends         python3.6         curl         ca-certificates         build-essential         python3.6-dev         python3-distutils         git         gcc         &&     apt-get clean &&     rm -rf /var/lib/apt/lists/*', 'curl -O https://bootstrap.pypa.io/get-pip.py &&     python3.6 get-pip.py &&     rm get-pip.py', 'git clone https://github.com/keras-team/autokeras.git', 'python3.6 -m pip install -U keras', 'cd autokeras && python3.6 -m pip install -U . && cd ..', 'rm -rf autokeras']"
keras-team/autokeras,latest,/docker/devel.Dockerfile,WORKDIR,1,['/app']
keras-team/autokeras,latest,/docker/devel.Dockerfile,CMD,1,['/bin/bash']
keras-team/autokeras,latest,/docker/Dockerfile,FROM,1,['tensorflow/tensorflow:2.3.0']
keras-team/autokeras,latest,/docker/Dockerfile,WORKDIR,2,"['/opt/autokeras', '/work']"
keras-team/autokeras,latest,/docker/Dockerfile,COPY,1,['. .']
keras-team/autokeras,latest,/docker/Dockerfile,RUN,1,['python -m pip install --no-cache-dir --editable .']
keras-team/autokeras,latest,/.devcontainer/Dockerfile,FROM,1,['tensorflow/tensorflow:latest']
keras-team/autokeras,latest,/.devcontainer/Dockerfile,RUN,2,"['apt-get -y update', 'apt-get -y install git vim']"
keras-team/autokeras,latest,/.devcontainer/Dockerfile,COPY,1,['setup.sh /setup.sh']
alibaba/MNN,latest,/3rd_party/flatbuffers/tests/docker/TODO.Dockerfile.testing.python.pypy_6_0_0_py3,FROM,1,['pypy:3-6.0.0-slim as base']
alibaba/MNN,latest,/3rd_party/flatbuffers/tests/docker/TODO.Dockerfile.testing.python.pypy_6_0_0_py3,WORKDIR,2,"['/code', '/code/tests']"
alibaba/MNN,latest,/3rd_party/flatbuffers/tests/docker/TODO.Dockerfile.testing.python.pypy_6_0_0_py3,ADD,1,['. .']
alibaba/MNN,latest,/3rd_party/flatbuffers/tests/docker/TODO.Dockerfile.testing.python.pypy_6_0_0_py3,RUN,3,"['cp flatc_debian_stretch flatc', 'pypy --version', './PythonTest.sh']"
alibaba/MNN,latest,/3rd_party/flatbuffers/tests/docker/TODO.Dockerfile.testing.python.pypy_6_0_0_py2,FROM,1,['pypy:2-6.0.0-slim as base']
alibaba/MNN,latest,/3rd_party/flatbuffers/tests/docker/TODO.Dockerfile.testing.python.pypy_6_0_0_py2,WORKDIR,2,"['/code', '/code/tests']"
alibaba/MNN,latest,/3rd_party/flatbuffers/tests/docker/TODO.Dockerfile.testing.python.pypy_6_0_0_py2,ADD,1,['. .']
alibaba/MNN,latest,/3rd_party/flatbuffers/tests/docker/TODO.Dockerfile.testing.python.pypy_6_0_0_py2,RUN,3,"['cp flatc_debian_stretch flatc', 'pypy --version', './PythonTest.sh']"
alibaba/MNN,latest,/3rd_party/flatbuffers/tests/docker/Dockerfile.testing.build_flatc_debian_stretch,FROM,2,"['debian:9.6-slim as base', 'base']"
alibaba/MNN,latest,/3rd_party/flatbuffers/tests/docker/Dockerfile.testing.build_flatc_debian_stretch,RUN,5,"['apt -qq update >/dev/null', 'apt -qq install -y cmake make build-essential >/dev/null', 'cmake -G ""Unix Makefiles""', 'make flatc', 'ls flatc']"
alibaba/MNN,latest,/3rd_party/flatbuffers/tests/docker/Dockerfile.testing.build_flatc_debian_stretch,WORKDIR,1,['/code']
alibaba/MNN,latest,/3rd_party/flatbuffers/tests/docker/Dockerfile.testing.build_flatc_debian_stretch,ADD,1,['. .']
alibaba/MNN,latest,/3rd_party/flatbuffers/tests/docker/languages/Dockerfile.testing.java.openjdk_11_0_1,FROM,1,['openjdk:11.0.1-jdk-slim-sid as base']
alibaba/MNN,latest,/3rd_party/flatbuffers/tests/docker/languages/Dockerfile.testing.java.openjdk_11_0_1,WORKDIR,2,"['/code', '/code/tests']"
alibaba/MNN,latest,/3rd_party/flatbuffers/tests/docker/languages/Dockerfile.testing.java.openjdk_11_0_1,ADD,1,['. .']
alibaba/MNN,latest,/3rd_party/flatbuffers/tests/docker/languages/Dockerfile.testing.java.openjdk_11_0_1,RUN,3,"['cp flatc_debian_stretch flatc', 'java -version', './JavaTest.sh']"
alibaba/MNN,latest,/3rd_party/flatbuffers/tests/docker/languages/Dockerfile.testing.golang.1_11,FROM,1,['golang:1.11-stretch as base']
alibaba/MNN,latest,/3rd_party/flatbuffers/tests/docker/languages/Dockerfile.testing.golang.1_11,WORKDIR,2,"['/code', '/code/tests']"
alibaba/MNN,latest,/3rd_party/flatbuffers/tests/docker/languages/Dockerfile.testing.golang.1_11,ADD,1,['. .']
alibaba/MNN,latest,/3rd_party/flatbuffers/tests/docker/languages/Dockerfile.testing.golang.1_11,RUN,3,"['cp flatc_debian_stretch flatc', 'go version', './GoTest.sh']"
alibaba/MNN,latest,/3rd_party/flatbuffers/tests/docker/languages/Dockerfile.testing.python.cpython_3_7_1,FROM,1,['python:3.7.1-slim-stretch as base']
alibaba/MNN,latest,/3rd_party/flatbuffers/tests/docker/languages/Dockerfile.testing.python.cpython_3_7_1,WORKDIR,2,"['/code', '/code/tests']"
alibaba/MNN,latest,/3rd_party/flatbuffers/tests/docker/languages/Dockerfile.testing.python.cpython_3_7_1,ADD,1,['. .']
alibaba/MNN,latest,/3rd_party/flatbuffers/tests/docker/languages/Dockerfile.testing.python.cpython_3_7_1,RUN,3,"['cp flatc_debian_stretch flatc', 'python --version', './PythonTest.sh']"
alibaba/MNN,latest,/3rd_party/flatbuffers/tests/docker/languages/Dockerfile.testing.node.10_13_0,FROM,1,['node:10.13.0-stretch as base']
alibaba/MNN,latest,/3rd_party/flatbuffers/tests/docker/languages/Dockerfile.testing.node.10_13_0,WORKDIR,2,"['/code', '/code/tests']"
alibaba/MNN,latest,/3rd_party/flatbuffers/tests/docker/languages/Dockerfile.testing.node.10_13_0,ADD,1,['. .']
alibaba/MNN,latest,/3rd_party/flatbuffers/tests/docker/languages/Dockerfile.testing.node.10_13_0,RUN,4,"['cp flatc_debian_stretch flatc', 'node --version', '../flatc -b -I include_test monster_test.fbs unicode_test.json', 'node JavaScriptTest ./monster_test_generated']"
alibaba/MNN,latest,/3rd_party/flatbuffers/tests/docker/languages/Dockerfile.testing.python.cpython_2_7_15,FROM,1,['python:2.7.15-slim-stretch as base']
alibaba/MNN,latest,/3rd_party/flatbuffers/tests/docker/languages/Dockerfile.testing.python.cpython_2_7_15,WORKDIR,2,"['/code', '/code/tests']"
alibaba/MNN,latest,/3rd_party/flatbuffers/tests/docker/languages/Dockerfile.testing.python.cpython_2_7_15,ADD,1,['. .']
alibaba/MNN,latest,/3rd_party/flatbuffers/tests/docker/languages/Dockerfile.testing.python.cpython_2_7_15,RUN,3,"['cp flatc_debian_stretch flatc', 'python --version', './PythonTest.sh']"
alibaba/MNN,latest,/3rd_party/flatbuffers/tests/docker/languages/Dockerfile.testing.java.openjdk_10_0_2,FROM,1,['openjdk:10.0.2-jdk-slim-sid as base']
alibaba/MNN,latest,/3rd_party/flatbuffers/tests/docker/languages/Dockerfile.testing.java.openjdk_10_0_2,WORKDIR,2,"['/code', '/code/tests']"
alibaba/MNN,latest,/3rd_party/flatbuffers/tests/docker/languages/Dockerfile.testing.java.openjdk_10_0_2,ADD,1,['. .']
alibaba/MNN,latest,/3rd_party/flatbuffers/tests/docker/languages/Dockerfile.testing.java.openjdk_10_0_2,RUN,3,"['cp flatc_debian_stretch flatc', 'java -version', './JavaTest.sh']"
alibaba/MNN,latest,/3rd_party/flatbuffers/tests/docker/languages/Dockerfile.testing.rust.1_30_1,FROM,1,['rust:1.30.1-slim-stretch as base']
alibaba/MNN,latest,/3rd_party/flatbuffers/tests/docker/languages/Dockerfile.testing.rust.1_30_1,WORKDIR,2,"['/code', '/code/tests']"
alibaba/MNN,latest,/3rd_party/flatbuffers/tests/docker/languages/Dockerfile.testing.rust.1_30_1,ADD,1,['. .']
alibaba/MNN,latest,/3rd_party/flatbuffers/tests/docker/languages/Dockerfile.testing.rust.1_30_1,RUN,3,"['cp flatc_debian_stretch flatc', 'rustc --version', './RustTest.sh']"
alibaba/MNN,latest,/3rd_party/flatbuffers/tests/docker/languages/Dockerfile.testing.node.11_2_0,FROM,1,['node:11.2.0-stretch as base']
alibaba/MNN,latest,/3rd_party/flatbuffers/tests/docker/languages/Dockerfile.testing.node.11_2_0,WORKDIR,2,"['/code', '/code/tests']"
alibaba/MNN,latest,/3rd_party/flatbuffers/tests/docker/languages/Dockerfile.testing.node.11_2_0,ADD,1,['. .']
alibaba/MNN,latest,/3rd_party/flatbuffers/tests/docker/languages/Dockerfile.testing.node.11_2_0,RUN,4,"['cp flatc_debian_stretch flatc', 'node --version', '../flatc -b -I include_test monster_test.fbs unicode_test.json', 'node JavaScriptTest ./monster_test_generated']"
alibaba/MNN,latest,/tools/script/Dockerfile,FROM,1,['nvidia/cuda:11.2.0-cudnn8-devel-ubuntu20.04']
alibaba/MNN,latest,/tools/script/Dockerfile,ENV,1,['DEBIAN_FRONTEND=noninteractive']
alibaba/MNN,latest,/tools/script/Dockerfile,RUN,2,"[""set -x; buildDeps='cmake protobuf-compiler lcov unzip wget git netcat python python3 pip'     && echo 'deb http://mirrors.aliyun.com/ubuntu/ focal main restricted universe multiverse\\ndeb http://mirrors.aliyun.com/ubuntu/ focal-security main restricted universe multiverse\\ndeb http://mirrors.aliyun.com/ubuntu/ focal-updates main restricted universe multiverse\\ndeb http://mirrors.aliyun.com/ubuntu/ focal-proposed main restricted universe multiverse\\ndeb http://mirrors.aliyun.com/ubuntu/ focal-backports main restricted universe multiverse' > /etc/apt/sources.list     && apt-get update     && apt-get install -y $buildDeps"", 'set -x; pip install numpy tensorflow torch']"
doccano/doccano,latest,/Dockerfile,ARG,2,"['PYTHON_VERSION=""3.8.12-slim-buster""', 'NODE_VERSION=""16.5-alpine3.14""']"
doccano/doccano,latest,/Dockerfile,FROM,3,"['node:${NODE_VERSION} AS frontend-builder', 'python:${PYTHON_VERSION} AS backend-builder', 'python:${PYTHON_VERSION} AS runtime']"
doccano/doccano,latest,/Dockerfile,COPY,5,"['frontend/ /frontend/', 'Pipfile* /tmp/', '--from=backend-builder /deps /deps', '--chown=doccano:doccano . /doccano', '--from=frontend-builder /frontend/dist /doccano/backend/client/dist']"
doccano/doccano,latest,/Dockerfile,WORKDIR,3,"['/frontend', '/tmp', '/doccano/backend']"
doccano/doccano,latest,/Dockerfile,ENV,9,"['PUBLIC_PATH=""/static/_nuxt/""', 'DATABASE_URL=""sqlite:////data/doccano.db""', 'DEBUG=""False""', 'SECRET_KEY=""change-me-in-production""', 'PORT=""8000""', 'WORKERS=""2""', 'CELERY_WORKERS=""2""', 'GOOGLE_TRACKING_ID=""""', 'AZURE_APPINSIGHTS_IKEY=""""']"
doccano/doccano,latest,/Dockerfile,RUN,8,"['apk add -U --no-cache git python3 make g++  && yarn install  && yarn build  && apk del --no-cache git make g++', 'apt-get update  && apt-get install -y --no-install-recommends     netcat=1.*     libpq-dev=11.*     unixodbc-dev=2.*     g++=4:*     libssl-dev=1.*  && apt-get clean', 'pip install --upgrade pip  && pip install --no-cache-dir --upgrade pipenv  && pipenv lock -r > /requirements.txt  && echo ""psycopg2-binary==2.8.6"" >> /requirements.txt  && echo ""django-heroku==0.3.1"" >> /requirements.txt  && pip install --no-cache-dir -r /requirements.txt  && pip wheel --no-cache-dir -r /requirements.txt -w /deps', 'useradd -ms /bin/sh doccano', 'mkdir /data  && chown doccano:doccano /data', 'pip install --no-cache-dir -U pip  && pip install --no-cache-dir /deps/*.whl  && rm -rf /deps', 'python manage.py collectstatic --noinput', 'chown -R doccano:doccano .']"
doccano/doccano,latest,/Dockerfile,VOLUME,1,['/data']
doccano/doccano,latest,/Dockerfile,USER,1,['doccano']
doccano/doccano,latest,/Dockerfile,EXPOSE,1,['${PORT}']
doccano/doccano,latest,/Dockerfile,CMD,1,"['[""/doccano/tools/run.sh""]']"
doccano/doccano,latest,/backend/Dockerfile.prod,ARG,1,"['PYTHON_VERSION=""3.8.12-slim-buster""']"
doccano/doccano,latest,/backend/Dockerfile.prod,FROM,1,['python:${PYTHON_VERSION}']
doccano/doccano,latest,/backend/Dockerfile.prod,CMD,1,"['[""python3""]']"
doccano/doccano,latest,/backend/Dockerfile.prod,WORKDIR,1,['/backend']
doccano/doccano,latest,/backend/Dockerfile.prod,ENV,2,"['PYTHONDONTWRITEBYTECODE 1', 'PYTHONUNBUFFERED 1']"
doccano/doccano,latest,/backend/Dockerfile.prod,RUN,3,"['groupadd -g 61000 doccano   && useradd -g 61000 -l -M -s /bin/false -u 61000 doccano', 'apt-get update  && apt-get install -y --no-install-recommends     netcat=1.*     libpq-dev=11.*     unixodbc-dev=2.*     g++=4:*  && pip install --upgrade pip  && pip install --no-cache-dir pipenv  && pipenv install --system --deploy  && pip uninstall -y pipenv virtualenv-clone virtualenv  && apt-get clean  && rm -rf /var/lib/apt/lists/*', 'mkdir -p /backend/staticfiles   && mkdir -p /backend/client/dist/static   && mkdir -p /backend/media   && chown -R doccano:doccano /backend/']"
doccano/doccano,latest,/backend/Dockerfile.prod,COPY,3,"['--chown=doccano:doccano ./Pipfile* /backend/', '--chown=doccano:doccano tools/ /opt/bin/', '--chown=doccano:doccano ./backend/ /backend/']"
doccano/doccano,latest,/backend/Dockerfile.prod,USER,1,['doccano:doccano']
doccano/doccano,latest,/backend/Dockerfile.prod,VOLUME,1,['/backend/staticfiles']
doccano/doccano,latest,/backend/Dockerfile.prod,ENTRYPOINT,1,"['[ ""/opt/bin/prod-django.sh"" ]']"
doccano/doccano,latest,/backend/Dockerfile.dev,ARG,1,"['PYTHON_VERSION=""3.8.12-slim-buster""']"
doccano/doccano,latest,/backend/Dockerfile.dev,FROM,1,['python:${PYTHON_VERSION}']
doccano/doccano,latest,/backend/Dockerfile.dev,RUN,2,"['apt-get update  && apt-get install -y --no-install-recommends     wget=1.*     netcat=1.*     libpq-dev=11.*     unixodbc-dev=2.*     g++=4:*     libssl-dev=1.*  && apt-get clean', 'pip install --upgrade pip     && pip install pipenv     && pipenv install --system --dev']"
doccano/doccano,latest,/backend/Dockerfile.dev,WORKDIR,1,['/src']
doccano/doccano,latest,/backend/Dockerfile.dev,COPY,2,"['./Pipfile* /src/', 'tools/ /opt/bin/']"
doccano/doccano,latest,/backend/Dockerfile.dev,ENTRYPOINT,1,"['[ ""/opt/bin/dev-django.sh"" ]']"
doccano/doccano,latest,/nginx/Dockerfile,ARG,1,"['NODE_VERSION=""16.5-alpine3.14""']"
doccano/doccano,latest,/nginx/Dockerfile,FROM,2,"['node:${NODE_VERSION} AS frontend-builder', 'nginx:1.21.1-alpine AS runtime']"
doccano/doccano,latest,/nginx/Dockerfile,COPY,4,"['frontend/ /app/', '--chown=doccano:doccano --from=frontend-builder /app/dist /var/www/html', 'nginx/nginx.conf /etc/nginx/nginx.conf', 'nginx/default.conf /etc/nginx/conf.d/default.conf']"
doccano/doccano,latest,/nginx/Dockerfile,WORKDIR,1,['/app']
doccano/doccano,latest,/nginx/Dockerfile,RUN,3,"['apk add -U --no-cache git python3 make g++   && yarn install   && yarn build   && apk del --no-cache git make g++', 'addgroup -g 61000 doccano   && adduser -G doccano -S doccano -u 61000', 'chown -R doccano:doccano /var/cache/nginx   && chmod -R g+w /var/cache/nginx   && chown -R doccano:doccano /media']"
doccano/doccano,latest,/nginx/Dockerfile,EXPOSE,1,['8080']
doccano/doccano,latest,/nginx/Dockerfile,USER,1,['doccano:doccano']
dmlc/gluon-cv,latest,/tools/docker/dockerfile,FROM,1,['nvidia/cuda:10.2-cudnn7-devel-ubuntu18.04']
dmlc/gluon-cv,latest,/tools/docker/dockerfile,LABEL,1,"['maintainer=""GluonCV Team""']"
dmlc/gluon-cv,latest,/tools/docker/dockerfile,ARG,2,"['DEBIAN_FRONTEND=noninteractive', 'TINI_VERSION=v0.19.0']"
dmlc/gluon-cv,latest,/tools/docker/dockerfile,ENV,5,"['PYTHONDONTWRITEBYTECODE=1     PYTHONUNBUFFERED=1     LD_LIBRARY_PATH=""${LD_LIBRARY_PATH}:/usr/local/lib""     PYTHONIOENCODING=UTF-8     LANG=C.UTF-8     LC_ALL=C.UTF-8', 'WORKDIR=/workspace', 'SHELL=/bin/bash', 'LD_LIBRARY_PATH=/usr/local/openmpi/lib:$LD_LIBRARY_PATH', 'PATH=/usr/local/openmpi/bin/:/usr/local/bin:/root/.local/bin:$PATH']"
dmlc/gluon-cv,latest,/tools/docker/dockerfile,RUN,22,"['apt-get update  && apt-get install -y --no-install-recommends     software-properties-common     build-essential     ca-certificates     curl     emacs     subversion     locales     cmake     git     libopencv-dev     htop     vim     wget     unzip     libopenblas-dev     ninja-build     openssh-client     openssh-server     python3-dev     python3-pip     python3-setuptools     libxft-dev     zlib1g-dev  && apt-get clean  && rm -rf /var/lib/apt/lists/*', 'python3 -m pip --no-cache-dir install --upgrade     pip     setuptools', 'mkdir /tmp/openmpi  && cd /tmp/openmpi  && curl -fSsL -O https://download.open-mpi.org/release/open-mpi/v4.0/openmpi-4.0.1.tar.gz  && tar zxf openmpi-4.0.1.tar.gz  && cd openmpi-4.0.1  && ./configure --enable-orterun-prefix-by-default  && make -j $(nproc) all  && make install  && ldconfig  && rm -rf /tmp/openmpi', 'mv /usr/local/bin/mpirun /usr/local/bin/mpirun.real  && echo \'#!/bin/bash\' > /usr/local/bin/mpirun  && echo \'mpirun.real --allow-run-as-root ""$@""\' >> /usr/local/bin/mpirun  && chmod a+x /usr/local/bin/mpirun', 'echo ""hwloc_base_binding_policy = none"" >> /usr/local/etc/openmpi-mca-params.conf  && echo ""rmaps_base_mapping_policy = slot"" >> /usr/local/etc/openmpi-mca-params.conf', 'ln -s $(which python3) /usr/local/bin/python', 'mkdir -p ${WORKDIR}', 'pip3 install --no-cache --upgrade     wheel     numpy==1.19.1     pandas==0.25.1     pytest     Pillow     requests==2.22.0     scikit-learn==0.20.4     scipy==1.2.2     urllib3==1.25.8     python-dateutil==2.8.0     sagemaker-experiments==0.*     PyYAML==5.3.1     mpi4py==3.0.2     jupyterlab==2.2.4     cmake     awscli', 'pip3 install --no-cache --upgrade mxnet-cu102==1.7.0', 'pip3 install torch==1.6.0 torchvision==0.7.0', 'mkdir -p ${WORKDIR}/notebook', 'mkdir -p ${WORKDIR}/data', 'mkdir -p /.init', 'cd ${WORKDIR}    && git clone https://github.com/dmlc/gluon-cv    && cd gluon-cv    && git checkout master    && python3 -m pip install -U -e .""[extras]"" --user', 'chmod +x /devel_entrypoint.sh', 'echo NCCL_DEBUG=INFO >> /etc/nccl.conf', 'curl -sL https://deb.nodesource.com/setup_14.x | bash -     && apt-get install -y nodejs', 'apt-get update  && apt-get install -y --no-install-recommends     libsndfile1-dev', 'pip3 install --no-cache --upgrade     soundfile==0.10.2     ipywidgets==7.5.1     jupyter_tensorboard==0.2.0     widgetsnbextension==3.5.1     tensorboard==2.1.1     tensorboardX==2.1', 'jupyter labextension install jupyterlab_tensorboard    && jupyter nbextension enable --py widgetsnbextension    && jupyter labextension install @jupyter-widgets/jupyterlab-manager', 'jupyter notebook --generate-config   && echo ""c.NotebookApp.terminado_settings = { \'shell_command\': [\'/bin/bash\'] }"" >> /root/.jupyter/jupyter_notebook_config.py', 'chmod +x /tini']"
dmlc/gluon-cv,latest,/tools/docker/dockerfile,COPY,2,"['start_jupyter.sh /start_jupyter.sh', 'devel_entrypoint.sh /devel_entrypoint.sh']"
dmlc/gluon-cv,latest,/tools/docker/dockerfile,EXPOSE,3,"['8888', '8787', '8786']"
dmlc/gluon-cv,latest,/tools/docker/dockerfile,WORKDIR,1,['${WORKDIR}']
dmlc/gluon-cv,latest,/tools/docker/dockerfile,ADD,1,['https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini /tini']
dmlc/gluon-cv,latest,/tools/docker/dockerfile,ENTRYPOINT,1,"['[ ""/tini"", ""--"", ""/devel_entrypoint.sh"" ]']"
dmlc/gluon-cv,latest,/tools/docker/dockerfile,CMD,1,"['[""/bin/bash""]']"
dmlc/gluon-cv,latest,/tools/batch/docker/Dockerfile.cpu,FROM,1,['ubuntu:18.04']
dmlc/gluon-cv,latest,/tools/batch/docker/Dockerfile.cpu,RUN,5,"['apt-get update && apt-get install -y --no-install-recommends       build-essential       locales       cmake       wget       subversion       git       curl       vim       unzip       sudo       ca-certificates       libjpeg-dev       libpng-dev       libfreetype6-dev       libopenblas-dev       python3-dev       python3-pip       python3-setuptools       pandoc       libxft-dev &&  rm -rf /var/lib/apt/lists/*', 'pip3 install --upgrade pip', 'pip3 install  --no-cache --upgrade     wheel     cmake     awscli     pypandoc', 'git clone https://github.com/dmlc/gluon-cv', 'chmod +x gluon_cv_job.sh']"
dmlc/gluon-cv,latest,/tools/batch/docker/Dockerfile.cpu,WORKDIR,1,['gluon-cv']
dmlc/gluon-cv,latest,/tools/batch/docker/Dockerfile.cpu,ADD,1,['gluon_cv_job.sh .']
dmlc/gluon-cv,latest,/tools/batch/docker/Dockerfile.gpu,FROM,1,['nvidia/cuda:10.2-cudnn7-devel-ubuntu18.04']
dmlc/gluon-cv,latest,/tools/batch/docker/Dockerfile.gpu,RUN,11,"['apt-get update && apt-get install -y --no-install-recommends       build-essential       locales       cmake       wget       subversion       git       curl       vim       unzip       sudo       ca-certificates       libjpeg-dev       libpng-dev       libfreetype6-dev       libopenblas-dev       python3-dev       python3-pip       python3-setuptools       pandoc       libgl1-mesa-glx       libxft-dev       gcc       libtinfo-dev       zlib1g-dev       build-essential       lsb-release       software-properties-common       libedit-dev       libxml2-dev &&   rm -rf /var/lib/apt/lists/*', 'bash -c ""$(wget -O - https://apt.llvm.org/llvm.sh)""', 'git clone --recursive https://github.com/apache/tvm tvm', 'git checkout 2f109a7 && git submodule update', 'mkdir build && cp cmake/config.cmake build', 'cd build && echo set\\(USE_CUDA ON\\) >> config.cmake && echo set\\(USE_LLVM ON\\) >> config.cmake && cmake .. && make -j4', 'pip3 install --upgrade pip', 'pip3 install --ignore-installed --no-cache --upgrade     numpy==1.19.5     decorator==5.0.5     attrs==20.3.0', 'pip3 install --ignore-installed --no-cache --upgrade     wheel==0.36.2     cmake==3.18.4.post1     awscli==1.19.45     pypandoc==1.5     PyYAML==5.4.1     nose==1.3.7     nose-timer==1.0.1     torch==1.8.1     torchvision==0.9.1', 'git clone https://github.com/dmlc/gluon-cv', 'chmod +x gluon_cv_job.sh']"
dmlc/gluon-cv,latest,/tools/batch/docker/Dockerfile.gpu,WORKDIR,3,"['tvm', '/', 'gluon-cv']"
dmlc/gluon-cv,latest,/tools/batch/docker/Dockerfile.gpu,ENV,1,['PYTHONPATH=/tvm/python:/tvm/vta/python:${PYTHONPATH}']
dmlc/gluon-cv,latest,/tools/batch/docker/Dockerfile.gpu,ADD,1,['gluon_cv_job.sh .']
automl/auto-sklearn,latest,/Dockerfile,FROM,1,['ubuntu:20.04']
automl/auto-sklearn,latest,/Dockerfile,WORKDIR,1,['/auto-sklearn']
automl/auto-sklearn,latest,/Dockerfile,RUN,17,"['apt-get update', 'apt-get -y install locales', 'touch /usr/share/locale/locale.alias', ""sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen && locale-gen"", 'export OPENBLAS_NUM_THREADS=1', 'export MKL_NUM_THREADS=1', 'export BLAS_NUM_THREADS=1', 'export OMP_NUM_THREADS=1', 'apt install -y python3-dev python3-pip', 'pip3 install --upgrade setuptools', 'apt install -y build-essential', 'apt install -y swig', 'pip3 install --upgrade pip', 'pip3 install pytest==4.6.* pep8 codecov pytest-cov flake8 flaky openml', 'cat /auto-sklearn/requirements.txt | xargs -n 1 -L 1 pip3 install', 'pip3 install jupyter', 'pip3 install /auto-sklearn/']"
automl/auto-sklearn,latest,/Dockerfile,ENV,3,"['LANG en_US.UTF-8', 'LANGUAGE en_US:en', 'LC_ALL en_US.UTF-8']"
automl/auto-sklearn,latest,/Dockerfile,ADD,1,['. /auto-sklearn/']
shogun-toolbox/shogun,latest,/configs/shogun/Dockerfile,FROM,1,['ubuntu:16.04']
shogun-toolbox/shogun,latest,/configs/shogun/Dockerfile,MAINTAINER,1,['shogun@shogun-toolbox.org']
shogun-toolbox/shogun,latest,/configs/shogun/Dockerfile,RUN,6,"['apt-get update && apt-get install -qq software-properties-common lsb-release', 'add-apt-repository ""deb http://archive.ubuntu.com/ubuntu $(lsb_release -sc) multiverse""', 'add-apt-repository ppa:shogun-toolbox/nightly', 'apt-get update -qq', 'apt-get upgrade -y', 'apt-get install -qq --force-yes --no-install-recommends libshogun18']"
shogun-toolbox/shogun,latest,/configs/shogun-sdk/Dockerfile,FROM,1,['debian:buster-backports']
shogun-toolbox/shogun,latest,/configs/shogun-sdk/Dockerfile,MAINTAINER,1,['shogun@shogun-toolbox.org']
shogun-toolbox/shogun,latest,/configs/shogun-sdk/Dockerfile,RUN,6,"['apt-get update -qq && apt-get upgrade -y &&     apt-get install -qq --force-yes --no-install-recommends make gcc g++     libc6-dev libbz2-dev ccache libarpack2-dev libatlas-base-dev     libblas-dev libglpk-dev libhdf5-serial-dev zlib1g-dev liblapacke-dev     libnlopt-dev liblpsolve55-dev libsnappy-dev liblzo2-dev     liblzma-dev libeigen3-dev python3-dev python3-numpy python3-matplotlib python3-scipy     python3-jinja2 python3-setuptools git-core wget jblas mono-devel cli-common-dev     octave liboctave-dev r-base-core clang     openjdk-11-jdk default-jre-headless ruby ruby-dev python3-ply sphinx-doc     python3-pip exuberant-ctags clang-format libcolpack-dev rapidjson-dev lcov     protobuf-compiler libprotobuf-dev googletest gnupg dirmngr cmake ninja-build     libspdlog-dev bison libpcre3-dev', 'pip3 install sphinx ply sphinxcontrib-bibtex sphinx_bootstrap_theme codecov', 'gem install narray', 'cd /tmp;    tar -xvf 4.1.0.tar.gz;    cd RxCpp-4.1.0/projects/;    mkdir build;    cd build;    cmake ../../;    make install;', 'cd /tmp;    tar -xvf v0.1.1.tar.gz;    cd tflogger-0.1.1;    mkdir build;    cd build;    cmake ../;    make install;', 'cd /tmp;    tar -xvf rel-4.0.1.tar.gz;    cd swig-rel-4.0.1;    ./autogen.sh;    ./configure;    make && make install && ldconfig']"
shogun-toolbox/shogun,latest,/configs/shogun-sdk/Dockerfile,ADD,3,"['https://github.com/ReactiveX/RxCpp/archive/4.1.0.tar.gz /tmp/', 'https://github.com/shogun-toolbox/tflogger/archive/v0.1.1.tar.gz /tmp/', 'https://github.com/swig/swig/archive/rel-4.0.1.tar.gz /tmp/']"
FederatedAI/FATE,latest,/.gitpod.Dockerfile,FROM,1,['gitpod/workspace-base:latest']
FederatedAI/FATE,latest,/.gitpod.Dockerfile,USER,5,"['gitpod', 'gitpod', 'root', 'gitpod', 'root']"
FederatedAI/FATE,latest,/.gitpod.Dockerfile,RUN,12,"['curl -fsSL ""https://get.sdkman.io"" | bash  && bash -c "". /home/gitpod/.sdkman/bin/sdkman-init.sh              && sdk install java 8.0.292.j9-adpt              && sdk install maven              && sdk flush archives              && sdk flush temp              && mkdir /home/gitpod/.m2              && printf \'<settings>\\n  <localRepository>/tmp/m2-repository/</localRepository>\\n</settings>\\n\' > /home/gitpod/.m2/settings.xml              && echo \'export SDKMAN_DIR=\\""/home/gitpod/.sdkman\\""\' >> /home/gitpod/.bashrc.d/99-java              && echo \'[[ -s \\""/home/gitpod/.sdkman/bin/sdkman-init.sh\\"" ]] && source \\""/home/gitpod/.sdkman/bin/sdkman-init.sh\\""\' >> /home/gitpod/.bashrc.d/99-java              && sudo mkdir -p /fateboard && sudo chown gitpod:gitpod /fateboard""', 'bash -c "". /home/gitpod/.sdkman/bin/sdkman-init.sh         && printf \'<settings>\\n  <localRepository>/tmp/m2-repository/</localRepository>\\n</settings>\\n\' > /home/gitpod/.m2/settings.xml         && mvn -f /fateboard/repo/pom.xml package         && rm -rf /tmp/m2-repository         && printf \'<settings>\\n  <localRepository>/workspace/m2-repository/</localRepository>\\n</settings>\\n\' > /home/gitpod/.m2/settings.xml""     && find /fateboard/repo/target -iname \'fateboard-*.jar\' -exec cp {} /fateboard/fateboard.jar \\;     && mkdir -p /fateboard/resources     && cp /fateboard/repo/src/main/resources/ssh.properties /fateboard/resources/     && cp /fateboard/repo/src/main/resources/application.properties /fateboard/resources/     && sed -i \'s#fateboard.datasource.jdbc-url=.*#fateboard.datasource.jdbc-url=jdbc:sqlite:/workspace/FATE/fate_sqlite.db#\' /fateboard/resources/application.properties     && sudo rm -rf /fateboard/repo', 'apt-get update && apt-get install libgmp3-dev -y && apt-get install -y libmpfr-dev libmpfr-doc libmpfr6 && apt-get install libmpc-dev -y', 'mkdir -p /venv && chown gitpod:gitpod /venv', 'sudo install-packages python3-pip', 'curl -fsSL https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer | bash     && { echo;         echo \'eval ""$(pyenv init -)""\';         echo \'eval ""$(pyenv virtualenv-init -)""\'; } >> /home/gitpod/.bashrc.d/60-python     && pyenv update     && pyenv install 3.6.15     && $HOME/.pyenv/versions/3.6.15/bin/python -m venv /venv/py36 --system-site-packages     && /venv/py36/bin/python -m pip install --no-cache-dir --upgrade pip     && /venv/py36/bin/python -m pip install --no-cache-dir --upgrade setuptools wheel virtualenv pipenv pylint rope flake8         mypy autopep8 pep8 pylama pydocstyle bandit notebook twine jedi black isort     && /venv/py36/bin/python -m pip install --no-cache-dir -r /tmp/requirements.txt     && pyenv install 3.7.12     && $HOME/.pyenv/versions/3.7.12/bin/python -m venv /venv/mkdocs --system-site-packages     && /venv/mkdocs/bin/python -m pip install --no-cache-dir --upgrade pip     && /venv/mkdocs/bin/python -m pip install --no-cache-dir -r /tmp/requirements_mkdocs.txt     && sudo rm -rf /tmp/*     && pyenv global 3.6.15', '/venv/py36/bin/python -m pip install --no-cache-dir /venv/fate_client     && /venv/py36/bin/pipeline init --ip 127.0.0.1 --port 9380     && /venv/py36/bin/flow init --ip 127.0.0.1 --port 9380     && sudo rm -rf /tmp/*', ""/venv/py36/bin/python -m pip install --no-cache-dir /venv/fate_test     && /venv/py36/bin/fate_test config     && sed -i 's#data_base_dir:.*#data_base_dir: /workspace/FATE#' /venv/py36/lib/python3.6/site-packages/fate_test/fate_test_config.yaml     && sed -i 's#fate_base:.*#fate_base: /workspace/FATE#' /venv/py36/lib/python3.6/site-packages/fate_test/fate_test_config.yaml     && sudo rm -rf /tmp/*"", 'curl -o /var/lib/apt/dazzle-marks/docker.gpg -fsSL https://download.docker.com/linux/ubuntu/gpg     && apt-key add /var/lib/apt/dazzle-marks/docker.gpg     && add-apt-repository ""deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable""     && install-packages docker-ce docker-ce-cli containerd.io', 'curl -o /usr/bin/slirp4netns -fsSL https://github.com/rootless-containers/slirp4netns/releases/download/v1.1.12/slirp4netns-$(uname -m)     && chmod +x /usr/bin/slirp4netns', 'curl -o /usr/local/bin/docker-compose -fsSL https://github.com/docker/compose/releases/download/1.29.2/docker-compose-Linux-x86_64     && chmod +x /usr/local/bin/docker-compose', 'curl -o /tmp/dive.deb -fsSL https://github.com/wagoodman/dive/releases/download/v0.10.0/dive_0.10.0_linux_amd64.deb     && apt install /tmp/dive.deb     && rm /tmp/dive.deb']"
FederatedAI/FATE,latest,/.gitpod.Dockerfile,COPY,5,"['--chown=gitpod:gitpod fateboard /fateboard/repo', 'python/requirements.txt /tmp/requirements.txt', 'doc/mkdocs/requirements.txt /tmp/requirements_mkdocs.txt', 'python/fate_client /venv/fate_client', 'python/fate_test /venv/fate_test']"
FederatedAI/FATE,latest,/.gitpod.Dockerfile,ENV,4,"['PIP_USER=', 'PYTHONUSERBASE=', 'PATH=$HOME/.pyenv/bin:$HOME/.pyenv/shims:$PATH', 'TRIGGER_REBUILD=3']"
FederatedAI/FATE,latest,/.gitpod.Dockerfile,LABEL,2,"['dazzle/layer=tool-docker', 'dazzle/test=tests/tool-docker.yaml']"
FederatedAI/FATE,latest,/doc/mkdocs/docker/Dockerfile,FROM,1,['python:3.9.2-alpine3.13']
FederatedAI/FATE,latest,/doc/mkdocs/docker/Dockerfile,ENV,3,"['PACKAGES=/usr/local/lib/python3.9/site-packages', 'PYTHONDONTWRITEBYTECODE=1', 'PYTHONPATH=$PYTHONPATH:/docs/python']"
FederatedAI/FATE,latest,/doc/mkdocs/docker/Dockerfile,WORKDIR,2,"['/tmp', '/docs']"
FederatedAI/FATE,latest,/doc/mkdocs/docker/Dockerfile,COPY,1,['requirements.txt .']
FederatedAI/FATE,latest,/doc/mkdocs/docker/Dockerfile,RUN,2,"['set -e ;    apk upgrade --update-cache -a ;    apk add --no-cache libstdc++ libffi-dev ;    apk add --no-cache --virtual .build gcc g++ musl-dev python3-dev cargo openssl-dev git;    pip install --no-cache-dir -r requirements.txt', 'apk del .build ;    rm -rf /tmp/* /root/.cache']"
FederatedAI/FATE,latest,/doc/mkdocs/docker/Dockerfile,EXPOSE,1,['8000']
FederatedAI/FATE,latest,/doc/mkdocs/docker/Dockerfile,ENTRYPOINT,1,"['[""mkdocs""]']"
FederatedAI/FATE,latest,/doc/mkdocs/docker/Dockerfile,CMD,1,"['[""serve"", ""--dev-addr=0.0.0.0:8000""]']"
FederatedAI/FATE,latest,/build/standalone-docker-build/Dockerfile,ARG,1,['version']
FederatedAI/FATE,latest,/build/standalone-docker-build/Dockerfile,FROM,1,['federatedai/fate_python_base:${version}']
FederatedAI/FATE,latest,/build/standalone-docker-build/Dockerfile,USER,1,['root']
FederatedAI/FATE,latest,/build/standalone-docker-build/Dockerfile,WORKDIR,1,['/data/projects/fate']
FederatedAI/FATE,latest,/build/standalone-docker-build/Dockerfile,ENV,6,"['WORKDIR /data/projects/fate', 'FATE_PROJECT_BASE ${WORKDIR}', 'FATE_BASE ${WORKDIR}/fate', 'FATE_FLOW_BASE ${WORKDIR}/fateflow', 'PYTHONPATH ${WORKDIR}/fate/python:${WORKDIR}/fateflow/python', 'JAVA_HOME ${WORKDIR}/env/jdk/jdk-8u192']"
FederatedAI/FATE,latest,/build/standalone-docker-build/Dockerfile,ADD,2,"['fate.tar ${WORKDIR}', 'docker-entrypoint.sh ${WORKDIR}']"
FederatedAI/FATE,latest,/build/standalone-docker-build/Dockerfile,RUN,12,"['rm /bin/sh && ln -sf /bin/bash /bin/sh', 'chmod +x /usr/local/bin/docker-entrypoint.sh', 'sed -i ""s#PYTHONPATH=.*#PYTHONPATH=${PYTHONPATH}#g"" ./bin/init_env.sh', 'cd ./fate/python/fate_client && python setup.py install', 'flow init -c ./conf/service_conf.yaml', 'cd ./fate/python/fate_test &&     sed -i ""s#data_base_dir:.*#data_base_dir: ${FATE_PROJECT_BASE}#g"" ./fate_test/fate_test_config.yaml &&     sed -i ""s#fate_base:.*#fate_base: ${FATE_BASE}#g"" ./fate_test/fate_test_config.yaml &&     python setup.py install', 'cd ./env/jdk/ && tar -xzf jdk-8u192.tar.gz', 'sed -i ""s#JAVA_HOME=.*#JAVA_HOME=${JAVA_HOME}#g"" ./bin/init_env.sh', 'sed -i ""s#fateboard.datasource.jdbc-url=.*#fateboard.datasource.jdbc-url=jdbc:sqlite:${WORKDIR}/fate_sqlite.db#g"" ./fateboard/conf/application.properties', 'sed -i ""s#fateflow.url=.*#fateflow.url=http://localhost:9380#g"" ./fateboard/conf/application.properties', 'sed -i ""s#venv=.*##g"" ./bin/init_env.sh', 'sed -i ""s#source.*venv.*##g"" ./bin/init_env.sh']"
FederatedAI/FATE,latest,/build/standalone-docker-build/Dockerfile,COPY,1,['docker-entrypoint.sh /usr/local/bin/']
FederatedAI/FATE,latest,/build/standalone-docker-build/Dockerfile,ENTRYPOINT,1,"['[""docker-entrypoint.sh""]']"
FederatedAI/FATE,latest,/build/standalone-docker-build/base/python/Dockerfile,FROM,1,['centos/python-36-centos7']
FederatedAI/FATE,latest,/build/standalone-docker-build/base/python/Dockerfile,ARG,5,"['version', 'source_dir', 'pip_index_url', 'pip_index_host', 'repo_file']"
FederatedAI/FATE,latest,/build/standalone-docker-build/base/python/Dockerfile,USER,1,['root']
FederatedAI/FATE,latest,/build/standalone-docker-build/base/python/Dockerfile,WORKDIR,1,['/data/projects/fate']
FederatedAI/FATE,latest,/build/standalone-docker-build/base/python/Dockerfile,ENV,1,['WORKDIR /data/projects/fate']
FederatedAI/FATE,latest,/build/standalone-docker-build/base/python/Dockerfile,COPY,1,['requirements.txt install_os_dependencies.sh init.sh *.repo ${WORKDIR}/']
FederatedAI/FATE,latest,/build/standalone-docker-build/base/python/Dockerfile,RUN,4,"['rm /bin/sh && ln -sf /bin/bash /bin/sh', 'sh ./init.sh ${repo_file}', 'if [[ -z ${pip_index_url} ]]; then pip install --upgrade pip && pip install -r ./requirements.txt;    else pip_index_host=$(echo ${pip_index_url} | sed ""s#http.*://##g"" | sed ""s#/.*##g"") &&     pip install --upgrade pip -i ${pip_index_url} --trusted-host ${pip_index_host} &&     pip install -r ./requirements.txt -i ${pip_index_url} --trusted-host ${pip_index_host};fi', 'rm -rf requirements.txt install_os_dependencies.sh init.sh *.repo']"
FederatedAI/FATE,latest,/build/docker-build/docker/modules/python/Dockerfile,ARG,2,"['PREFIX=prefix', 'BASE_TAG=tag']"
FederatedAI/FATE,latest,/build/docker-build/docker/modules/python/Dockerfile,FROM,2,"['${PREFIX}/base-image:${BASE_TAG} as builder', '${PREFIX}/base-image:${BASE_TAG}']"
FederatedAI/FATE,latest,/build/docker-build/docker/modules/python/Dockerfile,WORKDIR,2,"['/data/projects/fate/', '/data/projects/fate']"
FederatedAI/FATE,latest,/build/docker-build/docker/modules/python/Dockerfile,COPY,12,"['fate.tar.gz .', 'fateflow.tar.gz .', 'eggroll.tar.gz .', 'examples.tar.gz .', 'conf.tar.gz .', 'fate.env .', '--from=builder /data/projects/fate/fate /data/projects/fate/fate', '--from=builder /data/projects/fate/fateflow /data/projects/fate/fateflow', '--from=builder /data/projects/fate/eggroll /data/projects/fate/eggroll', '--from=builder /data/projects/fate/examples /data/projects/fate/examples', '--from=builder /data/projects/fate/conf /data/projects/fate/conf', '--from=builder /data/projects/fate/fate.env /data/projects/fate/']"
FederatedAI/FATE,latest,/build/docker-build/docker/modules/python/Dockerfile,RUN,2,"['tar -xzf fate.tar.gz;     tar -xzf fateflow.tar.gz;     tar -xzf eggroll.tar.gz;     tar -xzf examples.tar.gz;     tar -xzf conf.tar.gz;', 'mkdir -p ./fml_agent/data;']"
FederatedAI/FATE,latest,/build/docker-build/docker/modules/python/Dockerfile,ENV,3,"['PYTHONPATH=$PYTHONPATH:/data/projects/fate/:/data/projects/fate/eggroll/python:/data/projects/fate/fate/python:/data/projects/fate/fateflow/python', 'EGGROLL_HOME=/data/projects/fate/eggroll', 'FATE_PROJECT_BASE=/data/projects/fate']"
FederatedAI/FATE,latest,/build/docker-build/docker/modules/python/Dockerfile,CMD,1,"['[""/bin/bash"", ""-c"", ""sleep 5 && python fateflow/python/fate_flow/fate_flow_server.py""]']"
FederatedAI/FATE,latest,/build/docker-build/docker/modules/eggroll/Dockerfile,ARG,2,"['PREFIX=prefix', 'BASE_TAG=tag']"
FederatedAI/FATE,latest,/build/docker-build/docker/modules/eggroll/Dockerfile,FROM,2,"['${PREFIX}/base-image:${BASE_TAG} as builder', '${PREFIX}/base-image:${BASE_TAG}']"
FederatedAI/FATE,latest,/build/docker-build/docker/modules/eggroll/Dockerfile,WORKDIR,2,"['/data/projects/fate/', '/data/projects/fate/eggroll/']"
FederatedAI/FATE,latest,/build/docker-build/docker/modules/eggroll/Dockerfile,COPY,6,"['eggroll.tar.gz .', 'fate.tar.gz .', 'fateflow.tar.gz .', '--from=builder /data/projects/fate/eggroll /data/projects/fate/eggroll', '--from=builder /data/projects/fate/fate /data/projects/fate/fate', '--from=builder /data/projects/fate/fateflow /data/projects/fate/fateflow']"
FederatedAI/FATE,latest,/build/docker-build/docker/modules/eggroll/Dockerfile,RUN,4,"['tar -xzf eggroll.tar.gz;     tar -xzf fate.tar.gz;     tar -xzf fateflow.tar.gz;', 'ls -l', 'set -eux;     rpm --rebuilddb;     rpm --import /etc/pki/rpm-gpg/RPM*;     yum install -y which strace java-1.8.0-openjdk java-1.8.0-openjdk-devel ;     yum clean all;', 'chmod +x /tini']"
FederatedAI/FATE,latest,/build/docker-build/docker/modules/eggroll/Dockerfile,ENV,3,"['PYTHONPATH=/data/projects/fate/fate/python:/data/projects/fate/eggroll/python:/data/projects/fate/fateflow/python', 'EGGROLL_HOME=/data/projects/fate/eggroll/', 'TINI_VERSION v0.18.0']"
FederatedAI/FATE,latest,/build/docker-build/docker/modules/eggroll/Dockerfile,ADD,1,['https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini /tini']
FederatedAI/FATE,latest,/build/docker-build/docker/modules/eggroll/Dockerfile,ENTRYPOINT,1,"['[""/tini"", ""--""]']"
FederatedAI/FATE,latest,/build/docker-build/docker/modules/fateboard/Dockerfile,FROM,2,"['mcr.microsoft.com/java/jre:8u192-zulu-alpine as builder', 'mcr.microsoft.com/java/jre:8u192-zulu-alpine']"
FederatedAI/FATE,latest,/build/docker-build/docker/modules/fateboard/Dockerfile,WORKDIR,2,"['/data/projects/fate/', '/data/projects/fate/fateboard/']"
FederatedAI/FATE,latest,/build/docker-build/docker/modules/fateboard/Dockerfile,COPY,2,"['fateboard.tar.gz .', '--from=builder /data/projects/fate/fateboard /data/projects/fate/fateboard']"
FederatedAI/FATE,latest,/build/docker-build/docker/modules/fateboard/Dockerfile,RUN,2,"['tar -xzf fateboard.tar.gz', 'apk add tzdata']"
FederatedAI/FATE,latest,/build/docker-build/docker/modules/fateboard/Dockerfile,EXPOSE,1,['8080']
FederatedAI/FATE,latest,/build/docker-build/docker/modules/fateboard/Dockerfile,CMD,1,['java -Dspring.config.location=/data/projects/fate/fateboard/conf/application.properties  -Dssh_config_file=/data/projects/fate/fateboard/conf  -Xmx2048m -Xms2048m -XX:+PrintGCDetails -XX:+PrintGCDateStamps -Xloggc:gc.log -XX:+HeapDumpOnOutOfMemoryError  -jar fateboard.jar']
FederatedAI/FATE,latest,/build/docker-build/docker/modules/python-nn/Dockerfile,ARG,2,"['PREFIX=prefix', 'BASE_TAG=tag']"
FederatedAI/FATE,latest,/build/docker-build/docker/modules/python-nn/Dockerfile,FROM,1,['${PREFIX}/python:${BASE_TAG}']
FederatedAI/FATE,latest,/build/docker-build/docker/modules/python-nn/Dockerfile,COPY,1,['requirements.txt /data/projects/python/']
FederatedAI/FATE,latest,/build/docker-build/docker/modules/python-nn/Dockerfile,RUN,1,['pip install -r /data/projects/python/requirements.txt']
FederatedAI/FATE,latest,/build/docker-build/docker/base/Dockerfile,FROM,1,['centos/python-36-centos7']
FederatedAI/FATE,latest,/build/docker-build/docker/base/Dockerfile,ARG,1,['version']
FederatedAI/FATE,latest,/build/docker-build/docker/base/Dockerfile,USER,1,['root']
FederatedAI/FATE,latest,/build/docker-build/docker/base/Dockerfile,WORKDIR,1,['/data/projects/python/']
FederatedAI/FATE,latest,/build/docker-build/docker/base/Dockerfile,COPY,1,['requirements.txt /data/projects/python/']
FederatedAI/FATE,latest,/build/docker-build/docker/base/Dockerfile,RUN,2,"['set -eux &&     rpm --rebuilddb &&     rpm --import /etc/pki/rpm-gpg/RPM* &&     yum -y install gcc gcc-c++ make openssl-devel gmp-devel mpfr-devel libmpc-devel    libmpcdevel libaio numactl autoconf automake libtool libffi-devel      snappy snappy-devel zlib zlib-devel bzip2 bzip2-devel lz4-devel libasan lsof sysstat telnet psmisc &&     yum clean all', ""pip install --upgrade pip &&     sed -i '/tensorflow.*/d' /data/projects/python/requirements.txt &&     sed -i '/torch.*/d' /data/projects/python/requirements.txt &&     sed -i '/torchvision.*/d' /data/projects/python/requirements.txt &&     sed -i '/pytorch-lightning.*/d' /data/projects/python/requirements.txt &&     pip install -r requirements.txt""]"
microsoft/computervision-recipes,latest,/docker/Dockerfile,ARG,7,"['ENV=""cpu""', 'HOME=""/root""', 'HOME', 'ANACONDA=""https://repo.continuum.io/miniconda/Miniconda3-4.6.14-Linux-x86_64.sh""', 'BRANCH=""master""', 'HOME', 'HOME']"
microsoft/computervision-recipes,latest,/docker/Dockerfile,FROM,3,"['ubuntu:18.04 AS cpu', 'nvidia/cuda:9.0-base AS gpu', '$ENV AS final']"
microsoft/computervision-recipes,latest,/docker/Dockerfile,ENV,4,"['HOME=""${HOME}""', 'PATH=""${HOME}/conda/envs/cv/bin:${PATH}""', 'NOTEBOOK_CONFIG=""${HOME}/.jupyter/jupyter_notebook_config.py""', 'PATH=""${HOME}/conda/envs/cv/bin:${PATH}""']"
microsoft/computervision-recipes,latest,/docker/Dockerfile,WORKDIR,3,"['${HOME}', '${HOME}', '${HOME}/computervision']"
microsoft/computervision-recipes,latest,/docker/Dockerfile,RUN,5,"['apt-get update &&     apt-get install -y curl git build-essential', 'curl ${ANACONDA} -o anaconda.sh &&     /bin/bash anaconda.sh -b -p conda &&     rm anaconda.sh', 'git clone --depth 1 --single-branch -b ${BRANCH} https://github.com/microsoft/computervision', 'mkdir ${HOME}/.jupyter &&     echo ""c.NotebookApp.token = \'\'"" >> ${NOTEBOOK_CONFIG} &&     echo ""c.NotebookApp.ip = \'0.0.0.0\'"" >> ${NOTEBOOK_CONFIG} &&     echo ""c.NotebookApp.allow_root = True"" >> ${NOTEBOOK_CONFIG} &&     echo ""c.NotebookApp.open_browser = False"" >> ${NOTEBOOK_CONFIG} &&     echo ""c.MultiKernelManager.default_kernel_name = \'python3\'"" >> ${NOTEBOOK_CONFIG}', ""conda env create -f computervision/environment.yml &&     conda clean -fay &&     python -m ipykernel install --user --name 'cv' --display-name 'python3'""]"
microsoft/computervision-recipes,latest,/docker/Dockerfile,COPY,1,['--from=cpu ${HOME} .']
microsoft/computervision-recipes,latest,/docker/Dockerfile,EXPOSE,1,['8888']
microsoft/computervision-recipes,latest,/docker/Dockerfile,CMD,1,"['[""jupyter"", ""notebook""]']"
microsoft/computervision-recipes,latest,/contrib/crowd_counting/Dockerfile,FROM,1,['tensorflow/tensorflow:1.12.0-rc2-gpu-py3']
microsoft/computervision-recipes,latest,/contrib/crowd_counting/Dockerfile,LABEL,1,"['maintainer=""lixun.zhang@microsoft.com""']"
microsoft/computervision-recipes,latest,/contrib/crowd_counting/Dockerfile,COPY,1,['. /crowd-counting']
microsoft/computervision-recipes,latest,/contrib/crowd_counting/Dockerfile,WORKDIR,1,['/crowd-counting']
microsoft/computervision-recipes,latest,/contrib/crowd_counting/Dockerfile,RUN,9,"['apt-get update &&     apt-get install -y --no-install-recommends dialog apt-utils &&     apt-get install -y     build-essential     curl     libopenmpi-dev     libgtk2.0-dev     libsm6     libxext6     libxrender-dev     python3.5     python3-pip     python3-tk     python-dev     git', 'apt-get purge python-numpy', 'pip3 install --upgrade pip setuptools', 'pip3 uninstall numpy -y', 'pip3 install numpy', 'pip3 install cython', 'pip3 install torch==1.1.0 torchvision==0.3.0', 'pip3 install -r requirements.txt', 'pip3 install -e .']"
microsoft/computervision-recipes,latest,/contrib/crowd_counting/Dockerfile,ENTRYPOINT,1,"['[""python3""]']"
microsoft/computervision-recipes,latest,/contrib/crowd_counting/Dockerfile,CMD,1,"['[""./crowdcounting/demo/app-advanced.py"", ""-p"", ""crowdcounting/data/models/mcnn_shtechA_660.h5""]']"
root-project/root,latest,/interpreter/llvm/src/tools/clang/tools/clang-fuzzer/Dockerfile,FROM,1,['ubuntu:16.04']
root-project/root,latest,/interpreter/llvm/src/tools/clang/tools/clang-fuzzer/Dockerfile,RUN,16,"['apt-get update -y', 'apt-get install -y autoconf automake libtool curl make g++ unzip wget git     binutils liblzma-dev libz-dev python-all cmake ninja-build subversion     pkg-config docbook2x', 'wget -qO- https://github.com/google/protobuf/releases/download/v3.3.0/protobuf-cpp-3.3.0.tar.gz | tar zxf -', 'cd protobuf-3.3.0 && ./autogen.sh && ./configure && make -j $(nproc) && make check -j $(nproc) && make install && ldconfig', 'svn co http://llvm.org/svn/llvm-project/llvm/trunk llvm', ""cd llvm/tools && svn co http://llvm.org/svn/llvm-project/cfe/trunk clang -r $(cd ../ && svn info | grep Revision | awk '{print $2}')"", ""cd llvm/projects && svn co http://llvm.org/svn/llvm-project/compiler-rt/trunk compiler-rt -r $(cd ../ && svn info | grep Revision | awk '{print $2}')"", 'mkdir build0 && cd build0 && cmake -GNinja -DCMAKE_BUILD_TYPE=Release ../llvm && ninja', 'mkdir build1 && cd build1 && cmake -GNinja -DCMAKE_BUILD_TYPE=Release ../llvm     -DLLVM_ENABLE_ASSERTIONS=ON     -DCMAKE_C_COMPILER=`pwd`/../build0/bin/clang     -DCMAKE_CXX_COMPILER=`pwd`/../build0/bin/clang++     -DLLVM_USE_SANITIZE_COVERAGE=YES     -DLLVM_USE_SANITIZER=Address -DCLANG_ENABLE_PROTO_FUZZER=ON', 'cd build1 && ninja clang-fuzzer', 'cd build1 && ninja clang-proto-fuzzer', 'cd build1 && ninja clang-proto-to-cxx', 'cd build1 && ninja clang-loop-proto-to-cxx', 'cd build1 && ninja clang-loop-proto-to-llvm', 'cd build1 && ninja clang-loop-proto-fuzzer', 'cd build1 && ninja clang-llvm-proto-fuzzer']"
root-project/root,latest,/interpreter/llvm/src/tools/clang/tools/clang-fuzzer/Dockerfile,WORKDIR,1,['/root']
root-project/root,latest,/interpreter/llvm/src/utils/docker/nvidia-cuda/Dockerfile,FROM,2,"['nvidia/cuda:8.0-devel as builder', 'nvidia/cuda:8.0-devel']"
root-project/root,latest,/interpreter/llvm/src/utils/docker/nvidia-cuda/Dockerfile,LABEL,2,"['maintainer ""LLVM Developers""', 'maintainer ""LLVM Developers""']"
root-project/root,latest,/interpreter/llvm/src/utils/docker/nvidia-cuda/Dockerfile,RUN,3,"['apt-get update &&     apt-get install -y --no-install-recommends ca-certificates cmake python         subversion ninja-build &&     rm -rf /var/lib/apt/lists/*', '/tmp/scripts/checkout.sh ${checkout_args}', '/tmp/scripts/build_install_llvm.sh --to /tmp/clang-install ${buildscript_args}']"
root-project/root,latest,/interpreter/llvm/src/utils/docker/nvidia-cuda/Dockerfile,ADD,2,"['checksums /tmp/checksums', 'scripts /tmp/scripts']"
root-project/root,latest,/interpreter/llvm/src/utils/docker/nvidia-cuda/Dockerfile,ARG,2,"['checkout_args', 'buildscript_args']"
root-project/root,latest,/interpreter/llvm/src/utils/docker/nvidia-cuda/Dockerfile,COPY,1,['--from=builder /tmp/clang-install/ /usr/local/']
root-project/root,latest,/interpreter/llvm/src/utils/docker/example/Dockerfile,FROM,2,"['ubuntu as builder', 'ubuntu']"
root-project/root,latest,/interpreter/llvm/src/utils/docker/example/Dockerfile,LABEL,2,"['maintainer ""Maintainer <maintainer@email>""', 'maintainer ""Maintainer <maintainer@email>""']"
root-project/root,latest,/interpreter/llvm/src/utils/docker/example/Dockerfile,ADD,2,"['checksums /tmp/checksums', 'scripts /tmp/scripts']"
root-project/root,latest,/interpreter/llvm/src/utils/docker/example/Dockerfile,ARG,2,"['checkout_args', 'buildscript_args']"
root-project/root,latest,/interpreter/llvm/src/utils/docker/example/Dockerfile,RUN,2,"['/tmp/scripts/checkout.sh ${checkout_args}', '/tmp/scripts/build_install_llvm.sh --to /tmp/clang-install ${buildscript_args}']"
root-project/root,latest,/interpreter/llvm/src/utils/docker/example/Dockerfile,COPY,1,['--from=builder /tmp/clang-install/ /usr/local/']
root-project/root,latest,/interpreter/llvm/src/utils/docker/debian8/Dockerfile,FROM,2,"['launcher.gcr.io/google/debian8:latest as builder', 'launcher.gcr.io/google/debian8:latest']"
root-project/root,latest,/interpreter/llvm/src/utils/docker/debian8/Dockerfile,LABEL,2,"['maintainer ""LLVM Developers""', 'maintainer ""LLVM Developers""']"
root-project/root,latest,/interpreter/llvm/src/utils/docker/debian8/Dockerfile,RUN,8,"[""grep deb /etc/apt/sources.list |     sed 's/^deb/deb-src /g' >> /etc/apt/sources.list"", 'apt-get update &&     apt-get install -y --no-install-recommends ca-certificates gnupg            build-essential python wget subversion unzip &&     rm -rf /var/lib/apt/lists/*', 'wget ""https://github.com/ninja-build/ninja/releases/download/v1.8.2/ninja-linux.zip"" &&     echo ""d2fea9ff33b3ef353161ed906f260d565ca55b8ca0568fa07b1d2cab90a84a07 ninja-linux.zip""         | sha256sum -c  &&     unzip ninja-linux.zip -d /usr/local/bin &&     rm ninja-linux.zip', 'gpg --keyserver hkp://pgp.mit.edu --recv 0x2D2CEF1034921684', 'mkdir /tmp/cmake-install && cd /tmp/cmake-install &&     wget ""https://cmake.org/files/v3.7/cmake-3.7.2-SHA-256.txt.asc"" &&     wget ""https://cmake.org/files/v3.7/cmake-3.7.2-SHA-256.txt"" &&     gpg --verify cmake-3.7.2-SHA-256.txt.asc cmake-3.7.2-SHA-256.txt &&     wget ""https://cmake.org/files/v3.7/cmake-3.7.2-Linux-x86_64.tar.gz"" &&     ( grep ""cmake-3.7.2-Linux-x86_64.tar.gz"" cmake-3.7.2-SHA-256.txt |       sha256sum -c - ) &&     tar xzf cmake-3.7.2-Linux-x86_64.tar.gz -C /usr/local --strip-components=1 &&     cd / && rm -rf /tmp/cmake-install', '/tmp/scripts/checkout.sh ${checkout_args}', '/tmp/scripts/build_install_llvm.sh --to /tmp/clang-install ${buildscript_args}', 'apt-get update &&     apt-get install -y --no-install-recommends libstdc++-4.9-dev binutils &&     rm -rf /var/lib/apt/lists/*']"
root-project/root,latest,/interpreter/llvm/src/utils/docker/debian8/Dockerfile,ADD,2,"['checksums /tmp/checksums', 'scripts /tmp/scripts']"
root-project/root,latest,/interpreter/llvm/src/utils/docker/debian8/Dockerfile,ARG,2,"['checkout_args', 'buildscript_args']"
root-project/root,latest,/interpreter/llvm/src/utils/docker/debian8/Dockerfile,COPY,1,['--from=builder /tmp/clang-install/ /usr/local/']
ludwig-ai/ludwig,latest,/docker/ludwig/Dockerfile,FROM,1,['python:3.7.12-slim']
ludwig-ai/ludwig,latest,/docker/ludwig/Dockerfile,RUN,2,"['apt-get -y update && apt-get -y install     git     libsndfile1     build-essential     g++     cmake', ""HOROVOD_WITH_PYTORCH=1     HOROVOD_WITHOUT_MPI=1     HOROVOD_WITHOUT_TENSORFLOW=1     HOROVOD_WITHOUT_MXNET=1     pip install --no-cache-dir '.[full]'""]"
ludwig-ai/ludwig,latest,/docker/ludwig/Dockerfile,WORKDIR,2,"['/ludwig', '/data']"
ludwig-ai/ludwig,latest,/docker/ludwig/Dockerfile,COPY,1,['. .']
ludwig-ai/ludwig,latest,/docker/ludwig/Dockerfile,ENTRYPOINT,1,"['[""ludwig""]']"
ludwig-ai/ludwig,latest,/docker/ludwig-gpu/Dockerfile,FROM,1,['pytorch/pytorch:1.10.0-cuda11.3-cudnn8-devel']
ludwig-ai/ludwig,latest,/docker/ludwig-gpu/Dockerfile,RUN,2,"['apt-get -y update && apt-get -y install     git     libsndfile1     cmake', ""HOROVOD_GPU_OPERATIONS=NCCL     HOROVOD_WITH_PYTORCH=1     HOROVOD_WITHOUT_MPI=1     HOROVOD_WITHOUT_TENSORFLOW=1     HOROVOD_WITHOUT_MXNET=1     pip install --no-cache-dir '.[full]'""]"
ludwig-ai/ludwig,latest,/docker/ludwig-gpu/Dockerfile,WORKDIR,2,"['/ludwig', '/data']"
ludwig-ai/ludwig,latest,/docker/ludwig-gpu/Dockerfile,COPY,1,['. .']
ludwig-ai/ludwig,latest,/docker/ludwig-gpu/Dockerfile,ENTRYPOINT,1,"['[""ludwig""]']"
ludwig-ai/ludwig,latest,/docker/ludwig-ray-gpu/Dockerfile,FROM,1,['rayproject/ray:1.5.1-gpu']
ludwig-ai/ludwig,latest,/docker/ludwig-ray-gpu/Dockerfile,RUN,3,"['sudo apt-get update && DEBIAN_FRONTEND=""noninteractive"" sudo apt-get install -y     build-essential     wget     git     curl     libsndfile1     cmake     tzdata     rsync     vim', 'pip install --upgrade ray', ""HOROVOD_GPU_OPERATIONS=NCCL     HOROVOD_WITH_PYTORCH=1     HOROVOD_WITHOUT_MPI=1     HOROVOD_WITHOUT_TENSORFLOW=1     HOROVOD_WITHOUT_MXNET=1     pip install --no-cache-dir '.[full]'""]"
ludwig-ai/ludwig,latest,/docker/ludwig-ray-gpu/Dockerfile,WORKDIR,1,['/ludwig']
ludwig-ai/ludwig,latest,/docker/ludwig-ray-gpu/Dockerfile,COPY,1,['. .']
ludwig-ai/ludwig,latest,/docker/ludwig-dev/Dockerfile,FROM,1,['tensorflow/tensorflow:2.4.0-gpu']
ludwig-ai/ludwig,latest,/docker/ludwig-dev/Dockerfile,RUN,2,"['apt-get -y update && apt-get -y install     git     libsndfile1     cmake     libcudnn7=7.6.5.32-1+cuda10.1     libnccl2=2.7.8-1+cuda10.1     libnccl-dev=2.7.8-1+cuda10.1', ""HOROVOD_GPU_OPERATIONS=NCCL     HOROVOD_WITH_PYTORCH=1     HOROVOD_WITHOUT_MPI=1     HOROVOD_WITHOUT_TENSORFLOW=1     HOROVOD_WITHOUT_MXNET=1     pip install --no-cache-dir '.[test]'""]"
ludwig-ai/ludwig,latest,/docker/ludwig-dev/Dockerfile,WORKDIR,2,"['/ludwig', '/data']"
ludwig-ai/ludwig,latest,/docker/ludwig-dev/Dockerfile,COPY,1,['. .']
ludwig-ai/ludwig,latest,/docker/ludwig-dev/Dockerfile,ENTRYPOINT,1,"['[""ludwig""]']"
ludwig-ai/ludwig,latest,/docker/ludwig-ray/Dockerfile,FROM,1,['rayproject/ray:latest']
ludwig-ai/ludwig,latest,/docker/ludwig-ray/Dockerfile,RUN,2,"['sudo apt-get update && DEBIAN_FRONTEND=""noninteractive"" sudo apt-get install -y     build-essential \twget \tgit \tcurl \tlibsndfile1 \tcmake \ttzdata \trsync \tvim', ""HOROVOD_WITH_PYTORCH=1     HOROVOD_WITHOUT_MPI=1     HOROVOD_WITHOUT_TENSORFLOW=1     HOROVOD_WITHOUT_MXNET=1     pip install --no-cache-dir '.[full]'""]"
ludwig-ai/ludwig,latest,/docker/ludwig-ray/Dockerfile,WORKDIR,1,['/ludwig']
ludwig-ai/ludwig,latest,/docker/ludwig-ray/Dockerfile,COPY,1,['. .']
intel-analytics/BigDL,latest,/docker/bigdl-k8s/Dockerfile,ARG,25,"['SPARK_VERSION=2.4.6', 'HADOOP_VERSION=2.7', 'SPARK_HOME=/opt/spark', 'JDK_VERSION=8u192', 'JDK_URL=your_jdk_url', 'BIGDL_VERSION=0.14.0-SNAPSHOT', 'TINI_VERSION=v0.18.0', 'DEBIAN_FRONTEND=noninteractive', 'SPARK_VERSION', 'HADOOP_VERSION', 'JDK_VERSION', 'JDK_URL', 'SPARK_HOME', 'DEBIAN_FRONTEND', 'TINI_VERSION', 'SPARK_VERSION', 'BIGDL_VERSION', 'DEBIAN_FRONTEND', 'BIGDL_VERSION', 'DEBIAN_FRONTEND', 'BIGDL_VERSION', 'SPARK_VERSION', 'SPARK_HOME', 'TINI_VERSION', 'DEBIAN_FRONTEND']"
intel-analytics/BigDL,latest,/docker/bigdl-k8s/Dockerfile,FROM,4,"['ubuntu:20.04 as spark', 'ubuntu:20.04 as bigdl', 'ubuntu:20.04 as copies-layer', 'ubuntu:20.04']"
intel-analytics/BigDL,latest,/docker/bigdl-k8s/Dockerfile,ENV,31,"['TINI_VERSION                        ${TINI_VERSION}', 'SPARK_VERSION                       ${SPARK_VERSION}', 'SPARK_HOME                          ${SPARK_HOME}', 'SPARK_VERSION               ${SPARK_VERSION}', 'BIGDL_VERSION               ${BIGDL_VERSION}', 'BIGDL_HOME                  /opt/bigdl-${BIGDL_VERSION}', 'BIGDL_HOME                          /opt/bigdl-${BIGDL_VERSION}', 'BIGDL_VERSION                       ${BIGDL_VERSION}', 'SPARK_HOME                          ${SPARK_HOME}', 'SPARK_VERSION                       ${SPARK_VERSION}', 'OMP_NUM_THREADS                     4', 'NOTEBOOK_PORT                       12345', 'NOTEBOOK_TOKEN                      1234qwer', 'RUNTIME_SPARK_MASTER                local[4]', 'RUNTIME_K8S_SERVICE_ACCOUNT         spark', 'RUNTIME_K8S_SPARK_IMAGE             intelanalytics/bigdl-k8s:${BIGDL_VERSION}-${SPARK_VERSION}', 'RUNTIME_DRIVER_HOST                 localhost', 'RUNTIME_DRIVER_PORT                 54321', 'RUNTIME_EXECUTOR_CORES              4', 'RUNTIME_EXECUTOR_MEMORY             20g', 'RUNTIME_EXECUTOR_INSTANCES          1', 'RUNTIME_TOTAL_EXECUTOR_CORES        4', 'RUNTIME_DRIVER_CORES                4', 'RUNTIME_DRIVER_MEMORY               10g', 'RUNTIME_PERSISTENT_VOLUME_CLAIM     myvolumeclaim', 'SPARK_HOME                          /opt/spark', 'JAVA_HOME                           /opt/jdk', 'PATH ${BIGDL_HOME}/bin/cluster-serving:${JAVA_HOME}/bin:${PATH}', 'TINI_VERSION                        ${TINI_VERSION}', 'LC_ALL                              C.UTF-8', 'LANG                                C.UTF-8']"
intel-analytics/BigDL,latest,/docker/bigdl-k8s/Dockerfile,RUN,10,"['apt-get update --fix-missing &&     apt-get install -y apt-utils vim curl nano wget unzip maven git &&     wget -O jdk.tar.gz $JDK_URL &&     gunzip jdk.tar.gz &&     mkdir /opt/jdk$JDK_VERSION &&     tar -xf jdk.tar -C /opt/jdk$JDK_VERSION --strip-components 1 &&     rm jdk.tar &&     ln -s /opt/jdk$JDK_VERSION /opt/jdk &&     wget https://archive.apache.org/dist/spark/spark-${SPARK_VERSION}/spark-${SPARK_VERSION}-bin-hadoop${HADOOP_VERSION}.tgz &&     tar -zxvf spark-${SPARK_VERSION}-bin-hadoop${HADOOP_VERSION}.tgz &&     mv spark-${SPARK_VERSION}-bin-hadoop${HADOOP_VERSION} /opt/spark &&     rm spark-${SPARK_VERSION}-bin-hadoop${HADOOP_VERSION}.tgz &&     cp /opt/spark/kubernetes/dockerfiles/spark/entrypoint.sh /opt', 'ln -fs /bin/bash /bin/sh', 'if [ $SPARK_VERSION = ""3.1.2"" ]; then         rm $SPARK_HOME/jars/okhttp-*.jar &&         wget -P $SPARK_HOME/jars https://repo1.maven.org/maven2/com/squareup/okhttp3/okhttp/3.8.0/okhttp-3.8.0.jar;     elif [ $SPARK_VERSION = ""2.4.6"" ]; then         rm $SPARK_HOME/jars/kubernetes-client-*.jar &&         wget -P $SPARK_HOME/jars https://repo1.maven.org/maven2/io/fabric8/kubernetes-client/4.4.2/kubernetes-client-4.4.2.jar;     fi', 'git clone https://github.com/tensorflow/models/ /opt/models', 'apt-get update --fix-missing &&     apt-get install -y apt-utils vim curl nano wget unzip maven git', 'chmod a+x /opt/download-bigdl.sh &&     mkdir -p /opt/bigdl-examples/python', '/opt/download-bigdl.sh &&     rm bigdl*.zip', 'mkdir -p /opt/bigdl-examples/python &&     mkdir -p /opt/bigdl-examples/scala &&     apt-get update --fix-missing &&     apt-get install -y apt-utils vim curl nano wget unzip maven git &&     apt-get install -y gcc g++ make &&     apt-get install -y libsm6 libxext6 libxrender-dev &&     rm /bin/sh &&     ln -sv /bin/bash /bin/sh &&     echo ""auth required pam_wheel.so use_uid"" >> /etc/pam.d/su &&     chgrp root /etc/passwd && chmod ug+rw /etc/passwd', 'chmod +x /sbin/tini', 'cp /sbin/tini /usr/bin/tini']"
intel-analytics/BigDL,latest,/docker/bigdl-k8s/Dockerfile,ADD,2,"['https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini /sbin/tini', './download-bigdl.sh /opt']"
intel-analytics/BigDL,latest,/docker/bigdl-k8s/Dockerfile,COPY,6,"['--from=bigdl /opt/bigdl-${BIGDL_VERSION} /opt/bigdl-${BIGDL_VERSION}', '--from=spark /opt/jdk /opt/jdk', '--from=spark /opt/spark /opt/spark', '--from=spark /opt/spark/kubernetes/dockerfiles/spark/entrypoint.sh /opt', '--from=copies-layer /opt /opt', '--from=spark /sbin/tini /sbin/tini']"
intel-analytics/BigDL,latest,/docker/bigdl-k8s/Dockerfile,MAINTAINER,1,['The BigDL Authors https://github.com/intel-analytics/BigDL']
intel-analytics/BigDL,latest,/docker/bigdl-k8s/Dockerfile,WORKDIR,1,['/opt/spark/work-dir']
intel-analytics/BigDL,latest,/docker/bigdl-k8s/Dockerfile,ENTRYPOINT,1,"['[ ""/opt/entrypoint.sh"" ]']"
intel-analytics/BigDL,latest,/docker/bigdl/Dockerfile,ARG,23,"['SPARK_VERSION=2.4.6', 'SPARK_HOME=/opt/spark', 'JDK_VERSION=8u192', 'JDK_URL=your_jdk_url', 'BIGDL_VERSION=0.14.0-SNAPSHOT', 'DEBIAN_FRONTEND=noninteractive', 'SPARK_VERSION', 'JDK_VERSION', 'JDK_URL', 'SPARK_HOME', 'DEBIAN_FRONTEND', 'SPARK_VERSION', 'BIGDL_VERSION', 'DEBIAN_FRONTEND', 'BIGDL_VERSION', 'SPARK_VERSION', 'RUNTIME_SPARK_MASTER=local[4]', 'RUNTIME_DRIVER_CORES=4', 'RUNTIME_DRIVER_MEMORY=20g', 'RUNTIME_EXECUTOR_CORES=4', 'RUNTIME_EXECUTOR_MEMORY=20g', 'RUNTIME_TOTAL_EXECUTOR_CORES=4', 'DEBIAN_FRONTEND']"
intel-analytics/BigDL,latest,/docker/bigdl/Dockerfile,FROM,3,"['ubuntu:20.04 as spark', 'ubuntu:20.04 as bigdl', 'ubuntu:20.04']"
intel-analytics/BigDL,latest,/docker/bigdl/Dockerfile,ENV,20,"['SPARK_VERSION                       ${SPARK_VERSION}', 'SPARK_HOME                          ${SPARK_HOME}', 'SPARK_VERSION               ${SPARK_VERSION}', 'BIGDL_VERSION               ${BIGDL_VERSION}', 'BIGDL_HOME                  /opt/bigdl-${BIGDL_VERSION}', 'SPARK_VERSION                   ${SPARK_VERSION}', 'BIGDL_VERSION                   ${BIGDL_VERSION}', 'NOTEBOOK_PORT                   12345', 'NOTEBOOK_TOKEN                  1234qwer', 'RUNTIME_SPARK_MASTER            ${RUNTIME_SPARK_MASTER}', 'RUNTIME_DRIVER_CORES            ${RUNTIME_DRIVER_CORES}', 'RUNTIME_DRIVER_MEMORY           ${RUNTIME_DRIVER_MEMORY}', 'RUNTIME_EXECUTOR_CORES          ${RUNTIME_EXECUTOR_CORES}', 'RUNTIME_EXECUTOR_MEMORY         ${RUNTIME_EXECUTOR_MEMORY}', 'RUNTIME_TOTAL_EXECUTOR_CORES    ${RUNTIME_TOTAL_EXECUTOR_CORES}', 'SPARK_HOME                      /opt/work/spark-${SPARK_VERSION}', 'BIGDL_HOME                      /opt/work/bigdl-${BIGDL_VERSION}', 'JAVA_HOME                       /opt/jdk', 'PATH                            ${JAVA_HOME}/bin:${PATH}', 'PATH /usr/local/envs/bigdl/bin:$PATH']"
intel-analytics/BigDL,latest,/docker/bigdl/Dockerfile,RUN,10,"['apt-get update --fix-missing &&     apt-get install -y apt-utils vim curl nano wget unzip maven git &&     wget $JDK_URL &&     gunzip jdk-$JDK_VERSION-linux-x64.tar.gz &&     tar -xf jdk-$JDK_VERSION-linux-x64.tar -C /opt &&     rm jdk-$JDK_VERSION-linux-x64.tar &&     mv /opt/jdk* /opt/jdk$JDK_VERSION &&     ln -s /opt/jdk$JDK_VERSION /opt/jdk &&     wget https://archive.apache.org/dist/spark/spark-${SPARK_VERSION}/spark-${SPARK_VERSION}-bin-hadoop2.7.tgz &&     tar -zxvf spark-${SPARK_VERSION}-bin-hadoop2.7.tgz &&     mv spark-${SPARK_VERSION}-bin-hadoop2.7 /opt/spark &&     rm spark-${SPARK_VERSION}-bin-hadoop2.7.tgz &&     cp /opt/spark/kubernetes/dockerfiles/spark/entrypoint.sh /opt', 'ln -fs /bin/bash /bin/sh', 'if [ $SPARK_VERSION = ""3.1.2"" ]; then         rm $SPARK_HOME/jars/okhttp-*.jar &&         wget -P $SPARK_HOME/jars https://repo1.maven.org/maven2/com/squareup/okhttp3/okhttp/3.8.0/okhttp-3.8.0.jar;     elif [ $SPARK_VERSION = ""2.4.6"" ]; then         rm $SPARK_HOME/jars/kubernetes-client-*.jar &&         wget -P $SPARK_HOME/jars https://repo1.maven.org/maven2/io/fabric8/kubernetes-client/4.4.2/kubernetes-client-4.4.2.jar;     fi', 'apt-get update --fix-missing &&     apt-get install -y apt-utils vim curl nano wget unzip maven git', 'chmod a+x /opt/download-bigdl.sh &&     mkdir -p /opt/bigdl-examples/python', '/opt/download-bigdl.sh &&     rm bigdl*.zip', 'chmod a+x /opt/install-python-env.sh', 'apt-get update --fix-missing &&     apt-get install -y apt-utils vim curl nano wget unzip maven git &&     apt-get install -y gcc g++ make &&     apt-get install -y libsm6 libxext6 libxrender-dev &&     rm /bin/sh &&     ln -sv /bin/bash /bin/sh &&     echo ""auth required pam_wheel.so use_uid"" >> /etc/pam.d/su &&     chgrp root /etc/passwd && chmod ug+rw /etc/passwd &&     wget https://repo.continuum.io/miniconda/Miniconda3-4.5.4-Linux-x86_64.sh &&     chmod +x Miniconda3-4.5.4-Linux-x86_64.sh &&     ./Miniconda3-4.5.4-Linux-x86_64.sh -b -f -p /usr/local &&     rm Miniconda3-4.5.4-Linux-x86_64.sh &&     /opt/install-python-env.sh', 'echo ""source activate bigdl"" > ~/.bashrc', 'chmod a+x /opt/work/start-notebook.sh']"
intel-analytics/BigDL,latest,/docker/bigdl/Dockerfile,ADD,3,"['./download-bigdl.sh /opt', './install-python-env.sh /opt', './start-notebook.sh /opt/work']"
intel-analytics/BigDL,latest,/docker/bigdl/Dockerfile,WORKDIR,1,['/opt/work']
intel-analytics/BigDL,latest,/docker/bigdl/Dockerfile,COPY,3,"['--from=spark /opt/jdk /opt/jdk', '--from=spark /opt/spark /opt/work/spark-${SPARK_VERSION}', '--from=bigdl /opt/bigdl-${BIGDL_VERSION} /opt/work/bigdl-${BIGDL_VERSION}']"
intel-analytics/BigDL,latest,/docker/bigdl/Dockerfile,CMD,1,"['[""/opt/work/start-notebook.sh""]']"
intel-analytics/BigDL,latest,/python/orca/orca-dev.dockerfile,ARG,3,"['ROOT_CONTAINER=ubuntu:focal', 'PYTHON_VERSION=default', 'CONDA_MIRROR=https://repo.anaconda.com/miniconda']"
intel-analytics/BigDL,latest,/python/orca/orca-dev.dockerfile,FROM,1,['$ROOT_CONTAINER']
intel-analytics/BigDL,latest,/python/orca/orca-dev.dockerfile,LABEL,1,"['maintainer=""The BigDL Authors""']"
intel-analytics/BigDL,latest,/python/orca/orca-dev.dockerfile,SHELL,1,"['[""/bin/bash"", ""-o"", ""pipefail"", ""-c""]']"
intel-analytics/BigDL,latest,/python/orca/orca-dev.dockerfile,USER,1,['root']
intel-analytics/BigDL,latest,/python/orca/orca-dev.dockerfile,ENV,3,"['DEBIAN_FRONTEND noninteractive', 'CONDA_DIR=/opt/conda     SHELL=/bin/bash     LC_ALL=en_US.UTF-8     LANG=en_US.UTF-8     LANGUAGE=en_US.UTF-8', 'PATH=""${CONDA_DIR}/bin:${PATH}:/usr/local/scala/bin""     HOME=""/root""     JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64']"
intel-analytics/BigDL,latest,/python/orca/orca-dev.dockerfile,RUN,3,"['apt update --yes &&     apt upgrade --yes &&     apt install --yes     --no-install-recommends     tini     wget     sudo     locales     fonts-liberation     openssh-server     git     htop apt-utils ca-certificates vim     openjdk-8-jdk     scala     maven &&     apt clean && rm -rf /var/lib/apt/lists/* &&     echo ""en_US.UTF-8 UTF-8"" > /etc/locale.gen &&     locale-gen;', 'sed -i \'s/^#force_color_prompt=yes/force_color_prompt=yes/\' /etc/skel/.bashrc &&    echo \'eval ""$(command conda shell.bash hook 2> /dev/null)""\' >> /etc/skel/.bashrc &&    sed -i \'s/^#force_color_prompt=yes/force_color_prompt=yes/\' ${HOME}/.bashrc', 'set -x &&     mkdir -p ""${CONDA_DIR}"" &&     miniconda_arch=$(uname -m) &&     miniconda_installer=""Miniconda3-latest-Linux-${miniconda_arch}.sh"" &&     wget ""${CONDA_MIRROR}/${miniconda_installer}"" &&     /bin/bash ""${miniconda_installer}"" -f -b -p ""${CONDA_DIR}"" &&     rm ""${miniconda_installer}"" &&     conda config --system --set auto_update_conda false &&     conda config --system --set show_channel_urls true &&     if [[ ""${PYTHON_VERSION}"" != ""default"" ]]; then conda install --quiet --yes python=""${PYTHON_VERSION}""; fi &&     conda list python | grep \'^python \' | tr -s \' \' | cut -d \' \' -f 1,2 >> ""${CONDA_DIR}/conda-meta/pinned"" &&     conda update --all --quiet --yes &&     conda clean --all -f -y &&     rm -rf ""/root/.cache/yarn"" &&     conda init bash']"
intel-analytics/BigDL,latest,/python/orca/orca-dev.dockerfile,WORKDIR,2,"['/tmp', '""${HOME}""']"
intel-analytics/BigDL,latest,/python/orca/orca-dev.dockerfile,ENTRYPOINT,1,"['[""/bin/bash""]']"
intel-analytics/BigDL,latest,/ppml/trusted-realtime-ml/scala/docker-graphene/Dockerfile,ARG,15,"['BIGDL_VERSION=0.14.0-SNAPSHOT', 'SPARK_VERSION=3.1.2', 'GRAPHENE_BRANCH=branch-1.2-rc1', 'FLINK_VERSION=1.11.3', 'SCALA_VERSION=2.12', 'SCALA_SUB_VERSION_NUM=10', 'JDK_VERSION=8u192', 'JDK_URL=your_jdk_url', 'BIGDL_VERSION', 'SPARK_VERSION', 'BIGDL_VERSION', 'SPARK_VERSION', 'SCALA_VERSION=2.12', 'SCALA_SUB_VERSION_NUM=10', 'FLINK_VERSION=1.11.3']"
intel-analytics/BigDL,latest,/ppml/trusted-realtime-ml/scala/docker-graphene/Dockerfile,FROM,4,"['ubuntu:20.04 AS graphene', 'ubuntu:20.04 as flink', 'ubuntu:20.04 as bigdl', 'ubuntu:20.04']"
intel-analytics/BigDL,latest,/ppml/trusted-realtime-ml/scala/docker-graphene/Dockerfile,RUN,21,"['env DEBIAN_FRONTEND=noninteractive apt-get update &&     env DEBIAN_FRONTEND=noninteractive apt-get install -y         autoconf bison build-essential coreutils gawk git wget         python3 python3-pip libcurl4-openssl-dev         libprotobuf-c-dev protobuf-c-compiler python3-protobuf wget', 'git clone https://github.com/analytics-zoo/graphene.git /graphene', 'cd /graphene &&     git fetch origin $GRAPHENE_BRANCH &&     git checkout $GRAPHENE_BRANCH', 'pip3 install ninja meson &&     python3 -m pip install toml==0.10.2 click jinja2', 'cd /graphene/Pal/src/host/Linux-SGX &&     git clone https://github.com/intel/SGXDataCenterAttestationPrimitives.git linux-sgx-driver &&     cd linux-sgx-driver &&     git checkout DCAP_1.7 &&     cp -r driver/linux/* .', 'cd /graphene &&     make &&     ISGX_DRIVER_PATH=/graphene/Pal/src/host/Linux-SGX/linux-sgx-driver make -s -j4 SGX=1 &&     meson setup build/ --prefix=""/graphene/meson_build_output""     --buildtype=release -Ddirect=enabled -Dsgx=enabled  &&     ninja -C build/ &&     ninja -C build/ install', '/graphene/Scripts/download --output redis.tar.gz --sha256 f7ded6c27d48c20bc78e797046c79b6bc411121f0c2d7eead9fea50d6b0b6290 --url https://github.com/antirez/redis/archive/6.0.5.tar.gz', 'for f in $(find /graphene/Runtime -type l); do cp --remove-destination $(realpath $f) $f; done', 'apt-get update --fix-missing &&     env DEBIAN_FRONTEND=noninteractive TZ=Etc/UTC apt-get install -y tzdata apt-utils wget unzip', 'wget $JDK_URL &&     gunzip jdk-$JDK_VERSION-linux-x64.tar.gz &&     tar -xf jdk-$JDK_VERSION-linux-x64.tar -C /opt &&     rm jdk-$JDK_VERSION-linux-x64.tar &&     mv /opt/jdk* /opt/jdk$JDK_VERSION &&     ln -s /opt/jdk$JDK_VERSION /opt/jdk', 'cd / && wget -c https://downloads.lightbend.com/scala/${SCALA_VERSION}.${SCALA_SUB_VERSION_NUM}/scala-${SCALA_VERSION}.${SCALA_SUB_VERSION_NUM}.tgz &&     (cd / && gunzip < scala-${SCALA_VERSION}.${SCALA_SUB_VERSION_NUM}.tgz)|(cd /opt && tar -xvf -) &&     rm /scala-${SCALA_VERSION}.${SCALA_SUB_VERSION_NUM}.tgz', 'cd /opt &&     wget https://archive.apache.org/dist/flink/flink-${FLINK_VERSION}/flink-${FLINK_VERSION}-bin-scala_${SCALA_VERSION}.tgz &&     tar -zxvf flink-${FLINK_VERSION}-bin-scala_${SCALA_VERSION}.tgz &&     rm flink-${FLINK_VERSION}-bin-scala_${SCALA_VERSION}.tgz', 'ls -al /opt', 'apt-get update --fix-missing &&     apt-get install -y apt-utils curl wget unzip git', 'wget https://raw.githubusercontent.com/intel-analytics/analytics-zoo/bigdl-2.0/docker/hyperzoo/download-bigdl.sh &&     chmod a+x ./download-bigdl.sh &&     chmod a+x /opt/download-bigdl-serving.sh', './download-bigdl.sh &&     rm bigdl*.zip &&     cd /opt &&     ./download-bigdl-serving.sh', 'cd /opt &&     wget https://raw.githubusercontent.com/intel-analytics/BigDL/branch-2.0/scala/serving/scripts/perf-benchmark/e2e_throughput.py &&     wget https://raw.githubusercontent.com/intel-analytics/BigDL/branch-2.0/scala/serving/scripts/perf-benchmark/requirement.yml &&     wget -c ""https://sourceforge.net/projects/analytics-zoo/files/analytics-zoo-data/ILSVRC2012_val_00000001.JPEG/download"" -O ILSVRC2012_val_00000001.JPEG &&     mkdir resnet50 &&     cd resnet50 &&     wget -c ""https://sourceforge.net/projects/analytics-zoo/files/analytics-zoo-models/openvino/2018_R5/resnet_v1_50.bin/download"" -O resnet_v1_50.bin &&     wget -c ""https://sourceforge.net/projects/analytics-zoo/files/analytics-zoo-models/openvino/2018_R5/resnet_v1_50.xml/download"" -O resnet_v1_50.xml', 'mkdir -p /graphene &&     mkdir -p /graphene/Runtime &&     mkdir -p /graphene/python &&     mkdir -p /graphene/Tools &&     mkdir -p /graphene/Pal/src &&     mkdir -p /graphene/meson_build_output &&     mkdir -p /ppml/trusted-realtime-ml/redis &&     mkdir -p /ppml/trusted-realtime-ml/redis/work/keys &&     mkdir -p /ppml/trusted-realtime-ml/redis/work/password &&     mkdir -p /ppml/trusted-realtime-ml/java/work &&     mkdir -p /ppml/trusted-realtime-ml/java/work/keys &&     mkdir -p /ppml/trusted-realtime-ml/java/work/password &&     mkdir -p /ppml/trusted-realtime-ml/java/work/data &&     mkdir -p /ppml/trusted-realtime-ml/java/work/models &&     mkdir -p /ppml/trusted-realtime-ml/java/work/benchmark &&     mkdir -p /root/.keras/datasets &&     mkdir -p /root/.zinc &&     mkdir -p /root/.m2 &&     mkdir -p /graphene/Pal/src/host/Linux-SGX/signer', 'apt-get update --fix-missing &&     env DEBIAN_FRONTEND=noninteractive TZ=Etc/UTC apt-get install -y tzdata &&     apt-get install -y apt-utils vim curl nano wget unzip maven git tree &&     apt-get install -y libsm6 make build-essential &&     apt-get install -y autoconf gawk bison libcurl4-openssl-dev python3-protobuf libprotobuf-c-dev protobuf-c-compiler &&     apt-get install -y openssl libssl-dev pkg-config &&     apt-get install -y netcat net-tools &&     apt-get install -y python3-minimal &&     apt-get install -y build-essential python3 python3-setuptools python3-dev python3-pip &&     pip3 install --upgrade pip &&     pip install --upgrade setuptools &&     ln -s /usr/bin/python3 /usr/bin/python &&     pip install --no-cache-dir ninja meson &&     python3 -m pip install toml==0.10.2 click jinja2', 'mkdir -p /ppml/trusted-realtime-ml/redis/src &&     tar -C /ppml/trusted-realtime-ml/redis/src --strip-components=1 -xf /ppml/trusted-realtime-ml/redis/redis.tar.gz &&     make BUILD_TLS=yes -C /ppml/trusted-realtime-ml/redis/src &&     cp /ppml/trusted-realtime-ml/redis/src/src/redis-server /ppml/trusted-realtime-ml/redis/redis-server', 'chmod a+x /ppml/trusted-realtime-ml/redis/init.sh &&     chmod a+x /ppml/trusted-realtime-ml/redis/clean.sh &&     chmod a+x /ppml/trusted-realtime-ml/redis/start-redis.sh &&     chmod a+x /ppml/trusted-realtime-ml/java/init.sh &&     chmod a+x /ppml/trusted-realtime-ml/java/clean.sh &&     chmod a+x /ppml/trusted-realtime-ml/java/start-flink-jobmanager.sh &&     chmod a+x /ppml/trusted-realtime-ml/java/start-flink-taskmanager.sh &&     chmod a+x /ppml/trusted-realtime-ml/java/start-http-frontend.sh &&     chmod a+x /ppml/trusted-realtime-ml/java/init-cluster-serving.sh &&     chmod a+x /ppml/trusted-realtime-ml/java/start-cluster-serving-job.sh &&     chmod a+x /ppml/trusted-realtime-ml/check-status.sh &&     chmod a+x /ppml/trusted-realtime-ml/start-all.sh']"
intel-analytics/BigDL,latest,/ppml/trusted-realtime-ml/scala/docker-graphene/Dockerfile,ENV,34,"['FLINK_VERSION ${FLINK_VERSION}', 'SCALA_VERSION ${SCALA_VERSION}', 'SCALA_SUB_VERSION_NUM ${SCALA_SUB_VERSION_NUM}', 'SPARK_VERSION\t\t${SPARK_VERSION}', 'BIGDL_VERSION\t\t${BIGDL_VERSION}', 'BIGDL_HOME\t\t        /bigdl-${BIGDL_VERSION}', 'SPARK_VERSION\t\t\t${SPARK_VERSION}', 'BIGDL_VERSION\t\t\t${BIGDL_VERSION}', 'JAVA_HOME\t\t\t\t/opt/jdk8', 'PATH\t\t\t\t/graphene/meson_build_output/bin:${JAVA_HOME}/bin:${PATH}', 'LOCAL_IP\t\t\t\t127.0.0.1', 'SGX_MEM_SIZE\t\t\t64G', 'REDIS_PORT\t\t\t\t6379', 'FLINK_VERSION\t\t\t${FLINK_VERSION}', 'FLINK_HOME\t\t\t\t/ppml/trusted-realtime-ml/java/work/flink-${FLINK_VERSION}', 'FLINK_JOB_MANAGER_IP\t\t127.0.0.1', 'FLINK_JOB_MANAGER_REST_PORT\t\t8081', 'FLINK_JOB_MANAGER_RPC_PORT\t\t6123', 'FLINK_TASK_MANAGER_IP\t\t127.0.0.1', 'FLINK_TASK_MANAGER_DATA_PORT\t6126', 'FLINK_BLOB_SERVER_PORT              6124', 'FLINK_TASK_MANAGER_RPC_PORT\t\t6125', 'FLINK_TASK_MANAGER_TASKSLOTS_NUM\t1', 'CORE_NUM                            2', 'TASKMANAGER_MEMORY_TASK_HEAP_SIZE   10gb', 'TASKMANAGER_MEMORY_MANAGED_SIZE     8192mb', 'XMX_SIZE                            10g', 'SGX_MODE                            sgx', 'REDIS_HOST                          127.0.0.1', 'SCALA_VERSION                       ${SCALA_VERSION}', 'SCALA_SUB_VERSION_NUM               ${SCALA_SUB_VERSION_NUM}', 'PYTHONPATH\t${PYTHONPATH}:/graphene/meson_build_output/lib/python3.6/site-packages', 'LC_ALL\tC.UTF-8', 'LANG\tC.UTF-8']"
intel-analytics/BigDL,latest,/ppml/trusted-realtime-ml/scala/docker-graphene/Dockerfile,ADD,20,"['./download-bigdl-serving.sh /opt/download-bigdl-serving.sh', './Makefile /ppml/trusted-realtime-ml/redis/Makefile', './bash.manifest.template /ppml/trusted-realtime-ml/redis/bash.manifest.template', './init.sh /ppml/trusted-realtime-ml/redis/init.sh', './clean.sh /ppml/trusted-realtime-ml/redis/clean.sh', './start-redis.sh /ppml/trusted-realtime-ml/redis/start-redis.sh', './Makefile /ppml/trusted-realtime-ml/java/Makefile', './bash.manifest.template /ppml/trusted-realtime-ml/java/bash.manifest.template', './init.sh /ppml/trusted-realtime-ml/java/init.sh', './clean.sh /ppml/trusted-realtime-ml/java/clean.sh', './start-flink-jobmanager.sh /ppml/trusted-realtime-ml/java/start-flink-jobmanager.sh', './start-flink-taskmanager.sh /ppml/trusted-realtime-ml/java/start-flink-taskmanager.sh', './start-http-frontend.sh /ppml/trusted-realtime-ml/java/start-http-frontend.sh', './servables.yaml /ppml/trusted-realtime-ml/java/work/servables.yaml', './init-cluster-serving.sh /ppml/trusted-realtime-ml/java/init-cluster-serving.sh', './start-cluster-serving-job.sh /ppml/trusted-realtime-ml/java/start-cluster-serving-job.sh', './check-status.sh /ppml/trusted-realtime-ml/check-status.sh', './start-all.sh /ppml/trusted-realtime-ml/start-all.sh', './init-benchmark.sh /ppml/trusted-realtime-ml/java/work/benchmark/init-benchmark.sh', './cluster-serving-config.yaml /ppml/trusted-realtime-ml/java/config.yaml']"
intel-analytics/BigDL,latest,/ppml/trusted-realtime-ml/scala/docker-graphene/Dockerfile,COPY,17,"['--from=graphene /graphene/Scripts /graphene/Scripts', '--from=graphene /graphene/Runtime/ /graphene/Runtime', '--from=graphene /graphene/python /graphene/python', '--from=graphene /graphene/Pal /graphene/Pal', '--from=graphene /graphene/Pal/src/host/Linux-SGX/generated_offsets.py /graphene/python/', '--from=graphene /graphene/Tools/argv_serializer /graphene/Tools', '--from=graphene /graphene/meson_build_output /graphene/meson_build_output', '--from=graphene /redis.tar.gz /ppml/trusted-realtime-ml/redis', '--from=flink /opt/jdk  /opt/jdk8', '--from=flink /opt/scala-${SCALA_VERSION}.${SCALA_SUB_VERSION_NUM}  /opt/scala-${SCALA_VERSION}.${SCALA_SUB_VERSION_NUM}', '--from=flink /opt/flink-${FLINK_VERSION} /ppml/trusted-realtime-ml/java/work/flink-${FLINK_VERSION}', '--from=bigdl /opt/bigdl-serving*-jar-with-dependencies.jar /ppml/trusted-realtime-ml/java/work/bigdl-serving-jar-with-dependencies.jar', '--from=bigdl /opt/bigdl-serving*-http.jar /ppml/trusted-realtime-ml/java/work/bigdl-serving-http.jar', '--from=bigdl /opt/resnet50/ /ppml/trusted-realtime-ml/java/work/models/resnet50', '--from=bigdl /opt/ILSVRC2012_val_00000001.JPEG /ppml/trusted-realtime-ml/java/work/data/ILSVRC2012_val_00000001.JPEG', '--from=bigdl /opt/e2e_throughput.py /ppml/trusted-realtime-ml/java/work/benchmark/e2e_throughput.py', '--from=bigdl /opt/requirement.yml /ppml/trusted-realtime-ml/java/work/benchmark/requirement.yml']"
intel-analytics/BigDL,latest,/ppml/trusted-realtime-ml/scala/docker-occlum/Dockerfile,ARG,14,"['BIGDL_VERSION=0.14.0-SNAPSHOT', 'SPARK_VERSION=3.1.2', 'FLINK_VERSION=1.11.3', 'SCALA_VERSION=2.12', 'SCALA_SUB_VERSION_NUM=10', 'FLINK_VERSION=1.11.3', 'BIGDL_VERSION=0.14.0-SNAPSHOT', 'SPARK_VERSION=3.1.2', 'SCALA_VERSION=2.12', 'SCALA_SUB_VERSION_NUM=10', 'FLINK_VERSION=1.11.3', 'BIGDL_VERSION=0.14.0-SNAPSHOT', 'SCALA_VERSION=2.12', 'SCALA_SUB_VERSION_NUM=10']"
intel-analytics/BigDL,latest,/ppml/trusted-realtime-ml/scala/docker-occlum/Dockerfile,FROM,3,"['occlum/occlum:0.24.0-ubuntu18.04 as redis-tls', 'ubuntu:18.04 as bigdl', 'ubuntu:18.04 as ppml']"
intel-analytics/BigDL,latest,/ppml/trusted-realtime-ml/scala/docker-occlum/Dockerfile,WORKDIR,1,['/opt']
intel-analytics/BigDL,latest,/ppml/trusted-realtime-ml/scala/docker-occlum/Dockerfile,RUN,16,"['apt-get update &&     DEBIAN_FRONTEND=""noninteractive"" apt-get install -y --no-install-recommends         git build-essential coreutils ca-certificates &&     apt-get clean', 'git clone https://github.com/openssl/openssl.git &&     cd openssl &&     git checkout tags/OpenSSL_1_1_1 -b OpenSSL_1_1_1 &&     ./config     --openssldir=/opt/ssl     --with-rand-seed=rdcpu     no-zlib no-async no-tests &&     make -j `getconf _NPROCESSORS_ONLN` && make install', 'git clone https://github.com/redis/redis.git &&     cd redis &&     git checkout 6.0.6 &&     make -j `getconf _NPROCESSORS_ONLN` BUILD_TLS=yes && make PREFIX=/opt/redis install', 'apt-get update &&     DEBIAN_FRONTEND=""noninteractive"" apt-get install -y --no-install-recommends         ca-certificates wget unzip apt-utils curl &&     apt-get clean', 'cd / && wget -c https://downloads.lightbend.com/scala/${SCALA_VERSION}.${SCALA_SUB_VERSION_NUM}/scala-${SCALA_VERSION}.${SCALA_SUB_VERSION_NUM}.tgz &&     (cd / && gunzip < scala-${SCALA_VERSION}.${SCALA_SUB_VERSION_NUM}.tgz)|(cd /opt && tar -xvf -) &&     rm /scala-${SCALA_VERSION}.${SCALA_SUB_VERSION_NUM}.tgz', 'cd /opt &&     wget https://archive.apache.org/dist/flink/flink-${FLINK_VERSION}/flink-${FLINK_VERSION}-bin-scala_${SCALA_VERSION}.tgz &&     tar -zxvf flink-${FLINK_VERSION}-bin-scala_${SCALA_VERSION}.tgz &&     rm flink-${FLINK_VERSION}-bin-scala_${SCALA_VERSION}.tgz', 'cd /opt &&     wget https://raw.githubusercontent.com/intel-analytics/BigDL/branch-2.0/ppml/trusted-realtime-ml/scala/docker-graphene/download-bigdl-serving.sh &&     chmod a+x download-bigdl-serving.sh &&     ./download-bigdl-serving.sh', 'cd /opt &&     mkdir resnet50 &&     cd resnet50 &&     wget -c ""https://sourceforge.net/projects/analytics-zoo/files/analytics-zoo-models/openvino/2018_R5/resnet_v1_50.bin/download"" -O resnet_v1_50.bin &&     wget -c ""https://sourceforge.net/projects/analytics-zoo/files/analytics-zoo-models/openvino/2018_R5/resnet_v1_50.xml/download"" -O resnet_v1_50.xml', 'cd /opt &&     wget https://raw.githubusercontent.com/intel-analytics/BigDL/branch-2.0/scala/serving/scripts/perf-benchmark/requirement.yml &&     wget -c ""https://sourceforge.net/projects/analytics-zoo/files/analytics-zoo-data/ILSVRC2012_val_00000001.JPEG/download"" -O ILSVRC2012_val_00000001.JPEG', 'mkdir -p ${BIGDL_HOME}', 'apt-get update &&     DEBIAN_FRONTEND=""noninteractive"" apt-get install -y --no-install-recommends         build-essential ca-certificates openjdk-11-jdk         curl tzdata wget netcat gnupg2 jq make gdb libfuse-dev libtool         libprotobuf-c-dev protobuf-c-compiler libcurl4-openssl-dev libprotobuf-dev', ""echo 'deb [arch=amd64] https://download.01.org/intel-sgx/sgx_repo/ubuntu bionic main' | tee /etc/apt/sources.list.d/intelsgx.list &&     wget -qO - https://download.01.org/intel-sgx/sgx_repo/ubuntu/intel-sgx-deb.key | apt-key add -"", ""echo 'deb [arch=amd64] https://occlum.io/occlum-package-repos/debian bionic main' | tee /etc/apt/sources.list.d/occlum.list &&     wget -qO - https://occlum.io/occlum-package-repos/debian/public.key | apt-key add -"", 'apt-get update &&     DEBIAN_FRONTEND=""noninteractive"" apt-get install -y --no-install-recommends         build-essential ca-certificates openjdk-11-jdk curl wget netcat net-tools         gnupg2 vim jq make gdb libfuse-dev libtool         libsgx-dcap-ql libsgx-epid libsgx-urts libsgx-quote-ex libsgx-uae-service         libsgx-dcap-quote-verify-dev         occlum &&     apt-get clean', 'echo ""source /etc/profile"" >> $HOME/.bashrc', 'chmod a+x /opt/init-occlum-taskmanager.sh &&     chmod a+x /opt/start-redis.sh &&     chmod a+x /opt/check-status.sh &&     chmod a+x /opt/start-flink-jobmanager.sh &&     chmod a+x /opt/start-flink-taskmanager.sh &&     chmod a+x /opt/start-cluster-serving-job.sh &&     chmod a+x /opt/start-http-frontend.sh &&     chmod a+x /opt/start-all.sh &&     chmod a+x /opt/init-cluster-serving.sh &&     chmod a+x /opt/config.yaml &&     chmod a+x /opt/init-benchmark.sh &&     chmod a+x /opt/e2e_throughput.py']"
intel-analytics/BigDL,latest,/ppml/trusted-realtime-ml/scala/docker-occlum/Dockerfile,ENV,25,"['JAVA_HOME\t\t\t\t/usr/lib/jvm/java-8-openjdk-amd64', 'FLINK_VERSION ${FLINK_VERSION}', 'FLINK_HOME\t\t\t\t/opt/flink-${FLINK_VERSION}', 'BIGDL_VERSION=${BIGDL_VERSION}', 'BIGDL_HOME\t\t        /opt/bigdl-${BIGDL_VERSION}', 'SCALA_VERSION ${SCALA_VERSION}', 'SCALA_SUB_VERSION_NUM ${SCALA_SUB_VERSION_NUM}', 'JAVA_HOME\t\t\t\t/usr/lib/jvm/java-11-openjdk-amd64', 'PATH                    ${JAVA_HOME}/bin:${PATH}', 'LOCAL_IP\t\t\t\t127.0.0.1', 'SGX_MEM_SIZE\t\t\t32G', 'REDIS_PORT\t\t\t\t6379', 'FLINK_VERSION\t\t\t${FLINK_VERSION}', 'FLINK_HOME\t\t\t\t/opt/flink-${FLINK_VERSION}', 'BIGDL_HOME\t\t        /opt/bigdl-${BIGDL_VERSION}', 'FLINK_JOB_MANAGER_IP\t\t127.0.0.1', 'FLINK_JOB_MANAGER_REST_PORT\t\t8081', 'FLINK_JOB_MANAGER_RPC_PORT\t\t6123', 'FLINK_TASK_MANAGER_IP\t\t127.0.0.1', 'FLINK_TASK_MANAGER_DATA_PORT\t6124', 'FLINK_TASK_MANAGER_RPC_PORT\t\t6125', 'FLINK_TASK_MANAGER_TASKSLOTS_NUM\t1', 'CORE_NUM                            2', 'SCALA_VERSION                       ${SCALA_VERSION}', 'SCALA_SUB_VERSION_NUM               ${SCALA_SUB_VERSION_NUM}']"
intel-analytics/BigDL,latest,/ppml/trusted-realtime-ml/scala/docker-occlum/Dockerfile,COPY,8,"['--from=redis-tls /opt/ssl /opt/ssl', '--from=redis-tls /opt/redis /opt/redis', '--from=redis-tls /opt/occlum/glibc /opt/occlum/glibc', '--from=bigdl /opt/scala-${SCALA_VERSION}.${SCALA_SUB_VERSION_NUM}  /opt/scala-${SCALA_VERSION}.${SCALA_SUB_VERSION_NUM}', '--from=bigdl /opt/flink-${FLINK_VERSION} /opt/flink-${FLINK_VERSION}', '--from=bigdl /opt/resnet50 /opt/resnet50', '--from=bigdl /opt/bigdl-serving*-jar-with-dependencies.jar ${BIGDL_HOME}/bigdl-serving-jar-with-dependencies.jar', '--from=bigdl /opt/bigdl-serving*-http.jar ${BIGDL_HOME}/bigdl-serving-http.jar']"
intel-analytics/BigDL,latest,/ppml/trusted-realtime-ml/scala/docker-occlum/Dockerfile,ADD,13,"['./cluster-serving-config.yaml /opt/config.yaml', './servables.yaml /opt/servables.yaml', './init-occlum-taskmanager.sh /opt/init-occlum-taskmanager.sh', './start-redis.sh /opt/start-redis.sh', './check-status.sh /opt/check-status.sh', './start-flink-jobmanager.sh /opt/start-flink-jobmanager.sh', './start-flink-taskmanager.sh /opt/start-flink-taskmanager.sh', './start-cluster-serving-job.sh /opt/start-cluster-serving-job.sh', './start-http-frontend.sh /opt/start-http-frontend.sh', './start-all.sh /opt/start-all.sh', './init-cluster-serving.sh /opt/init-cluster-serving.sh', './init-benchmark.sh /opt/init-benchmark.sh', './e2e_throughput.py /opt/e2e_throughput.py']"
intel-analytics/BigDL,latest,/ppml/trusted-big-data-ml/python/docker-graphene/Dockerfile,ARG,19,"['BIGDL_VERSION=0.14.0-SNAPSHOT', 'SPARK_VERSION=3.1.2', 'TINI_VERSION=v0.18.0', 'JDK_VERSION=8u192', 'JDK_URL=your_jdk_url', 'SPARK_JAR_REPO_URL=your_spark_jar_repo_url', 'HTTP_PROXY_HOST', 'HTTP_PROXY_PORT', 'HTTPS_PROXY_HOST', 'HTTPS_PROXY_PORT', 'SPARK_VERSION', 'JDK_VERSION', 'JDK_URL', 'SPARK_JAR_REPO_URL', 'BIGDL_VERSION', 'SPARK_VERSION', 'BIGDL_VERSION', 'SPARK_VERSION', 'TINI_VERSION']"
intel-analytics/BigDL,latest,/ppml/trusted-big-data-ml/python/docker-graphene/Dockerfile,FROM,4,"['ubuntu:20.04 AS graphene', 'ubuntu:20.04 as spark', 'ubuntu:20.04 as bigdl', 'ubuntu:20.04']"
intel-analytics/BigDL,latest,/ppml/trusted-big-data-ml/python/docker-graphene/Dockerfile,RUN,22,"['env DEBIAN_FRONTEND=noninteractive apt-get update &&     env DEBIAN_FRONTEND=noninteractive apt-get install -y autoconf bison build-essential coreutils gawk git libcurl4-openssl-dev libprotobuf-c-dev protobuf-c-compiler python3-protobuf wget', 'git clone https://github.com/analytics-zoo/graphene.git /graphene', 'cd /graphene &&     git fetch origin branch-0.5 &&     git checkout branch-0.5', 'cd /graphene/Pal/src/host/Linux-SGX &&     git clone https://github.com/intel/SGXDataCenterAttestationPrimitives.git linux-sgx-driver &&     cd linux-sgx-driver &&     git checkout DCAP_1.7 &&     cp -r driver/linux/* .', 'cd /graphene &&     ISGX_DRIVER_PATH=/graphene/Pal/src/host/Linux-SGX/linux-sgx-driver make -s -j4 SGX=1 WERROR=1 && true', 'for f in $(find /graphene/Runtime -type l); do cp --remove-destination $(realpath $f) $f; done', 'apt-get update --fix-missing &&     env DEBIAN_FRONTEND=noninteractive TZ=Etc/UTC apt-get install -y tzdata apt-utils wget unzip patch zip git maven', 'wget $JDK_URL &&     gunzip jdk-$JDK_VERSION-linux-x64.tar.gz &&     tar -xf jdk-$JDK_VERSION-linux-x64.tar -C /opt &&     rm jdk-$JDK_VERSION-linux-x64.tar &&     mv /opt/jdk* /opt/jdk$JDK_VERSION &&     ln -s /opt/jdk$JDK_VERSION /opt/jdk', 'cd / && wget -c https://downloads.lightbend.com/scala/2.11.8/scala-2.11.8.tgz &&     (cd / && gunzip < scala-2.11.8.tgz)|(cd /opt && tar -xvf -) &&     rm /scala-2.11.8.tgz', 'cd /opt &&     wget https://archive.apache.org/dist/maven/maven-3/3.6.3/binaries/apache-maven-3.6.3-bin.tar.gz &&     tar -zxvf apache-maven-3.6.3-bin.tar.gz', ""cd /opt &&     wget https://archive.apache.org/dist/spark/spark-${SPARK_VERSION}/spark-${SPARK_VERSION}-bin-hadoop3.2.tgz &&     tar -zxvf spark-${SPARK_VERSION}-bin-hadoop3.2.tgz &&     mv spark-${SPARK_VERSION}-bin-hadoop3.2 spark-${SPARK_VERSION} &&     rm spark-${SPARK_VERSION}-bin-hadoop3.2.tgz &&     cp spark-${SPARK_VERSION}/conf/log4j.properties.template spark-${SPARK_VERSION}/conf/log4j.properties &&     echo $'\\nlog4j.logger.io.netty=ERROR' >> spark-${SPARK_VERSION}/conf/log4j.properties &&     rm spark-${SPARK_VERSION}/python/lib/pyspark.zip &&     rm spark-${SPARK_VERSION}/jars/spark-core_2.12-$SPARK_VERSION.jar &&     rm spark-${SPARK_VERSION}/jars/spark-kubernetes_2.12-$SPARK_VERSION.jar &&     rm spark-${SPARK_VERSION}/jars/spark-network-common_2.12-$SPARK_VERSION.jar &&     rm spark-${SPARK_VERSION}/examples/jars/spark-examples_2.12-$SPARK_VERSION.jar &&     rm spark-${SPARK_VERSION}/jars/hadoop-common-3.2.0.jar &&     rm spark-${SPARK_VERSION}/jars/hive-exec-2.3.7-core.jar"", 'cd /opt &&     wget $SPARK_JAR_REPO_URL/spark-core_2.12-$SPARK_VERSION.jar &&     wget $SPARK_JAR_REPO_URL/spark-kubernetes_2.12-$SPARK_VERSION.jar &&     wget $SPARK_JAR_REPO_URL/spark-network-common_2.12-$SPARK_VERSION.jar &&     wget $SPARK_JAR_REPO_URL/spark-examples_2.12-$SPARK_VERSION.jar &&     wget $SPARK_JAR_REPO_URL/pyspark.zip &&     mv /opt/spark-core_2.12-$SPARK_VERSION.jar  /opt/spark-${SPARK_VERSION}/jars/spark-core_2.12-$SPARK_VERSION.jar &&     mv /opt/spark-kubernetes_2.12-$SPARK_VERSION.jar /opt/spark-${SPARK_VERSION}/jars/spark-kubernetes_2.12-$SPARK_VERSION.jar &&     mv /opt/spark-network-common_2.12-$SPARK_VERSION.jar /opt/spark-${SPARK_VERSION}/jars/spark-network-common_2.12-$SPARK_VERSION.jar &&     mv /opt/spark-examples_2.12-$SPARK_VERSION.jar /opt/spark-${SPARK_VERSION}/examples/jars/spark-examples_2.12-$SPARK_VERSION.jar &&     mv /opt/pyspark.zip /opt/spark-${SPARK_VERSION}/python/lib/pyspark.zip', 'cd /opt &&     apt-get install -y build-essential &&     wget https://github.com/protocolbuffers/protobuf/releases/download/v2.5.0/protobuf-2.5.0.tar.bz2 &&     tar jxvf protobuf-2.5.0.tar.bz2 &&     cd protobuf-2.5.0 &&     ./configure &&     make &&     make check &&     export LD_LIBRARY_PATH=/usr/local/lib &&     make install &&     protoc --version &&     cd /opt &&     git clone https://github.com/analytics-zoo/hadoop.git &&     cd hadoop &&     git checkout branch-3.2.0-ppml &&     cd hadoop-common-project/hadoop-common &&     export MAVEN_OPTS=""-Xmx2g -XX:ReservedCodeCacheSize=512m         -Dhttp.proxyHost=$HTTP_PROXY_HOST         -Dhttp.proxyPort=$HTTP_PROXY_PORT         -Dhttps.proxyHost=$HTTPS_PROXY_HOST         -Dhttps.proxyPort=$HTTPS_PROXY_PORT"" &&     /opt/apache-maven-3.6.3/bin/mvn -T 16 -DskipTests=true clean package &&     mv /opt/hadoop/hadoop-common-project/hadoop-common/target/hadoop-common-3.2.0.jar /opt/spark-${SPARK_VERSION}/jars/hadoop-common-3.2.0.jar', 'cd /opt &&     git clone https://github.com/analytics-zoo/hive.git &&     cd hive &&     git checkout branch-2.3.7-ppml &&     cd ql &&     export MAVEN_OPTS=""-Xmx2g -XX:ReservedCodeCacheSize=512m         -Dhttp.proxyHost=$HTTP_PROXY_HOST         -Dhttp.proxyPort=$HTTP_PROXY_PORT         -Dhttps.proxyHost=$HTTPS_PROXY_HOST         -Dhttps.proxyPort=$HTTPS_PROXY_PORT"" &&     /opt/apache-maven-3.6.3/bin/mvn -T 16 -DskipTests=true clean package &&     mv /opt/hive/ql/target/hive-exec-2.3.7-core.jar /opt/spark-${SPARK_VERSION}/jars/hive-exec-2.3.7-core.jar', 'apt-get update --fix-missing &&     apt-get install -y apt-utils curl wget unzip git', 'wget https://raw.githubusercontent.com/intel-analytics/analytics-zoo/bigdl-2.0/docker/hyperzoo/download-bigdl.sh &&     chmod a+x ./download-bigdl.sh', './download-bigdl.sh &&     rm bigdl*.zip', 'mkdir -p /graphene &&     mkdir -p /graphene/Runtime &&     mkdir -p /graphene/python &&     mkdir -p /graphene/Tools &&     mkdir -p /graphene/Pal/src &&     mkdir -p /graphene/meson_build_output &&     mkdir -p /ppml/trusted-big-data-ml/work &&     mkdir -p /ppml/trusted-big-data-ml/work/lib &&     mkdir -p /ppml/trusted-big-data-ml/work/keys &&     mkdir -p /ppml/trusted-big-data-ml/work/password &&     mkdir -p /ppml/trusted-big-data-ml/work/data &&     mkdir -p /ppml/trusted-big-data-ml/work/models &&     mkdir -p /ppml/trusted-big-data-ml/work/apps &&     mkdir -p /ppml/trusted-big-data-ml/work/examples/bigdl &&     mkdir -p /ppml/trusted-big-data-ml/examples/src/main &&     mkdir -p /root/.keras/datasets &&     mkdir -p /root/.zinc &&     mkdir -p /root/.m2 &&     mkdir -p /root/.kube/ &&     mkdir -p /graphene/Pal/src/host/Linux-SGX/signer', 'apt-get update --fix-missing &&     env DEBIAN_FRONTEND=noninteractive TZ=Etc/UTC apt-get install -y tzdata &&     apt-get install -y apt-utils vim curl nano wget unzip maven git tree zip &&     apt-get install -y libsm6 make build-essential &&     apt-get install -y autoconf gawk bison libcurl4-openssl-dev python3-protobuf libprotobuf-c-dev protobuf-c-compiler &&     apt-get install -y netcat net-tools', 'apt-get install -y python3-minimal &&     apt-get install -y build-essential python3 python3-setuptools python3-dev python3-pip &&     pip3 install --upgrade pip &&     pip install setuptools==58.4.0 &&     pip install --no-cache-dir numpy scipy &&     pip install --no-cache-dir --no-binary pandas -I pandas &&     pip install --no-cache-dir scikit-learn matplotlib seaborn jupyter wordcloud moviepy requests h5py opencv-python tensorflow &&     pip install --no-cache-dir torch==1.8.1 torchvision==0.9.1 -f https://download.pytorch.org/whl/torch_stable.html &&     ln -s /usr/bin/python3 /usr/bin/python &&     pip uninstall -y -q tornado &&     pip install --no-cache-dir tornado &&     pip install --no-cache-dir filelock &&     pip install --no-cache-dir tensorflow_datasets h5py==2.10.0 &&     pip install --no-cache-dir pyarrow &&     pip install --no-cache-dir ninja meson &&     pip install --no-cache-dir psutil &&     pip install --no-cache-dir dill==0.3.4 &&     python3 -m pip install toml==0.10.2 click jinja2 &&     python3 -m ipykernel.kernelspec', ""zip -u ${BIGDL_HOME}/jars/bigdl-dllib-spark_${SPARK_VERSION}-${BIGDL_VERSION}.jar ./tracker.py &&     patch /usr/local/lib/python3.8/dist-packages/dill/_dill.py ./_dill.py.patch &&     patch /usr/lib/python3.8/uuid.py ./python-uuid.patch &&     patch /usr/local/lib/python3.8/dist-packages/psutil/_pslinux.py ./python-pslinux.patch &&     wget -P /ppml/trusted-big-data-ml/work/lib https://sourceforge.net/projects/analytics-zoo/files/analytics-zoo-data/libhadoop.so &&     cp /usr/lib/x86_64-linux-gnu/libpython3.8.so /usr/lib/libpython3.8.so &&     sed -i 's/examples/\\/ppml\\/trusted-big-data-ml\\/work\\/spark-3.1.2\\/examples/' /ppml/trusted-big-data-ml/work/spark-3.1.2/examples/src/main/python/sql/basic.py &&     sed -i 's/examples/\\/ppml\\/trusted-big-data-ml\\/work\\/spark-3.1.2\\/examples/' /ppml/trusted-big-data-ml/work/spark-3.1.2/examples/src/main/python/sql/hive.py &&     sed -i 's/spark-warehouse/\\/ppml\\/trusted-big-data-ml\\/work\\/spark-warehouse/' /ppml/trusted-big-data-ml/work/spark-3.1.2/examples/src/main/python/sql/hive.py &&     chmod a+x /ppml/trusted-big-data-ml/init.sh &&     chmod a+x /ppml/trusted-big-data-ml/clean.sh &&     chmod a+x /ppml/trusted-big-data-ml/start-spark-local-train-sgx.sh &&     chmod a+x /ppml/trusted-big-data-ml/start-spark-standalone-master-sgx.sh &&     chmod a+x /ppml/trusted-big-data-ml/start-spark-standalone-worker-sgx.sh &&     chmod a+x /ppml/trusted-big-data-ml/start-spark-standalone-driver-sgx.sh &&     chmod a+x /ppml/trusted-big-data-ml/ppml-spark-submit.sh &&     chmod a+x /ppml/trusted-big-data-ml/check-status.sh &&     chmod a+x /ppml/trusted-big-data-ml/work/start-scripts/start-python-helloworld-sgx.sh &&     chmod a+x /ppml/trusted-big-data-ml/work/start-scripts/start-python-numpy-sgx.sh &&     chmod a+x /ppml/trusted-big-data-ml/work/start-scripts/start-spark-local-bigdl-sgx.sh &&     chmod a+x /ppml/trusted-big-data-ml/work/start-scripts/start-spark-local-pi-sgx.sh &&     chmod a+x /ppml/trusted-big-data-ml/work/start-scripts/start-spark-local-sql-sgx.sh &&     chmod a+x /ppml/trusted-big-data-ml/work/start-scripts/start-spark-local-wordcount-sgx.sh &&     chmod a+x /ppml/trusted-big-data-ml/work/start-scripts/start-spark-local-xgboost-regressor-sgx.sh &&     chmod a+x /ppml/trusted-big-data-ml/work/start-scripts/start-spark-local-xgboost-classifier-sgx.sh &&     chmod a+x /ppml/trusted-big-data-ml/work/start-scripts/start-spark-local-orca-data-sgx.sh &&     chmod a+x /ppml/trusted-big-data-ml/work/start-scripts/start-spark-local-orca-tf-text.sh &&     chmod a+x /ppml/trusted-big-data-ml/work/test-suites/pyspark-e2e-example.sh &&     chmod a+x /ppml/trusted-big-data-ml/work/test-suites/pyspark-simple-examples.sh &&     chmod a+x /ppml/trusted-big-data-ml/work/test-suites/pyspark-sql-api-examples.sh &&     chmod a+x /ppml/trusted-big-data-ml/work/test-suites/pyspark-sql-examples.sh &&     chmod a+x /ppml/trusted-big-data-ml/work/test-suites/start-tpch.sh &&     chmod a+x /ppml/trusted-big-data-ml/work/test-suites/spark-examples.sh &&     chmod a+x /ppml/trusted-big-data-ml/work/test-suites/spark-sql-examples.sh &&     chmod a+x /ppml/trusted-big-data-ml/work/test-suites/spark-e2e-example.sh &&     chmod a+x /ppml/trusted-big-data-ml/work/test-suites/k8s-spark-pi.sh &&     chmod a+x /ppml/trusted-big-data-ml/work/test-suites/k8s-spark-sql-examples.sh &&     chmod a+x /ppml/trusted-big-data-ml/work/test-suites/k8s-pyspark-sql-examples.sh"", 'rm $SPARK_HOME/jars/okhttp-*.jar &&     wget -P $SPARK_HOME/jars https://repo1.maven.org/maven2/com/squareup/okhttp3/okhttp/3.8.0/okhttp-3.8.0.jar &&     wget -P $SPARK_HOME/jars https://github.com/xerial/sqlite-jdbc/releases/download/3.36.0.1/sqlite-jdbc-3.36.0.1.jar &&     chmod +x /opt/entrypoint.sh &&     chmod +x /sbin/tini &&     cp /sbin/tini /usr/bin/tini']"
intel-analytics/BigDL,latest,/ppml/trusted-big-data-ml/python/docker-graphene/Dockerfile,ENV,29,"['SPARK_VERSION       ${SPARK_VERSION}', 'JAVA_HOME           /opt/jdk$JDK_VERSION', 'PATH                ${JAVA_HOME}/bin:${PATH}', 'SPARK_VERSION               ${SPARK_VERSION}', 'BIGDL_VERSION               ${BIGDL_VERSION}', 'BIGDL_HOME                  /bigdl-${BIGDL_VERSION}', 'BIGDL_VERSION                       ${BIGDL_VERSION}', 'SPARK_VERSION                       ${SPARK_VERSION}', 'SPARK_HOME                          /ppml/trusted-big-data-ml/work/spark-${SPARK_VERSION}', 'BIGDL_HOME                          /ppml/trusted-big-data-ml/work/bigdl-${BIGDL_VERSION}', 'JAVA_HOME                           /opt/jdk8', 'PATH                                /graphene/meson_build_output/bin:${JAVA_HOME}/bin:${PATH}', 'LOCAL_IP                            127.0.0.1', 'SGX_MEM_SIZE                        32G', 'SGX_LOG_LEVEL                       error', 'SPARK_MASTER_IP                     127.0.0.1', 'SPARK_MASTER_PORT                   7077', 'SPARK_MASTER_WEBUI_PORT             8080', 'SPARK_MASTER                        spark://$SPARK_MASTER_IP:$SPARK_MASTER_PORT', 'SPARK_WORKER_PORT                   8082', 'SPARK_WORKER_WEBUI_PORT             8081', 'SPARK_DRIVER_PORT                   10027', 'SPARK_DRIVER_BLOCK_MANAGER_PORT     10026', 'SPARK_DRIVER_IP                     $LOCAL_IP', 'SPARK_BLOCK_MANAGER_PORT            10025', 'TINI_VERSION                        $TINI_VERSION', 'PYTHONPATH                          /usr/lib/python3.6:/usr/lib/python3.6/lib-dynload:/usr/local/lib/python3.6/dist-packages:/usr/lib/python3/dist-packages', 'LC_ALL                              C.UTF-8', 'LANG                                C.UTF-8']"
intel-analytics/BigDL,latest,/ppml/trusted-big-data-ml/python/docker-graphene/Dockerfile,ADD,22,"['hadoop-common-shell.patch /opt/hadoop-common-shell.patch', 'spark-example-sql-e2e.jar /opt/spark-${SPARK_VERSION}/examples/jars/spark-example-sql-e2e.jar', './bash.manifest.template /ppml/trusted-big-data-ml/bash.manifest.template', './Makefile /ppml/trusted-big-data-ml/Makefile', './init.sh /ppml/trusted-big-data-ml/init.sh', './clean.sh /ppml/trusted-big-data-ml/clean.sh', './examples /ppml/trusted-big-data-ml/work/examples', './start-spark-local-train-sgx.sh /ppml/trusted-big-data-ml/start-spark-local-train-sgx.sh', './start-spark-standalone-master-sgx.sh /ppml/trusted-big-data-ml/start-spark-standalone-master-sgx.sh', './start-spark-standalone-worker-sgx.sh /ppml/trusted-big-data-ml/start-spark-standalone-worker-sgx.sh', './start-spark-standalone-driver-sgx.sh /ppml/trusted-big-data-ml/start-spark-standalone-driver-sgx.sh', './ppml-spark-submit.sh /ppml/trusted-big-data-ml/ppml-spark-submit.sh', './check-status.sh /ppml/trusted-big-data-ml/check-status.sh', './tracker.py ./tracker.py', './start-scripts /ppml/trusted-big-data-ml/work/start-scripts', './test-suites /ppml/trusted-big-data-ml/work/test-suites', './_dill.py.patch ./_dill.py.patch', './python-uuid.patch ./python-uuid.patch', './python-pslinux.patch ./python-pslinux.patch', './spark-executor-template.yaml /ppml/trusted-big-data-ml/spark-executor-template.yaml', './entrypoint.sh /opt/entrypoint.sh', 'https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini /sbin/tini']"
intel-analytics/BigDL,latest,/ppml/trusted-big-data-ml/python/docker-graphene/Dockerfile,COPY,11,"['--from=graphene /graphene/Scripts /graphene/Scripts', '--from=graphene /graphene/Runtime/ /graphene/Runtime', '--from=graphene /graphene/python /graphene/python', '--from=graphene /graphene/Pal /graphene/Pal', '--from=graphene /graphene/Pal/src/host/Linux-SGX/generated_offsets.py /graphene/python/', '--from=graphene /graphene/Tools/argv_serializer /graphene/Tools', '--from=spark /opt/jdk  /opt/jdk8', '--from=spark /opt/scala-2.11.8  /opt/scala-2.11.8', '--from=spark /opt/spark-${SPARK_VERSION} /ppml/trusted-big-data-ml/work/spark-${SPARK_VERSION}', '--from=spark /opt/spark-${SPARK_VERSION}/examples/src/main/resources /ppml/trusted-big-data-ml/examples/src/main/resources', '--from=bigdl /bigdl-${BIGDL_VERSION} ${BIGDL_HOME}']"
intel-analytics/BigDL,latest,/ppml/trusted-big-data-ml/python/docker-graphene/Dockerfile,WORKDIR,1,['/ppml/trusted-big-data-ml']
intel-analytics/BigDL,latest,/ppml/trusted-big-data-ml/python/docker-graphene/Dockerfile,ENTRYPOINT,1,"['[ ""/opt/entrypoint.sh"" ]']"
intel-analytics/BigDL,latest,/ppml/trusted-big-data-ml/scala/docker-occlum/Dockerfile,FROM,3,"['krallin/ubuntu-tini AS tini', 'ubuntu:18.04 as bigdl', 'occlum/occlum:0.26.0-ubuntu18.04 as ppml']"
intel-analytics/BigDL,latest,/ppml/trusted-big-data-ml/scala/docker-occlum/Dockerfile,ARG,14,"['SPARK_VERSION=3.1.2', 'HADOOP_VERSION=3.2.0', 'SPARK_JAR_REPO_URL', 'HTTP_PROXY_HOST', 'HTTP_PROXY_PORT', 'HTTPS_PROXY_HOST', 'HTTPS_PROXY_PORT', 'BIGDL_VERSION=0.14.0-SNAPSHOT', 'SPARK_VERSION=3.1.2', 'HADOOP_VERSION=3.2.0', 'HTTP_PROXY_HOST', 'HTTP_PROXY_PORT', 'HTTPS_PROXY_HOST', 'HTTPS_PROXY_PORT']"
intel-analytics/BigDL,latest,/ppml/trusted-big-data-ml/scala/docker-occlum/Dockerfile,ENV,10,"['HADOOP_VERSION=${HADOOP_VERSION}', 'SPARK_VERSION=${SPARK_VERSION}', 'SPARK_HOME=/opt/spark', 'HADOOP_VERSION=${HADOOP_VERSION}', 'SPARK_VERSION=${SPARK_VERSION}', 'SPARK_HOME=/opt/spark', 'BIGDL_VERSION=${BIGDL_VERSION}', 'BIGDL_HOME=/opt/bigdl-${BIGDL_VERSION}', 'JAVA_HOME=/usr/lib/jvm/java-11-openjdk-amd64', 'SGX_MEM_SIZE=20GB']"
intel-analytics/BigDL,latest,/ppml/trusted-big-data-ml/scala/docker-occlum/Dockerfile,RUN,12,"['apt-get update && DEBIAN_FRONTEND=""noninteractive"" apt-get install -y --no-install-recommends         openjdk-8-jdk build-essential wget git &&     apt-get clean &&     rm -rf /var/lib/apt/lists/*', 'cd /opt &&     wget https://archive.apache.org/dist/maven/maven-3/3.6.3/binaries/apache-maven-3.6.3-bin.tar.gz &&     tar -zxvf apache-maven-3.6.3-bin.tar.gz', ""cd /opt &&     wget https://archive.apache.org/dist/spark/spark-${SPARK_VERSION}/spark-${SPARK_VERSION}-bin-hadoop3.2.tgz &&     tar -zxvf spark-${SPARK_VERSION}-bin-hadoop3.2.tgz &&     mv spark-${SPARK_VERSION}-bin-hadoop3.2 spark &&     rm spark-${SPARK_VERSION}-bin-hadoop3.2.tgz &&     cp spark/conf/log4j.properties.template spark/conf/log4j.properties &&     echo $'\\nlog4j.logger.io.netty=ERROR' >> spark/conf/log4j.properties &&     rm spark/python/lib/pyspark.zip &&     rm spark/jars/spark-core_2.12-$SPARK_VERSION.jar &&     rm spark/jars/spark-kubernetes_2.12-$SPARK_VERSION.jar &&     rm spark/jars/spark-network-common_2.12-$SPARK_VERSION.jar &&     rm spark/jars/hadoop-common-3.2.0.jar &&     rm spark/jars/hive-exec-2.3.7-core.jar"", 'cd /opt &&     wget $SPARK_JAR_REPO_URL/spark-core_2.12-$SPARK_VERSION.jar &&     wget $SPARK_JAR_REPO_URL/spark-kubernetes_2.12-$SPARK_VERSION.jar &&     wget $SPARK_JAR_REPO_URL/spark-network-common_2.12-$SPARK_VERSION.jar &&     wget $SPARK_JAR_REPO_URL/pyspark.zip &&     mv /opt/spark-core_2.12-$SPARK_VERSION.jar  /opt/spark/jars/spark-core_2.12-$SPARK_VERSION.jar &&     mv /opt/spark-kubernetes_2.12-$SPARK_VERSION.jar /opt/spark/jars/spark-kubernetes_2.12-$SPARK_VERSION.jar &&     mv /opt/spark-network-common_2.12-$SPARK_VERSION.jar /opt/spark/jars/spark-network-common_2.12-$SPARK_VERSION.jar &&     mv /opt/pyspark.zip /opt/spark/python/lib/pyspark.zip', 'mkdir -p /opt/src', 'cd /opt/src &&     wget https://github.com/protocolbuffers/protobuf/releases/download/v2.5.0/protobuf-2.5.0.tar.bz2 &&     tar jxvf protobuf-2.5.0.tar.bz2 &&     cd protobuf-2.5.0 &&     ./configure &&     make &&     make check &&     export LD_LIBRARY_PATH=/usr/local/lib &&     make install &&     rm -f protobuf-2.5.0.tar.bz2 &&     cd /opt/src &&     git clone https://github.com/analytics-zoo/hadoop.git &&     cd hadoop &&     git checkout branch-3.2.0-ppml &&     cd hadoop-common-project/hadoop-common &&     export MAVEN_OPTS=""-Xmx2g -XX:ReservedCodeCacheSize=512m         -Dhttp.proxyHost=$HTTP_PROXY_HOST         -Dhttp.proxyPort=$HTTP_PROXY_PORT         -Dhttps.proxyHost=$HTTPS_PROXY_HOST         -Dhttps.proxyPort=$HTTPS_PROXY_PORT"" &&     /opt/apache-maven-3.6.3/bin/mvn -T 16 -DskipTests=true clean package', 'cd /opt/src &&     git clone https://github.com/analytics-zoo/hive.git &&     cd hive &&     git checkout branch-2.3.7-ppml &&     cd ql &&     export MAVEN_OPTS=""-Xmx2g -XX:ReservedCodeCacheSize=512m         -Dhttp.proxyHost=$HTTP_PROXY_HOST         -Dhttp.proxyPort=$HTTP_PROXY_PORT         -Dhttps.proxyHost=$HTTPS_PROXY_HOST         -Dhttps.proxyPort=$HTTPS_PROXY_PORT"" &&     /opt/apache-maven-3.6.3/bin/mvn -T 16 -DskipTests=true clean package &&     mv /opt/src/hive/ql/target/hive-exec-2.3.7-core.jar /opt/spark/jars/hive-exec-2.3.7-core.jar', 'wget https://sourceforge.net/projects/analytics-zoo/files/analytics-zoo-data/libhadoop.so -P /opt/ &&     cp -f /opt/src/hadoop/hadoop-common-project/hadoop-common/target/hadoop-common-${HADOOP_VERSION}.jar ${SPARK_HOME}/jars &&     rm -rf /opt/src', 'echo ""auth required pam_wheel.so use_uid"" >> /etc/pam.d/su &&     chgrp root /etc/passwd && chmod ug+rw /etc/passwd', 'apt-get update &&     DEBIAN_FRONTEND=""noninteractive"" apt-get install -y --no-install-recommends         openjdk-11-jdk &&     apt-get clean', 'cd /opt &&     wget https://raw.githubusercontent.com/intel-analytics/analytics-zoo/bigdl-2.0/docker/hyperzoo/download-bigdl.sh &&     chmod a+x ./download-bigdl.sh &&     ./download-bigdl.sh &&     rm bigdl*.zip', 'chmod a+x /opt/entrypoint.sh &&     chmod a+x /opt/run_spark_on_occlum_glibc.sh']"
intel-analytics/BigDL,latest,/ppml/trusted-big-data-ml/scala/docker-occlum/Dockerfile,COPY,4,"['--from=tini /usr/local/bin/tini /sbin/tini', '--from=bigdl /opt/spark /opt/spark', '--from=bigdl /opt/libhadoop.so /opt/libhadoop.so', './entrypoint.sh /opt/']"
intel-analytics/BigDL,latest,/ppml/trusted-big-data-ml/scala/docker-occlum/Dockerfile,ADD,1,['./run_spark_on_occlum_glibc.sh /opt/run_spark_on_occlum_glibc.sh']
intel-analytics/BigDL,latest,/ppml/trusted-big-data-ml/scala/docker-occlum/Dockerfile,ENTRYPOINT,1,"['[ ""/opt/entrypoint.sh"" ]']"
catboost/catboost,latest,/catboost/node-package/e2e_tests/catboostNodePackageE2eBase.Dockerfile,FROM,1,['node:15.14.0-alpine3.10']
catboost/catboost,latest,/catboost/node-package/e2e_tests/catboostNodePackageE2eBase.Dockerfile,RUN,3,"['apk add curl g++ libc6-compat make python3', 'ln -s /lib/libc.musl-x86_64.so.1 /lib/ld-linux-x86-64.so.2', 'npm install --global verdaccio npm-cli-adduser']"
catboost/catboost,latest,/catboost/node-package/e2e_tests/e2eTest.Dockerfile,FROM,1,['ikholopov/catboost-node-package-e2e-base:latest']
catboost/catboost,latest,/catboost/node-package/e2e_tests/e2eTest.Dockerfile,ADD,3,"['./e2e_tests/node-catboost-e2e-test-package/* /var/node-catboost-e2e-test-package/', './test_data /var/node-catboost-e2e-test-package/test_data/', '. /var/src/']"
catboost/catboost,latest,/catboost/node-package/e2e_tests/e2eTest.Dockerfile,RUN,1,['chmod +x /var/src/e2e_tests/e2e_test.sh']
catboost/catboost,latest,/catboost/node-package/e2e_tests/e2eTest.Dockerfile,ENTRYPOINT,1,['/var/src/e2e_tests/e2e_test.sh']
catboost/catboost,latest,/catboost/docker/gpu/Dockerfile,FROM,1,['nvidia/cuda:10.2-base-ubuntu18.04']
catboost/catboost,latest,/catboost/docker/gpu/Dockerfile,ENV,2,"['CATBOOST_VERSION=0.24.1', 'JUPYTER_TOKEN=""""']"
catboost/catboost,latest,/catboost/docker/gpu/Dockerfile,WORKDIR,1,['/catboost']
catboost/catboost,latest,/catboost/docker/gpu/Dockerfile,EXPOSE,1,['8888']
catboost/catboost,latest,/catboost/docker/gpu/Dockerfile,RUN,5,"[""apt-get update &&     apt-get install -y --no-install-recommends         curl wget         software-properties-common &&     add-apt-repository ppa:deadsnakes/ppa -y -u &&     apt install -y --no-install-recommends python3.8 python3-distutils &&     update-alternatives --install /usr/bin/python python /usr/bin/python3.8 1 &&     curl -k https://bootstrap.pypa.io/get-pip.py | python3.8 - &&     apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false &&     apt-get clean && apt-get autoclean && \trm -rf /usr/src/python /var/lib/apt/lists/* /tmp/* /var/lib/apt/lists/* /var/cache/apt/*.bin &&     find /var/log -iname '*.gz' -delete &&     find /var/log -iname '*.1' -delete &&     rm -rf /var/tmp/*"", 'python3.8 -m pip install catboost==$CATBOOST_VERSION hyperopt scikit-learn matplotlib seaborn plotly jupyter ipywidgets && jupyter nbextension enable --py widgetsnbextension && pip cache purge', 'echo $CATBOOST_VERSION', 'wget https://github.com/catboost/catboost/releases/download/v$CATBOOST_VERSION/catboost-linux-$CATBOOST_VERSION --tries=10 --retry-connrefused --progress=dot:giga -O catboost && chmod +x catboost', 'chmod +x /catboost/entry_point.py']"
catboost/catboost,latest,/catboost/docker/gpu/Dockerfile,COPY,2,"['docker/entry_point.py /catboost/entry_point.py', 'tutorials /catboost/tutorials']"
catboost/catboost,latest,/catboost/docker/gpu/Dockerfile,CMD,1,['/catboost/entry_point.py']
catboost/catboost,latest,/catboost/benchmarks/quality_benchmarks/install/Dockerfile,FROM,1,['ubuntu:16.04']
catboost/catboost,latest,/catboost/benchmarks/quality_benchmarks/install/Dockerfile,COPY,1,['install.sh requirements.txt /tmp/']
catboost/catboost,latest,/catboost/benchmarks/quality_benchmarks/install/Dockerfile,RUN,1,['cd /tmp/ && /bin/bash install.sh']
colmap/colmap,latest,/docker/Dockerfile,FROM,1,['nvidia/cuda:10.2-devel-ubuntu18.04']
colmap/colmap,latest,/docker/Dockerfile,ENV,1,['DEBIAN_FRONTEND=noninteractive']
colmap/colmap,latest,/docker/Dockerfile,RUN,6,"['apt-get update && apt-get install -y     git     cmake     vim     build-essential     libboost-program-options-dev     libboost-filesystem-dev     libboost-graph-dev     libboost-system-dev     libboost-test-dev     libeigen3-dev     libsuitesparse-dev     libfreeimage-dev     libgoogle-glog-dev     libgflags-dev     libglew-dev     qtbase5-dev     libqt5opengl5-dev     libcgal-dev     libcgal-qt5-dev', 'apt-get -y install     libatlas-base-dev     libsuitesparse-dev', 'git clone https://github.com/ceres-solver/ceres-solver.git --branch 1.14.0', 'cd ceres-solver && \tmkdir build && \tcd build && \tcmake .. -DBUILD_TESTING=OFF -DBUILD_EXAMPLES=OFF && \tmake -j4 && \tmake install', 'git clone https://github.com/colmap/colmap.git #--branch 3.6', 'cd colmap && \tgit checkout dev && \tmkdir build && \tcd build && \tcmake .. && \tmake -j4 && \tmake install']"
ufoym/deepo,latest,/docker/Dockerfile.pytorch-py36-cu113,FROM,1,['nvidia/cuda:11.3.1-cudnn8-devel-ubuntu18.04']
ufoym/deepo,latest,/docker/Dockerfile.pytorch-py36-cu113,ENV,1,['LANG C.UTF-8']
ufoym/deepo,latest,/docker/Dockerfile.pytorch-py36-cu113,RUN,1,"['APT_INSTALL=""apt-get install -y --no-install-recommends"" &&     PIP_INSTALL=""python -m pip --no-cache-dir install --upgrade"" &&     GIT_CLONE=""git clone --depth 10"" && ']"
ufoym/deepo,latest,/docker/Dockerfile.pytorch-py36-cu113,RM,1,['-rf /var/lib/apt/lists/*            /etc/apt/sources.list.d/cuda.list            /etc/apt/sources.list.d/nvidia-ml.list && ']
ufoym/deepo,latest,/docker/Dockerfile.pytorch-py36-cu113,APT-GET,1,['update && ']
ufoym/deepo,latest,/docker/Dockerfile.pytorch-py36-cu113,DEBIAN_FRONTEND=NONINTERACTIVE,2,"['$APT_INSTALL         build-essential         apt-utils         ca-certificates         wget         git         vim         libssl-dev         curl         unzip         unrar         cmake         && ', '$APT_INSTALL         software-properties-common         &&     add-apt-repository ppa:deadsnakes/ppa &&     apt-get update &&     DEBIAN_FRONTEND=noninteractive $APT_INSTALL         python3.6         python3.6-dev         python3-distutils-extra         &&     wget -O ~/get-pip.py         https://bootstrap.pypa.io/get-pip.py &&     python3.6 ~/get-pip.py &&     ln -s /usr/bin/python3.6 /usr/local/bin/python3 &&     ln -s /usr/bin/python3.6 /usr/local/bin/python &&     $PIP_INSTALL         setuptools         &&     $PIP_INSTALL         numpy         scipy         pandas         cloudpickle         scikit-image>=0.14.2         scikit-learn         matplotlib         Cython         tqdm         && ']"
ufoym/deepo,latest,/docker/Dockerfile.pytorch-py36-cu113,$PIP_INSTALL,1,['future         numpy         protobuf         enum34         pyyaml         typing         &&     $PIP_INSTALL         --pre torch torchvision torchaudio -f         https://download.pytorch.org/whl/nightly/cu113/torch_nightly.html         && ']
ufoym/deepo,latest,/docker/Dockerfile.pytorch-py36-cu113,LDCONFIG,1,['&&     apt-get clean &&     apt-get autoremove &&     rm -rf /var/lib/apt/lists/* /tmp/* ~/*']
ufoym/deepo,latest,/docker/Dockerfile.mxnet-py36-cpu,FROM,1,['ubuntu:18.04']
ufoym/deepo,latest,/docker/Dockerfile.mxnet-py36-cpu,ENV,1,['LANG C.UTF-8']
ufoym/deepo,latest,/docker/Dockerfile.mxnet-py36-cpu,RUN,1,"['APT_INSTALL=""apt-get install -y --no-install-recommends"" &&     PIP_INSTALL=""python -m pip --no-cache-dir install --upgrade"" &&     GIT_CLONE=""git clone --depth 10"" && ']"
ufoym/deepo,latest,/docker/Dockerfile.mxnet-py36-cpu,RM,1,['-rf /var/lib/apt/lists/*            /etc/apt/sources.list.d/cuda.list            /etc/apt/sources.list.d/nvidia-ml.list && ']
ufoym/deepo,latest,/docker/Dockerfile.mxnet-py36-cpu,APT-GET,1,['update && ']
ufoym/deepo,latest,/docker/Dockerfile.mxnet-py36-cpu,DEBIAN_FRONTEND=NONINTERACTIVE,3,"['$APT_INSTALL         build-essential         apt-utils         ca-certificates         wget         git         vim         libssl-dev         curl         unzip         unrar         cmake         && ', '$APT_INSTALL         software-properties-common         &&     add-apt-repository ppa:deadsnakes/ppa &&     apt-get update &&     DEBIAN_FRONTEND=noninteractive $APT_INSTALL         python3.6         python3.6-dev         python3-distutils-extra         &&     wget -O ~/get-pip.py         https://bootstrap.pypa.io/get-pip.py &&     python3.6 ~/get-pip.py &&     ln -s /usr/bin/python3.6 /usr/local/bin/python3 &&     ln -s /usr/bin/python3.6 /usr/local/bin/python &&     $PIP_INSTALL         setuptools         &&     $PIP_INSTALL         numpy         scipy         pandas         cloudpickle         scikit-image>=0.14.2         scikit-learn         matplotlib         Cython         tqdm         && ', '$APT_INSTALL         libatlas-base-dev         graphviz         && ']"
ufoym/deepo,latest,/docker/Dockerfile.mxnet-py36-cpu,$PIP_INSTALL,1,['mxnet         graphviz         && ']
ufoym/deepo,latest,/docker/Dockerfile.mxnet-py36-cpu,LDCONFIG,1,['&&     apt-get clean &&     apt-get autoremove &&     rm -rf /var/lib/apt/lists/* /tmp/* ~/*']
ufoym/deepo,latest,/docker/Dockerfile.tensorflow-py36-cpu,FROM,1,['ubuntu:18.04']
ufoym/deepo,latest,/docker/Dockerfile.tensorflow-py36-cpu,ENV,1,['LANG C.UTF-8']
ufoym/deepo,latest,/docker/Dockerfile.tensorflow-py36-cpu,RUN,1,"['APT_INSTALL=""apt-get install -y --no-install-recommends"" &&     PIP_INSTALL=""python -m pip --no-cache-dir install --upgrade"" &&     GIT_CLONE=""git clone --depth 10"" && ']"
ufoym/deepo,latest,/docker/Dockerfile.tensorflow-py36-cpu,RM,1,['-rf /var/lib/apt/lists/*            /etc/apt/sources.list.d/cuda.list            /etc/apt/sources.list.d/nvidia-ml.list && ']
ufoym/deepo,latest,/docker/Dockerfile.tensorflow-py36-cpu,APT-GET,1,['update && ']
ufoym/deepo,latest,/docker/Dockerfile.tensorflow-py36-cpu,DEBIAN_FRONTEND=NONINTERACTIVE,2,"['$APT_INSTALL         build-essential         apt-utils         ca-certificates         wget         git         vim         libssl-dev         curl         unzip         unrar         cmake         && ', '$APT_INSTALL         software-properties-common         &&     add-apt-repository ppa:deadsnakes/ppa &&     apt-get update &&     DEBIAN_FRONTEND=noninteractive $APT_INSTALL         python3.6         python3.6-dev         python3-distutils-extra         &&     wget -O ~/get-pip.py         https://bootstrap.pypa.io/get-pip.py &&     python3.6 ~/get-pip.py &&     ln -s /usr/bin/python3.6 /usr/local/bin/python3 &&     ln -s /usr/bin/python3.6 /usr/local/bin/python &&     $PIP_INSTALL         setuptools         &&     $PIP_INSTALL         numpy         scipy         pandas         cloudpickle         scikit-image>=0.14.2         scikit-learn         matplotlib         Cython         tqdm         && ']"
ufoym/deepo,latest,/docker/Dockerfile.tensorflow-py36-cpu,$PIP_INSTALL,1,['tensorflow         && ']
ufoym/deepo,latest,/docker/Dockerfile.tensorflow-py36-cpu,LDCONFIG,1,['&&     apt-get clean &&     apt-get autoremove &&     rm -rf /var/lib/apt/lists/* /tmp/* ~/*']
ufoym/deepo,latest,/docker/Dockerfile.tensorflow-py36-cpu,EXPOSE,1,['6006']
ufoym/deepo,latest,/docker/Dockerfile.sonnet-py36-cu113,FROM,1,['nvidia/cuda:11.3.1-cudnn8-devel-ubuntu18.04']
ufoym/deepo,latest,/docker/Dockerfile.sonnet-py36-cu113,ENV,1,['LANG C.UTF-8']
ufoym/deepo,latest,/docker/Dockerfile.sonnet-py36-cu113,RUN,1,"['APT_INSTALL=""apt-get install -y --no-install-recommends"" &&     PIP_INSTALL=""python -m pip --no-cache-dir install --upgrade"" &&     GIT_CLONE=""git clone --depth 10"" && ']"
ufoym/deepo,latest,/docker/Dockerfile.sonnet-py36-cu113,RM,1,['-rf /var/lib/apt/lists/*            /etc/apt/sources.list.d/cuda.list            /etc/apt/sources.list.d/nvidia-ml.list && ']
ufoym/deepo,latest,/docker/Dockerfile.sonnet-py36-cu113,APT-GET,1,['update && ']
ufoym/deepo,latest,/docker/Dockerfile.sonnet-py36-cu113,DEBIAN_FRONTEND=NONINTERACTIVE,2,"['$APT_INSTALL         build-essential         apt-utils         ca-certificates         wget         git         vim         libssl-dev         curl         unzip         unrar         cmake         && ', '$APT_INSTALL         software-properties-common         &&     add-apt-repository ppa:deadsnakes/ppa &&     apt-get update &&     DEBIAN_FRONTEND=noninteractive $APT_INSTALL         python3.6         python3.6-dev         python3-distutils-extra         &&     wget -O ~/get-pip.py         https://bootstrap.pypa.io/get-pip.py &&     python3.6 ~/get-pip.py &&     ln -s /usr/bin/python3.6 /usr/local/bin/python3 &&     ln -s /usr/bin/python3.6 /usr/local/bin/python &&     $PIP_INSTALL         setuptools         &&     $PIP_INSTALL         numpy         scipy         pandas         cloudpickle         scikit-image>=0.14.2         scikit-learn         matplotlib         Cython         tqdm         && ']"
ufoym/deepo,latest,/docker/Dockerfile.sonnet-py36-cu113,$PIP_INSTALL,2,"['tensorflow-gpu         && ', 'tensorflow_probability         ""dm-sonnet>=2.0.0b0"" --pre         && ']"
ufoym/deepo,latest,/docker/Dockerfile.sonnet-py36-cu113,LDCONFIG,1,['&&     apt-get clean &&     apt-get autoremove &&     rm -rf /var/lib/apt/lists/* /tmp/* ~/*']
ufoym/deepo,latest,/docker/Dockerfile.sonnet-py36-cu113,EXPOSE,1,['6006']
ufoym/deepo,latest,/docker/Dockerfile.sonnet-py36-cpu,FROM,1,['ubuntu:18.04']
ufoym/deepo,latest,/docker/Dockerfile.sonnet-py36-cpu,ENV,1,['LANG C.UTF-8']
ufoym/deepo,latest,/docker/Dockerfile.sonnet-py36-cpu,RUN,1,"['APT_INSTALL=""apt-get install -y --no-install-recommends"" &&     PIP_INSTALL=""python -m pip --no-cache-dir install --upgrade"" &&     GIT_CLONE=""git clone --depth 10"" && ']"
ufoym/deepo,latest,/docker/Dockerfile.sonnet-py36-cpu,RM,1,['-rf /var/lib/apt/lists/*            /etc/apt/sources.list.d/cuda.list            /etc/apt/sources.list.d/nvidia-ml.list && ']
ufoym/deepo,latest,/docker/Dockerfile.sonnet-py36-cpu,APT-GET,1,['update && ']
ufoym/deepo,latest,/docker/Dockerfile.sonnet-py36-cpu,DEBIAN_FRONTEND=NONINTERACTIVE,2,"['$APT_INSTALL         build-essential         apt-utils         ca-certificates         wget         git         vim         libssl-dev         curl         unzip         unrar         cmake         && ', '$APT_INSTALL         software-properties-common         &&     add-apt-repository ppa:deadsnakes/ppa &&     apt-get update &&     DEBIAN_FRONTEND=noninteractive $APT_INSTALL         python3.6         python3.6-dev         python3-distutils-extra         &&     wget -O ~/get-pip.py         https://bootstrap.pypa.io/get-pip.py &&     python3.6 ~/get-pip.py &&     ln -s /usr/bin/python3.6 /usr/local/bin/python3 &&     ln -s /usr/bin/python3.6 /usr/local/bin/python &&     $PIP_INSTALL         setuptools         &&     $PIP_INSTALL         numpy         scipy         pandas         cloudpickle         scikit-image>=0.14.2         scikit-learn         matplotlib         Cython         tqdm         && ']"
ufoym/deepo,latest,/docker/Dockerfile.sonnet-py36-cpu,$PIP_INSTALL,2,"['tensorflow         && ', 'tensorflow_probability         ""dm-sonnet>=2.0.0b0"" --pre         && ']"
ufoym/deepo,latest,/docker/Dockerfile.sonnet-py36-cpu,LDCONFIG,1,['&&     apt-get clean &&     apt-get autoremove &&     rm -rf /var/lib/apt/lists/* /tmp/* ~/*']
ufoym/deepo,latest,/docker/Dockerfile.sonnet-py36-cpu,EXPOSE,1,['6006']
ufoym/deepo,latest,/docker/Dockerfile.tensorflow-py36-cu113,FROM,1,['nvidia/cuda:11.3.1-cudnn8-devel-ubuntu18.04']
ufoym/deepo,latest,/docker/Dockerfile.tensorflow-py36-cu113,ENV,1,['LANG C.UTF-8']
ufoym/deepo,latest,/docker/Dockerfile.tensorflow-py36-cu113,RUN,1,"['APT_INSTALL=""apt-get install -y --no-install-recommends"" &&     PIP_INSTALL=""python -m pip --no-cache-dir install --upgrade"" &&     GIT_CLONE=""git clone --depth 10"" && ']"
ufoym/deepo,latest,/docker/Dockerfile.tensorflow-py36-cu113,RM,1,['-rf /var/lib/apt/lists/*            /etc/apt/sources.list.d/cuda.list            /etc/apt/sources.list.d/nvidia-ml.list && ']
ufoym/deepo,latest,/docker/Dockerfile.tensorflow-py36-cu113,APT-GET,1,['update && ']
ufoym/deepo,latest,/docker/Dockerfile.tensorflow-py36-cu113,DEBIAN_FRONTEND=NONINTERACTIVE,2,"['$APT_INSTALL         build-essential         apt-utils         ca-certificates         wget         git         vim         libssl-dev         curl         unzip         unrar         cmake         && ', '$APT_INSTALL         software-properties-common         &&     add-apt-repository ppa:deadsnakes/ppa &&     apt-get update &&     DEBIAN_FRONTEND=noninteractive $APT_INSTALL         python3.6         python3.6-dev         python3-distutils-extra         &&     wget -O ~/get-pip.py         https://bootstrap.pypa.io/get-pip.py &&     python3.6 ~/get-pip.py &&     ln -s /usr/bin/python3.6 /usr/local/bin/python3 &&     ln -s /usr/bin/python3.6 /usr/local/bin/python &&     $PIP_INSTALL         setuptools         &&     $PIP_INSTALL         numpy         scipy         pandas         cloudpickle         scikit-image>=0.14.2         scikit-learn         matplotlib         Cython         tqdm         && ']"
ufoym/deepo,latest,/docker/Dockerfile.tensorflow-py36-cu113,$PIP_INSTALL,1,['tensorflow-gpu         && ']
ufoym/deepo,latest,/docker/Dockerfile.tensorflow-py36-cu113,LDCONFIG,1,['&&     apt-get clean &&     apt-get autoremove &&     rm -rf /var/lib/apt/lists/* /tmp/* ~/*']
ufoym/deepo,latest,/docker/Dockerfile.tensorflow-py36-cu113,EXPOSE,1,['6006']
ufoym/deepo,latest,/docker/Dockerfile.all-py36-cpu,FROM,1,['ubuntu:18.04']
ufoym/deepo,latest,/docker/Dockerfile.all-py36-cpu,ENV,1,['LANG C.UTF-8']
ufoym/deepo,latest,/docker/Dockerfile.all-py36-cpu,RUN,1,"['APT_INSTALL=""apt-get install -y --no-install-recommends"" &&     PIP_INSTALL=""python -m pip --no-cache-dir install --upgrade"" &&     GIT_CLONE=""git clone --depth 10"" && ']"
ufoym/deepo,latest,/docker/Dockerfile.all-py36-cpu,RM,1,['-rf /var/lib/apt/lists/*            /etc/apt/sources.list.d/cuda.list            /etc/apt/sources.list.d/nvidia-ml.list && ']
ufoym/deepo,latest,/docker/Dockerfile.all-py36-cpu,APT-GET,2,"['update && ', 'update &&     DEBIAN_FRONTEND=noninteractive $APT_INSTALL         caffe-cpu         && ']"
ufoym/deepo,latest,/docker/Dockerfile.all-py36-cpu,DEBIAN_FRONTEND=NONINTERACTIVE,9,"['$APT_INSTALL         build-essential         apt-utils         ca-certificates         wget         git         vim         libssl-dev         curl         unzip         unrar         cmake         && ', '$APT_INSTALL         software-properties-common         &&     add-apt-repository ppa:deadsnakes/ppa &&     apt-get update &&     DEBIAN_FRONTEND=noninteractive $APT_INSTALL         python3.6         python3.6-dev         python3-distutils-extra         &&     wget -O ~/get-pip.py         https://bootstrap.pypa.io/get-pip.py &&     python3.6 ~/get-pip.py &&     ln -s /usr/bin/python3.6 /usr/local/bin/python3 &&     ln -s /usr/bin/python3.6 /usr/local/bin/python &&     $PIP_INSTALL         setuptools         &&     $PIP_INSTALL         numpy         scipy         pandas         cloudpickle         scikit-image>=0.14.2         scikit-learn         matplotlib         Cython         tqdm         && ', '$APT_INSTALL         sudo         && ', '$APT_INSTALL         libboost-all-dev         && ', '$APT_INSTALL         libatlas-base-dev         graphviz         && ', '$APT_INSTALL         protobuf-compiler         libprotoc-dev         && ', '$APT_INSTALL         libblas-dev         && ', '$APT_INSTALL         libatlas-base-dev         libgflags-dev         libgoogle-glog-dev         libhdf5-serial-dev         libleveldb-dev         liblmdb-dev         libprotobuf-dev         libsnappy-dev         protobuf-compiler         && ', '$APT_INSTALL         openmpi-bin         libpng-dev         libjpeg-dev         libtiff-dev         && ']"
ufoym/deepo,latest,/docker/Dockerfile.all-py36-cpu,$GIT_CLONE,4,"['https://github.com/AlexeyAB/darknet ~/darknet &&     cd ~/darknet &&     sed -i \'s/GPU=0/GPU=0/g\' ~/darknet/Makefile &&     sed -i \'s/CUDNN=0/CUDNN=0/g\' ~/darknet/Makefile &&     make -j""$(nproc)"" &&     cp ~/darknet/include/* /usr/local/include &&     cp ~/darknet/darknet /usr/local/bin && ', ""https://github.com/nagadomi/distro.git ~/torch --recursive &&     cd ~/torch &&     bash install-deps &&     sed -i 's/${THIS_DIR}\\/install/\\/usr\\/local/g' ./install.sh &&     ./install.sh && "", 'https://github.com/Lasagne/Lasagne ~/lasagne &&     cd ~/lasagne &&     $PIP_INSTALL         . && ', '--branch 4.5.4 https://github.com/opencv/opencv ~/opencv &&     mkdir -p ~/opencv/build && cd ~/opencv/build &&     cmake -D CMAKE_BUILD_TYPE=RELEASE           -D CMAKE_INSTALL_PREFIX=/usr/local           -D WITH_IPP=OFF           -D WITH_CUDA=OFF           -D WITH_OPENCL=OFF           -D BUILD_TESTS=OFF           -D BUILD_PERF_TESTS=OFF           -D BUILD_DOCS=OFF           -D BUILD_EXAMPLES=OFF           .. &&     make -j""$(nproc)"" install &&     ln -s /usr/local/include/opencv4/opencv2 /usr/local/include/opencv2 && ']"
ufoym/deepo,latest,/docker/Dockerfile.all-py36-cpu,$PIP_INSTALL,11,"['chainer         && ', 'jupyter         && ', 'mxnet         graphviz         && ', 'numpy         protobuf         onnx         onnxruntime         && ', 'paddlepaddle         && ', 'future         numpy         protobuf         enum34         pyyaml         typing         &&     $PIP_INSTALL         --pre torch torchvision torchaudio -f         https://download.pytorch.org/whl/nightly/cpu/torch_nightly.html         && ', 'tensorflow         && ', 'https://github.com/Theano/Theano/archive/master.zip         && ', 'jupyterlab         && ', 'tensorflow_probability         ""dm-sonnet>=2.0.0b0"" --pre         && ', 'cntk         && ']"
ufoym/deepo,latest,/docker/Dockerfile.all-py36-cpu,LN,1,['-s /usr/lib/x86_64-linux-gnu/libmpi_cxx.so.20 /usr/lib/x86_64-linux-gnu/libmpi_cxx.so.1 &&     ln -s /usr/lib/x86_64-linux-gnu/libmpi.so.20.10.1 /usr/lib/x86_64-linux-gnu/libmpi.so.12 && ']
ufoym/deepo,latest,/docker/Dockerfile.all-py36-cpu,WGET,2,"['--no-verbose -O - https://github.com/01org/mkl-dnn/releases/download/v0.14/mklml_lnx_2018.0.3.20180406.tgz | tar -xzf - &&     cp mklml*/* /usr/local -r && ', '--no-verbose -O - https://github.com/01org/mkl-dnn/archive/v0.14.tar.gz | tar -xzf - &&     cd *-0.14 && mkdir build && cd build &&     ln -s /usr/local external &&     cmake -D CMAKE_BUILD_TYPE=RELEASE           -D CMAKE_INSTALL_PREFIX=/usr/local           .. &&     make -j""$(nproc)"" install && ']"
ufoym/deepo,latest,/docker/Dockerfile.all-py36-cpu,LDCONFIG,1,['&&     apt-get clean &&     apt-get autoremove &&     rm -rf /var/lib/apt/lists/* /tmp/* ~/*']
ufoym/deepo,latest,/docker/Dockerfile.all-py36-cpu,EXPOSE,1,['8888 6006']
ufoym/deepo,latest,/docker/Dockerfile.darknet-cpu,FROM,1,['ubuntu:18.04']
ufoym/deepo,latest,/docker/Dockerfile.darknet-cpu,ENV,1,['LANG C.UTF-8']
ufoym/deepo,latest,/docker/Dockerfile.darknet-cpu,RUN,1,"['APT_INSTALL=""apt-get install -y --no-install-recommends"" &&     PIP_INSTALL=""python -m pip --no-cache-dir install --upgrade"" &&     GIT_CLONE=""git clone --depth 10"" && ']"
ufoym/deepo,latest,/docker/Dockerfile.darknet-cpu,RM,1,['-rf /var/lib/apt/lists/*            /etc/apt/sources.list.d/cuda.list            /etc/apt/sources.list.d/nvidia-ml.list && ']
ufoym/deepo,latest,/docker/Dockerfile.darknet-cpu,APT-GET,1,['update && ']
ufoym/deepo,latest,/docker/Dockerfile.darknet-cpu,DEBIAN_FRONTEND=NONINTERACTIVE,1,['$APT_INSTALL         build-essential         apt-utils         ca-certificates         wget         git         vim         libssl-dev         curl         unzip         unrar         cmake         && ']
ufoym/deepo,latest,/docker/Dockerfile.darknet-cpu,$GIT_CLONE,1,"['https://github.com/AlexeyAB/darknet ~/darknet &&     cd ~/darknet &&     sed -i \'s/GPU=0/GPU=0/g\' ~/darknet/Makefile &&     sed -i \'s/CUDNN=0/CUDNN=0/g\' ~/darknet/Makefile &&     make -j""$(nproc)"" &&     cp ~/darknet/include/* /usr/local/include &&     cp ~/darknet/darknet /usr/local/bin && ']"
ufoym/deepo,latest,/docker/Dockerfile.darknet-cpu,LDCONFIG,1,['&&     apt-get clean &&     apt-get autoremove &&     rm -rf /var/lib/apt/lists/* /tmp/* ~/*']
ufoym/deepo,latest,/docker/Dockerfile.all-py36-cu113,FROM,1,['nvidia/cuda:11.3.1-cudnn8-devel-ubuntu18.04']
ufoym/deepo,latest,/docker/Dockerfile.all-py36-cu113,ENV,1,['LANG C.UTF-8']
ufoym/deepo,latest,/docker/Dockerfile.all-py36-cu113,RUN,1,"['APT_INSTALL=""apt-get install -y --no-install-recommends"" &&     PIP_INSTALL=""python -m pip --no-cache-dir install --upgrade"" &&     GIT_CLONE=""git clone --depth 10"" && ']"
ufoym/deepo,latest,/docker/Dockerfile.all-py36-cu113,RM,1,['-rf /var/lib/apt/lists/*            /etc/apt/sources.list.d/cuda.list            /etc/apt/sources.list.d/nvidia-ml.list && ']
ufoym/deepo,latest,/docker/Dockerfile.all-py36-cu113,APT-GET,2,"['update && ', 'update &&     DEBIAN_FRONTEND=noninteractive $APT_INSTALL         caffe-cuda         && ']"
ufoym/deepo,latest,/docker/Dockerfile.all-py36-cu113,DEBIAN_FRONTEND=NONINTERACTIVE,8,"['$APT_INSTALL         build-essential         apt-utils         ca-certificates         wget         git         vim         libssl-dev         curl         unzip         unrar         cmake         && ', '$APT_INSTALL         software-properties-common         &&     add-apt-repository ppa:deadsnakes/ppa &&     apt-get update &&     DEBIAN_FRONTEND=noninteractive $APT_INSTALL         python3.6         python3.6-dev         python3-distutils-extra         &&     wget -O ~/get-pip.py         https://bootstrap.pypa.io/get-pip.py &&     python3.6 ~/get-pip.py &&     ln -s /usr/bin/python3.6 /usr/local/bin/python3 &&     ln -s /usr/bin/python3.6 /usr/local/bin/python &&     $PIP_INSTALL         setuptools         &&     $PIP_INSTALL         numpy         scipy         pandas         cloudpickle         scikit-image>=0.14.2         scikit-learn         matplotlib         Cython         tqdm         && ', '$APT_INSTALL         libboost-all-dev         && ', '$APT_INSTALL         libatlas-base-dev         graphviz         && ', '$APT_INSTALL         protobuf-compiler         libprotoc-dev         && ', '$APT_INSTALL         libblas-dev         && ', '$APT_INSTALL         libatlas-base-dev         libgflags-dev         libgoogle-glog-dev         libhdf5-serial-dev         libleveldb-dev         liblmdb-dev         libprotobuf-dev         libsnappy-dev         protobuf-compiler         && ', '$APT_INSTALL         openmpi-bin         libpng-dev         libjpeg-dev         libtiff-dev         && ']"
ufoym/deepo,latest,/docker/Dockerfile.all-py36-cu113,$GIT_CLONE,3,"['https://github.com/AlexeyAB/darknet ~/darknet &&     cd ~/darknet &&     sed -i \'s/GPU=0/GPU=1/g\' ~/darknet/Makefile &&     sed -i \'s/CUDNN=0/CUDNN=1/g\' ~/darknet/Makefile &&     make -j""$(nproc)"" &&     cp ~/darknet/include/* /usr/local/include &&     cp ~/darknet/darknet /usr/local/bin && ', 'https://github.com/Lasagne/Lasagne ~/lasagne &&     cd ~/lasagne &&     $PIP_INSTALL         . && ', '--branch 4.5.4 https://github.com/opencv/opencv ~/opencv &&     mkdir -p ~/opencv/build && cd ~/opencv/build &&     cmake -D CMAKE_BUILD_TYPE=RELEASE           -D CMAKE_INSTALL_PREFIX=/usr/local           -D WITH_IPP=OFF           -D WITH_CUDA=OFF           -D WITH_OPENCL=OFF           -D BUILD_TESTS=OFF           -D BUILD_PERF_TESTS=OFF           -D BUILD_DOCS=OFF           -D BUILD_EXAMPLES=OFF           .. &&     make -j""$(nproc)"" install &&     ln -s /usr/local/include/opencv4/opencv2 /usr/local/include/opencv2 && ']"
ufoym/deepo,latest,/docker/Dockerfile.all-py36-cu113,$PIP_INSTALL,11,"['cupy         chainer         && ', 'jupyter         && ', 'mxnet-cu112         graphviz         && ', 'numpy         protobuf         onnx         onnxruntime-gpu         && ', 'paddlepaddle-gpu         && ', 'future         numpy         protobuf         enum34         pyyaml         typing         &&     $PIP_INSTALL         --pre torch torchvision torchaudio -f         https://download.pytorch.org/whl/nightly/cu113/torch_nightly.html         && ', 'tensorflow-gpu         && ', 'https://github.com/Theano/Theano/archive/master.zip         && ', 'jupyterlab         && ', 'tensorflow_probability         ""dm-sonnet>=2.0.0b0"" --pre         && ', 'cntk-gpu         && ']"
ufoym/deepo,latest,/docker/Dockerfile.all-py36-cu113,WGET,3,"['-qO- https://github.com/Theano/libgpuarray/archive/v0.7.6.tar.gz | tar xz -C ~ &&     cd ~/libgpuarray* && mkdir -p build && cd build &&     cmake -D CMAKE_BUILD_TYPE=RELEASE           -D CMAKE_INSTALL_PREFIX=/usr/local           .. &&     make -j""$(nproc)"" install &&     cd ~/libgpuarray* &&     python setup.py build &&     python setup.py install && ', '--no-verbose -O - https://github.com/01org/mkl-dnn/releases/download/v0.14/mklml_lnx_2018.0.3.20180406.tgz | tar -xzf - &&     cp mklml*/* /usr/local -r && ', '--no-verbose -O - https://github.com/01org/mkl-dnn/archive/v0.14.tar.gz | tar -xzf - &&     cd *-0.14 && mkdir build && cd build &&     ln -s /usr/local external &&     cmake -D CMAKE_BUILD_TYPE=RELEASE           -D CMAKE_INSTALL_PREFIX=/usr/local           .. &&     make -j""$(nproc)"" install && ']"
ufoym/deepo,latest,/docker/Dockerfile.all-py36-cu113,PRINTF,1,"[""'[global]\\nfloatX = float32\\ndevice = cuda0\\n\\n[dnn]\\ninclude_path = /usr/local/cuda/targets/x86_64-linux/include\\n' > ~/.theanorc && ""]"
ufoym/deepo,latest,/docker/Dockerfile.all-py36-cu113,LN,1,['-s /usr/lib/x86_64-linux-gnu/libmpi_cxx.so.20 /usr/lib/x86_64-linux-gnu/libmpi_cxx.so.1 &&     ln -s /usr/lib/x86_64-linux-gnu/libmpi.so.20.10.1 /usr/lib/x86_64-linux-gnu/libmpi.so.12 && ']
ufoym/deepo,latest,/docker/Dockerfile.all-py36-cu113,LDCONFIG,1,['&&     apt-get clean &&     apt-get autoremove &&     rm -rf /var/lib/apt/lists/* /tmp/* ~/*']
ufoym/deepo,latest,/docker/Dockerfile.all-py36-cu113,EXPOSE,1,['8888 6006']
ufoym/deepo,latest,/docker/Dockerfile.cntk-py36-cu113,FROM,1,['nvidia/cuda:11.3.1-cudnn8-devel-ubuntu18.04']
ufoym/deepo,latest,/docker/Dockerfile.cntk-py36-cu113,ENV,1,['LANG C.UTF-8']
ufoym/deepo,latest,/docker/Dockerfile.cntk-py36-cu113,RUN,1,"['APT_INSTALL=""apt-get install -y --no-install-recommends"" &&     PIP_INSTALL=""python -m pip --no-cache-dir install --upgrade"" &&     GIT_CLONE=""git clone --depth 10"" && ']"
ufoym/deepo,latest,/docker/Dockerfile.cntk-py36-cu113,RM,1,['-rf /var/lib/apt/lists/*            /etc/apt/sources.list.d/cuda.list            /etc/apt/sources.list.d/nvidia-ml.list && ']
ufoym/deepo,latest,/docker/Dockerfile.cntk-py36-cu113,APT-GET,1,['update && ']
ufoym/deepo,latest,/docker/Dockerfile.cntk-py36-cu113,DEBIAN_FRONTEND=NONINTERACTIVE,5,"['$APT_INSTALL         build-essential         apt-utils         ca-certificates         wget         git         vim         libssl-dev         curl         unzip         unrar         cmake         && ', '$APT_INSTALL         software-properties-common         &&     add-apt-repository ppa:deadsnakes/ppa &&     apt-get update &&     DEBIAN_FRONTEND=noninteractive $APT_INSTALL         python3.6         python3.6-dev         python3-distutils-extra         &&     wget -O ~/get-pip.py         https://bootstrap.pypa.io/get-pip.py &&     python3.6 ~/get-pip.py &&     ln -s /usr/bin/python3.6 /usr/local/bin/python3 &&     ln -s /usr/bin/python3.6 /usr/local/bin/python &&     $PIP_INSTALL         setuptools         &&     $PIP_INSTALL         numpy         scipy         pandas         cloudpickle         scikit-image>=0.14.2         scikit-learn         matplotlib         Cython         tqdm         && ', '$APT_INSTALL         libboost-all-dev         && ', '$APT_INSTALL         libatlas-base-dev         libgflags-dev         libgoogle-glog-dev         libhdf5-serial-dev         libleveldb-dev         liblmdb-dev         libprotobuf-dev         libsnappy-dev         protobuf-compiler         && ', '$APT_INSTALL         openmpi-bin         libpng-dev         libjpeg-dev         libtiff-dev         && ']"
ufoym/deepo,latest,/docker/Dockerfile.cntk-py36-cu113,$GIT_CLONE,1,"['--branch 4.5.4 https://github.com/opencv/opencv ~/opencv &&     mkdir -p ~/opencv/build && cd ~/opencv/build &&     cmake -D CMAKE_BUILD_TYPE=RELEASE           -D CMAKE_INSTALL_PREFIX=/usr/local           -D WITH_IPP=OFF           -D WITH_CUDA=OFF           -D WITH_OPENCL=OFF           -D BUILD_TESTS=OFF           -D BUILD_PERF_TESTS=OFF           -D BUILD_DOCS=OFF           -D BUILD_EXAMPLES=OFF           .. &&     make -j""$(nproc)"" install &&     ln -s /usr/local/include/opencv4/opencv2 /usr/local/include/opencv2 && ']"
ufoym/deepo,latest,/docker/Dockerfile.cntk-py36-cu113,LN,1,['-s /usr/lib/x86_64-linux-gnu/libmpi_cxx.so.20 /usr/lib/x86_64-linux-gnu/libmpi_cxx.so.1 &&     ln -s /usr/lib/x86_64-linux-gnu/libmpi.so.20.10.1 /usr/lib/x86_64-linux-gnu/libmpi.so.12 && ']
ufoym/deepo,latest,/docker/Dockerfile.cntk-py36-cu113,WGET,2,"['--no-verbose -O - https://github.com/01org/mkl-dnn/releases/download/v0.14/mklml_lnx_2018.0.3.20180406.tgz | tar -xzf - &&     cp mklml*/* /usr/local -r && ', '--no-verbose -O - https://github.com/01org/mkl-dnn/archive/v0.14.tar.gz | tar -xzf - &&     cd *-0.14 && mkdir build && cd build &&     ln -s /usr/local external &&     cmake -D CMAKE_BUILD_TYPE=RELEASE           -D CMAKE_INSTALL_PREFIX=/usr/local           .. &&     make -j""$(nproc)"" install && ']"
ufoym/deepo,latest,/docker/Dockerfile.cntk-py36-cu113,$PIP_INSTALL,1,['cntk-gpu         && ']
ufoym/deepo,latest,/docker/Dockerfile.cntk-py36-cu113,LDCONFIG,1,['&&     apt-get clean &&     apt-get autoremove &&     rm -rf /var/lib/apt/lists/* /tmp/* ~/*']
ufoym/deepo,latest,/docker/Dockerfile.lasagne-py36-cpu,FROM,1,['ubuntu:18.04']
ufoym/deepo,latest,/docker/Dockerfile.lasagne-py36-cpu,ENV,1,['LANG C.UTF-8']
ufoym/deepo,latest,/docker/Dockerfile.lasagne-py36-cpu,RUN,1,"['APT_INSTALL=""apt-get install -y --no-install-recommends"" &&     PIP_INSTALL=""python -m pip --no-cache-dir install --upgrade"" &&     GIT_CLONE=""git clone --depth 10"" && ']"
ufoym/deepo,latest,/docker/Dockerfile.lasagne-py36-cpu,RM,1,['-rf /var/lib/apt/lists/*            /etc/apt/sources.list.d/cuda.list            /etc/apt/sources.list.d/nvidia-ml.list && ']
ufoym/deepo,latest,/docker/Dockerfile.lasagne-py36-cpu,APT-GET,1,['update && ']
ufoym/deepo,latest,/docker/Dockerfile.lasagne-py36-cpu,DEBIAN_FRONTEND=NONINTERACTIVE,3,"['$APT_INSTALL         build-essential         apt-utils         ca-certificates         wget         git         vim         libssl-dev         curl         unzip         unrar         cmake         && ', '$APT_INSTALL         software-properties-common         &&     add-apt-repository ppa:deadsnakes/ppa &&     apt-get update &&     DEBIAN_FRONTEND=noninteractive $APT_INSTALL         python3.6         python3.6-dev         python3-distutils-extra         &&     wget -O ~/get-pip.py         https://bootstrap.pypa.io/get-pip.py &&     python3.6 ~/get-pip.py &&     ln -s /usr/bin/python3.6 /usr/local/bin/python3 &&     ln -s /usr/bin/python3.6 /usr/local/bin/python &&     $PIP_INSTALL         setuptools         &&     $PIP_INSTALL         numpy         scipy         pandas         cloudpickle         scikit-image>=0.14.2         scikit-learn         matplotlib         Cython         tqdm         && ', '$APT_INSTALL         libblas-dev         && ']"
ufoym/deepo,latest,/docker/Dockerfile.lasagne-py36-cpu,$PIP_INSTALL,1,['https://github.com/Theano/Theano/archive/master.zip         && ']
ufoym/deepo,latest,/docker/Dockerfile.lasagne-py36-cpu,$GIT_CLONE,1,['https://github.com/Lasagne/Lasagne ~/lasagne &&     cd ~/lasagne &&     $PIP_INSTALL         . && ']
ufoym/deepo,latest,/docker/Dockerfile.lasagne-py36-cpu,LDCONFIG,1,['&&     apt-get clean &&     apt-get autoremove &&     rm -rf /var/lib/apt/lists/* /tmp/* ~/*']
ufoym/deepo,latest,/docker/Dockerfile.darknet-cu113,FROM,1,['nvidia/cuda:11.3.1-cudnn8-devel-ubuntu18.04']
ufoym/deepo,latest,/docker/Dockerfile.darknet-cu113,ENV,1,['LANG C.UTF-8']
ufoym/deepo,latest,/docker/Dockerfile.darknet-cu113,RUN,1,"['APT_INSTALL=""apt-get install -y --no-install-recommends"" &&     PIP_INSTALL=""python -m pip --no-cache-dir install --upgrade"" &&     GIT_CLONE=""git clone --depth 10"" && ']"
ufoym/deepo,latest,/docker/Dockerfile.darknet-cu113,RM,1,['-rf /var/lib/apt/lists/*            /etc/apt/sources.list.d/cuda.list            /etc/apt/sources.list.d/nvidia-ml.list && ']
ufoym/deepo,latest,/docker/Dockerfile.darknet-cu113,APT-GET,1,['update && ']
ufoym/deepo,latest,/docker/Dockerfile.darknet-cu113,DEBIAN_FRONTEND=NONINTERACTIVE,1,['$APT_INSTALL         build-essential         apt-utils         ca-certificates         wget         git         vim         libssl-dev         curl         unzip         unrar         cmake         && ']
ufoym/deepo,latest,/docker/Dockerfile.darknet-cu113,$GIT_CLONE,1,"['https://github.com/AlexeyAB/darknet ~/darknet &&     cd ~/darknet &&     sed -i \'s/GPU=0/GPU=1/g\' ~/darknet/Makefile &&     sed -i \'s/CUDNN=0/CUDNN=1/g\' ~/darknet/Makefile &&     make -j""$(nproc)"" &&     cp ~/darknet/include/* /usr/local/include &&     cp ~/darknet/darknet /usr/local/bin && ']"
ufoym/deepo,latest,/docker/Dockerfile.darknet-cu113,LDCONFIG,1,['&&     apt-get clean &&     apt-get autoremove &&     rm -rf /var/lib/apt/lists/* /tmp/* ~/*']
ufoym/deepo,latest,/docker/Dockerfile.torch-cu102,FROM,1,['nvidia/cuda:10.2-cudnn7-devel-ubuntu18.04']
ufoym/deepo,latest,/docker/Dockerfile.torch-cu102,ENV,1,['LANG C.UTF-8']
ufoym/deepo,latest,/docker/Dockerfile.torch-cu102,RUN,1,"['APT_INSTALL=""apt-get install -y --no-install-recommends"" &&     PIP_INSTALL=""python -m pip --no-cache-dir install --upgrade"" &&     GIT_CLONE=""git clone --depth 10"" && ']"
ufoym/deepo,latest,/docker/Dockerfile.torch-cu102,RM,1,['-rf /var/lib/apt/lists/*            /etc/apt/sources.list.d/cuda.list            /etc/apt/sources.list.d/nvidia-ml.list && ']
ufoym/deepo,latest,/docker/Dockerfile.torch-cu102,APT-GET,1,['update && ']
ufoym/deepo,latest,/docker/Dockerfile.torch-cu102,DEBIAN_FRONTEND=NONINTERACTIVE,2,"['$APT_INSTALL         build-essential         apt-utils         ca-certificates         wget         git         vim         libssl-dev         curl         unzip         unrar         cmake         && ', '$APT_INSTALL         sudo         && ']"
ufoym/deepo,latest,/docker/Dockerfile.torch-cu102,$GIT_CLONE,1,"[""https://github.com/nagadomi/distro.git ~/torch --recursive &&     cd ~/torch &&     bash install-deps &&     sed -i 's/${THIS_DIR}\\/install/\\/usr\\/local/g' ./install.sh &&     ./install.sh && ""]"
ufoym/deepo,latest,/docker/Dockerfile.torch-cu102,LDCONFIG,1,['&&     apt-get clean &&     apt-get autoremove &&     rm -rf /var/lib/apt/lists/* /tmp/* ~/*']
ufoym/deepo,latest,/docker/Dockerfile.keras-py36-cu113,FROM,1,['nvidia/cuda:11.3.1-cudnn8-devel-ubuntu18.04']
ufoym/deepo,latest,/docker/Dockerfile.keras-py36-cu113,ENV,1,['LANG C.UTF-8']
ufoym/deepo,latest,/docker/Dockerfile.keras-py36-cu113,RUN,1,"['APT_INSTALL=""apt-get install -y --no-install-recommends"" &&     PIP_INSTALL=""python -m pip --no-cache-dir install --upgrade"" &&     GIT_CLONE=""git clone --depth 10"" && ']"
ufoym/deepo,latest,/docker/Dockerfile.keras-py36-cu113,RM,1,['-rf /var/lib/apt/lists/*            /etc/apt/sources.list.d/cuda.list            /etc/apt/sources.list.d/nvidia-ml.list && ']
ufoym/deepo,latest,/docker/Dockerfile.keras-py36-cu113,APT-GET,1,['update && ']
ufoym/deepo,latest,/docker/Dockerfile.keras-py36-cu113,DEBIAN_FRONTEND=NONINTERACTIVE,2,"['$APT_INSTALL         build-essential         apt-utils         ca-certificates         wget         git         vim         libssl-dev         curl         unzip         unrar         cmake         && ', '$APT_INSTALL         software-properties-common         &&     add-apt-repository ppa:deadsnakes/ppa &&     apt-get update &&     DEBIAN_FRONTEND=noninteractive $APT_INSTALL         python3.6         python3.6-dev         python3-distutils-extra         &&     wget -O ~/get-pip.py         https://bootstrap.pypa.io/get-pip.py &&     python3.6 ~/get-pip.py &&     ln -s /usr/bin/python3.6 /usr/local/bin/python3 &&     ln -s /usr/bin/python3.6 /usr/local/bin/python &&     $PIP_INSTALL         setuptools         &&     $PIP_INSTALL         numpy         scipy         pandas         cloudpickle         scikit-image>=0.14.2         scikit-learn         matplotlib         Cython         tqdm         && ']"
ufoym/deepo,latest,/docker/Dockerfile.keras-py36-cu113,$PIP_INSTALL,1,['tensorflow-gpu         && ']
ufoym/deepo,latest,/docker/Dockerfile.keras-py36-cu113,LDCONFIG,1,['&&     apt-get clean &&     apt-get autoremove &&     rm -rf /var/lib/apt/lists/* /tmp/* ~/*']
ufoym/deepo,latest,/docker/Dockerfile.keras-py36-cu113,EXPOSE,1,['6006']
ufoym/deepo,latest,/docker/Dockerfile.chainer-py36-cu113,FROM,1,['nvidia/cuda:11.3.1-cudnn8-devel-ubuntu18.04']
ufoym/deepo,latest,/docker/Dockerfile.chainer-py36-cu113,ENV,1,['LANG C.UTF-8']
ufoym/deepo,latest,/docker/Dockerfile.chainer-py36-cu113,RUN,1,"['APT_INSTALL=""apt-get install -y --no-install-recommends"" &&     PIP_INSTALL=""python -m pip --no-cache-dir install --upgrade"" &&     GIT_CLONE=""git clone --depth 10"" && ']"
ufoym/deepo,latest,/docker/Dockerfile.chainer-py36-cu113,RM,1,['-rf /var/lib/apt/lists/*            /etc/apt/sources.list.d/cuda.list            /etc/apt/sources.list.d/nvidia-ml.list && ']
ufoym/deepo,latest,/docker/Dockerfile.chainer-py36-cu113,APT-GET,1,['update && ']
ufoym/deepo,latest,/docker/Dockerfile.chainer-py36-cu113,DEBIAN_FRONTEND=NONINTERACTIVE,2,"['$APT_INSTALL         build-essential         apt-utils         ca-certificates         wget         git         vim         libssl-dev         curl         unzip         unrar         cmake         && ', '$APT_INSTALL         software-properties-common         &&     add-apt-repository ppa:deadsnakes/ppa &&     apt-get update &&     DEBIAN_FRONTEND=noninteractive $APT_INSTALL         python3.6         python3.6-dev         python3-distutils-extra         &&     wget -O ~/get-pip.py         https://bootstrap.pypa.io/get-pip.py &&     python3.6 ~/get-pip.py &&     ln -s /usr/bin/python3.6 /usr/local/bin/python3 &&     ln -s /usr/bin/python3.6 /usr/local/bin/python &&     $PIP_INSTALL         setuptools         &&     $PIP_INSTALL         numpy         scipy         pandas         cloudpickle         scikit-image>=0.14.2         scikit-learn         matplotlib         Cython         tqdm         && ']"
ufoym/deepo,latest,/docker/Dockerfile.chainer-py36-cu113,$PIP_INSTALL,1,['cupy         chainer         && ']
ufoym/deepo,latest,/docker/Dockerfile.chainer-py36-cu113,LDCONFIG,1,['&&     apt-get clean &&     apt-get autoremove &&     rm -rf /var/lib/apt/lists/* /tmp/* ~/*']
ufoym/deepo,latest,/docker/Dockerfile.keras-py36-cpu,FROM,1,['ubuntu:18.04']
ufoym/deepo,latest,/docker/Dockerfile.keras-py36-cpu,ENV,1,['LANG C.UTF-8']
ufoym/deepo,latest,/docker/Dockerfile.keras-py36-cpu,RUN,1,"['APT_INSTALL=""apt-get install -y --no-install-recommends"" &&     PIP_INSTALL=""python -m pip --no-cache-dir install --upgrade"" &&     GIT_CLONE=""git clone --depth 10"" && ']"
ufoym/deepo,latest,/docker/Dockerfile.keras-py36-cpu,RM,1,['-rf /var/lib/apt/lists/*            /etc/apt/sources.list.d/cuda.list            /etc/apt/sources.list.d/nvidia-ml.list && ']
ufoym/deepo,latest,/docker/Dockerfile.keras-py36-cpu,APT-GET,1,['update && ']
ufoym/deepo,latest,/docker/Dockerfile.keras-py36-cpu,DEBIAN_FRONTEND=NONINTERACTIVE,2,"['$APT_INSTALL         build-essential         apt-utils         ca-certificates         wget         git         vim         libssl-dev         curl         unzip         unrar         cmake         && ', '$APT_INSTALL         software-properties-common         &&     add-apt-repository ppa:deadsnakes/ppa &&     apt-get update &&     DEBIAN_FRONTEND=noninteractive $APT_INSTALL         python3.6         python3.6-dev         python3-distutils-extra         &&     wget -O ~/get-pip.py         https://bootstrap.pypa.io/get-pip.py &&     python3.6 ~/get-pip.py &&     ln -s /usr/bin/python3.6 /usr/local/bin/python3 &&     ln -s /usr/bin/python3.6 /usr/local/bin/python &&     $PIP_INSTALL         setuptools         &&     $PIP_INSTALL         numpy         scipy         pandas         cloudpickle         scikit-image>=0.14.2         scikit-learn         matplotlib         Cython         tqdm         && ']"
ufoym/deepo,latest,/docker/Dockerfile.keras-py36-cpu,$PIP_INSTALL,1,['tensorflow         && ']
ufoym/deepo,latest,/docker/Dockerfile.keras-py36-cpu,LDCONFIG,1,['&&     apt-get clean &&     apt-get autoremove &&     rm -rf /var/lib/apt/lists/* /tmp/* ~/*']
ufoym/deepo,latest,/docker/Dockerfile.keras-py36-cpu,EXPOSE,1,['6006']
ufoym/deepo,latest,/docker/Dockerfile.theano-py36-cpu,FROM,1,['ubuntu:18.04']
ufoym/deepo,latest,/docker/Dockerfile.theano-py36-cpu,ENV,1,['LANG C.UTF-8']
ufoym/deepo,latest,/docker/Dockerfile.theano-py36-cpu,RUN,1,"['APT_INSTALL=""apt-get install -y --no-install-recommends"" &&     PIP_INSTALL=""python -m pip --no-cache-dir install --upgrade"" &&     GIT_CLONE=""git clone --depth 10"" && ']"
ufoym/deepo,latest,/docker/Dockerfile.theano-py36-cpu,RM,1,['-rf /var/lib/apt/lists/*            /etc/apt/sources.list.d/cuda.list            /etc/apt/sources.list.d/nvidia-ml.list && ']
ufoym/deepo,latest,/docker/Dockerfile.theano-py36-cpu,APT-GET,1,['update && ']
ufoym/deepo,latest,/docker/Dockerfile.theano-py36-cpu,DEBIAN_FRONTEND=NONINTERACTIVE,3,"['$APT_INSTALL         build-essential         apt-utils         ca-certificates         wget         git         vim         libssl-dev         curl         unzip         unrar         cmake         && ', '$APT_INSTALL         software-properties-common         &&     add-apt-repository ppa:deadsnakes/ppa &&     apt-get update &&     DEBIAN_FRONTEND=noninteractive $APT_INSTALL         python3.6         python3.6-dev         python3-distutils-extra         &&     wget -O ~/get-pip.py         https://bootstrap.pypa.io/get-pip.py &&     python3.6 ~/get-pip.py &&     ln -s /usr/bin/python3.6 /usr/local/bin/python3 &&     ln -s /usr/bin/python3.6 /usr/local/bin/python &&     $PIP_INSTALL         setuptools         &&     $PIP_INSTALL         numpy         scipy         pandas         cloudpickle         scikit-image>=0.14.2         scikit-learn         matplotlib         Cython         tqdm         && ', '$APT_INSTALL         libblas-dev         && ']"
ufoym/deepo,latest,/docker/Dockerfile.theano-py36-cpu,$PIP_INSTALL,1,['https://github.com/Theano/Theano/archive/master.zip         && ']
ufoym/deepo,latest,/docker/Dockerfile.theano-py36-cpu,LDCONFIG,1,['&&     apt-get clean &&     apt-get autoremove &&     rm -rf /var/lib/apt/lists/* /tmp/* ~/*']
ufoym/deepo,latest,/docker/Dockerfile.chainer-py36-cpu,FROM,1,['ubuntu:18.04']
ufoym/deepo,latest,/docker/Dockerfile.chainer-py36-cpu,ENV,1,['LANG C.UTF-8']
ufoym/deepo,latest,/docker/Dockerfile.chainer-py36-cpu,RUN,1,"['APT_INSTALL=""apt-get install -y --no-install-recommends"" &&     PIP_INSTALL=""python -m pip --no-cache-dir install --upgrade"" &&     GIT_CLONE=""git clone --depth 10"" && ']"
ufoym/deepo,latest,/docker/Dockerfile.chainer-py36-cpu,RM,1,['-rf /var/lib/apt/lists/*            /etc/apt/sources.list.d/cuda.list            /etc/apt/sources.list.d/nvidia-ml.list && ']
ufoym/deepo,latest,/docker/Dockerfile.chainer-py36-cpu,APT-GET,1,['update && ']
ufoym/deepo,latest,/docker/Dockerfile.chainer-py36-cpu,DEBIAN_FRONTEND=NONINTERACTIVE,2,"['$APT_INSTALL         build-essential         apt-utils         ca-certificates         wget         git         vim         libssl-dev         curl         unzip         unrar         cmake         && ', '$APT_INSTALL         software-properties-common         &&     add-apt-repository ppa:deadsnakes/ppa &&     apt-get update &&     DEBIAN_FRONTEND=noninteractive $APT_INSTALL         python3.6         python3.6-dev         python3-distutils-extra         &&     wget -O ~/get-pip.py         https://bootstrap.pypa.io/get-pip.py &&     python3.6 ~/get-pip.py &&     ln -s /usr/bin/python3.6 /usr/local/bin/python3 &&     ln -s /usr/bin/python3.6 /usr/local/bin/python &&     $PIP_INSTALL         setuptools         &&     $PIP_INSTALL         numpy         scipy         pandas         cloudpickle         scikit-image>=0.14.2         scikit-learn         matplotlib         Cython         tqdm         && ']"
ufoym/deepo,latest,/docker/Dockerfile.chainer-py36-cpu,$PIP_INSTALL,1,['chainer         && ']
ufoym/deepo,latest,/docker/Dockerfile.chainer-py36-cpu,LDCONFIG,1,['&&     apt-get clean &&     apt-get autoremove &&     rm -rf /var/lib/apt/lists/* /tmp/* ~/*']
ufoym/deepo,latest,/docker/Dockerfile.torch-cpu,FROM,1,['ubuntu:18.04']
ufoym/deepo,latest,/docker/Dockerfile.torch-cpu,ENV,1,['LANG C.UTF-8']
ufoym/deepo,latest,/docker/Dockerfile.torch-cpu,RUN,1,"['APT_INSTALL=""apt-get install -y --no-install-recommends"" &&     PIP_INSTALL=""python -m pip --no-cache-dir install --upgrade"" &&     GIT_CLONE=""git clone --depth 10"" && ']"
ufoym/deepo,latest,/docker/Dockerfile.torch-cpu,RM,1,['-rf /var/lib/apt/lists/*            /etc/apt/sources.list.d/cuda.list            /etc/apt/sources.list.d/nvidia-ml.list && ']
ufoym/deepo,latest,/docker/Dockerfile.torch-cpu,APT-GET,1,['update && ']
ufoym/deepo,latest,/docker/Dockerfile.torch-cpu,DEBIAN_FRONTEND=NONINTERACTIVE,2,"['$APT_INSTALL         build-essential         apt-utils         ca-certificates         wget         git         vim         libssl-dev         curl         unzip         unrar         cmake         && ', '$APT_INSTALL         sudo         && ']"
ufoym/deepo,latest,/docker/Dockerfile.torch-cpu,$GIT_CLONE,1,"[""https://github.com/nagadomi/distro.git ~/torch --recursive &&     cd ~/torch &&     bash install-deps &&     sed -i 's/${THIS_DIR}\\/install/\\/usr\\/local/g' ./install.sh &&     ./install.sh && ""]"
ufoym/deepo,latest,/docker/Dockerfile.torch-cpu,LDCONFIG,1,['&&     apt-get clean &&     apt-get autoremove &&     rm -rf /var/lib/apt/lists/* /tmp/* ~/*']
ufoym/deepo,latest,/docker/Dockerfile.cntk-py36-cpu,FROM,1,['ubuntu:18.04']
ufoym/deepo,latest,/docker/Dockerfile.cntk-py36-cpu,ENV,1,['LANG C.UTF-8']
ufoym/deepo,latest,/docker/Dockerfile.cntk-py36-cpu,RUN,1,"['APT_INSTALL=""apt-get install -y --no-install-recommends"" &&     PIP_INSTALL=""python -m pip --no-cache-dir install --upgrade"" &&     GIT_CLONE=""git clone --depth 10"" && ']"
ufoym/deepo,latest,/docker/Dockerfile.cntk-py36-cpu,RM,1,['-rf /var/lib/apt/lists/*            /etc/apt/sources.list.d/cuda.list            /etc/apt/sources.list.d/nvidia-ml.list && ']
ufoym/deepo,latest,/docker/Dockerfile.cntk-py36-cpu,APT-GET,1,['update && ']
ufoym/deepo,latest,/docker/Dockerfile.cntk-py36-cpu,DEBIAN_FRONTEND=NONINTERACTIVE,5,"['$APT_INSTALL         build-essential         apt-utils         ca-certificates         wget         git         vim         libssl-dev         curl         unzip         unrar         cmake         && ', '$APT_INSTALL         software-properties-common         &&     add-apt-repository ppa:deadsnakes/ppa &&     apt-get update &&     DEBIAN_FRONTEND=noninteractive $APT_INSTALL         python3.6         python3.6-dev         python3-distutils-extra         &&     wget -O ~/get-pip.py         https://bootstrap.pypa.io/get-pip.py &&     python3.6 ~/get-pip.py &&     ln -s /usr/bin/python3.6 /usr/local/bin/python3 &&     ln -s /usr/bin/python3.6 /usr/local/bin/python &&     $PIP_INSTALL         setuptools         &&     $PIP_INSTALL         numpy         scipy         pandas         cloudpickle         scikit-image>=0.14.2         scikit-learn         matplotlib         Cython         tqdm         && ', '$APT_INSTALL         libboost-all-dev         && ', '$APT_INSTALL         libatlas-base-dev         libgflags-dev         libgoogle-glog-dev         libhdf5-serial-dev         libleveldb-dev         liblmdb-dev         libprotobuf-dev         libsnappy-dev         protobuf-compiler         && ', '$APT_INSTALL         openmpi-bin         libpng-dev         libjpeg-dev         libtiff-dev         && ']"
ufoym/deepo,latest,/docker/Dockerfile.cntk-py36-cpu,$GIT_CLONE,1,"['--branch 4.5.4 https://github.com/opencv/opencv ~/opencv &&     mkdir -p ~/opencv/build && cd ~/opencv/build &&     cmake -D CMAKE_BUILD_TYPE=RELEASE           -D CMAKE_INSTALL_PREFIX=/usr/local           -D WITH_IPP=OFF           -D WITH_CUDA=OFF           -D WITH_OPENCL=OFF           -D BUILD_TESTS=OFF           -D BUILD_PERF_TESTS=OFF           -D BUILD_DOCS=OFF           -D BUILD_EXAMPLES=OFF           .. &&     make -j""$(nproc)"" install &&     ln -s /usr/local/include/opencv4/opencv2 /usr/local/include/opencv2 && ']"
ufoym/deepo,latest,/docker/Dockerfile.cntk-py36-cpu,LN,1,['-s /usr/lib/x86_64-linux-gnu/libmpi_cxx.so.20 /usr/lib/x86_64-linux-gnu/libmpi_cxx.so.1 &&     ln -s /usr/lib/x86_64-linux-gnu/libmpi.so.20.10.1 /usr/lib/x86_64-linux-gnu/libmpi.so.12 && ']
ufoym/deepo,latest,/docker/Dockerfile.cntk-py36-cpu,WGET,2,"['--no-verbose -O - https://github.com/01org/mkl-dnn/releases/download/v0.14/mklml_lnx_2018.0.3.20180406.tgz | tar -xzf - &&     cp mklml*/* /usr/local -r && ', '--no-verbose -O - https://github.com/01org/mkl-dnn/archive/v0.14.tar.gz | tar -xzf - &&     cd *-0.14 && mkdir build && cd build &&     ln -s /usr/local external &&     cmake -D CMAKE_BUILD_TYPE=RELEASE           -D CMAKE_INSTALL_PREFIX=/usr/local           .. &&     make -j""$(nproc)"" install && ']"
ufoym/deepo,latest,/docker/Dockerfile.cntk-py36-cpu,$PIP_INSTALL,1,['cntk         && ']
ufoym/deepo,latest,/docker/Dockerfile.cntk-py36-cpu,LDCONFIG,1,['&&     apt-get clean &&     apt-get autoremove &&     rm -rf /var/lib/apt/lists/* /tmp/* ~/*']
ufoym/deepo,latest,/docker/Dockerfile.lasagne-py36-cu113,FROM,1,['nvidia/cuda:11.3.1-cudnn8-devel-ubuntu18.04']
ufoym/deepo,latest,/docker/Dockerfile.lasagne-py36-cu113,ENV,1,['LANG C.UTF-8']
ufoym/deepo,latest,/docker/Dockerfile.lasagne-py36-cu113,RUN,1,"['APT_INSTALL=""apt-get install -y --no-install-recommends"" &&     PIP_INSTALL=""python -m pip --no-cache-dir install --upgrade"" &&     GIT_CLONE=""git clone --depth 10"" && ']"
ufoym/deepo,latest,/docker/Dockerfile.lasagne-py36-cu113,RM,1,['-rf /var/lib/apt/lists/*            /etc/apt/sources.list.d/cuda.list            /etc/apt/sources.list.d/nvidia-ml.list && ']
ufoym/deepo,latest,/docker/Dockerfile.lasagne-py36-cu113,APT-GET,1,['update && ']
ufoym/deepo,latest,/docker/Dockerfile.lasagne-py36-cu113,DEBIAN_FRONTEND=NONINTERACTIVE,3,"['$APT_INSTALL         build-essential         apt-utils         ca-certificates         wget         git         vim         libssl-dev         curl         unzip         unrar         cmake         && ', '$APT_INSTALL         software-properties-common         &&     add-apt-repository ppa:deadsnakes/ppa &&     apt-get update &&     DEBIAN_FRONTEND=noninteractive $APT_INSTALL         python3.6         python3.6-dev         python3-distutils-extra         &&     wget -O ~/get-pip.py         https://bootstrap.pypa.io/get-pip.py &&     python3.6 ~/get-pip.py &&     ln -s /usr/bin/python3.6 /usr/local/bin/python3 &&     ln -s /usr/bin/python3.6 /usr/local/bin/python &&     $PIP_INSTALL         setuptools         &&     $PIP_INSTALL         numpy         scipy         pandas         cloudpickle         scikit-image>=0.14.2         scikit-learn         matplotlib         Cython         tqdm         && ', '$APT_INSTALL         libblas-dev         && ']"
ufoym/deepo,latest,/docker/Dockerfile.lasagne-py36-cu113,WGET,1,"['-qO- https://github.com/Theano/libgpuarray/archive/v0.7.6.tar.gz | tar xz -C ~ &&     cd ~/libgpuarray* && mkdir -p build && cd build &&     cmake -D CMAKE_BUILD_TYPE=RELEASE           -D CMAKE_INSTALL_PREFIX=/usr/local           .. &&     make -j""$(nproc)"" install &&     cd ~/libgpuarray* &&     python setup.py build &&     python setup.py install && ']"
ufoym/deepo,latest,/docker/Dockerfile.lasagne-py36-cu113,PRINTF,1,"[""'[global]\\nfloatX = float32\\ndevice = cuda0\\n\\n[dnn]\\ninclude_path = /usr/local/cuda/targets/x86_64-linux/include\\n' > ~/.theanorc && ""]"
ufoym/deepo,latest,/docker/Dockerfile.lasagne-py36-cu113,$PIP_INSTALL,1,['https://github.com/Theano/Theano/archive/master.zip         && ']
ufoym/deepo,latest,/docker/Dockerfile.lasagne-py36-cu113,$GIT_CLONE,1,['https://github.com/Lasagne/Lasagne ~/lasagne &&     cd ~/lasagne &&     $PIP_INSTALL         . && ']
ufoym/deepo,latest,/docker/Dockerfile.lasagne-py36-cu113,LDCONFIG,1,['&&     apt-get clean &&     apt-get autoremove &&     rm -rf /var/lib/apt/lists/* /tmp/* ~/*']
ufoym/deepo,latest,/docker/Dockerfile.caffe-py36-cu113,FROM,1,['nvidia/cuda:11.3.1-cudnn8-devel-ubuntu18.04']
ufoym/deepo,latest,/docker/Dockerfile.caffe-py36-cu113,ENV,1,['LANG C.UTF-8']
ufoym/deepo,latest,/docker/Dockerfile.caffe-py36-cu113,RUN,1,"['APT_INSTALL=""apt-get install -y --no-install-recommends"" &&     PIP_INSTALL=""python -m pip --no-cache-dir install --upgrade"" &&     GIT_CLONE=""git clone --depth 10"" && ']"
ufoym/deepo,latest,/docker/Dockerfile.caffe-py36-cu113,RM,1,['-rf /var/lib/apt/lists/*            /etc/apt/sources.list.d/cuda.list            /etc/apt/sources.list.d/nvidia-ml.list && ']
ufoym/deepo,latest,/docker/Dockerfile.caffe-py36-cu113,APT-GET,2,"['update && ', 'update &&     DEBIAN_FRONTEND=noninteractive $APT_INSTALL         caffe-cuda         && ']"
ufoym/deepo,latest,/docker/Dockerfile.caffe-py36-cu113,DEBIAN_FRONTEND=NONINTERACTIVE,4,"['$APT_INSTALL         build-essential         apt-utils         ca-certificates         wget         git         vim         libssl-dev         curl         unzip         unrar         cmake         && ', '$APT_INSTALL         software-properties-common         &&     add-apt-repository ppa:deadsnakes/ppa &&     apt-get update &&     DEBIAN_FRONTEND=noninteractive $APT_INSTALL         python3.6         python3.6-dev         python3-distutils-extra         &&     wget -O ~/get-pip.py         https://bootstrap.pypa.io/get-pip.py &&     python3.6 ~/get-pip.py &&     ln -s /usr/bin/python3.6 /usr/local/bin/python3 &&     ln -s /usr/bin/python3.6 /usr/local/bin/python &&     $PIP_INSTALL         setuptools         &&     $PIP_INSTALL         numpy         scipy         pandas         cloudpickle         scikit-image>=0.14.2         scikit-learn         matplotlib         Cython         tqdm         && ', '$APT_INSTALL         libboost-all-dev         && ', '$APT_INSTALL         libatlas-base-dev         libgflags-dev         libgoogle-glog-dev         libhdf5-serial-dev         libleveldb-dev         liblmdb-dev         libprotobuf-dev         libsnappy-dev         protobuf-compiler         && ']"
ufoym/deepo,latest,/docker/Dockerfile.caffe-py36-cu113,$GIT_CLONE,1,"['--branch 4.5.4 https://github.com/opencv/opencv ~/opencv &&     mkdir -p ~/opencv/build && cd ~/opencv/build &&     cmake -D CMAKE_BUILD_TYPE=RELEASE           -D CMAKE_INSTALL_PREFIX=/usr/local           -D WITH_IPP=OFF           -D WITH_CUDA=OFF           -D WITH_OPENCL=OFF           -D BUILD_TESTS=OFF           -D BUILD_PERF_TESTS=OFF           -D BUILD_DOCS=OFF           -D BUILD_EXAMPLES=OFF           .. &&     make -j""$(nproc)"" install &&     ln -s /usr/local/include/opencv4/opencv2 /usr/local/include/opencv2 && ']"
ufoym/deepo,latest,/docker/Dockerfile.caffe-py36-cu113,LDCONFIG,1,['&&     apt-get clean &&     apt-get autoremove &&     rm -rf /var/lib/apt/lists/* /tmp/* ~/*']
ufoym/deepo,latest,/docker/Dockerfile.paddle-py36-cpu,FROM,1,['ubuntu:18.04']
ufoym/deepo,latest,/docker/Dockerfile.paddle-py36-cpu,ENV,1,['LANG C.UTF-8']
ufoym/deepo,latest,/docker/Dockerfile.paddle-py36-cpu,RUN,1,"['APT_INSTALL=""apt-get install -y --no-install-recommends"" &&     PIP_INSTALL=""python -m pip --no-cache-dir install --upgrade"" &&     GIT_CLONE=""git clone --depth 10"" && ']"
ufoym/deepo,latest,/docker/Dockerfile.paddle-py36-cpu,RM,1,['-rf /var/lib/apt/lists/*            /etc/apt/sources.list.d/cuda.list            /etc/apt/sources.list.d/nvidia-ml.list && ']
ufoym/deepo,latest,/docker/Dockerfile.paddle-py36-cpu,APT-GET,1,['update && ']
ufoym/deepo,latest,/docker/Dockerfile.paddle-py36-cpu,DEBIAN_FRONTEND=NONINTERACTIVE,2,"['$APT_INSTALL         build-essential         apt-utils         ca-certificates         wget         git         vim         libssl-dev         curl         unzip         unrar         cmake         && ', '$APT_INSTALL         software-properties-common         &&     add-apt-repository ppa:deadsnakes/ppa &&     apt-get update &&     DEBIAN_FRONTEND=noninteractive $APT_INSTALL         python3.6         python3.6-dev         python3-distutils-extra         &&     wget -O ~/get-pip.py         https://bootstrap.pypa.io/get-pip.py &&     python3.6 ~/get-pip.py &&     ln -s /usr/bin/python3.6 /usr/local/bin/python3 &&     ln -s /usr/bin/python3.6 /usr/local/bin/python &&     $PIP_INSTALL         setuptools         &&     $PIP_INSTALL         numpy         scipy         pandas         cloudpickle         scikit-image>=0.14.2         scikit-learn         matplotlib         Cython         tqdm         && ']"
ufoym/deepo,latest,/docker/Dockerfile.paddle-py36-cpu,$PIP_INSTALL,1,['paddlepaddle         && ']
ufoym/deepo,latest,/docker/Dockerfile.paddle-py36-cpu,LDCONFIG,1,['&&     apt-get clean &&     apt-get autoremove &&     rm -rf /var/lib/apt/lists/* /tmp/* ~/*']
ufoym/deepo,latest,/docker/Dockerfile.pytorch-py36-cpu,FROM,1,['ubuntu:18.04']
ufoym/deepo,latest,/docker/Dockerfile.pytorch-py36-cpu,ENV,1,['LANG C.UTF-8']
ufoym/deepo,latest,/docker/Dockerfile.pytorch-py36-cpu,RUN,1,"['APT_INSTALL=""apt-get install -y --no-install-recommends"" &&     PIP_INSTALL=""python -m pip --no-cache-dir install --upgrade"" &&     GIT_CLONE=""git clone --depth 10"" && ']"
ufoym/deepo,latest,/docker/Dockerfile.pytorch-py36-cpu,RM,1,['-rf /var/lib/apt/lists/*            /etc/apt/sources.list.d/cuda.list            /etc/apt/sources.list.d/nvidia-ml.list && ']
ufoym/deepo,latest,/docker/Dockerfile.pytorch-py36-cpu,APT-GET,1,['update && ']
ufoym/deepo,latest,/docker/Dockerfile.pytorch-py36-cpu,DEBIAN_FRONTEND=NONINTERACTIVE,2,"['$APT_INSTALL         build-essential         apt-utils         ca-certificates         wget         git         vim         libssl-dev         curl         unzip         unrar         cmake         && ', '$APT_INSTALL         software-properties-common         &&     add-apt-repository ppa:deadsnakes/ppa &&     apt-get update &&     DEBIAN_FRONTEND=noninteractive $APT_INSTALL         python3.6         python3.6-dev         python3-distutils-extra         &&     wget -O ~/get-pip.py         https://bootstrap.pypa.io/get-pip.py &&     python3.6 ~/get-pip.py &&     ln -s /usr/bin/python3.6 /usr/local/bin/python3 &&     ln -s /usr/bin/python3.6 /usr/local/bin/python &&     $PIP_INSTALL         setuptools         &&     $PIP_INSTALL         numpy         scipy         pandas         cloudpickle         scikit-image>=0.14.2         scikit-learn         matplotlib         Cython         tqdm         && ']"
ufoym/deepo,latest,/docker/Dockerfile.pytorch-py36-cpu,$PIP_INSTALL,1,['future         numpy         protobuf         enum34         pyyaml         typing         &&     $PIP_INSTALL         --pre torch torchvision torchaudio -f         https://download.pytorch.org/whl/nightly/cpu/torch_nightly.html         && ']
ufoym/deepo,latest,/docker/Dockerfile.pytorch-py36-cpu,LDCONFIG,1,['&&     apt-get clean &&     apt-get autoremove &&     rm -rf /var/lib/apt/lists/* /tmp/* ~/*']
ufoym/deepo,latest,/docker/Dockerfile.theano-py36-cu113,FROM,1,['nvidia/cuda:11.3.1-cudnn8-devel-ubuntu18.04']
ufoym/deepo,latest,/docker/Dockerfile.theano-py36-cu113,ENV,1,['LANG C.UTF-8']
ufoym/deepo,latest,/docker/Dockerfile.theano-py36-cu113,RUN,1,"['APT_INSTALL=""apt-get install -y --no-install-recommends"" &&     PIP_INSTALL=""python -m pip --no-cache-dir install --upgrade"" &&     GIT_CLONE=""git clone --depth 10"" && ']"
ufoym/deepo,latest,/docker/Dockerfile.theano-py36-cu113,RM,1,['-rf /var/lib/apt/lists/*            /etc/apt/sources.list.d/cuda.list            /etc/apt/sources.list.d/nvidia-ml.list && ']
ufoym/deepo,latest,/docker/Dockerfile.theano-py36-cu113,APT-GET,1,['update && ']
ufoym/deepo,latest,/docker/Dockerfile.theano-py36-cu113,DEBIAN_FRONTEND=NONINTERACTIVE,3,"['$APT_INSTALL         build-essential         apt-utils         ca-certificates         wget         git         vim         libssl-dev         curl         unzip         unrar         cmake         && ', '$APT_INSTALL         software-properties-common         &&     add-apt-repository ppa:deadsnakes/ppa &&     apt-get update &&     DEBIAN_FRONTEND=noninteractive $APT_INSTALL         python3.6         python3.6-dev         python3-distutils-extra         &&     wget -O ~/get-pip.py         https://bootstrap.pypa.io/get-pip.py &&     python3.6 ~/get-pip.py &&     ln -s /usr/bin/python3.6 /usr/local/bin/python3 &&     ln -s /usr/bin/python3.6 /usr/local/bin/python &&     $PIP_INSTALL         setuptools         &&     $PIP_INSTALL         numpy         scipy         pandas         cloudpickle         scikit-image>=0.14.2         scikit-learn         matplotlib         Cython         tqdm         && ', '$APT_INSTALL         libblas-dev         && ']"
ufoym/deepo,latest,/docker/Dockerfile.theano-py36-cu113,WGET,1,"['-qO- https://github.com/Theano/libgpuarray/archive/v0.7.6.tar.gz | tar xz -C ~ &&     cd ~/libgpuarray* && mkdir -p build && cd build &&     cmake -D CMAKE_BUILD_TYPE=RELEASE           -D CMAKE_INSTALL_PREFIX=/usr/local           .. &&     make -j""$(nproc)"" install &&     cd ~/libgpuarray* &&     python setup.py build &&     python setup.py install && ']"
ufoym/deepo,latest,/docker/Dockerfile.theano-py36-cu113,PRINTF,1,"[""'[global]\\nfloatX = float32\\ndevice = cuda0\\n\\n[dnn]\\ninclude_path = /usr/local/cuda/targets/x86_64-linux/include\\n' > ~/.theanorc && ""]"
ufoym/deepo,latest,/docker/Dockerfile.theano-py36-cu113,$PIP_INSTALL,1,['https://github.com/Theano/Theano/archive/master.zip         && ']
ufoym/deepo,latest,/docker/Dockerfile.theano-py36-cu113,LDCONFIG,1,['&&     apt-get clean &&     apt-get autoremove &&     rm -rf /var/lib/apt/lists/* /tmp/* ~/*']
ufoym/deepo,latest,/docker/Dockerfile.paddle-py36-cu113,FROM,1,['nvidia/cuda:11.3.1-cudnn8-devel-ubuntu18.04']
ufoym/deepo,latest,/docker/Dockerfile.paddle-py36-cu113,ENV,1,['LANG C.UTF-8']
ufoym/deepo,latest,/docker/Dockerfile.paddle-py36-cu113,RUN,1,"['APT_INSTALL=""apt-get install -y --no-install-recommends"" &&     PIP_INSTALL=""python -m pip --no-cache-dir install --upgrade"" &&     GIT_CLONE=""git clone --depth 10"" && ']"
ufoym/deepo,latest,/docker/Dockerfile.paddle-py36-cu113,RM,1,['-rf /var/lib/apt/lists/*            /etc/apt/sources.list.d/cuda.list            /etc/apt/sources.list.d/nvidia-ml.list && ']
ufoym/deepo,latest,/docker/Dockerfile.paddle-py36-cu113,APT-GET,1,['update && ']
ufoym/deepo,latest,/docker/Dockerfile.paddle-py36-cu113,DEBIAN_FRONTEND=NONINTERACTIVE,2,"['$APT_INSTALL         build-essential         apt-utils         ca-certificates         wget         git         vim         libssl-dev         curl         unzip         unrar         cmake         && ', '$APT_INSTALL         software-properties-common         &&     add-apt-repository ppa:deadsnakes/ppa &&     apt-get update &&     DEBIAN_FRONTEND=noninteractive $APT_INSTALL         python3.6         python3.6-dev         python3-distutils-extra         &&     wget -O ~/get-pip.py         https://bootstrap.pypa.io/get-pip.py &&     python3.6 ~/get-pip.py &&     ln -s /usr/bin/python3.6 /usr/local/bin/python3 &&     ln -s /usr/bin/python3.6 /usr/local/bin/python &&     $PIP_INSTALL         setuptools         &&     $PIP_INSTALL         numpy         scipy         pandas         cloudpickle         scikit-image>=0.14.2         scikit-learn         matplotlib         Cython         tqdm         && ']"
ufoym/deepo,latest,/docker/Dockerfile.paddle-py36-cu113,$PIP_INSTALL,1,['paddlepaddle-gpu         && ']
ufoym/deepo,latest,/docker/Dockerfile.paddle-py36-cu113,LDCONFIG,1,['&&     apt-get clean &&     apt-get autoremove &&     rm -rf /var/lib/apt/lists/* /tmp/* ~/*']
ufoym/deepo,latest,/docker/Dockerfile.caffe-py36-cpu,FROM,1,['ubuntu:18.04']
ufoym/deepo,latest,/docker/Dockerfile.caffe-py36-cpu,ENV,1,['LANG C.UTF-8']
ufoym/deepo,latest,/docker/Dockerfile.caffe-py36-cpu,RUN,1,"['APT_INSTALL=""apt-get install -y --no-install-recommends"" &&     PIP_INSTALL=""python -m pip --no-cache-dir install --upgrade"" &&     GIT_CLONE=""git clone --depth 10"" && ']"
ufoym/deepo,latest,/docker/Dockerfile.caffe-py36-cpu,RM,1,['-rf /var/lib/apt/lists/*            /etc/apt/sources.list.d/cuda.list            /etc/apt/sources.list.d/nvidia-ml.list && ']
ufoym/deepo,latest,/docker/Dockerfile.caffe-py36-cpu,APT-GET,2,"['update && ', 'update &&     DEBIAN_FRONTEND=noninteractive $APT_INSTALL         caffe-cpu         && ']"
ufoym/deepo,latest,/docker/Dockerfile.caffe-py36-cpu,DEBIAN_FRONTEND=NONINTERACTIVE,4,"['$APT_INSTALL         build-essential         apt-utils         ca-certificates         wget         git         vim         libssl-dev         curl         unzip         unrar         cmake         && ', '$APT_INSTALL         software-properties-common         &&     add-apt-repository ppa:deadsnakes/ppa &&     apt-get update &&     DEBIAN_FRONTEND=noninteractive $APT_INSTALL         python3.6         python3.6-dev         python3-distutils-extra         &&     wget -O ~/get-pip.py         https://bootstrap.pypa.io/get-pip.py &&     python3.6 ~/get-pip.py &&     ln -s /usr/bin/python3.6 /usr/local/bin/python3 &&     ln -s /usr/bin/python3.6 /usr/local/bin/python &&     $PIP_INSTALL         setuptools         &&     $PIP_INSTALL         numpy         scipy         pandas         cloudpickle         scikit-image>=0.14.2         scikit-learn         matplotlib         Cython         tqdm         && ', '$APT_INSTALL         libboost-all-dev         && ', '$APT_INSTALL         libatlas-base-dev         libgflags-dev         libgoogle-glog-dev         libhdf5-serial-dev         libleveldb-dev         liblmdb-dev         libprotobuf-dev         libsnappy-dev         protobuf-compiler         && ']"
ufoym/deepo,latest,/docker/Dockerfile.caffe-py36-cpu,$GIT_CLONE,1,"['--branch 4.5.4 https://github.com/opencv/opencv ~/opencv &&     mkdir -p ~/opencv/build && cd ~/opencv/build &&     cmake -D CMAKE_BUILD_TYPE=RELEASE           -D CMAKE_INSTALL_PREFIX=/usr/local           -D WITH_IPP=OFF           -D WITH_CUDA=OFF           -D WITH_OPENCL=OFF           -D BUILD_TESTS=OFF           -D BUILD_PERF_TESTS=OFF           -D BUILD_DOCS=OFF           -D BUILD_EXAMPLES=OFF           .. &&     make -j""$(nproc)"" install &&     ln -s /usr/local/include/opencv4/opencv2 /usr/local/include/opencv2 && ']"
ufoym/deepo,latest,/docker/Dockerfile.caffe-py36-cpu,LDCONFIG,1,['&&     apt-get clean &&     apt-get autoremove &&     rm -rf /var/lib/apt/lists/* /tmp/* ~/*']
ufoym/deepo,latest,/docker/Dockerfile.mxnet-py36-cu113,FROM,1,['nvidia/cuda:11.3.1-cudnn8-devel-ubuntu18.04']
ufoym/deepo,latest,/docker/Dockerfile.mxnet-py36-cu113,ENV,1,['LANG C.UTF-8']
ufoym/deepo,latest,/docker/Dockerfile.mxnet-py36-cu113,RUN,1,"['APT_INSTALL=""apt-get install -y --no-install-recommends"" &&     PIP_INSTALL=""python -m pip --no-cache-dir install --upgrade"" &&     GIT_CLONE=""git clone --depth 10"" && ']"
ufoym/deepo,latest,/docker/Dockerfile.mxnet-py36-cu113,RM,1,['-rf /var/lib/apt/lists/*            /etc/apt/sources.list.d/cuda.list            /etc/apt/sources.list.d/nvidia-ml.list && ']
ufoym/deepo,latest,/docker/Dockerfile.mxnet-py36-cu113,APT-GET,1,['update && ']
ufoym/deepo,latest,/docker/Dockerfile.mxnet-py36-cu113,DEBIAN_FRONTEND=NONINTERACTIVE,3,"['$APT_INSTALL         build-essential         apt-utils         ca-certificates         wget         git         vim         libssl-dev         curl         unzip         unrar         cmake         && ', '$APT_INSTALL         software-properties-common         &&     add-apt-repository ppa:deadsnakes/ppa &&     apt-get update &&     DEBIAN_FRONTEND=noninteractive $APT_INSTALL         python3.6         python3.6-dev         python3-distutils-extra         &&     wget -O ~/get-pip.py         https://bootstrap.pypa.io/get-pip.py &&     python3.6 ~/get-pip.py &&     ln -s /usr/bin/python3.6 /usr/local/bin/python3 &&     ln -s /usr/bin/python3.6 /usr/local/bin/python &&     $PIP_INSTALL         setuptools         &&     $PIP_INSTALL         numpy         scipy         pandas         cloudpickle         scikit-image>=0.14.2         scikit-learn         matplotlib         Cython         tqdm         && ', '$APT_INSTALL         libatlas-base-dev         graphviz         && ']"
ufoym/deepo,latest,/docker/Dockerfile.mxnet-py36-cu113,$PIP_INSTALL,1,['mxnet-cu112         graphviz         && ']
ufoym/deepo,latest,/docker/Dockerfile.mxnet-py36-cu113,LDCONFIG,1,['&&     apt-get clean &&     apt-get autoremove &&     rm -rf /var/lib/apt/lists/* /tmp/* ~/*']
heartexlabs/label-studio,latest,/Dockerfile.heroku,FROM,1,['heartexlabs/label-studio:latest']
heartexlabs/label-studio,latest,/Dockerfile,FROM,1,['ubuntu:20.04']
heartexlabs/label-studio,latest,/Dockerfile,ENV,1,['DEBIAN_FRONTEND=noninteractive     PIP_CACHE_DIR=/.cache     DJANGO_SETTINGS_MODULE=core.settings.label_studio     LABEL_STUDIO_BASE_DATA_DIR=/label-studio/data     SETUPTOOLS_USE_DISTUTILS=stdlib']
heartexlabs/label-studio,latest,/Dockerfile,WORKDIR,1,['/label-studio']
heartexlabs/label-studio,latest,/Dockerfile,RUN,5,"['set -eux;     apt-get update && apt-get install --no-install-recommends --no-install-suggests -y     build-essential postgresql-client libmysqlclient-dev mysql-client python3.8 python3-pip python3.8-dev     uwsgi git libxml2-dev libxslt-dev zlib1g-dev', '--mount=type=cache,target=$PIP_CACHE_DIR     pip3 install -r requirements-mw.txt', '--mount=type=cache,target=$PIP_CACHE_DIR     pip3 install -r requirements.txt', '--mount=type=cache,target=$PIP_CACHE_DIR     pip3 install -e .', './deploy/prebuild_wo_frontend.sh']"
heartexlabs/label-studio,latest,/Dockerfile,COPY,3,"['deploy/requirements-mw.txt /label-studio', 'deploy/requirements.txt /label-studio', '. /label-studio']"
heartexlabs/label-studio,latest,/Dockerfile,EXPOSE,1,['8080']
heartexlabs/label-studio,latest,/Dockerfile,ENTRYPOINT,1,"['[""./deploy/docker-entrypoint.sh""]']"
heartexlabs/label-studio,latest,/Dockerfile,CMD,1,"['[""label-studio""]']"
Trusted-AI/adversarial-robustness-toolbox,latest,/Dockerfile,FROM,1,['tensorflow/tensorflow:2.2.0']
Trusted-AI/adversarial-robustness-toolbox,latest,/Dockerfile,RUN,23,"['pip3 install keras==2.3.1', 'pip3 install numpy==1.19.1 scipy==1.4.1 matplotlib==3.3.1 scikit-learn==0.22.2 six==1.15.0 Pillow==7.2.0 pytest-cov==2.10.1', 'pip3 install tqdm==4.48.2 statsmodels==0.11.1 pydub==0.24.1 resampy==0.2.2 ffmpeg-python==0.2.0 cma==3.0.3 mypy==0.770', 'pip3 install ffmpeg-python==0.2.0', 'pip3 install pandas==1.1.1', 'pip3 install jupyter==1.0.0 && pip3 install jupyterlab==2.1.0', 'pip3 install h5py==2.10.0', 'pip3 install tensorflow-addons==0.11.1', 'pip3 install mxnet==1.6.0', 'pip3 install torch==1.5.0 torchvision==0.7.0 -f https://download.pytorch.org/whl/torch_stable.html', 'pip3 install catboost==0.24', 'pip3 install GPy==1.9.9', 'pip3 install lightgbm==2.3.1', 'pip3 install xgboost==1.1.1', 'pip3 install kornia==0.3.1', 'pip3 install lief==0.11.4', 'pip3 install pytest==5.4.1 pytest-pep8==1.0.6 pytest-mock==3.2.0 codecov==2.1.8 requests==2.24.0', 'mkdir /project; mkdir /project/TMP', 'pip3 install --upgrade -r /project/requirements_test.txt', 'apt-get update', 'apt-get -y -q install ffmpeg libavcodec-extra', 'echo ""You should think about possibly upgrading these outdated packages""', 'pip3 list --outdated']"
Trusted-AI/adversarial-robustness-toolbox,latest,/Dockerfile,VOLUME,1,['/project/TMP']
Trusted-AI/adversarial-robustness-toolbox,latest,/Dockerfile,WORKDIR,1,['/project']
Trusted-AI/adversarial-robustness-toolbox,latest,/Dockerfile,ADD,1,['. /project/']
Trusted-AI/adversarial-robustness-toolbox,latest,/Dockerfile,EXPOSE,1,['8888']
Trusted-AI/adversarial-robustness-toolbox,latest,/Dockerfile,CMD,1,['bash run_tests.sh']
Trusted-AI/adversarial-robustness-toolbox,latest,/utils/mlops/kubeflow/robustness_evaluation_fgsm_pytorch/Dockerfile,FROM,1,['pytorch/pytorch:latest']
Trusted-AI/adversarial-robustness-toolbox,latest,/utils/mlops/kubeflow/robustness_evaluation_fgsm_pytorch/Dockerfile,RUN,1,['pip install adversarial-robustness-toolbox pandas minio flask-cors Pillow torchsummary']
Trusted-AI/adversarial-robustness-toolbox,latest,/utils/mlops/kubeflow/robustness_evaluation_fgsm_pytorch/Dockerfile,ENV,1,['APP_HOME /app']
Trusted-AI/adversarial-robustness-toolbox,latest,/utils/mlops/kubeflow/robustness_evaluation_fgsm_pytorch/Dockerfile,COPY,1,['src $APP_HOME']
Trusted-AI/adversarial-robustness-toolbox,latest,/utils/mlops/kubeflow/robustness_evaluation_fgsm_pytorch/Dockerfile,WORKDIR,1,['$APP_HOME']
Trusted-AI/adversarial-robustness-toolbox,latest,/utils/mlops/kubeflow/robustness_evaluation_fgsm_pytorch/Dockerfile,ENTRYPOINT,1,"['[""python""]']"
Trusted-AI/adversarial-robustness-toolbox,latest,/utils/mlops/kubeflow/robustness_evaluation_fgsm_pytorch/Dockerfile,CMD,1,"['[""robustness_evaluation_fgsm_pytorch.py""]']"
Trusted-AI/adversarial-robustness-toolbox,latest,/.github/actions/tf-faster-rcnn/Dockerfile,FROM,1,['tensorflow/tensorflow:1.15.5-py3']
Trusted-AI/adversarial-robustness-toolbox,latest,/.github/actions/tf-faster-rcnn/Dockerfile,ENV,1,['DEBIAN_FRONTEND noninteractive']
Trusted-AI/adversarial-robustness-toolbox,latest,/.github/actions/tf-faster-rcnn/Dockerfile,RUN,16,"['apt-get update      && apt-get install -y         libgl1-mesa-glx         libx11-xcb1         git         gcc         mono-mcs         libavcodec-extra         ffmpeg         curl         libsndfile-dev         libsndfile1         wget         unzip      && apt-get clean all      && rm -r /var/lib/apt/lists/*', 'wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh', 'bash Miniconda3-latest-Linux-x86_64.sh -b -p /miniconda', '/miniconda/bin/conda install --yes     astropy     matplotlib     pandas     scikit-learn     scikit-image', 'mkdir TensorFlow', 'cd TensorFlow && git clone https://github.com/tensorflow/models', 'cd TensorFlow && wget https://github.com/protocolbuffers/protobuf/releases/download/v3.17.3/protoc-3.17.3-linux-x86_64.zip', 'cd TensorFlow && unzip protoc-3.17.3-linux-x86_64.zip -d protobuf', 'cd TensorFlow/models/research && /TensorFlow/protobuf/bin/protoc object_detection/protos/*.proto --python_out=.', 'cd TensorFlow/models/research && cp object_detection/packages/tf1/setup.py .', 'cd TensorFlow/models/research && python -m pip install --use-feature=2020-resolver .', 'pip install tqdm', 'pip install requests', 'pip install sklearn', 'pip install numba==0.50.0', 'pip install pytest-cov']"
Trusted-AI/adversarial-robustness-toolbox,latest,/.github/actions/deepspeech-v2/Dockerfile,FROM,1,['pytorch/pytorch:1.5.1-cuda10.1-cudnn7-runtime']
Trusted-AI/adversarial-robustness-toolbox,latest,/.github/actions/deepspeech-v2/Dockerfile,ENV,1,['DEBIAN_FRONTEND noninteractive']
Trusted-AI/adversarial-robustness-toolbox,latest,/.github/actions/deepspeech-v2/Dockerfile,RUN,14,"['apt-get update      && apt-get install -y         libgl1-mesa-glx         libx11-xcb1         git         gcc         mono-mcs         cmake         libavcodec-extra         ffmpeg         curl      && apt-get clean all      && rm -r /var/lib/apt/lists/*', '/opt/conda/bin/conda install --yes     astropy     matplotlib     pandas     scikit-learn     scikit-image', 'pip install torch', 'pip install tensorflow', 'pip install torchaudio==0.5.1', 'git clone https://github.com/SeanNaren/warp-ctc.git', 'cd warp-ctc && mkdir build && cd build && cmake .. && make', 'cd warp-ctc/pytorch_binding && python setup.py install', 'git clone https://github.com/SeanNaren/deepspeech.pytorch.git', 'cd deepspeech.pytorch && git checkout V2.1', 'cd deepspeech.pytorch && pip install -r requirements_test.txt', 'cd deepspeech.pytorch && pip install -e .', 'pip install numba==0.50.0', 'pip install pytest-cov']"
Trusted-AI/adversarial-robustness-toolbox,latest,/.github/actions/goturn/Dockerfile,FROM,1,['pytorch/pytorch:1.6.0-cuda10.1-cudnn7-runtime']
Trusted-AI/adversarial-robustness-toolbox,latest,/.github/actions/goturn/Dockerfile,ENV,3,"['DEBIAN_FRONTEND noninteractive', 'PYTHONPATH ""${PYTHONPATH}:/tmp/goturn-pytorch/src""', 'PYTHONPATH ""${PYTHONPATH}:/tmp/goturn-pytorch/src/scripts""']"
Trusted-AI/adversarial-robustness-toolbox,latest,/.github/actions/goturn/Dockerfile,RUN,24,"['apt-get update      && apt-get install -y         libgl1-mesa-glx         libx11-xcb1         git         gcc         mono-mcs         libavcodec-extra         ffmpeg         curl         libsndfile-dev         libsndfile1      && apt-get install -y libsm6 libxext6      && apt-get install -y libxrender-dev      && apt-get clean all      && rm -r /var/lib/apt/lists/*', '/opt/conda/bin/conda install --yes     astropy     matplotlib     pandas     scikit-learn     scikit-image', 'pip install torch==1.9.1', 'pip install torchvision==0.10.1', 'pip install tensorflow==2.6.0', 'pip install pytest', 'pip install numba', 'pip install scikit-learn==0.20', 'pip install pytest-cov', 'pip install gdown', 'git clone https://github.com/nrupatunga/goturn-pytorch.git /tmp/goturn-pytorch', 'pip install loguru==0.5.3', 'pip install torchsummary==1.5.1', 'pip install tqdm==4.62.3', 'pip install pytorch_lightning==0.7.1', 'pip install imutils==0.5.3', 'pip install torch_lr_finder==0.2.1', 'pip install numpy==1.20.3', 'pip install opencv_python==4.3.0.36', 'pip install Pillow==8.0.1', 'pip install visdom==0.1.8.9', 'pip install numpy==1.20.3', 'mkdir /tmp/goturn-pytorch/src/goturn/models/checkpoints', 'cd /tmp/goturn-pytorch/src/goturn/models/checkpoints && gdown https://drive.google.com/uc?id=1GouImhqpcoDtV_eLrD2wra-qr3vkAMY4']"
Trusted-AI/adversarial-robustness-toolbox,latest,/.github/actions/deepspeech-v3/Dockerfile,FROM,1,['pytorch/pytorch:1.6.0-cuda10.1-cudnn7-runtime']
Trusted-AI/adversarial-robustness-toolbox,latest,/.github/actions/deepspeech-v3/Dockerfile,ENV,1,['DEBIAN_FRONTEND noninteractive']
Trusted-AI/adversarial-robustness-toolbox,latest,/.github/actions/deepspeech-v3/Dockerfile,RUN,11,"['apt-get update      && apt-get install -y         libgl1-mesa-glx         libx11-xcb1         git         gcc         mono-mcs         libavcodec-extra         ffmpeg         curl         libsndfile-dev         libsndfile1      && apt-get clean all      && rm -r /var/lib/apt/lists/*', '/opt/conda/bin/conda install --yes     astropy     matplotlib     pandas     scikit-learn     scikit-image', 'pip install torch', 'pip install tensorflow', 'pip install torchaudio==0.6.0', 'pip install --no-build-isolation fairscale', 'git clone https://github.com/SeanNaren/deepspeech.pytorch.git', 'cd deepspeech.pytorch && pip install -r requirements_test.txt', 'cd deepspeech.pytorch && pip install -e .', 'pip install numba==0.50.0', 'pip install pytest-cov']"
Trusted-AI/adversarial-robustness-toolbox,latest,/.github/actions/espresso/Dockerfile,FROM,1,['pytorch/pytorch:1.6.0-cuda10.1-cudnn7-runtime']
Trusted-AI/adversarial-robustness-toolbox,latest,/.github/actions/espresso/Dockerfile,ENV,1,['DEBIAN_FRONTEND noninteractive']
Trusted-AI/adversarial-robustness-toolbox,latest,/.github/actions/espresso/Dockerfile,RUN,12,"['apt-get update      && apt-get install -y         libgl1-mesa-glx         libx11-xcb1         git         gcc         mono-mcs         libavcodec-extra         ffmpeg         curl         libsndfile-dev         libsndfile1      && apt-get clean all      && rm -r /var/lib/apt/lists/*', '/opt/conda/bin/conda install --yes     astropy     matplotlib     pandas     scikit-learn     scikit-image', 'pip install torch', 'pip install tensorflow', 'pip install torchaudio==0.6.0', 'pip install --no-build-isolation fairscale', 'pip install numba==0.50.0', 'pip install pytest-cov', 'pip install kaldiio', 'git clone https://github.com/beat-buesser/espresso', 'cd espresso && git checkout adv && pip install --editable .', 'pip install sentencepiece']"
intel-analytics/analytics-zoo,latest,/docker/cluster-serving/ClusterServingSparkVersionDockerfile,FROM,1,['ubuntu:18.04']
intel-analytics/analytics-zoo,latest,/docker/cluster-serving/ClusterServingSparkVersionDockerfile,MAINTAINER,1,['The Analytics Zoo Authors https://github.com/intel-analytics/analytics-zoo']
intel-analytics/analytics-zoo,latest,/docker/cluster-serving/ClusterServingSparkVersionDockerfile,WORKDIR,1,['/opt/work']
intel-analytics/analytics-zoo,latest,/docker/cluster-serving/ClusterServingSparkVersionDockerfile,ARG,3,"['SPARK_VERSION=2.4.6', 'BIGDL_VERSION=0.13.0', 'ANALYTICS_ZOO_VERSION=0.12.0-SNAPSHOT']"
intel-analytics/analytics-zoo,latest,/docker/cluster-serving/ClusterServingSparkVersionDockerfile,ENV,8,"['SPARK_HOME\t\t\t/opt/work/spark-${SPARK_VERSION}', 'JAVA_HOME\t\t\t/opt/jdk', 'ANALYTICS_ZOO_VERSION \t${ANALYTICS_ZOO_VERSION}', 'ANALYTICS_ZOO_HOME  \t/opt/work/analytics-zoo', 'PATH\t\t\t${JAVA_HOME}/bin:${ANALYTICS_ZOO_HOME}/bin/cluster-serving:${PATH}', 'PYTHONPATH \t\t${ANALYTICS_ZOO_HOME}/lib/analytics-zoo-bigdl_${BIGDL_VERSION}-spark_${SPARK_VERSION}-${ANALYTICS_ZOO_VERSION}-python-api.zip', 'REDIS_HOME \t\t/opt/work/redis-5.0.5', 'OMP_NUM_THREADS\tall']"
intel-analytics/analytics-zoo,latest,/docker/cluster-serving/ClusterServingSparkVersionDockerfile,RUN,10,"['apt-get update &&     apt-get install -y apt-utils vim curl nano wget unzip maven git numactl net-tools &&     apt-get install -y gcc g++ make &&     apt-get install -y libsm6 libxext6 libxrender-dev', 'apt-get install -y python3-minimal &&     apt-get install -y build-essential python3 python3-setuptools python3-dev python3-pip &&     pip3 install --upgrade pip &&     pip install --upgrade setuptools &&     pip install tensorboard &&     pip install opencv-python &&     pip install pyyaml &&     pip install redis &&     pip install pyarrow', 'wget http://enos.itcollege.ee/~jpoial/allalaadimised/jdk8/jdk-8u241-linux-x64.tar.gz &&     gunzip jdk-8u241-linux-x64.tar.gz &&     tar -xf jdk-8u241-linux-x64.tar -C /opt &&     rm jdk-8u241-linux-x64.tar &&     ln -s /opt/jdk1.8.0_241 /opt/jdk', 'wget http://download.redis.io/releases/redis-5.0.5.tar.gz &&     tar xzf redis-5.0.5.tar.gz &&     rm redis-5.0.5.tar.gz &&     cd redis-5.0.5 &&     make &&     echo ""bind 0.0.0.0"" >> /opt/work/redis-5.0.5/redis.conf &&     cd ..', 'wget https://archive.apache.org/dist/spark/spark-${SPARK_VERSION}/spark-${SPARK_VERSION}-bin-hadoop2.7.tgz &&     tar -zxvf spark-${SPARK_VERSION}-bin-hadoop2.7.tgz &&     mv spark-${SPARK_VERSION}-bin-hadoop2.7 spark-${SPARK_VERSION} &&     rm spark-${SPARK_VERSION}-bin-hadoop2.7.tgz', 'chmod a+x /opt/work/scripts/*.*', '/opt/work/scripts/download-analytics-zoo.sh', 'mkdir -p cluster-serving/model &&     cd cluster-serving &&     wget https://oss.sonatype.org/content/repositories/public/com/redislabs/spark-redis/2.4.0/spark-redis-2.4.0-jar-with-dependencies.jar &&     cd ..', 'chmod a+x ${ANALYTICS_ZOO_HOME}/bin/cluster-serving/*', 'cd cluster-serving &&     cluster-serving-init &&     cd ..']"
intel-analytics/analytics-zoo,latest,/docker/cluster-serving/ClusterServingSparkVersionDockerfile,ADD,7,"['download-analytics-zoo.sh /opt/work/scripts/', 'resources/test_image/*.* /opt/work/cluster-serving/test_image/', 'resources/model/*.* /opt/work/cluster-serving/model/', 'quick_start.py /opt/work/cluster-serving/', 'ncf.py /opt/work/cluster-serving/', 'perf /opt/work/perf/', 'freeze_checkpoint.py /opt/work']"
intel-analytics/analytics-zoo,latest,/docker/cluster-serving/ClusterServingSparkVersionDockerfile,CMD,1,"['[""bash""]']"
intel-analytics/analytics-zoo,latest,/docker/cluster-serving/Dockerfile,FROM,1,['ubuntu:18.04']
intel-analytics/analytics-zoo,latest,/docker/cluster-serving/Dockerfile,MAINTAINER,1,['The Analytics Zoo Authors https://github.com/intel-analytics/analytics-zoo']
intel-analytics/analytics-zoo,latest,/docker/cluster-serving/Dockerfile,WORKDIR,1,['/opt/work']
intel-analytics/analytics-zoo,latest,/docker/cluster-serving/Dockerfile,ARG,6,"['SPARK_VERSION=2.4.6', 'BIGDL_VERSION=0.13.0', 'ANALYTICS_ZOO_VERSION=0.12.0-SNAPSHOT', 'FLINK_VERSION=1.11.2', 'JDK_VERSION=8u192', 'JDK_URL=your_jdk_url']"
intel-analytics/analytics-zoo,latest,/docker/cluster-serving/Dockerfile,ENV,7,"['FLINK_HOME\t\t\t/opt/work/flink-${FLINK_VERSION}', 'JAVA_HOME\t\t\t/opt/jdk', 'REDIS_HOME \t\t/opt/work/redis-5.0.5', 'ANALYTICS_ZOO_VERSION \t${ANALYTICS_ZOO_VERSION}', 'CS_HOME  \t/opt/work/cluster-serving', 'PATH\t\t\t${JAVA_HOME}/bin:${ANALYTICS_ZOO_HOME}/bin/cluster-serving:${PATH}', 'OMP_NUM_THREADS\tall']"
intel-analytics/analytics-zoo,latest,/docker/cluster-serving/Dockerfile,RUN,7,"['apt-get update &&     apt-get install -y apt-utils vim curl nano wget unzip maven git numactl net-tools &&     apt-get install -y gcc g++ make &&     apt-get install -y libsm6 libxext6 libxrender-dev libgl1-mesa-dev', 'apt-get install -y python3-minimal &&     apt-get install -y build-essential python3 python3-setuptools python3-dev python3-pip &&     pip3 install --upgrade pip==20.2.4 &&     pip install --upgrade setuptools &&     pip install analytics-zoo-serving', 'wget $JDK_URL &&     gunzip jdk-$JDK_VERSION-linux-x64.tar.gz &&     tar -xf jdk-$JDK_VERSION-linux-x64.tar -C /opt &&     rm jdk-$JDK_VERSION-linux-x64.tar &&     mv /opt/jdk* /opt/jdk$JDK_VERSION &&     ln -s /opt/jdk$JDK_VERSION /opt/jdk', 'wget http://download.redis.io/releases/redis-5.0.5.tar.gz &&     tar xzf redis-5.0.5.tar.gz &&     rm redis-5.0.5.tar.gz &&     cd redis-5.0.5 &&     make &&     echo bind 0.0.0.0 >> /opt/work/redis-5.0.5/redis.conf &&     cd ..', 'wget https://archive.apache.org/dist/flink/flink-1.11.2/flink-${FLINK_VERSION}-bin-scala_2.11.tgz &&     tar xzf flink-*.tgz &&     rm flink-*.tgz', 'cd cluster-serving &&     wget https://repo1.maven.org/maven2/com/intel/analytics/zoo/analytics-zoo-bigdl_${BIGDL_VERSION}-spark_${SPARK_VERSION}/${ANALYTICS_ZOO_VERSION}/analytics-zoo-bigdl_${BIGDL_VERSION}-spark_${SPARK_VERSION}-${ANALYTICS_ZOO_VERSION}-serving.jar &&     mv *-serving.jar zoo.jar', 'sed -i ""s/jobmanager\\.heap\\.size:.*/jobmanager\\.heap\\.size: 8g/g"" $FLINK_HOME/conf/flink-conf.yaml &&     sed -i ""s/taskmanager\\.memory\\.process\\.size:.*/taskmanager\\.memory\\.process\\.size: 8g/g"" $FLINK_HOME/conf/flink-conf.yaml']"
intel-analytics/analytics-zoo,latest,/docker/cluster-serving/Dockerfile,ADD,4,"['resources/ /opt/work/cluster-serving/resources/', '*.py /opt/work/cluster-serving/', 'perf/ /opt/work/perf/', 'freeze_checkpoint.py /opt/work']"
intel-analytics/analytics-zoo,latest,/docker/cluster-serving/Dockerfile,CMD,1,['/bin/bash -c $FLINK_HOME/bin/start-cluster.sh && tail -f /dev/null']
intel-analytics/analytics-zoo,latest,/docker/zoo/Dockerfile,FROM,1,['ubuntu:18.04']
intel-analytics/analytics-zoo,latest,/docker/zoo/Dockerfile,MAINTAINER,1,['The Analytics-Zoo Authors https://github.com/intel-analytics/analytics-zoo']
intel-analytics/analytics-zoo,latest,/docker/zoo/Dockerfile,WORKDIR,1,['/opt/work']
intel-analytics/analytics-zoo,latest,/docker/zoo/Dockerfile,ARG,11,"['ANALYTICS_ZOO_VERSION=0.12.0-SNAPSHOT', 'BIGDL_VERSION=0.13.0', 'SPARK_VERSION=2.4.6', 'RUNTIME_SPARK_MASTER=local[4]', 'RUNTIME_DRIVER_CORES=4', 'RUNTIME_DRIVER_MEMORY=20g', 'RUNTIME_EXECUTOR_CORES=4', 'RUNTIME_EXECUTOR_MEMORY=20g', 'RUNTIME_TOTAL_EXECUTOR_CORES=4', 'JDK_VERSION=8u192', 'JDK_URL=your_jdk_url']"
intel-analytics/analytics-zoo,latest,/docker/zoo/Dockerfile,ENV,13,"['ANALYTICS_ZOO_VERSION           ${ANALYTICS_ZOO_VERSION}', 'SPARK_VERSION                   ${SPARK_VERSION}', 'BIGDL_VERSION                   ${BIGDL_VERSION}', 'RUNTIME_SPARK_MASTER            ${RUNTIME_SPARK_MASTER}', 'RUNTIME_DRIVER_CORES            ${RUNTIME_DRIVER_CORES}', 'RUNTIME_DRIVER_MEMORY           ${RUNTIME_DRIVER_MEMORY}', 'RUNTIME_EXECUTOR_CORES          ${RUNTIME_EXECUTOR_CORES}', 'RUNTIME_EXECUTOR_MEMORY         ${RUNTIME_EXECUTOR_MEMORY}', 'RUNTIME_TOTAL_EXECUTOR_CORES    ${RUNTIME_TOTAL_EXECUTOR_CORES}', 'SPARK_HOME                      /opt/work/spark-${SPARK_VERSION}', 'ANALYTICS_ZOO_HOME              /opt/work/analytics-zoo-${ANALYTICS_ZOO_VERSION}', 'JAVA_HOME                       /opt/jdk', 'PATH                            ${JAVA_HOME}/bin:${PATH}']"
intel-analytics/analytics-zoo,latest,/docker/zoo/Dockerfile,RUN,6,"['apt-get update --fix-missing &&     apt-get install -y apt-utils vim curl nano wget unzip maven git &&     apt-get install -y libsm6', 'wget $JDK_URL &&     gunzip jdk-$JDK_VERSION-linux-x64.tar.gz &&     tar -xf jdk-$JDK_VERSION-linux-x64.tar -C /opt &&     rm jdk-$JDK_VERSION-linux-x64.tar &&     mv /opt/jdk* /opt/jdk$JDK_VERSION &&     ln -s /opt/jdk$JDK_VERSION /opt/jdk', 'apt-get install -y python3-minimal &&     apt-get install -y build-essential python3 python3-setuptools python3-dev python3-pip &&     pip3 install --upgrade pip==20.2.4 &&     pip install --upgrade setuptools &&     pip install numpy scipy &&     pip install --no-binary pandas -I pandas &&     pip install scikit-learn matplotlib seaborn jupyter notebook==6.1.4 jupyterlab==2.3.1 wordcloud moviepy requests h5py opencv-python tensorflow==1.15.0 &&     pip install torch==1.1.0 torchvision==0.3.0 -f https://download.pytorch.org/whl/torch_stable.html &&     ln -s /usr/bin/python3 /usr/bin/python &&     pip uninstall -y -q tornado &&     pip install --no-cache-dir tornado==5.1.1 &&     python3 -m ipykernel.kernelspec', 'wget https://archive.apache.org/dist/spark/spark-${SPARK_VERSION}/spark-${SPARK_VERSION}-bin-hadoop2.7.tgz &&     tar -zxvf spark-${SPARK_VERSION}-bin-hadoop2.7.tgz &&     mv spark-${SPARK_VERSION}-bin-hadoop2.7 spark-${SPARK_VERSION} &&     rm spark-${SPARK_VERSION}-bin-hadoop2.7.tgz', 'chmod a+x /opt/work/download-analytics-zoo.sh &&     chmod a+x /opt/work/start-notebook.sh', '/opt/work/download-analytics-zoo.sh']"
intel-analytics/analytics-zoo,latest,/docker/zoo/Dockerfile,ADD,2,"['./download-analytics-zoo.sh /opt/work', './start-notebook.sh /opt/work']"
intel-analytics/analytics-zoo,latest,/docker/zoo/Dockerfile,CMD,1,"['[""/opt/work/start-notebook.sh""]']"
intel-analytics/analytics-zoo,latest,/docker/jenkins-ci/jenkins-slave/Dockerfile,FROM,1,['ubuntu:16.04']
intel-analytics/analytics-zoo,latest,/docker/jenkins-ci/jenkins-slave/Dockerfile,WORKDIR,1,['/opt/work']
intel-analytics/analytics-zoo,latest,/docker/jenkins-ci/jenkins-slave/Dockerfile,ARG,2,"['JDK_VERSION=8u192', 'JDK_URL=your_jdk_url']"
intel-analytics/analytics-zoo,latest,/docker/jenkins-ci/jenkins-slave/Dockerfile,ENV,17,"['JAVA_8_HOME         /opt/work/jdk8', 'JAVA_HOME           ${JAVA_8_HOME}', 'SCALA_HOME          /opt/work/scala', 'CONDA_HOME          /opt/work/conda', 'JENKINS_HOME        /opt/work/jenkins', 'SPARK_2_1_HOME      /opt/work/spark-2.1.3', 'SPARK_2_2_HOME      /opt/work/spark-2.2.2', 'SPARK_2_3_HOME      /opt/work/spark-2.3.2', 'SPARK_2_4_HOME      /opt/work/spark-2.4.3', 'PATH                $SCALA_HOME/bin:${JAVA_HOME}/bin:${CONDA_HOME}/bin:${PATH}', 'TORCH_VERSION       d03a42834bb1b674495b0c42de1716b66cc388f1', 'TORCH_HOME          /opt/work/torch', 'CAFFE_HOME          /opt/work/caffe', 'PATH                ${TORCH_HOME}/install/bin:${JAVA_HOME}/bin:${CONDA_HOME}/bin:${PATH}', 'LANG                en_US.UTF-8', 'LC_ALL              en_US.UTF-8', 'PYTHONPATH /opt/work/models/research/slim:${PYTHONPATH}']"
intel-analytics/analytics-zoo,latest,/docker/jenkins-ci/jenkins-slave/Dockerfile,ADD,2,"['./run-slave.sh      /opt/work/jenkins/run-slave.sh', './slave.groovy      /opt/work/jenkins/slave.groovy']"
intel-analytics/analytics-zoo,latest,/docker/jenkins-ci/jenkins-slave/Dockerfile,RUN,6,"['apt-get update --fix-missing &&     apt-get install -y vim curl nano wget unzip maven git bzip2 &&     apt-get install -y locales && locale-gen en_US.UTF-8 &&     apt-get install -y build-essential &&     apt-get install -y protobuf-compiler libprotoc-dev &&     apt-get install -y libgtk2.0-dev', 'wget $JDK_URL &&     gunzip jdk-$JDK_VERSION-linux-x64.tar.gz &&     tar -xf jdk-$JDK_VERSION-linux-x64.tar -C /opt &&     rm jdk-$JDK_VERSION-linux-x64.tar &&     mv /opt/jdk* /opt/jdk$JDK_VERSION &&     ln -s /opt/jdk$JDK_VERSION /opt/jdk &&     wget https://downloads.lightbend.com/scala/2.11.8/scala-2.11.8.tgz &&     gunzip scala-2.11.8.tgz &&     tar -xf scala-2.11.8.tar -C /opt &&     rm scala-2.11.8.tar &&     ln -s /opt/scala-2.11.8 ${SCALA_HOME} &&     chmod a+x /opt/work/jenkins/run-slave.sh &&     chmod a+x /opt/work/jenkins/slave.groovy &&     wget http://repo.jenkins-ci.org/releases/org/jenkins-ci/main/remoting/3.14/remoting-3.14.jar &&     mv remoting-3.14.jar ${JENKINS_HOME} && ', 'git clone https://github.com/tensorflow/models.git', 'export TENSOR_FLOW_VERION=1.10.0 &&     export KERAS_VERSION=1.2.2 &&     conda create -y -n py35 python=3.5 &&     conda install -y -n py35 -c conda-forge         mkdocs==1.0.4 scipy==1.1.0 pandas==0.23.4 scikit-learn==0.20.0         matplotlib==3.0.0 seaborn==0.9.0 jupyter==1.0.0 plotly==3.9.0         nltk==3.2.5 twine==1.13.0 pytest==3.8.1 pytest-xdist==1.27.0         h5py==2.8.0 moviepy==0.2.3.5 imageio-ffmpeg==0.3.0         typing==3.6.6 numpy==1.15.2 pyyaml==3.13         mkl==2019.3 mkl-include==2019.3 mkl-service==1.1.2 setuptools==40.4.3         cmake==3.14.3 cffi==1.11.5 robotframework==3.1.1 requests==2.19.1         networkx==2.2 tensorboard==1.10.0 libprotobuf==3.6.0 protobuf==3.6.0         tensorflow==$TENSOR_FLOW_VERION keras==$KERAS_VERSION &&     conda install -y -n py35 -c anaconda protobuf==3.6.0 &&     conda install -y -n py35 --channel https://conda.anaconda.org/menpo opencv3==3.1.0 &&     conda install -y -n py35 -c mingfeima mkldnn==0.16.1 &&     conda install -y -n py35 -c pytorch pytorch-cpu==1.0.0 torchvision-cpu==0.2.1 &&         /bin/bash -c ""source activate py35 &&         pip install onnx==1.3.0 ray==1.2.0 conda-pack==0.3.1 psutil==5.6.2 &&         pip install aiohttp==3.5.4 setproctitle==1.1.10 gym==0.14.0 &&         pip install atari_py==0.2.6 lz4==2.1.10 && source deactivate"" &&     conda create -y -n py36 python=3.6 &&     conda install -y -n py36 -c conda-forge         mkdocs==1.0.4 scipy==1.2.1 pandas==0.24.2 scikit-learn==0.20.3         matplotlib==3.0.3 seaborn==0.9.0 jupyter==1.0.0  plotly==3.9.0         nltk==3.2.5 twine==1.13.0 pytest==4.5.0 pytest-xdist==1.28.0         h5py==2.9.0 moviepy==0.2.3.5 imageio-ffmpeg==0.3.0         typing==3.6.4 numpy==1.15.1 pyyaml==5.1         mkl==2019.3 mkl-include==2019.3 mkl-service==1.1.2 setuptools==41.0.1         cmake==3.14.3 cffi==1.12.3 robotframework==3.1.1 requests==2.21.0         networkx==2.2 tensorboard==1.10.0 libprotobuf==3.7.1 protobuf==3.7.1         tensorflow==$TENSOR_FLOW_VERION keras==$KERAS_VERSION &&     conda install -y -n py36 -c anaconda protobuf==3.7.1 &&     conda install -y -n py36 --channel https://conda.anaconda.org/menpo opencv3==3.1.0 &&     conda install -y -n py36 -c mingfeima mkldnn==0.16.1 &&     conda install -y -n py36 -c pytorch pytorch-cpu==1.0.0 torchvision-cpu==0.2.1 &&         /bin/bash -c ""source activate py36 &&         pip install onnx==1.3.0 ray==1.2.0 conda-pack==0.3.1 psutil==5.6.2 &&         pip install aiohttp==3.5.4 setproctitle==1.1.10 gym==0.14.0 &&         pip install atari_py==0.2.6 lz4==2.1.10 && source deactivate"" &&     export TENSOR_FLOW_VERION=1.10.0 &&     export KERAS_VERSION=2.1.6 &&     conda create -y -n py35k216 python=3.5 mkdocs==1.0.4 scipy==1.1.0 pandas==0.23.4 scikit-learn==0.20.0 matplotlib==2.2.2 seaborn==0.9.0 jupyter==1.0.0 &&     conda install -y -n py35k216 plotly==3.9.0 nltk==3.2.5 twine==1.13.0 pytest==3.8.1 pytest-xdist==1.27.0 h5py==2.8.0 moviepy==0.2.3.5 &&     conda install -y -n py35k216 -c conda-forge tensorflow==$TENSOR_FLOW_VERION keras==$KERAS_VERSION &&     conda install -y -n py35k216 -c conda-forge opencv==3.4.1 &&     conda install -y -n py35k216 typing==3.6.6 protobuf==3.6.0 numpy==1.15.2 pyyaml==3.13 mkl==2019.3 mkl-include==2019.3 setuptools==40.4.3 cmake==3.14.3 cffi==1.11.5 &&     conda install -y -n py35k216 -c mingfeima mkldnn==0.16.1 &&     conda install -y -n py35k216 -c conda-forge robotframework==3.1.1 requests==2.19.1 &&     conda create -y -n py36k216 python=3.6 mkdocs==1.0.4 scipy==1.2.1 pandas==0.24.2 scikit-learn==0.20.3 matplotlib==3.0.3 seaborn==0.9.0 jupyter==1.0.0 &&     conda install -y -n py36k216 plotly==3.9.0 nltk==3.2.5 twine==1.13.0 pytest==4.5.0 pytest-xdist==1.28.0 h5py==2.8.0 moviepy==0.2.3.5 &&     conda install -y -n py36k216 -c conda-forge tensorflow==$TENSOR_FLOW_VERION keras==$KERAS_VERSION &&     conda install -y -n py36k216 -c conda-forge opencv==3.4.1 &&     conda install -y -n py36k216 typing==3.6.4 protobuf==3.7.1 numpy==1.16.3 pyyaml==5.1 mkl==2019.3 mkl-include==2019.3 setuptools==41.0.1 cmake==3.14.3 cffi==1.12.3 &&     conda install -y -n py36k216 -c mingfeima mkldnn==0.16.1 &&     conda install -y -n py36k216 -c conda-forge robotframework==3.1.1 requests==2.21.0', 'git clone https://github.com/torch/distro.git /opt/work/torch --recursive &&     cd /opt/work/torch && git checkout ${TORCH_VERSION} &&     echo ""Acquire::http::Proxy \\""${http_proxy}\\"";\\nAcquire::https::Proxy \\""${https_proxy}\\"";"" > /etc/apt/apt.conf &&     export CMAKE_INCLUDE_PATH=/opt/intel/mkl/include &&     export CMAKE_LIBRARY_PATH=/opt/intel/mkl/lib/intel64:/opt/intel/mkl/compiler/lib/intel64 &&     export LD_LIBRARY_PATH=$CMAKE_LIBRARY_PATH:$LD_LIBRARY_PATH &&     sed -i ""s/sudo/ /g"" install-deps &&     ./install-deps &&     yes | ./install.sh &&     cd /opt/work/', 'git config --global url.https://github.com/.insteadOf git://github.com/ &&     cat ~/.gitconfig &&     /opt/work/torch/install/bin/luarocks install torchx &&     git clone https://github.com/Element-Research/dpnn.git &&     cd dpnn &&     git reset --hard ca0e99fa6d0dfd971f0f284520562765ae0865fd &&     luarocks make rocks/dpnn-scm-1.rockspec &&     cd /opt/work &&     git clone https://github.com/Element-Research/rnn.git &&     cd rnn &&     luarocks make rocks/rnn-scm-1.rockspec &&     cd /opt/work']"
intel-analytics/analytics-zoo,latest,/docker/jenkins-ci/jenkins-slave/Dockerfile,WGET,1,['http://archive.apache.org/dist/spark/spark-2.1.3/spark-2.1.3-bin-hadoop2.7.tgz &&     tar -xf spark-2.1.3-bin-hadoop2.7.tgz -C /opt/work &&     rm spark-2.1.3-bin-hadoop2.7.tgz &&     ln -s /opt/work/spark-2.1.3-bin-hadoop2.7 ${SPARK_2_1_HOME} &&     wget http://archive.apache.org/dist/spark/spark-2.2.2/spark-2.2.2-bin-hadoop2.7.tgz &&     tar -xf spark-2.2.2-bin-hadoop2.7.tgz -C /opt/work &&     rm spark-2.2.2-bin-hadoop2.7.tgz &&     ln -s /opt/work/spark-2.2.2-bin-hadoop2.7 ${SPARK_2_2_HOME} &&     wget http://archive.apache.org/dist/spark/spark-2.3.2/spark-2.3.2-bin-hadoop2.7.tgz &&     tar -xf spark-2.3.2-bin-hadoop2.7.tgz -C /opt/work &&     rm spark-2.3.2-bin-hadoop2.7.tgz &&     ln -s /opt/work/spark-2.3.2-bin-hadoop2.7 ${SPARK_2_3_HOME} &&     wget http://archive.apache.org/dist/spark/spark-2.4.3/spark-2.4.3-bin-hadoop2.7.tgz &&     tar -xf spark-2.4.3-bin-hadoop2.7.tgz -C /opt/work &&     rm spark-2.4.3-bin-hadoop2.7.tgz &&     ln -s /opt/work/spark-2.4.3-bin-hadoop2.7 ${SPARK_2_4_HOME} &&     wget https://cmake.org/files/v3.12/cmake-3.12.1.tar.gz &&     tar xf cmake-3.12.1.tar.gz &&     cd cmake-3.12.1 &&     ./configure &&     make -j16 &&     make install &&     cd .. &&     wget https://repo.continuum.io/miniconda/Miniconda3-4.3.31-Linux-x86_64.sh &&     /bin/bash Miniconda3-4.3.31-Linux-x86_64.sh -f -b -p ${CONDA_HOME} &&     rm Miniconda3-4.3.31-Linux-x86_64.sh &&     conda config --system --prepend channels conda-forge &&     conda config --system --set auto_update_conda false &&     conda config --system --set show_channel_urls true &&     conda update --all --quiet --yes &&     conda clean -tipsy']
intel-analytics/analytics-zoo,latest,/docker/jenkins-ci/jenkins-slave/Dockerfile,CMD,1,"['[""/opt/work/jenkins/run-slave.sh""]']"
intel-analytics/analytics-zoo,latest,/docker/jenkins-ci/jenkins-master/Dockerfile,FROM,1,['ubuntu:14.04']
intel-analytics/analytics-zoo,latest,/docker/jenkins-ci/jenkins-master/Dockerfile,MAINTAINER,1,['The Analytics-Zoo Authors https://github.com/intel-analytics/analytics-zoo']
intel-analytics/analytics-zoo,latest,/docker/jenkins-ci/jenkins-master/Dockerfile,WORKDIR,1,['/opt/work']
intel-analytics/analytics-zoo,latest,/docker/jenkins-ci/jenkins-master/Dockerfile,ARG,2,"['JDK_VERSION=8u192', 'JDK_URL=your_jdk_url']"
intel-analytics/analytics-zoo,latest,/docker/jenkins-ci/jenkins-master/Dockerfile,ENV,11,"['JAVA_HOME                /opt/work/jdk', 'JAVA_OPTS                -Djenkins.install.runSetupWizard=false', 'JENKINS_HOME             /opt/work/jenkins', 'JENKINS_SLAVE_AGENT_PORT 50000', 'JENKINS_VERSION          2.60.3', 'JENKINS_SHA              2d71b8f87c8417f9303a73d52901a59678ee6c0eefcf7325efed6035ff39372a', 'JENKINS_URL              https://repo.jenkins-ci.org/public/org/jenkins-ci/main/jenkins-war/${JENKINS_VERSION}/jenkins-war-${JENKINS_VERSION}.war', 'JENKINS_UC               https://updates.jenkins.io', 'JENKINS_UC_EXPERIMENTAL  https://updates.jenkins.io/experimental', 'COPY_REFERENCE_FILE_LOG  ${JENKINS_HOME}/copy_reference_file.log', 'PATH                     ${JAVA_HOME}/bin:${PATH}']"
intel-analytics/analytics-zoo,latest,/docker/jenkins-ci/jenkins-master/Dockerfile,COPY,3,"['init.groovy ${JENKINS_HOME}/init.groovy.d/basic-security.groovy', 'jenkins-support ${JENKINS_HOME}/jenkins-support', 'jenkins.sh ${JENKINS_HOME}/jenkins.sh']"
intel-analytics/analytics-zoo,latest,/docker/jenkins-ci/jenkins-master/Dockerfile,RUN,3,"['apt-get update && apt-get install -y git wget curl && rm -rf /var/lib/apt/lists/*', 'wget $JDK_URL &&     gunzip jdk-$JDK_VERSION-linux-x64.tar.gz &&     tar -xf jdk-$JDK_VERSION-linux-x64.tar -C /opt &&     rm jdk-$JDK_VERSION-linux-x64.tar &&     mv /opt/jdk* /opt/jdk$JDK_VERSION &&     ln -s /opt/jdk$JDK_VERSION /opt/jdk', 'curl -fsSL ${JENKINS_URL} -o ${JENKINS_HOME}/jenkins.war &&     echo ""${JENKINS_SHA}  ${JENKINS_HOME}/jenkins.war"" | sha256sum -c - &&     chmod +x ${JENKINS_HOME}/jenkins.sh']"
intel-analytics/analytics-zoo,latest,/docker/jenkins-ci/jenkins-master/Dockerfile,ENTRYPOINT,1,"['[""/opt/work/jenkins/jenkins.sh""]']"
intel-analytics/analytics-zoo,latest,/docker/hyperzoo/Dockerfile,ARG,20,"['SPARK_VERSION=2.4.6', 'SPARK_HOME=/opt/spark', 'JDK_VERSION=8u192', 'JDK_URL=your_jdk_url', 'BIGDL_VERSION=0.13.0', 'ANALYTICS_ZOO_VERSION=0.12.0-SNAPSHOT', 'TINI_VERSION=v0.18.0', 'SPARK_VERSION', 'JDK_VERSION', 'JDK_URL', 'SPARK_HOME', 'SPARK_VERSION', 'BIGDL_VERSION', 'ANALYTICS_ZOO_VERSION', 'ANALYTICS_ZOO_VERSION', 'ANALYTICS_ZOO_VERSION', 'BIGDL_VERSION', 'SPARK_VERSION', 'SPARK_HOME', 'TINI_VERSION']"
intel-analytics/analytics-zoo,latest,/docker/hyperzoo/Dockerfile,FROM,4,"['ubuntu:18.04 as spark', 'ubuntu:18.04 as analytics-zoo', 'ubuntu:18.04 as copies-layer', 'ubuntu:18.04']"
intel-analytics/analytics-zoo,latest,/docker/hyperzoo/Dockerfile,ENV,39,"['TINI_VERSION                        v0.18.0', 'SPARK_VERSION                       ${SPARK_VERSION}', 'SPARK_HOME                          ${SPARK_HOME}', 'SPARK_VERSION               ${SPARK_VERSION}', 'BIGDL_VERSION               ${BIGDL_VERSION}', 'ANALYTICS_ZOO_VERSION               ${ANALYTICS_ZOO_VERSION}', 'ANALYTICS_ZOO_HOME                  /opt/analytics-zoo-${ANALYTICS_ZOO_VERSION}', 'ANALYTICS_ZOO_VERSION               ${ANALYTICS_ZOO_VERSION}', 'SPARK_HOME                          ${SPARK_HOME}', 'SPARK_VERSION                       ${SPARK_VERSION}', 'ANALYTICS_ZOO_HOME                  /opt/analytics-zoo-${ANALYTICS_ZOO_VERSION}', 'FLINK_HOME                          /opt/flink-${FLINK_VERSION}', 'OMP_NUM_THREADS                     4', 'NOTEBOOK_PORT                       12345', 'NOTEBOOK_TOKEN                      1234qwer', 'RUNTIME_SPARK_MASTER                local[4]', 'RUNTIME_K8S_SERVICE_ACCOUNT         spark', 'RUNTIME_K8S_SPARK_IMAGE             intelanalytics/hyper-zoo:${ANALYTICS_ZOO_VERSION}-${SPARK_VERSION}', 'RUNTIME_DRIVER_HOST                 localhost', 'RUNTIME_DRIVER_PORT                 54321', 'RUNTIME_EXECUTOR_CORES              4', 'RUNTIME_EXECUTOR_MEMORY             20g', 'RUNTIME_EXECUTOR_INSTANCES          1', 'RUNTIME_TOTAL_EXECUTOR_CORES        4', 'RUNTIME_DRIVER_CORES                4', 'RUNTIME_DRIVER_MEMORY               10g', 'RUNTIME_PERSISTENT_VOLUME_CLAIM     myvolumeclaim', 'SPARK_HOME                          /opt/spark', 'HADOOP_CONF_DIR                     /opt/hadoop-conf', 'BIGDL_VERSION                       ${BIGDL_VERSION}', 'BIGDL_CLASSPATH                     ${ANALYTICS_ZOO_HOME}/lib/analytics-zoo-bigdl_${BIGDL_VERSION}-spark_${SPARK_VERSION}-${ANALYTICS_ZOO_VERSION}-jar-with-dependencies.jar', 'JAVA_HOME                           /opt/jdk', 'REDIS_HOME                          /opt/redis-5.0.5', 'CS_HOME                             /opt/work/cluster-serving', 'PYTHONPATH                          ${ANALYTICS_ZOO_HOME}/lib/analytics-zoo-bigdl_${BIGDL_VERSION}-spark_${SPARK_VERSION}-${ANALYTICS_ZOO_VERSION}-python-api.zip:${SPARK_HOME}/python/lib/pyspark.zip:${SPARK_HOME}/python/lib/py4j-*.zip:${CS_HOME}/serving-python.zip:/opt/models/research/slim', 'PATH                                ${ANALYTICS_ZOO_HOME}/bin/cluster-serving:${JAVA_HOME}/bin:/root/miniconda3/bin:${PATH}', 'TINI_VERSION                        ${TINI_VERSION}', 'LC_ALL                              C.UTF-8', 'LANG                                C.UTF-8']"
intel-analytics/analytics-zoo,latest,/docker/hyperzoo/Dockerfile,RUN,7,"['apt-get update --fix-missing &&     apt-get install -y apt-utils vim curl nano wget unzip maven git &&     wget $JDK_URL &&     gunzip jdk-$JDK_VERSION-linux-x64.tar.gz &&     tar -xf jdk-$JDK_VERSION-linux-x64.tar -C /opt &&     rm jdk-$JDK_VERSION-linux-x64.tar &&     mv /opt/jdk* /opt/jdk$JDK_VERSION &&     ln -s /opt/jdk$JDK_VERSION /opt/jdk &&     wget https://archive.apache.org/dist/spark/spark-${SPARK_VERSION}/spark-${SPARK_VERSION}-bin-hadoop2.7.tgz &&     tar -zxvf spark-${SPARK_VERSION}-bin-hadoop2.7.tgz &&     mv spark-${SPARK_VERSION}-bin-hadoop2.7 /opt/spark &&     rm spark-${SPARK_VERSION}-bin-hadoop2.7.tgz &&     cp /opt/spark/kubernetes/dockerfiles/spark/entrypoint.sh /opt', 'ln -fs /bin/bash /bin/sh', 'if [ $SPARK_VERSION = ""3.1.2"" ]; then         rm $SPARK_HOME/jars/okhttp-*.jar &&         wget -P $SPARK_HOME/jars https://repo1.maven.org/maven2/com/squareup/okhttp3/okhttp/3.8.0/okhttp-3.8.0.jar;     elif [ $SPARK_VERSION = ""2.4.6"" ]; then         rm $SPARK_HOME/jars/kubernetes-client-*.jar &&         wget -P $SPARK_HOME/jars https://repo1.maven.org/maven2/io/fabric8/kubernetes-client/4.4.2/kubernetes-client-4.4.2.jar;     fi', 'apt-get update --fix-missing &&     apt-get install -y apt-utils vim curl nano wget unzip maven git', 'chmod a+x /opt/download-analytics-zoo.sh &&     mkdir -p /opt/analytics-zoo-examples/python', ""/opt/download-analytics-zoo.sh &&     rm analytics-zoo-bigdl*.zip &&     unzip $ANALYTICS_ZOO_HOME/lib/*.zip 'zoo/examples/*' -d /opt/analytics-zoo-examples/python &&     mv /opt/analytics-zoo-examples/python/zoo/examples/* /opt/analytics-zoo-examples/python &&     rm -rf /opt/analytics-zoo-examples/python/zoo/examples"", 'mkdir -p /opt/analytics-zoo-examples/python &&     mkdir -p /opt/analytics-zoo-examples/scala &&     apt-get update --fix-missing &&     apt-get install -y apt-utils vim curl nano wget unzip maven git &&     apt-get install -y gcc g++ make &&     apt-get install -y libsm6 libxext6 libxrender-dev &&     rm /bin/sh &&     ln -sv /bin/bash /bin/sh &&     echo ""auth required pam_wheel.so use_uid"" >> /etc/pam.d/su &&     chgrp root /etc/passwd && chmod ug+rw /etc/passwd &&     apt-get install -y python3-minimal &&     apt-get install -y build-essential python3 python3-setuptools python3-dev python3-pip &&     pip3 install --no-cache-dir --upgrade pip &&     pip install --no-cache-dir --upgrade setuptools &&     pip install --no-cache-dir numpy==1.18.1 scipy &&     pip install --no-cache-dir pandas==1.0.3 &&     pip install --no-cache-dir scikit-learn matplotlib seaborn jupyter jupyterlab requests h5py &&     ln -s /usr/bin/python3 /usr/bin/python &&     pip uninstall -y -q tornado &&     pip install --no-cache-dir tornado &&     python3 -m ipykernel.kernelspec &&     pip install --no-cache-dir tensorboard &&     pip install --no-cache-dir jep &&     pip install --no-cache-dir cloudpickle &&     pip install --no-cache-dir opencv-python &&     pip install --no-cache-dir pyyaml &&     pip install --no-cache-dir redis &&     pip install --no-cache-dir ray[tune]==1.2.0 &&     pip install --no-cache-dir Pillow==6.1 &&     pip install --no-cache-dir psutil aiohttp &&     pip install --no-cache-dir py4j &&     pip install --no-cache-dir cmake==3.16.3 &&     pip install --no-cache-dir torch==1.7.1 torchvision==0.8.2 &&     pip install --no-cache-dir horovod==0.19.2 &&     pip install --no-cache-dir pyarrow &&     pip install opencv-python==4.2.0.34 &&     pip install aioredis==1.1.0 &&     pip install tensorflow==2.4.0 &&     chmod a+x /opt/start-notebook-spark.sh &&     chmod a+x /opt/start-notebook-k8s.sh &&     chmod +x /sbin/tini &&     cp /sbin/tini /usr/bin/tini']"
intel-analytics/analytics-zoo,latest,/docker/hyperzoo/Dockerfile,ADD,4,"['https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini /sbin/tini', './download-analytics-zoo.sh /opt', './start-notebook-spark.sh /opt', './start-notebook-k8s.sh /opt']"
intel-analytics/analytics-zoo,latest,/docker/hyperzoo/Dockerfile,COPY,7,"['--from=analytics-zoo /opt/analytics-zoo-${ANALYTICS_ZOO_VERSION} /opt/analytics-zoo-${ANALYTICS_ZOO_VERSION}', '--from=analytics-zoo /opt/analytics-zoo-examples/python /opt/analytics-zoo-examples/python', '--from=spark /opt/jdk /opt/jdk', '--from=spark /opt/spark /opt/spark', '--from=spark /opt/spark/kubernetes/dockerfiles/spark/entrypoint.sh /opt', '--from=copies-layer /opt /opt', '--from=spark /sbin/tini /sbin/tini']"
intel-analytics/analytics-zoo,latest,/docker/hyperzoo/Dockerfile,MAINTAINER,1,['The Analytics-Zoo Authors https://github.com/intel-analytics/analytics-zoo']
intel-analytics/analytics-zoo,latest,/docker/hyperzoo/Dockerfile,WORKDIR,1,['/opt/spark/work-dir']
intel-analytics/analytics-zoo,latest,/docker/hyperzoo/Dockerfile,ENTRYPOINT,1,"['[ ""/opt/entrypoint.sh"" ]']"
intel-analytics/analytics-zoo,latest,/ppml/trusted-realtime-ml/scala/docker-graphene/Dockerfile,FROM,4,"['ubuntu:18.04 AS graphene', 'ubuntu:18.04 as flink', 'ubuntu:18.04 as analytics-zoo', 'ubuntu:18.04']"
intel-analytics/analytics-zoo,latest,/ppml/trusted-realtime-ml/scala/docker-graphene/Dockerfile,ARG,16,"['GRAPHENE_BRANCH=branch-1.2-rc1', 'FLINK_VERSION=1.11.3', 'JDK_VERSION=8u192', 'JDK_URL=your_jdk_url', 'HTTP_PROXY_HOST', 'HTTP_PROXY_PORT', 'HTTPS_PROXY_HOST', 'HTTPS_PROXY_PORT', 'ANALYTICS_ZOO_VERSION=0.12.0-SNAPSHOT', 'BIGDL_VERSION=0.13.0', 'SPARK_VERSION=2.4.6', 'SPARK_MAJOR_VERSION=2.4', 'ANALYTICS_ZOO_VERSION=0.12.0-SNAPSHOT', 'BIGDL_VERSION=0.13.0', 'SPARK_VERSION=2.4.6', 'FLINK_VERSION=1.11.3']"
intel-analytics/analytics-zoo,latest,/ppml/trusted-realtime-ml/scala/docker-graphene/Dockerfile,RUN,20,"['env DEBIAN_FRONTEND=noninteractive apt-get update &&     env DEBIAN_FRONTEND=noninteractive apt-get install -y         autoconf bison build-essential coreutils gawk git wget         python3 python3-pip libcurl4-openssl-dev         libprotobuf-c-dev protobuf-c-compiler python3-protobuf wget', 'git clone https://github.com/analytics-zoo/graphene.git /graphene', 'cd /graphene &&     git fetch origin $GRAPHENE_BRANCH &&     git checkout $GRAPHENE_BRANCH', 'pip3 install ninja meson &&     python3 -m pip install toml==0.10.2 click jinja2', 'cd /graphene/Pal/src/host/Linux-SGX &&     git clone https://github.com/intel/SGXDataCenterAttestationPrimitives.git linux-sgx-driver &&     cd linux-sgx-driver &&     git checkout DCAP_1.7 &&     cp -r driver/linux/* .', 'cd /graphene &&     make &&     ISGX_DRIVER_PATH=/graphene/Pal/src/host/Linux-SGX/linux-sgx-driver make -s -j4 SGX=1 &&     meson setup build/ --prefix=""/graphene/meson_build_output""     --buildtype=release -Ddirect=enabled -Dsgx=enabled  &&     ninja -C build/ &&     ninja -C build/ install', '/graphene/Scripts/download --output redis.tar.gz --sha256 f7ded6c27d48c20bc78e797046c79b6bc411121f0c2d7eead9fea50d6b0b6290 --url https://github.com/antirez/redis/archive/6.0.5.tar.gz', 'for f in $(find /graphene/Runtime -type l); do cp --remove-destination $(realpath $f) $f; done', 'apt-get update --fix-missing &&     apt-get install -y apt-utils wget unzip', 'wget $JDK_URL &&     gunzip jdk-$JDK_VERSION-linux-x64.tar.gz &&     tar -xf jdk-$JDK_VERSION-linux-x64.tar -C /opt &&     rm jdk-$JDK_VERSION-linux-x64.tar &&     mv /opt/jdk* /opt/jdk$JDK_VERSION &&     ln -s /opt/jdk$JDK_VERSION /opt/jdk', 'cd / && wget -c https://downloads.lightbend.com/scala/2.11.8/scala-2.11.8.tgz &&     (cd / && gunzip < scala-2.11.8.tgz)|(cd /opt && tar -xvf -) &&     rm /scala-2.11.8.tgz', 'cd /opt &&     wget https://archive.apache.org/dist/flink/flink-${FLINK_VERSION}/flink-${FLINK_VERSION}-bin-scala_2.11.tgz &&     tar -zxvf flink-${FLINK_VERSION}-bin-scala_2.11.tgz &&     rm flink-${FLINK_VERSION}-bin-scala_2.11.tgz', 'ls -al /opt', 'apt-get update --fix-missing &&     apt-get install -y apt-utils curl wget unzip git maven', 'git clone --single-branch --branch master https://github.com/intel-analytics/analytics-zoo.git &&     cd analytics-zoo/zoo &&     export MAVEN_OPTS=""-XX:ReservedCodeCacheSize=512m -XX:MaxPermSize=3G         -Dhttp.proxyHost=$HTTP_PROXY_HOST         -Dhttp.proxyPort=$HTTP_PROXY_PORT         -Dhttps.proxyHost=$HTTPS_PROXY_HOST         -Dhttps.proxyPort=$HTTPS_PROXY_PORT"" &&     mvn clean package -DskipTests -Dspark.version=${SPARK_VERSION}         -Dbigdl.artifactId=bigdl-SPARK_$SPARK_MAJOR_VERSION -P spark_2.4+ -Dbigdl.version=${BIGDL_VERSION}', 'cd /opt &&     wget -c ""https://sourceforge.net/projects/analytics-zoo/files/analytics-zoo-data/ILSVRC2012_val_00000001.JPEG/download"" -O ILSVRC2012_val_00000001.JPEG &&     mkdir resnet50 &&     cd resnet50 &&     wget -c ""https://sourceforge.net/projects/analytics-zoo/files/analytics-zoo-models/openvino/2018_R5/resnet_v1_50.bin/download"" -O resnet_v1_50.bin &&     wget -c ""https://sourceforge.net/projects/analytics-zoo/files/analytics-zoo-models/openvino/2018_R5/resnet_v1_50.xml/download"" -O resnet_v1_50.xml', 'mkdir -p /graphene &&     mkdir -p /graphene/Runtime &&     mkdir -p /graphene/python &&     mkdir -p /graphene/Tools &&     mkdir -p /graphene/Pal/src &&     mkdir -p /graphene/meson_build_output &&     mkdir -p /ppml/trusted-realtime-ml/redis &&     mkdir -p /ppml/trusted-realtime-ml/redis/work/keys &&     mkdir -p /ppml/trusted-realtime-ml/redis/work/password &&     mkdir -p /ppml/trusted-realtime-ml/java/work &&     mkdir -p /ppml/trusted-realtime-ml/java/work/keys &&     mkdir -p /ppml/trusted-realtime-ml/java/work/password &&     mkdir -p /ppml/trusted-realtime-ml/java/work/data &&     mkdir -p /ppml/trusted-realtime-ml/java/work/models &&     mkdir -p /ppml/trusted-realtime-ml/java/work/benchmark &&     mkdir -p /root/.keras/datasets &&     mkdir -p /root/.zinc &&     mkdir -p /root/.m2 &&     mkdir -p /graphene/Pal/src/host/Linux-SGX/signer', 'apt-get update --fix-missing &&     apt-get install -y apt-utils vim curl nano wget unzip maven git tree &&     apt-get install -y libsm6 make build-essential &&     apt-get install -y autoconf gawk bison libcurl4-openssl-dev python3-protobuf libprotobuf-c-dev protobuf-c-compiler &&     apt-get install -y openssl libssl-dev pkg-config &&     apt-get install -y netcat net-tools &&     apt-get install -y python3-minimal &&     apt-get install -y build-essential python3 python3-setuptools python3-dev python3-pip &&     pip3 install --upgrade pip &&     pip install --upgrade setuptools &&     ln -s /usr/bin/python3 /usr/bin/python &&     pip install --no-cache-dir ninja meson &&     python3 -m pip install toml==0.10.2 click jinja2', 'mkdir -p /ppml/trusted-realtime-ml/redis/src &&     tar -C /ppml/trusted-realtime-ml/redis/src --strip-components=1 -xf /ppml/trusted-realtime-ml/redis/redis.tar.gz &&     make BUILD_TLS=yes -C /ppml/trusted-realtime-ml/redis/src &&     cp /ppml/trusted-realtime-ml/redis/src/src/redis-server /ppml/trusted-realtime-ml/redis/redis-server', 'chmod a+x /ppml/trusted-realtime-ml/redis/init.sh &&     chmod a+x /ppml/trusted-realtime-ml/redis/clean.sh &&     chmod a+x /ppml/trusted-realtime-ml/redis/start-redis.sh &&     chmod a+x /ppml/trusted-realtime-ml/java/init.sh &&     chmod a+x /ppml/trusted-realtime-ml/java/clean.sh &&     chmod a+x /ppml/trusted-realtime-ml/java/start-flink-jobmanager.sh &&     chmod a+x /ppml/trusted-realtime-ml/java/start-flink-taskmanager.sh &&     chmod a+x /ppml/trusted-realtime-ml/java/start-http-frontend.sh &&     chmod a+x /ppml/trusted-realtime-ml/java/init-cluster-serving.sh &&     chmod a+x /ppml/trusted-realtime-ml/java/start-cluster-serving-job.sh &&     chmod a+x /ppml/trusted-realtime-ml/check-status.sh &&     chmod a+x /ppml/trusted-realtime-ml/start-all.sh']"
intel-analytics/analytics-zoo,latest,/ppml/trusted-realtime-ml/scala/docker-graphene/Dockerfile,ENV,32,"['FLINK_VERSION ${FLINK_VERSION}', 'ANALYTICS_ZOO_VERSION\t${ANALYTICS_ZOO_VERSION}', 'SPARK_VERSION\t\t${SPARK_VERSION}', 'BIGDL_VERSION\t\t${BIGDL_VERSION}', 'JAVA_HOME\t\t\t/opt/jdk8', 'PATH\t\t\t${JAVA_HOME}/bin:${PATH}', 'ANALYTICS_ZOO_VERSION\t\t${ANALYTICS_ZOO_VERSION}', 'SPARK_VERSION\t\t\t${SPARK_VERSION}', 'BIGDL_VERSION\t\t\t${BIGDL_VERSION}', 'JAVA_HOME\t\t\t\t/opt/jdk8', 'PATH\t\t\t\t/graphene/meson_build_output/bin:${JAVA_HOME}/bin:${PATH}', 'LOCAL_IP\t\t\t\t127.0.0.1', 'SGX_MEM_SIZE\t\t\t64G', 'REDIS_PORT\t\t\t\t6379', 'FLINK_VERSION\t\t\t${FLINK_VERSION}', 'FLINK_HOME\t\t\t\t/ppml/trusted-realtime-ml/java/work/flink-${FLINK_VERSION}', 'FLINK_JOB_MANAGER_IP\t\t127.0.0.1', 'FLINK_JOB_MANAGER_REST_PORT\t\t8081', 'FLINK_JOB_MANAGER_RPC_PORT\t\t6123', 'FLINK_TASK_MANAGER_IP\t\t127.0.0.1', 'FLINK_TASK_MANAGER_DATA_PORT\t6124', 'FLINK_BLOB_SERVER_PORT              6124', 'FLINK_TASK_MANAGER_RPC_PORT\t\t6125', 'FLINK_TASK_MANAGER_TASKSLOTS_NUM\t1', 'CORE_NUM                            2', 'TASKMANAGER_MEMORY_TASK_HEAP_SIZE   10gb', 'TASKMANAGER_MEMORY_MANAGED_SIZE     8192mb', 'XMX_SIZE                            10g', 'SGX_MODE                            sgx', 'PYTHONPATH\t${PYTHONPATH}:/graphene/meson_build_output/lib/python3.6/site-packages', 'LC_ALL\tC.UTF-8', 'LANG\tC.UTF-8']"
intel-analytics/analytics-zoo,latest,/ppml/trusted-realtime-ml/scala/docker-graphene/Dockerfile,COPY,19,"['--from=flink /opt/jdk  /opt/jdk8', '--from=graphene /graphene/Scripts /graphene/Scripts', '--from=graphene /graphene/Runtime/ /graphene/Runtime', '--from=graphene /graphene/python /graphene/python', '--from=graphene /graphene/Pal /graphene/Pal', '--from=graphene /graphene/Pal/src/host/Linux-SGX/generated_offsets.py /graphene/python/', '--from=graphene /graphene/Tools/argv_serializer /graphene/Tools', '--from=graphene /graphene/meson_build_output /graphene/meson_build_output', '--from=graphene /redis.tar.gz /ppml/trusted-realtime-ml/redis', '--from=flink /opt/jdk  /opt/jdk8', '--from=flink /opt/scala-2.11.8  /opt/scala-2.11.8', '--from=flink /opt/flink-${FLINK_VERSION} /ppml/trusted-realtime-ml/java/work/flink-${FLINK_VERSION}', '--from=analytics-zoo /analytics-zoo/zoo/target/analytics-zoo-bigdl_${BIGDL_VERSION}-spark_${SPARK_VERSION}-${ANALYTICS_ZOO_VERSION}-serving.jar /ppml/trusted-realtime-ml/java/work/analytics-zoo-bigdl_${BIGDL_VERSION}-spark_${SPARK_VERSION}-${ANALYTICS_ZOO_VERSION}-serving.jar', '--from=analytics-zoo /analytics-zoo/zoo/target/analytics-zoo-bigdl_${BIGDL_VERSION}-spark_${SPARK_VERSION}-${ANALYTICS_ZOO_VERSION}-http.jar /ppml/trusted-realtime-ml/java/work/analytics-zoo-bigdl_${BIGDL_VERSION}-spark_${SPARK_VERSION}-${ANALYTICS_ZOO_VERSION}-http.jar', '--from=analytics-zoo /opt/resnet50/ /ppml/trusted-realtime-ml/java/work/models/resnet50', '--from=analytics-zoo /opt/ILSVRC2012_val_00000001.JPEG /ppml/trusted-realtime-ml/java/work/data/ILSVRC2012_val_00000001.JPEG', '--from=analytics-zoo /analytics-zoo/scripts/cluster-serving/config.yaml /ppml/trusted-realtime-ml/java/config.yaml', '--from=analytics-zoo /analytics-zoo/scripts/cluster-serving/perf-benchmark/e2e_throughput.py /ppml/trusted-realtime-ml/java/work/benchmark/e2e_throughput.py', '--from=analytics-zoo /analytics-zoo/scripts/cluster-serving/perf-benchmark/requirement.yml /ppml/trusted-realtime-ml/java/work/benchmark/requirement.yml']"
intel-analytics/analytics-zoo,latest,/ppml/trusted-realtime-ml/scala/docker-graphene/Dockerfile,ADD,18,"['./Makefile /ppml/trusted-realtime-ml/redis/Makefile', './bash.manifest.template /ppml/trusted-realtime-ml/redis/bash.manifest.template', './init.sh /ppml/trusted-realtime-ml/redis/init.sh', './clean.sh /ppml/trusted-realtime-ml/redis/clean.sh', './start-redis.sh /ppml/trusted-realtime-ml/redis/start-redis.sh', './Makefile /ppml/trusted-realtime-ml/java/Makefile', './bash.manifest.template /ppml/trusted-realtime-ml/java/bash.manifest.template', './init.sh /ppml/trusted-realtime-ml/java/init.sh', './clean.sh /ppml/trusted-realtime-ml/java/clean.sh', './start-flink-jobmanager.sh /ppml/trusted-realtime-ml/java/start-flink-jobmanager.sh', './start-flink-taskmanager.sh /ppml/trusted-realtime-ml/java/start-flink-taskmanager.sh', './start-http-frontend.sh /ppml/trusted-realtime-ml/java/start-http-frontend.sh', './servables.yaml /ppml/trusted-realtime-ml/java/work/servables.yaml', './init-cluster-serving.sh /ppml/trusted-realtime-ml/java/init-cluster-serving.sh', './start-cluster-serving-job.sh /ppml/trusted-realtime-ml/java/start-cluster-serving-job.sh', './check-status.sh /ppml/trusted-realtime-ml/check-status.sh', './start-all.sh /ppml/trusted-realtime-ml/start-all.sh', './init-benchmark.sh /ppml/trusted-realtime-ml/java/work/benchmark/init-benchmark.sh']"
intel-analytics/analytics-zoo,latest,/ppml/trusted-realtime-ml/scala/docker-occlum/Dockerfile,FROM,3,"['occlum/occlum:0.23.7-ubuntu18.04 as redis-tls', 'ubuntu:18.04 as analytics-zoo', 'ubuntu:18.04 as ppml']"
intel-analytics/analytics-zoo,latest,/ppml/trusted-realtime-ml/scala/docker-occlum/Dockerfile,WORKDIR,1,['/opt']
intel-analytics/analytics-zoo,latest,/ppml/trusted-realtime-ml/scala/docker-occlum/Dockerfile,RUN,13,"['apt-get update &&     DEBIAN_FRONTEND=""noninteractive"" apt-get install -y --no-install-recommends         git build-essential coreutils ca-certificates &&     apt-get clean', 'git clone https://github.com/openssl/openssl.git &&     cd openssl &&     git checkout tags/OpenSSL_1_1_1 -b OpenSSL_1_1_1 &&     ./config     --openssldir=/opt/ssl     --with-rand-seed=rdcpu     no-zlib no-async no-tests &&     make -j `getconf _NPROCESSORS_ONLN` && make install', 'git clone https://github.com/redis/redis.git &&     cd redis &&     git checkout 6.0.6 &&     make -j `getconf _NPROCESSORS_ONLN` BUILD_TLS=yes && make PREFIX=/opt/redis install', 'apt-get update &&     DEBIAN_FRONTEND=""noninteractive"" apt-get install -y --no-install-recommends         git build-essential coreutils ca-certificates openjdk-8-jdk wget unzip apt-utils curl maven &&     apt-get clean', 'cd /opt &&     wget https://archive.apache.org/dist/flink/flink-${FLINK_VERSION}/flink-${FLINK_VERSION}-bin-scala_2.11.tgz &&     tar -zxvf flink-${FLINK_VERSION}-bin-scala_2.11.tgz &&     rm flink-${FLINK_VERSION}-bin-scala_2.11.tgz', 'cd /opt && git clone --single-branch --branch master https://github.com/intel-analytics/analytics-zoo.git &&     cd analytics-zoo/zoo &&     export MAVEN_OPTS=""-XX:ReservedCodeCacheSize=512m -XX:MaxPermSize=3G         -Dhttp.proxyHost=$HTTP_PROXY_HOST         -Dhttp.proxyPort=$HTTP_PROXY_PORT         -Dhttps.proxyHost=$HTTPS_PROXY_HOST         -Dhttps.proxyPort=$HTTPS_PROXY_PORT"" &&     mvn clean package -DskipTests -Dspark.version=${SPARK_VERSION}         -Dbigdl.artifactId=bigdl-SPARK_$SPARK_MAJOR_VERSION -P spark_2.4+ -Dbigdl.version=${BIGDL_VERSION}', 'cd /opt &&     mkdir resnet50 &&     cd resnet50 &&     wget -c ""https://sourceforge.net/projects/analytics-zoo/files/analytics-zoo-models/openvino/2018_R5/resnet_v1_50.bin/download"" -O resnet_v1_50.bin &&     wget -c ""https://sourceforge.net/projects/analytics-zoo/files/analytics-zoo-models/openvino/2018_R5/resnet_v1_50.xml/download"" -O resnet_v1_50.xml', 'mkdir -p /opt/analytics-zoo', 'apt-get update &&     DEBIAN_FRONTEND=""noninteractive"" apt-get install -y --no-install-recommends         build-essential ca-certificates openjdk-11-jdk         curl tzdata wget netcat gnupg2 jq make gdb libfuse-dev libtool         libprotobuf-c-dev protobuf-c-compiler libcurl4-openssl-dev libprotobuf-dev', ""echo 'deb [arch=amd64] https://download.01.org/intel-sgx/sgx_repo/ubuntu bionic main' | tee /etc/apt/sources.list.d/intelsgx.list &&     wget -qO - https://download.01.org/intel-sgx/sgx_repo/ubuntu/intel-sgx-deb.key | apt-key add -"", ""echo 'deb [arch=amd64] https://occlum.io/occlum-package-repos/debian bionic main' | tee /etc/apt/sources.list.d/occlum.list &&     wget -qO - https://occlum.io/occlum-package-repos/debian/public.key | apt-key add -"", 'apt-get update &&     DEBIAN_FRONTEND=""noninteractive"" apt-get install -y --no-install-recommends         build-essential ca-certificates openjdk-11-jdk curl wget netcat net-tools         gnupg2 vim jq make gdb libfuse-dev libtool         libsgx-dcap-ql libsgx-epid libsgx-urts libsgx-quote-ex libsgx-uae-service         libsgx-dcap-quote-verify-dev         occlum &&     apt-get clean', 'echo ""source /etc/profile"" >> $HOME/.bashrc']"
intel-analytics/analytics-zoo,latest,/ppml/trusted-realtime-ml/scala/docker-occlum/Dockerfile,ARG,13,"['ANALYTICS_ZOO_VERSION=0.12.0-SNAPSHOT', 'BIGDL_VERSION=0.13.0', 'SPARK_VERSION=2.4.6', 'SPARK_MAJOR_VERSION=2.4', 'FLINK_VERSION=1.11.3', 'HTTP_PROXY_HOST', 'HTTP_PROXY_PORT', 'HTTPS_PROXY_HOST', 'HTTPS_PROXY_PORT', 'ANALYTICS_ZOO_VERSION=0.12.0-SNAPSHOT', 'BIGDL_VERSION=0.13.0', 'SPARK_VERSION=2.4.6', 'FLINK_VERSION=1.11.3']"
intel-analytics/analytics-zoo,latest,/ppml/trusted-realtime-ml/scala/docker-occlum/Dockerfile,ENV,22,"['ANALYTICS_ZOO_VERSION\t\t${ANALYTICS_ZOO_VERSION}', 'JAVA_HOME\t\t\t\t/usr/lib/jvm/java-8-openjdk-amd64', 'FLINK_VERSION\t\t\t${FLINK_VERSION}', 'FLINK_HOME\t\t\t\t/opt/flink-${FLINK_VERSION}', 'ANALYTICS_ZOO_VERSION\t\t${ANALYTICS_ZOO_VERSION}', 'SPARK_VERSION\t\t\t${SPARK_VERSION}', 'BIGDL_VERSION\t\t\t${BIGDL_VERSION}', 'JAVA_HOME\t\t\t\t/usr/lib/jvm/java-11-openjdk-amd64', 'PATH\t\t\t\t${JAVA_HOME}/bin:${PATH}', 'LOCAL_IP\t\t\t\t127.0.0.1', 'SGX_MEM_SIZE\t\t\t32G', 'REDIS_PORT\t\t\t\t6379', 'FLINK_VERSION\t\t\t${FLINK_VERSION}', 'FLINK_HOME\t\t\t\t/opt/flink-${FLINK_VERSION}', 'FLINK_JOB_MANAGER_IP\t\t127.0.0.1', 'FLINK_JOB_MANAGER_REST_PORT\t\t8081', 'FLINK_JOB_MANAGER_RPC_PORT\t\t6123', 'FLINK_TASK_MANAGER_IP\t\t127.0.0.1', 'FLINK_TASK_MANAGER_DATA_PORT\t6124', 'FLINK_TASK_MANAGER_RPC_PORT\t\t6125', 'FLINK_TASK_MANAGER_TASKSLOTS_NUM\t1', 'CORE_NUM                            2']"
intel-analytics/analytics-zoo,latest,/ppml/trusted-realtime-ml/scala/docker-occlum/Dockerfile,COPY,7,"['--from=redis-tls /opt/ssl /opt/ssl', '--from=redis-tls /opt/redis /opt/redis', '--from=redis-tls /opt/occlum/glibc /opt/occlum/glibc', '--from=analytics-zoo /opt/flink-${FLINK_VERSION} /opt/flink-${FLINK_VERSION}', '--from=analytics-zoo /opt/resnet50 /opt/resnet50', '--from=analytics-zoo /opt/analytics-zoo/zoo/target/analytics-zoo-bigdl_${BIGDL_VERSION}-spark_${SPARK_VERSION}-${ANALYTICS_ZOO_VERSION}-serving.jar /opt/analytics-zoo/analytics-zoo-bigdl_${BIGDL_VERSION}-spark_${SPARK_VERSION}-${ANALYTICS_ZOO_VERSION}-serving.jar', '--from=analytics-zoo /opt/analytics-zoo/zoo/target/analytics-zoo-bigdl_${BIGDL_VERSION}-spark_${SPARK_VERSION}-${ANALYTICS_ZOO_VERSION}-http.jar /opt/analytics-zoo/analytics-zoo-bigdl_${BIGDL_VERSION}-spark_${SPARK_VERSION}-${ANALYTICS_ZOO_VERSION}-http.jar']"
intel-analytics/analytics-zoo,latest,/ppml/trusted-realtime-ml/scala/docker-occlum/Dockerfile,ADD,14,"['./cluster-serving-config.yaml /opt/config.yaml', './servables.yaml /opt/servables.yaml', './init-occlum-taskmanager.sh /opt/init-occlum-taskmanager.sh', './start-redis.sh /opt/start-redis.sh', './check-status.sh /opt/check-status.sh', './start-flink-jobmanager.sh /opt/start-flink-jobmanager.sh', './start-flink-taskmanager.sh /opt/start-flink-taskmanager.sh', './hosts /opt/hosts', './start-cluster-serving-job.sh /opt/start-cluster-serving-job.sh', './start-http-frontend.sh /opt/start-http-frontend.sh', './start-all.sh /opt/start-all.sh', './start-local-cluster-serving.sh /opt/start-local-cluster-serving.sh', './start-distributed-cluster-serving.sh /opt/start-distributed-cluster-serving.sh', './stop-distributed-cluster-serving.sh /opt/stop-distributed-cluster-serving.sh']"
intel-analytics/analytics-zoo,latest,/ppml/trusted-big-data-ml/python/docker-graphene/Dockerfile,FROM,5,"['ubuntu:18.04 AS graphene', 'ubuntu:18.04 as spark', 'ubuntu:18.04 AS bigdl', 'ubuntu:18.04 as analytics-zoo', 'ubuntu:18.04']"
intel-analytics/analytics-zoo,latest,/ppml/trusted-big-data-ml/python/docker-graphene/Dockerfile,ARG,18,"['GRAPHENE_BRANCH=branch-210913', 'HTTP_PROXY_HOST', 'HTTP_PROXY_PORT', 'HTTPS_PROXY_HOST', 'HTTPS_PROXY_PORT', 'SPARK_VERSION=3.1.2', 'JDK_VERSION=8u192', 'JDK_URL=your_jdk_url', 'HTTP_PROXY_HOST', 'HTTP_PROXY_PORT', 'HTTPS_PROXY_HOST', 'HTTPS_PROXY_PORT', 'ANALYTICS_ZOO_VERSION=0.12.0-SNAPSHOT', 'BIGDL_VERSION=0.13.0', 'SPARK_VERSION=3.1.2', 'ANALYTICS_ZOO_VERSION=0.12.0-SNAPSHOT', 'SPARK_VERSION=3.1.2', 'TINI_VERSION=v0.18.0']"
intel-analytics/analytics-zoo,latest,/ppml/trusted-big-data-ml/python/docker-graphene/Dockerfile,RUN,25,"['env DEBIAN_FRONTEND=noninteractive apt-get update &&     env DEBIAN_FRONTEND=noninteractive apt-get install -y         autoconf bison build-essential coreutils gawk git wget         python3 python3-pip libcurl4-openssl-dev         libprotobuf-c-dev protobuf-c-compiler python3-protobuf wget', 'git clone https://github.com/analytics-zoo/graphene.git /graphene', 'cd /graphene &&     git fetch origin $GRAPHENE_BRANCH &&     git checkout $GRAPHENE_BRANCH', 'pip3 install ninja meson &&     python3 -m pip install toml==0.10.2 click jinja2', 'cd /graphene/Pal/src/host/Linux-SGX &&     git clone https://github.com/intel/SGXDataCenterAttestationPrimitives.git linux-sgx-driver &&     cd linux-sgx-driver &&     git checkout DCAP_1.7 &&     cp -r driver/linux/* .', 'cd /graphene &&     make &&     ISGX_DRIVER_PATH=/graphene/Pal/src/host/Linux-SGX/linux-sgx-driver make -s -j4 SGX=1 &&     meson setup build/ --prefix=""/graphene/meson_build_output""     --buildtype=release -Ddirect=enabled -Dsgx=enabled  &&     ninja -C build/ &&     ninja -C build/ install', 'for f in $(find /graphene/Runtime -type l); do cp --remove-destination $(realpath $f) $f; done', 'apt-get update --fix-missing &&     apt-get install -y apt-utils wget unzip patch zip git maven', 'wget $JDK_URL &&     gunzip jdk-$JDK_VERSION-linux-x64.tar.gz &&     tar -xf jdk-$JDK_VERSION-linux-x64.tar -C /opt &&     rm jdk-$JDK_VERSION-linux-x64.tar &&     mv /opt/jdk* /opt/jdk$JDK_VERSION &&     ln -s /opt/jdk$JDK_VERSION /opt/jdk', 'cd / && wget -c https://downloads.lightbend.com/scala/2.11.8/scala-2.11.8.tgz &&     (cd / && gunzip < scala-2.11.8.tgz)|(cd /opt && tar -xvf -) &&     rm /scala-2.11.8.tgz', 'cd /opt &&     wget https://archive.apache.org/dist/maven/maven-3/3.6.3/binaries/apache-maven-3.6.3-bin.tar.gz &&     tar -zxvf apache-maven-3.6.3-bin.tar.gz', ""cd /opt &&     wget https://archive.apache.org/dist/spark/spark-${SPARK_VERSION}/spark-${SPARK_VERSION}-bin-hadoop3.2.tgz &&     tar -zxvf spark-${SPARK_VERSION}-bin-hadoop3.2.tgz &&     mv spark-${SPARK_VERSION}-bin-hadoop3.2 spark-${SPARK_VERSION} &&     rm spark-${SPARK_VERSION}-bin-hadoop3.2.tgz &&     cp spark-${SPARK_VERSION}/conf/log4j.properties.template spark-${SPARK_VERSION}/conf/log4j.properties &&     echo $'\\nlog4j.logger.io.netty=ERROR' >> spark-${SPARK_VERSION}/conf/log4j.properties &&     wget -O spark-network-common_2.12-${SPARK_VERSION}.jar https://master.dl.sourceforge.net/project/analytics-zoo/analytics-zoo-data/spark-network-common_2.12-${SPARK_VERSION}.jar &&     mv spark-network-common_2.12-${SPARK_VERSION}.jar spark-${SPARK_VERSION}/jars &&     mv spark-${SPARK_VERSION}/python/lib/pyspark.zip spark-${SPARK_VERSION}/python/lib/pyspark.zip.bac &&     patch spark-${SPARK_VERSION}/python/pyspark/rdd.py /opt/rdd.patch &&     patch spark-${SPARK_VERSION}/python/pyspark/shuffle.py /opt/shuffle.patch &&     cd spark-${SPARK_VERSION}/python &&     zip -r lib/pyspark.zip pyspark"", 'cd /opt &&     git clone https://github.com/apache/spark.git &&     cd spark &&     git checkout tags/v3.1.2 -b branch-3.1.2 &&     git apply /opt/spark-3.1.2.patch &&     git status &&     export MAVEN_OPTS=""-Xmx2g -XX:ReservedCodeCacheSize=512m         -Dhttp.proxyHost=$HTTP_PROXY_HOST         -Dhttp.proxyPort=$HTTP_PROXY_PORT         -Dhttps.proxyHost=$HTTPS_PROXY_HOST         -Dhttps.proxyPort=$HTTPS_PROXY_PORT"" &&     /opt/apache-maven-3.6.3/bin/mvn -T 16 -DskipTests=true clean install -pl core &&     cd resource-managers/kubernetes/core &&     /opt/apache-maven-3.6.3/bin/mvn -T 16 -DskipTests=true clean package &&     ls /opt/spark/core/target/spark-core_2.12-$SPARK_VERSION.jar &&     ls /opt/spark/resource-managers/kubernetes/core/target/spark-kubernetes_2.12-3.1.2.jar', 'cd /opt &&     apt-get install -y build-essential &&     wget https://github.com/protocolbuffers/protobuf/releases/download/v2.5.0/protobuf-2.5.0.tar.bz2 &&     tar jxvf protobuf-2.5.0.tar.bz2 &&     cd protobuf-2.5.0 &&     ./configure &&     make &&     make check &&     export LD_LIBRARY_PATH=/usr/local/lib &&     make install &&     protoc --version &&     cd /opt &&     git clone https://github.com/apache/hadoop.git &&     cd hadoop &&     git checkout rel/release-3.2.0 -b branch-3.2.0 &&     cd hadoop-common-project/hadoop-common &&     patch src/main/java/org/apache/hadoop/util/Shell.java /opt/hadoop-common-shell.patch &&     export MAVEN_OPTS=""-Xmx2g -XX:ReservedCodeCacheSize=512m         -Dhttp.proxyHost=$HTTP_PROXY_HOST         -Dhttp.proxyPort=$HTTP_PROXY_PORT         -Dhttps.proxyHost=$HTTPS_PROXY_HOST         -Dhttps.proxyPort=$HTTPS_PROXY_PORT"" &&     /opt/apache-maven-3.6.3/bin/mvn -T 16 -DskipTests=true clean package &&     ls /opt/hadoop/hadoop-common-project/hadoop-common/target/hadoop-common-3.2.0.jar', 'apt-get update --fix-missing &&     apt-get install -y apt-utils maven git', 'git clone https://github.com/intel-analytics/BigDL.git &&     cd BigDL &&     git apply /bigdl.lenet.training.patch &&     echo $\'\\nlog4j.logger.io.netty=ERROR\' >> ./spark/dl/src/main/resources/log4j.properties &&     git status &&     export MAVEN_OPTS=""-Xmx2g -XX:ReservedCodeCacheSize=512m         -Dhttp.proxyHost=$HTTP_PROXY_HOST         -Dhttp.proxyPort=$HTTP_PROXY_PORT         -Dhttps.proxyHost=$HTTPS_PROXY_HOST         -Dhttps.proxyPort=$HTTPS_PROXY_PORT"" &&     bash make-dist.sh -P spark_2.x', 'apt-get update --fix-missing &&     apt-get install -y apt-utils curl wget unzip git', 'wget https://raw.githubusercontent.com/intel-analytics/analytics-zoo/master/docker/zoo/download-analytics-zoo.sh &&     chmod a+x ./download-analytics-zoo.sh', './download-analytics-zoo.sh &&     cd /opt && git clone --depth 1 https://github.com/intel-analytics/analytics-zoo.git', 'patch /opt/analytics-zoo/pyzoo/zoo/examples/orca/data/spark_pandas.py /opt/orca.data.patch &&     patch /opt/analytics-zoo/pyzoo/zoo/examples/orca/learn/tf/basic_text_classification/basic_text_classification.py /opt/orca.learn.tf.text.patch &&     patch /opt/analytics-zoo/pyzoo/zoo/examples/orca/learn/tf/transfer_learning/transfer_learning.py /opt/orca.learn.tf.transfer.patch', 'mkdir -p /graphene &&     mkdir -p /graphene/Runtime &&     mkdir -p /graphene/python &&     mkdir -p /graphene/Tools &&     mkdir -p /graphene/Pal/src &&     mkdir -p /graphene/meson_build_output &&     mkdir -p /ppml/trusted-big-data-ml/work &&     mkdir -p /ppml/trusted-big-data-ml/work/lib &&     mkdir -p /ppml/trusted-big-data-ml/work/keys &&     mkdir -p /ppml/trusted-big-data-ml/work/password &&     mkdir -p /ppml/trusted-big-data-ml/work/data &&     mkdir -p /ppml/trusted-big-data-ml/work/models &&     mkdir -p /ppml/trusted-big-data-ml/work/apps &&     mkdir -p /ppml/trusted-big-data-ml/work/examples/bigdl &&     mkdir -p /root/.keras/datasets &&     mkdir -p /root/.zinc &&     mkdir -p /root/.m2 &&     mkdir -p /graphene/Pal/src/host/Linux-SGX/signer', 'apt-get update --fix-missing &&     apt-get install -y apt-utils vim curl nano wget unzip maven git tree zip &&     apt-get install -y libsm6 make build-essential &&     apt-get install -y autoconf gawk bison libcurl4-openssl-dev python3-protobuf libprotobuf-c-dev protobuf-c-compiler &&     apt-get install -y netcat net-tools', 'apt-get install -y python3-minimal &&     apt-get install -y build-essential python3 python3-setuptools python3-dev python3-pip &&     pip3 install --upgrade pip &&     pip install --upgrade setuptools &&     pip install --no-cache-dir numpy scipy &&     pip install --no-cache-dir --no-binary pandas -I pandas &&     pip install --no-cache-dir scikit-learn matplotlib seaborn jupyter wordcloud moviepy requests h5py opencv-python tensorflow==1.15.0 &&     pip install --no-cache-dir torch==1.8.1 torchvision==0.9.1 -f https://download.pytorch.org/whl/torch_stable.html &&     ln -s /usr/bin/python3 /usr/bin/python &&     pip uninstall -y -q tornado &&     pip install --no-cache-dir tornado &&     pip install --no-cache-dir filelock &&     pip install --no-cache-dir tensorflow_datasets==3.2.0 h5py==2.10.0 &&     pip install --no-cache-dir pyarrow &&     pip install --no-cache-dir ninja meson &&     pip install --no-cache-dir psutil &&     python3 -m pip install toml==0.10.2 click jinja2 &&     python3 -m ipykernel.kernelspec', ""zip -u /ppml/trusted-big-data-ml/work/analytics-zoo-0.12.0-SNAPSHOT/lib/analytics-zoo-bigdl_0.13.0-spark_$SPARK_VERSION-0.12.0-SNAPSHOT-jar-with-dependencies.jar ./tracker.py &&     unzip /ppml/trusted-big-data-ml/work/analytics-zoo-0.12.0-SNAPSHOT/lib/analytics-zoo-bigdl_0.13.0-spark_$SPARK_VERSION-0.12.0-SNAPSHOT-jar-with-dependencies.jar log4j.properties &&     echo $'\\nlog4j.logger.io.netty=ERROR' >> log4j.properties &&     zip -u /ppml/trusted-big-data-ml/work/analytics-zoo-0.12.0-SNAPSHOT/lib/analytics-zoo-bigdl_0.13.0-spark_$SPARK_VERSION-0.12.0-SNAPSHOT-jar-with-dependencies.jar log4j.properties &&     patch /usr/local/lib/python3.6/dist-packages/dill/_dill.py ./_dill.py.patch &&     patch /usr/lib/python3.6/uuid.py ./python-uuid.patch &&     rm $SPARK_HOME/jars/spark-core_2.12-$SPARK_VERSION.jar &&     rm $SPARK_HOME/jars/spark-kubernetes_2.12-$SPARK_VERSION.jar &&     rm $SPARK_HOME/jars/hadoop-common-3.2.0.jar &&     mv /opt/spark-core_2.12-$SPARK_VERSION.jar $SPARK_HOME/jars/spark-core_2.11-$SPARK_VERSION.jar &&     mv /opt/spark-kubernetes_2.12-$SPARK_VERSION.jar $SPARK_HOME/jars/spark-kubernetes_2.12-$SPARK_VERSION.jar &&     mv /opt/hadoop-common-3.2.0.jar $SPARK_HOME/jars/hadoop-common-3.2.0.jar &&     wget -P /ppml/trusted-big-data-ml/work/lib https://sourceforge.net/projects/analytics-zoo/files/analytics-zoo-data/libhadoop.so &&     cp /usr/lib/x86_64-linux-gnu/libpython3.6m.so /usr/lib/libpython3.6m.so &&     chmod a+x /ppml/trusted-big-data-ml/init.sh &&     chmod a+x /ppml/trusted-big-data-ml/clean.sh &&     chmod a+x /ppml/trusted-big-data-ml/start-spark-local-train-sgx.sh &&     chmod a+x /ppml/trusted-big-data-ml/start-spark-standalone-master-sgx.sh &&     chmod a+x /ppml/trusted-big-data-ml/start-spark-standalone-worker-sgx.sh &&     chmod a+x /ppml/trusted-big-data-ml/start-spark-standalone-driver-sgx.sh &&     chmod a+x /ppml/trusted-big-data-ml/ppml-spark-submit.sh &&     chmod a+x /ppml/trusted-big-data-ml/check-status.sh &&     chmod a+x /ppml/trusted-big-data-ml/work/start-scripts/start-python-helloworld-sgx.sh &&     chmod a+x /ppml/trusted-big-data-ml/work/start-scripts/start-python-numpy-sgx.sh &&     chmod a+x /ppml/trusted-big-data-ml/work/start-scripts/start-spark-local-bigdl-sgx.sh &&     chmod a+x /ppml/trusted-big-data-ml/work/start-scripts/start-spark-local-pi-sgx.sh &&     chmod a+x /ppml/trusted-big-data-ml/work/start-scripts/start-spark-local-sql-sgx.sh &&     chmod a+x /ppml/trusted-big-data-ml/work/start-scripts/start-spark-local-wordcount-sgx.sh &&     chmod a+x /ppml/trusted-big-data-ml/work/start-scripts/start-spark-local-xgboost-regressor-sgx.sh &&     chmod a+x /ppml/trusted-big-data-ml/work/start-scripts/start-spark-local-xgboost-classifier-sgx.sh &&     chmod a+x /ppml/trusted-big-data-ml/work/start-scripts/start-spark-local-orca-data-sgx.sh &&     chmod a+x /ppml/trusted-big-data-ml/work/start-scripts/start-spark-local-orca-tf-text.sh"", 'rm $SPARK_HOME/jars/okhttp-*.jar &&     wget -P $SPARK_HOME/jars https://repo1.maven.org/maven2/com/squareup/okhttp3/okhttp/3.8.0/okhttp-3.8.0.jar &&     chmod +x /opt/entrypoint.sh &&     chmod +x /sbin/tini &&     cp /sbin/tini /usr/bin/tini']"
intel-analytics/analytics-zoo,latest,/ppml/trusted-big-data-ml/python/docker-graphene/Dockerfile,ENV,31,"['SPARK_VERSION\t${SPARK_VERSION}', 'JAVA_HOME           /opt/jdk$JDK_VERSION', 'PATH                ${JAVA_HOME}/bin:${PATH}', 'JAVA_HOME           /opt/jdk8', 'PATH                ${JAVA_HOME}/bin:${PATH}', 'ANALYTICS_ZOO_VERSION\t${ANALYTICS_ZOO_VERSION}', 'SPARK_VERSION\t\t${SPARK_VERSION}', 'BIGDL_VERSION\t\t${BIGDL_VERSION}', 'ANALYTICS_ZOO_HOME\t\t/analytics-zoo-${ANALYTICS_ZOO_VERSION}', 'ANALYTICS_ZOO_VERSION\t\t${ANALYTICS_ZOO_VERSION}', 'SPARK_VERSION\t\t\t${SPARK_VERSION}', 'SPARK_HOME\t\t\t\t/ppml/trusted-big-data-ml/work/spark-${SPARK_VERSION}', 'ANALYTICS_ZOO_HOME\t\t\t/ppml/trusted-big-data-ml/work/analytics-zoo-${ANALYTICS_ZOO_VERSION}', 'JAVA_HOME\t\t\t\t/opt/jdk8', 'PATH\t\t\t\t/graphene/meson_build_output/bin:${JAVA_HOME}/bin:${PATH}', 'LOCAL_IP\t\t\t\t127.0.0.1', 'SGX_MEM_SIZE\t\t\t32G', 'SPARK_MASTER_IP\t\t\t127.0.0.1', 'SPARK_MASTER_PORT\t\t\t7077', 'SPARK_MASTER_WEBUI_PORT\t\t8080', 'SPARK_MASTER\t\t\tspark://$SPARK_MASTER_IP:$SPARK_MASTER_PORT', 'SPARK_WORKER_PORT\t\t\t8082', 'SPARK_WORKER_WEBUI_PORT\t\t8081', 'SPARK_DRIVER_PORT\t\t\t10027', 'SPARK_DRIVER_BLOCK_MANAGER_PORT\t10026', 'SPARK_DRIVER_IP\t\t\t$LOCAL_IP', 'SPARK_BLOCK_MANAGER_PORT\t\t10025', 'TINI_VERSION                        $TINI_VERSION', 'PYTHONPATH                          ${PYTHONPATH}:/graphene/meson_build_output/lib/python3.6/site-packages', 'LC_ALL                              C.UTF-8', 'LANG                                C.UTF-8']"
intel-analytics/analytics-zoo,latest,/ppml/trusted-big-data-ml/python/docker-graphene/Dockerfile,ADD,27,"['pyspark.rdd.patch /opt/rdd.patch', 'pyspark.shuffle.patch /opt/shuffle.patch', 'spark-3.1.2.patch /opt/spark-3.1.2.patch', 'hadoop-common-shell.patch /opt/hadoop-common-shell.patch', 'bigdl.lenet.training.patch /bigdl.lenet.training.patch', 'bigdl.serde.patch /bigdl.serde.patch', 'orca.data.patch\t\t/opt/orca.data.patch', 'orca.learn.tf.text.patch\t/opt/orca.learn.tf.text.patch', 'orca.learn.tf.transfer.patch /opt/orca.learn.tf.transfer.patch', './bash.manifest.template /ppml/trusted-big-data-ml/bash.manifest.template', './Makefile /ppml/trusted-big-data-ml/Makefile', './init.sh /ppml/trusted-big-data-ml/init.sh', './clean.sh /ppml/trusted-big-data-ml/clean.sh', './examples /ppml/trusted-big-data-ml/work/examples', './start-spark-local-train-sgx.sh /ppml/trusted-big-data-ml/start-spark-local-train-sgx.sh', './start-spark-standalone-master-sgx.sh /ppml/trusted-big-data-ml/start-spark-standalone-master-sgx.sh', './start-spark-standalone-worker-sgx.sh /ppml/trusted-big-data-ml/start-spark-standalone-worker-sgx.sh', './start-spark-standalone-driver-sgx.sh /ppml/trusted-big-data-ml/start-spark-standalone-driver-sgx.sh', './ppml-spark-submit.sh /ppml/trusted-big-data-ml/ppml-spark-submit.sh', './check-status.sh /ppml/trusted-big-data-ml/check-status.sh', './tracker.py ./tracker.py', './start-scripts /ppml/trusted-big-data-ml/work/start-scripts', './_dill.py.patch ./_dill.py.patch', './python-uuid.patch ./python-uuid.patch', './spark-executor-template.yaml /ppml/trusted-big-data-ml/spark-executor-template.yaml', './entrypoint.sh /opt/entrypoint.sh', 'https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini /sbin/tini']"
intel-analytics/analytics-zoo,latest,/ppml/trusted-big-data-ml/python/docker-graphene/Dockerfile,COPY,19,"['--from=spark /opt/jdk  /opt/jdk8', '--from=graphene /graphene/Scripts /graphene/Scripts', '--from=graphene /graphene/Runtime/ /graphene/Runtime', '--from=graphene /graphene/python /graphene/python', '--from=graphene /graphene/Pal /graphene/Pal', '--from=graphene /graphene/Pal/src/host/Linux-SGX/generated_offsets.py /graphene/python/', '--from=graphene /graphene/Tools/argv_serializer /graphene/Tools', '--from=graphene /graphene/meson_build_output /graphene/meson_build_output', '--from=spark /opt/jdk  /opt/jdk8', '--from=spark /opt/scala-2.11.8  /opt/scala-2.11.8', '--from=spark /opt/spark-${SPARK_VERSION} /ppml/trusted-big-data-ml/work/spark-${SPARK_VERSION}', '--from=spark /opt/spark/core/target/spark-core_2.12-$SPARK_VERSION.jar /opt/spark-core_2.12-$SPARK_VERSION.jar', '--from=spark /opt/spark/resource-managers/kubernetes/core/target/spark-kubernetes_2.12-$SPARK_VERSION.jar /opt/spark-kubernetes_2.12-$SPARK_VERSION.jar', '--from=spark /opt/hadoop/hadoop-common-project/hadoop-common/target/hadoop-common-3.2.0.jar /opt/hadoop-common-3.2.0.jar', '--from=bigdl /BigDL/dist/lib/bigdl-*-jar-with-dependencies.jar /ppml/trusted-big-data-ml/work/bigdl-jar-with-dependencies.jar', '--from=bigdl /BigDL/dist/lib/bigdl-*-python-api.zip /ppml/trusted-big-data-ml/work/bigdl-python-api.zip', '--from=bigdl /BigDL/pyspark/bigdl/examples /ppml/trusted-big-data-ml/work/examples/bigdl', '--from=analytics-zoo /analytics-zoo-${ANALYTICS_ZOO_VERSION} /ppml/trusted-big-data-ml/work/analytics-zoo-${ANALYTICS_ZOO_VERSION}', '--from=analytics-zoo /opt/analytics-zoo/pyzoo/zoo/examples /ppml/trusted-big-data-ml/work/examples/pyzoo']"
intel-analytics/analytics-zoo,latest,/ppml/trusted-big-data-ml/python/docker-graphene/Dockerfile,WORKDIR,1,['/ppml/trusted-big-data-ml']
intel-analytics/analytics-zoo,latest,/ppml/trusted-big-data-ml/python/docker-graphene/Dockerfile,ENTRYPOINT,1,"['[ ""/opt/entrypoint.sh"" ]']"
intel-analytics/analytics-zoo,latest,/ppml/trusted-big-data-ml/scala/docker-graphene/Dockerfile,FROM,5,"['ubuntu:18.04 AS graphene', 'ubuntu:18.04 as spark', 'ubuntu:18.04 AS bigdl', 'ubuntu:18.04 as analytics-zoo', 'ubuntu:18.04']"
intel-analytics/analytics-zoo,latest,/ppml/trusted-big-data-ml/scala/docker-graphene/Dockerfile,RUN,17,"['env DEBIAN_FRONTEND=noninteractive apt-get update &&     env DEBIAN_FRONTEND=noninteractive apt-get install -y autoconf bison build-essential coreutils gawk git libcurl4-openssl-dev libprotobuf-c-dev protobuf-c-compiler python3-protobuf wget', 'git clone https://github.com/analytics-zoo/graphene.git /graphene', 'cd /graphene &&     git fetch origin branch-0.2 &&     git checkout branch-0.2', 'cd /graphene/Pal/src/host/Linux-SGX &&     git clone https://github.com/intel/SGXDataCenterAttestationPrimitives.git linux-sgx-driver &&     cd linux-sgx-driver &&     git checkout DCAP_1.7 &&     cp -r driver/linux/* .', 'cd /graphene &&     ISGX_DRIVER_PATH=/graphene/Pal/src/host/Linux-SGX/linux-sgx-driver make -s -j4 SGX=1 WERROR=1 && true', 'for f in $(find /graphene/Runtime -type l); do cp --remove-destination $(realpath $f) $f; done', 'apt-get update --fix-missing &&     apt-get install -y apt-utils wget unzip', 'wget $JDK_URL &&     gunzip jdk-$JDK_VERSION-linux-x64.tar.gz &&     tar -xf jdk-$JDK_VERSION-linux-x64.tar -C /opt &&     rm jdk-$JDK_VERSION-linux-x64.tar &&     mv /opt/jdk* /opt/jdk$JDK_VERSION &&     ln -s /opt/jdk$JDK_VERSION /opt/jdk', 'cd /opt &&     wget https://archive.apache.org/dist/spark/spark-${SPARK_VERSION}/spark-${SPARK_VERSION}-bin-hadoop2.7.tgz &&     tar -zxvf spark-${SPARK_VERSION}-bin-hadoop2.7.tgz &&     mv spark-${SPARK_VERSION}-bin-hadoop2.7 spark-${SPARK_VERSION} &&     rm spark-${SPARK_VERSION}-bin-hadoop2.7.tgz &&     wget -O spark-network-common_2.11-${SPARK_VERSION}.jar https://master.dl.sourceforge.net/project/analytics-zoo/analytics-zoo-data/spark-network-common_2.11-${SPARK_VERSION}.jar &&     mv spark-network-common_2.11-${SPARK_VERSION}.jar spark-${SPARK_VERSION}/jars', 'apt-get update --fix-missing &&     apt-get install -y apt-utils maven git', 'git clone https://github.com/intel-analytics/BigDL.git &&     cd BigDL &&     git apply /bigdl.lenet.training.patch &&     git status &&     export MAVEN_OPTS=""-Xmx2g -XX:ReservedCodeCacheSize=512m         -Dhttp.proxyHost=$HTTP_PROXY_HOST         -Dhttp.proxyPort=$HTTP_PROXY_PORT         -Dhttps.proxyHost=$HTTPS_PROXY_HOST         -Dhttps.proxyPort=$HTTPS_PROXY_PORT"" &&     bash make-dist.sh -P spark_2.x', 'apt-get update --fix-missing &&     apt-get install -y apt-utils curl wget unzip', 'wget https://raw.githubusercontent.com/intel-analytics/analytics-zoo/master/docker/zoo/download-analytics-zoo.sh &&     chmod a+x ./download-analytics-zoo.sh', './download-analytics-zoo.sh', 'mkdir -p /graphene &&     mkdir -p /graphene/Runtime &&     mkdir -p /graphene/python &&     mkdir -p /graphene/Tools &&     mkdir -p /graphene/Pal/src &&     mkdir -p /ppml/trusted-big-data-ml/work &&     mkdir -p /ppml/trusted-big-data-ml/work/keys &&     mkdir -p /ppml/trusted-big-data-ml/work/password &&     mkdir -p /ppml/trusted-big-data-ml/work/data &&     mkdir -p /ppml/trusted-big-data-ml/work/models &&     mkdir -p /ppml/trusted-big-data-ml/work/apps &&     mkdir -p /graphene/Pal/src/host/Linux-SGX/signer', 'apt-get update --fix-missing &&     apt-get install -y apt-utils vim curl nano wget unzip maven git tree &&     apt-get install -y libsm6 make build-essential &&     apt-get install -y autoconf gawk bison libcurl4-openssl-dev python3-protobuf libprotobuf-c-dev protobuf-c-compiler &&     apt-get install -y netcat net-tools', 'chmod a+x /ppml/trusted-big-data-ml/init.sh &&     chmod a+x /ppml/trusted-big-data-ml/start-spark-local-train-sgx.sh &&     chmod a+x /ppml/trusted-big-data-ml/start-spark-standalone-master-sgx.sh &&     chmod a+x /ppml/trusted-big-data-ml/start-spark-standalone-worker-sgx.sh &&     chmod a+x /ppml/trusted-big-data-ml/start-spark-standalone-driver-sgx.sh &&     chmod a+x /ppml/trusted-big-data-ml/distributed-check-status.sh &&     chmod a+x /ppml/trusted-big-data-ml/check-status.sh']"
intel-analytics/analytics-zoo,latest,/ppml/trusted-big-data-ml/scala/docker-graphene/Dockerfile,ARG,12,"['SPARK_VERSION=2.4.6', 'JDK_VERSION=8u192', 'JDK_URL=your_jdk_url', 'HTTP_PROXY_HOST', 'HTTP_PROXY_PORT', 'HTTPS_PROXY_HOST', 'HTTPS_PROXY_PORT', 'ANALYTICS_ZOO_VERSION=0.12.0-SNAPSHOT', 'BIGDL_VERSION=0.13.0', 'SPARK_VERSION=2.4.6', 'ANALYTICS_ZOO_VERSION=0.12.0-SNAPSHOT', 'SPARK_VERSION=2.4.6']"
intel-analytics/analytics-zoo,latest,/ppml/trusted-big-data-ml/scala/docker-graphene/Dockerfile,ENV,25,"['SPARK_VERSION\t${SPARK_VERSION}', 'JAVA_HOME           /opt/jdk8', 'PATH                ${JAVA_HOME}/bin:${PATH}', 'ANALYTICS_ZOO_VERSION\t${ANALYTICS_ZOO_VERSION}', 'SPARK_VERSION\t\t${SPARK_VERSION}', 'BIGDL_VERSION\t\t${BIGDL_VERSION}', 'ANALYTICS_ZOO_HOME\t\t/analytics-zoo-${ANALYTICS_ZOO_VERSION}', 'ANALYTICS_ZOO_VERSION\t\t${ANALYTICS_ZOO_VERSION}', 'SPARK_VERSION\t\t\t${SPARK_VERSION}', 'SPARK_HOME\t\t\t\t/ppml/trusted-big-data-ml/work/spark-${SPARK_VERSION}', 'ANALYTICS_ZOO_HOME\t\t\t/ppml/trusted-big-data-ml/work/analytics-zoo-${ANALYTICS_ZOO_VERSION}', 'JAVA_HOME\t\t\t\t/opt/jdk8', 'PATH\t\t\t\t${JAVA_HOME}/bin:${PATH}', 'LOCAL_IP\t\t\t\t127.0.0.1', 'SGX_MEM_SIZE\t\t\t64G', 'SPARK_MASTER_IP\t\t\t127.0.0.1', 'SPARK_MASTER_PORT\t\t\t7077', 'SPARK_MASTER_WEBUI_PORT\t\t8080', 'SPARK_MASTER\t\t\tspark://$SPARK_MASTER_IP:$SPARK_MASTER_PORT', 'SPARK_WORKER_PORT\t\t\t8082', 'SPARK_WORKER_WEBUI_PORT\t\t8081', 'SPARK_DRIVER_PORT\t\t\t10027', 'SPARK_DRIVER_BLOCK_MANAGER_PORT\t10026', 'SPARK_DRIVER_IP\t\t\t$LOCAL_IP', 'SPARK_BLOCK_MANAGER_PORT\t\t10025']"
intel-analytics/analytics-zoo,latest,/ppml/trusted-big-data-ml/scala/docker-graphene/Dockerfile,ADD,11,"['bigdl.lenet.training.patch /bigdl.lenet.training.patch', './java.manifest.template /ppml/trusted-big-data-ml/java.manifest.template', './Makefile /ppml/trusted-big-data-ml/Makefile', './init.sh /ppml/trusted-big-data-ml/init.sh', './start-spark-local-train-sgx.sh /ppml/trusted-big-data-ml/start-spark-local-train-sgx.sh', './start-spark-standalone-master-sgx.sh /ppml/trusted-big-data-ml/start-spark-standalone-master-sgx.sh', './start-spark-standalone-worker-sgx.sh /ppml/trusted-big-data-ml/start-spark-standalone-worker-sgx.sh', './start-spark-standalone-driver-sgx.sh /ppml/trusted-big-data-ml/start-spark-standalone-driver-sgx.sh', './distributed-check-status.sh /ppml/trusted-big-data-ml/distributed-check-status.sh', './check-status.sh /ppml/trusted-big-data-ml/check-status.sh', './ppml-spark-submit.sh /ppml/trusted-big-data-ml/ppml-spark-submit.sh']"
intel-analytics/analytics-zoo,latest,/ppml/trusted-big-data-ml/scala/docker-graphene/Dockerfile,COPY,12,"['--from=spark /opt/jdk  /opt/jdk8', '--from=graphene /graphene/Scripts /graphene/Scripts', '--from=graphene /graphene/Runtime/ /graphene/Runtime', '--from=graphene /graphene/python /graphene/python', '--from=graphene /graphene/Pal /graphene/Pal', '--from=graphene /graphene/Pal/src/host/Linux-SGX/generated_offsets.py /graphene/python/', '--from=graphene /graphene/Examples/common_tools/get_deps.sh /graphene/get_deps.sh', '--from=graphene /graphene/Tools/argv_serializer /graphene/Tools', '--from=spark /opt/jdk  /opt/jdk8', '--from=spark /opt/spark-${SPARK_VERSION} /ppml/trusted-big-data-ml/work/spark-${SPARK_VERSION}', '--from=bigdl /BigDL/dist/lib/bigdl-*-jar-with-dependencies.jar /ppml/trusted-big-data-ml/work/bigdl-jar-with-dependencies.jar', '--from=analytics-zoo /analytics-zoo-${ANALYTICS_ZOO_VERSION} /ppml/trusted-big-data-ml/work/analytics-zoo-${ANALYTICS_ZOO_VERSION}']"
intel-analytics/analytics-zoo,latest,/ppml/trusted-big-data-ml/scala/docker-occlum/Dockerfile,FROM,1,['occlum/occlum:0.23.7-ubuntu18.04 AS occlum']
intel-analytics/analytics-zoo,latest,/ppml/trusted-big-data-ml/scala/docker-occlum/Dockerfile,ENV,5,"['LOCAL_IP your_local_ip', 'SPARK_VERSION\t\t${SPARK_VERSION}', 'BIGDL_VERSION\t\t${BIGDL_VERSION}', 'http_proxy $http_proxy', 'https_proxy $https_proxy']"
intel-analytics/analytics-zoo,latest,/ppml/trusted-big-data-ml/scala/docker-occlum/Dockerfile,ARG,2,"['BIGDL_VERSION=0.13.0', 'SPARK_VERSION=2.4.6']"
intel-analytics/analytics-zoo,latest,/ppml/trusted-big-data-ml/scala/docker-occlum/Dockerfile,RUN,4,"['env DEBIAN_FRONTEND=noninteractive apt-get update &&     env DEBIAN_FRONTEND=noninteractive apt-get install -y openjdk-11-jdk unzip', 'mkdir -p /bin/examples/jars', 'mkdir -p /ppml/docker-occlum && cd /ppml/docker-occlum &&     wget -P /ppml/docker-occlum https://archive.apache.org/dist/spark/spark-2.4.6/spark-2.4.6-bin-hadoop2.7.tgz &&     tar -xvzf /ppml/docker-occlum/spark-2.4.6-bin-hadoop2.7.tgz  &&      wget -P /bin/examples/jars/spark-network-common_2.11-2.4.6.jar https://master.dl.sourceforge.net/project/analytics-zoo/analytics-zoo-data/spark-network-common_2.11-2.4.6.jar &&     rm /ppml/docker-occlum/spark-2.4.6-bin-hadoop2.7.tgz', 'wget -P /ppml/docker-occlum https://repo1.maven.org/maven2/com/intel/analytics/bigdl/dist-spark-${SPARK_VERSION}-scala-2.11.8-all/${BIGDL_VERSION}/dist-spark-${SPARK_VERSION}-scala-2.11.8-all-${BIGDL_VERSION}-dist.zip  &&     unzip /ppml/docker-occlum/dist-spark-${SPARK_VERSION}-scala-2.11.8-all-${BIGDL_VERSION}-dist.zip -d /ppml/docker-occlum/bigdl &&     rm /ppml/docker-occlum/dist-spark-${SPARK_VERSION}-scala-2.11.8-all-${BIGDL_VERSION}-dist.zip &&     cp /ppml/docker-occlum/bigdl/lib/bigdl-${BIGDL_VERSION}-jar-with-dependencies.jar /ppml/docker-occlum/bigdl-${BIGDL_VERSION}-jar-with-dependencies.jar &&     rm -r /ppml/docker-occlum/bigdl']"
intel-analytics/analytics-zoo,latest,/ppml/trusted-big-data-ml/scala/docker-occlum/Dockerfile,ADD,4,"['./hosts /ppml/docker-occlum/hosts', './README.md  /ppml/docker-occlum/README.md', './run_spark_on_occlum_glibc.sh /ppml/docker-occlum/run_spark_on_occlum_glibc.sh', './start-spark-local.sh /ppml/docker-occlum/start-spark-local.sh']"
intel-analytics/analytics-zoo,latest,/ppml/trusted-big-data-ml/scala/docker-occlum/kubernetes/Dockerfile,FROM,2,"['krallin/ubuntu-tini AS tini', 'occlum/occlum:0.24.0-ubuntu18.04 AS occlum']"
intel-analytics/analytics-zoo,latest,/ppml/trusted-big-data-ml/scala/docker-occlum/kubernetes/Dockerfile,ENV,2,"['SPARK_HOME /opt/spark', 'SPARK_VERSION\t${SPARK_VERSION}']"
intel-analytics/analytics-zoo,latest,/ppml/trusted-big-data-ml/scala/docker-occlum/kubernetes/Dockerfile,RUN,5,"['apt-get update && DEBIAN_FRONTEND=""noninteractive"" apt-get install -y --no-install-recommends         openjdk-8-jdk         &&     apt-get clean &&     rm -rf /var/lib/apt/lists/*', 'echo ""auth required pam_wheel.so use_uid"" >> /etc/pam.d/su &&     chgrp root /etc/passwd && chmod ug+rw /etc/passwd', 'wget https://archive.apache.org/dist/spark/spark-${SPARK_VERSION}/spark-${SPARK_VERSION}-bin-hadoop2.7.tgz -P /opt/ &&     tar -zxvf /opt/spark-${SPARK_VERSION}-bin-hadoop2.7.tgz &&     mv /opt/spark-${SPARK_VERSION}-bin-hadoop2.7 /opt/spark &&     rm /opt/spark-${SPARK_VERSION}-bin-hadoop2.7.tgz &&     cp -r /opt/spark/examples /bin/examples &&     cp -r /opt/spark/kubernetes/tests /opt/spark/tests', 'wget https://sourceforge.net/projects/analytics-zoo/files/analytics-zoo-data/libhadoop.so -P /lib/ &&     rm -f /opt/spark/jars/spark-network-common_2.12-${SPARK_VERSION}.jar &&     wget -O /opt/spark/jars/spark-network-common_2.12-${SPARK_VERSION}.jar https://master.dl.sourceforge.net/project/analytics-zoo/analytics-zoo-data/spark-network-common_2.12-${SPARK_VERSION}.jar', 'chmod a+x /opt/entrypoint.sh &&     chmod a+x /opt/init.sh']"
intel-analytics/analytics-zoo,latest,/ppml/trusted-big-data-ml/scala/docker-occlum/kubernetes/Dockerfile,COPY,3,"['--from=tini /usr/local/bin/tini /sbin/tini', './entrypoint.sh /opt/', './init.sh /opt/']"
intel-analytics/analytics-zoo,latest,/ppml/trusted-big-data-ml/scala/docker-occlum/kubernetes/Dockerfile,ARG,1,['SPARK_VERSION=3.1.2']
intel-analytics/analytics-zoo,latest,/ppml/trusted-big-data-ml/scala/docker-occlum/kubernetes/Dockerfile,WORKDIR,2,"['/opt', '/opt/']"
intel-analytics/analytics-zoo,latest,/ppml/trusted-big-data-ml/scala/docker-occlum/kubernetes/Dockerfile,ENTRYPOINT,1,"['[ ""/opt/entrypoint.sh"" ]']"
alibaba/Alink,latest,/webui/tools/nfs/Dockerfile,FROM,1,['itsthenetwork/nfs-server-alpine:12']
alibaba/Alink,latest,/webui/tools/nfs/Dockerfile,COPY,1,['exports /etc/']
alibaba/Alink,latest,/webui/tools/web/Dockerfile,FROM,1,['nginx:1.17.0-alpine']
alibaba/Alink,latest,/webui/tools/web/Dockerfile,ARG,1,['DIST_FOLDER=dist']
alibaba/Alink,latest,/webui/tools/web/Dockerfile,COPY,2,"['${DIST_FOLDER}/ /var/www/', 'nginx.conf /etc/nginx/nginx.conf']"
alibaba/Alink,latest,/webui/tools/web/Dockerfile,EXPOSE,1,['9090']
alibaba/Alink,latest,/webui/tools/web/Dockerfile,ENTRYPOINT,1,"['[""nginx"",""-g"",""daemon off;""]']"
alibaba/Alink,latest,/webui/tools/server/Dockerfile,FROM,1,['openjdk:8-alpine']
alibaba/Alink,latest,/webui/tools/server/Dockerfile,ENV,1,['TZ=Asia/Shanghai']
alibaba/Alink,latest,/webui/tools/server/Dockerfile,RUN,1,['set -eux;     apk add --no-cache --update tzdata;     ln -snf /usr/share/zoneinfo/$TZ /etc/localtime;     echo $TZ > /etc/timezone']
alibaba/Alink,latest,/webui/tools/server/Dockerfile,ARG,1,['JAR_FILE=target/*.jar']
alibaba/Alink,latest,/webui/tools/server/Dockerfile,COPY,1,['${JAR_FILE} app.jar']
alibaba/Alink,latest,/webui/tools/server/Dockerfile,EXPOSE,1,['8080']
alibaba/Alink,latest,/webui/tools/server/Dockerfile,ENTRYPOINT,1,"['[""java"",""-jar"",""/app.jar""]']"
alibaba/Alink,latest,/webui/tools/flink-with-alink-jar/Dockerfile,FROM,1,['flink:1.9.2-scala_2.11']
alibaba/Alink,latest,/webui/tools/flink-with-alink-jar/Dockerfile,ADD,1,['--chown=flink:flink alink_core_flink-1.9_2.11-1.5.0.jar /opt/flink/lib/']
alibaba/Alink,latest,/webui/tools/jupyter/Dockerfile,FROM,1,['jupyter/scipy-notebook:python-3.8.8']
alibaba/Alink,latest,/webui/tools/jupyter/Dockerfile,USER,2,"['root', '${NB_UID}']"
alibaba/Alink,latest,/webui/tools/jupyter/Dockerfile,RUN,2,"['apt-get update --yes &&     apt-get install --yes --no-install-recommends openjdk-8-jre-headless &&     apt-get clean && rm -rf /var/lib/apt/lists/*', 'pip install --no-cache-dir -i https://mirrors.aliyun.com/pypi/simple/     \'pyalink-flink-1.9==1.5.0\' &&     fix-permissions ""${CONDA_DIR}"" &&     fix-permissions ""/home/${NB_USER}""']"
sql-machine-learning/sqlflow,latest,/docker/ci/Dockerfile,FROM,1,['sqlflow:dev']
sql-machine-learning/sqlflow,latest,/docker/ci/Dockerfile,RUN,8,"['apt-get -qq update', '/ci/install-pips.bash', '/ci/install-mysql-client.bash', '/ci/install-odps.bash', '/ci/install-hadoop.bash', '/ci/install-kubectl.bash', 'apt-get -qq install -y docker.io sudo > /dev/null', 'pip install --quiet /build/*.whl         && mv /build/sqlflowserver /build/sqlflow /build/step /usr/local/bin/         && mkdir -p $SQLFLOW_PARSER_SERVER_LOADING_PATH         && mv /build/*.jar $SQLFLOW_PARSER_SERVER_LOADING_PATH']"
sql-machine-learning/sqlflow,latest,/docker/ci/Dockerfile,COPY,7,"['docker/ci/install-pips.bash /ci/', 'docker/ci/install-mysql-client.bash /ci/', 'docker/ci/install-odps.bash /ci/', 'docker/ci/install-hadoop.bash /ci/', 'docker/ci/install-kubectl.bash /ci/', 'python /usr/local/sqlflow/python', 'build /build']"
sql-machine-learning/sqlflow,latest,/docker/ci/Dockerfile,ENV,5,"['HADOOP_VERSION 3.2.1', 'PATH /opt/hadoop-${HADOOP_VERSION}/bin:/usr/local/go/bin:/go/bin:$PATH', 'PYTHONPATH=/usr/local/sqlflow/python:$PYTHONPATH', 'SQLFLOW_PARSER_SERVER_PORT=12300', 'SQLFLOW_PARSER_SERVER_LOADING_PATH=""/usr/local/sqlflow/java""']"
sql-machine-learning/sqlflow,latest,/docker/ci/Dockerfile,EXPOSE,1,['50051']
sql-machine-learning/sqlflow,latest,/docker/ci/Dockerfile,ADD,1,['docker/ci/start.sh /']
sql-machine-learning/sqlflow,latest,/docker/ci/Dockerfile,CMD,1,"['[""bash"", ""/start.sh""]']"
sql-machine-learning/sqlflow,latest,/docker/modelzooserver/Dockerfile,FROM,1,['alpine:3.12']
sql-machine-learning/sqlflow,latest,/docker/modelzooserver/Dockerfile,ARG,4,"['FIND_FASTED_MIRROR=true', 'MYSQL_ADDR=""mysql://root:root@tcp(127.0.0.1:3306)/?""', 'SQLFLOW_MODEL_ZOO_REGISTRY_USER=""""', 'SQLFLOW_MODEL_ZOO_REGISTRY_PASS=""""']"
sql-machine-learning/sqlflow,latest,/docker/modelzooserver/Dockerfile,COPY,2,"['docker/dev/find_fastest_resources.sh /usr/local/bin/', 'build/modelzooserver /usr/local/bin/modelzooserver']"
sql-machine-learning/sqlflow,latest,/docker/modelzooserver/Dockerfile,RUN,1,"['/bin/sh -c \'if [ ""$FIND_FASTED_MIRROR"" == ""true"" ]; then source find_fastest_resources.sh &&     echo ""Choose the fastest Alpine source ..."" &&     choose_fastest_alpine_source &&     echo ""Choose the fastest PIP source ..."" &&     choose_fastest_pip_source; fi &&     apk add --no-cache python3 py3-pip sudo bash docker-cli &&     wget -q -O /etc/apk/keys/sgerrand.rsa.pub http://cdn.sqlflow.tech/alpine/sgerrand.rsa.pub.txt &&     wget -q http://cdn.sqlflow.tech/alpine/glibc-2.31-r0.apk &&     apk add glibc-2.31-r0.apk &&     rm glibc-2.31-r0.apk &&     ln -s /usr/bin/python3 /usr/local/bin/python &&     ln -s /usr/bin/pip3 /usr/local/bin/pi\'']"
sql-machine-learning/sqlflow,latest,/docker/modelzooserver/Dockerfile,ENV,3,"['MYSQL_ADDR=${MYSQL_ADDR}', 'SQLFLOW_MODEL_ZOO_REGISTRY_USER=${SQLFLOW_MODEL_ZOO_REGISTRY_USER}', 'SQLFLOW_MODEL_ZOO_REGISTRY_PASS=${SQLFLOW_MODEL_ZOO_REGISTRY_PASS}']"
sql-machine-learning/sqlflow,latest,/docker/modelzooserver/Dockerfile,EXPOSE,1,['50055']
sql-machine-learning/sqlflow,latest,/docker/modelzooserver/Dockerfile,VOLUME,1,"['""/var/run/docker.sock""']"
sql-machine-learning/sqlflow,latest,/docker/modelzooserver/Dockerfile,CMD,1,"['[""modelzooserver"", ""--mysql-addr"", ""${MYSQL_ADDR}""]']"
sql-machine-learning/sqlflow,latest,/docker/step/Dockerfile,FROM,3,"['ubuntu:18.04 as base', 'base as builder', 'base']"
sql-machine-learning/sqlflow,latest,/docker/step/Dockerfile,ARG,1,['FIND_FASTED_MIRROR=true']
sql-machine-learning/sqlflow,latest,/docker/step/Dockerfile,COPY,2,"['docker/dev/find_fastest_resources.sh /usr/local/bin/find_fastest_resources.sh', '--from=builder /install /usr/']"
sql-machine-learning/sqlflow,latest,/docker/step/Dockerfile,ENV,5,"['DEBIAN_FRONTEND=noninteractive', 'PATH=""${PATH}:/install/bin""', 'DEBIAN_FRONTEND=noninteractive', 'PATH ""${PATH}:/usr/local/odpscmd/bin""', 'PYTHONPATH ""${PYTHONPATH}:/usr/lib/python3.6/site-packages:/opt/sqlflow/python""']"
sql-machine-learning/sqlflow,latest,/docker/step/Dockerfile,RUN,6,"['/bin/bash -c \'if [ ""$FIND_FASTED_MIRROR"" == ""true"" ]; then source find_fastest_resources.sh   && echo ""Choose the fastest APT source ...""   && choose_fastest_apt_source   && echo ""Choose the fastest PIP source ...""   && choose_fastest_pip_source; fi\' &&   apt-get update &&   apt-get -qq install -y --no-install-recommends openjdk-8-jre-headless python3 libmysqlclient20 python3-idna libgomp1 python3-setuptools python3-pip build-essential python3-dev glpk-utils &&   ln -sf /usr/share/zoneinfo/Etc/UTC /etc/localtime &&   apt-get install -y tzdata > /dev/null &&   dpkg-reconfigure --frontend noninteractive tzdata &&   ln -s /usr/bin/python3 /usr/bin/python &&   ln -s /usr/bin/pip3 /usr/bin/pip &&   pip install --upgrade pip &&   pip install -U setuptools', 'mkdir /install', 'apt-get update &&   apt-get -qq install -y wget unzip libmysqlclient-dev &&   wget -q http://docs-aliyun.cn-hangzhou.oss.aliyun-inc.com/assets/attach/119096/cn_zh/1557995455961/odpscmd_public.zip &&   mkdir -p /install/local/odpscmd &&   unzip -qq odpscmd_public.zip -d /install/local/odpscmd &&   rm -rf odpscmd_public.zip', 'wget -q https://sqlflow-models.oss-cn-zhangjiakou.aliyuncs.com/baron-lin64.zip &&     unzip -qq baron-lin64.zip -d /install &&     mv /install/baron-lin64/baron /usr/bin &&     rm -rf /install/baron-lin64 &&     rm -rf baron-lin64.zip', ""bash -c 'pip install --no-cache-dir --prefix=/install     /sqlflow_models-0.1.0-py3-none-any.whl     six==1.15.0     mysqlclient==1.4.4     impyla==0.16.0     pyodps==0.8.3     oss2==2.9.0     xgboost==0.90     plotille==3.7     seaborn==0.9.0     dill==0.3.0     sklearn2pmml==0.56.0     shap==0.30.1     PyUtilib==5.8.0     pyomo==5.6.9     grpcio==1.28.1'"", 'py3clean /install /usr/lib/python3.6']"
sql-machine-learning/sqlflow,latest,/docker/step/Dockerfile,WORKDIR,1,['/install']
sql-machine-learning/sqlflow,latest,/docker/step/Dockerfile,ADD,6,"['build/sqlflow_models-0.1.0-py3-none-any.whl /', 'build/step /usr/bin/', 'build/*.jar /opt/sqlflow/parser/', 'python/runtime /opt/sqlflow/python/runtime/', 'python/symbol_extractor.py /opt/sqlflow/python/', 'python/plotille_text_backend.py /opt/sqlflow/python/']"
sql-machine-learning/sqlflow,latest,/docker/server/Dockerfile,FROM,1,['alpine:3.12']
sql-machine-learning/sqlflow,latest,/docker/server/Dockerfile,ARG,1,['FIND_FASTED_MIRROR=true']
sql-machine-learning/sqlflow,latest,/docker/server/Dockerfile,COPY,5,"['docker/dev/find_fastest_resources.sh /usr/local/bin/', 'python /usr/local/sqlflow/python', 'build /build', 'scripts/travis/export_k8s_vars.sh /usr/local/bin/', 'scripts/travis/install_kubectl.sh /usr/local/bin/']"
sql-machine-learning/sqlflow,latest,/docker/server/Dockerfile,RUN,4,"['/bin/sh -c \'if [ ""$FIND_FASTED_MIRROR"" == ""true"" ]; then source find_fastest_resources.sh &&     echo ""Choose the fastest Alpine source ..."" &&     choose_fastest_alpine_source &&     echo ""Choose the fastest PIP source ..."" &&     choose_fastest_pip_source; fi\'', 'apk update     && apk add --no-cache python3 py3-pip openjdk8-jre-base axel sudo bash &&     wget -q -O /etc/apk/keys/sgerrand.rsa.pub http://cdn.sqlflow.tech/alpine/sgerrand.rsa.pub.txt &&     wget -q http://cdn.sqlflow.tech/alpine/glibc-2.31-r0.apk &&     apk add glibc-2.31-r0.apk &&     rm glibc-2.31-r0.apk &&     ln -s /usr/bin/python3 /usr/local/bin/python &&     ln -s /usr/bin/pip3 /usr/local/bin/pip', 'python3 -m pip install --quiet /build/couler*.whl /build/fluid*.whl &&         mv /build/sqlflowserver /build/sqlflow /build/step /usr/local/bin/ &&         mkdir -p $SQLFLOW_PARSER_SERVER_LOADING_PATH &&         mv /build/*.jar $SQLFLOW_PARSER_SERVER_LOADING_PATH &&         rm -rf /build', ""bin/bash -c 'source export_k8s_vars.sh && install_kubectl.sh'""]"
sql-machine-learning/sqlflow,latest,/docker/server/Dockerfile,ENV,3,"['PYTHONPATH=/usr/local/sqlflow/python:$PYTHONPATH', 'SQLFLOW_PARSER_SERVER_PORT=12300', 'SQLFLOW_PARSER_SERVER_LOADING_PATH=""/usr/local/sqlflow/java""']"
sql-machine-learning/sqlflow,latest,/docker/server/Dockerfile,EXPOSE,1,['50051']
sql-machine-learning/sqlflow,latest,/docker/server/Dockerfile,CMD,1,"['[""sqlflowserver""]']"
sql-machine-learning/sqlflow,latest,/docker/jupyterhub/Dockerfile,FROM,1,['jupyterhub/jupyterhub:1.2']
sql-machine-learning/sqlflow,latest,/docker/jupyterhub/Dockerfile,ARG,2,"['SQLFLOW_MYSQL_IMAGE=""sqlflow/sqlflow:mysql""', 'SQLFLOW_JUPYTER_IMAGE=""sqlflow/sqlflow:jupyter""']"
sql-machine-learning/sqlflow,latest,/docker/jupyterhub/Dockerfile,ENV,2,"['SQLFLOW_MYSQL_IMAGE=${SQLFLOW_MYSQL_IMAGE}', 'SQLFLOW_JUPYTER_IMAGE=${SQLFLOW_JUPYTER_IMAGE}']"
sql-machine-learning/sqlflow,latest,/docker/jupyterhub/Dockerfile,RUN,2,"['pip install --upgrade pip && pip install jupyterhub-kubespawner     oauthenticator==0.11.0     jupyterhub-dummyauthenticator==0.3.1     jupyterhub_idle_culler==1.0', 'bash /provision.sh']"
sql-machine-learning/sqlflow,latest,/docker/jupyterhub/Dockerfile,COPY,2,"['docker/jupyterhub/jupyterhub_config.py /etc/jhub/jupyterhub_config.py', 'docker/jupyterhub/provision.sh /provision.sh']"
sql-machine-learning/sqlflow,latest,/docker/jupyterhub/Dockerfile,CMD,1,"['[""jupyterhub"", ""--config"", ""/etc/jhub/jupyterhub_config.py""]']"
sql-machine-learning/sqlflow,latest,/docker/mysql/Dockerfile,FROM,1,['alpine:3.12']
sql-machine-learning/sqlflow,latest,/docker/mysql/Dockerfile,COPY,3,"['doc/datasets/popularize_churn.sql      doc/datasets/popularize_iris.sql      doc/datasets/popularize_boston.sql      doc/datasets/popularize_creditcardfraud.sql      doc/datasets/popularize_imdb.sql      doc/datasets/create_model_db.sql      doc/datasets/popularize_energy.sql      doc/datasets/popularize_cora.sql      doc/datasets/popularize_give_me_some_credit.sql      /datasets/', 'docker/dev/find_fastest_resources.sh /usr/local/bin/', 'docker/mysql/start.bash /']"
sql-machine-learning/sqlflow,latest,/docker/mysql/Dockerfile,ARG,2,"['FIND_FASTED_MIRROR=true', 'MYSQL_PORT=""3306""']"
sql-machine-learning/sqlflow,latest,/docker/mysql/Dockerfile,RUN,2,"['/bin/sh -c \'if [ ""$FIND_FASTED_MIRROR"" == ""true"" ]; then source find_fastest_resources.sh &&     choose_fastest_alpine_source; fi\'', 'apk add --no-cache mysql mysql-client >/dev/null']"
sql-machine-learning/sqlflow,latest,/docker/mysql/Dockerfile,VOLUME,1,['/var/lib/mysql']
sql-machine-learning/sqlflow,latest,/docker/mysql/Dockerfile,ENV,1,['MYSQL_PORT=$MYSQL_PORT']
sql-machine-learning/sqlflow,latest,/docker/mysql/Dockerfile,EXPOSE,1,['$MYSQL_PORT']
sql-machine-learning/sqlflow,latest,/docker/mysql/Dockerfile,CMD,1,"['[""/start.bash""]']"
sql-machine-learning/sqlflow,latest,/docker/dev/Dockerfile,FROM,1,['ubuntu:18.04']
sql-machine-learning/sqlflow,latest,/docker/dev/Dockerfile,ARG,1,['FIND_FASTED_MIRROR=true']
sql-machine-learning/sqlflow,latest,/docker/dev/Dockerfile,COPY,3,"['docker/dev/find_fastest_resources.sh /usr/local/bin/', 'docker/dev/install.sh /', 'docker/dev/build.sh /']"
sql-machine-learning/sqlflow,latest,/docker/dev/Dockerfile,RUN,1,['/install.sh']
sql-machine-learning/sqlflow,latest,/docker/dev/Dockerfile,ENV,3,"['JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64', 'GOPATH /root/go', 'PATH /usr/local/go/bin:$GOPATH/bin:$PATH']"
sql-machine-learning/sqlflow,latest,/docker/dev/Dockerfile,CMD,1,"['[""/build.sh"", ""/work""]']"
sql-machine-learning/sqlflow,latest,/docker/jupyter/Dockerfile,FROM,1,['alpine:3.12']
sql-machine-learning/sqlflow,latest,/docker/jupyter/Dockerfile,ARG,3,"['FIND_FASTED_MIRROR=true', 'SQLFLOW_SERVER=""localhost:50051""', 'SQLFLOW_DATASOURCE=""mysql://root:root@tcp(127.0.0.1:3306)/?maxAllowedPacket=0""']"
sql-machine-learning/sqlflow,latest,/docker/jupyter/Dockerfile,COPY,4,"['docker/dev/find_fastest_resources.sh /usr/local/bin/', '/docker/jupyter/js /jupyter/js/', 'build/tutorial /workspace', 'docker/jupyter/install-jupyter.sh /jupyter/install-jupyter.sh']"
sql-machine-learning/sqlflow,latest,/docker/jupyter/Dockerfile,RUN,5,"['/bin/sh -c \'if [ ""$FIND_FASTED_MIRROR"" == ""true"" ]; then source find_fastest_resources.sh &&     choose_fastest_alpine_source &&     choose_fastest_pip_source; fi\'', 'apk add --no-cache python3 python3-dev py3-pip py3-pyzmq py3-grpcio', 'rm /workspace/energe_lstmbasedtimeseries.ipynb     /workspace/cora-gcn.ipynb     /workspace/imdb-stackedbilstm.ipynb', '/bin/sh /jupyter/install-jupyter.sh', 'apk del --purge python3-dev']"
sql-machine-learning/sqlflow,latest,/docker/jupyter/Dockerfile,ENV,2,"['SQLFLOW_SERVER=${SQLFLOW_SERVER}', 'SQLFLOW_DATASOURCE=${SQLFLOW_DATASOURCE}']"
sql-machine-learning/sqlflow,latest,/docker/jupyter/Dockerfile,WORKDIR,1,['/workspace']
sql-machine-learning/sqlflow,latest,/docker/jupyter/Dockerfile,EXPOSE,1,['8888']
sql-machine-learning/sqlflow,latest,/docker/jupyter/Dockerfile,CMD,1,"['[""jupyter"", ""notebook"", ""--ip=0.0.0.0"", ""--port=8888"", ""--allow-root"", ""--NotebookApp.token=\'\'""]']"
sql-machine-learning/sqlflow,latest,/doc/tutorial/apsara2019/Dockerfile,FROM,1,['sqlflow/sqlflow:latest']
sql-machine-learning/sqlflow,latest,/doc/tutorial/apsara2019/Dockerfile,COPY,5,"['titanic_dnn/titanic.sql         carprice_xgboost/carprice.sql         activepower_clustering/activepower.sql         /docker-entrypoint-initdb.d/', 'titanic_dnn/README.md /didi_tutorial/titanic_dnn.md', 'carprice_xgboost/README.md /didi_tutorial/carprice_xgboost.md', 'activepower_clustering/README.md /didi_tutorial/activepower_clustering.md', 'carprice_xgboost/imgs /didi_workspace/imgs']"
sql-machine-learning/sqlflow,latest,/doc/tutorial/apsara2019/Dockerfile,ENV,1,['SQLFLOW_NOTEBOOK_DIR=/didi_workspace']
sql-machine-learning/sqlflow,latest,/doc/tutorial/apsara2019/Dockerfile,RUN,1,"['echo ""Convert tutorials from Markdown to IPython notebooks ..."";         mkdir -p $SQLFLOW_NOTEBOOK_DIR; for file in /didi_tutorial/*.md; do         base=$(basename -- ""$file"");         output=$SQLFLOW_NOTEBOOK_DIR/${base%.*}.""ipynb"";         cat $file | markdown-to-ipynb --code-block-type=sql > $output; done']"
sql-machine-learning/sqlflow,latest,/doc/tutorial/apsara2019/Dockerfile,CMD,1,"['[""/start.sh""]']"
alfredfrancis/ai-chatbot-framework,latest,/Dockerfile,FROM,1,['python:3.9.6-slim']
alfredfrancis/ai-chatbot-framework,latest,/Dockerfile,RUN,2,"['apt-get update -qq  && apt-get install -y --no-install-recommends build-essential && apt-get autoremove -y', 'pip install --no-cache-dir -r requirements.txt']"
alfredfrancis/ai-chatbot-framework,latest,/Dockerfile,WORKDIR,1,['/usr/src/app']
alfredfrancis/ai-chatbot-framework,latest,/Dockerfile,COPY,2,"['requirements.txt ./', '. .']"
alfredfrancis/ai-chatbot-framework,latest,/Dockerfile,EXPOSE,1,['8080']
alfredfrancis/ai-chatbot-framework,latest,/Dockerfile,CMD,1,"['[""gunicorn"", ""run:app"" ,""--bind"", ""0.0.0.0:8080"" ,""--access-logfile=logs/gunicorn-access.log"" ,""--error-logfile"" ,""logs/gunicorn-error.log""]']"
alfredfrancis/ai-chatbot-framework,latest,/frontend/Dockerfile,FROM,2,"['node:8-alpine as builder', 'nginx:1.13.3-alpine']"
alfredfrancis/ai-chatbot-framework,latest,/frontend/Dockerfile,COPY,4,"['package.json package-lock.json ./', '. .', 'nginx/default.conf /etc/nginx/conf.d/', '--from=builder /ng-app/dist /usr/share/nginx/html']"
alfredfrancis/ai-chatbot-framework,latest,/frontend/Dockerfile,RUN,4,"['npm set progress=false && npm config set depth 0 && npm cache clean --force', 'npm i && mkdir /ng-app && cp -R ./node_modules ./ng-app', '$(npm bin)/ng build --environment=docker --prod --build-optimizer', 'rm -rf /usr/share/nginx/html/*']"
alfredfrancis/ai-chatbot-framework,latest,/frontend/Dockerfile,WORKDIR,1,['/ng-app']
alfredfrancis/ai-chatbot-framework,latest,/frontend/Dockerfile,CMD,1,"['[""nginx"", ""-g"", ""daemon off;""]']"
microsoft/DeepSpeed,latest,/docker/Dockerfile,FROM,1,['nvidia/cuda:10.0-devel-ubuntu18.04']
microsoft/DeepSpeed,latest,/docker/Dockerfile,ENV,14,"['STAGE_DIR=/tmp', 'MLNX_OFED_VERSION=4.6-1.0.1.1', 'NV_PEER_MEM_VERSION=1.1', 'NV_PEER_MEM_TAG=1.1-0', 'OPENMPI_BASEVERSION=4.0', 'OPENMPI_VERSION=${OPENMPI_BASEVERSION}.1', 'PATH=/usr/local/mpi/bin:${PATH}         LD_LIBRARY_PATH=/usr/local/lib:/usr/local/mpi/lib:/usr/local/mpi/lib64:${LD_LIBRARY_PATH}', 'DEBIAN_FRONTEND=noninteractive', 'PYTHON_VERSION=3', 'TENSORFLOW_VERSION=1.15.2', 'SSH_PORT=2222', 'PYTORCH_VERSION=1.2.0', 'TORCHVISION_VERSION=0.4.0', 'TENSORBOARDX_VERSION=1.8']"
microsoft/DeepSpeed,latest,/docker/Dockerfile,RUN,28,"['mkdir -p ${STAGE_DIR}', 'apt-get update &&         apt-get install -y --no-install-recommends         software-properties-common build-essential autotools-dev         nfs-common pdsh         cmake g++ gcc         curl wget vim tmux emacs less unzip         htop iftop iotop ca-certificates openssh-client openssh-server         rsync iputils-ping net-tools sudo         llvm-9-dev', 'add-apt-repository ppa:git-core/ppa -y &&         apt-get update &&         apt-get install -y git &&         git --version', 'echo ""ClientAliveInterval 30"" >> /etc/ssh/sshd_config', 'cp /etc/ssh/sshd_config ${STAGE_DIR}/sshd_config &&         sed ""0,/^#Port 22/s//Port 22/"" ${STAGE_DIR}/sshd_config > /etc/ssh/sshd_config', 'apt-get install -y libnuma-dev', 'cd ${STAGE_DIR} &&         wget -q -O - http://www.mellanox.com/downloads/ofed/MLNX_OFED-${MLNX_OFED_VERSION}/MLNX_OFED_LINUX-${MLNX_OFED_VERSION}-ubuntu18.04-x86_64.tgz | tar xzf - &&         cd MLNX_OFED_LINUX-${MLNX_OFED_VERSION}-ubuntu18.04-x86_64 &&         ./mlnxofedinstall --user-space-only --without-fw-update --all -q &&         cd ${STAGE_DIR} &&         rm -rf ${STAGE_DIR}/MLNX_OFED_LINUX-${MLNX_OFED_VERSION}-ubuntu18.04-x86_64*', 'mkdir -p ${STAGE_DIR} &&         git clone https://github.com/Mellanox/nv_peer_memory.git --branch ${NV_PEER_MEM_TAG} ${STAGE_DIR}/nv_peer_memory &&         cd ${STAGE_DIR}/nv_peer_memory &&         ./build_module.sh &&         cd ${STAGE_DIR} &&         tar xzf ${STAGE_DIR}/nvidia-peer-memory_${NV_PEER_MEM_VERSION}.orig.tar.gz &&         cd ${STAGE_DIR}/nvidia-peer-memory-${NV_PEER_MEM_VERSION} &&         apt-get update &&         apt-get install -y dkms &&         dpkg-buildpackage -us -uc &&         dpkg -i ${STAGE_DIR}/nvidia-peer-memory_${NV_PEER_MEM_TAG}_all.deb', 'cd ${STAGE_DIR} &&         wget -q -O - https://download.open-mpi.org/release/open-mpi/v${OPENMPI_BASEVERSION}/openmpi-${OPENMPI_VERSION}.tar.gz | tar xzf - &&         cd openmpi-${OPENMPI_VERSION} &&         ./configure --prefix=/usr/local/openmpi-${OPENMPI_VERSION} &&         make -j""$(nproc)"" install &&         ln -s /usr/local/openmpi-${OPENMPI_VERSION} /usr/local/mpi &&         test -f /usr/local/mpi/bin/mpic++ &&         cd ${STAGE_DIR} &&         rm -r ${STAGE_DIR}/openmpi-${OPENMPI_VERSION}', 'mv /usr/local/mpi/bin/mpirun /usr/local/mpi/bin/mpirun.real &&         echo \'#!/bin/bash\' > /usr/local/mpi/bin/mpirun &&         echo \'mpirun.real --allow-run-as-root --prefix /usr/local/mpi ""$@""\' >> /usr/local/mpi/bin/mpirun &&         chmod a+x /usr/local/mpi/bin/mpirun', 'apt-get install -y python3 python3-dev &&         rm -f /usr/bin/python &&         ln -s /usr/bin/python3 /usr/bin/python &&         curl -O https://bootstrap.pypa.io/get-pip.py &&         python get-pip.py &&         rm get-pip.py &&         pip install --upgrade pip &&         python -V && pip -V', 'pip install pyyaml', 'pip install ipython', 'pip install tensorflow-gpu==${TENSORFLOW_VERSION}', 'apt-get update &&         apt-get install -y --no-install-recommends         libsndfile-dev         libcupti-dev         libjpeg-dev         libpng-dev         screen         libaio-dev', 'pip install psutil         yappi         cffi         ipdb         pandas         matplotlib         py3nvml         pyarrow         graphviz         astor         boto3         tqdm         sentencepiece         msgpack         requests         pandas         sphinx         sphinx_rtd_theme         scipy         numpy         sklearn         scikit-learn         nvidia-ml-py3         mpi4py         cupy-cuda100', 'cat /etc/ssh/sshd_config > ${STAGE_DIR}/sshd_config &&         sed ""0,/^#Port 22/s//Port ${SSH_PORT}/"" ${STAGE_DIR}/sshd_config > /etc/ssh/sshd_config', 'pip install torch==${PYTORCH_VERSION}', 'pip install torchvision==${TORCHVISION_VERSION}', 'pip install tensorboardX==${TENSORBOARDX_VERSION}', 'rm -rf /usr/lib/python3/dist-packages/yaml &&         rm -rf /usr/lib/python3/dist-packages/PyYAML-*', 'useradd --create-home --uid 1000 --shell /bin/bash deepspeed', 'usermod -aG sudo deepspeed', 'echo ""deepspeed ALL=(ALL) NOPASSWD: ALL"" >> /etc/sudoers', 'git clone https://github.com/microsoft/DeepSpeed.git ${STAGE_DIR}/DeepSpeed', 'cd ${STAGE_DIR}/DeepSpeed &&         git checkout . &&         git checkout master &&         ./install.sh --pip_sudo', 'rm -rf ${STAGE_DIR}/DeepSpeed', 'python -c ""import deepspeed; print(deepspeed.__version__)""']"
microsoft/DeepSpeed,latest,/docker/Dockerfile,USER,1,['deepspeed']
google/deepvariant,latest,/Dockerfile,ARG,12,"['FROM_IMAGE=ubuntu:20.04', 'PYTHON_VERSION=3.8', 'DV_GPU_BUILD=0', 'DV_OPENVINO_BUILD=0', 'VERSION=1.3.0', 'DV_GPU_BUILD', 'DV_OPENVINO_BUILD', 'VERSION', 'DV_GPU_BUILD', 'DV_OPENVINO_BUILD', 'VERSION', 'PYTHON_VERSION']"
google/deepvariant,latest,/Dockerfile,FROM,3,"['continuumio/miniconda3 as conda_setup', '${FROM_IMAGE} as builder', '${FROM_IMAGE}']"
google/deepvariant,latest,/Dockerfile,RUN,13,"['conda config --add channels defaults &&     conda config --add channels bioconda &&     conda config --add channels conda-forge', 'conda create -n bio                     bioconda::bcftools=1.10                     bioconda::samtools=1.10     && conda clean -a', 'echo ""Acquire::http::proxy \\""$http_proxy\\"";\\n""          ""Acquire::https::proxy \\""$https_proxy\\"";"" > ""/etc/apt/apt.conf""', './build-prereq.sh   && PATH=""${HOME}/bin:${PATH}"" ./build_release_binaries.sh  # PATH for bazel', 'echo ""Acquire::http::proxy \\""$http_proxy\\"";\\n""          ""Acquire::https::proxy \\""$https_proxy\\"";"" > ""/etc/apt/apt.conf""', './run-prereq.sh', 'update-alternatives --install /usr/bin/python3 python3 /usr/bin/python${PYTHON_VERSION} 0 &&     update-alternatives --install /usr/bin/python python /usr/bin/python${PYTHON_VERSION} 0', 'BASH_HEADER=\'#!/bin/bash\' &&   printf ""%s\\n%s\\n""     ""${BASH_HEADER}""     \'python3 /opt/deepvariant/bin/make_examples.zip ""$@""\' >     /opt/deepvariant/bin/make_examples &&   printf ""%s\\n%s\\n""     ""${BASH_HEADER}""     \'python3 /opt/deepvariant/bin/call_variants.zip ""$@""\' >     /opt/deepvariant/bin/call_variants &&   printf ""%s\\n%s\\n""     ""${BASH_HEADER}""     \'python3 /opt/deepvariant/bin/postprocess_variants.zip ""$@""\' >     /opt/deepvariant/bin/postprocess_variants &&   printf ""%s\\n%s\\n""     ""${BASH_HEADER}""     \'python3 /opt/deepvariant/bin/model_train.zip ""$@""\' >     /opt/deepvariant/bin/model_train &&   printf ""%s\\n%s\\n""     ""${BASH_HEADER}""     \'python3 /opt/deepvariant/bin/model_eval.zip ""$@""\' >     /opt/deepvariant/bin/model_eval &&   printf ""%s\\n%s\\n""     ""${BASH_HEADER}""     \'python3 /opt/deepvariant/bin/vcf_stats_report.zip ""$@""\' >     /opt/deepvariant/bin/vcf_stats_report &&   printf ""%s\\n%s\\n""     ""${BASH_HEADER}""     \'python3 /opt/deepvariant/bin/show_examples.zip ""$@""\' >     /opt/deepvariant/bin/show_examples &&   printf ""%s\\n%s\\n""     ""${BASH_HEADER}""     \'python3 /opt/deepvariant/bin/runtime_by_region_vis.zip ""$@""\' >     /opt/deepvariant/bin/runtime_by_region_vis &&     printf ""%s\\n%s\\n""     ""${BASH_HEADER}""     \'python3 /opt/deepvariant/bin/multisample_make_examples.zip ""$@""\' >     /opt/deepvariant/bin/multisample_make_examples &&   printf ""%s\\n%s\\n""     ""${BASH_HEADER}""     \'python3 /opt/deepvariant/bin/freeze_graph.zip ""$@""\' >     /opt/deepvariant/bin/freeze_graph &&   printf ""%s\\n%s\\n""     ""${BASH_HEADER}""     \'python3 -u /opt/deepvariant/bin/run_deepvariant.py ""$@""\' >     /opt/deepvariant/bin/run_deepvariant &&   chmod +x /opt/deepvariant/bin/make_examples     /opt/deepvariant/bin/call_variants     /opt/deepvariant/bin/postprocess_variants     /opt/deepvariant/bin/vcf_stats_report     /opt/deepvariant/bin/show_examples     /opt/deepvariant/bin/runtime_by_region_vis     /opt/deepvariant/bin/multisample_make_examples     /opt/deepvariant/bin/model_train     /opt/deepvariant/bin/model_eval     /opt/deepvariant/bin/run_deepvariant     /opt/deepvariant/bin/freeze_graph', 'chmod +r /opt/models/wgs/model.ckpt*', 'chmod +r /opt/models/wes/model.ckpt*', 'chmod +r /opt/models/pacbio/model.ckpt*', 'chmod +r /opt/models/hybrid_pacbio_illumina/model.ckpt*', 'apt-get -y update &&   apt-get install -y parallel python3-pip &&   PATH=""${HOME}/.local/bin:$PATH"" python3 -m pip install absl-py==0.13.0 &&   apt-get clean autoclean &&   apt-get autoremove -y --purge &&   rm -rf /var/lib/apt/lists/*']"
google/deepvariant,latest,/Dockerfile,COPY,17,"['--from=conda_setup /opt/conda /opt/conda', '. /opt/deepvariant', '--from=builder /opt/deepvariant/bazel-bin/licenses.zip .', '--from=builder /opt/conda /opt/conda', '--from=builder /opt/deepvariant/run-prereq.sh .', '--from=builder /opt/deepvariant/settings.sh .', '--from=builder /opt/deepvariant/bazel-out/k8-opt/bin/deepvariant/make_examples.zip  .', '--from=builder /opt/deepvariant/bazel-out/k8-opt/bin/deepvariant/call_variants.zip  .', '--from=builder /opt/deepvariant/bazel-out/k8-opt/bin/deepvariant/postprocess_variants.zip  .', '--from=builder /opt/deepvariant/bazel-out/k8-opt/bin/deepvariant/vcf_stats_report.zip  .', '--from=builder /opt/deepvariant/bazel-out/k8-opt/bin/deepvariant/show_examples.zip  .', '--from=builder /opt/deepvariant/bazel-out/k8-opt/bin/deepvariant/runtime_by_region_vis.zip  .', '--from=builder /opt/deepvariant/bazel-out/k8-opt/bin/deepvariant/multisample_make_examples.zip  .', '--from=builder /opt/deepvariant/bazel-out/k8-opt/bin/deepvariant/model_train.zip .', '--from=builder /opt/deepvariant/bazel-out/k8-opt/bin/deepvariant/model_eval.zip  .', '--from=builder /opt/deepvariant/bazel-out/k8-opt/bin/deepvariant/freeze_graph.zip  .', '--from=builder /opt/deepvariant/scripts/run_deepvariant.py .']"
google/deepvariant,latest,/Dockerfile,LABEL,1,"['maintainer=""https://github.com/google/deepvariant/issues""']"
google/deepvariant,latest,/Dockerfile,ENV,8,"['DV_GPU_BUILD=${DV_GPU_BUILD}', 'DV_OPENVINO_BUILD=${DV_OPENVINO_BUILD}', 'VERSION=${VERSION}', 'DV_GPU_BUILD=${DV_GPU_BUILD}', 'DV_OPENVINO_BUILD=${DV_OPENVINO_BUILD}', 'VERSION ${VERSION}', 'PYTHON_VERSION ${PYTHON_VERSION}', 'PATH=""${PATH}"":/opt/conda/bin:/opt/conda/envs/bio/bin:/opt/deepvariant/bin']"
google/deepvariant,latest,/Dockerfile,WORKDIR,8,"['/opt/deepvariant', '/opt/', '/opt/deepvariant/bin/', '/opt/models/wgs', '/opt/models/wes', '/opt/models/pacbio', '/opt/models/hybrid_pacbio_illumina', '/opt/deepvariant']"
google/deepvariant,latest,/Dockerfile,ADD,16,"['https://storage.googleapis.com/deepvariant/models/DeepVariant/${VERSION}/DeepVariant-inception_v3-${VERSION}+data-wgs_standard/model.ckpt.data-00000-of-00001 .', 'https://storage.googleapis.com/deepvariant/models/DeepVariant/${VERSION}/DeepVariant-inception_v3-${VERSION}+data-wgs_standard/model.ckpt.index .', 'https://storage.googleapis.com/deepvariant/models/DeepVariant/${VERSION}/DeepVariant-inception_v3-${VERSION}+data-wgs_standard/model.ckpt.meta .', 'https://storage.googleapis.com/deepvariant/models/DeepVariant/${VERSION}/DeepVariant-inception_v3-${VERSION}+data-wgs_standard/model.ckpt.input_shape .', 'https://storage.googleapis.com/deepvariant/models/DeepVariant/${VERSION}/DeepVariant-inception_v3-${VERSION}+data-wes_standard/model.ckpt.data-00000-of-00001 .', 'https://storage.googleapis.com/deepvariant/models/DeepVariant/${VERSION}/DeepVariant-inception_v3-${VERSION}+data-wes_standard/model.ckpt.index .', 'https://storage.googleapis.com/deepvariant/models/DeepVariant/${VERSION}/DeepVariant-inception_v3-${VERSION}+data-wes_standard/model.ckpt.meta .', 'https://storage.googleapis.com/deepvariant/models/DeepVariant/${VERSION}/DeepVariant-inception_v3-${VERSION}+data-wes_standard/model.ckpt.input_shape .', 'https://storage.googleapis.com/deepvariant/models/DeepVariant/${VERSION}/DeepVariant-inception_v3-${VERSION}+data-pacbio_standard/model.ckpt.data-00000-of-00001 .', 'https://storage.googleapis.com/deepvariant/models/DeepVariant/${VERSION}/DeepVariant-inception_v3-${VERSION}+data-pacbio_standard/model.ckpt.index .', 'https://storage.googleapis.com/deepvariant/models/DeepVariant/${VERSION}/DeepVariant-inception_v3-${VERSION}+data-pacbio_standard/model.ckpt.meta .', 'https://storage.googleapis.com/deepvariant/models/DeepVariant/${VERSION}/DeepVariant-inception_v3-${VERSION}+data-pacbio_standard/model.ckpt.input_shape .', 'https://storage.googleapis.com/deepvariant/models/DeepVariant/${VERSION}/DeepVariant-inception_v3-${VERSION}+data-hybrid_standard/model.ckpt.data-00000-of-00001 .', 'https://storage.googleapis.com/deepvariant/models/DeepVariant/${VERSION}/DeepVariant-inception_v3-${VERSION}+data-hybrid_standard/model.ckpt.index .', 'https://storage.googleapis.com/deepvariant/models/DeepVariant/${VERSION}/DeepVariant-inception_v3-${VERSION}+data-hybrid_standard/model.ckpt.meta .', 'https://storage.googleapis.com/deepvariant/models/DeepVariant/${VERSION}/DeepVariant-inception_v3-${VERSION}+data-hybrid_standard/model.ckpt.input_shape .']"
google/deepvariant,latest,/Dockerfile,CMD,1,"['[""/opt/deepvariant/bin/run_deepvariant"", ""--help""]']"
google/deepvariant,latest,/Dockerfile.deeptrio,ARG,8,"['FROM_IMAGE=ubuntu:20.04', 'PYTHON_VERSION=3.8', 'DV_GPU_BUILD=0', 'VERSION_DEEPTRIO=1.3.0', 'DV_GPU_BUILD', 'DV_GPU_BUILD', 'VERSION_DEEPTRIO', 'PYTHON_VERSION']"
google/deepvariant,latest,/Dockerfile.deeptrio,FROM,3,"['continuumio/miniconda3 as conda_setup', '${FROM_IMAGE} as builder', '${FROM_IMAGE}']"
google/deepvariant,latest,/Dockerfile.deeptrio,RUN,13,"['conda config --add channels defaults &&     conda config --add channels bioconda &&     conda config --add channels conda-forge', 'conda create -n bio                     bioconda::bcftools=1.10                     bioconda::samtools=1.10     && conda clean -a', './build-prereq.sh   && PATH=""${HOME}/bin:${PATH}"" ./build_release_binaries.sh  # PATH for bazel', './run-prereq.sh', 'update-alternatives --install /usr/bin/python3 python3 /usr/bin/python${PYTHON_VERSION} 0 &&     update-alternatives --install /usr/bin/python python /usr/bin/python${PYTHON_VERSION} 0', 'BASH_HEADER=\'#!/bin/bash\' &&   printf ""%s\\n%s\\n""     ""${BASH_HEADER}""     \'python3 /opt/deepvariant/bin/deeptrio/make_examples.zip ""$@""\' >     /opt/deepvariant/bin/deeptrio/make_examples &&   printf ""%s\\n%s\\n""     ""${BASH_HEADER}""     \'python3 /opt/deepvariant/bin/call_variants.zip ""$@""\' >     /opt/deepvariant/bin/call_variants &&   printf ""%s\\n%s\\n""     ""${BASH_HEADER}""     \'python3 /opt/deepvariant/bin/postprocess_variants.zip ""$@""\' >     /opt/deepvariant/bin/postprocess_variants &&   printf ""%s\\n%s\\n""     ""${BASH_HEADER}""     \'python3 /opt/deepvariant/bin/runtime_by_region_vis.zip ""$@""\' >     /opt/deepvariant/bin/runtime_by_region_vis &&   printf ""%s\\n%s\\n""     ""${BASH_HEADER}""     \'python3 -u /opt/deepvariant/bin/deeptrio/run_deeptrio.py ""$@""\' >     /opt/deepvariant/bin/deeptrio/run_deeptrio &&   chmod +x /opt/deepvariant/bin/deeptrio/make_examples     /opt/deepvariant/bin/call_variants     /opt/deepvariant/bin/postprocess_variants     /opt/deepvariant/bin/runtime_by_region_vis     /opt/deepvariant/bin/deeptrio/run_deeptrio', 'chmod +r /opt/models/deeptrio/wgs/child/model.ckpt*', 'chmod +r /opt/models/deeptrio/wgs/parent/model.ckpt*', 'chmod +r /opt/models/deeptrio/pacbio/child/model.ckpt*', 'chmod +r /opt/models/deeptrio/pacbio/parent/model.ckpt*', 'chmod +r /opt/models/deeptrio/wes/child/model.ckpt*', 'chmod +r /opt/models/deeptrio/wes/parent/model.ckpt*', 'apt-get -y update &&   apt-get install -y parallel python3-pip &&   PATH=""${HOME}/.local/bin:$PATH"" python3 -m pip install absl-py==0.13.0 &&   apt-get clean autoclean &&   apt-get autoremove -y --purge &&   rm -rf /var/lib/apt/lists/*']"
google/deepvariant,latest,/Dockerfile.deeptrio,COPY,11,"['--from=conda_setup /opt/conda /opt/conda', '. /opt/deepvariant', '--from=builder /opt/deepvariant/bazel-bin/licenses.zip .', '--from=builder /opt/conda /opt/conda', '--from=builder /opt/deepvariant/run-prereq.sh .', '--from=builder /opt/deepvariant/settings.sh .', '--from=builder /opt/deepvariant/bazel-out/k8-opt/bin/deepvariant/call_variants.zip  .', '--from=builder /opt/deepvariant/bazel-out/k8-opt/bin/deepvariant/postprocess_variants.zip  .', '--from=builder /opt/deepvariant/bazel-out/k8-opt/bin/deepvariant/runtime_by_region_vis.zip  .', '--from=builder /opt/deepvariant/scripts/run_deeptrio.py ./deeptrio/', '--from=builder /opt/deepvariant/bazel-out/k8-opt/bin/deeptrio/make_examples.zip  ./deeptrio/']"
google/deepvariant,latest,/Dockerfile.deeptrio,LABEL,1,"['maintainer=""https://github.com/google/deepvariant/issues""']"
google/deepvariant,latest,/Dockerfile.deeptrio,ENV,5,"['DV_GPU_BUILD=${DV_GPU_BUILD}', 'DV_GPU_BUILD=${DV_GPU_BUILD}', 'VERSION_DEEPTRIO ${VERSION_DEEPTRIO}', 'PYTHON_VERSION ${PYTHON_VERSION}', 'PATH=""${PATH}"":/opt/conda/bin:/opt/conda/envs/bio/bin:/opt/deepvariant/bin/deeptrio:/opt/deepvariant/bin']"
google/deepvariant,latest,/Dockerfile.deeptrio,WORKDIR,10,"['/opt/deepvariant', '/opt/', '/opt/deepvariant/bin/', '/opt/models/deeptrio/wgs/child', '/opt/models/deeptrio/wgs/parent', '/opt/models/deeptrio/pacbio/child', '/opt/models/deeptrio/pacbio/parent', '/opt/models/deeptrio/wes/child', '/opt/models/deeptrio/wes/parent', '/opt/deepvariant']"
google/deepvariant,latest,/Dockerfile.deeptrio,ADD,24,"['https://storage.googleapis.com/deepvariant/models/DeepTrio/${VERSION_DEEPTRIO}/DeepTrio-inception_v3-${VERSION_DEEPTRIO}+data-wgs_child_standard/model.ckpt.data-00000-of-00001 .', 'https://storage.googleapis.com/deepvariant/models/DeepTrio/${VERSION_DEEPTRIO}/DeepTrio-inception_v3-${VERSION_DEEPTRIO}+data-wgs_child_standard/model.ckpt.index .', 'https://storage.googleapis.com/deepvariant/models/DeepTrio/${VERSION_DEEPTRIO}/DeepTrio-inception_v3-${VERSION_DEEPTRIO}+data-wgs_child_standard/model.ckpt.meta .', 'https://storage.googleapis.com/deepvariant/models/DeepTrio/${VERSION_DEEPTRIO}/DeepTrio-inception_v3-${VERSION_DEEPTRIO}+data-wgs_child_standard/model.ckpt.input_shape .', 'https://storage.googleapis.com/deepvariant/models/DeepTrio/${VERSION_DEEPTRIO}/DeepTrio-inception_v3-${VERSION_DEEPTRIO}+data-wgs_parent_standard/model.ckpt.data-00000-of-00001 .', 'https://storage.googleapis.com/deepvariant/models/DeepTrio/${VERSION_DEEPTRIO}/DeepTrio-inception_v3-${VERSION_DEEPTRIO}+data-wgs_parent_standard/model.ckpt.index .', 'https://storage.googleapis.com/deepvariant/models/DeepTrio/${VERSION_DEEPTRIO}/DeepTrio-inception_v3-${VERSION_DEEPTRIO}+data-wgs_parent_standard/model.ckpt.meta .', 'https://storage.googleapis.com/deepvariant/models/DeepTrio/${VERSION_DEEPTRIO}/DeepTrio-inception_v3-${VERSION_DEEPTRIO}+data-wgs_parent_standard/model.ckpt.input_shape .', 'https://storage.googleapis.com/deepvariant/models/DeepTrio/${VERSION_DEEPTRIO}/DeepTrio-inception_v3-${VERSION_DEEPTRIO}+data-pacbio_child_standard/model.ckpt.data-00000-of-00001 .', 'https://storage.googleapis.com/deepvariant/models/DeepTrio/${VERSION_DEEPTRIO}/DeepTrio-inception_v3-${VERSION_DEEPTRIO}+data-pacbio_child_standard/model.ckpt.index .', 'https://storage.googleapis.com/deepvariant/models/DeepTrio/${VERSION_DEEPTRIO}/DeepTrio-inception_v3-${VERSION_DEEPTRIO}+data-pacbio_child_standard/model.ckpt.meta .', 'https://storage.googleapis.com/deepvariant/models/DeepTrio/${VERSION_DEEPTRIO}/DeepTrio-inception_v3-${VERSION_DEEPTRIO}+data-pacbio_child_standard/model.ckpt.input_shape .', 'https://storage.googleapis.com/deepvariant/models/DeepTrio/${VERSION_DEEPTRIO}/DeepTrio-inception_v3-${VERSION_DEEPTRIO}+data-pacbio_parent_standard/model.ckpt.data-00000-of-00001 .', 'https://storage.googleapis.com/deepvariant/models/DeepTrio/${VERSION_DEEPTRIO}/DeepTrio-inception_v3-${VERSION_DEEPTRIO}+data-pacbio_parent_standard/model.ckpt.index .', 'https://storage.googleapis.com/deepvariant/models/DeepTrio/${VERSION_DEEPTRIO}/DeepTrio-inception_v3-${VERSION_DEEPTRIO}+data-pacbio_parent_standard/model.ckpt.meta .', 'https://storage.googleapis.com/deepvariant/models/DeepTrio/${VERSION_DEEPTRIO}/DeepTrio-inception_v3-${VERSION_DEEPTRIO}+data-pacbio_parent_standard/model.ckpt.input_shape .', 'https://storage.googleapis.com/deepvariant/models/DeepTrio/${VERSION_DEEPTRIO}/DeepTrio-inception_v3-${VERSION_DEEPTRIO}+data-wes_child_standard/model.ckpt.data-00000-of-00001 .', 'https://storage.googleapis.com/deepvariant/models/DeepTrio/${VERSION_DEEPTRIO}/DeepTrio-inception_v3-${VERSION_DEEPTRIO}+data-wes_child_standard/model.ckpt.index .', 'https://storage.googleapis.com/deepvariant/models/DeepTrio/${VERSION_DEEPTRIO}/DeepTrio-inception_v3-${VERSION_DEEPTRIO}+data-wes_child_standard/model.ckpt.meta .', 'https://storage.googleapis.com/deepvariant/models/DeepTrio/${VERSION_DEEPTRIO}/DeepTrio-inception_v3-${VERSION_DEEPTRIO}+data-wes_child_standard/model.ckpt.input_shape .', 'https://storage.googleapis.com/deepvariant/models/DeepTrio/${VERSION_DEEPTRIO}/DeepTrio-inception_v3-${VERSION_DEEPTRIO}+data-wes_parent_standard/model.ckpt.data-00000-of-00001 .', 'https://storage.googleapis.com/deepvariant/models/DeepTrio/${VERSION_DEEPTRIO}/DeepTrio-inception_v3-${VERSION_DEEPTRIO}+data-wes_parent_standard/model.ckpt.index .', 'https://storage.googleapis.com/deepvariant/models/DeepTrio/${VERSION_DEEPTRIO}/DeepTrio-inception_v3-${VERSION_DEEPTRIO}+data-wes_parent_standard/model.ckpt.meta .', 'https://storage.googleapis.com/deepvariant/models/DeepTrio/${VERSION_DEEPTRIO}/DeepTrio-inception_v3-${VERSION_DEEPTRIO}+data-wes_parent_standard/model.ckpt.input_shape .']"
google/deepvariant,latest,/Dockerfile.deeptrio,CMD,1,"['[""/opt/deepvariant/bin/deeptrio/run_deeptrio"", ""--help""]']"
SeldonIO/seldon-core,latest,/incubating/wrappers/s2i/python_openvino/Dockerfile_openvino_base,FROM,2,"['intelpython/intelpython3_core as DEV', 'intelpython/intelpython3_core as PROD']"
SeldonIO/seldon-core,latest,/incubating/wrappers/s2i/python_openvino/Dockerfile_openvino_base,RUN,15,"['apt-get update && apt-get install -y             autoconf             automake             build-essential             ca-certificates             curl             git             gstreamer1.0-plugins-base             libavcodec-dev             libavformat-dev             libboost-regex-dev             libcairo2-dev             libgfortran3             libglib2.0-dev             libgstreamer1.0-0             libgtk2.0-dev             libopenblas-dev             libpango1.0-dev             libpng-dev             libssl-dev             libswscale-dev             libtool             libusb-1.0-0-dev             pkg-config             unzip             vim             wget', 'wget https://cmake.org/files/v3.14/cmake-3.14.3.tar.gz &&     tar -xvzf cmake-3.14.3.tar.gz &&     cd cmake-3.14.3/  &&     ./configure &&     make -j$(nproc) &&     make install', 'echo ""deb http://ftp.us.debian.org/debian/ jessie main contrib non-free"" >> /etc/apt/sources.list &&     echo ""deb-src http://ftp.us.debian.org/debian/ jessie main contrib non-free"" >> /etc/apt/sources.list &&     apt update &&     apt-get install -y g++-4.9', 'pip install cython numpy', 'git clone --depth=1 -b 2019_R1.0.1 https://github.com/opencv/dldt.git ${DLDT_DIR} &&     cd ${DLDT_DIR} && git submodule init && git submodule update --recursive &&     rm -Rf .git && rm -Rf model-optimizer', 'curl -L https://github.com/intel/mkl-dnn/releases/download/v0.18/mklml_lnx_2019.0.3.20190220.tgz | tar -xz', 'cmake -DGEMM=MKL  -DMKLROOT=${DLDT_DIR}/mklml_lnx_2019.0.3.20190220 -DENABLE_MKL_DNN=ON -DTHREADING=OMP -DCMAKE_BUILD_TYPE=Release ..', 'make -j$(nproc)', 'cmake -DInferenceEngine_DIR=${DLDT_DIR}/inference-engine/build -DPYTHON_EXECUTABLE=$(which python) -DPYTHON_LIBRARY=/opt/conda/lib/libpython3.6m.so -DPYTHON_INCLUDE_DIR=/opt/conda/include/python3.6m ${DLDT_DIR}/inference-engine/ie_bridges/python &&     make -j$(nproc)', 'apt-get update && apt-get install -y --no-install-recommends             curl             ca-certificates             build-essential             python3-setuptools             vim', 'conda create --name myenv -y', 'conda install -y tensorflow opencv && conda clean -a -y', 'pip install jaeger-client==3.13.0 seldon-core', 'pip install --upgrade setuptools', 'sed -i ""s/max_workers=10/max_workers=1/g"" /opt/conda/lib/python3.6/site-packages/seldon_core/wrapper.py']"
SeldonIO/seldon-core,latest,/incubating/wrappers/s2i/python_openvino/Dockerfile_openvino_base,ENV,4,"['CXX=/usr/bin/g++-4.9', 'LD_LIBRARY_PATH=/usr/local/lib', 'PYTHONPATH=/usr/local/lib', 'PATH /opt/conda/envs/myenv/bin:$PATH']"
SeldonIO/seldon-core,latest,/incubating/wrappers/s2i/python_openvino/Dockerfile_openvino_base,ARG,1,['DLDT_DIR=/dldt-2019_R1.0.1']
SeldonIO/seldon-core,latest,/incubating/wrappers/s2i/python_openvino/Dockerfile_openvino_base,WORKDIR,4,"['${DLDT_DIR}', '${DLDT_DIR}/inference-engine/build', '${DLDT_DIR}/inference-engine/ie_bridges/python/build', '/microservice']"
SeldonIO/seldon-core,latest,/incubating/wrappers/s2i/python_openvino/Dockerfile_openvino_base,LABEL,1,"['io.openshift.s2i.scripts-url=""image:///s2i/bin""']"
SeldonIO/seldon-core,latest,/incubating/wrappers/s2i/python_openvino/Dockerfile_openvino_base,COPY,4,"['--from=DEV /dldt-2019_R1.0.1/inference-engine/bin/intel64/Release/lib/*.so /usr/local/lib/', '--from=DEV /dldt-2019_R1.0.1/inference-engine/ie_bridges/python/bin/intel64/Release/python_api/python3.6/openvino/ /usr/local/lib/openvino/', '--from=DEV /dldt-2019_R1.0.1/mklml_lnx_2019.0.3.20190220/lib/lib*.so /usr/local/lib/', './s2i/bin/ /s2i/bin']"
SeldonIO/seldon-core,latest,/incubating/wrappers/s2i/python_openvino/Dockerfile_openvino_base,EXPOSE,1,['5000']
SeldonIO/seldon-core,latest,/incubating/wrappers/s2i/nodejs/Dockerfile,FROM,1,['node:latest']
SeldonIO/seldon-core,latest,/incubating/wrappers/s2i/nodejs/Dockerfile,LABEL,1,"['io.openshift.s2i.scripts-url=""image:///s2i/bin""']"
SeldonIO/seldon-core,latest,/incubating/wrappers/s2i/nodejs/Dockerfile,RUN,2,"['mkdir microservice', 'npm install']"
SeldonIO/seldon-core,latest,/incubating/wrappers/s2i/nodejs/Dockerfile,WORKDIR,1,['/microservice']
SeldonIO/seldon-core,latest,/incubating/wrappers/s2i/nodejs/Dockerfile,COPY,5,"['*microservice.js /microservice/', 'package.json /microservice/', 'prediction_grpc_pb.js /microservice/', 'prediction_pb.js /microservice/', './s2i/bin/ /s2i/bin']"
SeldonIO/seldon-core,latest,/incubating/wrappers/s2i/nodejs/Dockerfile,EXPOSE,1,['5000']
SeldonIO/seldon-core,latest,/incubating/wrappers/s2i/java-jni/Dockerfile.runtime,FROM,1,['registry.access.redhat.com/ubi8/python-36']
SeldonIO/seldon-core,latest,/incubating/wrappers/s2i/java-jni/Dockerfile.runtime,LABEL,1,"['io.openshift.s2i.scripts-url=""image:///s2i/bin""       io.openshift.s2i.assemble-input-files=""/home/jboss""']"
SeldonIO/seldon-core,latest,/incubating/wrappers/s2i/java-jni/Dockerfile.runtime,USER,2,"['root', 'default']"
SeldonIO/seldon-core,latest,/incubating/wrappers/s2i/java-jni/Dockerfile.runtime,ENV,1,['JAVA_MAJOR_VERSION=11     JAVA_HOME=/usr/lib/jvm/jre-11']
SeldonIO/seldon-core,latest,/incubating/wrappers/s2i/java-jni/Dockerfile.runtime,RUN,6,"['INSTALL_PKGS=""java-11-openjdk-headless"" &&     yum -y --setopt=tsflags=nodocs install $INSTALL_PKGS &&     rpm -V $INSTALL_PKGS &&     yum -y clean all --enablerepo=\'*\'', 'yum -y update-minimal --security --sec-severity=Important --sec-severity=Critical', 'yum remove -y nodejs httpd', 'pip install --upgrade pip setuptools wheel', 'make -C python install', 'pip install -r requirements.txt']"
SeldonIO/seldon-core,latest,/incubating/wrappers/s2i/java-jni/Dockerfile.runtime,COPY,5,"['./s2i/bin/ /s2i/bin', '--chown=1001 _python .', '--chown=1001 _python/python/licenses/license.txt .', '--chown=1001 ./java-jni/requirements.txt ./requirements.txt', '--chown=1001 ./java-jni ./']"
SeldonIO/seldon-core,latest,/incubating/wrappers/s2i/java-jni/Dockerfile.runtime,EXPOSE,1,['5000']
SeldonIO/seldon-core,latest,/incubating/wrappers/s2i/java-jni/Dockerfile.build,FROM,1,['registry.access.redhat.com/ubi8/openjdk-11']
SeldonIO/seldon-core,latest,/incubating/wrappers/s2i/java-jni/Dockerfile.build,LABEL,1,"['io.openshift.s2i.scripts-url=""image:///s2i/bin""']"
SeldonIO/seldon-core,latest,/incubating/wrappers/s2i/java-jni/Dockerfile.build,COPY,1,['./s2i/bin/ /s2i/bin']
SeldonIO/seldon-core,latest,/incubating/wrappers/s2i/go/Dockerfile,FROM,1,['golang']
SeldonIO/seldon-core,latest,/incubating/wrappers/s2i/go/Dockerfile,RUN,3,"['go get -u google.golang.org/grpc', 'go get -u github.com/gorilla/mux', 'go build -o /server']"
SeldonIO/seldon-core,latest,/incubating/wrappers/s2i/go/Dockerfile,WORKDIR,1,['/go/src/github.com/seldonio/seldon-core/examples/wrappers/go']
SeldonIO/seldon-core,latest,/incubating/wrappers/s2i/go/Dockerfile,COPY,1,['. .']
SeldonIO/seldon-core,latest,/incubating/wrappers/s2i/go/Dockerfile,ENTRYPOINT,1,"['[ ""sh"", ""-c"", ""/server --server_type ${SERVER_TYPE:-grpc}"" ]']"
SeldonIO/seldon-core,latest,/incubating/wrappers/s2i/R/Dockerfile,FROM,1,['rocker/r-base']
SeldonIO/seldon-core,latest,/incubating/wrappers/s2i/R/Dockerfile,LABEL,1,"['io.openshift.s2i.scripts-url=""image:///s2i/bin""']"
SeldonIO/seldon-core,latest,/incubating/wrappers/s2i/R/Dockerfile,RUN,8,"['apt-get update -qq && apt-get install -y       git-core       libgit2-dev       libsodium-dev       libssl-dev       libcurl4-gnutls-dev', 'Rscript -e ""install.packages(\'plumber\')""', 'Rscript -e ""install.packages(\'optparse\')""', 'Rscript -e ""install.packages(\'jsonlite\')""', 'Rscript -e ""install.packages(\'urltools\')""', 'Rscript -e ""install.packages(\'caret\')""', 'Rscript -e ""install.packages(\'devtools\')""', 'mkdir microservice']"
SeldonIO/seldon-core,latest,/incubating/wrappers/s2i/R/Dockerfile,WORKDIR,1,['/microservice']
SeldonIO/seldon-core,latest,/incubating/wrappers/s2i/R/Dockerfile,COPY,2,"['microservice.R /microservice', './s2i/bin/ /s2i/bin']"
SeldonIO/seldon-core,latest,/incubating/wrappers/s2i/R/Dockerfile,EXPOSE,1,['5000']
SeldonIO/seldon-core,latest,/incubating/wrappers/s2i/python-tensorrt/Dockerfile,FROM,1,['seldonio/seldon-core-s2i-python3:0.2']
SeldonIO/seldon-core,latest,/incubating/wrappers/s2i/python-tensorrt/Dockerfile,RUN,6,"['apt-get update && apt-get install -y     \tbuild-essential libssl1.0-dev libopencv-dev libopencv-core-dev python-pil \tsoftware-properties-common autoconf automake libtool pkg-config', 'git clone --single-branch -b change_ld_flags https://github.com/cliveseldon/dl-inference-server.git', 'pip install --no-cache-dir --upgrade setuptools grpcio-tools', 'cd dl-inference-server &&     make -j4 -f Makefile.clients all pip', 'pip install --no-cache-dir --upgrade dl-inference-server/build/dist/dist/inference_server-0.5.0-cp36-cp36m-linux_x86_64.whl', 'rm -rf dl-inference-server/build']"
SeldonIO/seldon-core,latest,/incubating/wrappers/s2i/python-tensorrt/Dockerfile,WORKDIR,2,"['/home', '/microservice']"
SeldonIO/seldon-core,latest,/incubating/wrappers/s2i/python-ngraph-onnx/Dockerfile,FROM,1,['seldonio/seldon-core-s2i-python3:0.4']
SeldonIO/seldon-core,latest,/incubating/wrappers/s2i/python-ngraph-onnx/Dockerfile,RUN,6,"['apt-get update && apt-get install -y \tbuild-essential cmake clang-3.9 clang-format-3.9 \tgit curl zlib1g zlib1g-dev libtinfo-dev unzip autoconf automake libtool         clang-3.9 clang-format-3.9         git         wget patch diffutils', 'apt-get clean autoclean &&     apt-get autoremove -y', 'pip install --upgrade pip', 'git clone --single-branch --branch python_docker_fix https://github.com/cliveseldon/ngraph.git &&     cd ngraph &&     mkdir build && cd build &&     cmake ../ -DNGRAPH_USE_PREBUILT_LLVM=TRUE -DCMAKE_INSTALL_PREFIX=/home/ngraph_dist -DNGRAPH_ONNX_IMPORT_ENABLE=TRUE &&     make -j 6 &&     make install', 'cd ngraph/python &&     git clone --recursive -b allow-nonconstructible-holders https://github.com/jagerman/pybind11.git &&     export PYBIND_HEADERS_PATH=$PWD/pybind11 &&     export NGRAPH_CPP_BUILD_PATH=/home/ngraph_dist &&     python3 setup.py bdist_wheel &&     pip install -U dist/ngraph_core*.whl &&     rm -rf build && rm -rf dist', 'pip install git+https://github.com/NervanaSystems/ngraph-onnx/']"
SeldonIO/seldon-core,latest,/incubating/wrappers/s2i/python-ngraph-onnx/Dockerfile,WORKDIR,1,['/home']
SeldonIO/seldon-core,latest,/incubating/wrappers/s2i/java/Dockerfile.runtime,ARG,1,['IMAGE_SOURCE=openjdk:13.0.1-jdk-buster']
SeldonIO/seldon-core,latest,/incubating/wrappers/s2i/java/Dockerfile.runtime,FROM,1,['$IMAGE_SOURCE']
SeldonIO/seldon-core,latest,/incubating/wrappers/s2i/java/Dockerfile.runtime,RUN,2,"['apt-get upgrade &&         apt-get update', 'mkdir /build']"
SeldonIO/seldon-core,latest,/incubating/wrappers/s2i/java/Dockerfile.runtime,LABEL,2,"['io.openshift.s2i.scripts-url=""image:///s2i/bin""', 'io.openshift.s2i.assemble-input-files=""/build""']"
SeldonIO/seldon-core,latest,/incubating/wrappers/s2i/java/Dockerfile.runtime,COPY,1,['./s2i/bin/ /s2i/bin']
SeldonIO/seldon-core,latest,/incubating/wrappers/s2i/java/Dockerfile.runtime,WORKDIR,1,['/microservice']
SeldonIO/seldon-core,latest,/incubating/wrappers/s2i/java/Dockerfile.runtime,EXPOSE,1,['5000']
SeldonIO/seldon-core,latest,/incubating/wrappers/s2i/java/Dockerfile.build,ARG,1,['IMAGE_SOURCE=seldonio/core-builder:0.19']
SeldonIO/seldon-core,latest,/incubating/wrappers/s2i/java/Dockerfile.build,FROM,1,['$IMAGE_SOURCE']
SeldonIO/seldon-core,latest,/incubating/wrappers/s2i/java/Dockerfile.build,LABEL,1,"['io.openshift.s2i.scripts-url=""image:///s2i/bin""']"
SeldonIO/seldon-core,latest,/incubating/wrappers/s2i/java/Dockerfile.build,COPY,1,['./s2i/bin/ /s2i/bin']
SeldonIO/seldon-core,latest,/incubating/wrappers/s2i/java/Dockerfile.build,WORKDIR,1,['/build']
SeldonIO/seldon-core,latest,/incubating/wrappers/s2i/cpp/Dockerfile,ARG,2,"['BASE_IMAGE_TAG', 'BASE_IMAGE_NAME']"
SeldonIO/seldon-core,latest,/incubating/wrappers/s2i/cpp/Dockerfile,FROM,1,['$BASE_IMAGE_NAME:$BASE_IMAGE_TAG']
SeldonIO/seldon-core,latest,/incubating/wrappers/s2i/cpp/Dockerfile,LABEL,1,"['io.openshift.s2i.scripts-url=""image:///s2i/bin""']"
SeldonIO/seldon-core,latest,/incubating/wrappers/s2i/cpp/Dockerfile,RUN,8,"['dnf install -y cmake', 'dnf install -y python3-devel', 'git clone --depth 1 --branch v2.6.1 https://github.com/pybind/pybind11 &&         mkdir build &&         cmake pybind11/ -Bbuild &&         make -C build/ -j16 &&         make -C build/ install &&         rm -rf build pybind11', 'wget https://github.com/protocolbuffers/protobuf/releases/download/v3.14.0-rc2/protobuf-all-3.14.0-rc-2.tar.gz &&     tar -zxvf protobuf-all-3.14.0-rc-2.tar.gz &&     cd protobuf-3.14.0-rc-2/ &&     ./configure &&     make -j16 &&     make install &&     ldconfig', 'rm -rf _cpp/build/ || echo ""no build dir""', 'cmake _cpp/. -B_cpp/build/ -DSELDON_OPT_BUILD_STATIC=0', 'make -C _cpp/build/ -j16', 'make -C _cpp/build/ install']"
SeldonIO/seldon-core,latest,/incubating/wrappers/s2i/cpp/Dockerfile,COPY,3,"['. _cpp/', 'base/CMakeLists.txt .', 'base/setup.py .']"
SeldonIO/seldon-core,latest,/incubating/wrappers/s2i/cpp/Dockerfile,ENV,5,"['MODEL_NAME SeldonPackage.ModelClass', 'API_TYPE REST', 'SERVICE_TYPE MODEL', 'PERSISTENCE 0', 'PAYLOAD_PASSTHROUGH true']"
SeldonIO/seldon-core,latest,/incubating/wrappers/s2i/cpp/Dockerfile,WORKDIR,1,['/microservice']
SeldonIO/seldon-core,latest,/incubating/wrappers/s2i/cpp/Dockerfile,EXPOSE,1,['5000']
SeldonIO/seldon-core,latest,/wrappers/s2i/python/Dockerfile.conda,FROM,1,['registry.access.redhat.com/ubi8/ubi']
SeldonIO/seldon-core,latest,/wrappers/s2i/python/Dockerfile.conda,ENV,3,"['LANG=C.UTF-8 LC_ALL=C.UTF-8', 'PATH /opt/conda/bin:$PATH', 'TINI_VERSION v0.16.1']"
SeldonIO/seldon-core,latest,/wrappers/s2i/python/Dockerfile.conda,RUN,5,"['dnf update -y &&     dnf install -y wget bzip2 ca-certificates curl git', 'wget -O certifi-python-certifi.tar.gz https://github.com/certifi/python-certifi/archive/master.tar.gz', 'wget --quiet https://repo.anaconda.com/miniconda/Miniconda3-${CONDA_DOWNLOAD_VERSION}-Linux-x86_64.sh -O ~/miniconda.sh &&     /bin/bash ~/miniconda.sh -b -p /opt/conda &&     rm ~/miniconda.sh &&     /opt/conda/bin/conda clean -tipsy &&     ln -s /opt/conda/etc/profile.d/conda.sh /etc/profile.d/conda.sh &&     echo "". /opt/conda/etc/profile.d/conda.sh"" >> ~/.bashrc &&     echo ""conda activate base"" >> ~/.bashrc &&     chgrp -R root /opt/conda && chmod -R g+rw /opt/conda', 'chmod +x /usr/bin/tini', 'yum -y update-minimal --security --sec-severity=Important --sec-severity=Critical']"
SeldonIO/seldon-core,latest,/wrappers/s2i/python/Dockerfile.conda,ARG,1,['CONDA_DOWNLOAD_VERSION']
SeldonIO/seldon-core,latest,/wrappers/s2i/python/Dockerfile.conda,ADD,1,['https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini /usr/bin/tini']
SeldonIO/seldon-core,latest,/wrappers/s2i/python/Dockerfile.conda,ENTRYPOINT,1,"['[ ""/usr/bin/tini"", ""--"" ]']"
SeldonIO/seldon-core,latest,/wrappers/s2i/python/Dockerfile.conda,CMD,1,"['[ ""/bin/bash"" ]']"
SeldonIO/seldon-core,latest,/wrappers/s2i/python/Dockerfile.gpu,FROM,1,['nvidia/cuda:10.2-cudnn8-runtime-ubuntu18.04']
SeldonIO/seldon-core,latest,/wrappers/s2i/python/Dockerfile.gpu,LABEL,1,"['io.openshift.s2i.scripts-url=""image:///s2i/bin""']"
SeldonIO/seldon-core,latest,/wrappers/s2i/python/Dockerfile.gpu,RUN,9,"['apt-get update -y && apt-get install -qy --no-install-recommends     wget     libsm6     libxext6     libxrender-dev     libglib2.0-0     git     build-essential     &&     rm -rf /var/lib/apt/lists/*', 'wget -O certifi-python-certifi.tar.gz https://github.com/certifi/python-certifi/archive/master.tar.gz', 'wget --quiet https://repo.anaconda.com/miniconda/Miniconda3-${CONDA_DOWNLOAD_VERSION}-Linux-x86_64.sh -O ~/miniconda.sh &&     /bin/bash ~/miniconda.sh -b -p /opt/conda &&     rm ~/miniconda.sh &&     /opt/conda/bin/conda clean -tipsy &&     ln -s /opt/conda/etc/profile.d/conda.sh /etc/profile.d/conda.sh &&     echo "". /opt/conda/etc/profile.d/conda.sh"" >> ~/.bashrc &&     echo ""conda activate base"" >> ~/.bashrc &&     find /opt/conda/ -follow -type f -name \'*.a\' -delete &&     find /opt/conda/ -follow -type f -name \'*.js.map\' -delete &&     /opt/conda/bin/conda clean -afy', 'conda install --yes python=$PYTHON_VERSION conda=$CONDA_VERSION', 'apt-get update --yes && apt-get install --yes gcc make build-essential', 'mkdir microservice', 'cd /microservice/python && pip install .', 'mkdir -p /.conda && chmod a+rwx /.conda', 'chown -R 8888 /microservice']"
SeldonIO/seldon-core,latest,/wrappers/s2i/python/Dockerfile.gpu,ENV,1,['PATH /opt/conda/bin:$PATH']
SeldonIO/seldon-core,latest,/wrappers/s2i/python/Dockerfile.gpu,ARG,3,"['CONDA_DOWNLOAD_VERSION', 'PYTHON_VERSION', 'CONDA_VERSION']"
SeldonIO/seldon-core,latest,/wrappers/s2i/python/Dockerfile.gpu,WORKDIR,1,['/microservice']
SeldonIO/seldon-core,latest,/wrappers/s2i/python/Dockerfile.gpu,COPY,3,"['./s2i/bin/ /s2i/bin', '_python /microservice', 'version.txt /microservice/version.txt']"
SeldonIO/seldon-core,latest,/wrappers/s2i/python/Dockerfile.gpu,EXPOSE,1,['5000']
SeldonIO/seldon-core,latest,/wrappers/s2i/python/Dockerfile,ARG,4,"['BASE_IMAGE', 'IMAGE_VERSION', 'PYTHON_VERSION', 'CONDA_VERSION']"
SeldonIO/seldon-core,latest,/wrappers/s2i/python/Dockerfile,FROM,1,['$BASE_IMAGE:$IMAGE_VERSION']
SeldonIO/seldon-core,latest,/wrappers/s2i/python/Dockerfile,LABEL,1,"['io.openshift.s2i.scripts-url=""image:///s2i/bin""']"
SeldonIO/seldon-core,latest,/wrappers/s2i/python/Dockerfile,RUN,8,"['wget -O certifi-python-certifi.tar.gz https://github.com/certifi/python-certifi/archive/master.tar.gz', 'conda install --yes python=$PYTHON_VERSION conda=$CONDA_VERSION', 'dnf install -y make automake gcc gcc-c++', 'pip install pip==20.2 setuptools==46.1', 'mkdir microservice', 'cd /microservice/python && pip install .', 'yum -y update-minimal --security --sec-severity=Important --sec-severity=Critical', 'mkdir -p /.conda &&     chmod a+rwx /.conda &&     chown -R 8888 /microservice  &&     conda clean --index-cache']"
SeldonIO/seldon-core,latest,/wrappers/s2i/python/Dockerfile,WORKDIR,1,['/microservice']
SeldonIO/seldon-core,latest,/wrappers/s2i/python/Dockerfile,COPY,4,"['./s2i/bin/ /s2i/bin', 'version.txt /microservice/version.txt', '_python/python/licenses/license.txt .', '_python /microservice']"
SeldonIO/seldon-core,latest,/wrappers/s2i/python/Dockerfile,EXPOSE,1,['5000']
SeldonIO/seldon-core,latest,/util/loadtester/Dockerfile,FROM,1,['ubuntu:16.04']
SeldonIO/seldon-core,latest,/util/loadtester/Dockerfile,ENV,3,"['HOME /root', 'DEBIAN_FRONTEND noninteractive', 'SELDON_HOME /home/seldon']"
SeldonIO/seldon-core,latest,/util/loadtester/Dockerfile,RUN,4,"['apt-get update -y', 'apt-get install gcc g++ python-gevent libzmq3-dev python-dev python-pip git -y', 'pip install -r /tmp/requirements.txt', 'git clone https://github.com/locustio/locust &&     cd locust &&     python setup.py install']"
SeldonIO/seldon-core,latest,/util/loadtester/Dockerfile,COPY,1,['requirements.txt /tmp/']
SeldonIO/seldon-core,latest,/util/loadtester/Dockerfile,ADD,1,['./scripts $SELDON_HOME/scripts']
SeldonIO/seldon-core,latest,/util/loadtester/Dockerfile,CMD,1,"['[""bash""]']"
SeldonIO/seldon-core,latest,/python-builder/Dockerfile,FROM,1,['continuumio/miniconda3:4.7.12']
SeldonIO/seldon-core,latest,/python-builder/Dockerfile,RUN,17,"['apt-get update  --allow-releaseinfo-change -y &&     apt-get install -y vim &&     apt-get install -y git &&     apt-get install -y build-essential &&     apt-get install -y cmake &&     apt-get remove -y --auto-remove && apt-get clean -y && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*', 'INSTALL_DIR=/tmp/flatc-install &&     mkdir $INSTALL_DIR &&     cd $INSTALL_DIR &&     git clone https://github.com/google/flatbuffers.git &&     cd flatbuffers &&     cmake -G ""Unix Makefiles"" &&     make &&     cp ./flatc /usr/local/bin/ &&     rm -rf $INSTALL_DIR', 'pip install grpcio', 'pip install grpcio-tools', 'pip install flatbuffers', 'pip install twine', 'pip install mypy-protobuf', 'apt-get upgrade -y', 'apt-get update -y', 'apt-get install -y make libssl-dev libghc-zlib-dev libcurl4-gnutls-dev libexpat1-dev gettext unzip', 'wget https://github.com/git/git/archive/v2.30.0.zip -O git.zip', 'unzip git.zip', 'apt-get remove git -y', 'make prefix=/usr/local -C git-2.30.0/ all install', 'conda install --yes python=$PYTHON_VERSION conda=$CONDA_VERSION', 'apt-get install curl', 'curl -sSL     https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py     | python3']"
SeldonIO/seldon-core,latest,/python-builder/Dockerfile,ENV,5,"['PYTHON_VERSION ""3.7.10""', 'CONDA_VERSION ""4.7.12""', 'POETRY_HOME /var/poetry', 'PATH ""$POETRY_HOME/bin:$PATH""', 'POETRY_VIRTUALENVS_CREATE false']"
SeldonIO/seldon-core,latest,/python-builder/Dockerfile,WORKDIR,1,['/work']
SeldonIO/seldon-core,latest,/python-builder/Dockerfile,CMD,1,"['[""bash""]']"
SeldonIO/seldon-core,latest,/zookeeper-k8s/Dockerfile,FROM,1,['ubuntu:14.04']
SeldonIO/seldon-core,latest,/zookeeper-k8s/Dockerfile,MAINTAINER,1,['dev@seldon.io']
SeldonIO/seldon-core,latest,/zookeeper-k8s/Dockerfile,ENV,1,['ZOOKEEPER_VERSION 3.4.8']
SeldonIO/seldon-core,latest,/zookeeper-k8s/Dockerfile,EXPOSE,1,['2181 2888 3888']
SeldonIO/seldon-core,latest,/zookeeper-k8s/Dockerfile,RUN,1,['apt-get update && apt-get -y upgrade && \tapt-get -y install wget openjdk-7-jre-headless && \twget -q -O - http://apache.mirrors.pair.com/zookeeper/zookeeper-${ZOOKEEPER_VERSION}/zookeeper-${ZOOKEEPER_VERSION}.tar.gz | tar -xzf - -C /opt && \tmv /opt/zookeeper-${ZOOKEEPER_VERSION} /opt/zookeeper && \tmkdir -p /opt/zookeeper/data && \tmkdir -p /opt/zookeeper/log']
SeldonIO/seldon-core,latest,/zookeeper-k8s/Dockerfile,WORKDIR,1,['/opt/zookeeper']
SeldonIO/seldon-core,latest,/zookeeper-k8s/Dockerfile,VOLUME,1,"['[""/opt/zookeeper/conf"", ""/opt/zookeeper/data"", ""/opt/zookeeper/log""]']"
SeldonIO/seldon-core,latest,/zookeeper-k8s/Dockerfile,COPY,1,['config-and-run.sh ./bin/']
SeldonIO/seldon-core,latest,/zookeeper-k8s/Dockerfile,CMD,1,"['[""/opt/zookeeper/bin/config-and-run.sh""]']"
SeldonIO/seldon-core,latest,/testing/profiling/engine/Dockerfile,ARG,1,['SELDON_ENGINE_IMAGE=seldonio/engine:0.5-SNAPSHOT']
SeldonIO/seldon-core,latest,/testing/profiling/engine/Dockerfile,FROM,1,['$SELDON_ENGINE_IMAGE']
SeldonIO/seldon-core,latest,/testing/profiling/engine/Dockerfile,RUN,2,"['wget https://www.yourkit.com/download/docker/YourKit-JavaProfiler-2018.04-docker.zip -P /tmp/ &&   unzip /tmp/YourKit-JavaProfiler-2018.04-docker.zip -d /usr/local &&     rm /tmp/YourKit-JavaProfiler-2018.04-docker.zip', 'apk add --no-cache libc6-compat']"
SeldonIO/seldon-core,latest,/testing/profiling/engine/Dockerfile,ENTRYPOINT,1,"['[ ""sh"", ""-c"", ""java -agentpath:/usr/local/YourKit-JavaProfiler-2018.04/bin/linux-x86-64/libyjpagent.so=listen=all -Djava.security.egd=file:/dev/./urandom $JAVA_OPTS -jar app.jar"" ]']"
SeldonIO/seldon-core,latest,/testing/benchmarking/ghz/Dockerfile,FROM,2,"['golang:1.13 as builder', 'ubuntu']"
SeldonIO/seldon-core,latest,/testing/benchmarking/ghz/Dockerfile,ARG,1,['GHZ_VERSION']
SeldonIO/seldon-core,latest,/testing/benchmarking/ghz/Dockerfile,RUN,3,"['git clone -b ${GHZ_VERSION} https://github.com/bojand/ghz &&     \tcd ghz && make build', 'git clone https://github.com/SeldonIO/seldon-core', 'apt-get update &&     \t    apt-get install -y wget && \t    wget https://github.com/stedolan/jq/releases/download/jq-1.6/jq-linux64 && \t    mv jq-linux64 jq && chmod a+x jq && mv jq /usr/local/bin && \t    rm -rf /var/lib/apt/lists/*']"
SeldonIO/seldon-core,latest,/testing/benchmarking/ghz/Dockerfile,WORKDIR,1,['/']
SeldonIO/seldon-core,latest,/testing/benchmarking/ghz/Dockerfile,COPY,3,"['--from=builder /go/ghz/dist/ghz /usr/local/bin', '--from=builder /go/seldon-core/executor/proto /proto', '--from=builder /go/seldon-core/executor/api/grpc/kfserving/inference/*.proto /proto']"
SeldonIO/seldon-core,latest,/testing/benchmarking/ghz/Dockerfile,CMD,1,"['[""ghz"",""--help""]']"
SeldonIO/seldon-core,latest,/components/rclone-storage-initializer/Dockerfile,FROM,1,['rclone/rclone:1.56.2']
SeldonIO/seldon-core,latest,/components/rclone-storage-initializer/Dockerfile,LABEL,1,"['name=""Storage Initializer (rclone based)""       vendor=""Seldon Technologies""       version=""1.8.0-dev""       release=""1""       summary=""Storage Initializer for Seldon Core""       description=""Allows Seldon Core to download artifacts from cloud and local storage to a local volume""']"
SeldonIO/seldon-core,latest,/components/rclone-storage-initializer/Dockerfile,ENV,2,"['RCLONE_CONFIG_GS_TYPE google cloud storage', 'RCLONE_CONFIG_GS_ANONYMOUS true']"
SeldonIO/seldon-core,latest,/components/rclone-storage-initializer/Dockerfile,ENTRYPOINT,1,"['[""rclone"", ""copy"", ""-vv""]']"
SeldonIO/seldon-core,latest,/components/seldon-request-logger/Dockerfile,FROM,1,['registry.access.redhat.com/ubi8/python-38']
SeldonIO/seldon-core,latest,/components/seldon-request-logger/Dockerfile,LABEL,1,"['name=""Seldon Request Logger""       vendor=""Seldon Technologies""       version=""1.13.0-dev""       release=""1""       summary=""The payload logger for Seldon Core""       description=""The Seldon Payload Logger allows request and response payloads from a Seldon Core inference graph to be processed and sent to an ELK endpoint""']"
SeldonIO/seldon-core,latest,/components/seldon-request-logger/Dockerfile,COPY,2,"['requirements.txt requirements.txt', 'app app']"
SeldonIO/seldon-core,latest,/components/seldon-request-logger/Dockerfile,RUN,7,"['pip install -r requirements.txt', 'pip install gunicorn', 'pip install pip-licenses', 'mkdir ./licenses && pip-licenses --from=mixed --format=csv --output-file=./licenses/license_info.csv &&     pip-licenses --from=mixed --format=plain-vertical --with-license-file --no-license-path --output-file=./licenses/license.txt', 'mv ./licenses /licenses', 'yum -y update-minimal --security --sec-severity=Important --sec-severity=Critical', 'yum remove -y nodejs httpd']"
SeldonIO/seldon-core,latest,/components/seldon-request-logger/Dockerfile,USER,2,"['root', 'default']"
SeldonIO/seldon-core,latest,/components/seldon-request-logger/Dockerfile,ENV,1,"['APP_ENV=production   PATH=""/home/appuser/.local/bin:${PATH}""   PORT=8080   GUNICORN_WORKERS=3   GUNICORN_THREADS=8']"
SeldonIO/seldon-core,latest,/components/seldon-request-logger/Dockerfile,WORKDIR,1,['app']
SeldonIO/seldon-core,latest,/components/seldon-request-logger/Dockerfile,EXPOSE,1,['$PORT']
SeldonIO/seldon-core,latest,/components/seldon-request-logger/Dockerfile,CMD,1,['gunicorn --bind 0.0.0.0:$PORT --workers $GUNICORN_WORKERS --threads $GUNICORN_THREADS default_logger:app']
SeldonIO/seldon-core,latest,/components/alibi-detect-server/Dockerfile.gpu,FROM,1,['tensorflow/tensorflow:2.4.1-gpu']
SeldonIO/seldon-core,latest,/components/alibi-detect-server/Dockerfile.gpu,RUN,12,"['apt update && apt install -y git wget unzip bzip2 libgomp1 build-essential', 'wget -O Miniconda3.sh https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh &&     bash Miniconda3.sh -b -p /opt/python', 'pip install pip -U', 'pip install -r requirements_server.txt', 'git clone --branch 24-extensions https://github.com/ryandawsonuk/sdk-python.git &&     cd sdk-python &&     pip install -e .', 'pip install -e .', 'pip install pip-licenses', 'mkdir ./licenses && pip-licenses --from=mixed --format=csv --output-file=./licenses/license_info.csv &&     pip-licenses --from=mixed --format=plain-vertical --with-license-file --no-license-path --output-file=./licenses/license.txt', 'mv ./licenses /licenses', 'apt-get update', 'apt-get -y install libgl1-mesa-glx libglib2.0-dev', 'pip install -r requirements-gpu.txt']"
SeldonIO/seldon-core,latest,/components/alibi-detect-server/Dockerfile.gpu,ENV,1,['PATH=/opt/python/bin:$PATH']
SeldonIO/seldon-core,latest,/components/alibi-detect-server/Dockerfile.gpu,WORKDIR,1,['/app']
SeldonIO/seldon-core,latest,/components/alibi-detect-server/Dockerfile.gpu,ADD,1,['requirements_server.txt .']
SeldonIO/seldon-core,latest,/components/alibi-detect-server/Dockerfile.gpu,COPY,3,"['adserver adserver', 'setup.py .', 'requirements-gpu.txt .']"
SeldonIO/seldon-core,latest,/components/alibi-detect-server/Dockerfile.gpu,ENTRYPOINT,1,"['[""python"", ""-m"", ""adserver""]']"
SeldonIO/seldon-core,latest,/components/alibi-detect-server/Dockerfile,ARG,5,"['VERSION', 'BASE_IMAGE', 'VERSION', 'PYTHON_VERSION', 'CONDA_VERSION']"
SeldonIO/seldon-core,latest,/components/alibi-detect-server/Dockerfile,FROM,3,"['${BASE_IMAGE}:${VERSION} as base', 'base as builder', 'base as final']"
SeldonIO/seldon-core,latest,/components/alibi-detect-server/Dockerfile,LABEL,1,"['name=""Seldon Alibi Detect Server""       vendor=""Seldon Technologies""       version=""1.13.0-dev""       release=""1""       summary=""Alibi Detect Server for Seldon Core""       description=""The Alibi Detect Server provides outlier, drift and adversarial detection services for Seldon Core""']"
SeldonIO/seldon-core,latest,/components/alibi-detect-server/Dockerfile,RUN,14,"['yum install -y unzip', 'wget https://downloads.rclone.org/v1.55.1/rclone-v1.55.1-linux-amd64.zip &&     unzip rclone-v1.55.1-linux-amd64.zip &&     mv rclone-v1.55.1-linux-amd64/rclone /usr/bin/rclone &&     rm -rf rclone-v1.55.1-linux-amd64.zip rclone-v1.55.1-linux-amd64', 'conda install --yes python=${PYTHON_VERSION} conda=${CONDA_VERSION}', 'pip install pip==21.2.4 setuptools==58.1.0', 'dnf install -y make automake gcc gcc-c++', 'mkdir microservice', 'curl -sSL     https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py     | python3', 'poetry install && rm ~/.cache/pip -rf', 'mkdir /licenses', 'mkdir ./licenses && pip-licenses --from=mixed --format=csv --output-file=./licenses/license_info.csv &&     pip-licenses --from=mixed --format=plain-vertical --with-license-file --no-license-path --output-file=./licenses/license.txt', 'cp ./licenses/* /licenses', 'yum install -y mesa-libGL', 'yum -y update-minimal --security --sec-severity=Important --sec-severity=Critical', 'yum remove -y nodejs httpd']"
SeldonIO/seldon-core,latest,/components/alibi-detect-server/Dockerfile,WORKDIR,2,"['/microservice', '/microservice']"
SeldonIO/seldon-core,latest,/components/alibi-detect-server/Dockerfile,ENV,3,"['POETRY_HOME /microservice/.poetry', 'PATH ""$POETRY_HOME/bin:$PATH""', 'POETRY_VIRTUALENVS_CREATE false']"
SeldonIO/seldon-core,latest,/components/alibi-detect-server/Dockerfile,COPY,9,"['poetry.lock pyproject.toml ./', '_seldon_core ./_seldon_core', 'adserver adserver', 'README.md README.md', 'version.txt version.txt', '--from=builder /microservice /microservice', '--from=builder /opt/conda /opt/conda', '--from=builder /usr/bin/rclone /usr/bin/rclone', '--from=builder /licenses /licenses']"
SeldonIO/seldon-core,latest,/components/alibi-detect-server/Dockerfile,ENTRYPOINT,1,"['[""python"", ""-m"", ""adserver""]']"
SeldonIO/seldon-core,latest,/components/storage-initializer/Dockerfile,FROM,1,['registry.access.redhat.com/ubi8/python-36']
SeldonIO/seldon-core,latest,/components/storage-initializer/Dockerfile,LABEL,1,"['name=""Storage Initializer""       vendor=""Seldon Technologies""       version=""1.13.0-dev""       release=""1""       summary=""Storage Initializer for Seldon Core""       description=""Allows Seldon Core to download artifacts from cloud and local storage to a local volume""']"
SeldonIO/seldon-core,latest,/components/storage-initializer/Dockerfile,USER,2,"['root', 'default']"
SeldonIO/seldon-core,latest,/components/storage-initializer/Dockerfile,COPY,3,"['./kfserving/python/kfserving kfserving', './kfserving/python/storage-initializer storage-initializer', './kfserving/python/third_party third_party']"
SeldonIO/seldon-core,latest,/components/storage-initializer/Dockerfile,RUN,6,"['pip install --upgrade pip && pip install ./kfserving', 'pip install pip-licenses', 'mkdir ./licenses && pip-licenses --from=mixed --format=csv --output-file=./licenses/license_info.csv &&     pip-licenses --from=mixed --format=plain-vertical --with-license-file --no-license-path --output-file=./licenses/license.txt', 'mv ./licenses /licenses', 'yum -y update-minimal --security --sec-severity=Important --sec-severity=Critical', 'yum remove -y nodejs httpd']"
SeldonIO/seldon-core,latest,/components/storage-initializer/Dockerfile,ENTRYPOINT,1,"['[""./storage-initializer/scripts/initializer-entrypoint""]']"
SeldonIO/seldon-core,latest,/components/alibi-explain-server/Dockerfile.gpu,FROM,1,['nvidia/cuda:11.2.1-devel-ubuntu18.04']
SeldonIO/seldon-core,latest,/components/alibi-explain-server/Dockerfile.gpu,RUN,5,"['apt update && apt install -y git wget unzip bzip2 libgomp1 build-essential', 'wget -O Miniconda3.sh https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh &&     bash Miniconda3.sh -b -p /opt/python', 'pip install . --no-binary protobuf', 'pip install --force-reinstall -r requirements-gpu.txt', 'python -m spacy download en_core_web_md']"
SeldonIO/seldon-core,latest,/components/alibi-explain-server/Dockerfile.gpu,ENV,1,['PATH=/opt/python/bin:$PATH']
SeldonIO/seldon-core,latest,/components/alibi-explain-server/Dockerfile.gpu,WORKDIR,1,['/app']
SeldonIO/seldon-core,latest,/components/alibi-explain-server/Dockerfile.gpu,COPY,4,"['setup.py setup.py', 'alibiexplainer alibiexplainer', 'README.md README.md', 'requirements-gpu.txt .']"
SeldonIO/seldon-core,latest,/components/alibi-explain-server/Dockerfile.gpu,ENTRYPOINT,1,"['[""python"", ""-m"", ""alibiexplainer""]']"
SeldonIO/seldon-core,latest,/components/alibi-explain-server/Dockerfile,ARG,5,"['VERSION', 'BASE_IMAGE', 'VERSION', 'PYTHON_VERSION', 'CONDA_VERSION']"
SeldonIO/seldon-core,latest,/components/alibi-explain-server/Dockerfile,FROM,3,"['${BASE_IMAGE}:${VERSION} as base', 'base as builder', 'base as final']"
SeldonIO/seldon-core,latest,/components/alibi-explain-server/Dockerfile,LABEL,1,"['name=""Seldon Alibi Wrapper""       vendor=""Seldon Technologies""       version=""1.13.0-dev""       release=""1""       summary=""Alibi Explainer Wrapper for Seldon Core""       description=""Allows Seldon Core inference models to run with a black box model explanation model from the Alibi:Explain project""']"
SeldonIO/seldon-core,latest,/components/alibi-explain-server/Dockerfile,RUN,12,"['conda install --yes python=${PYTHON_VERSION} conda=${CONDA_VERSION}', 'pip install pip==21.2.4 setuptools==58.1.0', 'dnf install -y make automake gcc gcc-c++', 'mkdir microservice', 'curl -sSL     https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py     | python3', 'poetry install && rm ~/.cache/pip -rf', 'mkdir /licenses', 'mkdir ./licenses && pip-licenses --from=mixed --format=csv --output-file=./licenses/license_info.csv &&     pip-licenses --from=mixed --format=plain-vertical --with-license-file --no-license-path --output-file=./licenses/license.txt', 'cp ./licenses/* /licenses', 'python -m spacy download en_core_web_md', 'yum -y update-minimal --security --sec-severity=Important --sec-severity=Critical', 'yum remove -y nodejs httpd']"
SeldonIO/seldon-core,latest,/components/alibi-explain-server/Dockerfile,WORKDIR,2,"['/microservice', '/microservice']"
SeldonIO/seldon-core,latest,/components/alibi-explain-server/Dockerfile,ENV,3,"['POETRY_HOME /microservice/.poetry', 'PATH ""$POETRY_HOME/bin:$PATH""', 'POETRY_VIRTUALENVS_CREATE false']"
SeldonIO/seldon-core,latest,/components/alibi-explain-server/Dockerfile,COPY,6,"['poetry.lock pyproject.toml ./', 'alibiexplainer alibiexplainer', 'README.md README.md', '--from=builder /microservice /microservice', '--from=builder /licenses /licenses', '--from=builder /opt/conda /opt/conda']"
SeldonIO/seldon-core,latest,/components/alibi-explain-server/Dockerfile,ENTRYPOINT,1,"['[""python"", ""-m"", ""alibiexplainer""]']"
SeldonIO/seldon-core,latest,/kubectl-proxy/Dockerfile,FROM,1,['alpine']
SeldonIO/seldon-core,latest,/kubectl-proxy/Dockerfile,MAINTAINER,1,['Gurminder Sunner <gs@seldon.io>']
SeldonIO/seldon-core,latest,/kubectl-proxy/Dockerfile,ARG,1,['KUBECTL_VERSION']
SeldonIO/seldon-core,latest,/kubectl-proxy/Dockerfile,RUN,1,['apk add --update ca-certificates     && apk add --update -t deps curl     && curl -L https://storage.googleapis.com/kubernetes-release/release/${KUBECTL_VERSION}/bin/linux/amd64/kubectl -o /usr/local/bin/kubectl     && chmod +x /usr/local/bin/kubectl     && apk del --purge deps     && rm /var/cache/apk/*']
SeldonIO/seldon-core,latest,/kubectl-proxy/Dockerfile,EXPOSE,1,['8001']
SeldonIO/seldon-core,latest,/kubectl-proxy/Dockerfile,CMD,1,"['[""/usr/local/bin/kubectl"", ""proxy"", ""-p"", ""8001""]']"
SeldonIO/seldon-core,latest,/kafka/Dockerfile,FROM,1,['anapsix/alpine-java']
SeldonIO/seldon-core,latest,/kafka/Dockerfile,ARG,2,"['kafka_version=0.11.0.0', 'scala_version=2.12']"
SeldonIO/seldon-core,latest,/kafka/Dockerfile,RUN,3,"['apk add --update unzip wget curl docker jq coreutils', 'chmod a+x /tmp/download-kafka.sh && sync && /tmp/download-kafka.sh && tar xfz /tmp/kafka_${SCALA_VERSION}-${KAFKA_VERSION}.tgz -C /opt && rm /tmp/kafka_${SCALA_VERSION}-${KAFKA_VERSION}.tgz && ln -s /opt/kafka_${SCALA_VERSION}-${KAFKA_VERSION} /opt/kafka', 'chmod a+x /usr/bin/start-kafka.sh &&     chmod a+x /usr/bin/create-topics.sh']"
SeldonIO/seldon-core,latest,/kafka/Dockerfile,ENV,3,"['KAFKA_VERSION=$kafka_version SCALA_VERSION=$scala_version', 'KAFKA_HOME /opt/kafka', 'PATH ${PATH}:${KAFKA_HOME}/bin']"
SeldonIO/seldon-core,latest,/kafka/Dockerfile,ADD,3,"['scripts/download-kafka.sh /tmp/download-kafka.sh', 'scripts/start-kafka.sh /usr/bin/start-kafka.sh', 'scripts/create-topics.sh /usr/bin/create-topics.sh']"
SeldonIO/seldon-core,latest,/kafka/Dockerfile,VOLUME,1,"['[""/kafka""]']"
SeldonIO/seldon-core,latest,/kafka/Dockerfile,CMD,1,"['[""start-kafka.sh""]']"
SeldonIO/seldon-core,latest,/examples/init_containers/Dockerfile,FROM,1,['rclone/rclone:latest']
SeldonIO/seldon-core,latest,/examples/init_containers/Dockerfile,ENTRYPOINT,1,"['[""rclone"", ""copy""]']"
SeldonIO/seldon-core,latest,/examples/models/sklearn_spacy_text/Dockerfile,FROM,1,['seldonio/seldon-core-s2i-python37-ubi8:1.7.0-dev']
SeldonIO/seldon-core,latest,/examples/models/sklearn_spacy_text/Dockerfile,RUN,2,"['pip install spacy==2.3.2', 'python -m spacy download en_core_web_sm']"
SeldonIO/seldon-core,latest,/examples/outliers/alibi-detect-combiner/Dockerfile,FROM,1,['seldonio/seldon-core-s2i-python37:0.14']
SeldonIO/seldon-core,latest,/examples/outliers/alibi-detect-combiner/Dockerfile,COPY,1,['requirements-dev.txt /microservice/']
SeldonIO/seldon-core,latest,/examples/outliers/alibi-detect-combiner/Dockerfile,RUN,1,['pip install --upgrade pip setuptools &&     pip install -r requirements-dev.txt']
SeldonIO/seldon-core,latest,/examples/pachyderm-simple/iris-train-python-svm/Dockerfile,FROM,1,['python:3.8-slim']
SeldonIO/seldon-core,latest,/examples/pachyderm-simple/iris-train-python-svm/Dockerfile,RUN,1,['pip install pandas==1.1.4 scikit-learn==0.23.2']
SeldonIO/seldon-core,latest,/examples/pachyderm-simple/iris-train-python-svm/Dockerfile,WORKDIR,1,['/code']
SeldonIO/seldon-core,latest,/examples/pachyderm-simple/iris-train-python-svm/Dockerfile,ADD,1,['pytrain.py /code/pytrain.py']
SeldonIO/seldon-core,latest,/examples/batch/hdfs-argo-workflows/Dockerfile,FROM,1,['python:3.8']
SeldonIO/seldon-core,latest,/examples/batch/hdfs-argo-workflows/Dockerfile,RUN,1,['pip install hdfs==2.5.8']
SeldonIO/seldon-core,latest,/examples/batch/hdfs-argo-workflows/Dockerfile,ENV,1,['HDFSCLI_CONFIG /etc/hdfs/hdfscli.cfg']
SeldonIO/seldon-core,latest,/examples/kubeflow/pipeline/pipeline_steps/data_downloader/Dockerfile,FROM,1,['python:3.7-slim']
SeldonIO/seldon-core,latest,/examples/kubeflow/pipeline/pipeline_steps/data_downloader/Dockerfile,COPY,1,['. /microservice']
SeldonIO/seldon-core,latest,/examples/kubeflow/pipeline/pipeline_steps/data_downloader/Dockerfile,WORKDIR,1,['/microservice']
SeldonIO/seldon-core,latest,/examples/kubeflow/pipeline/pipeline_steps/data_downloader/Dockerfile,RUN,1,['pip install -r requirements.txt']
SeldonIO/seldon-core,latest,/examples/pachyderm-cd4ml/RSIServing/Dockerfile,FROM,1,['python:3.8-slim']
SeldonIO/seldon-core,latest,/examples/pachyderm-cd4ml/RSIServing/Dockerfile,RUN,1,['pip install pandas==1.1.4 statsmodels==0.12.1 seldon-core==1.5.0 joblib==1.0.0 minio==7.0.0']
SeldonIO/seldon-core,latest,/examples/pachyderm-cd4ml/RSIServing/Dockerfile,WORKDIR,1,['/app']
SeldonIO/seldon-core,latest,/examples/pachyderm-cd4ml/RSIServing/Dockerfile,ADD,1,['RSIModel.py /app/RSIModel.py']
SeldonIO/seldon-core,latest,/examples/pachyderm-cd4ml/RSIServing/Dockerfile,EXPOSE,1,['5000']
SeldonIO/seldon-core,latest,/examples/pachyderm-cd4ml/RSIServing/Dockerfile,CMD,1,['exec seldon-core-microservice RSIModel --service-type MODEL --persistence 0']
SeldonIO/seldon-core,latest,/examples/pachyderm-cd4ml/RSITraining/Dockerfile,FROM,1,['python:3.8-slim']
SeldonIO/seldon-core,latest,/examples/pachyderm-cd4ml/RSITraining/Dockerfile,RUN,1,['pip install pandas==1.1.4 statsmodels==0.12.1 joblib==1.0.0']
SeldonIO/seldon-core,latest,/examples/pachyderm-cd4ml/RSITraining/Dockerfile,WORKDIR,1,['/code']
SeldonIO/seldon-core,latest,/examples/pachyderm-cd4ml/RSITraining/Dockerfile,ADD,1,['RSITrain.py /code/RSITrain.py']
SeldonIO/seldon-core,latest,/examples/pachyderm-cd4ml/RSIDeployer/Dockerfile,FROM,1,['alpine/helm:3.4.2']
SeldonIO/seldon-core,latest,/examples/pachyderm-cd4ml/RSIDeployer/Dockerfile,ADD,2,"['./charts /charts', './deploy.sh /']"
SeldonIO/seldon-core,latest,/examples/pachyderm-cd4ml/RSIDeployer/Dockerfile,ENTRYPOINT,1,"['[ ""ash"" ]']"
SeldonIO/seldon-core,latest,/examples/ray/batch-split-proxy/Dockerfile,FROM,1,['seldonio/seldon-core-s2i-python37:1.5.0-dev']
SeldonIO/seldon-core,latest,/examples/ray/batch-split-proxy/Dockerfile,COPY,4,"['training/outputs/pytorch_model.bin /microservice/pytorch_model.bin', 'requirements.txt /microservice', 'import_for_cache_download.py /tmp', 'Model.py /microservice/']"
SeldonIO/seldon-core,latest,/examples/ray/batch-split-proxy/Dockerfile,RUN,3,"['pip install -r requirements.txt && rm -r ~/.cache/pip', 'pip install ray[tune]', 'python3 /tmp/import_for_cache_download.py']"
SeldonIO/seldon-core,latest,/examples/ray/batch-split-proxy/Dockerfile,ENV,2,"['MODEL_NAME Model', 'API_TYPE REST']"
SeldonIO/seldon-core,latest,/examples/ray/batch-split-proxy/Dockerfile,CMD,1,['seldon-core-microservice $MODEL_NAME $API_TYPE']
SeldonIO/seldon-core,latest,/core-builder/Dockerfile,FROM,1,['openjdk:13.0.1-jdk-buster']
SeldonIO/seldon-core,latest,/core-builder/Dockerfile,ENV,14,"['PYTHON_VERSION ""3.7.11""', 'MAVEN_VERSION=3.6.3', 'USER_HOME_DIR=""/root""', 'SHA=c35a1803a6e70a126e80b2b3ae33eed961f83ed74d18fcd16909b2d44d7dada3203f1ffe726c17ef8dcca2dcaa9fca676987befeadc9b9f759967a8cb77181c0', 'BASE_URL=https://apache.osuosl.org/maven/maven-3/${MAVEN_VERSION}/binaries', 'MAVEN_HOME=/usr/share/maven', 'MAVEN_CONFIG=""$USER_HOME_DIR/.m2""', 'CONDA_VERSION ""4.7.12""', 'PATH=""/opt/conda/bin:${PATH}""', 'PYTHON_VERSION ""3.7.10""', 'PATH /usr/local/go/bin:$PATH', 'PATH /usr/local/kubebuilder/bin:$PATH', 'PATH=""${PATH}:/root/go/bin""', 'PATH /usr/local/google-cloud-sdk/bin:$PATH']"
SeldonIO/seldon-core,latest,/core-builder/Dockerfile,RUN,25,"['apt-get update &&     apt-get install -y          apt-transport-https          ca-certificates          curl          wget          gnupg2          software-properties-common &&     curl -fsSL https://download.docker.com/linux/$(. /etc/os-release; echo ""$ID"")/gpg | apt-key add - &&     add-apt-repository        ""deb [arch=amd64] https://download.docker.com/linux/$(. /etc/os-release; echo ""$ID"")        $(lsb_release -cs)        stable"" &&     apt-get update &&     apt-get install -y docker-ce', 'wget https://github.com/openshift/source-to-image/releases/download/v1.1.14/source-to-image-v1.1.14-874754de-linux-386.tar.gz &&     tar -zxvf source-to-image-v1.1.14-874754de-linux-386.tar.gz &&     rm source-to-image-v1.1.14-874754de-linux-386.tar.gz &&     mv ./s2i /bin &&     mv ./sti /bin', 'wget https://github.com/kubernetes-sigs/kind/releases/download/v0.11.1/kind-linux-amd64 &&     chmod +x kind-linux-amd64 &&     mv ./kind-linux-amd64 /bin/kind', 'wget https://storage.googleapis.com/kubernetes-release/release/v1.16.2/bin/linux/amd64/kubectl &&     chmod +x ./kubectl &&     mv ./kubectl /bin', 'apt-get update -y &&     apt-get install -y vim jq build-essential pandoc &&     apt-get remove -y --auto-remove &&     apt-get clean -y &&     rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*', 'mkdir -p /usr/share/maven /usr/share/maven/ref   && curl -fsSL -o /tmp/apache-maven.tar.gz ${BASE_URL}/apache-maven-${MAVEN_VERSION}-bin.tar.gz   && echo ""${SHA}  /tmp/apache-maven.tar.gz"" | sha512sum -c -   && tar -xzf /tmp/apache-maven.tar.gz -C /usr/share/maven --strip-components=1   && rm -f /tmp/apache-maven.tar.gz   && ln -s /usr/share/maven/bin/mvn /usr/bin/mvn', 'apt-get upgrade &&         apt-get update &&         apt-get install zlib1g -y &&         apt-get install zlib1g-dev -y &&         apt-get install libssl-dev -y && \tapt-get install libbz2-dev -y && \tapt-get install liblzma-dev -y', 'wget --quiet https://repo.anaconda.com/miniconda/Miniconda3-$CONDA_VERSION-Linux-x86_64.sh -O ~/miniconda.sh &&     /bin/bash ~/miniconda.sh -b -p /opt/conda &&     rm ~/miniconda.sh &&     /opt/conda/bin/conda clean -tipsy &&     ln -s /opt/conda/etc/profile.d/conda.sh /etc/profile.d/conda.sh &&     echo "". /opt/conda/etc/profile.d/conda.sh"" >> ~/.bashrc &&     echo ""conda activate base"" >> ~/.bashrc &&     chgrp -R root /opt/conda && chmod -R g+rw /opt/conda', 'conda install --yes python=$PYTHON_VERSION conda=$CONDA_VERSION', 'pip install --upgrade pip setuptools wheel', 'pip install pyyaml grpcio grpcio-tools', 'apt-get remove -y --auto-remove     && apt-get clean -y     && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*', 'wget https://dl.google.com/go/go1.17.1.linux-amd64.tar.gz &&         tar -zxvf go1.17.1.linux-amd64.tar.gz &&         mv go/ /usr/local/go', 'curl -sL https://github.com/kubernetes-sigs/kubebuilder/releases/download/v2.3.0/kubebuilder_2.3.0_linux_amd64.tar.gz | tar -xz -C /tmp/ &&         mv /tmp/kubebuilder_2.3.0_linux_amd64 /usr/local/kubebuilder/', 'curl -L https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash -s -- --version v3.2.0', 'wget https://github.com/kubernetes-sigs/kustomize/releases/download/kustomize%2Fv4.1.2/kustomize_v4.1.2_linux_amd64.tar.gz &&     \ttar -xzf kustomize_v4.1.2_linux_amd64.tar.gz &&         chmod +x kustomize &&         mv kustomize /usr/local/bin/kustomize', 'update-alternatives --set ip6tables /usr/sbin/ip6tables-legacy &&     update-alternatives --set iptables /usr/sbin/iptables-legacy', 'pip install jupyter', 'go get github.com/fullstorydev/grpcurl/... &&     go install github.com/fullstorydev/grpcurl/cmd/grpcurl@latest', 'pip install -r /tmp/requirements.txt', 'go get -u github.com/onsi/ginkgo/ginkgo', 'GO111MODULE=on go get github.com/norwoodj/helm-docs/cmd/helm-docs@f66fdbd6fe', 'wget https://github.com/argoproj/argo-workflows/releases/download/v3.0.8/argo-linux-amd64.gz &&     gunzip argo-linux-amd64.gz &&     mv argo-linux-amd64 argo &&     chmod a+x argo &&     mv argo /usr/local/bin/argo', 'wget https://github.com/jenkins-x/jx-cli/releases/download/v3.1.242/jx-cli-linux-amd64.tar.gz &&     tar -zxvf jx-cli-linux-amd64.tar.gz &&     chmod a+x jx &&     mv jx /usr/local/bin/jx', 'curl -O https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-sdk-349.0.0-linux-x86_64.tar.gz &&     tar xvfz google-cloud-sdk-349.0.0-linux-x86_64.tar.gz -C /tmp/ &&     mv /tmp/google-cloud-sdk /usr/local/google-cloud-sdk']"
SeldonIO/seldon-core,latest,/core-builder/Dockerfile,COPY,1,['dev_requirements.txt /tmp/requirements.txt']
SeldonIO/seldon-core,latest,/core-builder/Dockerfile,WORKDIR,1,['/work']
SeldonIO/seldon-core,latest,/core-builder/Dockerfile,CMD,1,"['[""bash""]']"
SeldonIO/seldon-core,latest,/executor/Dockerfile.executor.redhat,FROM,2,"['golang:1.17.1-buster as builder', 'registry.access.redhat.com/ubi8/ubi']"
SeldonIO/seldon-core,latest,/executor/Dockerfile.executor.redhat,WORKDIR,2,"['/workspace', '/']"
SeldonIO/seldon-core,latest,/executor/Dockerfile.executor.redhat,COPY,14,"['go.mod go.mod', 'go.sum go.sum', 'proto/ proto/', '_operator/ _operator/', 'cmd/ cmd/', 'api/ api/', 'predictor/ predictor/', 'logger/ logger/', 'k8s/ k8s/', 'api/rest/openapi/ /openapi/', '--from=builder /workspace/executor .', 'licenses/license.txt licenses/license.txt', '--from=builder /workspace/*.tar.gz licenses/mpl_source/', '--from=builder /openapi/ /openapi/']"
SeldonIO/seldon-core,latest,/executor/Dockerfile.executor.redhat,RUN,27,"['go mod download', 'go build -a -o executor cmd/executor/main.go', 'wget -O armon-consul-api.tar.gz https://github.com/armon/consul-api/archive/master.tar.gz', 'wget -O go-sql-driver-mysql.tar.gz https://github.com/go-sql-driver/mysql/archive/master.tar.gz', 'wget -O hashicorp-consul.tar.gz https://github.com/hashicorp/consul/archive/main.tar.gz', 'wget -O hashicorp-errwrap.tar.gz https://github.com/hashicorp/errwrap/archive/master.tar.gz', 'wget -O hashicorp-go-cleanhttp.tar.gz https://github.com/hashicorp/go-cleanhttp/archive/master.tar.gz', 'wget -O hashicorp-go-immutable-radix.tar.gz https://github.com/hashicorp/go-immutable-radix/archive/master.tar.gz', 'wget -O hashicorp-go-multierror.tar.gz https://github.com/hashicorp/go-multierror/archive/master.tar.gz', 'wget -O hashicorp-go-plugin.tar.gz https://github.com/hashicorp/go-plugin/archive/master.tar.gz', 'wget -O hashicorp-go-retryablehttp.tar.gz https://github.com/hashicorp/go-retryablehttp/archive/master.tar.gz', 'wget -O hashicorp-go-rootcerts.tar.gz https://github.com/hashicorp/go-rootcerts/archive/master.tar.gz', 'wget -O hashicorp-go-sockaddr.tar.gz https://github.com/hashicorp/go-sockaddr/archive/master.tar.gz', 'wget -O hashicorp-go-uuid.tar.gz https://github.com/hashicorp/go-uuid/archive/master.tar.gz', 'wget -O hashicorp-go-version.tar.gz https://github.com/hashicorp/go-version/archive/main.tar.gz', 'wget -O hashicorp-golang-lru.tar.gz https://github.com/hashicorp/golang-lru/archive/master.tar.gz', 'wget -O hashicorp-hcl.tar.gz https://github.com/hashicorp/hcl/archive/main.tar.gz', 'wget -O hashicorp-logutils.tar.gz https://github.com/hashicorp/logutils/archive/master.tar.gz', 'wget -O hashicorp-memberlist.tar.gz https://github.com/hashicorp/memberlist/archive/master.tar.gz', 'wget -O hashicorp-serf.tar.gz https://github.com/hashicorp/serf/archive/master.tar.gz', 'wget -O hashicorp-vault.tar.gz https://github.com/hashicorp/vault/archive/master.tar.gz', 'wget -O hashicorp-yamux.tar.gz https://github.com/hashicorp/yamux/archive/master.tar.gz', 'wget -O mitchellh-cli.tar.gz https://github.com/mitchellh/cli/archive/master.tar.gz', 'wget -O mitchellh-gox.tar.gz https://github.com/mitchellh/gox/archive/master.tar.gz', 'wget -O mozilla-tls-observatory.tar.gz https://github.com/mozilla/tls-observatory/archive/master.tar.gz', 'chmod -R 660 /openapi/', 'yum -y update-minimal --security --sec-severity=Important --sec-severity=Critical']"
SeldonIO/seldon-core,latest,/executor/Dockerfile.executor.redhat,LABEL,1,"['name=""Seldon Executor""       vendor=""Seldon Technologies""       version=""1.13.0-dev""       release=""1""       summary=""The service orchestrator for Seldon Core""       description=""The service orchestrator for Seldon Core which manages the request/response flow through the Seldon Core inference graphs deployed via the Seldon Core Operator as SeldonDeployments custom resources""']"
SeldonIO/seldon-core,latest,/executor/Dockerfile.executor.redhat,ENTRYPOINT,1,"['[""/executor""]']"
SeldonIO/seldon-core,latest,/executor/Dockerfile.executor,FROM,2,"['golang:1.17.1-buster as builder', 'gcr.io/distroless/base-debian10:latest']"
SeldonIO/seldon-core,latest,/executor/Dockerfile.executor,WORKDIR,2,"['/workspace', '/']"
SeldonIO/seldon-core,latest,/executor/Dockerfile.executor,COPY,14,"['go.mod go.mod', 'go.sum go.sum', 'proto/ proto/', '_operator/ _operator/', 'cmd/ cmd/', 'api/ api/', 'predictor/ predictor/', 'logger/ logger/', 'k8s/ k8s/', 'api/rest/openapi/ /openapi/', '--from=builder /workspace/executor .', 'licenses/license.txt licenses/license.txt', '--from=builder /workspace/*.tar.gz licenses/mpl_source/', '--from=builder /openapi/ /openapi/']"
SeldonIO/seldon-core,latest,/executor/Dockerfile.executor,RUN,26,"['go mod download', 'go build -a -o executor cmd/executor/main.go', 'wget -O armon-consul-api.tar.gz https://github.com/armon/consul-api/archive/master.tar.gz', 'wget -O go-sql-driver-mysql.tar.gz https://github.com/go-sql-driver/mysql/archive/master.tar.gz', 'wget -O hashicorp-consul.tar.gz https://github.com/hashicorp/consul/archive/main.tar.gz', 'wget -O hashicorp-errwrap.tar.gz https://github.com/hashicorp/errwrap/archive/master.tar.gz', 'wget -O hashicorp-go-cleanhttp.tar.gz https://github.com/hashicorp/go-cleanhttp/archive/master.tar.gz', 'wget -O hashicorp-go-immutable-radix.tar.gz https://github.com/hashicorp/go-immutable-radix/archive/master.tar.gz', 'wget -O hashicorp-go-multierror.tar.gz https://github.com/hashicorp/go-multierror/archive/master.tar.gz', 'wget -O hashicorp-go-plugin.tar.gz https://github.com/hashicorp/go-plugin/archive/master.tar.gz', 'wget -O hashicorp-go-retryablehttp.tar.gz https://github.com/hashicorp/go-retryablehttp/archive/master.tar.gz', 'wget -O hashicorp-go-rootcerts.tar.gz https://github.com/hashicorp/go-rootcerts/archive/master.tar.gz', 'wget -O hashicorp-go-sockaddr.tar.gz https://github.com/hashicorp/go-sockaddr/archive/master.tar.gz', 'wget -O hashicorp-go-uuid.tar.gz https://github.com/hashicorp/go-uuid/archive/master.tar.gz', 'wget -O hashicorp-go-version.tar.gz https://github.com/hashicorp/go-version/archive/main.tar.gz', 'wget -O hashicorp-golang-lru.tar.gz https://github.com/hashicorp/golang-lru/archive/master.tar.gz', 'wget -O hashicorp-hcl.tar.gz https://github.com/hashicorp/hcl/archive/main.tar.gz', 'wget -O hashicorp-logutils.tar.gz https://github.com/hashicorp/logutils/archive/master.tar.gz', 'wget -O hashicorp-memberlist.tar.gz https://github.com/hashicorp/memberlist/archive/master.tar.gz', 'wget -O hashicorp-serf.tar.gz https://github.com/hashicorp/serf/archive/master.tar.gz', 'wget -O hashicorp-vault.tar.gz https://github.com/hashicorp/vault/archive/master.tar.gz', 'wget -O hashicorp-yamux.tar.gz https://github.com/hashicorp/yamux/archive/master.tar.gz', 'wget -O mitchellh-cli.tar.gz https://github.com/mitchellh/cli/archive/master.tar.gz', 'wget -O mitchellh-gox.tar.gz https://github.com/mitchellh/gox/archive/master.tar.gz', 'wget -O mozilla-tls-observatory.tar.gz https://github.com/mozilla/tls-observatory/archive/master.tar.gz', 'chmod -R 660 /openapi/']"
SeldonIO/seldon-core,latest,/executor/Dockerfile.executor,ENTRYPOINT,1,"['[""/executor""]']"
SeldonIO/seldon-core,latest,/executor/samples/local/metadata/Dockerfile,FROM,1,['seldonio/seldon-core-s2i-python37:1.2.1-dev']
SeldonIO/seldon-core,latest,/executor/samples/local/metadata/Dockerfile,ENV,4,"['MODEL_NAME Model', 'API_TYPE REST', 'SERVICE_TYPE MODEL', 'PERSISTENCE 0']"
SeldonIO/seldon-core,latest,/executor/samples/local/metadata/Dockerfile,COPY,1,['*.py /microservice/']
SeldonIO/seldon-core,latest,/executor/samples/local/metadata/Dockerfile,CMD,1,['seldon-core-microservice $MODEL_NAME $API_TYPE --service-type $SERVICE_TYPE --persistence $PERSISTENCE --log-level DEBUG']
SeldonIO/seldon-core,latest,/engine/Dockerfile,FROM,2,"['maven:3.6.3-jdk-11 as builder', 'openjdk:11.0.5-jre-slim']"
SeldonIO/seldon-core,latest,/engine/Dockerfile,WORKDIR,1,['/workspace']
SeldonIO/seldon-core,latest,/engine/Dockerfile,COPY,4,"['pom.xml pom.xml', 'src/ src/', '--from=builder /workspace/target/seldon-engine-*.jar app.jar', '--from=builder /workspace/target/generated-resources /licenses/']"
SeldonIO/seldon-core,latest,/engine/Dockerfile,RUN,1,['mvn clean verify -Dlicense.useMissingFile -B']
SeldonIO/seldon-core,latest,/engine/Dockerfile,ENTRYPOINT,1,"['[ ""sh"", ""-c"", ""java -Djava.security.egd=file:/dev/./urandom $JAVA_OPTS -jar app.jar"" ]']"
SeldonIO/seldon-core,latest,/engine/Dockerfile.redhat,FROM,2,"['maven:3.6.3-jdk-11 as builder', 'registry.access.redhat.com/ubi8/ubi']"
SeldonIO/seldon-core,latest,/engine/Dockerfile.redhat,WORKDIR,1,['/workspace']
SeldonIO/seldon-core,latest,/engine/Dockerfile.redhat,COPY,4,"['pom.xml pom.xml', 'src/ src/', '--from=builder /workspace/target/seldon-engine-*.jar app.jar', '--from=builder /workspace/target/generated-resources /licenses/']"
SeldonIO/seldon-core,latest,/engine/Dockerfile.redhat,RUN,3,"['mvn clean verify -Dlicense.useMissingFile -B', 'yum install -y java-11-openjdk.x86_64', 'yum -y update-minimal --security --sec-severity=Important --sec-severity=Critical']"
SeldonIO/seldon-core,latest,/engine/Dockerfile.redhat,LABEL,1,"['name=""Seldon Engine""       vendor=""Seldon Technologies""       version=""1.13.0-dev""       release=""1""       summary=""The Seldon Engine that is deployed for each model to handle the data flow of each ML computational graph.""       description=""The Seldon Engine that is deployed for each model to handle the data flow of each ML computational graph.""']"
SeldonIO/seldon-core,latest,/engine/Dockerfile.redhat,ENTRYPOINT,1,"['[ ""sh"", ""-c"", ""java -Djava.security.egd=file:/dev/./urandom $JAVA_OPTS -jar app.jar"" ]']"
SeldonIO/seldon-core,latest,/servers/tfserving/Dockerfile.redhat,ARG,4,"['TF_SERVING_VERSION=latest', 'TF_SERVING_BUILD_IMAGE=tensorflow/serving:${TF_SERVING_VERSION}-devel', 'TF_SERVING_VERSION_GIT_BRANCH=master', 'TF_SERVING_VERSION_GIT_COMMIT=head']"
SeldonIO/seldon-core,latest,/servers/tfserving/Dockerfile.redhat,FROM,2,"['${TF_SERVING_BUILD_IMAGE} as build_image', 'registry.access.redhat.com/ubi8/ubi-minimal']"
SeldonIO/seldon-core,latest,/servers/tfserving/Dockerfile.redhat,LABEL,4,"['name=""Seldon Tensorflow Serving Server""       vendor=""Seldon Technologies""       version=""1.13.0-dev""       release=""1""       summary=""Tensorflow serving for Seldon Core""       description=""Tensorflow serving for Seldon Core to server Tensorflow models""', 'maintainer=""cc@seldon.io""', 'tensorflow_serving_github_branchtag=${TF_SERVING_VERSION_GIT_BRANCH}', 'tensorflow_serving_github_commit=${TF_SERVING_VERSION_GIT_COMMIT}']"
SeldonIO/seldon-core,latest,/servers/tfserving/Dockerfile.redhat,RUN,4,"['microdnf install openssl ca-certificates wget     && microdnf update; microdnf clean all', 'mkdir -p ${MODEL_BASE_PATH}', 'ln -s /etc/ssl/certs/ca-bundle.crt /etc/ssl/certs/ca-certificates.crt', 'mkdir /licenses && wget -O /licenses/license.txt https://raw.githubusercontent.com/tensorflow/serving/master/LICENSE']"
SeldonIO/seldon-core,latest,/servers/tfserving/Dockerfile.redhat,COPY,2,"['--from=build_image /usr/local/bin/tensorflow_model_server /usr/bin/tensorflow_model_server', 'tf_serving_entrypoint.sh /usr/bin']"
SeldonIO/seldon-core,latest,/servers/tfserving/Dockerfile.redhat,EXPOSE,2,"['8500', '8501']"
SeldonIO/seldon-core,latest,/servers/tfserving/Dockerfile.redhat,ENV,2,"['MODEL_BASE_PATH=/models', 'MODEL_NAME=model']"
SeldonIO/seldon-core,latest,/servers/tfserving/Dockerfile.redhat,ENTRYPOINT,1,"['[""/usr/bin/tf_serving_entrypoint.sh""]']"
SeldonIO/seldon-core,latest,/operator/Dockerfile,FROM,2,"['golang:1.17.1-buster as builder', 'gcr.io/distroless/base-debian10:latest']"
SeldonIO/seldon-core,latest,/operator/Dockerfile,WORKDIR,2,"['/workspace', '/']"
SeldonIO/seldon-core,latest,/operator/Dockerfile,COPY,16,"['go.mod go.mod', 'go.sum go.sum', 'main.go main.go', 'apis/ apis/', 'controllers/ controllers/', 'utils/ utils/', 'constants/ constants/', 'client/ client/', '--from=builder /workspace/manager .', 'licenses/license.txt licenses/license.txt', '--from=builder /workspace/*.tar.gz licenses/mpl_source/', 'generated/admissionregistration.k8s.io_v1_validatingwebhookconfiguration_seldon-validating-webhook-configuration.yaml /tmp/operator-resources/validate.yaml', 'generated/v1_service_seldon-webhook-service.yaml /tmp/operator-resources/service.yaml', 'generated/v1_configmap_seldon-config.yaml /tmp/operator-resources/configmap.yaml', 'generated/apiextensions.k8s.io_v1beta1_customresourcedefinition_seldondeployments.machinelearning.seldon.io.yaml /tmp/operator-resources/crd-v1beta1.yaml', 'generated/apiextensions.k8s.io_v1_customresourcedefinition_seldondeployments.machinelearning.seldon.io.yaml /tmp/operator-resources/crd-v1.yaml']"
SeldonIO/seldon-core,latest,/operator/Dockerfile,RUN,25,"['go mod download', 'go build -a -o manager main.go', 'wget -O armon-consul-api.tar.gz https://github.com/armon/consul-api/archive/master.tar.gz', 'wget -O go-sql-driver-mysql.tar.gz https://github.com/go-sql-driver/mysql/archive/master.tar.gz', 'wget -O hashicorp-consul.tar.gz https://github.com/hashicorp/consul/archive/main.tar.gz', 'wget -O hashicorp-errwrap.tar.gz https://github.com/hashicorp/errwrap/archive/master.tar.gz', 'wget -O hashicorp-go-cleanhttp.tar.gz https://github.com/hashicorp/go-cleanhttp/archive/master.tar.gz', 'wget -O hashicorp-go-immutable-radix.tar.gz https://github.com/hashicorp/go-immutable-radix/archive/master.tar.gz', 'wget -O hashicorp-go-multierror.tar.gz https://github.com/hashicorp/go-multierror/archive/master.tar.gz', 'wget -O hashicorp-go-plugin.tar.gz https://github.com/hashicorp/go-plugin/archive/master.tar.gz', 'wget -O hashicorp-go-retryablehttp.tar.gz https://github.com/hashicorp/go-retryablehttp/archive/master.tar.gz', 'wget -O hashicorp-go-rootcerts.tar.gz https://github.com/hashicorp/go-rootcerts/archive/master.tar.gz', 'wget -O hashicorp-go-sockaddr.tar.gz https://github.com/hashicorp/go-sockaddr/archive/master.tar.gz', 'wget -O hashicorp-go-uuid.tar.gz https://github.com/hashicorp/go-uuid/archive/master.tar.gz', 'wget -O hashicorp-go-version.tar.gz https://github.com/hashicorp/go-version/archive/main.tar.gz', 'wget -O hashicorp-golang-lru.tar.gz https://github.com/hashicorp/golang-lru/archive/master.tar.gz', 'wget -O hashicorp-hcl.tar.gz https://github.com/hashicorp/hcl/archive/main.tar.gz', 'wget -O hashicorp-logutils.tar.gz https://github.com/hashicorp/logutils/archive/master.tar.gz', 'wget -O hashicorp-memberlist.tar.gz https://github.com/hashicorp/memberlist/archive/master.tar.gz', 'wget -O hashicorp-serf.tar.gz https://github.com/hashicorp/serf/archive/master.tar.gz', 'wget -O hashicorp-vault.tar.gz https://github.com/hashicorp/vault/archive/master.tar.gz', 'wget -O hashicorp-yamux.tar.gz https://github.com/hashicorp/yamux/archive/master.tar.gz', 'wget -O mitchellh-cli.tar.gz https://github.com/mitchellh/cli/archive/master.tar.gz', 'wget -O mitchellh-gox.tar.gz https://github.com/mitchellh/gox/archive/master.tar.gz', 'wget -O mozilla-tls-observatory.tar.gz https://github.com/mozilla/tls-observatory/archive/master.tar.gz']"
SeldonIO/seldon-core,latest,/operator/Dockerfile,ENTRYPOINT,1,"['[""/manager""]']"
SeldonIO/seldon-core,latest,/operator/bundle.Dockerfile,FROM,1,['scratch']
SeldonIO/seldon-core,latest,/operator/bundle.Dockerfile,LABEL,11,"['operators.operatorframework.io.bundle.mediatype.v1=registry+v1', 'operators.operatorframework.io.bundle.manifests.v1=manifests/', 'operators.operatorframework.io.bundle.metadata.v1=metadata/', 'operators.operatorframework.io.bundle.package.v1=seldon-operator', 'operators.operatorframework.io.bundle.channels.v1=alpha', 'operators.operatorframework.io.bundle.channel.default.v1=stable', 'operators.operatorframework.io.metrics.builder=operator-sdk-v1.2.0', 'operators.operatorframework.io.metrics.mediatype.v1=metrics+v1', 'operators.operatorframework.io.metrics.project_layout=go.kubebuilder.io/v2', 'operators.operatorframework.io.test.config.v1=tests/scorecard/', 'operators.operatorframework.io.test.mediatype.v1=scorecard+v1']"
SeldonIO/seldon-core,latest,/operator/bundle.Dockerfile,COPY,3,"['bundle/manifests /manifests/', 'bundle/metadata /metadata/', 'bundle/tests/scorecard /tests/scorecard/']"
SeldonIO/seldon-core,latest,/operator/Dockerfile.redhat,FROM,2,"['golang:1.17.1-buster as builder', 'registry.access.redhat.com/ubi8/ubi-minimal']"
SeldonIO/seldon-core,latest,/operator/Dockerfile.redhat,WORKDIR,2,"['/workspace', '/']"
SeldonIO/seldon-core,latest,/operator/Dockerfile.redhat,COPY,16,"['go.mod go.mod', 'go.sum go.sum', 'main.go main.go', 'apis/ apis/', 'controllers/ controllers/', 'utils/ utils/', 'constants/ constants/', 'client/ client/', '--from=builder /workspace/manager .', 'licenses/license.txt licenses/license.txt', '--from=builder /workspace/*.tar.gz licenses/mpl_source/', 'generated/admissionregistration.k8s.io_v1_validatingwebhookconfiguration_seldon-validating-webhook-configuration.yaml /tmp/operator-resources/validate.yaml', 'generated/v1_service_seldon-webhook-service.yaml /tmp/operator-resources/service.yaml', 'generated/v1_configmap_seldon-config.yaml /tmp/operator-resources/configmap.yaml', 'generated/apiextensions.k8s.io_v1beta1_customresourcedefinition_seldondeployments.machinelearning.seldon.io.yaml /tmp/operator-resources/crd-v1beta1.yaml', 'generated/apiextensions.k8s.io_v1_customresourcedefinition_seldondeployments.machinelearning.seldon.io.yaml /tmp/operator-resources/crd-v1.yaml']"
SeldonIO/seldon-core,latest,/operator/Dockerfile.redhat,RUN,25,"['go mod download', 'go build -a -o manager main.go', 'wget -O armon-consul-api.tar.gz https://github.com/armon/consul-api/archive/master.tar.gz', 'wget -O go-sql-driver-mysql.tar.gz https://github.com/go-sql-driver/mysql/archive/master.tar.gz', 'wget -O hashicorp-consul.tar.gz https://github.com/hashicorp/consul/archive/main.tar.gz', 'wget -O hashicorp-errwrap.tar.gz https://github.com/hashicorp/errwrap/archive/master.tar.gz', 'wget -O hashicorp-go-cleanhttp.tar.gz https://github.com/hashicorp/go-cleanhttp/archive/master.tar.gz', 'wget -O hashicorp-go-immutable-radix.tar.gz https://github.com/hashicorp/go-immutable-radix/archive/master.tar.gz', 'wget -O hashicorp-go-multierror.tar.gz https://github.com/hashicorp/go-multierror/archive/master.tar.gz', 'wget -O hashicorp-go-plugin.tar.gz https://github.com/hashicorp/go-plugin/archive/master.tar.gz', 'wget -O hashicorp-go-retryablehttp.tar.gz https://github.com/hashicorp/go-retryablehttp/archive/master.tar.gz', 'wget -O hashicorp-go-rootcerts.tar.gz https://github.com/hashicorp/go-rootcerts/archive/master.tar.gz', 'wget -O hashicorp-go-sockaddr.tar.gz https://github.com/hashicorp/go-sockaddr/archive/master.tar.gz', 'wget -O hashicorp-go-uuid.tar.gz https://github.com/hashicorp/go-uuid/archive/master.tar.gz', 'wget -O hashicorp-go-version.tar.gz https://github.com/hashicorp/go-version/archive/main.tar.gz', 'wget -O hashicorp-golang-lru.tar.gz https://github.com/hashicorp/golang-lru/archive/master.tar.gz', 'wget -O hashicorp-hcl.tar.gz https://github.com/hashicorp/hcl/archive/main.tar.gz', 'wget -O hashicorp-logutils.tar.gz https://github.com/hashicorp/logutils/archive/master.tar.gz', 'wget -O hashicorp-memberlist.tar.gz https://github.com/hashicorp/memberlist/archive/master.tar.gz', 'wget -O hashicorp-serf.tar.gz https://github.com/hashicorp/serf/archive/master.tar.gz', 'wget -O hashicorp-vault.tar.gz https://github.com/hashicorp/vault/archive/master.tar.gz', 'wget -O hashicorp-yamux.tar.gz https://github.com/hashicorp/yamux/archive/master.tar.gz', 'wget -O mitchellh-cli.tar.gz https://github.com/mitchellh/cli/archive/master.tar.gz', 'wget -O mitchellh-gox.tar.gz https://github.com/mitchellh/gox/archive/master.tar.gz', 'wget -O mozilla-tls-observatory.tar.gz https://github.com/mozilla/tls-observatory/archive/master.tar.gz']"
SeldonIO/seldon-core,latest,/operator/Dockerfile.redhat,LABEL,1,"['name=""Seldon Operator""       vendor=""Seldon Technologies""       version=""1.13.0-dev""       release=""1""       summary=""An Operator to deploy, monitor, explain and manage production machine learning models at scale.""       description=""The Seldon operator for management, monitoring and operations of machine learning systems through the Seldon Engine. Once installed, the Seldon Operator provides multiple functions which facilitate the productisation, monitoring and maintenance of machine learning systems at scale.""']"
SeldonIO/seldon-core,latest,/operator/Dockerfile.redhat,ENTRYPOINT,1,"['[""/manager""]']"
SeldonIO/seldon-core,latest,/operator/packagemanifests-certified/bundle-1.2.1.Dockerfile,FROM,1,['scratch']
SeldonIO/seldon-core,latest,/operator/packagemanifests-certified/bundle-1.2.1.Dockerfile,LABEL,8,"['operators.operatorframework.io.bundle.mediatype.v1=registry+v1', 'operators.operatorframework.io.bundle.manifests.v1=manifests/', 'operators.operatorframework.io.bundle.metadata.v1=metadata/', 'operators.operatorframework.io.bundle.package.v1=seldon-operator-certified', 'operators.operatorframework.io.bundle.channels.v1=alpha', 'operators.operatorframework.io.bundle.channel.default.v1=alpha', 'com.redhat.openshift.versions=""v4.5,v4.6,v4.7""', 'com.redhat.delivery.operator.bundle=true']"
SeldonIO/seldon-core,latest,/operator/packagemanifests-certified/bundle-1.2.1.Dockerfile,COPY,2,"['1.2.1/manifests /manifests/', '1.2.1/metadata /metadata/']"
SeldonIO/seldon-core,latest,/operator/packagemanifests-certified/bundle-1.1.0.Dockerfile,FROM,1,['scratch']
SeldonIO/seldon-core,latest,/operator/packagemanifests-certified/bundle-1.1.0.Dockerfile,LABEL,8,"['operators.operatorframework.io.bundle.mediatype.v1=registry+v1', 'operators.operatorframework.io.bundle.manifests.v1=manifests/', 'operators.operatorframework.io.bundle.metadata.v1=metadata/', 'operators.operatorframework.io.bundle.package.v1=seldon-operator-certified', 'operators.operatorframework.io.bundle.channels.v1=alpha', 'operators.operatorframework.io.bundle.channel.default.v1=alpha', 'com.redhat.openshift.versions=""v4.5,v4.6,v4.7""', 'com.redhat.delivery.operator.bundle=true']"
SeldonIO/seldon-core,latest,/operator/packagemanifests-certified/bundle-1.1.0.Dockerfile,COPY,2,"['1.1.0/manifests /manifests/', '1.1.0/metadata /metadata/']"
SeldonIO/seldon-core,latest,/operator/packagemanifests-certified/bundle-1.6.0.Dockerfile,FROM,1,['scratch']
SeldonIO/seldon-core,latest,/operator/packagemanifests-certified/bundle-1.6.0.Dockerfile,LABEL,9,"['operators.operatorframework.io.bundle.mediatype.v1=registry+v1', 'operators.operatorframework.io.bundle.manifests.v1=manifests/', 'operators.operatorframework.io.bundle.metadata.v1=metadata/', 'operators.operatorframework.io.bundle.package.v1=seldon-operator-certified', 'operators.operatorframework.io.bundle.channels.v1=stable', 'operators.operatorframework.io.bundle.channel.default.v1=stable', 'com.redhat.openshift.versions=""v4.5,v4.6,v4.7""', 'com.redhat.delivery.backport=true', 'com.redhat.delivery.operator.bundle=true']"
SeldonIO/seldon-core,latest,/operator/packagemanifests-certified/bundle-1.6.0.Dockerfile,COPY,2,"['1.6.0/manifests /manifests/', '1.6.0/metadata /metadata/']"
SeldonIO/seldon-core,latest,/operator/packagemanifests-certified/bundle-0.1.5.Dockerfile,FROM,1,['scratch']
SeldonIO/seldon-core,latest,/operator/packagemanifests-certified/bundle-0.1.5.Dockerfile,LABEL,8,"['operators.operatorframework.io.bundle.mediatype.v1=registry+v1', 'operators.operatorframework.io.bundle.manifests.v1=manifests/', 'operators.operatorframework.io.bundle.metadata.v1=metadata/', 'operators.operatorframework.io.bundle.package.v1=seldon-operator-certified', 'operators.operatorframework.io.bundle.channels.v1=alpha', 'operators.operatorframework.io.bundle.channel.default.v1=alpha', 'com.redhat.openshift.versions=""v4.5,v4.6,v4.7""', 'com.redhat.delivery.operator.bundle=true']"
SeldonIO/seldon-core,latest,/operator/packagemanifests-certified/bundle-0.1.5.Dockerfile,COPY,2,"['0.1.5/manifests /manifests/', '0.1.5/metadata /metadata/']"
SeldonIO/seldon-core,latest,/operator/packagemanifests-certified/bundle-1.7.0.Dockerfile,FROM,1,['scratch']
SeldonIO/seldon-core,latest,/operator/packagemanifests-certified/bundle-1.7.0.Dockerfile,LABEL,9,"['operators.operatorframework.io.bundle.mediatype.v1=registry+v1', 'operators.operatorframework.io.bundle.manifests.v1=manifests/', 'operators.operatorframework.io.bundle.metadata.v1=metadata/', 'operators.operatorframework.io.bundle.package.v1=seldon-operator-certified', 'operators.operatorframework.io.bundle.channels.v1=stable', 'operators.operatorframework.io.bundle.channel.default.v1=stable', 'com.redhat.openshift.versions=""v4.5,v4.6,v4.7""', 'com.redhat.delivery.backport=true', 'com.redhat.delivery.operator.bundle=true']"
SeldonIO/seldon-core,latest,/operator/packagemanifests-certified/bundle-1.7.0.Dockerfile,COPY,2,"['1.7.0/manifests /manifests/', '1.7.0/metadata /metadata/']"
SeldonIO/seldon-core,latest,/operator/packagemanifests-certified/bundle-1.2.0.Dockerfile,FROM,1,['scratch']
SeldonIO/seldon-core,latest,/operator/packagemanifests-certified/bundle-1.2.0.Dockerfile,LABEL,8,"['operators.operatorframework.io.bundle.mediatype.v1=registry+v1', 'operators.operatorframework.io.bundle.manifests.v1=manifests/', 'operators.operatorframework.io.bundle.metadata.v1=metadata/', 'operators.operatorframework.io.bundle.package.v1=seldon-operator-certified', 'operators.operatorframework.io.bundle.channels.v1=alpha', 'operators.operatorframework.io.bundle.channel.default.v1=alpha', 'com.redhat.openshift.versions=""v4.5,v4.6,v4.7""', 'com.redhat.delivery.operator.bundle=true']"
SeldonIO/seldon-core,latest,/operator/packagemanifests-certified/bundle-1.2.0.Dockerfile,COPY,2,"['1.2.0/manifests /manifests/', '1.2.0/metadata /metadata/']"
SeldonIO/seldon-core,latest,/operator/packagemanifests-certified/bundle-1.5.0.Dockerfile,FROM,1,['scratch']
SeldonIO/seldon-core,latest,/operator/packagemanifests-certified/bundle-1.5.0.Dockerfile,LABEL,9,"['operators.operatorframework.io.bundle.mediatype.v1=registry+v1', 'operators.operatorframework.io.bundle.manifests.v1=manifests/', 'operators.operatorframework.io.bundle.metadata.v1=metadata/', 'operators.operatorframework.io.bundle.package.v1=seldon-operator-certified', 'operators.operatorframework.io.bundle.channels.v1=stable', 'operators.operatorframework.io.bundle.channel.default.v1=stable', 'com.redhat.openshift.versions=""v4.5,v4.6,v4.7""', 'com.redhat.delivery.backport=true', 'com.redhat.delivery.operator.bundle=true']"
SeldonIO/seldon-core,latest,/operator/packagemanifests-certified/bundle-1.5.0.Dockerfile,COPY,2,"['1.5.0/manifests /manifests/', '1.5.0/metadata /metadata/']"
SeldonIO/seldon-core,latest,/operator/packagemanifests-certified/bundle-1.2.2.Dockerfile,FROM,1,['scratch']
SeldonIO/seldon-core,latest,/operator/packagemanifests-certified/bundle-1.2.2.Dockerfile,LABEL,9,"['operators.operatorframework.io.bundle.mediatype.v1=registry+v1', 'operators.operatorframework.io.bundle.manifests.v1=manifests/', 'operators.operatorframework.io.bundle.metadata.v1=metadata/', 'operators.operatorframework.io.bundle.package.v1=seldon-operator-certified', 'operators.operatorframework.io.bundle.channels.v1=alpha', 'operators.operatorframework.io.bundle.channel.default.v1=alpha', 'com.redhat.openshift.versions=""v4.5,v4.6,v4.7""', 'com.redhat.delivery.operator.bundle=true', 'com.redhat.delivery.backport=true']"
SeldonIO/seldon-core,latest,/operator/packagemanifests-certified/bundle-1.2.2.Dockerfile,COPY,2,"['1.2.2/manifests /manifests/', '1.2.2/metadata /metadata/']"
SeldonIO/seldon-core,latest,/operator/packagemanifests/bundle-version.Dockerfile,FROM,1,['scratch']
SeldonIO/seldon-core,latest,/operator/packagemanifests/bundle-version.Dockerfile,LABEL,6,"['operators.operatorframework.io.bundle.mediatype.v1=registry+v1', 'operators.operatorframework.io.bundle.manifests.v1=manifests/', 'operators.operatorframework.io.bundle.metadata.v1=metadata/', 'operators.operatorframework.io.bundle.package.v1=seldon-operator', 'operators.operatorframework.io.bundle.channels.v1=stable', 'operators.operatorframework.io.bundle.channel.default.v1=stable']"
SeldonIO/seldon-core,latest,/operator/packagemanifests/bundle-version.Dockerfile,ARG,1,['VERSION']
SeldonIO/seldon-core,latest,/operator/packagemanifests/bundle-version.Dockerfile,COPY,3,"['${VERSION} /manifests/', 'metadata /metadata/', 'scorecard /tests/scorecard']"
SeldonIO/seldon-core,latest,/operator/packagemanifests/bundle.Dockerfile,FROM,1,['scratch']
SeldonIO/seldon-core,latest,/operator/packagemanifests/bundle.Dockerfile,LABEL,6,"['operators.operatorframework.io.bundle.mediatype.v1=registry+v1', 'operators.operatorframework.io.bundle.manifests.v1=manifests/', 'operators.operatorframework.io.bundle.metadata.v1=metadata/', 'operators.operatorframework.io.bundle.package.v1=seldon-operator', 'operators.operatorframework.io.bundle.channels.v1=stable', 'operators.operatorframework.io.bundle.channel.default.v1=stable']"
SeldonIO/seldon-core,latest,/operator/packagemanifests/bundle.Dockerfile,COPY,2,"['1.3.0/manifests /manifests/', '1.3.0/metadata /metadata/']"
jolibrain/deepdetect,latest,/docker/cpu.Dockerfile,FROM,2,"['ubuntu:20.04 AS build', 'ubuntu:20.04 AS runtime']"
jolibrain/deepdetect,latest,/docker/cpu.Dockerfile,ARG,5,"['DEEPDETECT_RELEASE=OFF', 'DEEPDETECT_ARCH=cpu', 'DEEPDETECT_BUILD=default', 'DEEPDETECT_DEFAULT_MODELS=true', 'DEEPDETECT_ARCH=cpu']"
jolibrain/deepdetect,latest,/docker/cpu.Dockerfile,RUN,17,"['rm -f /etc/apt/apt.conf.d/docker-clean; echo \'Binary::apt::APT::Keep-Downloaded-Packages ""true"";\' > /etc/apt/apt.conf.d/keep-cache', '--mount=type=cache,id=dede_cache_lib,sharing=locked,target=/var/cache/apt     --mount=type=cache,id=dede_apt_lib,sharing=locked,target=/var/lib/apt     export DEBIAN_FRONTEND=noninteractive &&     apt-get update -y && apt-get install -y python-dev apt-transport-https ca-certificates gnupg software-properties-common wget curl', 'curl https://apt.kitware.com/keys/kitware-archive-latest.asc | apt-key add -', ""apt-add-repository 'deb https://apt.kitware.com/ubuntu/ focal main'"", 'cp /bin/true /usr/bin/pycompile', '--mount=type=cache,id=dede_cache_lib,sharing=locked,target=/var/cache/apt     --mount=type=cache,id=dede_apt_lib,sharing=locked,target=/var/lib/apt     export DEBIAN_FRONTEND=noninteractive &&     apt-get update -y && apt-get install -y     git     ccache     automake     build-essential     openjdk-8-jdk     pkg-config     cmake     zip     g++     gcc-7 g++-7     zlib1g-dev     libgoogle-glog-dev     libgflags-dev     libeigen3-dev     libopencv-dev     libboost-dev     libboost-filesystem-dev     libboost-thread-dev     libboost-system-dev     libboost-iostreams-dev     libboost-program-options-dev     libboost-test-dev     libboost-regex-dev     libboost-date-time-dev     libboost-chrono-dev     libboost-stacktrace-dev     libssl-dev     libcurlpp-dev     libcurl4-openssl-dev     libopenblas-dev     libhdf5-dev     libleveldb-dev     libsnappy-dev     liblmdb-dev     libutfcpp-dev     rapidjson-dev     libmapbox-variant-dev     autoconf     libtool-bin     python-numpy     python-yaml     python-typing     swig     unzip     python-setuptools     python-dev     python3-dev     python3-pip     python-six     python-enum34     python3-yaml     unzip     libgoogle-perftools-dev     curl     libarchive-dev     libtcmalloc-minimal4     bash-completion     libomp-10-dev     libomp5-10', 'for url in         https://github.com/bazelbuild/bazel/releases/download/0.24.1/bazel_0.24.1-linux-x86_64.deb         ; do curl -L -s -o /tmp/p.deb $url && dpkg -i /tmp/p.deb && rm -rf /tmp/p.deb; done', 'python3 -m pip install --upgrade pip', 'python3 -m pip install dataclasses typing_extensions', '--mount=type=cache,target=/ccache/ mkdir build && cd build && ../build.sh', './docker/get_libs.sh', '--mount=type=cache,id=dede_cache_lib,sharing=locked,target=/var/cache/apt     --mount=type=cache,id=dede_apt_lib,sharing=locked,target=/var/lib/apt     export DEBIAN_FRONTEND=noninteractive &&     apt-get update -y && apt-get install -y     wget     curl     libopenblas-base     liblmdb0     libleveldb1d     libboost-regex1.71.0     libgoogle-glog0v5     libopencv4.2     libgflags2.2     libcurl4     libcurlpp0     libhdf5-cpp-103     libboost-atomic1.71.0     libboost-chrono1.71.0     libboost-date-time1.71.0     libboost-filesystem1.71.0     libboost-thread1.71.0     libboost-iostreams1.71.0     libboost-regex1.71.0     libboost-stacktrace1.71.0     libboost-system1.71.0     libarchive13     libtcmalloc-minimal4     libomp-10-dev     libomp5-10', 'ln -sf /dev/stdout /var/log/deepdetect.log &&     ln -sf /dev/stderr /var/log/deepdetect.log', 'useradd -ms /bin/bash dd &&     chown -R dd:dd /opt', 'chown -R dd:dd /opt/models', '/opt/deepdetect/get_models.sh', '/opt/deepdetect/check-dede-deps.sh']"
jolibrain/deepdetect,latest,/docker/cpu.Dockerfile,ADD,1,['. /opt/deepdetect']
jolibrain/deepdetect,latest,/docker/cpu.Dockerfile,WORKDIR,3,"['/opt/deepdetect/', '/opt/models', '/opt/deepdetect/build/main']"
jolibrain/deepdetect,latest,/docker/cpu.Dockerfile,ENV,3,"['CCACHE_DIR=/ccache', 'PATH=/usr/lib/ccache:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin', 'TERM=xterm']"
jolibrain/deepdetect,latest,/docker/cpu.Dockerfile,LABEL,2,"['description=""DeepDetect deep learning server & API / ${DEEPDETECT_ARCH} version""', 'maintainer=""emmanuel.benazera@jolibrain.com""']"
jolibrain/deepdetect,latest,/docker/cpu.Dockerfile,USER,3,"['dd', 'root', 'dd']"
jolibrain/deepdetect,latest,/docker/cpu.Dockerfile,COPY,11,"['--from=build /opt/deepdetect/build/main /opt/deepdetect/build/main', '--from=build /opt/deepdetect/build/oatpp-swagger/src/oatpp-swagger/res/ /opt/deepdetect/build/oatpp-swagger/src/oatpp-swagger/res/', '--from=build --chown=dd /opt/deepdetect/datasets/imagenet/corresp_ilsvrc12.txt /opt/models/ggnet/corresp.txt', '--from=build --chown=dd /opt/deepdetect/datasets/imagenet/corresp_ilsvrc12.txt /opt/models/resnet_50/corresp.txt', '--from=build --chown=dd /opt/deepdetect/templates/caffe/googlenet/*prototxt /opt/models/ggnet/', '--from=build --chown=dd /opt/deepdetect/templates/caffe/resnet_50/*prototxt /opt/models/resnet_50/', '--from=build /tmp/lib/* /opt/deepdetect/build/lib/', '--from=build /opt/deepdetect/templates /opt/deepdetect/build/templates', '--from=build /opt/deepdetect/get_models.sh /opt/deepdetect/', '--from=build /opt/deepdetect/docker/check-dede-deps.sh /opt/deepdetect/', '--from=build /opt/deepdetect/docker/start-dede.sh /opt/deepdetect/']"
jolibrain/deepdetect,latest,/docker/cpu.Dockerfile,CMD,1,['/opt/deepdetect/start-dede.sh -host 0.0.0.0']
jolibrain/deepdetect,latest,/docker/cpu.Dockerfile,VOLUME,1,"['[""/data""]']"
jolibrain/deepdetect,latest,/docker/cpu.Dockerfile,EXPOSE,1,['8080']
jolibrain/deepdetect,latest,/docker/sync_gpu_dockerfiles.sh,HERE=$(DIRNAME,1,['$(readlink -f $0))']
jolibrain/deepdetect,latest,/docker/sync_gpu_dockerfiles.sh,DECLARE,3,"['-A runtime_images', '-A devel_images', '-A builds']"
jolibrain/deepdetect,latest,/docker/sync_gpu_dockerfiles.sh,"RUNTIME_IMAGES[GPU]=""NVIDIA/CUDA:11.1-CUDNN8-RUNTIME-UBUNTU20.04""",1,['']
jolibrain/deepdetect,latest,/docker/sync_gpu_dockerfiles.sh,"RUNTIME_IMAGES[GPU_TENSORRT]=""NVCR.IO/NVIDIA/TENSORRT:20.12-PY3""",1,['']
jolibrain/deepdetect,latest,/docker/sync_gpu_dockerfiles.sh,"DEVEL_IMAGES[GPU]=""NVIDIA/CUDA:11.1-CUDNN8-DEVEL-UBUNTU20.04""",1,['']
jolibrain/deepdetect,latest,/docker/sync_gpu_dockerfiles.sh,"DEVEL_IMAGES[GPU_TENSORRT]=""NVCR.IO/NVIDIA/TENSORRT:20.12-PY3""",1,['']
jolibrain/deepdetect,latest,/docker/sync_gpu_dockerfiles.sh,"BUILDS[GPU_TENSORRT]=""TENSORRT""",1,['']
jolibrain/deepdetect,latest,/docker/sync_gpu_dockerfiles.sh,FOR,1,"['dest in ""${!runtime_images[@]}"" ; do']"
jolibrain/deepdetect,latest,/docker/sync_gpu_dockerfiles.sh,RUNTIME_IMAGE=${RUNTIME_IMAGES[$DEST]},1,['']
jolibrain/deepdetect,latest,/docker/sync_gpu_dockerfiles.sh,DEVEL_IMAGE=${DEVEL_IMAGES[$DEST]},1,['']
jolibrain/deepdetect,latest,/docker/sync_gpu_dockerfiles.sh,BUILD=${BUILDS[$DEST]},1,['']
jolibrain/deepdetect,latest,/docker/sync_gpu_dockerfiles.sh,[,1,"['! ""$build"" ] && build=""default""']"
jolibrain/deepdetect,latest,/docker/sync_gpu_dockerfiles.sh,SED,1,"['-e ""s,FROM [^ ]* AS build,FROM ${devel_image} AS build,g""         -e ""s,FROM [^ ]* AS runtime,FROM ${runtime_image} AS runtime,g""         -e ""s,ARG DEEPDETECT_ARCH=.*,ARG DEEPDETECT_ARCH=gpu,g""         -e ""s,ARG DEEPDETECT_BUILD=.*,ARG DEEPDETECT_BUILD=${build},g""         $here/cpu.Dockerfile > $here/${dest}.Dockerfile']"
jolibrain/deepdetect,latest,/docker/sync_gpu_dockerfiles.sh,DONE,1,['']
jolibrain/deepdetect,latest,/docker/cpu-arm.Dockerfile,ARG,3,"['ARM_VERSION=arm32v7', 'DEEPDETECT_ARCH=cpu', 'DEEPDETECT_BUILD=armv7']"
jolibrain/deepdetect,latest,/docker/cpu-arm.Dockerfile,FROM,2,"['${ARM_VERSION}/ubuntu:18.04 AS build', '${ARM_VERSION}/ubuntu:18.04']"
jolibrain/deepdetect,latest,/docker/cpu-arm.Dockerfile,RUN,10,"['export DEBIAN_FRONTEND=noninteractive &&     apt-get update &&     apt-get install -y git     build-essential     cmake     libgoogle-glog-dev     libgflags-dev     libeigen3-dev     libopencv-dev     libboost-dev     libboost-filesystem-dev     libboost-thread-dev     libboost-system-dev     libboost-iostreams-dev     libboost-program-options-dev     libboost-test-dev     libssl-dev     libcurl4-openssl-dev     protobuf-compiler     libopenblas-dev     libprotobuf-dev     libleveldb-dev     libsnappy-dev     liblmdb-dev     libutfcpp-dev     rapidjson-dev     wget     unzip     libspdlog-dev     python-setuptools     python-dev     libhdf5-dev     libarchive-dev     apt-transport-https     ca-certificates &&     apt-get clean &&     rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*', 'wget https://github.com/cpp-netlib/cpp-netlib/archive/cpp-netlib-0.11.2-final.tar.gz &&     tar xvzf cpp-netlib-0.11.2-final.tar.gz &&     cd cpp-netlib-cpp-netlib-0.11.2-final &&     mkdir build &&     cd build &&     cmake .. &&     make &&     make install', 'git clone https://github.com/jpbarrette/curlpp.git', 'cmake . &&     make install &&     cp /usr/local/lib/libcurlpp.* /usr/lib/', 'mkdir build &&     cd build &&     cp -a ../build.sh . &&     ./build.sh', './docker/get_libs.sh', 'apt-get update &&     apt-get install -y wget \tlibopenblas-base \tliblmdb0 \tlibleveldb1v5     libboost-regex1.62.0 \tlibgoogle-glog0v5 \tlibopencv-highgui3.2 \tlibgflags2.2 \tlibcurl4 \tlibhdf5-cpp-100 \tlibboost-filesystem1.65.1 \tlibboost-thread1.65.1 \tlibboost-iostreams1.65.1     libboost-regex1.65.1 \tlibarchive13 \tlibprotobuf10 &&     rm -rf /var/lib/apt/lists/*', 'ln -sf /dev/stdout /var/log/deepdetect.log &&     ln -sf /dev/stderr /var/log/deepdetect.log', 'useradd -ms /bin/bash dd &&     chown dd:dd /opt', 'mkdir /opt/models']"
jolibrain/deepdetect,latest,/docker/cpu-arm.Dockerfile,WORKDIR,4,"['/opt', '/opt/curlpp', '/opt/deepdetect/', '/opt/deepdetect/build/main']"
jolibrain/deepdetect,latest,/docker/cpu-arm.Dockerfile,ADD,1,['./ /opt/deepdetect']
jolibrain/deepdetect,latest,/docker/cpu-arm.Dockerfile,COPY,2,"['--from=build /opt/deepdetect/build/main /opt/deepdetect/build/main', '--from=build /tmp/lib/* /usr/lib/']"
jolibrain/deepdetect,latest,/docker/cpu-arm.Dockerfile,LABEL,2,"['maintainer=""emmanuel.benazera@jolibrain.com""', 'description=""DeepDetect deep learning server & API / CPU NCNN-only RPi3 version""']"
jolibrain/deepdetect,latest,/docker/cpu-arm.Dockerfile,USER,1,['dd']
jolibrain/deepdetect,latest,/docker/cpu-arm.Dockerfile,VOLUME,1,"['[""/data""]']"
jolibrain/deepdetect,latest,/docker/cpu-arm.Dockerfile,CMD,1,['./dede -host 0.0.0.0']
jolibrain/deepdetect,latest,/docker/cpu-arm.Dockerfile,EXPOSE,1,['8080']
jolibrain/deepdetect,latest,/docker/gpu_tensorrt.Dockerfile,FROM,2,"['nvcr.io/nvidia/tensorrt:21.07-py3 AS build', 'nvcr.io/nvidia/tensorrt:21.07-py3 AS runtime']"
jolibrain/deepdetect,latest,/docker/gpu_tensorrt.Dockerfile,ARG,6,"['DEEPDETECT_RELEASE=OFF', 'DEEPDETECT_ARCH=gpu', 'DEEPDETECT_BUILD=tensorrt', 'DEEPDETECT_DEFAULT_MODELS=true', 'DEEPDETECT_OPENCV4_BUILD_PATH=/opt/deepdetect/opencv/opencv-4.5.3/build', 'DEEPDETECT_ARCH=gpu']"
jolibrain/deepdetect,latest,/docker/gpu_tensorrt.Dockerfile,RUN,23,"['rm -f /etc/apt/apt.conf.d/docker-clean; echo \'Binary::apt::APT::Keep-Downloaded-Packages ""true"";\' > /etc/apt/apt.conf.d/keep-cache', '--mount=type=cache,id=dede_cache_lib,sharing=locked,target=/var/cache/apt     --mount=type=cache,id=dede_apt_lib,sharing=locked,target=/var/lib/apt     export DEBIAN_FRONTEND=noninteractive &&     apt-get update -y && apt-get install -y python-dev apt-transport-https ca-certificates gnupg software-properties-common wget curl', 'curl https://apt.kitware.com/keys/kitware-archive-latest.asc | apt-key add -', ""apt-add-repository 'deb https://apt.kitware.com/ubuntu/ focal main'"", 'cp /bin/true /usr/bin/pycompile', '--mount=type=cache,id=dede_cache_lib,sharing=locked,target=/var/cache/apt     --mount=type=cache,id=dede_apt_lib,sharing=locked,target=/var/lib/apt     export DEBIAN_FRONTEND=noninteractive &&     apt-get update -y && apt-get install -y     git     ccache     automake     build-essential     openjdk-8-jdk     pkg-config     cmake     zip     g++     gcc-7 g++-7     zlib1g-dev     libgoogle-glog-dev     libgflags-dev     libeigen3-dev     libboost-dev     libboost-filesystem-dev     libboost-thread-dev     libboost-system-dev     libboost-iostreams-dev     libboost-program-options-dev     libboost-test-dev     libboost-regex-dev     libboost-date-time-dev     libboost-chrono-dev     libboost-stacktrace-dev     libssl-dev     libcurlpp-dev     libcurl4-openssl-dev     libopenblas-dev     libhdf5-dev     libleveldb-dev     libsnappy-dev     liblmdb-dev     libutfcpp-dev     rapidjson-dev     libmapbox-variant-dev     autoconf     libtool-bin     python-numpy     python-yaml     python-typing     swig     curl     unzip     python-setuptools     python-dev     python3-dev     python3-pip     python-six     python-enum34     python3-yaml     unzip     libgoogle-perftools-dev     curl     libarchive-dev     libgstreamer1.0-dev     libgstreamer-plugins-base1.0-dev     libgstreamer-plugins-bad1.0-dev     gstreamer1.0-plugins-base     gstreamer1.0-plugins-good     gstreamer1.0-plugins-bad     gstreamer1.0-plugins-ugly     gstreamer1.0-libav     gstreamer1.0-doc     gstreamer1.0-tools     gstreamer1.0-x     gstreamer1.0-gl     bash-completion', 'for url in         https://github.com/bazelbuild/bazel/releases/download/0.24.1/bazel_0.24.1-linux-x86_64.deb         ; do curl -L -s -o /tmp/p.deb $url && dpkg -i /tmp/p.deb && rm -rf /tmp/p.deb; done', 'python3 -m pip install --upgrade pip', 'python3 -m pip install dataclasses typing_extensions', 'wget http://www.deepdetect.com/stuff/Video_Codec_SDK_11.1.5.zip && unzip Video_Codec_SDK_11.1.5.zip', 'cd Video_Codec_SDK_11.1.5 && cp Interface/* /usr/local/cuda/targets/x86_64-linux/include/ && cp Lib/linux/stubs/x86_64/* /usr/local/cuda/targets/x86_64-linux/lib/stubs/', 'mkdir opencv && cd opencv && wget -O opencv.zip https://github.com/opencv/opencv/archive/refs/tags/4.5.3.zip && wget -O opencv_contrib.zip https://github.com/opencv/opencv_contrib/archive/refs/tags/4.5.3.zip && unzip opencv.zip && unzip opencv_contrib.zip', 'cd /opt/deepdetect/opencv/opencv-4.5.3 && mkdir build && cd build && cmake -D CMAKE_BUILD_TYPE=RELEASE -D CMAKE_INSTALL_PREFIX=/tmp/ -D CMAKE_LIBRARY_PATH=/usr/local/cuda/lib64/stubs -D CMAKE_CXX_FLAGS=""-Wl,--allow-shlib-undefined"" -D WITH_TBB=ON -D ENABLE_FAST_MATH=1 -D CUDA_FAST_MATH=1 -D WITH_CUBLAS=1 -D WITH_CUDA=ON -D BUILD_opencv_cudacodec=ON -D WITH_CUDNN=ON -D OPENCV_DNN_CUDA=OFF -D CUDA_ARCH_BIN=6.1 -D WITH_V4L=ON -D WITH_QT=OFF -D WITH_OPENGL=ON -D WITH_GSTREAMER=ON -D WITH_NVCUVID=ON -D OPENCV_GENERATE_PKGCONFIG=ON -D OPENCV_PC_FILE_NAME=opencv.pc -D OPENCV_ENABLE_NONFREE=ON -D BUILD_opencv_python2=OFF -D BUILD_opencv_python3=OFF -D OPENCV_EXTRA_MODULES_PATH=/opt/deepdetect/opencv/opencv_contrib-4.5.3/modules -D INSTALL_PYTHON_EXAMPLES=OFF -D INSTALL_C_EXAMPLES=OFF -D BUILD_EXAMPLES=OFF ..', 'make -j20', 'make install', '--mount=type=cache,target=/ccache/ mkdir build && cd build && ../build.sh', './docker/get_libs.sh', '--mount=type=cache,id=dede_cache_lib,sharing=locked,target=/var/cache/apt     --mount=type=cache,id=dede_apt_lib,sharing=locked,target=/var/lib/apt     export DEBIAN_FRONTEND=noninteractive &&     apt-get update -y && apt-get install -y     wget     curl \tlibopenblas-base \tliblmdb0 \tlibleveldb1d     libboost-regex1.71.0 \tlibgoogle-glog0v5     libopencv4.2 \tlibgflags2.2 \tlibcurl4 \tlibcurlpp0 \tlibhdf5-cpp-103     libboost-atomic1.71.0     libboost-chrono1.71.0     libboost-date-time1.71.0 \tlibboost-filesystem1.71.0 \tlibboost-thread1.71.0 \tlibboost-iostreams1.71.0     libboost-regex1.71.0     libboost-stacktrace1.71.0     libboost-system1.71.0 \tlibarchive13 \tlibgstreamer1.0-0', 'ln -sf /dev/stdout /var/log/deepdetect.log &&     ln -sf /dev/stderr /var/log/deepdetect.log', 'useradd -ms /bin/bash dd &&     chown -R dd:dd /opt', 'chown -R dd:dd /opt/models', '/opt/deepdetect/get_models.sh', '/opt/deepdetect/check-dede-deps.sh']"
jolibrain/deepdetect,latest,/docker/gpu_tensorrt.Dockerfile,ADD,1,['. /opt/deepdetect']
jolibrain/deepdetect,latest,/docker/gpu_tensorrt.Dockerfile,WORKDIR,5,"['/opt/deepdetect/', '/opt/deepdetect/opencv/opencv-4.5.3/build', '/opt/deepdetect', '/opt/models', '/opt/deepdetect/build/main']"
jolibrain/deepdetect,latest,/docker/gpu_tensorrt.Dockerfile,ENV,3,"['CCACHE_DIR=/ccache', 'PATH=/usr/lib/ccache:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin', 'TERM=xterm']"
jolibrain/deepdetect,latest,/docker/gpu_tensorrt.Dockerfile,LABEL,2,"['description=""DeepDetect deep learning server & API / ${DEEPDETECT_ARCH} version""', 'maintainer=""emmanuel.benazera@jolibrain.com""']"
jolibrain/deepdetect,latest,/docker/gpu_tensorrt.Dockerfile,USER,3,"['dd', 'root', 'dd']"
jolibrain/deepdetect,latest,/docker/gpu_tensorrt.Dockerfile,COPY,11,"['--from=build /opt/deepdetect/build/main /opt/deepdetect/build/main', '--from=build /opt/deepdetect/build/oatpp-swagger/src/oatpp-swagger/res/ /opt/deepdetect/build/oatpp-swagger/src/oatpp-swagger/res/', '--from=build --chown=dd /opt/deepdetect/datasets/imagenet/corresp_ilsvrc12.txt /opt/models/ggnet/corresp.txt', '--from=build --chown=dd /opt/deepdetect/datasets/imagenet/corresp_ilsvrc12.txt /opt/models/resnet_50/corresp.txt', '--from=build --chown=dd /opt/deepdetect/templates/caffe/googlenet/*prototxt /opt/models/ggnet/', '--from=build --chown=dd /opt/deepdetect/templates/caffe/resnet_50/*prototxt /opt/models/resnet_50/', '--from=build /tmp/lib/* /opt/deepdetect/build/lib/', '--from=build /opt/deepdetect/templates /opt/deepdetect/build/templates', '--from=build /opt/deepdetect/get_models.sh /opt/deepdetect/', '--from=build /opt/deepdetect/docker/check-dede-deps.sh /opt/deepdetect/', '--from=build /opt/deepdetect/docker/start-dede.sh /opt/deepdetect/']"
jolibrain/deepdetect,latest,/docker/gpu_tensorrt.Dockerfile,CMD,1,['/opt/deepdetect/start-dede.sh -host 0.0.0.0']
jolibrain/deepdetect,latest,/docker/gpu_tensorrt.Dockerfile,VOLUME,1,"['[""/data""]']"
jolibrain/deepdetect,latest,/docker/gpu_tensorrt.Dockerfile,EXPOSE,1,['8080']
jolibrain/deepdetect,latest,/docker/gpu.Dockerfile,FROM,2,"['nvidia/cuda:11.1-cudnn8-devel-ubuntu20.04 AS build', 'nvidia/cuda:11.1-cudnn8-runtime-ubuntu20.04 AS runtime']"
jolibrain/deepdetect,latest,/docker/gpu.Dockerfile,ARG,5,"['DEEPDETECT_RELEASE=OFF', 'DEEPDETECT_ARCH=gpu', 'DEEPDETECT_BUILD=default', 'DEEPDETECT_DEFAULT_MODELS=true', 'DEEPDETECT_ARCH=gpu']"
jolibrain/deepdetect,latest,/docker/gpu.Dockerfile,RUN,17,"['rm -f /etc/apt/apt.conf.d/docker-clean; echo \'Binary::apt::APT::Keep-Downloaded-Packages ""true"";\' > /etc/apt/apt.conf.d/keep-cache', '--mount=type=cache,id=dede_cache_lib,sharing=locked,target=/var/cache/apt     --mount=type=cache,id=dede_apt_lib,sharing=locked,target=/var/lib/apt     export DEBIAN_FRONTEND=noninteractive &&     apt-get update -y && apt-get install -y python-dev apt-transport-https ca-certificates gnupg software-properties-common wget curl', 'curl https://apt.kitware.com/keys/kitware-archive-latest.asc | apt-key add -', ""apt-add-repository 'deb https://apt.kitware.com/ubuntu/ focal main'"", 'cp /bin/true /usr/bin/pycompile', '--mount=type=cache,id=dede_cache_lib,sharing=locked,target=/var/cache/apt     --mount=type=cache,id=dede_apt_lib,sharing=locked,target=/var/lib/apt     export DEBIAN_FRONTEND=noninteractive &&     apt-get update -y && apt-get install -y     git     ccache     automake     build-essential     openjdk-8-jdk     pkg-config     cmake     zip     g++     gcc-7 g++-7     zlib1g-dev     libgoogle-glog-dev     libgflags-dev     libeigen3-dev     libopencv-dev     libboost-dev     libboost-filesystem-dev     libboost-thread-dev     libboost-system-dev     libboost-iostreams-dev     libboost-program-options-dev     libboost-test-dev     libboost-regex-dev     libboost-date-time-dev     libboost-chrono-dev     libboost-stacktrace-dev     libssl-dev     libcurlpp-dev     libcurl4-openssl-dev     libopenblas-dev     libhdf5-dev     libleveldb-dev     libsnappy-dev     liblmdb-dev     libutfcpp-dev     rapidjson-dev     libmapbox-variant-dev     autoconf     libtool-bin     python-numpy     python-yaml     python-typing     swig     curl     unzip     python-setuptools     python-dev     python3-dev     python3-pip     python-six     python-enum34     python3-yaml     unzip     libgoogle-perftools-dev     curl     libarchive-dev     libtcmalloc-minimal4     bash-completion', 'for url in         https://github.com/bazelbuild/bazel/releases/download/0.24.1/bazel_0.24.1-linux-x86_64.deb         ; do curl -L -s -o /tmp/p.deb $url && dpkg -i /tmp/p.deb && rm -rf /tmp/p.deb; done', 'python3 -m pip install --upgrade pip', 'python3 -m pip install dataclasses typing_extensions', '--mount=type=cache,target=/ccache/ mkdir build && cd build && ../build.sh', './docker/get_libs.sh', '--mount=type=cache,id=dede_cache_lib,sharing=locked,target=/var/cache/apt     --mount=type=cache,id=dede_apt_lib,sharing=locked,target=/var/lib/apt     export DEBIAN_FRONTEND=noninteractive &&     apt-get update -y && apt-get install -y     wget     curl \tlibopenblas-base \tliblmdb0 \tlibleveldb1d     libboost-regex1.71.0 \tlibgoogle-glog0v5     libopencv4.2 \tlibgflags2.2 \tlibcurl4 \tlibcurlpp0 \tlibhdf5-cpp-103     libboost-atomic1.71.0     libboost-chrono1.71.0     libboost-date-time1.71.0 \tlibboost-filesystem1.71.0 \tlibboost-thread1.71.0 \tlibboost-iostreams1.71.0     libboost-regex1.71.0     libboost-stacktrace1.71.0     libboost-system1.71.0 \tlibarchive13 \tlibtcmalloc-minimal4', 'ln -sf /dev/stdout /var/log/deepdetect.log &&     ln -sf /dev/stderr /var/log/deepdetect.log', 'useradd -ms /bin/bash dd &&     chown -R dd:dd /opt', 'chown -R dd:dd /opt/models', '/opt/deepdetect/get_models.sh', '/opt/deepdetect/check-dede-deps.sh']"
jolibrain/deepdetect,latest,/docker/gpu.Dockerfile,ADD,1,['. /opt/deepdetect']
jolibrain/deepdetect,latest,/docker/gpu.Dockerfile,WORKDIR,3,"['/opt/deepdetect/', '/opt/models', '/opt/deepdetect/build/main']"
jolibrain/deepdetect,latest,/docker/gpu.Dockerfile,ENV,3,"['CCACHE_DIR=/ccache', 'PATH=/usr/lib/ccache:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin', 'TERM=xterm']"
jolibrain/deepdetect,latest,/docker/gpu.Dockerfile,LABEL,2,"['description=""DeepDetect deep learning server & API / ${DEEPDETECT_ARCH} version""', 'maintainer=""emmanuel.benazera@jolibrain.com""']"
jolibrain/deepdetect,latest,/docker/gpu.Dockerfile,USER,3,"['dd', 'root', 'dd']"
jolibrain/deepdetect,latest,/docker/gpu.Dockerfile,COPY,11,"['--from=build /opt/deepdetect/build/main /opt/deepdetect/build/main', '--from=build /opt/deepdetect/build/oatpp-swagger/src/oatpp-swagger/res/ /opt/deepdetect/build/oatpp-swagger/src/oatpp-swagger/res/', '--from=build --chown=dd /opt/deepdetect/datasets/imagenet/corresp_ilsvrc12.txt /opt/models/ggnet/corresp.txt', '--from=build --chown=dd /opt/deepdetect/datasets/imagenet/corresp_ilsvrc12.txt /opt/models/resnet_50/corresp.txt', '--from=build --chown=dd /opt/deepdetect/templates/caffe/googlenet/*prototxt /opt/models/ggnet/', '--from=build --chown=dd /opt/deepdetect/templates/caffe/resnet_50/*prototxt /opt/models/resnet_50/', '--from=build /tmp/lib/* /opt/deepdetect/build/lib/', '--from=build /opt/deepdetect/templates /opt/deepdetect/build/templates', '--from=build /opt/deepdetect/get_models.sh /opt/deepdetect/', '--from=build /opt/deepdetect/docker/check-dede-deps.sh /opt/deepdetect/', '--from=build /opt/deepdetect/docker/start-dede.sh /opt/deepdetect/']"
jolibrain/deepdetect,latest,/docker/gpu.Dockerfile,CMD,1,['/opt/deepdetect/start-dede.sh -host 0.0.0.0']
jolibrain/deepdetect,latest,/docker/gpu.Dockerfile,VOLUME,1,"['[""/data""]']"
jolibrain/deepdetect,latest,/docker/gpu.Dockerfile,EXPOSE,1,['8080']
jolibrain/deepdetect,latest,/ci/devel.Dockerfile,ARG,8,"['DD_UBUNTU_VERSION=20.04', 'DD_CUDA_VERSION=11.1', 'DD_CUDNN_VERSION=8', 'DD_TENSORRT_VERSION=7.2.2-1+cuda11.1', 'DD_UBUNTU_VERSION', 'DD_CUDA_VERSION', 'DD_CUDNN_VERSION', 'DD_TENSORRT_VERSION']"
jolibrain/deepdetect,latest,/ci/devel.Dockerfile,FROM,1,['nvidia/cuda:${DD_CUDA_VERSION}-cudnn${DD_CUDNN_VERSION}-devel-ubuntu${DD_UBUNTU_VERSION}']
jolibrain/deepdetect,latest,/ci/devel.Dockerfile,RUN,13,"['echo UBUNTU_VERSION=${DD_UBUNTU_VERSION} >> /image-info', 'echo CUDA_VERSION=${DD_CUDA_VERSION} >> /image-info', 'echo CUDNN_VERSION=${DD_CUDNN_VERSION} >> /image-info', 'echo TENSORRT_VERSION=${DD_TENSORRT_VERSION} >> /image-info', 'export DEBIAN_FRONTEND=noninteractive &&     apt-get update -y && apt-get install -y python-dev apt-transport-https ca-certificates gnupg software-properties-common wget curl', 'curl https://apt.kitware.com/keys/kitware-archive-latest.asc | apt-key add -', ""apt-add-repository 'deb https://apt.kitware.com/ubuntu/ focal main'"", 'cp /bin/true /usr/bin/pycompile', 'export DEBIAN_FRONTEND=noninteractive &&     apt-get update -y && apt-get install -y     git     ccache     automake     rsync     clang-format-10     build-essential     openjdk-8-jdk     pkg-config     cmake     zip     g++     gcc-7 g++-7     zlib1g-dev     libgoogle-glog-dev     libgflags-dev     libeigen3-dev     libopencv-dev     libprotobuf-dev     protobuf-compiler     libboost-dev     libboost-filesystem-dev     libboost-thread-dev     libboost-system-dev     libboost-stacktrace-dev     libboost-iostreams-dev     libboost-program-options-dev     libboost-test-dev     libboost-regex-dev     libboost-date-time-dev     libboost-chrono-dev     libssl-dev     libgtest-dev     libcurlpp-dev     libcurl4-openssl-dev     libopenblas-dev     libhdf5-dev     libleveldb-dev     libsnappy-dev     liblmdb-dev     libutfcpp-dev     rapidjson-dev     libmapbox-variant-dev     autoconf     libtool-bin     python-numpy     python-yaml     python-typing     swig     curl     unzip     python-setuptools     python-dev     python3-dev     python3-pip     tox     python-six     python-enum34     python3-yaml     unzip     libgoogle-perftools-dev     curl     git     libarchive-dev     bash-completion     schedtool     util-linux     googletest     googletest-tools', 'for url in         https://github.com/bazelbuild/bazel/releases/download/0.24.1/bazel_0.24.1-linux-x86_64.deb         ; do curl -L -s -o /tmp/p.deb $url && dpkg -i /tmp/p.deb && rm -rf /tmp/p.deb; done', 'python3 -m pip install --upgrade pip', 'python3 -m pip install torch torchvision', 'apt clean -y']"
jolibrain/deepdetect,latest,/ci/devel.Dockerfile,ADD,1,['ci/gitconfig /etc/gitconfig']
jolibrain/deepdetect,latest,/ci/devel.Dockerfile,WORKDIR,1,['/root']
jolibrain/deepdetect,latest,/ci/devel-trt.Dockerfile,ARG,8,"['DD_UBUNTU_VERSION=20.04', 'DD_CUDA_VERSION=11.3', 'DD_CUDNN_VERSION=8', 'DD_TENSORRT_VERSION=8.0.1-1+cuda11.3', 'DD_UBUNTU_VERSION', 'DD_CUDA_VERSION', 'DD_CUDNN_VERSION', 'DD_TENSORRT_VERSION']"
jolibrain/deepdetect,latest,/ci/devel-trt.Dockerfile,FROM,1,['nvcr.io/nvidia/tensorrt:21.07-py3 AS build']
jolibrain/deepdetect,latest,/ci/devel-trt.Dockerfile,RUN,19,"['echo UBUNTU_VERSION=${DD_UBUNTU_VERSION} >> /image-info', 'echo CUDA_VERSION=${DD_CUDA_VERSION} >> /image-info', 'echo CUDNN_VERSION=${DD_CUDNN_VERSION} >> /image-info', 'echo TENSORRT_VERSION=${DD_TENSORRT_VERSION} >> /image-info', 'export DEBIAN_FRONTEND=noninteractive &&     apt-get update -y && apt-get install -y python-dev apt-transport-https ca-certificates gnupg software-properties-common wget curl', 'curl https://apt.kitware.com/keys/kitware-archive-latest.asc | apt-key add -', ""apt-add-repository 'deb https://apt.kitware.com/ubuntu/ focal main'"", 'cp /bin/true /usr/bin/pycompile', 'export DEBIAN_FRONTEND=noninteractive &&     apt-get update -y && apt-get install -y     git     ccache     automake     rsync     clang-format-10     build-essential     openjdk-8-jdk     pkg-config     cmake     zip     g++     gcc-7 g++-7     zlib1g-dev     libgoogle-glog-dev     libgflags-dev     libeigen3-dev     libprotobuf-dev     protobuf-compiler     libboost-dev     libboost-filesystem-dev     libboost-thread-dev     libboost-system-dev     libboost-stacktrace-dev     libboost-iostreams-dev     libboost-program-options-dev     libboost-test-dev     libboost-regex-dev     libboost-date-time-dev     libboost-chrono-dev     libssl-dev     libgtest-dev     libcurlpp-dev     libcurl4-openssl-dev     libopenblas-dev     libhdf5-dev     libleveldb-dev     libsnappy-dev     liblmdb-dev     libutfcpp-dev     rapidjson-dev     libmapbox-variant-dev     autoconf     libtool-bin     python-numpy     python-yaml     python-typing     swig     curl     unzip     python-setuptools     python-dev     python3-dev     python3-pip     tox     python-six     python-enum34     python3-yaml     unzip     libgoogle-perftools-dev     curl     git     libarchive-dev     bash-completion     schedtool     util-linux     libgstreamer1.0-dev     libnvparsers8=${DD_TENSORRT_VERSION}     libnvparsers-dev=${DD_TENSORRT_VERSION}     libnvinfer8=${DD_TENSORRT_VERSION}     libnvinfer-dev=${DD_TENSORRT_VERSION}     libnvinfer-plugin8=${DD_TENSORRT_VERSION}     libnvinfer-plugin-dev=${DD_TENSORRT_VERSION}', 'for url in         https://github.com/bazelbuild/bazel/releases/download/0.24.1/bazel_0.24.1-linux-x86_64.deb         ; do curl -L -s -o /tmp/p.deb $url && dpkg -i /tmp/p.deb && rm -rf /tmp/p.deb; done', 'python3 -m pip install --upgrade pip', 'python3 -m pip install torch', 'wget http://www.deepdetect.com/stuff/Video_Codec_SDK_11.1.5.zip && unzip Video_Codec_SDK_11.1.5.zip', 'cd Video_Codec_SDK_11.1.5 && cp Interface/* /usr/local/cuda/targets/x86_64-linux/include/ && cp Lib/linux/stubs/x86_64/* /usr/local/cuda/targets/x86_64-linux/lib/stubs/', 'mkdir opencv && cd opencv && wget -O opencv.zip https://github.com/opencv/opencv/archive/refs/tags/4.5.3.zip && wget -O opencv_contrib.zip https://github.com/opencv/opencv_contrib/archive/refs/tags/4.5.3.zip && unzip opencv.zip && unzip opencv_contrib.zip', 'cd /tmp/opencv/opencv-4.5.3 && mkdir build && cd build && cmake -D CMAKE_BUILD_TYPE=RELEASE -D CMAKE_INSTALL_PREFIX=/usr/local/ -D CMAKE_LIBRARY_PATH=/usr/local/cuda/lib64/stubs -D CMAKE_CXX_FLAGS=""-Wl,--allow-shlib-undefined"" -D WITH_TBB=ON -D ENABLE_FAST_MATH=1 -D CUDA_FAST_MATH=1 -D WITH_CUBLAS=1 -D WITH_CUDA=ON -D BUILD_opencv_cudacodec=ON -D WITH_CUDNN=ON -D OPENCV_DNN_CUDA=OFF -D CUDA_ARCH_BIN=6.1 -D WITH_V4L=ON -D WITH_QT=OFF -D WITH_OPENGL=ON -D WITH_GSTREAMER=ON -D WITH_NVCUVID=ON -D OPENCV_GENERATE_PKGCONFIG=ON -D OPENCV_PC_FILE_NAME=opencv.pc -D OPENCV_ENABLE_NONFREE=ON -D BUILD_opencv_python2=OFF -D BUILD_opencv_python3=OFF -D OPENCV_EXTRA_MODULES_PATH=/tmp/opencv/opencv_contrib-4.5.3/modules -D INSTALL_PYTHON_EXAMPLES=OFF -D INSTALL_C_EXAMPLES=OFF -D BUILD_EXAMPLES=OFF ..', 'make -j20', 'make install', 'apt clean -y']"
jolibrain/deepdetect,latest,/ci/devel-trt.Dockerfile,WORKDIR,3,"['/tmp', '/tmp/opencv/opencv-4.5.3/build', '/root']"
jolibrain/deepdetect,latest,/ci/devel-trt.Dockerfile,ADD,1,['ci/gitconfig /etc/gitconfig']
jolibrain/deepdetect,latest,/ci/devel-jetson-nano.Dockerfile,FROM,1,['nvcr.io/nvidia/deepstream-l4t:5.1-21.02-base']
jolibrain/deepdetect,latest,/ci/devel-jetson-nano.Dockerfile,RUN,11,"['export DEBIAN_FRONTEND=noninteractive &&     apt-get update -y && apt-get install -y     wget     curl     cmake     git     ccache     automake     rsync     build-essential     pkg-config     zip     g++     gcc-7 g++-7     zlib1g-dev     protobuf-compiler     libprotobuf-dev     libgoogle-glog-dev     libgflags-dev     libeigen3-dev     libopencv-dev     libboost-dev     libboost-filesystem-dev     libboost-thread-dev     libboost-system-dev     libboost-stacktrace-dev     libboost-iostreams-dev     libboost-program-options-dev     libboost-test-dev     libboost-regex-dev     libboost-date-time-dev     libboost-chrono-dev     libssl-dev     libgtest-dev     libcurlpp-dev     libcurl4-openssl-dev     libopenblas-dev     libhdf5-dev     libleveldb-dev     libsnappy-dev     liblmdb-dev     libutfcpp-dev     rapidjson-dev     libmapbox-variant-dev     autoconf     libtool-bin     swig     unzip     libgoogle-perftools-dev     libarchive-dev     bash-completion     schedtool     python-numpy     util-linux', 'apt clean -y', 'curl -L https://github.com/Kitware/CMake/releases/download/v3.19.6/cmake-3.19.6-Linux-aarch64.sh -o cmake-install.sh', 'chmod +x ./cmake-install.sh', './cmake-install.sh --prefix=/usr/local --skip-license', 'cmake .', 'make -j8', 'make install', 'addgroup --gid 1001 jenkins', 'useradd -M -s /bin/bash --uid 1001 --gid 1001 jenkins', 'usermod -a -G video jenkins']"
jolibrain/deepdetect,latest,/ci/devel-jetson-nano.Dockerfile,WORKDIR,2,"['/usr/src/gtest', '/root']"
jolibrain/deepdetect,latest,/ci/devel-jetson-nano.Dockerfile,ADD,2,"['ci/deviceQuery /deviceQuery', 'ci/gitconfig /etc/gitconfig']"
interpretml/interpret,latest,/scripts/DOCKERFILE,FROM,1,['python:3.7-slim-buster']
interpretml/interpret,latest,/scripts/DOCKERFILE,RUN,5,"['mkdir -p /usr/staging', 'apt-get update &&     apt-get install -y --no-install-recommends sudo bash curl git build-essential valgrind g++-multilib rsync &&     pip install interpret-core[testing,debug] &&     pip install interpret &&     pip uninstall -y interpret &&     pip uninstall -y interpret-core', 'curl -sL https://deb.nodesource.com/setup_14.x | bash - &&     apt-get update &&     apt-get install -y nodejs &&     npm install -g @interpretml/interpret-inline &&     npm uninstall -g @interpretml/interpret-inline', 'apt-get update &&     apt-get install -y --no-install-recommends         wget         xvfb         xauth         libgtk2.0-0         libxtst6         libxss1         libgconf-2-4         libnss3         libasound2 &&     mkdir -p /opt/orca &&     cd /opt/orca &&     wget https://github.com/plotly/orca/releases/download/v1.2.1/orca-1.2.1-x86_64.AppImage &&     chmod +x orca-1.2.1-x86_64.AppImage &&     ./orca-1.2.1-x86_64.AppImage --appimage-extract &&     rm orca-1.2.1-x86_64.AppImage &&     printf \'#!/bin/bash \\nxvfb-run --auto-servernum --server-args ""-screen 0 640x480x24"" /opt/orca/squashfs-root/app/orca ""$@""\' > /usr/bin/orca &&     chmod +x /usr/bin/orca', 'apt-get clean &&     rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* &&     apt-get autoremove -y']"
interpretml/interpret,latest,/scripts/DOCKERFILE,WORKDIR,1,['/usr/staging']
interpretml/interpret,latest,/scripts/DOCKERFILE,ENTRYPOINT,1,['[]']
interpretml/interpret,latest,/scripts/deploy/Dockerfile,FROM,1,['python:3.7-slim-buster']
interpretml/interpret,latest,/scripts/deploy/Dockerfile,RUN,2,"['apt-get update &&     apt-get install -y --no-install-recommends sudo bash curl git build-essential valgrind g++-multilib rsync &&     pip install interpret', 'apt-get clean &&     rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* &&     apt-get autoremove -y']"
interpretml/interpret,latest,/scripts/deploy/Dockerfile,ENTRYPOINT,1,['[]']
mindsdb/mindsdb,latest,/docker/dockerfile_release.template,FROM,1,['docker.io/pytorch/pytorch:1.10.0-cuda11.3-cudnn8-runtime']
mindsdb/mindsdb,latest,/docker/dockerfile_release.template,EXPOSE,3,"['47334/tcp', '47335/tcp', '47336/tcp']"
mindsdb/mindsdb,latest,/docker/dockerfile_release.template,ENV,1,['PYTHONUNBUFFERED=1']
mindsdb/mindsdb,latest,/docker/dockerfile_release.template,RUN,2,"['python -m pip install --prefer-binary --no-cache-dir --upgrade pip==21.3.1 &&     pip install --prefer-binary --no-cache-dir wheel==0.37.0 &&     pip install --prefer-binary --no-cache-dir mindsdb==@@installer_version', 'echo     \'{\'         \'""config_version"":""1.4"",\'         \'""storage_dir"": ""/root/mdb_storage"",\'         \'""log"": {\'             \'""level"": {\'                 \'""console"": ""ERROR"",\'                 \'""file"": ""WARNING"",\'                 \'""db"": ""WARNING""\'             \'}\'         \'},\'         \'""debug"": false,\'         \'""integrations"": {},\'         \'""api"": {\'             \'""http"": {\'                 \'""host"": ""0.0.0.0"",\'                 \'""port"": ""47334""\'             \'},\'             \'""mysql"": {\'                 \'""host"": ""0.0.0.0"",\'                 \'""password"": """",\'                 \'""port"": ""47335"",\'                 \'""user"": ""mindsdb"",\'                 \'""database"": ""mindsdb"",\'                 \'""ssl"": true\'             \'}\',              \'""mongodb"": {\'                 \'""host"": ""0.0.0.0"",\'                 \'""port"": ""47336"",\'                 \'""database"": ""mindsdb""\'             \'}\'         \'}\'     \'}\' > /root/mindsdb_config.json']"
mindsdb/mindsdb,latest,/docker/dockerfile_release.template,CMD,1,"['bash -c \'if [ -n ""$MDB_CONFIG_CONTENT"" ]; then echo ""$MDB_CONFIG_CONTENT"" > /root/mindsdb_config.json; fi; python -m mindsdb --config=/root/mindsdb_config.json --api=http,mysql,mongodb\'']"
mindsdb/mindsdb,latest,/docker/dockerfile_beta.template,FROM,1,['pytorch/pytorch:latest']
mindsdb/mindsdb,latest,/docker/dockerfile_beta.template,EXPOSE,3,"['47334/tcp', '47335/tcp', '47336/tcp']"
mindsdb/mindsdb,latest,/docker/dockerfile_beta.template,RUN,2,"['apt-get update &&     apt-get upgrade -y &&     apt-get install -y git &&     apt-get install -y curl &&     pip install mindsdb==@@installer_version;', 'echo \'{\'     \'""config_version"":""1.4"",\'     \'""storage_dir"": ""/root/mdb_storage"",\'     \'""log"": {\'         \'""level"": {\'             \'""console"": ""ERROR"",\'             \'""file"": ""WARNING""\'         \'}\'     \'},\'     \'""debug"": false,\'     \'""integrations"": {},\'     \'""api"": {\'         \'""http"": {\'             \'""host"": ""0.0.0.0"",\'             \'""port"": ""47334""\'         \'},\'         \'""mysql"": {\'             \'""host"": ""0.0.0.0"",\'             \'""password"": """",\'             \'""port"": ""47335"",\'             \'""user"": ""mindsdb"",\'             \'""database"": ""mindsdb"",\'             \'""ssl"": true\'         \'}\',          \'""mongodb"": {\'             \'""host"": ""0.0.0.0"",\'             \'""port"": ""47336"",\'             \'""database"": ""mindsdb""\'         \'}\'     \'}\' \'}\' > /root/mindsdb_config.json']"
mindsdb/mindsdb,latest,/docker/dockerfile_beta.template,ENV,1,['PYTHONUNBUFFERED=1']
mindsdb/mindsdb,latest,/docker/dockerfile_beta.template,CMD,1,"['bash -c \'if [ -n ""$MDB_CONFIG_CONTENT"" ]; then echo ""$MDB_CONFIG_CONTENT"" > /root/mindsdb_config.json; fi; pip install mindsdb==$(curl https://public.api.mindsdb.com/installer/@@beta_or_release/docker___started___None) && python -m mindsdb --config=/root/mindsdb_config.json --api=http,mysql,mongodb\'']"
pytorch/ignite,latest,/docker/msdp/Dockerfile.msdp-apex,ARG,3,"['PTH_VERSION', 'ARG_TORCH_CUDA_ARCH_LIST=""3.5 5.2 6.0 6.1 7.0+PTX 8.0""', 'MSDP_VERSION']"
pytorch/ignite,latest,/docker/msdp/Dockerfile.msdp-apex,FROM,2,"['pytorch/pytorch:${PTH_VERSION}-devel AS apex-msdp-builder', 'pytorch/pytorch:${PTH_VERSION}-devel']"
pytorch/ignite,latest,/docker/msdp/Dockerfile.msdp-apex,ENV,1,['TORCH_CUDA_ARCH_LIST=$ARG_TORCH_CUDA_ARCH_LIST']
pytorch/ignite,latest,/docker/msdp/Dockerfile.msdp-apex,RUN,12,"['apt-get update && apt-get install -y --no-install-recommends git &&      rm -rf /var/lib/apt/lists/*', 'echo ""Setup NVIDIA Apex"" &&     tmp_apex_path=""/tmp/apex"" &&     rm -rf $tmp_apex_path &&     git clone https://github.com/NVIDIA/apex $tmp_apex_path &&     cd $tmp_apex_path &&     pip wheel --no-cache-dir --global-option=""--cpp_ext"" --global-option=""--cuda_ext"" .', 'python -m pip install --upgrade pip', 'conda install cmake llvmdev=9.0.1 -c conda-forge', 'git clone https://github.com/microsoft/DeepSpeed.git -b ${MSDP_VERSION} /tmp/DeepSpeed && cd /tmp/DeepSpeed &&     ./install.sh --allow_sudo', 'pip install --no-cache-dir /tmp/apex/apex-*.whl &&     rm -fr /tmp/apex', 'conda install cmake llvmdev=9.0.1 -c conda-forge', 'cd /msdp && export CUDA_HOME=/usr/local/cuda &&     pip install --no-cache-dir deepspeed-*.whl &&     rm -fr /msdp', 'apt-get update &&     ln -fs /usr/share/zoneinfo/Europe/Paris /etc/localtime &&     apt-get -y install --no-install-recommends tzdata git &&     dpkg-reconfigure --frontend noninteractive tzdata &&     apt-get autoremove -y &&     apt-get clean -y &&     rm -rf /var/lib/apt/lists/*', 'pip install --upgrade --no-cache-dir pytorch-ignite                                          tensorboard                                          tqdm                                          fire', 'pip uninstall -y pillow &&     CC=""cc -mavx2"" pip install --upgrade --no-cache-dir --force-reinstall pillow-simd', 'mkdir -p pytorch-ignite-examples &&     cd pytorch-ignite-examples &&     git init &&     git config core.sparsecheckout true &&     echo examples >> .git/info/sparse-checkout &&     git remote add -f origin https://github.com/pytorch/ignite.git &&     git pull origin master &&     rm -rf .git']"
pytorch/ignite,latest,/docker/msdp/Dockerfile.msdp-apex,COPY,2,"['--from=apex-msdp-builder /tmp/apex/apex-*.whl /tmp/apex/', '--from=apex-msdp-builder /tmp/DeepSpeed/dist/deepspeed-*.whl /msdp/']"
pytorch/ignite,latest,/docker/msdp/Dockerfile.msdp-apex-nlp,FROM,1,['pytorchignite/msdp-apex:latest']
pytorch/ignite,latest,/docker/msdp/Dockerfile.msdp-apex-nlp,RUN,1,['pip install --upgrade --no-cache-dir transformers                                          spacy                                          nltk']
pytorch/ignite,latest,/docker/msdp/Dockerfile.msdp-apex-vision,FROM,1,['pytorchignite/msdp-apex:latest']
pytorch/ignite,latest,/docker/msdp/Dockerfile.msdp-apex-vision,RUN,2,"['apt-get update &&     apt-get -y install --no-install-recommends libglib2.0                                                libsm6                                                libxext6                                                libxrender-dev                                                libgl1-mesa-glx &&     rm -rf /var/lib/apt/lists/*', 'pip install --upgrade --no-cache-dir albumentations                                          image-dataset-viz                                          numpy                                          opencv-python-headless                                          py_config_runner                                          clearml']"
pytorch/ignite,latest,/docker/main/Dockerfile.apex-nlp,FROM,1,['pytorchignite/apex:latest']
pytorch/ignite,latest,/docker/main/Dockerfile.apex-nlp,RUN,1,['pip install --upgrade --no-cache-dir transformers                                          spacy                                          nltk']
pytorch/ignite,latest,/docker/main/Dockerfile.apex,ARG,2,"['PTH_VERSION', 'ARG_TORCH_CUDA_ARCH_LIST=""3.5 5.2 6.0 6.1 7.0+PTX 8.0""']"
pytorch/ignite,latest,/docker/main/Dockerfile.apex,FROM,2,"['pytorch/pytorch:${PTH_VERSION}-devel AS apex-builder', 'pytorch/pytorch:${PTH_VERSION}-runtime']"
pytorch/ignite,latest,/docker/main/Dockerfile.apex,ENV,1,['TORCH_CUDA_ARCH_LIST=$ARG_TORCH_CUDA_ARCH_LIST']
pytorch/ignite,latest,/docker/main/Dockerfile.apex,RUN,7,"['apt-get update && apt-get install -y --no-install-recommends git &&      rm -rf /var/lib/apt/lists/*', 'echo ""Setup NVIDIA Apex"" &&     tmp_apex_path=""/tmp/apex"" &&     rm -rf $tmp_apex_path &&     git clone https://github.com/NVIDIA/apex $tmp_apex_path &&     cd $tmp_apex_path &&     pip wheel --no-cache-dir --global-option=""--cpp_ext"" --global-option=""--cuda_ext"" .', 'pip install --no-cache-dir /tmp/apex/apex-*.whl &&     rm -fr /tmp/apex', 'apt-get update &&     ln -fs /usr/share/zoneinfo/Europe/Paris /etc/localtime &&     apt-get -y install --no-install-recommends tzdata git &&     dpkg-reconfigure --frontend noninteractive tzdata &&     apt-get autoremove -y &&     apt-get clean -y &&     rm -rf /var/lib/apt/lists/*', 'pip install --upgrade --no-cache-dir pytorch-ignite                                          tensorboard                                          tqdm                                          fire', 'apt-get update && apt-get -y install --no-install-recommends g++ &&     pip uninstall -y pillow &&     CC=""cc -mavx2"" pip install --upgrade --no-cache-dir --force-reinstall pillow-simd &&     apt-get remove -y g++ &&     apt-get autoremove -y &&     rm -rf /var/lib/apt/lists/*', 'mkdir -p pytorch-ignite-examples &&     cd pytorch-ignite-examples &&     git init &&     git config core.sparsecheckout true &&     echo examples >> .git/info/sparse-checkout &&     git remote add -f origin https://github.com/pytorch/ignite.git &&     git pull origin master &&     rm -rf .git']"
pytorch/ignite,latest,/docker/main/Dockerfile.apex,COPY,1,['--from=apex-builder /tmp/apex/apex-*.whl /tmp/apex/']
pytorch/ignite,latest,/docker/main/Dockerfile.vision,FROM,1,['pytorchignite/base:latest']
pytorch/ignite,latest,/docker/main/Dockerfile.vision,RUN,2,"['apt-get update &&     apt-get -y install --no-install-recommends libglib2.0                                                libsm6                                                libxext6                                                libxrender-dev                                                libgl1-mesa-glx &&     rm -rf /var/lib/apt/lists/*', 'pip install --upgrade --no-cache-dir albumentations                                          image-dataset-viz                                          numpy                                          opencv-python-headless                                          py_config_runner                                          clearml']"
pytorch/ignite,latest,/docker/main/Dockerfile.nlp,FROM,1,['pytorchignite/base:latest']
pytorch/ignite,latest,/docker/main/Dockerfile.nlp,RUN,1,['pip install --upgrade --no-cache-dir transformers                                          spacy                                          nltk']
pytorch/ignite,latest,/docker/main/Dockerfile.apex-vision,FROM,1,['pytorchignite/apex:latest']
pytorch/ignite,latest,/docker/main/Dockerfile.apex-vision,RUN,2,"['apt-get update &&     apt-get -y install --no-install-recommends libglib2.0                                                libsm6                                                libxext6                                                libxrender-dev                                                libgl1-mesa-glx &&     rm -rf /var/lib/apt/lists/*', 'pip install --upgrade --no-cache-dir albumentations                                          image-dataset-viz                                          numpy                                          opencv-python-headless                                          py_config_runner                                          clearml']"
pytorch/ignite,latest,/docker/main/Dockerfile.base,ARG,1,['PTH_VERSION']
pytorch/ignite,latest,/docker/main/Dockerfile.base,FROM,1,['pytorch/pytorch:${PTH_VERSION}-runtime']
pytorch/ignite,latest,/docker/main/Dockerfile.base,RUN,4,"['apt-get update &&     ln -fs /usr/share/zoneinfo/Europe/Paris /etc/localtime &&     apt-get -y install --no-install-recommends tzdata git &&     dpkg-reconfigure --frontend noninteractive tzdata &&     apt-get autoremove -y &&     apt-get clean -y &&     rm -rf /var/lib/apt/lists/*', 'pip install --upgrade --no-cache-dir pytorch-ignite                                          tensorboard                                          tqdm                                          fire', 'apt-get update && apt-get -y install --no-install-recommends g++ &&     pip uninstall -y pillow &&     CC=""cc -mavx2"" pip install --upgrade --no-cache-dir --force-reinstall pillow-simd &&     apt-get remove -y g++ &&     apt-get autoremove -y &&     rm -rf /var/lib/apt/lists/*', 'mkdir -p pytorch-ignite-examples &&     cd pytorch-ignite-examples &&     git init &&     git config core.sparsecheckout true &&     echo examples >> .git/info/sparse-checkout &&     git remote add -f origin https://github.com/pytorch/ignite.git &&     git pull origin master &&     rm -rf .git']"
pytorch/ignite,latest,/docker/hvd/Dockerfile.hvd-base,ARG,2,"['PTH_VERSION', 'HVD_VERSION']"
pytorch/ignite,latest,/docker/hvd/Dockerfile.hvd-base,FROM,2,"['pytorch/pytorch:${PTH_VERSION}-devel as builder', 'pytorch/pytorch:${PTH_VERSION}-runtime']"
pytorch/ignite,latest,/docker/hvd/Dockerfile.hvd-base,RUN,7,"['apt-get update && apt-get install -y git &&         git clone --recursive --depth 1 --branch ${HVD_VERSION} https://github.com/horovod/horovod.git /horovod &&         conda install -y cmake nccl=2.11 -c conda-forge &&         cd /horovod &&         HOROVOD_GPU_OPERATIONS=NCCL HOROVOD_NCCL_LINK=SHARED HOROVOD_WITHOUT_MPI=1 HOROVOD_WITH_PYTORCH=1 pip wheel --no-cache-dir . &&         rm -rf /var/lib/apt/lists/*', 'apt-get update &&     ln -fs /usr/share/zoneinfo/Europe/Paris /etc/localtime &&     apt-get -y install --no-install-recommends tzdata git &&     dpkg-reconfigure --frontend noninteractive tzdata &&     apt-get autoremove -y &&     apt-get clean -y &&     rm -rf /var/lib/apt/lists/*', 'pip install --upgrade --no-cache-dir pytorch-ignite                                          tensorboard                                          tqdm                                          fire', 'apt-get update && apt-get -y install --no-install-recommends g++ &&     pip uninstall -y pillow &&     CC=""cc -mavx2"" pip install --upgrade --no-cache-dir --force-reinstall pillow-simd &&     apt-get remove -y g++ &&     apt-get autoremove -y &&     rm -rf /var/lib/apt/lists/*', 'mkdir -p pytorch-ignite-examples &&     cd pytorch-ignite-examples &&     git init &&     git config core.sparsecheckout true &&     echo examples >> .git/info/sparse-checkout &&     git remote add -f origin https://github.com/pytorch/ignite.git &&     git pull origin master &&     rm -rf .git', 'conda install -y nccl=2.11 -c conda-forge', 'cd /horovod &&     pip install --no-cache-dir horovod-*.whl &&     rm -fr /horovod']"
pytorch/ignite,latest,/docker/hvd/Dockerfile.hvd-base,ENV,1,['LD_LIBRARY_PATH=/opt/conda/lib:$LD_LIBRARY_PATH']
pytorch/ignite,latest,/docker/hvd/Dockerfile.hvd-base,COPY,1,['--from=builder /horovod/horovod-*.whl /horovod/']
pytorch/ignite,latest,/docker/hvd/Dockerfile.hvd-vision,FROM,1,['pytorchignite/hvd-base:latest']
pytorch/ignite,latest,/docker/hvd/Dockerfile.hvd-vision,RUN,2,"['apt-get update &&     apt-get -y install --no-install-recommends libglib2.0                                                libsm6                                                libxext6                                                libxrender-dev                                                libgl1-mesa-glx &&     rm -rf /var/lib/apt/lists/*', 'pip install --upgrade --no-cache-dir albumentations                                          image-dataset-viz                                          numpy                                          opencv-python-headless                                          py_config_runner                                          clearml']"
pytorch/ignite,latest,/docker/hvd/Dockerfile.hvd-apex,ARG,3,"['PTH_VERSION', 'ARG_TORCH_CUDA_ARCH_LIST=""3.5 5.2 6.0 6.1 7.0+PTX 8.0""', 'HVD_VERSION']"
pytorch/ignite,latest,/docker/hvd/Dockerfile.hvd-apex,FROM,2,"['pytorch/pytorch:${PTH_VERSION}-devel AS apex-hvd-builder', 'pytorch/pytorch:${PTH_VERSION}-runtime']"
pytorch/ignite,latest,/docker/hvd/Dockerfile.hvd-apex,ENV,2,"['TORCH_CUDA_ARCH_LIST=$ARG_TORCH_CUDA_ARCH_LIST', 'LD_LIBRARY_PATH=/opt/conda/lib:$LD_LIBRARY_PATH']"
pytorch/ignite,latest,/docker/hvd/Dockerfile.hvd-apex,RUN,10,"['apt-get update && apt-get install -y --no-install-recommends git &&      rm -rf /var/lib/apt/lists/*', 'echo ""Setup NVIDIA Apex"" &&     tmp_apex_path=""/tmp/apex"" &&     rm -rf $tmp_apex_path &&     git clone https://github.com/NVIDIA/apex $tmp_apex_path &&     cd $tmp_apex_path &&     pip wheel --no-cache-dir --global-option=""--cpp_ext"" --global-option=""--cuda_ext"" .', 'apt-get update && apt-get install -y git &&         git clone --recursive --depth 1 --branch ${HVD_VERSION} https://github.com/horovod/horovod.git /horovod &&         conda install -y cmake nccl=2.11 -c conda-forge &&         cd /horovod &&         HOROVOD_GPU_OPERATIONS=NCCL HOROVOD_NCCL_LINK=SHARED HOROVOD_WITHOUT_MPI=1 HOROVOD_WITH_PYTORCH=1 pip wheel --no-cache-dir . &&         rm -rf /var/lib/apt/lists/*', 'pip install --no-cache-dir /tmp/apex/apex-*.whl &&     rm -fr /tmp/apex', 'apt-get update &&     ln -fs /usr/share/zoneinfo/Europe/Paris /etc/localtime &&     apt-get -y install --no-install-recommends tzdata git &&     dpkg-reconfigure --frontend noninteractive tzdata &&     apt-get autoremove -y &&     apt-get clean -y &&     rm -rf /var/lib/apt/lists/*', 'pip install --upgrade --no-cache-dir pytorch-ignite                                          tensorboard                                          tqdm                                          fire', 'apt-get update && apt-get -y install --no-install-recommends g++ &&     pip uninstall -y pillow &&     CC=""cc -mavx2"" pip install --upgrade --no-cache-dir --force-reinstall pillow-simd &&     apt-get remove -y g++ &&     apt-get autoremove -y &&     rm -rf /var/lib/apt/lists/*', 'mkdir -p pytorch-ignite-examples &&     cd pytorch-ignite-examples &&     git init &&     git config core.sparsecheckout true &&     echo examples >> .git/info/sparse-checkout &&     git remote add -f origin https://github.com/pytorch/ignite.git &&     git pull origin master &&     rm -rf .git', 'conda install -y nccl=2.11 -c conda-forge', 'cd /horovod &&     pip install --no-cache-dir horovod-*.whl &&     rm -fr /horovod']"
pytorch/ignite,latest,/docker/hvd/Dockerfile.hvd-apex,COPY,2,"['--from=apex-hvd-builder /tmp/apex/apex-*.whl /tmp/apex/', '--from=apex-hvd-builder /horovod/horovod-*.whl /horovod/']"
pytorch/ignite,latest,/docker/hvd/Dockerfile.hvd-apex-nlp,FROM,1,['pytorchignite/hvd-apex:latest']
pytorch/ignite,latest,/docker/hvd/Dockerfile.hvd-apex-nlp,RUN,1,['pip install --upgrade --no-cache-dir transformers                                          spacy                                          nltk']
pytorch/ignite,latest,/docker/hvd/Dockerfile.hvd-apex-vision,FROM,1,['pytorchignite/hvd-apex:latest']
pytorch/ignite,latest,/docker/hvd/Dockerfile.hvd-apex-vision,RUN,2,"['apt-get update &&     apt-get -y install --no-install-recommends libglib2.0                                                libsm6                                                libxext6                                                libxrender-dev                                                libgl1-mesa-glx &&     rm -rf /var/lib/apt/lists/*', 'pip install --upgrade --no-cache-dir albumentations                                          image-dataset-viz                                          numpy                                          opencv-python-headless                                          py_config_runner                                          clearml']"
pytorch/ignite,latest,/docker/hvd/Dockerfile.hvd-nlp,FROM,1,['pytorchignite/hvd-base:latest']
pytorch/ignite,latest,/docker/hvd/Dockerfile.hvd-nlp,RUN,1,['pip install --upgrade --no-cache-dir transformers                                          spacy                                          nltk']
tensorflow/tfx,latest,/tfx/tools/docker/Dockerfile,ARG,5,"['BASE_IMAGE', 'BEAM_VERSION', 'TFX_DEPENDENCY_SELECTOR', 'ADDITIONAL_PACKAGES', 'TFX_DEPENDENCY_SELECTOR']"
tensorflow/tfx,latest,/tfx/tools/docker/Dockerfile,FROM,3,"['gcr.io/tfx-oss-public/tfx_base:py37-20200729 as wheel-builder', 'apache/beam_python3.7_sdk:${BEAM_VERSION} as beam-worker', '${BASE_IMAGE} as install']"
tensorflow/tfx,latest,/tfx/tools/docker/Dockerfile,ENV,4,"['TFX_DIR=/tfx', 'TFX_DEPENDENCY_SELECTOR=${TFX_DEPENDENCY_SELECTOR}', 'TFX_DEPENDENCY_SELECTOR=${TFX_DEPENDENCY_SELECTOR}', 'pip=/opt/conda/bin/pip']"
tensorflow/tfx,latest,/tfx/tools/docker/Dockerfile,ADD,1,['. ${TFX_DIR}/src']
tensorflow/tfx,latest,/tfx/tools/docker/Dockerfile,WORKDIR,2,"['${TFX_DIR}', '/tfx/src']"
tensorflow/tfx,latest,/tfx/tools/docker/Dockerfile,RUN,4,"['python -m pip install --upgrade pip', 'cd ${TFX_DIR}/src;     if [ -e ""package_build"" ]; then       bash -x package_build/initialize.sh;       CFLAGS=$(/usr/bin/python-config --cflags)         python package_build/ml-pipelines-sdk/setup.py bdist_wheel;       CFLAGS=$(/usr/bin/python-config --cflags)         python package_build/tfx/setup.py bdist_wheel;       MLSDK_WHEEL=$(find dist -name ""ml_pipelines_sdk-*.whl"");       TFX_WHEEL=$(find dist -name ""tfx-*.whl"");     else       CFLAGS=$(/usr/bin/python-config --cflags)         python setup.py bdist_wheel;       MLSDK_WHEEL=;       TFX_WHEEL=$(find dist -name ""tfx-*.whl"");     fi;     if [ ""${TFX_DEPENDENCY_SELECTOR}"" = ""NIGHTLY"" ]; then       CFLAGS=$(/usr/bin/python-config --cflags)         python -m pip install           --extra-index-url https://pypi-nightly.tensorflow.org/simple           ${MLSDK_WHEEL} ${TFX_WHEEL}[docker-image] ;     else       CFLAGS=$(/usr/bin/python-config --cflags)         python -m pip install ${MLSDK_WHEEL} ${TFX_WHEEL}[docker-image] ;     fi;', 'python -m pip install --upgrade pip', 'MLSDK_WHEEL=$(find dist -name ""ml_pipelines_sdk-*.whl"");     TFX_WHEEL=$(find dist -name ""tfx-*.whl"");     if [ ""${TFX_DEPENDENCY_SELECTOR}"" = ""NIGHTLY"" ]; then       python -m pip install         --extra-index-url https://pypi-nightly.tensorflow.org/simple         ${MLSDK_WHEEL} ${TFX_WHEEL}[docker-image] ${ADDITIONAL_PACKAGES} ;     else       python -m pip install ${MLSDK_WHEEL} ${TFX_WHEEL}[docker-image]       ${ADDITIONAL_PACKAGES} ;     fi &&     echo ""Installed python packages:\\n"" && python -m pip list']"
tensorflow/tfx,latest,/tfx/tools/docker/Dockerfile,COPY,2,"['--from=beam-worker /opt/apache/beam /opt/apache/beam', '--from=wheel-builder /tfx/src/dist/*.whl /tfx/src/dist/']"
tensorflow/tfx,latest,/tfx/tools/docker/Dockerfile,ENTRYPOINT,1,"['[""/opt/apache/beam/boot""]']"
tensorflow/tfx,latest,/tfx/tools/docker/Dockerfile,LABEL,1,"['maintainer=""tensorflow-extended-dev@googlegroups.com""']"
tensorflow/tfx,latest,/tfx/tools/docker/base/Dockerfile,FROM,1,['gcr.io/cloud-marketplace-containers/google/bazel:3.0.0']
tensorflow/tfx,latest,/tfx/tools/docker/base/Dockerfile,LABEL,1,"['maintainer=""tensorflow-extended-dev@googlegroups.com""']"
tensorflow/tfx,latest,/tfx/tools/docker/base/Dockerfile,ARG,1,"['APT_COMMAND=""apt-get -o Acquire::Retries=3 -y""']"
tensorflow/tfx,latest,/tfx/tools/docker/base/Dockerfile,RUN,2,"['${APT_COMMAND} update &&   ${APT_COMMAND} install --no-install-recommends -q software-properties-common &&   add-apt-repository ppa:deadsnakes/ppa &&   add-apt-repository ppa:maarten-fonville/protobuf &&   ${APT_COMMAND} update &&   ${APT_COMMAND} install --no-install-recommends -q   build-essential   ca-certificates   libsnappy-dev   protobuf-compiler   libprotobuf-dev   python3.7-dev   wget   unzip   git &&   add-apt-repository -r ppa:deadsnakes/ppa &&   add-apt-repository -r ppa:maarten-fonville/protobuf &&   ${APT_COMMAND} autoremove --purge python2.7-dev python2.7 libpython2.7 python2.7-minimal   python3.5-dev python3.5 libpython3.5 python3.5-minimal &&   update-alternatives --install /usr/bin/python python /usr/bin/python3.7 1 &&   update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.7 1 &&   update-alternatives --install /usr/bin/python-config python-config /usr/bin/python3.7-config 1 &&   ${APT_COMMAND} autoclean &&   ${APT_COMMAND} autoremove --purge', 'wget https://bootstrap.pypa.io/get-pip.py && python3 get-pip.py &&   pip install --upgrade --pre pip']"
tensorflow/tfx,latest,/tfx/tools/cli/container_builder/dockerfile_test.py,"""""""TESTS",1,"['for tfx.tools.cli.builder.dockerfile.""""""']"
tensorflow/tfx,latest,/tfx/tools/cli/container_builder/dockerfile_test.py,IMPORT,4,"['contextlib', 'filecmp', 'os', 'tensorflow as tf']"
tensorflow/tfx,latest,/tfx/tools/cli/container_builder/dockerfile_test.py,FROM,4,"['tfx import version', 'tfx.tools.cli.container_builder import dockerfile', 'tfx.tools.cli.container_builder import labels', 'tfx.utils import test_case_utils']"
tensorflow/tfx,latest,/tfx/tools/cli/container_builder/dockerfile_test.py,_FAKE_VERSION,1,"[""= '0.23.0'""]"
tensorflow/tfx,latest,/tfx/tools/cli/container_builder/dockerfile_test.py,_TEST_DOCKERFILE_CONTENT,1,"[""= '''FROM tensorflow/tfx:%s""]"
tensorflow/tfx,latest,/tfx/tools/cli/container_builder/dockerfile_test.py,WORKDIR,1,['/pipeline']
tensorflow/tfx,latest,/tfx/tools/cli/container_builder/dockerfile_test.py,COPY,1,['./ ./']
tensorflow/tfx,latest,/tfx/tools/cli/container_builder/dockerfile_test.py,ENV,1,"['PYTHONPATH=""/pipeline:${PYTHONPATH}""\'\'\' % _FAKE_VERSION']"
tensorflow/tfx,latest,/tfx/tools/cli/container_builder/dockerfile_test.py,CLASS,1,['DockerfileTest(test_case_utils.TfxTest):']
tensorflow/tfx,latest,/tfx/tools/cli/container_builder/dockerfile_test.py,DEF,5,"['setUp(self):', '_patchVersion(self, ver):', 'testGenerate(self):', 'testGenerateWithBaseOverride(self):', 'testDevVersionRequirement(self):']"
tensorflow/tfx,latest,/tfx/tools/cli/container_builder/dockerfile_test.py,SUPER().SETUP(),1,['']
tensorflow/tfx,latest,/tfx/tools/cli/container_builder/dockerfile_test.py,SELF._TESTDATA_DIR,1,['= os.path.join(']
tensorflow/tfx,latest,/tfx/tools/cli/container_builder/dockerfile_test.py,"OS.PATH.ABSPATH(OS.PATH.DIRNAME(__FILE__)),",1,"[""'testdata')""]"
tensorflow/tfx,latest,/tfx/tools/cli/container_builder/dockerfile_test.py,SELF.ENTER_CONTEXT(TEST_CASE_UTILS.CHANGE_WORKING_DIR(SELF.TMP_DIR)),1,['']
tensorflow/tfx,latest,/tfx/tools/cli/container_builder/dockerfile_test.py,SELF._TEST_DOCKERFILE,1,"[""= os.path.abspath('.test_dockerfile')""]"
tensorflow/tfx,latest,/tfx/tools/cli/container_builder/dockerfile_test.py,WITH,4,"[""open(self._test_dockerfile, 'w') as f:"", 'self._patchVersion(_FAKE_VERSION):', ""self._patchVersion('0.23.0.dev'):"", 'self.assertRaisesRegex(ValueError,']"
tensorflow/tfx,latest,/tfx/tools/cli/container_builder/dockerfile_test.py,F.WRITELINES(_TEST_DOCKERFILE_CONTENT),1,['']
tensorflow/tfx,latest,/tfx/tools/cli/container_builder/dockerfile_test.py,@CONTEXTLIB.CONTEXTMANAGER,1,['']
tensorflow/tfx,latest,/tfx/tools/cli/container_builder/dockerfile_test.py,OLD_VERSION,1,['= version.__version__']
tensorflow/tfx,latest,/tfx/tools/cli/container_builder/dockerfile_test.py,OLD_BASE_IMAGE,1,['= labels.BASE_IMAGE']
tensorflow/tfx,latest,/tfx/tools/cli/container_builder/dockerfile_test.py,VERSION.__VERSION__,2,"['= ver', '= old_version']"
tensorflow/tfx,latest,/tfx/tools/cli/container_builder/dockerfile_test.py,LABELS.BASE_IMAGE,2,"[""= 'tensorflow/tfx:%s' % ver"", '= old_base_image']"
tensorflow/tfx,latest,/tfx/tools/cli/container_builder/dockerfile_test.py,YIELD,1,['']
tensorflow/tfx,latest,/tfx/tools/cli/container_builder/dockerfile_test.py,GENERATED_DOCKERFILE_PATH,2,"['= labels.DOCKERFILE_NAME', '= labels.DOCKERFILE_NAME']"
tensorflow/tfx,latest,/tfx/tools/cli/container_builder/dockerfile_test.py,DOCKERFILE.DOCKERFILE(FILENAME=GENERATED_DOCKERFILE_PATH),1,['']
tensorflow/tfx,latest,/tfx/tools/cli/container_builder/dockerfile_test.py,SELF.ASSERTTRUE(,2,"['', '']"
tensorflow/tfx,latest,/tfx/tools/cli/container_builder/dockerfile_test.py,"FILECMP.CMP(SELF._TEST_DOCKERFILE,",1,['generated_dockerfile_path))']
tensorflow/tfx,latest,/tfx/tools/cli/container_builder/dockerfile_test.py,DOCKERFILE.DOCKERFILE(,1,['']
tensorflow/tfx,latest,/tfx/tools/cli/container_builder/dockerfile_test.py,"FILENAME=GENERATED_DOCKERFILE_PATH,",1,['']
tensorflow/tfx,latest,/tfx/tools/cli/container_builder/dockerfile_test.py,BASE_IMAGE='MY_CUSTOMIZED_IMAGE:LATEST'),1,['']
tensorflow/tfx,latest,/tfx/tools/cli/container_builder/dockerfile_test.py,FILECMP.CMP(,1,['']
tensorflow/tfx,latest,/tfx/tools/cli/container_builder/dockerfile_test.py,"OS.PATH.JOIN(SELF._TESTDATA_DIR,",1,"[""'test_dockerfile_with_base'),""]"
tensorflow/tfx,latest,/tfx/tools/cli/container_builder/dockerfile_test.py,GENERATED_DOCKERFILE_PATH)),1,['']
tensorflow/tfx,latest,/tfx/tools/cli/container_builder/dockerfile_test.py,'CANNOT,1,"[""find a base image automatically'):""]"
tensorflow/tfx,latest,/tfx/tools/cli/container_builder/dockerfile_test.py,DOCKERFILE.DOCKERFILE(FILENAME=LABELS.DOCKERFILE_NAME),1,['']
tensorflow/tfx,latest,/tfx/tools/cli/container_builder/dockerfile_test.py,IF,1,"[""__name__ == '__main__':""]"
tensorflow/tfx,latest,/tfx/tools/cli/container_builder/dockerfile_test.py,TF.TEST.MAIN(),1,['']
tensorflow/tfx,latest,/tfx/tools/cli/container_builder/dockerfile.py,"""""""DOCKERFILE",2,"['helper.""""""', 'class.']"
tensorflow/tfx,latest,/tfx/tools/cli/container_builder/dockerfile.py,IMPORT,2,"['os', 'click']"
tensorflow/tfx,latest,/tfx/tools/cli/container_builder/dockerfile.py,FROM,3,"['typing import Optional', 'tfx import version', 'tfx.tools.cli.container_builder import labels']"
tensorflow/tfx,latest,/tfx/tools/cli/container_builder/dockerfile.py,_DEFAULT_DOCKERFILE_CONTENT_WITH_SETUP_PY,1,"[""= '''FROM %s""]"
tensorflow/tfx,latest,/tfx/tools/cli/container_builder/dockerfile.py,WORKDIR,2,"['/pipeline', '/pipeline']"
tensorflow/tfx,latest,/tfx/tools/cli/container_builder/dockerfile.py,COPY,2,"['./ ./', './ ./']"
tensorflow/tfx,latest,/tfx/tools/cli/container_builder/dockerfile.py,RUN,1,"[""python3 %s install'''""]"
tensorflow/tfx,latest,/tfx/tools/cli/container_builder/dockerfile.py,_DEFAULT_DOCKERFILE_CONTENT_WITHOUT_SETUP_PY,1,"[""= '''FROM %s""]"
tensorflow/tfx,latest,/tfx/tools/cli/container_builder/dockerfile.py,ENV,1,"['PYTHONPATH=""/pipeline:${PYTHONPATH}""\'\'\'']"
tensorflow/tfx,latest,/tfx/tools/cli/container_builder/dockerfile.py,CLASS,1,['Dockerfile:']
tensorflow/tfx,latest,/tfx/tools/cli/container_builder/dockerfile.py,DOCKERFILE,1,['generates a default dockerfile if it does not exist.']
tensorflow/tfx,latest,/tfx/tools/cli/container_builder/dockerfile.py,ATTRIBUTES:,1,['']
tensorflow/tfx,latest,/tfx/tools/cli/container_builder/dockerfile.py,FILENAME:,2,"['dockerfile filename.', 'str,']"
tensorflow/tfx,latest,/tfx/tools/cli/container_builder/dockerfile.py,SETUP_PY_FILENAME:,2,"['setup.py filename that defines the pipeline PIP package.', 'Optional[str] = None,']"
tensorflow/tfx,latest,/tfx/tools/cli/container_builder/dockerfile.py,"""""""",1,['']
tensorflow/tfx,latest,/tfx/tools/cli/container_builder/dockerfile.py,DEF,2,"['__init__(self,', '_generate_default(self, contents):']"
tensorflow/tfx,latest,/tfx/tools/cli/container_builder/dockerfile.py,BASE_IMAGE:,1,['Optional[str] = None):']
tensorflow/tfx,latest,/tfx/tools/cli/container_builder/dockerfile.py,SELF.FILENAME,1,['= filename']
tensorflow/tfx,latest,/tfx/tools/cli/container_builder/dockerfile.py,IF,3,"['os.path.exists(self.filename):', ""base_image is None and version.__version__.endswith('.dev'):"", 'os.path.exists(setup_py_filename):']"
tensorflow/tfx,latest,/tfx/tools/cli/container_builder/dockerfile.py,RETURN,2,"['', '']"
tensorflow/tfx,latest,/tfx/tools/cli/container_builder/dockerfile.py,RAISE,1,"[""ValueError('Cannot find a base image automatically in development /'""]"
tensorflow/tfx,latest,/tfx/tools/cli/container_builder/dockerfile.py,',2,"[""nightly version. Please specify a base image using'"", ""--build-base-image flag.')""]"
tensorflow/tfx,latest,/tfx/tools/cli/container_builder/dockerfile.py,BASE_IMAGE,1,['= base_image or labels.BASE_IMAGE']
tensorflow/tfx,latest,/tfx/tools/cli/container_builder/dockerfile.py,SETUP_PY_FILENAME,1,['= setup_py_filename or labels.SETUP_PY_FILENAME']
tensorflow/tfx,latest,/tfx/tools/cli/container_builder/dockerfile.py,CLICK.ECHO('GENERATING,1,"[""Dockerfile with python package installation '""]"
tensorflow/tfx,latest,/tfx/tools/cli/container_builder/dockerfile.py,'BASED,1,"[""on %s.' % setup_py_filename)""]"
tensorflow/tfx,latest,/tfx/tools/cli/container_builder/dockerfile.py,SELF._GENERATE_DEFAULT(_DEFAULT_DOCKERFILE_CONTENT_WITH_SETUP_PY,1,['%']
tensorflow/tfx,latest,/tfx/tools/cli/container_builder/dockerfile.py,"(BASE_IMAGE,",1,['setup_py_filename))']
tensorflow/tfx,latest,/tfx/tools/cli/container_builder/dockerfile.py,CLICK.ECHO('NO,1,"[""local %s, copying the directory and '""]"
tensorflow/tfx,latest,/tfx/tools/cli/container_builder/dockerfile.py,'CONFIGURING,1,"[""the PYTHONPATH.' % setup_py_filename)""]"
tensorflow/tfx,latest,/tfx/tools/cli/container_builder/dockerfile.py,SELF._GENERATE_DEFAULT(_DEFAULT_DOCKERFILE_CONTENT_WITHOUT_SETUP_PY,1,['%']
tensorflow/tfx,latest,/tfx/tools/cli/container_builder/dockerfile.py,BASE_IMAGE),1,['']
tensorflow/tfx,latest,/tfx/tools/cli/container_builder/dockerfile.py,"""""""GENERATE",1,"['a dockerfile with the contents.""""""']"
tensorflow/tfx,latest,/tfx/tools/cli/container_builder/dockerfile.py,WITH,1,"[""open(self.filename, 'w+') as f:""]"
tensorflow/tfx,latest,/tfx/tools/cli/container_builder/dockerfile.py,F.WRITE(CONTENTS),1,['']
tensorflow/tfx,latest,/tfx/tools/cli/container_builder/testdata/test_dockerfile_with_base,FROM,1,['my_customized_image:latest']
tensorflow/tfx,latest,/tfx/tools/cli/container_builder/testdata/test_dockerfile_with_base,WORKDIR,1,['/pipeline']
tensorflow/tfx,latest,/tfx/tools/cli/container_builder/testdata/test_dockerfile_with_base,COPY,1,['./ ./']
tensorflow/tfx,latest,/tfx/tools/cli/container_builder/testdata/test_dockerfile_with_base,ENV,1,"['PYTHONPATH=""/pipeline:${PYTHONPATH}""']"
tensorflow/tfx,latest,/tfx/examples/penguin/experimental/Dockerfile,ARG,1,['TFX_VERSION']
tensorflow/tfx,latest,/tfx/examples/penguin/experimental/Dockerfile,FROM,1,['tensorflow/tfx:$TFX_VERSION']
tensorflow/tfx,latest,/tfx/examples/penguin/experimental/Dockerfile,RUN,1,['pip install -U tfx[examples]']
tensorflow/tfx,latest,/tfx/examples/containers/workshop/buildfiles/Dockerfile,FROM,1,['ubuntu:16.04']
tensorflow/tfx,latest,/tfx/examples/containers/workshop/buildfiles/Dockerfile,LABEL,1,"['maintainer=""tensorflow-extended-dev@googlegroups.com""']"
tensorflow/tfx,latest,/tfx/examples/containers/workshop/buildfiles/Dockerfile,COPY,2,"['init.sh /', 'setup_demo.sh /']"
tensorflow/tfx,latest,/tfx/examples/containers/workshop/buildfiles/Dockerfile,RUN,1,['apt-get update && apt-get install -y --no-install-recommends         apt-utils         python-pip         python3-pip         python3-dev         virtualenv         git         sudo         vim         wget         curl         build-essential         software-properties-common         default-jre         && apt-get autoclean         && apt-get autoremove --purge         && chmod +x /init.sh         && bash /init.sh']
tensorflow/tfx,latest,/tfx/examples/containers/workshop/buildfiles/Dockerfile,EXPOSE,1,['8080 8888 6006']
intel/caffe,latest,/docker/standalone/gpu/Dockerfile,FROM,1,['nvidia/cuda:7.5-cudnn5-devel-ubuntu14.04']
intel/caffe,latest,/docker/standalone/gpu/Dockerfile,MAINTAINER,1,['caffe-maint@googlegroups.com']
intel/caffe,latest,/docker/standalone/gpu/Dockerfile,RUN,3,"['apt-get update && apt-get install -y --no-install-recommends         build-essential         cmake         git         wget         libatlas-base-dev         libboost-all-dev         libgflags-dev         libgoogle-glog-dev         libhdf5-serial-dev         libleveldb-dev         liblmdb-dev         libopencv-dev         libprotobuf-dev         libsnappy-dev         protobuf-compiler         python-dev         python-numpy         python-pip         python-scipy &&     rm -rf /var/lib/apt/lists/*', 'git clone -b ${CLONE_TAG} --depth 1 https://github.com/intel/caffe.git . &&     for req in $(cat python/requirements.txt) pydot; do pip install $req; done &&     mkdir build && cd build &&     cmake -DUSE_CUDNN=1 .. &&     make -j""$(nproc)""', 'echo ""$CAFFE_ROOT/build/lib"" >> /etc/ld.so.conf.d/caffe.conf && ldconfig']"
intel/caffe,latest,/docker/standalone/gpu/Dockerfile,ENV,5,"['CAFFE_ROOT=/opt/caffe', 'CLONE_TAG=master', 'PYCAFFE_ROOT $CAFFE_ROOT/python', 'PYTHONPATH $PYCAFFE_ROOT:$PYTHONPATH', 'PATH $CAFFE_ROOT/build/tools:$PYCAFFE_ROOT:$PATH']"
intel/caffe,latest,/docker/standalone/gpu/Dockerfile,WORKDIR,2,"['$CAFFE_ROOT', '/workspace']"
intel/caffe,latest,/docker/standalone/cpu-ubuntu/Dockerfile,FROM,1,['ubuntu:16.04']
intel/caffe,latest,/docker/standalone/cpu-ubuntu/Dockerfile,MAINTAINER,1,['caffe-maint@googlegroups.com']
intel/caffe,latest,/docker/standalone/cpu-ubuntu/Dockerfile,RUN,7,"['apt-get update &&     apt-get install -y --no-install-recommends \tbzip2         build-essential         cmake         git         wget         ssh         openssh-server         numactl         vim         net-tools         iputils-ping         ufw         iptables &&     rm -rf /var/lib/apt/lists/*', 'wget --no-check-certificate -c https://repo.continuum.io/miniconda/Miniconda2-latest-Linux-x86_64.sh &&     bash Miniconda2-latest-Linux-x86_64.sh -b &&     ./miniconda2/bin/conda config --add channels intel &&     ./miniconda2/bin/conda install -c intel caffe &&     rm -rf /root/miniconda2/pkgs/* &&     rm ~/Miniconda2-latest-Linux-x86_64.sh -f &&     echo ""export PATH=/root/miniconda2/bin:$PATH"" >> /root/.bashrc', ""mkdir /var/run/sshd &&     echo 'root:intelcaffe@123' | chpasswd"", ""sed -i 's/PermitRootLogin prohibit-password/PermitRootLogin yes/;s/Port 22/Port 10010/' /etc/ssh/sshd_config"", ""sed 's@session\\s*required\\s*pam_loginuid.so@session optional pam_loginuid.so@g' -i /etc/pam.d/sshd"", 'echo ""export VISIBLE=now"" >> /etc/profile', 'ssh-keygen -t rsa -A &&     mkdir ~/.ssh &&     touch ~/.ssh/config &&     echo ""Host *"" > ~/.ssh/config &&     echo ""Port 10010"" >> ~/.ssh/config &&     echo ""StrictHostKeyChecking no"" >> ~/.ssh/config']"
intel/caffe,latest,/docker/standalone/cpu-ubuntu/Dockerfile,WORKDIR,2,"['/root/', '/root/miniconda2/caffe']"
intel/caffe,latest,/docker/standalone/cpu-ubuntu/Dockerfile,ENV,1,"['NOTVISIBLE ""in users profile""']"
intel/caffe,latest,/docker/standalone/cpu-ubuntu/Dockerfile,EXPOSE,1,['10010']
intel/caffe,latest,/docker/standalone/cpu-ubuntu/Dockerfile,CMD,1,"['[""/usr/sbin/sshd"", ""-D""]']"
intel/caffe,latest,/docker/standalone/cpu-centos/Dockerfile,FROM,1,['centos:7']
intel/caffe,latest,/docker/standalone/cpu-centos/Dockerfile,MAINTAINER,1,['caffe-maint@googlegroups.com']
intel/caffe,latest,/docker/standalone/cpu-centos/Dockerfile,RUN,7,"['rpm -iUvh https://dl.fedoraproject.org/pub/epel/7/x86_64/Packages/e/epel-release-7-11.noarch.rpm &&     yum upgrade -y &&     yum install -y         bzip2         numactl         redhat-rpm-config         tar         findutils         gcc-c++         cmake         git         vim         wget         ssh         openssh.x86_64         openssh-server.x86_64         openssh-clients.x86_64         initscripts          net-tools         ufw         iptables         gcc-gfortran &&     yum clean all', 'wget --no-check-certificate -c https://repo.continuum.io/miniconda/Miniconda2-latest-Linux-x86_64.sh &&     bash Miniconda2-latest-Linux-x86_64.sh -b &&     ./miniconda2/bin/conda config --add channels intel &&     ./miniconda2/bin/conda install -c intel caffe &&     rm -rf /root/miniconda2/pkgs/* &&     rm ~/Miniconda2-latest-Linux-x86_64.sh -f &&     echo ""export PATH=/root/miniconda2/bin:$PATH"" >> /root/.bashrc', 'mkdir /var/run/sshd &&     echo ""root:intelcaffe@123"" | chpasswd', ""sed -i 's/#PermitRootLogin prohibit-password/PermitRootLogin yes/;s/#Port 22/Port 10086/' /etc/ssh/sshd_config"", ""sed 's@session\\s*required\\s*pam_loginuid.so@session optional pam_loginuid.so@g' -i /etc/pam.d/sshd"", 'echo ""export VISIBLE=now"" >> /etc/profile', 'ssh-keygen -t rsa -A &&     mkdir ~/.ssh &&     touch ~/.ssh/config &&     echo ""Host *"" > ~/.ssh/config &&     echo ""Port 10086"" >> ~/.ssh/config &&     echo ""StrictHostKeyChecking no"" >> ~/.ssh/config']"
intel/caffe,latest,/docker/standalone/cpu-centos/Dockerfile,WORKDIR,2,"['/root/', '/root/miniconda2/caffe']"
intel/caffe,latest,/docker/standalone/cpu-centos/Dockerfile,ENV,1,"['NOTVISIBLE ""in users profile""']"
intel/caffe,latest,/docker/standalone/cpu-centos/Dockerfile,EXPOSE,1,['10086']
intel/caffe,latest,/docker/standalone/cpu-centos/Dockerfile,CMD,1,"['[""/usr/sbin/sshd"", ""-D""]']"
intel/caffe,latest,/docker/templates/Dockerfile.template,MAINTAINER,1,['caffe-maint@googlegroups.com']
intel/caffe,latest,/docker/templates/Dockerfile.template,RUN,3,"['apt-get update && apt-get install -y --no-install-recommends         build-essential         cmake         git         wget         ssh         libatlas-base-dev         libboost-all-dev         libgflags-dev         libgoogle-glog-dev         libhdf5-serial-dev         libleveldb-dev         liblmdb-dev         libopencv-dev         libprotobuf-dev         libsnappy-dev         protobuf-compiler         python-dev         python-numpy         python-pip         python-scipy &&     rm -rf /var/lib/apt/lists/*', 'git clone -b ${CLONE_TAG} --depth 1 https://github.com/BVLC/caffe.git . &&     for req in $(cat python/requirements.txt) pydot; do pip install $req; done &&     mkdir build && cd build &&     cmake ${CMAKE_ARGS} .. &&     make -j""$(nproc)""', 'echo ""$CAFFE_ROOT/build/lib"" >> /etc/ld.so.conf.d/caffe.conf && ldconfig']"
intel/caffe,latest,/docker/templates/Dockerfile.template,ENV,5,"['CAFFE_ROOT=/opt/caffe', 'CLONE_TAG=master', 'PYCAFFE_ROOT $CAFFE_ROOT/python', 'PYTHONPATH $PYCAFFE_ROOT:$PYTHONPATH', 'PATH $CAFFE_ROOT/build/tools:$PYCAFFE_ROOT:$PATH']"
intel/caffe,latest,/docker/templates/Dockerfile.template,WORKDIR,2,"['$CAFFE_ROOT', '/workspace']"
kserve/kserve,latest,/Dockerfile,FROM,2,"['golang:1.17 as builder', 'gcr.io/distroless/static:latest']"
kserve/kserve,latest,/Dockerfile,WORKDIR,2,"['/go/src/github.com/kserve/kserve', '/']"
kserve/kserve,latest,/Dockerfile,COPY,6,"['go.mod  go.mod', 'go.sum  go.sum', 'cmd/    cmd/', 'pkg/    pkg/', 'third_party/ third_party/', '--from=builder /go/src/github.com/kserve/kserve/manager .']"
kserve/kserve,latest,/Dockerfile,RUN,2,"['go mod download', 'if [ ""$(uname -m)"" = ""ppc64le"" ]; then         CGO_ENABLED=0 GOOS=linux GOARCH=ppc64le go build -a -o manager ./cmd/manager;     elif [ ""$(uname -m)"" = ""aarch64"" ]; then         CGO_ENABLED=0 GOOS=linux GOARCH=arm64 go build -a -o manager ./cmd/manager;     else         CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -a -o manager ./cmd/manager;     fi']"
kserve/kserve,latest,/Dockerfile,ENTRYPOINT,1,"['[""/manager""]']"
kserve/kserve,latest,/agent.Dockerfile,FROM,2,"['golang:1.17 as builder', 'gcr.io/distroless/static:latest']"
kserve/kserve,latest,/agent.Dockerfile,WORKDIR,2,"['/go/src/github.com/kserve/kserve', '/ko-app']"
kserve/kserve,latest,/agent.Dockerfile,COPY,6,"['go.mod  go.mod', 'go.sum  go.sum', 'pkg/    pkg/', 'cmd/    cmd/', 'third_party/ third_party/', '--from=builder /go/src/github.com/kserve/kserve/agent /ko-app/']"
kserve/kserve,latest,/agent.Dockerfile,RUN,2,"['go mod download', 'CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -a -o agent ./cmd/agent']"
kserve/kserve,latest,/agent.Dockerfile,ENTRYPOINT,1,"['[""/ko-app/agent""]']"
kserve/kserve,latest,/tools/tf2openapi/Dockerfile,FROM,2,"['golang:1.17 as builder', 'gcr.io/distroless/static:latest']"
kserve/kserve,latest,/tools/tf2openapi/Dockerfile,WORKDIR,2,"['/go/src/github.com/kserve/kserve', '/']"
kserve/kserve,latest,/tools/tf2openapi/Dockerfile,COPY,6,"['tools/  tools/', 'pkg/    pkg/', 'go.mod  go.mod', 'go.sum  go.sum', 'third_party/ third_party/', '--from=builder /go/src/github.com/kserve/kserve/tf2openapi .']"
kserve/kserve,latest,/tools/tf2openapi/Dockerfile,RUN,1,['CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -a -o tf2openapi ./tools/tf2openapi/cmd']
kserve/kserve,latest,/tools/tf2openapi/Dockerfile,ENTRYPOINT,1,"['[""/tf2openapi""]']"
kserve/kserve,latest,/python/artexplainer.Dockerfile,FROM,1,['python:3.7']
kserve/kserve,latest,/python/artexplainer.Dockerfile,COPY,2,"['artexplainer artexplainer', 'kserve kserve']"
kserve/kserve,latest,/python/artexplainer.Dockerfile,RUN,2,"['pip install --no-cache-dir --upgrade pip && pip install --no-cache-dir -e ./kserve', 'pip install --no-cache-dir -e ./artexplainer']"
kserve/kserve,latest,/python/artexplainer.Dockerfile,ENTRYPOINT,1,"['[""python"", ""-m"", ""artserver""]']"
kserve/kserve,latest,/python/pmml.Dockerfile,FROM,1,['openjdk:11-slim']
kserve/kserve,latest,/python/pmml.Dockerfile,ARG,3,"['PYTHON_VERSION=3.7', 'CONDA_PYTHON_VERSION=3', 'CONDA_DIR=/opt/conda']"
kserve/kserve,latest,/python/pmml.Dockerfile,RUN,5,"['apt-get update &&     apt-get install -y --no-install-recommends git wget unzip bzip2 build-essential ca-certificates &&     apt-get clean &&     rm -rf /var/lib/apt/lists/*', ""wget --quiet https://repo.continuum.io/miniconda/Miniconda$CONDA_PYTHON_VERSION-latest-Linux-x86_64.sh -O /tmp/miniconda.sh &&     echo 'export PATH=$CONDA_DIR/bin:$PATH' > /etc/profile.d/conda.sh &&     /bin/bash /tmp/miniconda.sh -b -p $CONDA_DIR &&     rm -rf /tmp/* &&     apt-get clean &&     rm -rf /var/lib/apt/lists/*"", 'conda install -y python=$PYTHON_VERSION', 'pip install --no-cache-dir --upgrade pip && pip3 install -e ./kserve', 'pip install --no-cache-dir -e ./pmmlserver']"
kserve/kserve,latest,/python/pmml.Dockerfile,ENV,1,['PATH $CONDA_DIR/bin:$PATH']
kserve/kserve,latest,/python/pmml.Dockerfile,COPY,3,"['pmmlserver pmmlserver', 'kserve kserve', 'third_party third_party']"
kserve/kserve,latest,/python/pmml.Dockerfile,ENTRYPOINT,1,"['[""python3"", ""-m"", ""pmmlserver""]']"
kserve/kserve,latest,/python/custom_model.Dockerfile,FROM,1,['python:3.7-slim']
kserve/kserve,latest,/python/custom_model.Dockerfile,COPY,3,"['custom_model custom_model', 'kserve kserve', 'third_party third_party']"
kserve/kserve,latest,/python/custom_model.Dockerfile,RUN,2,"['pip install --upgrade pip && pip install -e ./kserve', 'pip install -e ./custom_model']"
kserve/kserve,latest,/python/custom_model.Dockerfile,ENTRYPOINT,1,"['[""python"", ""-m"", ""custom_model""]']"
kserve/kserve,latest,/python/aixexplainer.Dockerfile,FROM,1,['python:3.7']
kserve/kserve,latest,/python/aixexplainer.Dockerfile,COPY,1,['. .']
kserve/kserve,latest,/python/aixexplainer.Dockerfile,RUN,2,"['pip install --no-cache-dir --upgrade pip && pip install --no-cache-dir -e ./kserve', 'pip install --no-cache-dir -e ./aixexplainer']"
kserve/kserve,latest,/python/aixexplainer.Dockerfile,ENTRYPOINT,1,"['[""python"", ""-m"", ""aixserver""]']"
kserve/kserve,latest,/python/aiffairness.Dockerfile,FROM,1,['python:3.7']
kserve/kserve,latest,/python/aiffairness.Dockerfile,COPY,1,['. .']
kserve/kserve,latest,/python/aiffairness.Dockerfile,RUN,2,"['pip install --no-cache-dir --upgrade pip && pip install --no-cache-dir -e ./kserve', 'pip install --no-cache-dir -e ./aiffairness']"
kserve/kserve,latest,/python/aiffairness.Dockerfile,ENTRYPOINT,1,"['[""python"", ""-m"", ""aifserver""]']"
kserve/kserve,latest,/python/lgb.Dockerfile,FROM,1,['python:3.7-slim']
kserve/kserve,latest,/python/lgb.Dockerfile,RUN,3,"['apt-get update && apt-get install -y --no-install-recommends     libgomp1 &&     apt-get clean &&     rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*', 'pip install --no-cache-dir --upgrade pip && pip install --no-cache-dir -e ./kserve', 'pip install --no-cache-dir -e ./lgbserver']"
kserve/kserve,latest,/python/lgb.Dockerfile,COPY,3,"['third_party third_party', 'kserve kserve', 'lgbserver lgbserver']"
kserve/kserve,latest,/python/lgb.Dockerfile,ENTRYPOINT,1,"['[""python"", ""-m"", ""lgbserver""]']"
kserve/kserve,latest,/python/alibiexplainer.Dockerfile,FROM,1,['python:3.7']
kserve/kserve,latest,/python/alibiexplainer.Dockerfile,COPY,3,"['alibiexplainer alibiexplainer', 'kserve kserve', 'third_party third_party']"
kserve/kserve,latest,/python/alibiexplainer.Dockerfile,RUN,2,"['pip install --no-cache-dir --upgrade pip && pip install --no-cache-dir -e ./kserve', 'pip install --no-cache-dir -e ./alibiexplainer']"
kserve/kserve,latest,/python/alibiexplainer.Dockerfile,ENTRYPOINT,1,"['[""python"", ""-m"", ""alibiexplainer""]']"
kserve/kserve,latest,/python/sklearn.Dockerfile,FROM,1,['python:3.7-slim']
kserve/kserve,latest,/python/sklearn.Dockerfile,COPY,3,"['sklearnserver sklearnserver', 'kserve kserve', 'third_party third_party']"
kserve/kserve,latest,/python/sklearn.Dockerfile,RUN,2,"['pip install --no-cache-dir --upgrade pip && pip install --no-cache-dir -e ./kserve', 'pip install --no-cache-dir -e ./sklearnserver']"
kserve/kserve,latest,/python/sklearn.Dockerfile,ENTRYPOINT,1,"['[""python"", ""-m"", ""sklearnserver""]']"
kserve/kserve,latest,/python/paddle.Dockerfile,FROM,1,['python:3.8']
kserve/kserve,latest,/python/paddle.Dockerfile,RUN,2,"['pip install --upgrade pip', 'pip install -e ./kserve -e ./paddleserver']"
kserve/kserve,latest,/python/paddle.Dockerfile,COPY,2,"['kserve kserve', 'paddleserver paddleserver']"
kserve/kserve,latest,/python/paddle.Dockerfile,ENTRYPOINT,1,"['[""python"", ""-m"", ""paddleserver""]']"
kserve/kserve,latest,/python/custom_transformer.Dockerfile,FROM,1,['python:3.7-slim']
kserve/kserve,latest,/python/custom_transformer.Dockerfile,COPY,3,"['custom_transformer custom_transformer', 'kserve kserve', 'third_party third_party']"
kserve/kserve,latest,/python/custom_transformer.Dockerfile,RUN,2,"['pip install --upgrade pip && pip install -e ./kserve', 'pip install -e ./custom_transformer']"
kserve/kserve,latest,/python/custom_transformer.Dockerfile,ENTRYPOINT,1,"['[""python"", ""-m"", ""custom_transformer.model""]']"
kserve/kserve,latest,/python/xgb.Dockerfile,FROM,1,['python:3.7-slim']
kserve/kserve,latest,/python/xgb.Dockerfile,RUN,3,"['apt-get update && apt-get install libgomp1', 'pip install --no-cache-dir pip==19.3.1 && pip install --no-cache-dir -e ./kserve', 'pip install --no-cache-dir -e ./xgbserver']"
kserve/kserve,latest,/python/xgb.Dockerfile,COPY,3,"['xgbserver xgbserver', 'kserve kserve', 'third_party third_party']"
kserve/kserve,latest,/python/xgb.Dockerfile,ENTRYPOINT,1,"['[""python"", ""-m"", ""xgbserver""]']"
kserve/kserve,latest,/python/pytorch-gpu.Dockerfile,FROM,2,"['nvidia/cuda:10.0-cudnn7-devel-ubuntu18.04 AS BUILD', 'nvidia/cuda:10.0-base']"
kserve/kserve,latest,/python/pytorch-gpu.Dockerfile,ARG,5,"['PYTHON_VERSION=3.7', 'CONDA_PYTHON_VERSION=3', 'CONDA_DIR=/opt/conda', 'PYTORCH_VERSION=1.3.1', 'CONDA_DIR=/opt/conda']"
kserve/kserve,latest,/python/pytorch-gpu.Dockerfile,RUN,8,"['apt-get update &&     apt-get install -y --no-install-recommends git wget unzip bzip2 build-essential ca-certificates &&     apt-get clean &&     rm -rf /var/lib/apt/lists/*', ""wget --quiet https://repo.continuum.io/miniconda/Miniconda$CONDA_PYTHON_VERSION-latest-Linux-x86_64.sh -O /tmp/miniconda.sh &&     echo 'export PATH=$CONDA_DIR/bin:$PATH' > /etc/profile.d/conda.sh &&     /bin/bash /tmp/miniconda.sh -b -p $CONDA_DIR &&     rm -rf /tmp/* &&     apt-get clean &&     rm -rf /var/lib/apt/lists/*"", 'conda install -y python=$PYTHON_VERSION &&     conda install -y pytorch==$PYTORCH_VERSION torchvision pillow==6.2.0 cudatoolkit=10.0 -c pytorch &&     conda install -y h5py scikit-learn matplotlib seaborn     pandas mkl-service cython &&     conda clean -tipsy', 'apt-get update &&     apt-get install -y --no-install-recommends git wget unzip bzip2 sudo p7zip &&     apt-get clean &&     rm -rf /var/lib/apt/lists/*', 'mkdir -p /opt/conda/', 'chmod -R a+w /workspace', 'pip install --no-cache-dir --upgrade pip && pip install --no-cache-dir -e ./kserve', 'pip install --no-cache-dir -e ./pytorchserver']"
kserve/kserve,latest,/python/pytorch-gpu.Dockerfile,ENV,6,"['PATH $CONDA_DIR/bin:$PATH', 'PATH $CONDA_DIR/bin:$PATH', 'CUDA_HOME=/usr/local/cuda', 'CUDA_ROOT=$CUDA_HOME', 'PATH=$PATH:$CUDA_ROOT/bin:$HOME/bin', 'LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$CUDA_ROOT/lib64']"
kserve/kserve,latest,/python/pytorch-gpu.Dockerfile,WORKDIR,1,['/workspace']
kserve/kserve,latest,/python/pytorch-gpu.Dockerfile,COPY,3,"['--from=build /opt/conda/. $CONDA_DIR', 'pytorchserver pytorchserver', 'kserve kserve']"
kserve/kserve,latest,/python/pytorch-gpu.Dockerfile,ENTRYPOINT,1,"['[""python"", ""-m"", ""pytorchserver""]']"
kserve/kserve,latest,/python/pytorch.Dockerfile,FROM,1,['ubuntu:18.04']
kserve/kserve,latest,/python/pytorch.Dockerfile,ARG,1,['PYTORCH_VERSION=1.3.1']
kserve/kserve,latest,/python/pytorch.Dockerfile,RUN,6,"['apt-get update && apt-get install -y --no-install-recommends          build-essential          git          curl          ca-certificates          libjpeg-dev          libpng-dev &&      rm -rf /var/lib/apt/lists/*', 'curl -L -o ~/miniconda.sh -O  https://repo.continuum.io/miniconda/Miniconda3-4.2.12-Linux-x86_64.sh  &&      chmod +x ~/miniconda.sh &&      ~/miniconda.sh -b -p /opt/conda &&      rm ~/miniconda.sh &&      /opt/conda/bin/conda install conda-build &&      /opt/conda/bin/conda create -y --name pytorch-py37 python=3.7.3 numpy pyyaml scipy ipython mkl &&      /opt/conda/bin/conda clean -ya', 'conda install --name pytorch-py37 pytorch==$PYTORCH_VERSION torchvision pillow==6.2.0 cpuonly -c pytorch && /opt/conda/bin/conda clean -ya', 'chmod -R a+w /workspace', 'pip install --no-cache-dir --upgrade pip && pip install --no-cache-dir -e ./kserve', 'pip install --no-cache-dir -e ./pytorchserver']"
kserve/kserve,latest,/python/pytorch.Dockerfile,ENV,1,['PATH /opt/conda/envs/pytorch-py37/bin:$PATH']
kserve/kserve,latest,/python/pytorch.Dockerfile,WORKDIR,1,['/workspace']
kserve/kserve,latest,/python/pytorch.Dockerfile,COPY,3,"['pytorchserver pytorchserver', 'kserve kserve', 'third_party third_party']"
kserve/kserve,latest,/python/pytorch.Dockerfile,ENTRYPOINT,1,"['[""python"", ""-m"", ""pytorchserver""]']"
kserve/kserve,latest,/python/storage-initializer.Dockerfile,FROM,1,['python:3.7-slim']
kserve/kserve,latest,/python/storage-initializer.Dockerfile,COPY,3,"['./kserve ./kserve', './storage-initializer /storage-initializer', 'third_party third_party']"
kserve/kserve,latest,/python/storage-initializer.Dockerfile,RUN,3,"['pip install --no-cache-dir --upgrade pip && pip install --no-cache-dir ./kserve', 'chmod +x /storage-initializer/scripts/initializer-entrypoint', 'mkdir /work']"
kserve/kserve,latest,/python/storage-initializer.Dockerfile,WORKDIR,1,['/work']
kserve/kserve,latest,/python/storage-initializer.Dockerfile,ENTRYPOINT,1,"['[""/storage-initializer/scripts/initializer-entrypoint""]']"
kserve/kserve,latest,/hack/kserve_migration/Dockerfile,FROM,1,['alpine:latest']
kserve/kserve,latest,/hack/kserve_migration/Dockerfile,RUN,5,"['apk add --no-cache wget bash curl jq', 'curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl', 'chmod +x ./kubectl', 'mv ./kubectl /usr/local/bin', 'wget https://github.com/mikefarah/yq/releases/download/3.4.1/yq_linux_amd64 -O /usr/bin/yq &&    chmod +x /usr/bin/yq']"
kserve/kserve,latest,/hack/kserve_migration/Dockerfile,COPY,1,['kserve_migration.sh /kserve_migration.sh']
kserve/kserve,latest,/hack/kserve_migration/Dockerfile,ENTRYPOINT,1,"['[""./kserve_migration.sh""]']"
kserve/kserve,latest,/docs/apis/Dockerfile,FROM,1,['golang:1.17']
kserve/kserve,latest,/docs/apis/Dockerfile,RUN,3,"['apt-get update && apt-get -y upgrade && apt-get -y install git', 'git clone https://github.com/ahmetb/gen-crd-api-reference-docs', 'go build']"
kserve/kserve,latest,/docs/apis/Dockerfile,WORKDIR,1,['gen-crd-api-reference-docs']
kserve/kserve,latest,/docs/apis/Dockerfile,VOLUME,1,['/go/gen-crd-api-reference-docs/apidocs']
kserve/kserve,latest,/docs/apis/Dockerfile,ENTRYPOINT,1,"['[""./gen-crd-api-reference-docs""]']"
kserve/kserve,latest,/docs/apis/Dockerfile,CMD,1,"['[""-config"", ""./example-config.json"", ""-api-dir"", ""../src/github.com/kubeflow/kfserving/pkg/apis/serving/v1beta1"", ""-out-file"", ""./apidocs/v1beta1/README.md""]']"
kserve/kserve,latest,/docs/samples/explanation/art/mnist/sklearnserver/sklearn.Dockerfile,FROM,1,['python:3.7-slim']
kserve/kserve,latest,/docs/samples/explanation/art/mnist/sklearnserver/sklearn.Dockerfile,COPY,1,['. sklearnserver']
kserve/kserve,latest,/docs/samples/explanation/art/mnist/sklearnserver/sklearn.Dockerfile,RUN,2,"['pip install --no-cache-dir --upgrade pip && pip install --no-cache-dir kfserving', 'pip install --no-cache-dir -e ./sklearnserver']"
kserve/kserve,latest,/docs/samples/explanation/art/mnist/sklearnserver/sklearn.Dockerfile,ENTRYPOINT,1,"['[""python"", ""-m"", ""sklearnserver"", ""--model_name"", ""artserver"", ""--model_dir"", ""file://sklearnserver/sklearnserver/example_model""]']"
kserve/kserve,latest,/docs/samples/explanation/aif/germancredit/server/Dockerfile,FROM,1,['python:3.7-slim']
kserve/kserve,latest,/docs/samples/explanation/aif/germancredit/server/Dockerfile,ENV,1,['APP_HOME /app']
kserve/kserve,latest,/docs/samples/explanation/aif/germancredit/server/Dockerfile,WORKDIR,1,['$APP_HOME']
kserve/kserve,latest,/docs/samples/explanation/aif/germancredit/server/Dockerfile,COPY,4,"['requirements.txt ./', 'model.py ./', 'german.data /usr/local/lib/python3.7/site-packages/aif360/data/raw/german/', 'german.doc /usr/local/lib/python3.7/site-packages/aif360/data/raw/german/']"
kserve/kserve,latest,/docs/samples/explanation/aif/germancredit/server/Dockerfile,RUN,1,['pip install --no-cache-dir -r ./requirements.txt']
kserve/kserve,latest,/docs/samples/explanation/aif/germancredit/server/Dockerfile,CMD,1,"['[""python"", ""model.py""]']"
kserve/kserve,latest,/docs/samples/explanation/aix/mnist/rfserver/rf.Dockerfile,FROM,1,['python:3.7']
kserve/kserve,latest,/docs/samples/explanation/aix/mnist/rfserver/rf.Dockerfile,COPY,1,['. .']
kserve/kserve,latest,/docs/samples/explanation/aix/mnist/rfserver/rf.Dockerfile,RUN,2,"['pip install --no-cache-dir --upgrade pip && pip install --no-cache-dir kfserving==0.4.1', 'pip install --no-cache-dir -e .']"
kserve/kserve,latest,/docs/samples/explanation/aix/mnist/rfserver/rf.Dockerfile,ENTRYPOINT,1,"['[""python"", ""-m"", ""rfserver"", ""--model_name"", ""aixserver""]']"
kserve/kserve,latest,/docs/samples/v1beta1/transformer/feast/driver_transformer.Dockerfile,FROM,1,['python:3.8-slim']
kserve/kserve,latest,/docs/samples/v1beta1/transformer/feast/driver_transformer.Dockerfile,RUN,3,"['apt-get update && apt-get install -y --no-install-recommends git', 'pip install pip==20.2', 'pip install -e .']"
kserve/kserve,latest,/docs/samples/v1beta1/transformer/feast/driver_transformer.Dockerfile,COPY,1,['. .']
kserve/kserve,latest,/docs/samples/v1beta1/transformer/feast/driver_transformer.Dockerfile,ENTRYPOINT,1,"['[""python"", ""-m"", ""driver_transformer""]']"
kserve/kserve,latest,/docs/samples/v1beta1/transformer/torchserve_image_transformer/transformer.Dockerfile,FROM,1,['python:3.7-slim']
kserve/kserve,latest,/docs/samples/v1beta1/transformer/torchserve_image_transformer/transformer.Dockerfile,RUN,4,"['apt-get update && apt-get install -y --no-install-recommends git', 'pip install --no-cache-dir --upgrade pip', 'pip install --no-cache-dir kserve>=0.7.0rc0', 'pip install --no-cache-dir -e .']"
kserve/kserve,latest,/docs/samples/v1beta1/transformer/torchserve_image_transformer/transformer.Dockerfile,COPY,1,['. .']
kserve/kserve,latest,/docs/samples/v1beta1/transformer/torchserve_image_transformer/transformer.Dockerfile,ENTRYPOINT,1,"['[""python"", ""-m"", ""image_transformer""]']"
kserve/kserve,latest,/docs/samples/v1beta1/triton/torchscript/transformer.Dockerfile,FROM,1,['python:3.7-slim']
kserve/kserve,latest,/docs/samples/v1beta1/triton/torchscript/transformer.Dockerfile,RUN,3,"['apt-get update &&     apt-get upgrade -y &&     apt-get install -y git', 'pip install --no-cache-dir --upgrade pip && pip install --no-cache-dir git+https://github.com/kubeflow/kfserving@torchscript#subdirectory=python/kfserving', 'pip install --no-cache-dir -e .']"
kserve/kserve,latest,/docs/samples/v1beta1/triton/torchscript/transformer.Dockerfile,COPY,1,['. .']
kserve/kserve,latest,/docs/samples/v1beta1/triton/torchscript/transformer.Dockerfile,ENTRYPOINT,1,"['[""python"", ""-m"", ""image_transformer_v2""]']"
kserve/kserve,latest,/docs/samples/v1beta1/triton/bert/bert_tokenizer_v2/Dockerfile,FROM,1,['python:3.7-slim']
kserve/kserve,latest,/docs/samples/v1beta1/triton/bert/bert_tokenizer_v2/Dockerfile,RUN,4,"['apt-get update   && apt-get install -y wget   && rm -rf /var/lib/apt/lists/*', 'pip install --no-cache-dir kfserving', 'pip install --no-cache-dir tritonclient[all] --extra-index-url=https://pypi.ngc.nvidia.com', 'pip install --no-cache-dir -e .']"
kserve/kserve,latest,/docs/samples/v1beta1/triton/bert/bert_tokenizer_v2/Dockerfile,COPY,2,"['bert_transformer_v2 bert_transformer_v2/bert_transformer_v2', 'setup.py bert_transformer_v2/setup.py']"
kserve/kserve,latest,/docs/samples/v1beta1/triton/bert/bert_tokenizer_v2/Dockerfile,WORKDIR,1,['bert_transformer_v2']
kserve/kserve,latest,/docs/samples/v1beta1/triton/bert/bert_tokenizer_v2/Dockerfile,ENTRYPOINT,1,"['[""python"", ""-m"", ""bert_transformer_v2""]']"
kserve/kserve,latest,/docs/samples/v1beta1/custom/paddleserving/Dockerfile,FROM,1,['registry.baidubce.com/paddlepaddle/serving:0.5.0-devel']
kserve/kserve,latest,/docs/samples/v1beta1/custom/paddleserving/Dockerfile,RUN,3,"['git clone https://github.com/PaddlePaddle/Serving.git', 'pip install paddle-serving-server paddle-serving-app paddle-serving-client', 'python -m paddle_serving_app.package --get_model lac && tar -xzvf lac.tar.gz']"
kserve/kserve,latest,/docs/samples/v1beta1/custom/paddleserving/Dockerfile,CMD,1,['python Serving/python/examples/lac/lac_web_service.py lac_model/ lac_workdir 8080']
kserve/kserve,latest,/docs/samples/v1beta1/custom/torchserve/torchserve-image/Dockerfile,ARG,1,['BASE_IMAGE=ubuntu:18.04']
kserve/kserve,latest,/docs/samples/v1beta1/custom/torchserve/torchserve-image/Dockerfile,FROM,2,"['${BASE_IMAGE} AS compile-image', '${BASE_IMAGE} AS runtime-image']"
kserve/kserve,latest,/docs/samples/v1beta1/custom/torchserve/torchserve-image/Dockerfile,ENV,5,"['PYTHONUNBUFFERED TRUE', 'PATH=""/home/venv/bin:$PATH""', 'PYTHONUNBUFFERED TRUE', 'PATH=""/home/venv/bin:$PATH""', 'TEMP=/home/model-server/tmp']"
kserve/kserve,latest,/docs/samples/v1beta1/custom/torchserve/torchserve-image/Dockerfile,RUN,12,"['--mount=type=cache,id=apt-dev,target=/var/cache/apt     apt-get update &&     DEBIAN_FRONTEND=noninteractive apt-get install --no-install-recommends -y     ca-certificates     g++     python3-dev     python3-distutils     python3-venv     openjdk-11-jre-headless     curl     && rm -rf /var/lib/apt/lists/*     && cd /tmp     && curl -O https://bootstrap.pypa.io/get-pip.py     && python3 get-pip.py', 'python3 -m venv /home/venv', 'update-alternatives --install /usr/bin/python python /usr/bin/python3 1', 'update-alternatives --install /usr/local/bin/pip pip /usr/local/bin/pip3 1', 'export USE_CUDA=1', 'pip install -U pip setuptools', 'pip install --no-cache-dir torch torchvision torchtext torchserve torch-model-archiver', '--mount=type=cache,target=/var/cache/apt     apt-get update &&     DEBIAN_FRONTEND=noninteractive apt-get install --no-install-recommends -y     python3     python3-distutils     python3-dev     openjdk-11-jre-headless     build-essential     && rm -rf /var/lib/apt/lists/*     && cd /tmp', 'useradd -m model-server     && mkdir -p /home/model-server/tmp', 'chmod +x /usr/local/bin/dockerd-entrypoint.sh     && chown -R model-server /home/model-server', 'mkdir /home/model-server/model-store', 'chown -R model-server /home/model-server/model-store']"
kserve/kserve,latest,/docs/samples/v1beta1/custom/torchserve/torchserve-image/Dockerfile,COPY,4,"['--from=compile-image /home/venv /home/venv', 'dockerd-entrypoint.sh /usr/local/bin/dockerd-entrypoint.sh', 'config.properties /home/model-server/config.properties', 'model-store/* /home/model-server/model-store/']"
kserve/kserve,latest,/docs/samples/v1beta1/custom/torchserve/torchserve-image/Dockerfile,EXPOSE,1,['8080 8081 8082']
kserve/kserve,latest,/docs/samples/v1beta1/custom/torchserve/torchserve-image/Dockerfile,USER,1,['model-server']
kserve/kserve,latest,/docs/samples/v1beta1/custom/torchserve/torchserve-image/Dockerfile,WORKDIR,1,['/home/model-server']
kserve/kserve,latest,/docs/samples/v1beta1/custom/torchserve/torchserve-image/Dockerfile,ENTRYPOINT,1,"['[""/usr/local/bin/dockerd-entrypoint.sh""]']"
kserve/kserve,latest,/docs/samples/v1beta1/custom/torchserve/torchserve-image/Dockerfile,CMD,1,"['[""serve""]']"
kserve/kserve,latest,/docs/samples/v1beta1/torchserve/model-archiver/model-archiver-image/Dockerfile,FROM,1,['ubuntu:18.04']
kserve/kserve,latest,/docs/samples/v1beta1/torchserve/model-archiver/model-archiver-image/Dockerfile,RUN,7,"['apt-get update &&     DEBIAN_FRONTEND=noninteractive apt-get install --no-install-recommends -y     ca-certificates     g++     python3-dev     python3-distutils     python3-venv     curl     jq     && rm -rf /var/lib/apt/lists/*     && cd /tmp     && curl -O https://bootstrap.pypa.io/get-pip.py     && python3 get-pip.py', 'python3 -m venv /home/venv', 'update-alternatives --install /usr/bin/python python /usr/bin/python3 1', 'update-alternatives --install /usr/local/bin/pip pip /usr/local/bin/pip3 1', 'pip install --no-cache-dir torch-model-archiver', 'useradd -m model-server', 'chmod +x /usr/local/bin/dockerd-entrypoint.sh     && chown -R model-server /home/model-server']"
kserve/kserve,latest,/docs/samples/v1beta1/torchserve/model-archiver/model-archiver-image/Dockerfile,ENV,1,"['PATH=""/home/venv/bin:$PATH""']"
kserve/kserve,latest,/docs/samples/v1beta1/torchserve/model-archiver/model-archiver-image/Dockerfile,COPY,1,['dockerd-entrypoint.sh /usr/local/bin/dockerd-entrypoint.sh']
kserve/kserve,latest,/docs/samples/v1beta1/torchserve/model-archiver/model-archiver-image/Dockerfile,USER,1,['model-server']
kserve/kserve,latest,/docs/samples/v1beta1/torchserve/model-archiver/model-archiver-image/Dockerfile,WORKDIR,1,['/home/model-server']
kserve/kserve,latest,/docs/samples/v1beta1/torchserve/model-archiver/model-archiver-image/Dockerfile,ENTRYPOINT,1,"['[""/usr/local/bin/dockerd-entrypoint.sh""]']"
kserve/kserve,latest,/docs/samples/kafka/transformer.Dockerfile,FROM,1,['python:3.7-slim']
kserve/kserve,latest,/docs/samples/kafka/transformer.Dockerfile,RUN,3,"['apt-get update && apt-get install -y libglib2.0-0', 'pip install --no-cache-dir --upgrade pip && pip install --no-cache-dir kserve', 'pip install --no-cache-dir -e .']"
kserve/kserve,latest,/docs/samples/kafka/transformer.Dockerfile,COPY,1,['. .']
kserve/kserve,latest,/docs/samples/kafka/transformer.Dockerfile,ENTRYPOINT,1,"['[""python"", ""-m"", ""image_transformer""]']"
notadamking/RLTrader,latest,/docker/Dockerfile.cpu,FROM,1,['python:3.6.8-jessie']
notadamking/RLTrader,latest,/docker/Dockerfile.cpu,ADD,2,"['./requirements.base.txt /code/', './requirements.no-gpu.txt /code/requirements.txt']"
notadamking/RLTrader,latest,/docker/Dockerfile.cpu,WORKDIR,1,['/code']
notadamking/RLTrader,latest,/docker/Dockerfile.cpu,RUN,2,"['apt-get update     && apt-get install -y build-essential mpich libpq-dev', 'pip install -r requirements.txt']"
notadamking/RLTrader,latest,/docker/Dockerfile.gpu,FROM,1,['python:3.6.8-jessie']
notadamking/RLTrader,latest,/docker/Dockerfile.gpu,ADD,2,"['./requirements.base.txt /code/', './requirements.txt /code/']"
notadamking/RLTrader,latest,/docker/Dockerfile.gpu,WORKDIR,1,['/code']
notadamking/RLTrader,latest,/docker/Dockerfile.gpu,RUN,1,['apt-get update     && apt-get install -y build-essential mpich libpq-dev     && pip install -r requirements.txt']
notadamking/RLTrader,latest,/docker/Dockerfile.backend,FROM,1,['postgres:11-alpine']
notadamking/RLTrader,latest,/docker/Dockerfile.backend,ARG,2,"['ID=1000', 'GI=1000']"
notadamking/RLTrader,latest,/docker/Dockerfile.backend,ENV,4,"['POSTGRES_USER=rl_trader', 'POSTGRES_PASSWORD=rl_trader', ""POSTGRES_DB='rl_trader'"", 'PGDATA=/var/lib/postgresql/data/trader-data']"
notadamking/RLTrader,latest,/docker/Dockerfile.backend,RUN,1,['adduser -D -u $ID rl_trader']
notadamking/RLTrader,latest,/docker/Dockerfile.tests,FROM,1,['python:3.6.8-jessie']
notadamking/RLTrader,latest,/docker/Dockerfile.tests,ADD,3,"['./requirements.base.txt /code/', './requirements.no-gpu.txt /code/', './requirements.tests.txt /code/requirements.txt']"
notadamking/RLTrader,latest,/docker/Dockerfile.tests,WORKDIR,1,['/code']
notadamking/RLTrader,latest,/docker/Dockerfile.tests,RUN,1,['apt-get update     && apt-get install -y build-essential mpich libpq-dev     && pip install --progress-bar off --requirement requirements.txt']
DLR-RM/stable-baselines3,latest,/Dockerfile,ARG,3,"['PARENT_IMAGE', 'PYTORCH_DEPS=cpuonly', 'PYTHON_VERSION=3.7']"
DLR-RM/stable-baselines3,latest,/Dockerfile,FROM,1,['$PARENT_IMAGE']
DLR-RM/stable-baselines3,latest,/Dockerfile,RUN,3,"['apt-get update && apt-get install -y --no-install-recommends          build-essential          cmake          git          curl          ca-certificates          libjpeg-dev          libpng-dev          libglib2.0-0 &&      rm -rf /var/lib/apt/lists/*', 'curl -o ~/miniconda.sh https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh &&      chmod +x ~/miniconda.sh &&      ~/miniconda.sh -b -p /opt/conda &&      rm ~/miniconda.sh &&      /opt/conda/bin/conda install -y python=$PYTHON_VERSION numpy pyyaml scipy ipython mkl mkl-include &&      /opt/conda/bin/conda install -y pytorch $PYTORCH_DEPS -c pytorch &&      /opt/conda/bin/conda clean -ya', 'cd ${CODE_DIR}/stable-baselines3 3&&     pip install -e .[extra,tests,docs] &&     pip uninstall -y opencv-python &&     pip install opencv-python-headless &&     rm -rf $HOME/.cache/pip']"
DLR-RM/stable-baselines3,latest,/Dockerfile,ENV,2,"['PATH /opt/conda/bin:$PATH', 'CODE_DIR /root/code']"
DLR-RM/stable-baselines3,latest,/Dockerfile,COPY,2,"['./setup.py ${CODE_DIR}/stable-baselines3/setup.py', './stable_baselines3/version.txt ${CODE_DIR}/stable-baselines3/stable_baselines3/version.txt']"
DLR-RM/stable-baselines3,latest,/Dockerfile,CMD,1,['/bin/bash']
NVIDIA/DALI,latest,/docker/Dockerfile.cuda112.x86_64.deps,ARG,1,['TOOLKIT_BASE_IMAGE=ubuntu:18.04']
NVIDIA/DALI,latest,/docker/Dockerfile.cuda112.x86_64.deps,FROM,1,['${TOOLKIT_BASE_IMAGE} as cuda']
NVIDIA/DALI,latest,/docker/Dockerfile.cuda112.x86_64.deps,RUN,3,"['apt update && apt install -y libxml2 curl perl gcc', 'curl -LO https://developer.download.nvidia.com/compute/cuda/11.2.2/local_installers/cuda_11.2.2_460.32.03_linux.run &&     chmod +x cuda_*.run &&     ./cuda_*.run --silent --no-opengl-libs --toolkit &&     rm -f cuda_*.run;', 'NVJPEG2K_VERSION=0.2.0 &&     apt-get update &&     apt-get install wget software-properties-common -y &&     wget -qO - https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/7fa2af80.pub | apt-key add - &&     add-apt-repository ""deb https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/ /"" &&     apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/7fa2af80.pub &&     apt-get update &&     apt-get install libnvjpeg2k0 libnvjpeg2k-dev -y &&     cp /usr/include/nvjpeg2k* /usr/local/cuda/include/ &&     cp /usr/lib/x86_64-linux-gnu/libnvjpeg2k* /usr/local/cuda/lib64/ &&     rm -rf /var/lib/apt/lists/*']"
NVIDIA/DALI,latest,/docker/Dockerfile.cuda110.aarch64.deps,ARG,1,['TOOLKIT_BASE_IMAGE=ubuntu:18.04']
NVIDIA/DALI,latest,/docker/Dockerfile.cuda110.aarch64.deps,FROM,1,['${TOOLKIT_BASE_IMAGE} as cuda']
NVIDIA/DALI,latest,/docker/Dockerfile.cuda110.aarch64.deps,RUN,2,"['apt update && apt install -y libxml2 curl perl gcc &&     rm -rf /var/lib/apt/lists/*', 'curl -LO https://developer.download.nvidia.com/compute/cuda/11.0.3/local_installers/cuda_11.0.3_450.51.06_linux_sbsa.run &&     chmod +x cuda_*.run &&     ./cuda_*.run --silent --no-opengl-libs --toolkit &&     rm -f cuda_*.run;']"
NVIDIA/DALI,latest,/docker/Dockerfile_dali_tf,ARG,5,"['TF_CUSTOM_OP_BUILDER_IMAGE', 'NVIDIA_DALI_BUILD_FLAVOR', 'GIT_SHA', 'DALI_TIMESTAMP', 'NVIDIA_BUILD_ID']"
NVIDIA/DALI,latest,/docker/Dockerfile_dali_tf,FROM,1,['${TF_CUSTOM_OP_BUILDER_IMAGE}']
NVIDIA/DALI,latest,/docker/Dockerfile_dali_tf,WORKDIR,2,"['/opt/dali', '/opt/dali/dali_tf_plugin']"
NVIDIA/DALI,latest,/docker/Dockerfile_dali_tf,ENV,4,"['NVIDIA_DALI_BUILD_FLAVOR=${NVIDIA_DALI_BUILD_FLAVOR}', 'GIT_SHA=${GIT_SHA}', 'DALI_TIMESTAMP=${DALI_TIMESTAMP}', 'NVIDIA_BUILD_ID ${NVIDIA_BUILD_ID:-0}']"
NVIDIA/DALI,latest,/docker/Dockerfile_dali_tf,RUN,1,['mkdir /dali_tf_sdist && chmod 0777 /dali_tf_sdist']
NVIDIA/DALI,latest,/docker/Dockerfile_dali_tf,COPY,8,"['Acknowledgements.txt .', 'COPYRIGHT .', 'LICENSE .', 'VERSION .', 'cmake ./cmake', 'include ./include', 'dali_tf_plugin ./dali_tf_plugin', 'tools ./tools']"
NVIDIA/DALI,latest,/docker/Dockerfile.cuda111.aarch64.deps,ARG,1,['TOOLKIT_BASE_IMAGE=ubuntu:18.04']
NVIDIA/DALI,latest,/docker/Dockerfile.cuda111.aarch64.deps,FROM,1,['${TOOLKIT_BASE_IMAGE} as cuda']
NVIDIA/DALI,latest,/docker/Dockerfile.cuda111.aarch64.deps,RUN,2,"['apt update && apt install -y libxml2 curl perl gcc &&     rm -rf /var/lib/apt/lists/*', 'curl -LO https://developer.download.nvidia.com/compute/cuda/11.1.1/local_installers/cuda_11.1.1_455.32.00_linux_sbsa.run &&     chmod +x cuda_*.run &&     ./cuda_*.run --silent --no-opengl-libs --toolkit &&     rm -f cuda_*.run;']"
NVIDIA/DALI,latest,/docker/Dockerfile.cuda102.x86_64.deps,ARG,1,['TOOLKIT_BASE_IMAGE=ubuntu:20.04']
NVIDIA/DALI,latest,/docker/Dockerfile.cuda102.x86_64.deps,FROM,2,"['${TOOLKIT_BASE_IMAGE} as cuda', 'scratch']"
NVIDIA/DALI,latest,/docker/Dockerfile.cuda102.x86_64.deps,ENV,1,['DEBIAN_FRONTEND=noninteractive']
NVIDIA/DALI,latest,/docker/Dockerfile.cuda102.x86_64.deps,RUN,2,"['apt update && apt install -y libxml2 curl perl gcc &&     rm -rf /var/lib/apt/lists/*', 'curl -LO https://developer.download.nvidia.com/compute/cuda/10.2/Prod/local_installers/cuda_10.2.89_440.33.01_linux.run &&     chmod +x cuda_*.run &&     ./cuda_*.run --extract=/tmp/cuda/ --override && mv /tmp/cuda/cuda-toolkit/ /usr/local/cuda &&     rm -f cuda_*.run;']"
NVIDIA/DALI,latest,/docker/Dockerfile.cuda102.x86_64.deps,COPY,1,['--from=cuda /usr/local/cuda /usr/local/cuda']
NVIDIA/DALI,latest,/docker/Dockerfile,ARG,39,"['DEPS_IMAGE_NAME', 'PYVER=3.6', 'PYV=36', 'CC', 'CXX', 'ARCH', 'CUDA_TARGET_ARCHS', 'CMAKE_BUILD_TYPE', 'BUILD_TEST', 'BUILD_BENCHMARK', 'BUILD_NVTX', 'BUILD_PYTHON', 'BUILD_LMDB', 'BUILD_JPEG_TURBO', 'BUILD_NVJPEG', 'BUILD_NVJPEG2K', 'BUILD_LIBTIFF', 'BUILD_LIBSND', 'BUILD_LIBTAR', 'BUILD_FFTS', 'BUILD_NVOF', 'BUILD_NVDEC', 'BUILD_NVML', 'BUILD_CUFILE', 'LINK_DRIVER', 'WITH_DYNAMIC_CUDA_TOOLKIT', 'BUILD_WITH_ASAN', 'BUILD_WITH_LSAN', 'BUILD_WITH_UBSAN', 'STRIP_BINARY', 'VERBOSE_LOGS', 'NVIDIA_DALI_BUILD_FLAVOR', 'GIT_SHA', 'DALI_TIMESTAMP', 'WHL_PLATFORM_NAME', 'WHL_COMPRESSION', 'EXTRA_CMAKE_OPTIONS', 'NVIDIA_BUILD_ID', 'DALI_BUILD_DIR=build-docker-release']"
NVIDIA/DALI,latest,/docker/Dockerfile,FROM,2,"['${DEPS_IMAGE_NAME} as builder', 'builder']"
NVIDIA/DALI,latest,/docker/Dockerfile,ENV,38,"['PYVER=${PYVER} PYV=${PYV} PYTHONPATH=/opt/python/v', 'PYBIN=${PYTHONPATH}/bin     PYLIB=${PYTHONPATH}/lib', 'PATH=/opt/python/cp36-cp36/bin:/opt/python/cp37-cp37m/bin:/opt/python/cp38-cp38/bin:/opt/python/cp39-cp39/bin:${PYBIN}:/opt/python/cp310-cp310/bin:${PYBIN}:${PATH}     LD_LIBRARY_PATH=/usr/local/lib:/opt/dali/${DALI_BUILD_DIR}:/opt/python/cp36-cp36/lib:/opt/python/cp37-cp37m/lib:/opt/python/cp38-cp38/lib:/opt/python/cp39-cp39/lib:/opt/python/cp310-cp310/lib:${PYLIB}:${LD_LIBRARY_PATH}     LIBRARY_PATH=/usr/local/lib:/opt/dali/${DALI_BUILD_DIR}:/opt/python/cp36-cp36/lib:/opt/python/cp37-cp37m/lib:/opt/python/cp38-cp38/lib:/opt/python/cp39-cp39/lib:/opt/python/cp310-cp310/lib:${PYLIB}:${LIBRARY_PATH}', 'CC=${CC}', 'CXX=${CXX}', 'ARCH=${ARCH}', 'CUDA_TARGET_ARCHS=${CUDA_TARGET_ARCHS}', 'CMAKE_BUILD_TYPE=${CMAKE_BUILD_TYPE}', 'BUILD_TEST=${BUILD_TEST}', 'BUILD_BENCHMARK=${BUILD_BENCHMARK}', 'BUILD_NVTX=${BUILD_NVTX}', 'BUILD_PYTHON=${BUILD_PYTHON}', 'BUILD_LMDB=${BUILD_LMDB}', 'BUILD_JPEG_TURBO=${BUILD_JPEG_TURBO}', 'BUILD_NVJPEG=${BUILD_NVJPEG}', 'BUILD_NVJPEG2K=${BUILD_NVJPEG2K}', 'BUILD_LIBTIFF=${BUILD_LIBTIFF}', 'BUILD_LIBSND=${BUILD_LIBSND}', 'BUILD_LIBTAR=${BUILD_LIBTAR}', 'BUILD_FFTS=${BUILD_FFTS}', 'BUILD_NVOF=${BUILD_NVOF}', 'BUILD_NVDEC=${BUILD_NVDEC}', 'BUILD_NVML=${BUILD_NVML}', 'BUILD_CUFILE=${BUILD_CUFILE}', 'LINK_DRIVER=${LINK_DRIVER}', 'WITH_DYNAMIC_CUDA_TOOLKIT=${WITH_DYNAMIC_CUDA_TOOLKIT}', 'BUILD_WITH_ASAN=${BUILD_WITH_ASAN}', 'BUILD_WITH_LSAN=${BUILD_WITH_LSAN}', 'BUILD_WITH_UBSAN=${BUILD_WITH_UBSAN}', 'STRIP_BINARY=${STRIP_BINARY}', 'VERBOSE_LOGS=${VERBOSE_LOGS}', 'NVIDIA_DALI_BUILD_FLAVOR=${NVIDIA_DALI_BUILD_FLAVOR}', 'GIT_SHA=${GIT_SHA}', 'DALI_TIMESTAMP=${DALI_TIMESTAMP}', 'WHL_PLATFORM_NAME=${WHL_PLATFORM_NAME}', 'WHL_COMPRESSION=${WHL_COMPRESSION}', 'EXTRA_CMAKE_OPTIONS=${EXTRA_CMAKE_OPTIONS}', 'NVIDIA_BUILD_ID ${NVIDIA_BUILD_ID:-0}']"
NVIDIA/DALI,latest,/docker/Dockerfile,RUN,5,"['ln -s /opt/python/cp${PYV}* /opt/python/v', 'pip install future setuptools wheel clang &&     PY_CLANG_PATH=$(echo $(pip show clang) | sed \'s/.*Location: \\(.*\\) Requires.*/\\1/\')/clang/cindex.py &&     LIBCLANG_PATH=/usr/local/lib/libclang.so &&     sed -i ""s|library_file = None|library_file = \\""${LIBCLANG_PATH}\\""|"" ${PY_CLANG_PATH} &&     rm -rf /root/.cache/pip/', 'ldconfig', 'mkdir /wheelhouse && chmod 0777 /wheelhouse', 'bash /opt/dali/docker/build_helper.sh']"
NVIDIA/DALI,latest,/docker/Dockerfile,WORKDIR,2,"['/opt/dali', '/opt/dali/${DALI_BUILD_DIR}']"
NVIDIA/DALI,latest,/docker/Dockerfile,COPY,1,['. .']
NVIDIA/DALI,latest,/docker/Dockerfile.cuda114.x86_64.deps,ARG,1,['TOOLKIT_BASE_IMAGE=ubuntu:18.04']
NVIDIA/DALI,latest,/docker/Dockerfile.cuda114.x86_64.deps,FROM,1,['${TOOLKIT_BASE_IMAGE} as cuda']
NVIDIA/DALI,latest,/docker/Dockerfile.cuda114.x86_64.deps,RUN,3,"['apt update && apt install -y libxml2 curl perl gcc &&     rm -rf /var/lib/apt/lists/*', 'curl -LO https://developer.download.nvidia.com/compute/cuda/11.4.2/local_installers/cuda_11.4.2_470.57.02_linux.run &&     chmod +x cuda_*.run &&     ./cuda_*.run --silent --no-opengl-libs --toolkit &&     rm -f cuda_*.run;', 'NVJPEG2K_VERSION=0.3.0.23-1 &&     CUFILE_VERSION=1.0.2.10-1 &&     apt-get update &&     apt-get install wget software-properties-common -y &&     wget -qO - https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/7fa2af80.pub | apt-key add - &&     add-apt-repository ""deb https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/ /"" &&     apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/7fa2af80.pub &&     apt-get update &&     apt-get install libnvjpeg2k0=${NVJPEG2K_VERSION} libnvjpeg2k-dev=${NVJPEG2K_VERSION} libcufile-dev-11-4=${CUFILE_VERSION} -y &&     cp /usr/include/nvjpeg2k* /usr/local/cuda/include/ &&     cp /usr/lib/x86_64-linux-gnu/libnvjpeg2k* /usr/local/cuda/lib64/ &&     rm -rf /var/lib/apt/lists/*']"
NVIDIA/DALI,latest,/docker/Dockerfile.cuda90.x86_64.deps,ARG,1,['TOOLKIT_BASE_IMAGE=ubuntu:18.04']
NVIDIA/DALI,latest,/docker/Dockerfile.cuda90.x86_64.deps,FROM,1,['${TOOLKIT_BASE_IMAGE} as cuda']
NVIDIA/DALI,latest,/docker/Dockerfile.cuda90.x86_64.deps,RUN,2,"['apt update && apt install -y libxml2 curl perl gcc &&     rm -rf /var/lib/apt/lists/*', 'CUDA_VERSION=9.0 &&     CUDA_BUILD=9.0.176_384.81 &&     curl -LO https://developer.nvidia.com/compute/cuda/${CUDA_VERSION}/Prod/local_installers/cuda_${CUDA_BUILD}_linux-run &&     chmod +x cuda_${CUDA_BUILD}_linux-run &&     ./cuda_${CUDA_BUILD}_linux-run --silent --no-opengl-libs --toolkit &&     rm -f cuda_${CUDA_BUILD}_linux-run;     NVJPEG_VERSION=719-25900922 &&     NVJPEG_BUILD=9.0.${NVJPEG_VERSION} &&     curl -L https://developer.download.nvidia.com/compute/redist/libnvjpeg/cuda-linux64-nvjpeg-${NVJPEG_BUILD}.tar.gz | tar -xzf - &&     cd /cuda-linux64-nvjpeg/ &&     mv lib64/libnvjpeg*.a* /usr/local/cuda/lib64/ &&     mv include/nvjpeg.h /usr/local/cuda/include/ &&     rm -rf /cuda-linux64-nvjpeg;']"
NVIDIA/DALI,latest,/docker/Dockerfile.cuda111.x86_64.deps,ARG,1,['TOOLKIT_BASE_IMAGE=ubuntu:18.04']
NVIDIA/DALI,latest,/docker/Dockerfile.cuda111.x86_64.deps,FROM,1,['${TOOLKIT_BASE_IMAGE} as cuda']
NVIDIA/DALI,latest,/docker/Dockerfile.cuda111.x86_64.deps,RUN,3,"['apt update && apt install -y libxml2 curl perl gcc &&     rm -rf /var/lib/apt/lists/*', 'curl -LO https://developer.download.nvidia.com/compute/cuda/11.1.1/local_installers/cuda_11.1.1_455.32.00_linux.run &&     chmod +x cuda_*.run &&     ./cuda_*.run --silent --no-opengl-libs --toolkit &&     rm -f cuda_*.run;', 'NVJPEG2K_VERSION=0.1.0 &&     apt-get update &&     apt-get install wget software-properties-common -y &&     wget -qO - https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/7fa2af80.pub | apt-key add - &&     add-apt-repository ""deb https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/ /"" &&     apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/7fa2af80.pub &&     apt-get update &&     apt-get install libnvjpeg2k0 libnvjpeg2k-dev -y &&     cp /usr/include/nvjpeg2k* /usr/local/cuda/include/ &&     cp /usr/lib/x86_64-linux-gnu/libnvjpeg2k* /usr/local/cuda/lib64/ &&     rm -rf /var/lib/apt/lists/*']"
NVIDIA/DALI,latest,/docker/Dockerfile.cuda_qnx.deps,FROM,1,['scratch']
NVIDIA/DALI,latest,/docker/Dockerfile.cuda_qnx.deps,COPY,1,['qnx/ /qnx']
NVIDIA/DALI,latest,/docker/Dockerfile.deps,ARG,4,"['FROM_IMAGE_NAME=quay.io/pypa/manylinux2014_x86_64', 'BUILDER_EXTRA_DEPS=scratch', 'DALI_DEPS_REPO', 'DALI_DEPS_VERSION_SHA']"
NVIDIA/DALI,latest,/docker/Dockerfile.deps,FROM,2,"['${BUILDER_EXTRA_DEPS} as extra_deps', '${FROM_IMAGE_NAME}']"
NVIDIA/DALI,latest,/docker/Dockerfile.deps,RUN,5,"['yum install -y wget nasm doxygen graphviz gettext xz openssl autogen', 'yum remove -y devtoolset* &&     yum install -y devtoolset-7 devtoolset-7-libasan-devel devtoolset-7-liblsan-devel devtoolset-7-libtsan-devel devtoolset-7-libubsan-devel', 'rm -f /opt/python/cp27-cp27m', 'CLANG_VERSION=12.0.1                                                                           &&     cd tmp                                                                                         &&     wget https://github.com/llvm/llvm-project/archive/refs/tags/llvmorg-${CLANG_VERSION}.tar.gz    &&     tar -xf llvmorg-*.tar.gz                                                                       &&     rm -rf llvmorg-*.tar.gz                                                                        &&     cd llvm-*                                                                                      &&     mkdir build                                                                                    &&     cd build                                                                                       &&     cmake -DLLVM_ENABLE_PROJECTS=""clang;clang-tools-extra"" -DCMAKE_BUILD_TYPE=Release -G ""Unix Makefiles"" ../llvm &&     make -j""$(grep ^processor /proc/cpuinfo | wc -l)"" install                                      &&     cd /tmp                                                                                        &&     rm -rf llvm-*', ""/bin/bash -c 'DALI_DEPS_VERSION_SHA=${DALI_DEPS_VERSION_SHA:-$(cat /tmp/DALI_DEPS_VERSION)}    &&     git clone ${DALI_DEPS_REPO} /tmp/dali_deps                                                     &&     cd /tmp/dali_deps                                                                              &&     git checkout ${DALI_DEPS_VERSION_SHA}                                                          &&     git submodule init                                                                             &&     git submodule update --depth 1 --recursive                                                     &&     export CC_COMP=${CC}                                                                           &&     export CXX_COMP=${CXX}                                                                         &&     /tmp/dali_deps/build_scripts/build_deps.sh && rm -rf /tmp/dali_deps && rm -rf /tmp/DALI_DEPS_VERSION'""]"
NVIDIA/DALI,latest,/docker/Dockerfile.deps,ENV,4,"['ACLOCAL_PATH=/usr/share/aclocal/:/usr/local/share/aclocal', 'PATH=/opt/rh/devtoolset-7/root/usr/bin:$PATH     LD_LIBRARY_PATH=/opt/rh/devtoolset-7/root/usr/lib64:/opt/rh/devtoolset-7/root/usr/lib:/opt/rh/devtoolset-7/root/usr/lib64/dyninst:/opt/rh/devtoolset-7/root/usr/lib/dynin:$LD_LIBRARY_PATH', 'DALI_DEPS_REPO=${DALI_DEPS_REPO:-https://github.com/NVIDIA/DALI_deps}', 'DALI_DEPS_VERSION_SHA=${DALI_DEPS_VERSION_SHA}']"
NVIDIA/DALI,latest,/docker/Dockerfile.deps,COPY,2,"['DALI_DEPS_VERSION /tmp', '--from=extra_deps / /']"
NVIDIA/DALI,latest,/docker/Dockerfile.customopbuilder.clean,ARG,4,"['CUDA_IMAGE', 'TF_CUSTOM_OP_IMAGE', 'PYVER=3.6', 'PYV=36']"
NVIDIA/DALI,latest,/docker/Dockerfile.customopbuilder.clean,FROM,2,"['${CUDA_IMAGE} as cuda', '${TF_CUSTOM_OP_IMAGE}']"
NVIDIA/DALI,latest,/docker/Dockerfile.customopbuilder.clean,ENV,5,"['PYVER=${PYVER}', 'PYV=${PYV}', 'PYTHONIOENCODING=utf-8', 'LC_ALL=C.UTF-8', 'LD_LIBRARY_PATH=/usr/local/cuda/lib64:/usr/local/cuda/lib64/stubs/:${LD_LIBRARY_PATH}']"
NVIDIA/DALI,latest,/docker/Dockerfile.customopbuilder.clean,RUN,3,"['rm -rf /etc/apt/sources.list.d/jonathonf-* &&     apt-get update;     apt-get install -y --no-install-recommends curl &&     if [ ""${PYVER}"" = ""3.7"" ]; then         apt-get install -y --no-install-recommends libffi-dev &&         wget https://www.python.org/ftp/python/3.7.2/Python-3.7.2.tar.xz &&         tar -xf Python-3.7.2.tar.xz &&         cd Python-3.7.2 &&         ./configure --enable-optimizations &&         make -j8 build_all &&         make -j8 altinstall;     else         if [ $(apt-cache search python$PYVER | wc -l) -eq 0 ]; then             apt-get install software-properties-common -y --no-install-recommends &&             add-apt-repository ppa:deadsnakes/ppa -y &&             apt-get update;         fi &&         curl -s https://packagecloud.io/install/repositories/github/git-lfs/script.deb.sh | bash &&         apt-get install -y --no-install-recommends                 git                 git-lfs                 python$PYVER                 python$PYVER-dev &&         apt-get install python3-distutils -y --no-install-recommends || true;     fi &&     rm -rf /var/lib/apt/lists/*', 'rm -f /usr/bin/python &&     rm -f /usr/bin/python`echo $PYVER | cut -c1-1` &&     rm -f /usr/local/bin/pip || true &&     if [ ""${PYVER}"" = ""3.7"" ]; then         ln -s /usr/local/bin/python3.7 /usr/bin/python3.7 &&         ln -s /usr/local/bin/python3.7 /usr/bin/python &&         ln -s /usr/local/bin/pip3.7 /usr/local/bin/pip &&         ln -s /usr/local/bin/pip3.7 /usr/bin/pip3.7 &&         ln -s /usr/local/bin/pip3.7 /usr/bin/pip;     else         ln -s /usr/bin/python$PYVER /usr/bin/python &&         ln -s /usr/bin/python$PYVER /usr/bin/python`echo $PYVER | cut -c1-1` &&         curl -O https://bootstrap.pypa.io/get-pip.py &&         python get-pip.py &&         rm get-pip.py;     fi &&     pip install --upgrade pip &&     python --version &&     pip --version', 'export USE_CUDA_VERSION=$(echo $(ls /usr/local/cuda/lib64/libcudart.so*) | sed \'s/.*\\.\\([0-9]\\+\\)\\.\\([0-9]\\+\\)\\.\\([0-9]\\+\\)/\\1\\2/\') &&     export last_config_index=$(python qa/setup_packages.py -n -u tensorflow-gpu --cuda ${USE_CUDA_VERSION}) &&     for i in `seq 0 $last_config_index`; do         package=$(python qa/setup_packages.py -i $i -u tensorflow-gpu --cuda ${USE_CUDA_VERSION});         if [[ ""${package}"" != *""nvidia-tensorflow""* ]]; then             pip download ${package} -d /pip-packages;         fi     done']"
NVIDIA/DALI,latest,/docker/Dockerfile.customopbuilder.clean,COPY,2,"['--from=cuda /usr/local/cuda /usr/local/cuda', 'qa/setup_packages.py qa/setup_packages.py']"
NVIDIA/DALI,latest,/docker/Dockerfile.customopbuilder.clean,WORKDIR,1,['/opt/dali']
NVIDIA/DALI,latest,/docker/Dockerfile.customopbuilder.clean,SHELL,1,"['[""/bin/bash"", ""-c""]']"
NVIDIA/DALI,latest,/docker/Dockerfile.cuda113.x86_64.deps,ARG,1,['TOOLKIT_BASE_IMAGE=ubuntu:18.04']
NVIDIA/DALI,latest,/docker/Dockerfile.cuda113.x86_64.deps,FROM,1,['${TOOLKIT_BASE_IMAGE} as cuda']
NVIDIA/DALI,latest,/docker/Dockerfile.cuda113.x86_64.deps,RUN,3,"['apt update && apt install -y libxml2 curl perl gcc &&     rm -rf /var/lib/apt/lists/*', 'curl -LO https://developer.download.nvidia.com/compute/cuda/11.3.1/local_installers/cuda_11.3.1_465.19.01_linux.run&&     chmod +x cuda_*.run &&     ./cuda_*.run --silent --no-opengl-libs --toolkit &&     rm -f cuda_*.run;', 'NVJPEG2K_VERSION=0.2.0 &&     apt-get update &&     apt-get install wget software-properties-common -y &&     wget -qO - https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/7fa2af80.pub | apt-key add - &&     add-apt-repository ""deb https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/ /"" &&     apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/7fa2af80.pub &&     apt-get update &&     apt-get install libnvjpeg2k0 libnvjpeg2k-dev -y &&     cp /usr/include/nvjpeg2k* /usr/local/cuda/include/ &&     cp /usr/lib/x86_64-linux-gnu/libnvjpeg2k* /usr/local/cuda/lib64/ &&     rm -rf /var/lib/apt/lists/*']"
NVIDIA/DALI,latest,/docker/Dockerfile.build.aarch64-qnx,ARG,5,"['QNX_CUDA_TOOL_IMAGE_NAME', 'QNX_BASE_IMAGE=nvidia/cuda:10.0-devel-ubuntu18.04', 'DALI_DEPS_REPO', 'DALI_DEPS_VERSION_SHA', 'DALI_BUILD_DIR=build_aarch64_qnx']"
NVIDIA/DALI,latest,/docker/Dockerfile.build.aarch64-qnx,FROM,2,"['${QNX_CUDA_TOOL_IMAGE_NAME} as qnx_cuda_tools', '${QNX_BASE_IMAGE}']"
NVIDIA/DALI,latest,/docker/Dockerfile.build.aarch64-qnx,RUN,5,"['apt-get update && apt-get install -y --no-install-recommends     ca-certificates     curl     wget     unzip     git     rsync     dh-autoreconf     pkg-config     libtool     libtool-bin     autogen     python3.6     python3-distutils     && rm -rf /var/lib/apt/lists/* &&     ln -s /usr/bin/python3 /usr/bin/python &&     curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py && python get-pip.py && rm get-pip.py &&     pip install clang && pip install libclang &&     rm -rf /root/.cache/pip/', 'mv /qnx/cuda* cuda-qnx-cross.deb', 'rsync -a /qnx/host/linux/x86_64/ / &&     mkdir -p /lib64/qnx7/stubs && mv /qnx/lib64/* /lib64/qnx7/stubs &&     mv /qnx/target/qnx7 /usr/aarch64-unknown-nto-qnx &&     rm -rf /usr/aarch64-unknown-nto-qnx/aarch64le/lib/libjpeg.so* &&     rm -rf /usr/aarch64-unknown-nto-qnx/usr/include/j* &&     rm -rf /usr/aarch64-unknown-nto-qnx/armle-v7 /usr/aarch64-unknown-nto-qnx/x86 /usr/aarch64-unknown-nto-qnx/x86_64 &&     rm -rf /qnx &&     rm /usr/bin/python &&     ln -s /usr/bin/python3 /usr/bin/python', 'dpkg -i $REPO_DEBS &&     echo ""for i in \\$CUDA_CROSS_PACKAGES; do echo \\""cuda-\\$i-cross-qnx-\\${CUDA_CROSS_VERSION}\\"";done"" | bash > /tmp/cuda-packages.txt &&     apt-get update    && apt-get install -y $(cat /tmp/cuda-packages.txt)    && rm -rf /var/lib/apt/lists/*    && rm -rf /tmp/cuda-packages.txt', '/bin/bash -c \'DALI_DEPS_VERSION_SHA=${DALI_DEPS_VERSION_SHA:-$(cat /tmp/DALI_DEPS_VERSION)}    &&     git clone ${DALI_DEPS_REPO} /tmp/dali_deps                                                     &&     cd /tmp/dali_deps                                                                              &&     git checkout ${DALI_DEPS_VERSION_SHA}                                                          &&     git submodule init                                                                             &&     git submodule update --depth 1 --recursive                                                     &&     export CC_COMP=aarch64-unknown-nto-qnx7.0.0-gcc                                                &&     export CXX_COMP=aarch64-unknown-nto-qnx7.0.0-g++                                               &&     export INSTALL_PREFIX=""/usr/aarch64-unknown-nto-qnx/aarch64le""                                 &&     export SYSROOT_ARG=""--with-sysroot=${QNX_TARGET}""                                              &&     export BUILD_ARCH_OPTION=""--build=x86_64-linux-gnu ""                                           &&     export HOST_ARCH_OPTION=""--host=aarch64-unknown-nto-qnx7.0.0""                                  &&     export CMAKE_TARGET_ARCH=aarch64                                                               &&     export OPENCV_TOOLCHAIN_FILE=""qnx/aarch64-qnx.toolchain.cmake""                                 &&     export WITH_FFMPEG=0                                                                           &&     export EXTRA_PROTOBUF_FLAGS=""-D__EXT_POSIX1_198808 -I$QNX_TARGET/usr/include                                  -I$QNX_TARGET/usr/include/aarch64                                  -I$QNX_TARGET/usr/include/c++/v1                                  -L$QNX_TARGET/aarch64le/lib                                  -D_POSIX_C_SOURCE=200112L                                  -D_QNX_SOURCE                                  -D_FILE_OFFSET_BITS=64""                                           &&     export EXTRA_FLAC_FLAGS=""-D__DJGPP__""                                                          &&     export EXTRA_LIBSND_FLAGS=""-I/usr/aarch64-unknown-nto-qnx/aarch64le/include""                   &&     /tmp/dali_deps/build_scripts/build_deps.sh && rm -rf /tmp/dali_deps && rm -rf /tmp/DALI_DEPS_VERSION\'']"
NVIDIA/DALI,latest,/docker/Dockerfile.build.aarch64-qnx,COPY,2,"['--from=qnx_cuda_tools /qnx /qnx', 'DALI_DEPS_VERSION /tmp']"
NVIDIA/DALI,latest,/docker/Dockerfile.build.aarch64-qnx,ENV,9,"['QNX_HOST=/', 'QNX_TARGET=/usr/aarch64-unknown-nto-qnx', 'REPO_DEBS=""cuda-qnx-cross.deb""', 'CUDA_CROSS_VERSION=10-0', 'CUDA_CROSS_PACKAGES=""cublas cudart cufft curand cusolver cusparse driver misc-headers npp""', 'PKG_CONFIG_PATH=/usr/aarch64-unknown-nto-qnx/aarch64le/lib/pkgconfig', 'DALI_DEPS_REPO=${DALI_DEPS_REPO:-https://github.com/NVIDIA/DALI_deps}', 'DALI_DEPS_VERSION_SHA=${DALI_DEPS_VERSION_SHA}', 'PATH=/usr/local/cuda-10.0/bin:$PATH']"
NVIDIA/DALI,latest,/docker/Dockerfile.build.aarch64-qnx,VOLUME,1,['/dali']
NVIDIA/DALI,latest,/docker/Dockerfile.build.aarch64-qnx,WORKDIR,2,"['/dali', '/dali/${DALI_BUILD_DIR}']"
NVIDIA/DALI,latest,/docker/Dockerfile.build.aarch64-qnx,CMD,1,"['cmake                  -DWERROR=ON              -DCMAKE_TOOLCHAIN_FILE:STRING=""$PWD/../platforms/qnx/aarch64-qnx.toolchain.cmake""   -DCMAKE_COLOR_MAKEFILE=ON          -DCMAKE_INSTALL_PREFIX=./install   -DARCH=aarch64-qnx                 -DCMAKE_CUDA_COMPILER=/usr/local/cuda-10.0/bin/nvcc      -DCUDA_HOST=/usr/local/cuda-10.0                         -DCUDA_TARGET=/usr/local/cuda-10.0/targets/aarch64-qnx   -DBUILD_TEST=ON          -DBUILD_BENCHMARK=OFF    -DBUILD_NVTX=OFF         -DBUILD_PYTHON=OFF       -DBUILD_LMDB=ON          -DBUILD_TENSORFLOW=OFF   -DBUILD_JPEG_TURBO=ON    -DBUILD_LIBTIFF=ON       -DBUILD_LIBSND=ON        -DBUILD_FFTS=ON          -DBUILD_NVJPEG=OFF       -DBUILD_NVJPEG2K=OFF     -DBUILD_NVOF=OFF         -DBUILD_NVDEC=OFF        -DBUILD_NVML=OFF         -DBUILD_CUFILE=OFF       -DVERBOSE_LOGS=OFF       -DWITH_DYNAMIC_CUDA_TOOLKIT=ON  .. &&                    make install -j""$(grep ^processor /proc/cpuinfo | wc -l)""']"
NVIDIA/DALI,latest,/docker/Dockerfile.cuda110.x86_64.deps,ARG,1,['TOOLKIT_BASE_IMAGE=ubuntu:18.04']
NVIDIA/DALI,latest,/docker/Dockerfile.cuda110.x86_64.deps,FROM,1,['${TOOLKIT_BASE_IMAGE} as cuda']
NVIDIA/DALI,latest,/docker/Dockerfile.cuda110.x86_64.deps,RUN,3,"['apt update && apt install -y libxml2 curl perl gcc &&     rm -rf /var/lib/apt/lists/*', 'curl -LO https://developer.download.nvidia.com/compute/cuda/11.0.3/local_installers/cuda_11.0.3_450.51.06_linux.run &&     chmod +x cuda_*.run &&     ./cuda_*.run --silent --no-opengl-libs --toolkit &&     rm -f cuda_*.run;', 'NVJPEG2K_VERSION=0.1.0 &&     apt-get update &&     apt-get install wget software-properties-common -y &&     wget -qO - https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/7fa2af80.pub | apt-key add - &&     add-apt-repository ""deb https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/ /"" &&     apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/7fa2af80.pub &&     apt-get update &&     apt-get install libnvjpeg2k0 libnvjpeg2k-dev -y &&     cp /usr/include/nvjpeg2k* /usr/local/cuda/include/ &&     cp /usr/lib/x86_64-linux-gnu/libnvjpeg2k* /usr/local/cuda/lib64/ &&     rm -rf /var/lib/apt/lists/*']"
NVIDIA/DALI,latest,/docker/Dockerfile.cuda.deps,ARG,2,"['FROM_IMAGE_NAME=quay.io/pypa/manylinux2014_x86_64', 'CUDA_IMAGE']"
NVIDIA/DALI,latest,/docker/Dockerfile.cuda.deps,FROM,2,"['${CUDA_IMAGE} as cuda', '${FROM_IMAGE_NAME}']"
NVIDIA/DALI,latest,/docker/Dockerfile.cuda.deps,ENV,2,"['PATH=/usr/local/cuda/bin:${PATH}', 'NVIDIA_DRIVER_CAPABILITIES=video,compute,utility']"
NVIDIA/DALI,latest,/docker/Dockerfile.cuda.deps,COPY,1,['--from=cuda /usr/local/cuda /usr/local/cuda']
NVIDIA/DALI,latest,/docker/Dockerfile.cuda114.aarch64.deps,ARG,1,['TOOLKIT_BASE_IMAGE=ubuntu:18.04']
NVIDIA/DALI,latest,/docker/Dockerfile.cuda114.aarch64.deps,FROM,1,['${TOOLKIT_BASE_IMAGE} as cuda']
NVIDIA/DALI,latest,/docker/Dockerfile.cuda114.aarch64.deps,RUN,2,"['apt update && apt install -y libxml2 curl perl gcc &&     rm -rf /var/lib/apt/lists/*', 'curl -LO https://developer.download.nvidia.com/compute/cuda/11.4.2/local_installers/cuda_11.4.2_470.57.02_linux_sbsa.run &&     chmod +x cuda_*.run &&     ./cuda_*.run --silent --no-opengl-libs --toolkit &&     rm -f cuda_*.run;']"
NVIDIA/DALI,latest,/docker/Dockerfile.cuda113.aarch64.deps,ARG,1,['TOOLKIT_BASE_IMAGE=ubuntu:18.04']
NVIDIA/DALI,latest,/docker/Dockerfile.cuda113.aarch64.deps,FROM,1,['${TOOLKIT_BASE_IMAGE} as cuda']
NVIDIA/DALI,latest,/docker/Dockerfile.cuda113.aarch64.deps,RUN,2,"['apt update && apt install -y libxml2 curl perl gcc &&     rm -rf /var/lib/apt/lists/*', 'curl -LO https://developer.download.nvidia.com/compute/cuda/11.3.1/local_installers/cuda_11.3.1_465.19.01_linux_sbsa.run &&     chmod +x cuda_*.run &&     ./cuda_*.run --silent --no-opengl-libs --toolkit &&     rm -f cuda_*.run;']"
NVIDIA/DALI,latest,/docker/Dockerfile.build.aarch64-linux,ARG,4,"['AARCH64_BASE_IMAGE=nvidia/cuda:10.2-devel-ubuntu18.04', 'DALI_DEPS_REPO', 'DALI_DEPS_VERSION_SHA', 'DALI_BUILD_DIR=build_aarch64_linux']"
NVIDIA/DALI,latest,/docker/Dockerfile.build.aarch64-linux,FROM,1,['${AARCH64_BASE_IMAGE}']
NVIDIA/DALI,latest,/docker/Dockerfile.build.aarch64-linux,ENV,6,"['DEBIAN_FRONTEND=noninteractive', 'CUDA_CROSS_VERSION=10.2', 'PKG_CONFIG_PATH=/usr/aarch64-linux-gnu/lib/pkgconfig', 'DALI_DEPS_REPO=${DALI_DEPS_REPO:-https://github.com/NVIDIA/DALI_deps}', 'DALI_DEPS_VERSION_SHA=${DALI_DEPS_VERSION_SHA}', 'PATH=/usr/local/cuda-10.2/bin:$PATH']"
NVIDIA/DALI,latest,/docker/Dockerfile.build.aarch64-linux,RUN,3,"[""apt-get update && apt-get install -y --no-install-recommends     ca-certificates     curl     wget     unzip     git     rsync     libjpeg-dev     dh-autoreconf     gcc-aarch64-linux-gnu     g++-aarch64-linux-gnu     pkg-config     libtool     libtool-bin     python3-distutils     autogen     zip     python3.6 python3.6-dev     python3.7 python3.7-dev     python3.8 python3.8-dev     &&     if [ $(apt-cache search python3.9 | wc -l) -eq 0 ]; then         apt-get install software-properties-common -y --no-install-recommends &&         add-apt-repository ppa:deadsnakes/ppa -y &&         apt-get update;     fi &&     apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc &&     add-apt-repository 'deb http://repo.download.nvidia.com/jetson/x86_64 bionic r32.4' &&     apt-get update &&     apt-get install -y cuda-cudart-cross-aarch64-${CUDA_CROSS_VERSION}                        cuda-cufft-cross-aarch64-${CUDA_CROSS_VERSION}                        cuda-curand-cross-aarch64-${CUDA_CROSS_VERSION}                        cuda-driver-cross-aarch64-${CUDA_CROSS_VERSION}                        cuda-misc-headers-cross-aarch64-${CUDA_CROSS_VERSION}                        cuda-npp-cross-aarch64-${CUDA_CROSS_VERSION}     &&     apt-get install -y python3.9 python3.9-dev python3.9-distutils python3.10 python3.10-dev python3.10-distutils &&     rm -rf /var/lib/apt/lists/* &&     curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py && python3 get-pip.py && rm get-pip.py &&     pip install clang && pip install libclang &&     rm -rf /root/.cache/pip/ &&     cd /tmp && git clone https://github.com/NixOS/patchelf && cd patchelf &&     ./bootstrap.sh && ./configure --prefix=/usr/ && make -j install && cd / && rm -rf /tmp/patchelf &&     ln -s /usr/bin/python3 /usr/bin/python"", '/bin/bash -c \'DALI_DEPS_VERSION_SHA=${DALI_DEPS_VERSION_SHA:-$(cat /tmp/DALI_DEPS_VERSION)}    &&     git clone ${DALI_DEPS_REPO} /tmp/dali_deps                                                     &&     cd /tmp/dali_deps                                                                              &&     git checkout ${DALI_DEPS_VERSION_SHA}                                                          &&     git submodule init                                                                             &&     git submodule update --depth 1 --recursive                                                     &&     export CC_COMP=aarch64-linux-gnu-gcc                                                           &&     export CXX_COMP=aarch64-linux-gnu-g++                                                          &&     export INSTALL_PREFIX=""/usr/aarch64-linux-gnu/""                                                &&     export HOST_ARCH_OPTION=""--host=aarch64-unknown-linux-gnu""                                     &&     export CMAKE_TARGET_ARCH=aarch64                                                               &&     export OPENCV_TOOLCHAIN_FILE=""linux/aarch64-gnu.toolchain.cmake""                               &&     export WITH_FFMPEG=0                                                                           &&     /tmp/dali_deps/build_scripts/build_deps.sh && rm -rf /tmp/dali_deps && rm -rf /tmp/DALI_DEPS_VERSION\'', 'export PYVERS=""3.6.9 3.7.8 3.8.5 3.9.0 3.10.0"" &&     for PYVER in ${PYVERS}; do         cd /tmp && curl -L https://www.python.org/ftp/python/${PYVER}/Python-${PYVER}.tgz | tar -xzf - &&         rm -rf *.tgz && cd Python*                                                                     &&         ./configure --disable-ipv6 ac_cv_file__dev_ptmx=no ac_cv_file__dev_ptc=no             --disable-shared CC=aarch64-linux-gnu-gcc CXX=aarch64-linux-gnu-g++             --build=x86_64-pc-linux-gnu --host=aarch64-linux-gnu --prefix=/usr/                        &&         make -j""$(grep ^processor /proc/cpuinfo | wc -l)"" inclinstall                                  &&         cd / && rm -rf /tmp/Python*;                                                                          done                                                                                               &&     find /usr/ -iname x86_64-linux-gnu-python* -exec sed -i ""s/\\(SO.*\\)\\(x86_64\\)\\(.*\\)/\\1aarch64\\3/"" {} \\;']"
NVIDIA/DALI,latest,/docker/Dockerfile.build.aarch64-linux,COPY,1,['DALI_DEPS_VERSION /tmp']
NVIDIA/DALI,latest,/docker/Dockerfile.build.aarch64-linux,VOLUME,1,['/dali']
NVIDIA/DALI,latest,/docker/Dockerfile.build.aarch64-linux,WORKDIR,2,"['/dali', '/dali/${DALI_BUILD_DIR}']"
NVIDIA/DALI,latest,/docker/Dockerfile.build.aarch64-linux,CMD,1,"['WERROR=ON               ARCH=aarch64-linux      BUILD_TEST=ON           BUILD_BENCHMARK=OFF     BUILD_NVTX=OFF          BUILD_LMDB=ON           BUILD_JPEG_TURBO=ON     BUILD_LIBTIFF=ON        BUILD_LIBSND=ON         BUILD_LIBTAR=ON         BUILD_FFTS=ON           BUILD_NVJPEG=OFF        BUILD_NVJPEG2K=OFF      BUILD_NVOF=OFF          BUILD_NVDEC=OFF         BUILD_NVML=OFF          VERBOSE_LOGS=OFF        BUILD_CUFILE=OFF        TEST_BUNDLED_LIBS=NO    WITH_DYNAMIC_CUDA_TOOLKIT=ON    WHL_PLATFORM_NAME=manylinux2014_aarch64                BUNDLE_PATH_PREFIX=""/usr/aarch64-linux-gnu""            EXTRA_CMAKE_OPTIONS=""-DCMAKE_TOOLCHAIN_FILE:STRING=$PWD/../platforms/aarch64-linux/aarch64-linux.toolchain.cmake                         -DCMAKE_COLOR_MAKEFILE=ON                                                         -DCMAKE_CUDA_COMPILER=/usr/local/cuda-10.2/bin/nvcc                               -DCUDA_HOST=/usr/local/cuda-10.2                                                  -DCUDA_TARGET=/usr/local/cuda-10.2/targets/aarch64-linux""     /dali/docker/build_helper.sh                    &&     rm -rf /dali/${DALI_BUILD_DIR}/nvidia*          &&     cd /dali/dali_tf_plugin                         &&     bash /dali/dali_tf_plugin/make_dali_tf_sdist.sh &&     mv /dali_tf_sdist/*.tar.gz /wheelhouse/         &&     cp -r /wheelhouse /dali/']"
NVIDIA/DALI,latest,/docker/Dockerfile.cuda112.aarch64.deps,ARG,1,['TOOLKIT_BASE_IMAGE=ubuntu:18.04']
NVIDIA/DALI,latest,/docker/Dockerfile.cuda112.aarch64.deps,FROM,1,['${TOOLKIT_BASE_IMAGE} as cuda']
NVIDIA/DALI,latest,/docker/Dockerfile.cuda112.aarch64.deps,RUN,2,"['apt update && apt install -y libxml2 curl perl gcc &&     rm -rf /var/lib/apt/lists/*', 'curl -LO https://developer.download.nvidia.com/compute/cuda/11.2.2/local_installers/cuda_11.2.2_460.32.03_linux_sbsa.run &&     chmod +x cuda_*.run &&     ./cuda_*.run --silent --no-opengl-libs --toolkit &&     rm -f cuda_*.run;']"
NVIDIA/DALI,latest,/docker/Dockerfile.cuda115.aarch64.deps,ARG,1,['TOOLKIT_BASE_IMAGE=ubuntu:20.04']
NVIDIA/DALI,latest,/docker/Dockerfile.cuda115.aarch64.deps,FROM,1,['${TOOLKIT_BASE_IMAGE} as cuda']
NVIDIA/DALI,latest,/docker/Dockerfile.cuda115.aarch64.deps,ENV,1,['DEBIAN_FRONTEND=noninteractive']
NVIDIA/DALI,latest,/docker/Dockerfile.cuda115.aarch64.deps,RUN,2,"['apt update && apt install -y libxml2 curl perl gcc &&     rm -rf /var/lib/apt/lists/*', 'curl -LO https://developer.download.nvidia.com/compute/cuda/11.5.1/local_installers/cuda_11.5.1_495.29.05_linux_sbsa.run &&     chmod +x cuda_*.run &&     ./cuda_*.run --silent --no-opengl-libs --toolkit &&     rm -f cuda_*.run;']"
NVIDIA/DALI,latest,/docker/Dockerfile.cuda100.x86_64.deps,ARG,1,['TOOLKIT_BASE_IMAGE=ubuntu:18.04']
NVIDIA/DALI,latest,/docker/Dockerfile.cuda100.x86_64.deps,FROM,1,['${TOOLKIT_BASE_IMAGE} as cuda']
NVIDIA/DALI,latest,/docker/Dockerfile.cuda100.x86_64.deps,RUN,2,"['apt update && apt install -y libxml2 curl perl gcc &&     rm -rf /var/lib/apt/lists/*', 'CUDA_VERSION=10.0 &&     CUDA_BUILD=10.0.130_410.48 &&     curl -LO https://developer.nvidia.com/compute/cuda/${CUDA_VERSION}/Prod/local_installers/cuda_${CUDA_BUILD}_linux &&     chmod +x cuda_${CUDA_BUILD}_linux &&     ./cuda_${CUDA_BUILD}_linux --silent --no-opengl-libs --toolkit &&     rm -f cuda_${CUDA_BUILD}_linux;     CUDA_VERSION=10.0 &&     CUDA_PATCH=1 &&     CUDA_BUILD=10.0.130.1 &&     curl -LO  https://developer.download.nvidia.com/compute/cuda/${CUDA_VERSION}/Prod/patches/${CUDA_PATCH}/cuda_${CUDA_BUILD}_linux.run &&     chmod +x cuda_${CUDA_BUILD}_linux.run &&     ./cuda_${CUDA_BUILD}_linux.run --silent --accept-eula &&     rm -f cuda_${CUDA_BUILD}_linux-run;     mkdir -p /usr/local/cuda/targets/x86_64-linux &&     mv /usr/local/cuda/lib64 /usr/local/cuda/targets/x86_64-linux/lib &&     mv /usr/local/cuda/include /usr/local/cuda/targets/x86_64-linux &&     ln -s targets/x86_64-linux/lib /usr/local/cuda/lib64 &&     ln -s targets/x86_64-linux/include /usr/local/cuda/include']"
NVIDIA/DALI,latest,/docker/Dockerfile.cuda115.x86_64.deps,ARG,1,['TOOLKIT_BASE_IMAGE=ubuntu:20.04']
NVIDIA/DALI,latest,/docker/Dockerfile.cuda115.x86_64.deps,FROM,1,['${TOOLKIT_BASE_IMAGE} as cuda']
NVIDIA/DALI,latest,/docker/Dockerfile.cuda115.x86_64.deps,ENV,1,['DEBIAN_FRONTEND=noninteractive']
NVIDIA/DALI,latest,/docker/Dockerfile.cuda115.x86_64.deps,RUN,3,"['apt update && apt install -y libxml2 curl perl gcc &&     rm -rf /var/lib/apt/lists/*', 'curl -LO https://developer.download.nvidia.com/compute/cuda/11.5.1/local_installers/cuda_11.5.1_495.29.05_linux.run &&     chmod +x cuda_*.run &&     ./cuda_*.run --silent --no-opengl-libs --toolkit &&     rm -f cuda_*.run;', 'NVJPEG2K_VERSION=0.4.0.24-1 &&     CUFILE_VERSION=1.1.0.37-1 &&     apt-get update &&     apt-get install wget software-properties-common -y &&     wget -qO - https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2004/x86_64/7fa2af80.pub | apt-key add - &&     add-apt-repository ""deb https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2004/x86_64/ /"" &&     apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2004/x86_64/7fa2af80.pub &&     apt-get update &&     apt-get install libnvjpeg2k0=${NVJPEG2K_VERSION} libnvjpeg2k-dev=${NVJPEG2K_VERSION} libcufile-dev-11-5=${CUFILE_VERSION} -y &&     cp /usr/include/nvjpeg2k* /usr/local/cuda/include/ &&     cp /usr/lib/x86_64-linux-gnu/libnvjpeg2k* /usr/local/cuda/lib64/ &&     rm -rf /var/lib/apt/lists/*']"
NVIDIA/DALI,latest,/docs/examples/use_cases/tensorflow/efficientdet/Dockerfile,ARG,1,['BASE_VERSION=21.05']
NVIDIA/DALI,latest,/docs/examples/use_cases/tensorflow/efficientdet/Dockerfile,FROM,1,['nvcr.io/nvidia/tensorflow:${BASE_VERSION}-tf2-py3']
NVIDIA/DALI,latest,/docs/examples/use_cases/tensorflow/efficientdet/Dockerfile,WORKDIR,1,['effdet']
NVIDIA/DALI,latest,/docs/examples/use_cases/tensorflow/efficientdet/Dockerfile,RUN,4,"['python -m pip install --upgrade pip', 'apt update', 'apt install ffmpeg libsm6 libxext6  -y', 'pip3 install -r requirements.txt']"
NVIDIA/DALI,latest,/docs/examples/use_cases/tensorflow/efficientdet/Dockerfile,COPY,2,"['requirements.txt requirements.txt', '. .']"
NVIDIA/DALI,latest,/docs/examples/use_cases/tensorflow/efficientdet/Dockerfile,CMD,1,['python3 train.py']
4paradigm/OpenMLDB,latest,/demo/predict-taxi-trip-duration-nb/Dockerfile,FROM,1,['openjdk:11.0.13-jre-slim-bullseye']
4paradigm/OpenMLDB,latest,/demo/predict-taxi-trip-duration-nb/Dockerfile,LABEL,1,['org.opencontainers.image.source https://github.com/4paradigm/OpenMLDB']
4paradigm/OpenMLDB,latest,/demo/predict-taxi-trip-duration-nb/Dockerfile,RUN,2,"['apt-get update      && apt-get install -y --no-install-recommends libgomp1 curl binutils procps python3 python3-pip python3-numpy vim      && rm -rf /var/lib/apt/lists/*      && pip install --no-cache-dir py4j==0.10.9 numpy lightgbm tornado requests pandas openmldb', '/setup_openmldb.sh ""${OPENMLDB_VERSION}""  && rm /setup_openmldb.sh']"
4paradigm/OpenMLDB,latest,/demo/predict-taxi-trip-duration-nb/Dockerfile,COPY,2,"['script /work/taxi-trip/', 'setup_openmldb.sh /']"
4paradigm/OpenMLDB,latest,/demo/predict-taxi-trip-duration-nb/Dockerfile,ENV,2,"['LANG=en_US.UTF-8', 'SPARK_HOME=/work/openmldb/spark-3.0.0-bin-openmldbspark']"
4paradigm/OpenMLDB,latest,/demo/predict-taxi-trip-duration-nb/Dockerfile,ARG,1,['OPENMLDB_VERSION=0.4.0']
4paradigm/OpenMLDB,latest,/demo/predict-taxi-trip-duration-nb/Dockerfile,WORKDIR,1,['/work/taxi-trip']
4paradigm/OpenMLDB,latest,/docker/Dockerfile,FROM,1,['centos:7']
4paradigm/OpenMLDB,latest,/docker/Dockerfile,LABEL,1,['org.opencontainers.image.source https://github.com/4paradigm/OpenMLDB']
4paradigm/OpenMLDB,latest,/docker/Dockerfile,COPY,1,['setup_cmake.sh /']
4paradigm/OpenMLDB,latest,/docker/Dockerfile,RUN,1,"['yum update -y && yum install -y centos-release-scl epel-release &&     yum install -y devtoolset-8 rh-git227 devtoolset-8-libasan-devel flex doxygen     java-1.8.0-openjdk-devel rh-python38-python-devel rh-python38-python-wheel &&     curl -SLo lcov-1.15-1.noarch.rpm https://github.com/linux-test-project/lcov/releases/download/v1.15/lcov-1.15-1.noarch.rpm &&     yum localinstall -y lcov-1.15-1.noarch.rpm &&     yum clean all && rm lcov-1.15-1.noarch.rpm &&     curl -SLo apache-maven-3.6.3-bin.tar.gz https://mirrors.ocf.berkeley.edu/apache/maven/maven-3/3.6.3/binaries/apache-maven-3.6.3-bin.tar.gz &&     tar xzf apache-maven-3.6.3-bin.tar.gz -C /usr/local --strip-components=1 &&     curl -SLo thirdparty.tar.gz https://github.com/4paradigm/hybridsql-asserts/releases/download/v0.4.2/thirdparty-2021-12-10-linux-gnu-x86_64-centos.tar.gz &&     mkdir -p /deps/usr &&     tar xzf thirdparty.tar.gz -C /deps/usr --strip-components=1 &&     curl -SLo zetasql.tar.gz https://github.com/4paradigm/zetasql/releases/download/v0.2.5/libzetasql-0.2.5-linux-gnu-x86_64.tar.gz &&     tar xzf zetasql.tar.gz -C /deps/usr --strip-components=1 &&     curl -SLo zookeeper.tar.gz https://archive.apache.org/dist/zookeeper/zookeeper-3.4.14/zookeeper-3.4.14.tar.gz &&     mkdir -p /deps/src &&     tar xzf zookeeper.tar.gz -C /deps/src &&     /setup_cmake.sh ""${TARGETARCH}"" &&     rm /setup_cmake.sh &&     rm ./*.tar.gz']"
4paradigm/OpenMLDB,latest,/docker/Dockerfile,ENV,5,"['THIRD_PARTY_DIR=/deps/usr', 'THIRD_PARTY_SRC_DIR=/deps/src', 'PATH=/opt/rh/rh-git227/root/usr/bin:/opt/rh/rh-python38/root/usr/local/bin:/opt/rh/rh-python38/root/usr/bin:/opt/rh/devtoolset-8/root/usr/bin:/deps/usr/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin', 'LD_LIBRARY_PATH=/deps/usr/lib:/deps/usr/lib64:/opt/rh/httpd24/root/usr/lib64:/opt/rh/rh-python38/root/usr/lib64:/opt/rh/devtoolset-8/root/usr/lib64:/opt/rh/devtoolset-8/root/usr/lib:/opt/rh/devtoolset-8/root/usr/lib64/dyninst', 'LANG=en_US.UTF-8']"
4paradigm/OpenMLDB,latest,/docker/Dockerfile,WORKDIR,1,['/root']
4paradigm/OpenMLDB,latest,/docker/Dockerfile,CMD,1,"['[ ""/bin/bash"" ]']"
volcano-sh/volcano,latest,/example/integrations/mpi/Dockerfile,FROM,1,['ubuntu:16.04']
volcano-sh/volcano,latest,/example/integrations/mpi/Dockerfile,MAINTAINER,1,['volcano <maintainer@volcano.sh>']
volcano-sh/volcano,latest,/example/integrations/mpi/Dockerfile,RUN,2,"['apt-get update --fix-missing      && apt-get install -y libopenmpi-dev openmpi-bin      && apt-get install -y git      && apt-get install -y build-essential      && apt-get install -y ssh      && apt-get clean      && rm -rf /var/lib/apt/lists/*', 'git clone https://github.com/wesleykendall/mpitutorial     && cd mpitutorial/tutorials/mpi-hello-world/code     && make     && cp mpi_hello_world /home/     && apt-get autoremove -y git     && apt-get autoremove -y build-essential     && rm -rf ""/mpitutorial""']"
volcano-sh/volcano,latest,/example/integrations/mpi/Dockerfile,CMD,1,['mkdir -p /var/run/sshd; /usr/sbin/sshd;']
volcano-sh/volcano,latest,/example/integrations/mxnet/train/Dockerfile,FROM,1,['mxnet/python:1.4.0_cpu_mkl_py3']
volcano-sh/volcano,latest,/example/integrations/mxnet/train/Dockerfile,RUN,2,"['apt-get update     && apt-get install -y git', 'git clone --recursive https://github.com/apache/incubator-mxnet']"
volcano-sh/volcano,latest,/example/integrations/mxnet/train/Dockerfile,ENTRYPOINT,1,"['[""python3"", ""/mxnet/incubator-mxnet/example/image-classification/train_mnist.py""]']"
volcano-sh/volcano,latest,/example/integrations/tensorflow/benchmark/Dockerfile,FROM,1,['python:2.7']
volcano-sh/volcano,latest,/example/integrations/tensorflow/benchmark/Dockerfile,MAINTAINER,1,['volcano <volcano-sh@googlegroups.com>']
volcano-sh/volcano,latest,/example/integrations/tensorflow/benchmark/Dockerfile,RUN,2,"['apt-get update --fix-missing && apt-get install -y git && apt-get clean && rm -rf /var/lib/apt/lists/*', 'pip install tf-nightly-gpu && git clone https://github.com/tensorflow/benchmarks.git /opt/tf-benchmarks']"
volcano-sh/volcano,latest,/installer/dockerfile/scheduler/Dockerfile,FROM,1,['alpine:latest']
volcano-sh/volcano,latest,/installer/dockerfile/scheduler/Dockerfile,ADD,1,['vc-scheduler /vc-scheduler']
volcano-sh/volcano,latest,/installer/dockerfile/scheduler/Dockerfile,ENTRYPOINT,1,"['[""/vc-scheduler""]']"
volcano-sh/volcano,latest,/installer/dockerfile/scheduler/Dockerfile.arm64,FROM,1,['arm64v8/alpine:latest']
volcano-sh/volcano,latest,/installer/dockerfile/scheduler/Dockerfile.arm64,ADD,1,['vc-scheduler /vc-scheduler']
volcano-sh/volcano,latest,/installer/dockerfile/scheduler/Dockerfile.arm64,ENTRYPOINT,1,"['[""/vc-scheduler""]']"
volcano-sh/volcano,latest,/installer/dockerfile/webhook-manager/Dockerfile,FROM,1,['volcanosh/vc-webhook-manager-base:1.3.1']
volcano-sh/volcano,latest,/installer/dockerfile/webhook-manager/Dockerfile,ADD,2,"['vc-webhook-manager /vc-webhook-manager', 'gen-admission-secret.sh /gen-admission-secret.sh']"
volcano-sh/volcano,latest,/installer/dockerfile/webhook-manager/Dockerfile,ENTRYPOINT,1,"['[""/vc-webhook-manager""]']"
volcano-sh/volcano,latest,/installer/dockerfile/webhook-manager/Dockerfile.arm64,FROM,1,['volcanosh/vc-webhook-manager-base-arm64:1.3.1']
volcano-sh/volcano,latest,/installer/dockerfile/webhook-manager/Dockerfile.arm64,ADD,2,"['vc-webhook-manager /vc-webhook-manager', 'gen-admission-secret.sh /gen-admission-secret.sh']"
volcano-sh/volcano,latest,/installer/dockerfile/webhook-manager/Dockerfile.arm64,ENTRYPOINT,1,"['[""/vc-webhook-manager""]']"
volcano-sh/volcano,latest,/installer/dockerfile/webhook-manager/Dockerfile.base,FROM,1,['alpine:latest']
volcano-sh/volcano,latest,/installer/dockerfile/webhook-manager/Dockerfile.base,ARG,1,"['KUBE_VERSION=""1.16.6""']"
volcano-sh/volcano,latest,/installer/dockerfile/webhook-manager/Dockerfile.base,RUN,1,['apk add --update ca-certificates &&     apk add --update openssl &&     apk add --update -t deps curl &&     curl -L https://storage.googleapis.com/kubernetes-release/release/v$KUBE_VERSION/bin/linux/amd64/kubectl -o /usr/local/bin/kubectl &&     chmod +x /usr/local/bin/kubectl &&     apk del --purge deps &&     rm /var/cache/apk/*']
volcano-sh/volcano,latest,/installer/dockerfile/webhook-manager/Dockerfile.base,ENTRYPOINT,1,['[]']
volcano-sh/volcano,latest,/installer/dockerfile/webhook-manager/Dockerfile.base.arm64,FROM,1,['arm64v8/alpine:latest']
volcano-sh/volcano,latest,/installer/dockerfile/webhook-manager/Dockerfile.base.arm64,ARG,1,"['KUBE_VERSION=""1.16.6""']"
volcano-sh/volcano,latest,/installer/dockerfile/webhook-manager/Dockerfile.base.arm64,RUN,1,['apk add --update ca-certificates &&     apk add --update openssl &&     apk add --update -t deps curl &&     curl -L https://storage.googleapis.com/kubernetes-release/release/v$KUBE_VERSION/bin/linux/arm64/kubectl -o /usr/local/bin/kubectl &&     chmod +x /usr/local/bin/kubectl &&     apk del --purge deps &&     rm /var/cache/apk/*']
volcano-sh/volcano,latest,/installer/dockerfile/webhook-manager/Dockerfile.base.arm64,ENTRYPOINT,1,['[]']
volcano-sh/volcano,latest,/installer/dockerfile/controller-manager/Dockerfile,FROM,1,['alpine:latest']
volcano-sh/volcano,latest,/installer/dockerfile/controller-manager/Dockerfile,ADD,1,['vc-controller-manager /vc-controller-manager']
volcano-sh/volcano,latest,/installer/dockerfile/controller-manager/Dockerfile,ENTRYPOINT,1,"['[""/vc-controller-manager""]']"
volcano-sh/volcano,latest,/installer/dockerfile/controller-manager/Dockerfile.arm64,FROM,1,['arm64v8/alpine:latest']
volcano-sh/volcano,latest,/installer/dockerfile/controller-manager/Dockerfile.arm64,ADD,1,['vc-controller-manager /vc-controller-manager']
volcano-sh/volcano,latest,/installer/dockerfile/controller-manager/Dockerfile.arm64,ENTRYPOINT,1,"['[""/vc-controller-manager""]']"
volcano-sh/volcano,latest,/vendor/golang.org/x/net/http2/Dockerfile,FROM,1,['ubuntu:trusty']
volcano-sh/volcano,latest,/vendor/golang.org/x/net/http2/Dockerfile,RUN,17,"['apt-get update &&     apt-get upgrade -y &&     apt-get install -y git-core build-essential wget', 'apt-get install -y --no-install-recommends        autotools-dev libtool pkg-config zlib1g-dev        libcunit1-dev libssl-dev libxml2-dev libevent-dev        automake autoconf', 'apt-get install -y --no-install-recommends make binutils         autoconf automake autotools-dev         libtool pkg-config zlib1g-dev libcunit1-dev libssl-dev libxml2-dev         libev-dev libevent-dev libjansson-dev libjemalloc-dev         cython python3.4-dev python-setuptools', 'cd /root && git clone https://github.com/tatsuhiro-t/nghttp2.git', 'git reset --hard $NGHTTP2_VER', 'autoreconf -i', 'automake', 'autoconf', './configure', 'make', 'make install', 'wget https://curl.se/download/curl-7.45.0.tar.gz', 'tar -zxvf curl-7.45.0.tar.gz', './configure --with-ssl --with-nghttp2=/usr/local', 'make', 'make install', 'ldconfig']"
volcano-sh/volcano,latest,/vendor/golang.org/x/net/http2/Dockerfile,ENV,1,['NGHTTP2_VER 895da9a']
volcano-sh/volcano,latest,/vendor/golang.org/x/net/http2/Dockerfile,WORKDIR,3,"['/root/nghttp2', '/root', '/root/curl-7.45.0']"
volcano-sh/volcano,latest,/vendor/golang.org/x/net/http2/Dockerfile,CMD,1,"['[""-h""]']"
volcano-sh/volcano,latest,/vendor/golang.org/x/net/http2/Dockerfile,ENTRYPOINT,1,"['[""/usr/local/bin/curl""]']"
volcano-sh/volcano,latest,/vendor/github.com/onsi/gomega/Dockerfile,FROM,1,['golang:1.15']
feast-dev/feast,latest,/infra/docker/ci/Dockerfile,FROM,1,['ubuntu:18.04']
feast-dev/feast,latest,/infra/docker/ci/Dockerfile,ARG,4,"['REVISION', 'MAVEN_VERSION=3.6.3', 'SHA=c35a1803a6e70a126e80b2b3ae33eed961f83ed74d18fcd16909b2d44d7dada3203f1ffe726c17ef8dcca2dcaa9fca676987befeadc9b9f759967a8cb77181c0', 'BASE_URL=https://apache.osuosl.org/maven/maven-3/${MAVEN_VERSION}/binaries']"
feast-dev/feast,latest,/infra/docker/ci/Dockerfile,ENV,9,"['DEBIAN_FRONTEND=noninteractive', ""LANG='en_US.UTF-8' LANGUAGE='en_US:en' LC_ALL='en_US.UTF-8'"", 'MAVEN_HOME /usr/share/maven', 'PYTHON_VERSION 3.7', 'GOLANG_VERSION 1.14.1', 'GOPATH /go', 'PATH $GOPATH/bin:/usr/local/go/bin:$PATH', 'PATH=""$HOME/bin:${PATH}""', 'PROTOC_VERSION 3.12.2']"
feast-dev/feast,latest,/infra/docker/ci/Dockerfile,RUN,13,"['apt-get update && apt-get install -y curl unzip locales software-properties-common &&     apt-add-repository ppa:git-core/ppa &&     apt update && apt install -y git', 'apt-get install -y default-jdk', 'locale-gen en_US.UTF-8 && update-locale LANG=en_US.utf8', 'mkdir -p /usr/share/maven /usr/share/maven/ref   && curl -fsSL -o /tmp/apache-maven.tar.gz ${BASE_URL}/apache-maven-${MAVEN_VERSION}-bin.tar.gz   && echo ""${SHA}  /tmp/apache-maven.tar.gz"" | sha512sum -c -   && tar -xzf /tmp/apache-maven.tar.gz -C /usr/share/maven --strip-components=1   && rm -f /tmp/apache-maven.tar.gz   && ln -s /usr/share/maven/bin/mvn /usr/bin/mvn', 'apt-get install -y build-essential curl python${PYTHON_VERSION}     python${PYTHON_VERSION}-dev python${PYTHON_VERSION}-distutils &&     update-alternatives --install /usr/bin/python python /usr/bin/python${PYTHON_VERSION} 1 &&     update-alternatives --set python /usr/bin/python${PYTHON_VERSION} &&     curl -s https://bootstrap.pypa.io/get-pip.py -o get-pip.py &&     python get-pip.py --force-reinstall &&     rm get-pip.py', 'echo ""deb [signed-by=/usr/share/keyrings/cloud.google.gpg] http://packages.cloud.google.com/apt cloud-sdk main""     | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list &&     curl https://packages.cloud.google.com/apt/doc/apt-key.gpg     | apt-key --keyring /usr/share/keyrings/cloud.google.gpg      add - && apt-get update -y && apt-get install google-cloud-sdk -y', 'pip install boto3==1.16.10', 'curl -O https://storage.googleapis.com/golang/go${GOLANG_VERSION}.linux-amd64.tar.gz &&     tar -xvf go${GOLANG_VERSION}.linux-amd64.tar.gz && chown -R root:root ./go && mv go /usr/local', ""PROTOC_ZIP=protoc-${PROTOC_VERSION}-linux-x86_64.zip &&     curl -OL https://github.com/protocolbuffers/protobuf/releases/download/v${PROTOC_VERSION}/$PROTOC_ZIP &&     unzip -o $PROTOC_ZIP -d /usr/local bin/protoc &&     unzip -o $PROTOC_ZIP -d /usr/local 'include/*' &&     rm -f $PROTOC_ZIP &&     go get github.com/golang/protobuf/proto &&     go get gopkg.in/russross/blackfriday.v2 && \t  git clone https://github.com/istio/tools/ && \t  cd tools/cmd/protoc-gen-docs && \t  go build && mkdir -p $HOME/bin && cp protoc-gen-docs $HOME/bin"", 'curl -sL https://aka.ms/InstallAzureCLIDeb | bash', 'apt-get install -y kubectl=1.20.4-00', 'curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 &&     chmod 700 get_helm.sh &&     ./get_helm.sh --version v3.4.2', 'apt-get install -y jq']"
feast-dev/feast,latest,/java/infra/docker/feature-server/Dockerfile,FROM,2,"['maven:3.6-jdk-11 as builder', 'amazoncorretto:11 as production']"
feast-dev/feast,latest,/java/infra/docker/feature-server/Dockerfile,WORKDIR,1,['/build']
feast-dev/feast,latest,/java/infra/docker/feature-server/Dockerfile,COPY,14,"['java/pom.xml .', 'java/datatypes/java/pom.xml datatypes/java/pom.xml', 'java/common/pom.xml common/pom.xml', 'java/serving/pom.xml serving/pom.xml', 'java/storage/api/pom.xml storage/api/pom.xml', 'java/storage/connectors/pom.xml storage/connectors/pom.xml', 'java/storage/connectors/redis/pom.xml storage/connectors/redis/pom.xml', 'java/sdk/java/pom.xml sdk/java/pom.xml', 'java/docs/coverage/java/pom.xml docs/coverage/java/pom.xml', 'java/pom.xml .m2/* .m2/', 'java/ .', 'protos/feast datatypes/java/src/main/proto/feast', '--from=builder /build/serving/target/feast-serving-$VERSION-jar-with-dependencies.jar /opt/feast/feast-serving.jar', '--from=builder /usr/bin/grpc-health-probe /usr/bin/grpc-health-probe']"
feast-dev/feast,latest,/java/infra/docker/feature-server/Dockerfile,ENV,1,"['MAVEN_OPTS=""-Dmaven.repo.local=/build/.m2/repository -DdependencyLocationsEnabled=false -Dmaven.wagon.httpconnectionManager.ttlSeconds=25 -Dmaven.wagon.http.retryHandler.count=3""']"
feast-dev/feast,latest,/java/infra/docker/feature-server/Dockerfile,RUN,3,"['mvn dependency:go-offline -DexcludeGroupIds:dev.feast 2>/dev/null || true', 'mvn --also-make --projects serving -Drevision=$VERSION   -DskipUTs=true --batch-mode clean package', 'wget -q https://github.com/grpc-ecosystem/grpc-health-probe/releases/download/v0.3.1/grpc_health_probe-linux-amd64          -O /usr/bin/grpc-health-probe &&     chmod +x /usr/bin/grpc-health-probe']"
feast-dev/feast,latest,/java/infra/docker/feature-server/Dockerfile,ARG,2,"['VERSION=dev', 'VERSION=dev']"
feast-dev/feast,latest,/java/infra/docker/feature-server/Dockerfile,CMD,1,"['[""java"",     ""-Xms1g"",     ""-Xmx4g"",     ""-jar"",     ""/opt/feast/feast-serving.jar""]']"
feast-dev/feast,latest,/java/infra/docker/feature-server/Dockerfile.dev,FROM,1,['openjdk:11-jre as production']
feast-dev/feast,latest,/java/infra/docker/feature-server/Dockerfile.dev,ARG,1,['REVISION=dev']
feast-dev/feast,latest,/java/infra/docker/feature-server/Dockerfile.dev,RUN,1,['wget -q https://github.com/grpc-ecosystem/grpc-health-probe/releases/download/v0.3.1/grpc_health_probe-linux-amd64          -O /usr/bin/grpc-health-probe &&     chmod +x /usr/bin/grpc-health-probe']
feast-dev/feast,latest,/java/infra/docker/feature-server/Dockerfile.dev,ADD,1,['$PWD/serving/target/feast-serving-$REVISION-exec.jar /opt/feast/feast-serving.jar']
feast-dev/feast,latest,/java/infra/docker/feature-server/Dockerfile.dev,CMD,1,"['[""java"",     ""-Xms1024m"",     ""-Xmx1024m"",     ""-jar"",     ""/opt/feast/feast-serving.jar""]']"
feast-dev/feast,latest,/java/serving/src/test/resources/docker-compose/feast10/Dockerfile,FROM,1,['python:3.7']
feast-dev/feast,latest,/java/serving/src/test/resources/docker-compose/feast10/Dockerfile,WORKDIR,1,['/usr/src/']
feast-dev/feast,latest,/java/serving/src/test/resources/docker-compose/feast10/Dockerfile,COPY,2,"['requirements.txt ./', '. .']"
feast-dev/feast,latest,/java/serving/src/test/resources/docker-compose/feast10/Dockerfile,RUN,1,['pip install --no-cache-dir -r requirements.txt']
feast-dev/feast,latest,/java/serving/src/test/resources/docker-compose/feast10/Dockerfile,CMD,1,"['[ ""python"", ""./materialize.py"" ]']"
feast-dev/feast,latest,/sdk/python/feast/infra/transformation_servers/Dockerfile,FROM,1,['python:3.7-slim']
feast-dev/feast,latest,/sdk/python/feast/infra/transformation_servers/Dockerfile,COPY,4,"['sdk/python/feast/infra/transformation_servers/app.py app.py', 'sdk/python sdk/python', 'protos protos', 'README.md README.md']"
feast-dev/feast,latest,/sdk/python/feast/infra/transformation_servers/Dockerfile,RUN,1,"[""pip3 install -e 'sdk/python[ci]'""]"
feast-dev/feast,latest,/sdk/python/feast/infra/transformation_servers/Dockerfile,CMD,1,"['[ ""python"", ""app.py"" ]']"
feast-dev/feast,latest,/sdk/python/feast/infra/feature_servers/gcp_cloudrun/Dockerfile,FROM,1,['python:3.9-slim']
feast-dev/feast,latest,/sdk/python/feast/infra/feature_servers/gcp_cloudrun/Dockerfile,ENV,2,"['PYTHONUNBUFFERED True', 'APP_HOME /app']"
feast-dev/feast,latest,/sdk/python/feast/infra/feature_servers/gcp_cloudrun/Dockerfile,WORKDIR,1,['$APP_HOME']
feast-dev/feast,latest,/sdk/python/feast/infra/feature_servers/gcp_cloudrun/Dockerfile,COPY,4,"['sdk/python/feast/infra/feature_servers/gcp_cloudrun/app.py ./app.py', 'sdk/python ./sdk/python', 'protos ./protos', 'README.md ./README.md']"
feast-dev/feast,latest,/sdk/python/feast/infra/feature_servers/gcp_cloudrun/Dockerfile,RUN,1,"[""pip install --no-cache-dir     -e 'sdk/python[gcp,redis]'     -r ./sdk/python/feast/infra/feature_servers/gcp_cloudrun/requirements.txt""]"
feast-dev/feast,latest,/sdk/python/feast/infra/feature_servers/gcp_cloudrun/Dockerfile,CMD,1,['exec gunicorn -k uvicorn.workers.UvicornWorker --bind :$PORT --workers 1 --threads 8 --timeout 0 app:app']
feast-dev/feast,latest,/sdk/python/feast/infra/feature_servers/aws_lambda/Dockerfile,FROM,1,['public.ecr.aws/lambda/python:3.9']
feast-dev/feast,latest,/sdk/python/feast/infra/feature_servers/aws_lambda/Dockerfile,COPY,4,"['sdk/python/feast/infra/feature_servers/aws_lambda/app.py ${LAMBDA_TASK_ROOT}', 'sdk/python sdk/python', 'protos protos', 'README.md README.md']"
feast-dev/feast,latest,/sdk/python/feast/infra/feature_servers/aws_lambda/Dockerfile,RUN,2,"[""pip3 install -e 'sdk/python[aws,redis]'"", 'pip3 install -r sdk/python/feast/infra/feature_servers/aws_lambda/requirements.txt --target ""${LAMBDA_TASK_ROOT}""']"
feast-dev/feast,latest,/sdk/python/feast/infra/feature_servers/aws_lambda/Dockerfile,CMD,1,"['[ ""app.handler"" ]']"
apple/coremltools,latest,/docker/Dockerfile-sync-gitlab-with-github,FROM,1,['python:3.7']
apple/coremltools,latest,/docker/Dockerfile-sync-gitlab-with-github,RUN,1,['pip3 install PyGithub gitpython']
apple/coremltools,latest,/docker/Dockerfile-coremltools-linux,FROM,1,['ubuntu:18.04']
apple/coremltools,latest,/docker/Dockerfile-coremltools-linux,RUN,7,"['apt-get -y update      && apt-get -y install build-essential libstdc++6         python-setuptools curl git libssl-dev         make vim-common zlib1g-dev libffi-dev         libbz2-dev libopenblas-dev liblapack-dev         zsh uuid-dev gobjc++', 'curl -s https://packagecloud.io/install/repositories/github/git-lfs/script.deb.sh | bash', 'apt-get -y install git-lfs', 'mkdir src', 'curl -L https://github.com/Kitware/CMake/releases/download/v3.13.4/cmake-3.13.4-Linux-x86_64.tar.gz -o cmake-3.13.4-Linux-x86_64.tar.gz      && tar xf cmake-3.13.4-Linux-x86_64.tar.gz', 'curl https://repo.anaconda.com/archive/Anaconda3-2020.02-Linux-x86_64.sh -o anaconda.sh', 'zsh anaconda.sh -b -p /opt/anaconda && eval ""$(/opt/anaconda/bin/conda shell.zsh hook)"" && conda init zsh && conda init bash']"
apple/coremltools,latest,/docker/Dockerfile-coremltools-linux,WORKDIR,4,"['/', '/opt', '/opt', '/root']"
apple/coremltools,latest,/docker/Dockerfile-coremltools-linux,ENV,5,"['PATH=/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin', 'LD_LIBRARY_PATH=/usr/local/lib:/usr/local/lib64:', 'PATH=/opt/cmake-3.13.4-Linux-x86_64/bin:/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin', 'CC=""/usr/bin/gcc""', 'CXX=""/usr/bin/g++""']"
apple/coremltools,latest,/docker/Dockerfile-coremltools-linux,CMD,1,"['[""/bin/bash""]']"
apple/coremltools,latest,/deps/protobuf/protoc-artifacts/Dockerfile,FROM,1,['centos:6.6']
apple/coremltools,latest,/deps/protobuf/protoc-artifacts/Dockerfile,RUN,9,"['yum install -y git                    tar                    wget                    make                    autoconf                    curl-devel                    unzip                    automake                    libtool                    glibc-static.i686                    glibc-devel                    glibc-devel.i686', 'wget -q --no-cookies --no-check-certificate     --header ""Cookie: gpw_e24=http%3A%2F%2Fwww.oracle.com%2F; oraclelicense=accept-securebackup-cookie"" ""http://download.oracle.com/otn-pub/java/jdk/8u45-b14/jdk-8u45-linux-x64.tar.gz""     -O - | tar xz -C /var/local', 'wget -q http://apache.cs.utah.edu/maven/maven-3/3.3.9/binaries/apache-maven-3.3.9-bin.tar.gz -O - |     tar xz -C /var/local', 'wget http://people.centos.org/tru/devtools-1.1/devtools-1.1.repo -P /etc/yum.repos.d', 'bash -c \'echo ""enabled=1"" >> /etc/yum.repos.d/devtools-1.1.repo\'', 'bash -c ""sed -e \'s/\\$basearch/i386/g\' /etc/yum.repos.d/devtools-1.1.repo > /etc/yum.repos.d/devtools-i386-1.1.repo""', ""sed -e 's/testing-/testing-i386-/g' -i /etc/yum.repos.d/devtools-i386-1.1.repo"", 'yum install -y devtoolset-1.1                    devtoolset-1.1-libstdc++-devel                    devtoolset-1.1-libstdc++-devel.i686', 'git clone --depth 1 https://github.com/google/protobuf.git']"
apple/coremltools,latest,/deps/protobuf/protoc-artifacts/Dockerfile,ENV,3,"['JAVA_HOME /var/local/jdk1.8.0_45', 'PATH $JAVA_HOME/bin:$PATH', 'PATH /var/local/apache-maven-3.3.9/bin:$PATH']"
apple/coremltools,latest,/deps/protobuf/protoc-artifacts/Dockerfile,CMD,1,"['[""scl"", ""enable"", ""devtoolset-1.1"", ""bash""]']"
apple/coremltools,latest,/deps/protobuf/jenkins/docker/Dockerfile,FROM,1,['debian:latest']
apple/coremltools,latest,/deps/protobuf/jenkins/docker/Dockerfile,RUN,49,"[""echo 'deb http://ppa.launchpad.net/fkrull/deadsnakes/ubuntu trusty main' > /etc/apt/sources.list.d/deadsnakes.list &&   apt-key adv --keyserver keyserver.ubuntu.com --recv-keys DB82666C"", 'echo \'deb http://ppa.launchpad.net/webupd8team/java/ubuntu trusty main\' > /etc/apt/sources.list.d/webupd8team-java-trusty.list &&   apt-key adv --keyserver keyserver.ubuntu.com --recv-keys EEA14886 &&   echo ""oracle-java7-installer shared/accepted-oracle-license-v1-1 select true"" | debconf-set-selections', 'echo ""deb http://download.mono-project.com/repo/debian wheezy main"" | tee /etc/apt/sources.list.d/mono-xamarin.list &&   echo ""deb http://download.mono-project.com/repo/debian wheezy-libjpeg62-compat main"" | tee -a /etc/apt/sources.list.d/mono-xamarin.list &&   apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF', 'echo ""deb http://ppa.launchpad.net/ondrej/php/ubuntu trusty main"" | tee /etc/apt/sources.list.d/various-php.list &&   apt-key adv --keyserver keyserver.ubuntu.com --recv-keys F4FCBB07', 'apt-get update && apt-get install -y --force-yes curl libunwind8 gettext &&   curl -sSL -o dotnet.tar.gz https://go.microsoft.com/fwlink/?LinkID=809130 &&    mkdir -p /opt/dotnet && tar zxf dotnet.tar.gz -C /opt/dotnet &&   ln -s /opt/dotnet/dotnet /usr/local/bin', 'apt-get clean && apt-get update && apt-get install -y --force-yes   autoconf   autotools-dev   build-essential   bzip2   ccache   curl   gcc   git   libc6   libc6-dbg   libc6-dev   libgtest-dev   libtool   make   parallel   time   wget   mono-devel   referenceassemblies-pcl   nunit   maven   openjdk-7-jdk   oracle-java7-installer   python-setuptools   python-pip   python-dev   python2.6-dev   python3.3-dev   python3.4-dev   ruby   cmake   php5.6       php5.6-dev   php5.6-xml   php7.0       php7.0-dev   php7.0-xml   phpunit      valgrind     libxml2-dev   && apt-get clean', 'wget www.nuget.org/NuGet.exe -O /usr/local/bin/nuget.exe', 'pip install pip --upgrade', 'pip install virtualenv tox yattag', 'gpg --keyserver hkp://keys.gnupg.net --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3', '\\curl -sSL https://get.rvm.io | bash -s stable', '/bin/bash -l -c ""rvm install ruby-2.1""', '/bin/bash -l -c ""rvm install ruby-2.2""', '/bin/bash -l -c ""rvm install jruby-1.7""', '/bin/bash -l -c ""echo \'gem: --no-ri --no-rdoc\' > ~/.gemrc""', '/bin/bash -l -c ""echo \'export PATH=/usr/local/rvm/bin:$PATH\' >> ~/.bashrc""', '/bin/bash -l -c ""gem install bundler --no-ri --no-rdoc""', 'cd /tmp &&   git clone https://github.com/google/protobuf.git &&   cd protobuf &&   git reset --hard c2b3b3e04e7a023efe06f2107705b45428847800 &&   ./autogen.sh &&   ./configure &&   make -j4 &&   cd java &&   $MVN install dependency:go-offline -Dmaven.repo.local=$MAVEN_REPO &&   cd ../javanano &&   $MVN install dependency:go-offline -Dmaven.repo.local=$MAVEN_REPO', 'wget http://am1.php.net/get/php-5.5.38.tar.bz2/from/this/mirror', 'mv mirror php-5.5.38.tar.bz2', 'tar -xvf php-5.5.38.tar.bz2', 'cd php-5.5.38 && ./configure --enable-maintainer-zts --prefix=/usr/local/php-5.5-zts &&     make && make install && cd ..', 'cd php-5.5.38 && make clean && ./configure --prefix=/usr/local/php-5.5 &&     make && make install && cd ..', 'wget http://am1.php.net/get/php-5.6.30.tar.bz2/from/this/mirror', 'mv mirror php-5.6.30.tar.bz2', 'tar -xvf php-5.6.30.tar.bz2', 'cd php-5.6.30 && ./configure --enable-maintainer-zts --prefix=/usr/local/php-5.6-zts &&     make && make install && cd ..', 'cd php-5.6.30 && make clean && ./configure --prefix=/usr/local/php-5.6 &&     make && make install && cd ..', 'wget http://am1.php.net/get/php-7.0.18.tar.bz2/from/this/mirror', 'mv mirror php-7.0.18.tar.bz2', 'tar -xvf php-7.0.18.tar.bz2', 'cd php-7.0.18 && ./configure --enable-maintainer-zts --prefix=/usr/local/php-7.0-zts &&     make && make install && cd ..', 'cd php-7.0.18 && make clean && ./configure --prefix=/usr/local/php-7.0 &&     make && make install && cd ..', 'php -r ""copy(\'https://getcomposer.org/installer\', \'composer-setup.php\');""', 'php composer-setup.php', 'mv composer.phar /usr/bin/composer', 'php -r ""unlink(\'composer-setup.php\');""', 'composer config -g -- disable-tls true', 'composer config -g -- secure-http false', 'cd /tmp &&   rm -rf protobuf &&   git clone https://github.com/google/protobuf.git &&   cd protobuf &&   git reset --hard 6b27c1f981a9a93918e4039f236ead27165a8e91 &&   cd php &&   ln -sfn /usr/local/php-5.5/bin/php /usr/bin/php &&   ln -sfn /usr/local/php-5.5/bin/php-config /usr/bin/php-config &&   ln -sfn /usr/local/php-5.5/bin/phpize /usr/bin/phpize &&   composer install &&   mv vendor /usr/local/vendor-5.5 &&   ln -sfn /usr/local/php-5.6/bin/php /usr/bin/php &&   ln -sfn /usr/local/php-5.6/bin/php-config /usr/bin/php-config &&   ln -sfn /usr/local/php-5.6/bin/phpize /usr/bin/phpize &&   composer install &&   mv vendor /usr/local/vendor-5.6 &&   ln -sfn /usr/local/php-7.0/bin/php /usr/bin/php &&   ln -sfn /usr/local/php-7.0/bin/php-config /usr/bin/php-config &&   ln -sfn /usr/local/php-7.0/bin/phpize /usr/bin/phpize &&   composer install &&   mv vendor /usr/local/vendor-7.0', 'apt-get install -y    golang', 'apt-get install -y   npm', 'ln -s `which nodejs` /usr/bin/node', 'ln -s /usr/bin/ccache /usr/local/bin/gcc', 'ln -s /usr/bin/ccache /usr/local/bin/g++', 'ln -s /usr/bin/ccache /usr/local/bin/cc', 'ln -s /usr/bin/ccache /usr/local/bin/c++', 'ln -s /usr/bin/ccache /usr/local/bin/clang', 'ln -s /usr/bin/ccache /usr/local/bin/clang++']"
apple/coremltools,latest,/deps/protobuf/jenkins/docker/Dockerfile,ENV,2,"['MAVEN_REPO /var/maven_local_repository', 'MVN mvn --batch-mode']"
apple/coremltools,latest,/deps/protobuf/jenkins/docker/Dockerfile,CMD,1,"['[""bash""]']"
apple/coremltools,latest,/deps/protobuf/jenkins/docker32/Dockerfile,FROM,1,['32bit/debian:latest']
apple/coremltools,latest,/deps/protobuf/jenkins/docker32/Dockerfile,RUN,30,"['echo ""deb http://ppa.launchpad.net/ondrej/php/ubuntu trusty main"" | tee /etc/apt/sources.list.d/various-php.list &&   apt-key adv --keyserver keyserver.ubuntu.com --recv-keys F4FCBB07', 'apt-get clean && apt-get update && apt-get install -y --force-yes   autoconf   autotools-dev   build-essential   bzip2   ccache   curl   gcc   git   libc6   libc6-dbg   libc6-dev   libgtest-dev   libtool   make   parallel   time   wget   unzip   python-setuptools   python-pip   python-dev   cmake    php5.5       php5.5-dev   php5.5-xml   php5.6       php5.6-dev   php5.6-xml   php7.0       php7.0-dev   php7.0-xml   phpunit      valgrind     libxml2-dev   && apt-get clean', 'php -r ""copy(\'https://getcomposer.org/installer\', \'composer-setup.php\');""', 'php composer-setup.php', 'mv composer.phar /usr/bin/composer', 'php -r ""unlink(\'composer-setup.php\');""', 'cd /tmp &&   git clone https://github.com/google/protobuf.git &&   cd protobuf/php &&   git reset --hard 6b27c1f981a9a93918e4039f236ead27165a8e91 &&   ln -sfn /usr/bin/php5.5 /usr/bin/php &&   ln -sfn /usr/bin/php-config5.5 /usr/bin/php-config &&   ln -sfn /usr/bin/phpize5.5 /usr/bin/phpize &&   composer install &&   mv vendor /usr/local/vendor-5.5 &&   ln -sfn /usr/bin/php5.6 /usr/bin/php &&   ln -sfn /usr/bin/php-config5.6 /usr/bin/php-config &&   ln -sfn /usr/bin/phpize5.6 /usr/bin/phpize &&   composer install &&   mv vendor /usr/local/vendor-5.6 &&   ln -sfn /usr/bin/php7.0 /usr/bin/php &&   ln -sfn /usr/bin/php-config7.0 /usr/bin/php-config &&   ln -sfn /usr/bin/phpize7.0 /usr/bin/phpize &&   composer install &&   mv vendor /usr/local/vendor-7.0', 'wget http://am1.php.net/get/php-5.5.38.tar.bz2/from/this/mirror', 'mv mirror php-5.5.38.tar.bz2', 'tar -xvf php-5.5.38.tar.bz2', 'cd php-5.5.38 && ./configure --enable-maintainer-zts --prefix=/usr/local/php-5.5-zts &&     make && make install && make clean && cd ..', 'cd php-5.5.38 && make clean && ./configure --enable-bcmath --prefix=/usr/local/php-5.5 &&     make && make install && make clean && cd ..', 'wget http://am1.php.net/get/php-5.6.30.tar.bz2/from/this/mirror', 'mv mirror php-5.6.30.tar.bz2', 'tar -xvf php-5.6.30.tar.bz2', 'cd php-5.6.30 && ./configure --enable-maintainer-zts --prefix=/usr/local/php-5.6-zts &&     make && make install && cd ..', 'cd php-5.6.30 && make clean && ./configure --enable-bcmath --prefix=/usr/local/php-5.6 &&     make && make install && cd ..', 'wget http://am1.php.net/get/php-7.0.18.tar.bz2/from/this/mirror', 'mv mirror php-7.0.18.tar.bz2', 'tar -xvf php-7.0.18.tar.bz2', 'cd php-7.0.18 && ./configure --enable-maintainer-zts --prefix=/usr/local/php-7.0-zts &&     make && make install && cd ..', 'cd php-7.0.18 && make clean && ./configure --enable-bcmath --prefix=/usr/local/php-7.0 &&     make && make install && cd ..', 'pip install pip --upgrade', 'pip install virtualenv tox yattag', 'ln -s /usr/bin/ccache /usr/local/bin/gcc', 'ln -s /usr/bin/ccache /usr/local/bin/g++', 'ln -s /usr/bin/ccache /usr/local/bin/cc', 'ln -s /usr/bin/ccache /usr/local/bin/c++', 'ln -s /usr/bin/ccache /usr/local/bin/clang', 'ln -s /usr/bin/ccache /usr/local/bin/clang++']"
apple/coremltools,latest,/deps/protobuf/jenkins/docker32/Dockerfile,CMD,1,"['[""bash""]']"
zhenghaoz/gorse,latest,/docker/gorse-worker/Dockerfile,FROM,2,"['golang:1.17', 'scratch']"
zhenghaoz/gorse,latest,/docker/gorse-worker/Dockerfile,COPY,2,"['. gorse', '--from=0 /usr/bin/gorse-worker /usr/bin/gorse-worker']"
zhenghaoz/gorse,latest,/docker/gorse-worker/Dockerfile,RUN,3,"['cd gorse &&     go get -v -t -d ./...', 'cd gorse/cmd/gorse-worker &&     CGO_ENABLED=0 go build -ldflags=""        -X \'github.com/zhenghaoz/gorse/cmd/version.Version=$(git describe --tags $(git rev-parse HEAD))\'        -X \'github.com/zhenghaoz/gorse/cmd/version.GitCommit=$(git rev-parse HEAD)\'        -X \'github.com/zhenghaoz/gorse/cmd/version.BuildTime=$(date)\'"" . &&     mv gorse-worker /usr/bin', '/usr/bin/gorse-worker --version']"
zhenghaoz/gorse,latest,/docker/gorse-worker/Dockerfile,ENV,1,['USER root']
zhenghaoz/gorse,latest,/docker/gorse-worker/Dockerfile,ENTRYPOINT,1,"['[""/usr/bin/gorse-worker""]']"
zhenghaoz/gorse,latest,/docker/gorse-master/Dockerfile,FROM,2,"['golang:1.17', 'scratch']"
zhenghaoz/gorse,latest,/docker/gorse-master/Dockerfile,COPY,2,"['. gorse', '--from=0 /usr/bin/gorse-master /usr/bin/gorse-master']"
zhenghaoz/gorse,latest,/docker/gorse-master/Dockerfile,RUN,3,"['cd gorse &&     go get -v -t -d ./...', 'cd gorse/cmd/gorse-master &&     CGO_ENABLED=0 go build -ldflags=""        -X \'github.com/zhenghaoz/gorse/cmd/version.Version=$(git describe --tags $(git rev-parse HEAD))\'        -X \'github.com/zhenghaoz/gorse/cmd/version.GitCommit=$(git rev-parse HEAD)\'        -X \'github.com/zhenghaoz/gorse/cmd/version.BuildTime=$(date)\'"" . &&     mv gorse-master /usr/bin', '/usr/bin/gorse-master --version']"
zhenghaoz/gorse,latest,/docker/gorse-master/Dockerfile,ENV,1,['USER root']
zhenghaoz/gorse,latest,/docker/gorse-master/Dockerfile,ENTRYPOINT,1,"['[""/usr/bin/gorse-master"", ""-c"", ""/etc/gorse/config.toml""]']"
zhenghaoz/gorse,latest,/docker/gorse-server/Dockerfile,FROM,2,"['golang:1.17', 'scratch']"
zhenghaoz/gorse,latest,/docker/gorse-server/Dockerfile,COPY,2,"['. gorse', '--from=0 /usr/bin/gorse-server /usr/bin/gorse-server']"
zhenghaoz/gorse,latest,/docker/gorse-server/Dockerfile,RUN,3,"['cd gorse &&     go get -v -t -d ./...', 'cd gorse/cmd/gorse-server &&     CGO_ENABLED=0 go build -ldflags=""        -X \'github.com/zhenghaoz/gorse/cmd/version.Version=$(git describe --tags $(git rev-parse HEAD))\'        -X \'github.com/zhenghaoz/gorse/cmd/version.GitCommit=$(git rev-parse HEAD)\'        -X \'github.com/zhenghaoz/gorse/cmd/version.BuildTime=$(date)\'"" . &&     mv gorse-server /usr/bin', '/usr/bin/gorse-server --version']"
zhenghaoz/gorse,latest,/docker/gorse-server/Dockerfile,ENV,1,['USER root']
zhenghaoz/gorse,latest,/docker/gorse-server/Dockerfile,ENTRYPOINT,1,"['[""/usr/bin/gorse-server""]']"
flashlight/flashlight,latest,/.docker/Dockerfile-CUDA-Base,FROM,4,"['nvidia/cuda:11.1-cudnn8-devel-ubuntu20.04 as cuda_base_builder', 'cuda_base_builder as cuda_arrayfire', 'cuda_base_builder as cuda_kenlm', 'cuda_base_builder as cuda_final']"
flashlight/flashlight,latest,/.docker/Dockerfile-CUDA-Base,RUN,6,"['ln -s /usr/local/cuda/lib64/stubs/libcuda.so /usr/lib/libcuda.so.1', 'rm -rf /var/lib/apt/lists/*            /etc/apt/sources.list.d/cuda.list            /etc/apt/sources.list.d/nvidia-ml.list &&     apt-get update && DEBIAN_FRONTEND=noninteractive $APT_INSTALL         build-essential         ca-certificates         wget         git         g++         cmake         apt-transport-https gpg-agent gnupg2         libboost-thread-dev libboost-test-dev libboost-system-dev libboost-program-options-dev         libboost-stacktrace-dev         libfftw3-dev         openssh-server openssh-client         libopenmpi-dev openmpi-bin         zlib1g-dev libbz2-dev liblzma-dev &&     apt-get clean &&     apt-get -y autoremove &&     rm -rf /var/lib/apt/lists/*', 'cd /tmp &&     git clone --branch v3.7.3 --depth 1 --recursive --shallow-submodules https://github.com/arrayfire/arrayfire.git &&     mkdir -p arrayfire/build && cd arrayfire/build &&     CXXFLAGS=-DOS_LNX cmake .. -DCMAKE_BUILD_TYPE=Release                                -DCMAKE_INSTALL_PREFIX=/opt/arrayfire                                -DAF_BUILD_CUDA=ON                                -DAF_BUILD_CPU=OFF                                -DAF_BUILD_OPENCL=OFF                                -DAF_BUILD_EXAMPLES=OFF                                -DAF_WITH_IMAGEIO=OFF                                -DBUILD_TESTING=OFF                                -DAF_BUILD_DOCS=OFF &&     make install -j$(nproc)', 'cd /tmp && git clone https://github.com/kpu/kenlm.git &&     cd kenlm && git checkout 0c4dd4e &&     mkdir build && cd build &&     cmake .. -DCMAKE_BUILD_TYPE=Release              -DCMAKE_INSTALL_PREFIX=/opt/kenlm              -DCMAKE_POSITION_INDEPENDENT_CODE=ON &&     make install -j$(nproc)', 'apt-get update &&     DEBIAN_FRONTEND=noninteractive $APT_INSTALL         vim         emacs         nano         htop         libnccl2 libnccl-dev         libsndfile1-dev         cpio         libgflags-dev libgflags2.2         libgoogle-glog-dev libgoogle-glog0v5         sox libsox-dev python3-dev python3-pip python3-distutils &&         python3 -m pip --no-cache-dir install --upgrade setuptools numpy sox tqdm &&     apt-get clean &&     apt-get -y autoremove &&     rm -rf /var/lib/apt/lists/*', ""cd /tmp && wget https://apt.repos.intel.com/intel-gpg-keys/GPG-PUB-KEY-INTEL-SW-PRODUCTS-2019.PUB &&     apt-key add GPG-PUB-KEY-INTEL-SW-PRODUCTS-2019.PUB &&     sh -c 'echo deb https://apt.repos.intel.com/mkl all main > /etc/apt/sources.list.d/intel-mkl.list' &&     apt-get update && DEBIAN_FRONTEND=noninteractive $APT_INSTALL intel-mkl-64bit-2020.4-912 &&     apt-get clean &&     apt-get -y autoremove &&     rm -rf /var/lib/apt/lists/* /tmp/*""]"
flashlight/flashlight,latest,/.docker/Dockerfile-CUDA-Base,ENV,3,"['APT_INSTALL=""apt-get install -y --no-install-recommends""', 'DEBIAN_FRONTEND=noninteractive', 'KENLM_ROOT=/opt/kenlm']"
flashlight/flashlight,latest,/.docker/Dockerfile-CUDA-Base,COPY,2,"['--from=cuda_arrayfire  /opt/arrayfire  /opt/arrayfire', '--from=cuda_kenlm      /opt/kenlm      /opt/kenlm']"
flashlight/flashlight,latest,/.docker/Dockerfile-CUDA,FROM,1,['flml/flashlight:cuda-base-consolidation-latest']
flashlight/flashlight,latest,/.docker/Dockerfile-CUDA,ENV,1,"['MKLROOT=""/opt/intel/mkl""']"
flashlight/flashlight,latest,/.docker/Dockerfile-CUDA,RUN,2,"['mkdir /root/flashlight', 'cd /root/flashlight && mkdir -p build &&     cd build && cmake .. -DCMAKE_BUILD_TYPE=Release                          -DCMAKE_INSTALL_PREFIX=/opt/flashlight                          -DFL_BACKEND=CUDA                          -DFL_BUILD_ALL_APPS=ON &&     make install -j$(nproc)']"
flashlight/flashlight,latest,/.docker/Dockerfile-CUDA,COPY,1,['. /root/flashlight']
flashlight/flashlight,latest,/.docker/Dockerfile-CPU-Base,FROM,6,"['ubuntu:20.04 as cpu_base_builder', 'cpu_base_builder as cpu_arrayfire', 'cpu_base_builder as cpu_onednn', 'cpu_base_builder as cpu_gloo', 'cpu_base_builder as cpu_kenlm', 'cpu_base_builder as cpu_final']"
flashlight/flashlight,latest,/.docker/Dockerfile-CPU-Base,ENV,3,"['APT_INSTALL=""apt-get install -y --no-install-recommends""', 'MKLROOT=""/opt/intel/mkl""', 'KENLM_ROOT=/opt/kenlm']"
flashlight/flashlight,latest,/.docker/Dockerfile-CPU-Base,RUN,7,"['apt-get update &&     DEBIAN_FRONTEND=noninteractive $APT_INSTALL         build-essential         ca-certificates         wget         git         g++         cmake         apt-transport-https gpg-agent gnupg2         libboost-thread-dev libboost-test-dev libboost-system-dev libboost-program-options-dev         libboost-stacktrace-dev         libopenblas-dev liblapacke-dev         libatlas3-base libatlas-base-dev liblapacke-dev         libfftw3-dev         openssh-server openssh-client         libopenmpi-dev openmpi-bin         zlib1g-dev libbz2-dev liblzma-dev &&     apt-get clean &&     apt-get -y autoremove &&     rm -rf /var/lib/apt/lists/*', 'cd /tmp && git clone --branch v3.7.3 --depth 1 --recursive --shallow-submodules https://github.com/arrayfire/arrayfire.git &&     mkdir -p arrayfire/build && cd arrayfire/build &&     cmake .. -DCMAKE_BUILD_TYPE=Release              -DCMAKE_INSTALL_PREFIX=/opt/arrayfire              -DAF_BUILD_CPU=ON              -DAF_BUILD_CUDA=OFF              -DAF_BUILD_OPENCL=OFF              -DAF_BUILD_EXAMPLES=OFF              -DAF_WITH_IMAGEIO=OFF              -DBUILD_TESTING=OFF              -DAF_BUILD_DOCS=OFF &&     make install -j$(nproc)', 'cd /tmp && git clone --branch v2.0 --depth 1 https://github.com/oneapi-src/onednn.git &&     mkdir -p onednn/build && cd onednn/build &&     cmake .. -DCMAKE_BUILD_TYPE=Release              -DCMAKE_INSTALL_PREFIX=/opt/onednn              -DDNNL_BUILD_EXAMPLES=OFF &&     make install -j$(nproc)', 'cd /tmp && git clone https://github.com/facebookincubator/gloo.git &&     cd gloo && git checkout 1da2117 && mkdir build && cd build &&     cmake .. -DCMAKE_BUILD_TYPE=Release              -DCMAKE_INSTALL_PREFIX=/opt/gloo              -DUSE_MPI=ON &&     make install -j$(nproc)', 'cd /tmp && git clone https://github.com/kpu/kenlm.git &&     cd kenlm && git checkout 0c4dd4e &&     mkdir build && cd build &&     cmake .. -DCMAKE_BUILD_TYPE=Release              -DCMAKE_INSTALL_PREFIX=/opt/kenlm              -DCMAKE_POSITION_INDEPENDENT_CODE=ON &&     make install -j$(nproc)', 'apt-get update &&     DEBIAN_FRONTEND=noninteractive $APT_INSTALL         vim         emacs         nano         htop         libsndfile1-dev         libgflags-dev libgflags2.2         libgoogle-glog-dev libgoogle-glog0v5         sox libsox-dev python3-dev python3-pip python3-distutils &&         python3 -m pip --no-cache-dir install --upgrade setuptools numpy sox tqdm &&     apt-get clean &&     apt-get -y autoremove &&     rm -rf /var/lib/apt/lists/*', ""cd /tmp && wget https://apt.repos.intel.com/intel-gpg-keys/GPG-PUB-KEY-INTEL-SW-PRODUCTS-2019.PUB &&     apt-key add GPG-PUB-KEY-INTEL-SW-PRODUCTS-2019.PUB &&     sh -c 'echo deb https://apt.repos.intel.com/mkl all main > /etc/apt/sources.list.d/intel-mkl.list' &&     apt-get update && DEBIAN_FRONTEND=noninteractive $APT_INSTALL intel-mkl-64bit-2020.4-912 &&     apt-get clean &&     apt-get -y autoremove &&     rm -rf /var/lib/apt/lists/* /tmp/*""]"
flashlight/flashlight,latest,/.docker/Dockerfile-CPU-Base,COPY,4,"['--from=cpu_arrayfire  /opt/arrayfire  /opt/arrayfire', '--from=cpu_onednn     /opt/onednn     /opt/onednn', '--from=cpu_gloo       /opt/gloo       /opt/gloo', '--from=cpu_kenlm      /opt/kenlm      /opt/kenlm']"
flashlight/flashlight,latest,/.docker/Dockerfile-CPU,FROM,1,['flml/flashlight:cpu-base-consolidation-latest']
flashlight/flashlight,latest,/.docker/Dockerfile-CPU,ENV,1,"['MKLROOT=""/opt/intel/mkl""']"
flashlight/flashlight,latest,/.docker/Dockerfile-CPU,RUN,2,"['mkdir /root/flashlight', 'cd /root/flashlight && mkdir -p build &&     cd build && cmake .. -DCMAKE_BUILD_TYPE=Release                          -DCMAKE_INSTALL_PREFIX=/opt/flashlight                          -DFL_BUILD_ALL_APPS=ON                          -DFL_BACKEND=CPU                          -DGloo_DIR=/opt/gloo/share/cmake                          -DDNNL_DIR=/opt/onednn/lib/cmake/dnnl &&     make install -j$(nproc)']"
flashlight/flashlight,latest,/.docker/Dockerfile-CPU,COPY,1,['. /root/flashlight']
zhreshold/mxnet-ssd,latest,/docker/mxnet_0.12/Dockerfile,FROM,1,['mxnet/python:gpu_0.12.0']
zhreshold/mxnet-ssd,latest,/docker/mxnet_0.12/Dockerfile,RUN,2,"['apt-get update && apt-get install -y         nano         wget         graphviz         python-tk', 'pip install ipython jupyter matplotlib scipy graphviz tensorboard future']"
zhreshold/mxnet-ssd,latest,/docker/mxnet_0.12/Dockerfile,WORKDIR,1,['/mxnet/example/ssd']
zhreshold/mxnet-ssd,latest,/docker/cudnn5.1/Dockerfile,FROM,1,['nvidia/cuda:8.0-cudnn5-devel-ubuntu14.04']
zhreshold/mxnet-ssd,latest,/docker/cudnn5.1/Dockerfile,MAINTAINER,1,['DavidSolomon <solomond78@gmail.com>']
zhreshold/mxnet-ssd,latest,/docker/cudnn5.1/Dockerfile,RUN,6,"['apt-get update && apt-get install -y   nano   git   libopenblas-dev   libopencv-dev   python-dev   python-numpy   python-setuptools   python-opencv   python-matplotlib   python-tk   wget   graphviz', ""cd /root && git clone --recursive https://github.com/zhreshold/mxnet-ssd.git && cd mxnet-ssd/mxnet &&   cp make/config.mk config.mk &&   sed -i 's/USE_BLAS = atlas/USE_BLAS = openblas/g' config.mk &&   sed -i 's/USE_CUDA = 0/USE_CUDA = 1/g' config.mk &&   sed -i 's/USE_CUDA_PATH = NONE/USE_CUDA_PATH = \\/usr\\/local\\/cuda/g' config.mk &&   sed -i 's/USE_CUDNN = 0/USE_CUDNN = 1/g' config.mk &&   make -j $(nproc)"", 'cd /root/mxnet-ssd/mxnet/python && python setup.py install', 'echo ""export PYTHONPATH=$/root/mxnet-ssd/mxnet/python:$PYTHONPATH"" >> /root/.bashrc', 'easy_install -U pip', 'pip install graphviz jupyter ipython matplotlib tensorboard future scipy']"
zhreshold/mxnet-ssd,latest,/docker/cudnn5.1/Dockerfile,WORKDIR,1,['/root/mxnet-ssd']
zhreshold/mxnet-ssd,latest,/docker/mxnet_0_11/Dockerfile,FROM,1,['mxnet/python:gpu_0.11.0']
zhreshold/mxnet-ssd,latest,/docker/mxnet_0_11/Dockerfile,RUN,2,"['apt-get update && apt-get install -y         nano         wget         graphviz         python-tk', 'pip install ipython jupyter matplotlib scipy graphviz tensorboard future']"
zhreshold/mxnet-ssd,latest,/docker/mxnet_0_11/Dockerfile,WORKDIR,1,['/mxnet/example/ssd']
zhreshold/mxnet-ssd,latest,/docker/cudnn6.0/Dockerfile,FROM,1,['nvidia/cuda:8.0-cudnn6-devel-ubuntu14.04']
zhreshold/mxnet-ssd,latest,/docker/cudnn6.0/Dockerfile,MAINTAINER,1,['DavidSolomon <solomond78@gmail.com>']
zhreshold/mxnet-ssd,latest,/docker/cudnn6.0/Dockerfile,RUN,6,"['apt-get update && apt-get install -y   nano   git   libopenblas-dev   libopencv-dev   python-dev   python-numpy   python-setuptools   python-opencv   python-matplotlib   python-tk   wget   graphviz', ""cd /root && git clone --recursive https://github.com/zhreshold/mxnet-ssd.git && cd mxnet-ssd/mxnet &&   cp make/config.mk config.mk &&   sed -i 's/USE_BLAS = atlas/USE_BLAS = openblas/g' config.mk &&   sed -i 's/USE_CUDA = 0/USE_CUDA = 1/g' config.mk &&   sed -i 's/USE_CUDA_PATH = NONE/USE_CUDA_PATH = \\/usr\\/local\\/cuda/g' config.mk &&   sed -i 's/USE_CUDNN = 0/USE_CUDNN = 1/g' config.mk &&   make -j $(nproc)"", 'cd /root/mxnet-ssd/mxnet/python && python setup.py install', 'echo ""export PYTHONPATH=$/root/mxnet-ssd/mxnet/python:$PYTHONPATH"" >> /root/.bashrc', 'easy_install -U pip', 'pip install graphviz jupyter ipython matplotlib tensorboard future scipy']"
zhreshold/mxnet-ssd,latest,/docker/cudnn6.0/Dockerfile,WORKDIR,1,['/root/mxnet-ssd']
hooram/ownphotos,latest,/Dockerfile,FROM,1,['ubuntu:16.04']
hooram/ownphotos,latest,/Dockerfile,MAINTAINER,1,['Hooram Nam <nhooram@gmail.com>']
hooram/ownphotos,latest,/Dockerfile,ENV,19,"['MAPZEN_API_KEY mapzen-XXXX', 'MAPBOX_API_KEY mapbox-XXXX', 'ALLOWED_HOSTS=*', 'ADMIN_EMAIL admin@dot.com', 'ADMIN_USERNAME admin', 'ADMIN_PASSWORD changeme', 'SECRET_KEY supersecretkey', 'DEBUG true', 'DB_BACKEND postgresql', 'DB_NAME ownphotos', 'DB_USER ownphotos', 'DB_PASS ownphotos', 'DB_HOST database', 'DB_PORT 5432', 'BACKEND_HOST localhost', 'FRONTEND_HOST localhost', 'REDIS_HOST redis', 'REDIS_PORT 11211', 'TIME_ZONE UTC']"
hooram/ownphotos,latest,/Dockerfile,RUN,21,"['apt-get update &&     apt-get install -y     libsm6     libboost-all-dev     libglib2.0-0     libxrender-dev     wget     curl     nginx', 'apt-get install -y bzip2', 'wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh', 'bash Miniconda3-latest-Linux-x86_64.sh -b -p /miniconda', '/miniconda/bin/conda install -y faiss-cpu -c pytorch', '/miniconda/bin/conda install -y cython', 'apt-get update &&     apt-get install -y cmake git build-essential &&     git clone https://github.com/davisking/dlib.git &&     mkdir /dlib/build &&     cd /dlib/build &&     cmake .. -DDLIB_USE_CUDA=0 -DUSE_AVX_INSTRUCTIONS=0 &&     cmake --build . &&     cd /dlib &&     /miniconda/bin/python setup.py install --no USE_AVX_INSTRUCTIONS --no DLIB_USE_CUDA', '/miniconda/bin/conda install -y pytorch=0.4.1 -c pytorch', '/miniconda/bin/conda install -y psycopg2', 'mkdir /code', '/miniconda/bin/pip install -r requirements.txt', '/miniconda/bin/python -m spacy download en_core_web_sm', 'wget https://s3.eu-central-1.amazonaws.com/ownphotos-deploy/places365_model.tar.gz', 'tar xf places365_model.tar.gz', 'wget https://s3.eu-central-1.amazonaws.com/ownphotos-deploy/im2txt_model.tar.gz', 'tar xf im2txt_model.tar.gz', 'wget https://s3.eu-central-1.amazonaws.com/ownphotos-deploy/im2txt_data.tar.gz', 'tar xf im2txt_data.tar.gz', 'rm -rf /var/lib/apt/lists/*', 'apt-get remove --purge -y cmake git &&     rm -rf /var/lib/apt/lists/*', 'mv /code/config_docker.py /code/config.py']"
hooram/ownphotos,latest,/Dockerfile,WORKDIR,4,"['/code', '/code/api/places365', '/code/api/im2txt', '/code']"
hooram/ownphotos,latest,/Dockerfile,COPY,2,"['requirements.txt /code/', '. /code']"
hooram/ownphotos,latest,/Dockerfile,VOLUME,1,['/data']
hooram/ownphotos,latest,/Dockerfile,EXPOSE,1,['80']
hooram/ownphotos,latest,/Dockerfile,ENTRYPOINT,1,['./entrypoint.sh']
bentoml/BentoML,latest,/docker/Dockerfile,FROM,1,['debian:buster-slim']
bentoml/BentoML,latest,/docker/Dockerfile,LABEL,1,"['maintainer=""BentoML Contributor <contact@bentoml.ai>""']"
bentoml/BentoML,latest,/docker/Dockerfile,ENV,1,['DOCKER_BUILDKIT=1']
bentoml/BentoML,latest,/docker/Dockerfile,RUN,8,"['apt-get update &&     apt-get install -y python3 python3-pip bash curl build-essential', 'curl -sSL https://get.docker.com/ | sh', 'curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python3', 'chmod a+rwx /etc/bash.bashrc', 'if [ ! -e /usr/bin/pip ]; then         ln -s pip3 /usr/bin/pip;     fi', 'if [ ! -e /usr/bin/python ]; then         ln -sf /usr/bin/python3 /usr/bin/python;     fi', 'python -m pip install --upgrade pip setuptools', '. $HOME/.poetry/env &&     poetry config virtualenvs.create false &&     poetry install']"
bentoml/BentoML,latest,/docker/Dockerfile,SHELL,1,"['[""/bin/bash"", ""-exo"", ""pipefail"", ""-c""]']"
bentoml/BentoML,latest,/docker/Dockerfile,WORKDIR,1,['/bentoml']
bentoml/BentoML,latest,/docker/Dockerfile,VOLUME,1,"['[""/bentoml""]']"
bentoml/BentoML,latest,/docker/Dockerfile,COPY,2,"['pyproject.toml .', 'tools/bashrc /etc/bash.bashrc']"
bentoml/BentoML,latest,/docker/generated/bento-server/debian10/Dockerfile,FROM,1,['debian:buster-slim']
bentoml/BentoML,latest,/docker/generated/bento-server/debian10/Dockerfile,ENV,5,"['LANG=C.UTF-8', 'LC_ALL=C.UTF-8', 'PYTHONDONTWRITEBYTECODE=1', 'PATH /opt/conda/bin:$PATH', 'DEBIAN_FRONTEND noninteractive']"
bentoml/BentoML,latest,/docker/generated/bento-server/debian10/Dockerfile,ARG,1,['PYTHON_VERSION']
bentoml/BentoML,latest,/docker/generated/bento-server/debian10/Dockerfile,SHELL,1,"['[""/bin/bash"",""-exo"", ""pipefail"", ""-c""]']"
bentoml/BentoML,latest,/docker/generated/bento-server/debian10/Dockerfile,RUN,4,"['apt-get update &&     apt-get install -q -y --no-install-recommends     ca-certificates curl wget git gnupg build-essential &&     apt-get clean &&     rm -rf /var/lib/apt/lists/*', 'wget --quiet https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O ~/miniconda.sh &&     chmod +x ~/miniconda.sh &&     ~/miniconda.sh -b -p /opt/conda &&     rm ~/miniconda.sh &&     ln -s /opt/conda/etc/profile.d/conda.sh /etc/profile.d/conda.sh &&     echo "". /opt/conda/etc/profile.d/conda.sh"" >> ~/.bashrc &&     echo ""conda activate base"" >> ~/.bashrc &&     find /opt/conda/ -follow -type f -name \'*.a\' -delete &&     find /opt/conda/ -follow -type f -name \'*.js.map\' -delete &&     /opt/conda/bin/conda clean -afy &&     apt-get clean && apt-get autoremove -y &&     apt-get purge -y wget', '/opt/conda/bin/conda install -y python=$PYTHON_VERSION pip &&     /opt/conda/bin/conda clean -afy', 'chmod a+r /etc/bash.bashrc']"
bentoml/BentoML,latest,/docker/generated/bento-server/debian10/Dockerfile,COPY,1,['tools/bashrc /etc/bash.bashrc']
bentoml/BentoML,latest,/docker/generated/bento-server/debian10/devel/Dockerfile,ARG,1,['PYTHON_VERSION']
bentoml/BentoML,latest,/docker/generated/bento-server/debian10/devel/Dockerfile,FROM,1,['bento-server:base-python$PYTHON_VERSION-debian as build_image']
bentoml/BentoML,latest,/docker/generated/bento-server/debian10/devel/Dockerfile,WORKDIR,1,['/']
bentoml/BentoML,latest,/docker/generated/bento-server/debian10/devel/Dockerfile,RUN,1,['pip install -U git+https://github.com/bentoml/bentoml.git@main &&     apt-get purge --auto-remove -y curl &&     rm -rf /var/lib/apt/lists/*']
bentoml/BentoML,latest,/docker/generated/bento-server/debian10/runtime/Dockerfile,ARG,1,['PYTHON_VERSION']
bentoml/BentoML,latest,/docker/generated/bento-server/debian10/runtime/Dockerfile,FROM,1,['bento-server:base-python$PYTHON_VERSION-debian as build_image']
bentoml/BentoML,latest,/docker/generated/bento-server/debian10/runtime/Dockerfile,ENV,1,['BENTOML_VERSION=1.0.0']
bentoml/BentoML,latest,/docker/generated/bento-server/debian10/runtime/Dockerfile,RUN,1,['pip install bentoml==${BENTOML_VERSION} --no-cache-dir']
bentoml/BentoML,latest,/docker/generated/bento-server/debian10/cudnn/Dockerfile,ARG,1,['PYTHON_VERSION']
bentoml/BentoML,latest,/docker/generated/bento-server/debian10/cudnn/Dockerfile,FROM,2,"['bento-server:base-python$PYTHON_VERSION-debian as build_image', 'build_image as release_image']"
bentoml/BentoML,latest,/docker/generated/bento-server/debian10/cudnn/Dockerfile,RUN,3,"['curl -fsSL https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2004/x86_64/7fa2af80.pub | apt-key add - &&     echo ""deb https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2004/x86_64 /"" >/etc/apt/sources.list.d/cuda.list &&     apt-get purge --auto-remove -y curl &&     rm -rf /var/lib/apt/lists/*', 'apt-get update && apt-get install -y --no-install-recommends         cuda-cudart-11-3=11.3.109-1         libcublas-11-3=11.5.1.109-1         libcurand-11-3=10.2.4.109-1         libcusparse-11-3=11.6.0.109-1         libcufft-11-3=10.4.2.109-1         libcusolver-11-3=11.1.2.109-1         libcudnn8=8.2.0.53-1+cuda11.3 &&     ln -s cuda-11.3 /usr/local/cuda &&     apt-mark hold libcudnn8 libcublas-11-3=11.5.1.109-1 &&     apt-get clean &&     rm -rf /var/lib/apt/lists/*', 'pip install bentoml==${BENTOML_VERSION} --no-cache-dir &&     rm -rf /var/lib/apt/lists/*']"
bentoml/BentoML,latest,/docker/generated/bento-server/debian10/cudnn/Dockerfile,ENV,6,"['PATH /usr/local/nvidia/bin:/usr/local/cuda/bin:$PATH', 'LD_LIBRARY_PATH /usr/local/nvidia/lib:/usr/local/nvidia/lib64:/usr/include/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu', 'NVIDIA_VISIBLE_DEVICES all', 'NVIDIA_DRIVER_CAPABILITIES compute,utility', 'NVIDIA_REQUIRE_CUDA ""cuda>=11.3 brand=tesla,driver>=418,driver<419 brand=tesla,driver>=440,driver<441 driver>=450""', 'BENTOML_VERSION=1.0.0']"
bentoml/BentoML,latest,/docker/generated/bento-server/amazonlinux2/Dockerfile,FROM,1,['amazonlinux:2']
bentoml/BentoML,latest,/docker/generated/bento-server/amazonlinux2/Dockerfile,ENV,2,"['PYTHONDONTWRITEBYTECODE=1', 'PATH /opt/conda/bin:$PATH']"
bentoml/BentoML,latest,/docker/generated/bento-server/amazonlinux2/Dockerfile,ARG,1,['PYTHON_VERSION']
bentoml/BentoML,latest,/docker/generated/bento-server/amazonlinux2/Dockerfile,SHELL,1,"['[""/bin/bash"",""-exo"", ""pipefail"", ""-c""]']"
bentoml/BentoML,latest,/docker/generated/bento-server/amazonlinux2/Dockerfile,RUN,4,"['yum upgrade -y     && yum install -y wget git ca-certificates curl gcc gcc-c++ make     && yum clean all     && rm -rf /var/cache/yum', 'wget --quiet https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O ~/miniconda.sh &&     chmod +x ~/miniconda.sh &&     ~/miniconda.sh -b -p /opt/conda &&     rm ~/miniconda.sh &&     ln -s /opt/conda/etc/profile.d/conda.sh /etc/profile.d/conda.sh &&     echo "". /opt/conda/etc/profile.d/conda.sh"" >> ~/.bashrc &&     echo ""conda activate base"" >> ~/.bashrc &&     find /opt/conda/ -follow -type f -name \'*.a\' -delete &&     find /opt/conda/ -follow -type f -name \'*.js.map\' -delete &&     /opt/conda/bin/conda clean -afy &&     yum clean all &&     yum autoremove -y wget &&     rm -rf /var/cache/yum', '/opt/conda/bin/conda install -y python=$PYTHON_VERSION pip &&     /opt/conda/bin/conda clean -afy', 'chmod a+r /etc/bash.bashrc']"
bentoml/BentoML,latest,/docker/generated/bento-server/amazonlinux2/Dockerfile,COPY,1,['tools/bashrc /etc/bash.bashrc']
bentoml/BentoML,latest,/docker/generated/bento-server/amazonlinux2/runtime/Dockerfile,ARG,1,['PYTHON_VERSION']
bentoml/BentoML,latest,/docker/generated/bento-server/amazonlinux2/runtime/Dockerfile,FROM,1,['bento-server:base-python$PYTHON_VERSION-amazonlinux2 as build_image']
bentoml/BentoML,latest,/docker/generated/bento-server/amazonlinux2/runtime/Dockerfile,ENV,1,['BENTOML_VERSION=1.0.0']
bentoml/BentoML,latest,/docker/generated/bento-server/amazonlinux2/runtime/Dockerfile,RUN,1,['pip install bentoml==${BENTOML_VERSION} --no-cache-dir']
bentoml/BentoML,latest,/docker/generated/bento-server/centos7/Dockerfile,FROM,1,['centos:7']
bentoml/BentoML,latest,/docker/generated/bento-server/centos7/Dockerfile,ENV,2,"['PYTHONDONTWRITEBYTECODE=1', 'PATH /opt/conda/bin:$PATH']"
bentoml/BentoML,latest,/docker/generated/bento-server/centos7/Dockerfile,ARG,1,['PYTHON_VERSION']
bentoml/BentoML,latest,/docker/generated/bento-server/centos7/Dockerfile,SHELL,1,"['[""/bin/bash"",""-exo"", ""pipefail"", ""-c""]']"
bentoml/BentoML,latest,/docker/generated/bento-server/centos7/Dockerfile,RUN,4,"['yum upgrade -y     && yum install -y wget git ca-certificates curl gcc gcc-c++ make     && yum clean all     && rm -rf /var/cache/yum', 'wget --quiet https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O ~/miniconda.sh &&     chmod +x ~/miniconda.sh &&     ~/miniconda.sh -b -p /opt/conda &&     rm ~/miniconda.sh &&     ln -s /opt/conda/etc/profile.d/conda.sh /etc/profile.d/conda.sh &&     echo "". /opt/conda/etc/profile.d/conda.sh"" >> ~/.bashrc &&     echo ""conda activate base"" >> ~/.bashrc &&     find /opt/conda/ -follow -type f -name \'*.a\' -delete &&     find /opt/conda/ -follow -type f -name \'*.js.map\' -delete &&     /opt/conda/bin/conda clean -afy &&     yum clean all &&     yum autoremove -y wget &&     rm -rf /var/cache/yum', '/opt/conda/bin/conda install -y python=$PYTHON_VERSION pip &&     /opt/conda/bin/conda clean -afy', 'chmod a+r /etc/bash.bashrc']"
bentoml/BentoML,latest,/docker/generated/bento-server/centos7/Dockerfile,COPY,1,['tools/bashrc /etc/bash.bashrc']
bentoml/BentoML,latest,/docker/generated/bento-server/centos7/devel/Dockerfile,ARG,1,['PYTHON_VERSION']
bentoml/BentoML,latest,/docker/generated/bento-server/centos7/devel/Dockerfile,FROM,1,['bento-server:base-python$PYTHON_VERSION-centos7 as build_image']
bentoml/BentoML,latest,/docker/generated/bento-server/centos7/devel/Dockerfile,WORKDIR,1,['/']
bentoml/BentoML,latest,/docker/generated/bento-server/centos7/devel/Dockerfile,RUN,1,['pip install -U git+https://github.com/bentoml/bentoml.git@main']
bentoml/BentoML,latest,/docker/generated/bento-server/centos7/runtime/Dockerfile,ARG,1,['PYTHON_VERSION']
bentoml/BentoML,latest,/docker/generated/bento-server/centos7/runtime/Dockerfile,FROM,1,['bento-server:base-python$PYTHON_VERSION-centos7 as build_image']
bentoml/BentoML,latest,/docker/generated/bento-server/centos7/runtime/Dockerfile,ENV,1,['BENTOML_VERSION=1.0.0']
bentoml/BentoML,latest,/docker/generated/bento-server/centos7/runtime/Dockerfile,RUN,1,['pip install bentoml==${BENTOML_VERSION} --no-cache-dir']
bentoml/BentoML,latest,/docker/generated/bento-server/centos7/cudnn/Dockerfile,ARG,1,['PYTHON_VERSION']
bentoml/BentoML,latest,/docker/generated/bento-server/centos7/cudnn/Dockerfile,FROM,2,"['bento-server:base-python$PYTHON_VERSION-centos7 as build_image', 'build_image as release_image']"
bentoml/BentoML,latest,/docker/generated/bento-server/centos7/cudnn/Dockerfile,RUN,3,"['NVIDIA_GPGKEY_SUM=d1be581509378368edeec8c1eb2958702feedf3bc3d17011adbf24efacce4ab5 &&     curl -fsSL https://developer.download.nvidia.com/compute/cuda/repos/rhel7/x86_64/7fa2af80.pub | sed \'/^Version/d\' > /etc/pki/rpm-gpg/RPM-GPG-KEY-NVIDIA &&     echo ""$NVIDIA_GPGKEY_SUM  /etc/pki/rpm-gpg/RPM-GPG-KEY-NVIDIA"" | sha256sum -c --strict -', 'yum upgrade -y && yum install -y         cuda-cudart-11-3         cuda-compat-11-3         libcublas-11-3-11.5.1.109-1         libcurand-11-3-10.2.4.109-1         libcusparse-11-3-11.6.0.109-1         libcufft-11-3-10.4.2.109-1         libcusolver-11-3-11.1.2.109-1         libcudnn8-8.2.0.53-1.cuda11.3 &&     ln -s cuda-11.3 /usr/local/cuda &&     yum clean all &&     rm -rf /var/cache/yum', 'pip install bentoml==${BENTOML_VERSION} --no-cache-dir']"
bentoml/BentoML,latest,/docker/generated/bento-server/centos7/cudnn/Dockerfile,COPY,2,"['generated/bento-server/centos7/cudnn/cuda.repo /etc/yum.repos.d/cuda.repo', 'generated/bento-server/centos7/cudnn/nvidia-ml.repo /etc/yum.repos.d/nvidia-ml.repo']"
bentoml/BentoML,latest,/docker/generated/bento-server/centos7/cudnn/Dockerfile,ENV,6,"['PATH /usr/local/nvidia/bin:/usr/local/cuda/bin:$PATH', 'LD_LIBRARY_PATH /usr/local/nvidia/lib:/usr/local/nvidia/lib64:/usr/include/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu', 'NVIDIA_VISIBLE_DEVICES all', 'NVIDIA_DRIVER_CAPABILITIES compute,utility', 'NVIDIA_REQUIRE_CUDA ""cuda>=11.3 brand=tesla,driver>=418,driver<419 brand=tesla,driver>=440,driver<441 driver>=450""', 'BENTOML_VERSION=1.0.0']"
bentoml/BentoML,latest,/docker/generated/bento-server/centos8/Dockerfile,FROM,1,['centos:8']
bentoml/BentoML,latest,/docker/generated/bento-server/centos8/Dockerfile,ENV,2,"['PYTHONDONTWRITEBYTECODE=1', 'PATH /opt/conda/bin:$PATH']"
bentoml/BentoML,latest,/docker/generated/bento-server/centos8/Dockerfile,ARG,1,['PYTHON_VERSION']
bentoml/BentoML,latest,/docker/generated/bento-server/centos8/Dockerfile,SHELL,1,"['[""/bin/bash"",""-exo"", ""pipefail"", ""-c""]']"
bentoml/BentoML,latest,/docker/generated/bento-server/centos8/Dockerfile,RUN,4,"['yum upgrade -y     && yum install -y wget git ca-certificates curl gcc gcc-c++ make     && yum clean all     && rm -rf /var/cache/yum', 'wget --quiet https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O ~/miniconda.sh &&     chmod +x ~/miniconda.sh &&     ~/miniconda.sh -b -p /opt/conda &&     rm ~/miniconda.sh &&     ln -s /opt/conda/etc/profile.d/conda.sh /etc/profile.d/conda.sh &&     echo "". /opt/conda/etc/profile.d/conda.sh"" >> ~/.bashrc &&     echo ""conda activate base"" >> ~/.bashrc &&     find /opt/conda/ -follow -type f -name \'*.a\' -delete &&     find /opt/conda/ -follow -type f -name \'*.js.map\' -delete &&     /opt/conda/bin/conda clean -afy &&     yum clean all &&     yum autoremove -y wget &&     rm -rf /var/cache/yum', '/opt/conda/bin/conda install -y python=$PYTHON_VERSION pip &&     /opt/conda/bin/conda clean -afy', 'chmod a+r /etc/bash.bashrc']"
bentoml/BentoML,latest,/docker/generated/bento-server/centos8/Dockerfile,COPY,1,['tools/bashrc /etc/bash.bashrc']
bentoml/BentoML,latest,/docker/generated/bento-server/centos8/devel/Dockerfile,ARG,1,['PYTHON_VERSION']
bentoml/BentoML,latest,/docker/generated/bento-server/centos8/devel/Dockerfile,FROM,1,['bento-server:base-python$PYTHON_VERSION-centos8 as build_image']
bentoml/BentoML,latest,/docker/generated/bento-server/centos8/devel/Dockerfile,WORKDIR,1,['/']
bentoml/BentoML,latest,/docker/generated/bento-server/centos8/devel/Dockerfile,RUN,1,['pip install -U git+https://github.com/bentoml/bentoml.git@main']
bentoml/BentoML,latest,/docker/generated/bento-server/centos8/runtime/Dockerfile,ARG,1,['PYTHON_VERSION']
bentoml/BentoML,latest,/docker/generated/bento-server/centos8/runtime/Dockerfile,FROM,1,['bento-server:base-python$PYTHON_VERSION-centos8 as build_image']
bentoml/BentoML,latest,/docker/generated/bento-server/centos8/runtime/Dockerfile,ENV,1,['BENTOML_VERSION=1.0.0']
bentoml/BentoML,latest,/docker/generated/bento-server/centos8/runtime/Dockerfile,RUN,1,['pip install bentoml==${BENTOML_VERSION} --no-cache-dir']
bentoml/BentoML,latest,/docker/generated/bento-server/centos8/cudnn/Dockerfile,ARG,1,['PYTHON_VERSION']
bentoml/BentoML,latest,/docker/generated/bento-server/centos8/cudnn/Dockerfile,FROM,2,"['bento-server:base-python$PYTHON_VERSION-centos8 as build_image', 'build_image as release_image']"
bentoml/BentoML,latest,/docker/generated/bento-server/centos8/cudnn/Dockerfile,RUN,3,"['NVIDIA_GPGKEY_SUM=d1be581509378368edeec8c1eb2958702feedf3bc3d17011adbf24efacce4ab5 &&     curl -fsSL https://developer.download.nvidia.com/compute/cuda/repos/rhel8/x86_64/7fa2af80.pub | sed \'/^Version/d\' > /etc/pki/rpm-gpg/RPM-GPG-KEY-NVIDIA &&     echo ""$NVIDIA_GPGKEY_SUM  /etc/pki/rpm-gpg/RPM-GPG-KEY-NVIDIA"" | sha256sum -c --strict -', 'yum upgrade -y && yum install -y         cuda-cudart-11-3         cuda-compat-11-3         libcublas-11-3-11.5.1.109-1         libcurand-11-3-10.2.4.109-1         libcusparse-11-3-11.6.0.109-1         libcufft-11-3-10.4.2.109-1         libcusolver-11-3-11.1.2.109-1         libcudnn8-8.2.0.53-1.cuda11.3 &&     ln -s cuda-11.3 /usr/local/cuda &&     yum clean all &&     rm -rf /var/cache/yum', 'pip install bentoml==${BENTOML_VERSION} --no-cache-dir']"
bentoml/BentoML,latest,/docker/generated/bento-server/centos8/cudnn/Dockerfile,COPY,2,"['generated/bento-server/centos8/cudnn/cuda.repo /etc/yum.repos.d/cuda.repo', 'generated/bento-server/centos8/cudnn/nvidia-ml.repo /etc/yum.repos.d/nvidia-ml.repo']"
bentoml/BentoML,latest,/docker/generated/bento-server/centos8/cudnn/Dockerfile,ENV,6,"['PATH /usr/local/nvidia/bin:/usr/local/cuda/bin:$PATH', 'LD_LIBRARY_PATH /usr/local/nvidia/lib:/usr/local/nvidia/lib64:/usr/include/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu', 'NVIDIA_VISIBLE_DEVICES all', 'NVIDIA_DRIVER_CAPABILITIES compute,utility', 'NVIDIA_REQUIRE_CUDA ""cuda>=11.3 brand=tesla,driver>=418,driver<419 brand=tesla,driver>=440,driver<441 driver>=450""', 'BENTOML_VERSION=1.0.0']"
bentoml/BentoML,latest,/docker/generated/bento-server/alpine3.14/Dockerfile,FROM,2,"['alpine:3.14 as alpine-glibc', 'alpine-glibc']"
bentoml/BentoML,latest,/docker/generated/bento-server/alpine3.14/Dockerfile,ENV,5,"['LANG=C.UTF-8', 'LC_ALL=C.UTF-8', 'PYTHONDONTWRITEBYTECODE=1', 'PATH /opt/conda/bin:/usr/local/bin:$PATH', 'ENV /root/.shinit']"
bentoml/BentoML,latest,/docker/generated/bento-server/alpine3.14/Dockerfile,ARG,1,['PYTHON_VERSION']
bentoml/BentoML,latest,/docker/generated/bento-server/alpine3.14/Dockerfile,RUN,3,"['ALPINE_GLIBC_BASE_URL=""https://github.com/sgerrand/alpine-pkg-glibc/releases/download"" &&     ALPINE_GLIBC_PACKAGE_VERSION=""2.33-r0"" &&     ALPINE_GLIBC_BASE_PACKAGE_FILENAME=""glibc-$ALPINE_GLIBC_PACKAGE_VERSION.apk"" &&     ALPINE_GLIBC_BIN_PACKAGE_FILENAME=""glibc-bin-$ALPINE_GLIBC_PACKAGE_VERSION.apk"" &&     ALPINE_GLIBC_I18N_PACKAGE_FILENAME=""glibc-i18n-$ALPINE_GLIBC_PACKAGE_VERSION.apk"" &&     apk add --no-cache --virtual=.build-dependencies wget ca-certificates &&     echo         ""-----BEGIN PUBLIC KEY-----        MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEApZ2u1KJKUu/fW4A25y9m        y70AGEa/J3Wi5ibNVGNn1gT1r0VfgeWd0pUybS4UmcHdiNzxJPgoWQhV2SSW1JYu        tOqKZF5QSN6X937PTUpNBjUvLtTQ1ve1fp39uf/lEXPpFpOPL88LKnDBgbh7wkCp        m2KzLVGChf83MS0ShL6G9EQIAUxLm99VpgRjwqTQ/KfzGtpke1wqws4au0Ab4qPY        KXvMLSPLUp7cfulWvhmZSegr5AdhNw5KNizPqCJT8ZrGvgHypXyiFvvAH5YRtSsc        Zvo9GI2e2MaZyo9/lvb+LbLEJZKEQckqRj4P26gmASrZEPStwc+yqy1ShHLA0j6m        1QIDAQAB        -----END PUBLIC KEY-----"" | sed \'s/   */\\n/g\' > ""/etc/apk/keys/sgerrand.rsa.pub"" &&     wget --quiet         ""$ALPINE_GLIBC_BASE_URL/$ALPINE_GLIBC_PACKAGE_VERSION/$ALPINE_GLIBC_BASE_PACKAGE_FILENAME""         ""$ALPINE_GLIBC_BASE_URL/$ALPINE_GLIBC_PACKAGE_VERSION/$ALPINE_GLIBC_BIN_PACKAGE_FILENAME""         ""$ALPINE_GLIBC_BASE_URL/$ALPINE_GLIBC_PACKAGE_VERSION/$ALPINE_GLIBC_I18N_PACKAGE_FILENAME"" &&     apk add --no-cache         ""$ALPINE_GLIBC_BASE_PACKAGE_FILENAME""         ""$ALPINE_GLIBC_BIN_PACKAGE_FILENAME""         ""$ALPINE_GLIBC_I18N_PACKAGE_FILENAME"" &&         rm ""/etc/apk/keys/sgerrand.rsa.pub"" &&     /usr/glibc-compat/bin/localedef --force --inputfile POSIX --charmap UTF-8 ""$LANG"" || true &&     echo ""export LANG=$LANG"" > /etc/profile.d/locale.sh &&         apk del glibc-i18n &&         rm ""/root/.wget-hsts"" &&     apk del .build-dependencies &&     rm         ""$ALPINE_GLIBC_BASE_PACKAGE_FILENAME""         ""$ALPINE_GLIBC_BIN_PACKAGE_FILENAME""         ""$ALPINE_GLIBC_I18N_PACKAGE_FILENAME""', 'apk add --no-cache --virtual .build-dependencies ca-certificates wget     && wget --quiet https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O ~/miniconda.sh     && chmod +x ~/miniconda.sh     && ~/miniconda.sh -f -b -p /opt/conda     && conda update --all --yes     && conda config --set auto_update_conda False         && apk del --purge .build-dependencies     && rm -f ~/miniconda.sh     && find /opt/conda/ -follow -type f \\( -iname \'*.a\' -o -iname \'*.pyc\' -o -iname \'*.js.map\' \\) -delete     && ln -s /opt/conda/etc/profile.d/conda.sh /etc/profile.d/conda.sh     && echo "". /opt/conda/etc/profile.d/conda.sh"" >> ~/.shinit     && echo ""conda activate base"" >> ~/.shinit     && conda clean -afy', 'chmod a+r /etc/bash.bashrc']"
bentoml/BentoML,latest,/docker/generated/bento-server/alpine3.14/Dockerfile,CMD,1,"['[ ""/bin/sh"" ]']"
bentoml/BentoML,latest,/docker/generated/bento-server/alpine3.14/Dockerfile,COPY,1,['tools/bashrc /etc/bash.bashrc']
bentoml/BentoML,latest,/docker/generated/bento-server/alpine3.14/runtime/Dockerfile,ARG,1,['PYTHON_VERSION']
bentoml/BentoML,latest,/docker/generated/bento-server/alpine3.14/runtime/Dockerfile,FROM,1,['bento-server:base-python$PYTHON_VERSION-alpine3.14 as build_image']
bentoml/BentoML,latest,/docker/generated/bento-server/alpine3.14/runtime/Dockerfile,ENV,1,['BENTOML_VERSION=1.0.0']
bentoml/BentoML,latest,/docker/generated/bento-server/alpine3.14/runtime/Dockerfile,RUN,2,"['conda install -y python=$PYTHON_VERSION pip     && conda clean -afy     && apk add --no-cache bash git build-base', 'pip install bentoml==${BENTOML_VERSION} --no-cache-dir']"
bentoml/BentoML,latest,/docker/templates/alpine/base.Dockerfile.j2,{{,1,['metadata.header }}']
bentoml/BentoML,latest,/docker/templates/alpine/base.Dockerfile.j2,FROM,2,"['{{ metadata.base_image }} as alpine-glibc', 'alpine-glibc']"
bentoml/BentoML,latest,/docker/templates/alpine/base.Dockerfile.j2,{%,5,"['for key, value in metadata.envars.items() if key != ""BENTOML_VERSION""%}', 'if key in [""PYTHON_VERSION""] %}', 'else %}', 'endif %}', 'endfor %}']"
bentoml/BentoML,latest,/docker/templates/alpine/base.Dockerfile.j2,ARG,1,['{{ key }}']
bentoml/BentoML,latest,/docker/templates/alpine/base.Dockerfile.j2,ENV,3,"['{{ key }}={{ value }}', 'PATH /opt/conda/bin:/usr/local/bin:$PATH', 'ENV /root/.shinit']"
bentoml/BentoML,latest,/docker/templates/alpine/base.Dockerfile.j2,RUN,3,"['ALPINE_GLIBC_BASE_URL=""https://github.com/sgerrand/alpine-pkg-glibc/releases/download"" &&     ALPINE_GLIBC_PACKAGE_VERSION=""2.33-r0"" &&     ALPINE_GLIBC_BASE_PACKAGE_FILENAME=""glibc-$ALPINE_GLIBC_PACKAGE_VERSION.apk"" &&     ALPINE_GLIBC_BIN_PACKAGE_FILENAME=""glibc-bin-$ALPINE_GLIBC_PACKAGE_VERSION.apk"" &&     ALPINE_GLIBC_I18N_PACKAGE_FILENAME=""glibc-i18n-$ALPINE_GLIBC_PACKAGE_VERSION.apk"" &&     apk add --no-cache --virtual=.build-dependencies wget ca-certificates &&     echo         ""-----BEGIN PUBLIC KEY-----        MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEApZ2u1KJKUu/fW4A25y9m        y70AGEa/J3Wi5ibNVGNn1gT1r0VfgeWd0pUybS4UmcHdiNzxJPgoWQhV2SSW1JYu        tOqKZF5QSN6X937PTUpNBjUvLtTQ1ve1fp39uf/lEXPpFpOPL88LKnDBgbh7wkCp        m2KzLVGChf83MS0ShL6G9EQIAUxLm99VpgRjwqTQ/KfzGtpke1wqws4au0Ab4qPY        KXvMLSPLUp7cfulWvhmZSegr5AdhNw5KNizPqCJT8ZrGvgHypXyiFvvAH5YRtSsc        Zvo9GI2e2MaZyo9/lvb+LbLEJZKEQckqRj4P26gmASrZEPStwc+yqy1ShHLA0j6m        1QIDAQAB        -----END PUBLIC KEY-----"" | sed \'s/   */\\n/g\' > ""/etc/apk/keys/sgerrand.rsa.pub"" &&     wget --quiet         ""$ALPINE_GLIBC_BASE_URL/$ALPINE_GLIBC_PACKAGE_VERSION/$ALPINE_GLIBC_BASE_PACKAGE_FILENAME""         ""$ALPINE_GLIBC_BASE_URL/$ALPINE_GLIBC_PACKAGE_VERSION/$ALPINE_GLIBC_BIN_PACKAGE_FILENAME""         ""$ALPINE_GLIBC_BASE_URL/$ALPINE_GLIBC_PACKAGE_VERSION/$ALPINE_GLIBC_I18N_PACKAGE_FILENAME"" &&     apk add --no-cache         ""$ALPINE_GLIBC_BASE_PACKAGE_FILENAME""         ""$ALPINE_GLIBC_BIN_PACKAGE_FILENAME""         ""$ALPINE_GLIBC_I18N_PACKAGE_FILENAME"" &&         rm ""/etc/apk/keys/sgerrand.rsa.pub"" &&     /usr/glibc-compat/bin/localedef --force --inputfile POSIX --charmap UTF-8 ""$LANG"" || true &&     echo ""export LANG=$LANG"" > /etc/profile.d/locale.sh &&         apk del glibc-i18n &&         rm ""/root/.wget-hsts"" &&     apk del .build-dependencies &&     rm         ""$ALPINE_GLIBC_BASE_PACKAGE_FILENAME""         ""$ALPINE_GLIBC_BIN_PACKAGE_FILENAME""         ""$ALPINE_GLIBC_I18N_PACKAGE_FILENAME""', 'apk add --no-cache --virtual .build-dependencies ca-certificates wget     && wget --quiet https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O ~/miniconda.sh     && chmod +x ~/miniconda.sh     && ~/miniconda.sh -f -b -p /opt/conda     && conda update --all --yes     && conda config --set auto_update_conda False         && apk del --purge .build-dependencies     && rm -f ~/miniconda.sh     && find /opt/conda/ -follow -type f \\( -iname \'*.a\' -o -iname \'*.pyc\' -o -iname \'*.js.map\' \\) -delete     && ln -s /opt/conda/etc/profile.d/conda.sh /etc/profile.d/conda.sh     && echo "". /opt/conda/etc/profile.d/conda.sh"" >> ~/.shinit     && echo ""conda activate base"" >> ~/.shinit     && conda clean -afy', 'chmod a+r /etc/bash.bashrc']"
bentoml/BentoML,latest,/docker/templates/alpine/base.Dockerfile.j2,CMD,1,"['[ ""/bin/sh"" ]']"
bentoml/BentoML,latest,/docker/templates/alpine/base.Dockerfile.j2,COPY,1,['tools/bashrc /etc/bash.bashrc']
bentoml/BentoML,latest,/docker/templates/alpine/runtime.Dockerfile.j2,{{,1,['metadata.header }}']
bentoml/BentoML,latest,/docker/templates/alpine/runtime.Dockerfile.j2,ARG,1,['PYTHON_VERSION']
bentoml/BentoML,latest,/docker/templates/alpine/runtime.Dockerfile.j2,FROM,1,['{{ metadata.package }}:{{ build_tag }} as build_image']
bentoml/BentoML,latest,/docker/templates/alpine/runtime.Dockerfile.j2,ENV,1,"[""BENTOML_VERSION={{ metadata.envars['BENTOML_VERSION'] }}""]"
bentoml/BentoML,latest,/docker/templates/alpine/runtime.Dockerfile.j2,RUN,2,"['conda install -y python=$PYTHON_VERSION pip     && conda clean -afy     && apk add --no-cache bash git build-base', 'pip install bentoml==${BENTOML_VERSION} --no-cache-dir']"
bentoml/BentoML,latest,/docker/templates/debian/devel.Dockerfile.j2,{{,1,['metadata.header }}']
bentoml/BentoML,latest,/docker/templates/debian/devel.Dockerfile.j2,ARG,1,['PYTHON_VERSION']
bentoml/BentoML,latest,/docker/templates/debian/devel.Dockerfile.j2,FROM,1,['{{ metadata.package }}:{{ build_tag }} as build_image']
bentoml/BentoML,latest,/docker/templates/debian/devel.Dockerfile.j2,WORKDIR,1,['/']
bentoml/BentoML,latest,/docker/templates/debian/devel.Dockerfile.j2,RUN,1,['pip install -U git+https://github.com/bentoml/bentoml.git@main &&     apt-get purge --auto-remove -y curl &&     rm -rf /var/lib/apt/lists/*']
bentoml/BentoML,latest,/docker/templates/debian/base.Dockerfile.j2,{{,1,['metadata.header }}']
bentoml/BentoML,latest,/docker/templates/debian/base.Dockerfile.j2,FROM,1,['{{ metadata.base_image }}']
bentoml/BentoML,latest,/docker/templates/debian/base.Dockerfile.j2,{%,5,"['for key, value in metadata.envars.items() if key != ""BENTOML_VERSION""%}', 'if key in [""PYTHON_VERSION""] %}', 'else %}', 'endif %}', 'endfor %}']"
bentoml/BentoML,latest,/docker/templates/debian/base.Dockerfile.j2,ARG,1,['{{ key }}']
bentoml/BentoML,latest,/docker/templates/debian/base.Dockerfile.j2,ENV,3,"['{{ key }}={{ value }}', 'PATH /opt/conda/bin:$PATH', 'DEBIAN_FRONTEND noninteractive']"
bentoml/BentoML,latest,/docker/templates/debian/base.Dockerfile.j2,SHELL,1,"['[""/bin/bash"",""-exo"", ""pipefail"", ""-c""]']"
bentoml/BentoML,latest,/docker/templates/debian/base.Dockerfile.j2,RUN,4,"['apt-get update &&     apt-get install -q -y --no-install-recommends     ca-certificates curl wget git gnupg build-essential &&     apt-get clean &&     rm -rf /var/lib/apt/lists/*', 'wget --quiet https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O ~/miniconda.sh &&     chmod +x ~/miniconda.sh &&     ~/miniconda.sh -b -p /opt/conda &&     rm ~/miniconda.sh &&     ln -s /opt/conda/etc/profile.d/conda.sh /etc/profile.d/conda.sh &&     echo "". /opt/conda/etc/profile.d/conda.sh"" >> ~/.bashrc &&     echo ""conda activate base"" >> ~/.bashrc &&     find /opt/conda/ -follow -type f -name \'*.a\' -delete &&     find /opt/conda/ -follow -type f -name \'*.js.map\' -delete &&     /opt/conda/bin/conda clean -afy &&     apt-get clean && apt-get autoremove -y &&     apt-get purge -y wget', '/opt/conda/bin/conda install -y python=$PYTHON_VERSION pip &&     /opt/conda/bin/conda clean -afy', 'chmod a+r /etc/bash.bashrc']"
bentoml/BentoML,latest,/docker/templates/debian/base.Dockerfile.j2,COPY,1,['tools/bashrc /etc/bash.bashrc']
bentoml/BentoML,latest,/docker/templates/debian/cudnn.Dockerfile.j2,{{,1,['metadata.header }}']
bentoml/BentoML,latest,/docker/templates/debian/cudnn.Dockerfile.j2,{%,5,"['set cuda = metadata.cuda %}', 'set cudnn = cuda.cudnn %}', 'set cudnn_version = cudnn.version %}', 'set cudnn_major_version = cudnn.major_version %}', 'set cusolver_version = cuda.version.major+""-""+cuda.version.minor+""=""+ cuda.components[\'libcusolver\'] %}']"
bentoml/BentoML,latest,/docker/templates/debian/cudnn.Dockerfile.j2,ARG,1,['PYTHON_VERSION']
bentoml/BentoML,latest,/docker/templates/debian/cudnn.Dockerfile.j2,FROM,2,"['{{ metadata.package }}:{{ build_tag }} as build_image', 'build_image as release_image']"
bentoml/BentoML,latest,/docker/templates/debian/cudnn.Dockerfile.j2,RUN,3,"['curl -fsSL {{ cuda.base_repo }}/7fa2af80.pub | apt-key add - &&     echo ""deb {{ cuda.base_repo }} /"" >/etc/apt/sources.list.d/cuda.list &&     apt-get purge --auto-remove -y curl &&     rm -rf /var/lib/apt/lists/*', 'apt-get update && apt-get install -y --no-install-recommends         cuda-cudart-{{ cudart_version }}         libcublas-{{ cublas_version }}         libcurand-{{ curand_version }}         libcusparse-{{ cusparse_version }}         libcufft-{{ cufft_version }}         libcusolver-{{ cusolver_version }}         libcudnn{{ cudnn_major_version }}={{ cudnn_version }}+cuda{{ cuda.version.major }}.{{ cuda.version.minor }} &&     ln -s cuda-{{ cuda.version.major }}.{{ cuda.version.minor }} /usr/local/cuda &&     apt-mark hold libcudnn{{ cudnn_major_version }} libcublas-{{ cublas_version }} &&     apt-get clean &&     rm -rf /var/lib/apt/lists/*', 'pip install bentoml==${BENTOML_VERSION} --no-cache-dir &&     rm -rf /var/lib/apt/lists/*']"
bentoml/BentoML,latest,/docker/templates/debian/cudnn.Dockerfile.j2,{%-,5,"['set cudart_version = cuda.version.major+""-""+cuda.version.minor+""=""+ cuda.components[\'cudart\'] -%}', 'set cublas_version = cuda.version.major+""-""+cuda.version.minor+""=""+ cuda.components[\'libcublas\'] -%}', 'set curand_version = cuda.version.major+""-""+cuda.version.minor+""=""+ cuda.components[\'libcurand\'] -%}', 'set cusparse_version = cuda.version.major+""-""+cuda.version.minor+""=""+ cuda.components[\'libcusparse\'] -%}', 'set cufft_version = cuda.version.major+""-""+cuda.version.minor+""=""+ cuda.components[\'libcufft\'] -%}']"
bentoml/BentoML,latest,/docker/templates/debian/cudnn.Dockerfile.j2,ENV,6,"['PATH /usr/local/nvidia/bin:/usr/local/cuda/bin:$PATH', 'LD_LIBRARY_PATH /usr/local/nvidia/lib:/usr/local/nvidia/lib64:/usr/include/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu', 'NVIDIA_VISIBLE_DEVICES all', 'NVIDIA_DRIVER_CAPABILITIES compute,utility', 'NVIDIA_REQUIRE_CUDA ""{{ cuda.requires }}""', ""BENTOML_VERSION={{ metadata.envars['BENTOML_VERSION'] }}""]"
bentoml/BentoML,latest,/docker/templates/debian/runtime.Dockerfile.j2,{{,1,['metadata.header }}']
bentoml/BentoML,latest,/docker/templates/debian/runtime.Dockerfile.j2,{%,1,"[""set pip_options = ['--no-cache-dir'] %}""]"
bentoml/BentoML,latest,/docker/templates/debian/runtime.Dockerfile.j2,ARG,1,['PYTHON_VERSION']
bentoml/BentoML,latest,/docker/templates/debian/runtime.Dockerfile.j2,FROM,1,['{{ metadata.package }}:{{ build_tag }} as build_image']
bentoml/BentoML,latest,/docker/templates/debian/runtime.Dockerfile.j2,ENV,1,"[""BENTOML_VERSION={{ metadata.envars['BENTOML_VERSION'] }}""]"
bentoml/BentoML,latest,/docker/templates/debian/runtime.Dockerfile.j2,RUN,1,"[""pip install bentoml==${BENTOML_VERSION} {{ pip_options|join(' ') }}""]"
bentoml/BentoML,latest,/docker/templates/rhel/devel.Dockerfile.j2,{{,1,['metadata.header }}']
bentoml/BentoML,latest,/docker/templates/rhel/devel.Dockerfile.j2,ARG,1,['PYTHON_VERSION']
bentoml/BentoML,latest,/docker/templates/rhel/devel.Dockerfile.j2,FROM,1,['{{ metadata.package }}:{{ build_tag }} as build_image']
bentoml/BentoML,latest,/docker/templates/rhel/devel.Dockerfile.j2,WORKDIR,1,['/']
bentoml/BentoML,latest,/docker/templates/rhel/devel.Dockerfile.j2,RUN,1,['pip install -U git+https://github.com/bentoml/bentoml.git@main']
bentoml/BentoML,latest,/docker/templates/rhel/base.Dockerfile.j2,{{,1,['metadata.header }}']
bentoml/BentoML,latest,/docker/templates/rhel/base.Dockerfile.j2,FROM,1,['{{ metadata.base_image }}']
bentoml/BentoML,latest,/docker/templates/rhel/base.Dockerfile.j2,{%,5,"['for key, value in metadata.envars.items() if key not in [""BENTOML_VERSION"",""LC_ALL"",""LANG""] %}', 'if key in [""PYTHON_VERSION""] %}', 'else %}', 'endif %}', 'endfor %}']"
bentoml/BentoML,latest,/docker/templates/rhel/base.Dockerfile.j2,ARG,1,['{{ key }}']
bentoml/BentoML,latest,/docker/templates/rhel/base.Dockerfile.j2,ENV,2,"['{{ key }}={{ value }}', 'PATH /opt/conda/bin:$PATH']"
bentoml/BentoML,latest,/docker/templates/rhel/base.Dockerfile.j2,SHELL,1,"['[""/bin/bash"",""-exo"", ""pipefail"", ""-c""]']"
bentoml/BentoML,latest,/docker/templates/rhel/base.Dockerfile.j2,RUN,4,"['yum upgrade -y     && yum install -y wget git ca-certificates curl gcc gcc-c++ make     && yum clean all     && rm -rf /var/cache/yum', 'wget --quiet https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O ~/miniconda.sh &&     chmod +x ~/miniconda.sh &&     ~/miniconda.sh -b -p /opt/conda &&     rm ~/miniconda.sh &&     ln -s /opt/conda/etc/profile.d/conda.sh /etc/profile.d/conda.sh &&     echo "". /opt/conda/etc/profile.d/conda.sh"" >> ~/.bashrc &&     echo ""conda activate base"" >> ~/.bashrc &&     find /opt/conda/ -follow -type f -name \'*.a\' -delete &&     find /opt/conda/ -follow -type f -name \'*.js.map\' -delete &&     /opt/conda/bin/conda clean -afy &&     yum clean all &&     yum autoremove -y wget &&     rm -rf /var/cache/yum', '/opt/conda/bin/conda install -y python=$PYTHON_VERSION pip &&     /opt/conda/bin/conda clean -afy', 'chmod a+r /etc/bash.bashrc']"
bentoml/BentoML,latest,/docker/templates/rhel/base.Dockerfile.j2,COPY,1,['tools/bashrc /etc/bash.bashrc']
bentoml/BentoML,latest,/docker/templates/rhel/cudnn.Dockerfile.j2,{{,1,['metadata.header }}']
bentoml/BentoML,latest,/docker/templates/rhel/cudnn.Dockerfile.j2,{%,5,"['set cuda = metadata.cuda %}', 'set cudnn = cuda.cudnn %}', 'set cudnn_version = cudnn.version %}', 'set cudnn_major_version = cudnn.major_version %}', 'set cusolver_version = cuda.version.major+""-""+cuda.version.minor+""-""+ cuda.components[\'libcusolver\'] %}']"
bentoml/BentoML,latest,/docker/templates/rhel/cudnn.Dockerfile.j2,ARG,1,['PYTHON_VERSION']
bentoml/BentoML,latest,/docker/templates/rhel/cudnn.Dockerfile.j2,FROM,2,"['{{ metadata.package }}:{{ build_tag }} as build_image', 'build_image as release_image']"
bentoml/BentoML,latest,/docker/templates/rhel/cudnn.Dockerfile.j2,RUN,3,"['NVIDIA_GPGKEY_SUM=d1be581509378368edeec8c1eb2958702feedf3bc3d17011adbf24efacce4ab5 &&     curl -fsSL {{ cuda.base_repo }}/7fa2af80.pub | sed \'/^Version/d\' > /etc/pki/rpm-gpg/RPM-GPG-KEY-NVIDIA &&     echo ""$NVIDIA_GPGKEY_SUM  /etc/pki/rpm-gpg/RPM-GPG-KEY-NVIDIA"" | sha256sum -c --strict -', 'yum upgrade -y && yum install -y         cuda-cudart-{{ cudart_version }}         cuda-compat-{{ cuda.version.major }}-{{ cuda.version.minor }}         libcublas-{{ cublas_version }}         libcurand-{{ curand_version }}         libcusparse-{{ cusparse_version }}         libcufft-{{ cufft_version }}         libcusolver-{{ cusolver_version }}         libcudnn{{ cudnn_major_version }}-{{ cudnn_version }}.cuda{{ cuda.version.major }}.{{ cuda.version.minor }} &&     ln -s cuda-{{ cuda.version.major }}.{{ cuda.version.minor }} /usr/local/cuda &&     yum clean all &&     rm -rf /var/cache/yum', 'pip install bentoml==${BENTOML_VERSION} --no-cache-dir']"
bentoml/BentoML,latest,/docker/templates/rhel/cudnn.Dockerfile.j2,COPY,2,"['{{ metadata.docker_build_path }}/cuda.repo /etc/yum.repos.d/cuda.repo', '{{ metadata.docker_build_path }}/nvidia-ml.repo /etc/yum.repos.d/nvidia-ml.repo']"
bentoml/BentoML,latest,/docker/templates/rhel/cudnn.Dockerfile.j2,{%-,5,"['set cudart_version = cuda.version.major+""-""+cuda.version.minor -%}', 'set cublas_version = cuda.version.major+""-""+cuda.version.minor+""-""+ cuda.components[\'libcublas\'] -%}', 'set curand_version = cuda.version.major+""-""+cuda.version.minor+""-""+ cuda.components[\'libcurand\'] -%}', 'set cusparse_version = cuda.version.major+""-""+cuda.version.minor+""-""+ cuda.components[\'libcusparse\'] -%}', 'set cufft_version = cuda.version.major+""-""+cuda.version.minor+""-""+ cuda.components[\'libcufft\'] -%}']"
bentoml/BentoML,latest,/docker/templates/rhel/cudnn.Dockerfile.j2,ENV,6,"['PATH /usr/local/nvidia/bin:/usr/local/cuda/bin:$PATH', 'LD_LIBRARY_PATH /usr/local/nvidia/lib:/usr/local/nvidia/lib64:/usr/include/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu', 'NVIDIA_VISIBLE_DEVICES all', 'NVIDIA_DRIVER_CAPABILITIES compute,utility', 'NVIDIA_REQUIRE_CUDA ""{{ cuda.requires }}""', ""BENTOML_VERSION={{ metadata.envars['BENTOML_VERSION'] }}""]"
bentoml/BentoML,latest,/docker/templates/rhel/runtime.Dockerfile.j2,{{,1,['metadata.header }}']
bentoml/BentoML,latest,/docker/templates/rhel/runtime.Dockerfile.j2,{%,1,"[""set pip_options = ['--no-cache-dir'] %}""]"
bentoml/BentoML,latest,/docker/templates/rhel/runtime.Dockerfile.j2,ARG,1,['PYTHON_VERSION']
bentoml/BentoML,latest,/docker/templates/rhel/runtime.Dockerfile.j2,FROM,1,['{{ metadata.package }}:{{ build_tag }} as build_image']
bentoml/BentoML,latest,/docker/templates/rhel/runtime.Dockerfile.j2,ENV,1,"[""BENTOML_VERSION={{ metadata.envars['BENTOML_VERSION'] }}""]"
bentoml/BentoML,latest,/docker/templates/rhel/runtime.Dockerfile.j2,RUN,1,"[""pip install bentoml==${BENTOML_VERSION} {{ pip_options|join(' ') }}""]"
bentoml/BentoML,latest,/scripts/Dockerfile-checker,FROM,1,['python:3.8-slim']
bentoml/BentoML,latest,/scripts/Dockerfile-checker,ENV,9,"['PYTHONFAULTHANDLER=1   PYTHONUNBUFFERED=1   PYTHONHASHSEED=random   PIP_NO_CACHE_DIR=off   PIP_DISABLE_PIP_VERSION_CHECK=on   PIP_DEFAULT_TIMEOUT=100', 'LANG=C.UTF-8', 'LC_ALL=C.UTF-8', 'PYTHONDONTWRITEBYTECODE=1', 'NODE_VERSION=16.13.0', 'NVM_DIR=/root/.nvm', 'PATH=""/root/.nvm/versions/node/v${NODE_VERSION}/bin/:${PATH}""', 'VIRTUAL_ENV=/opt/venv', 'PATH=""$VIRTUAL_ENV/bin:$PATH""']"
bentoml/BentoML,latest,/scripts/Dockerfile-checker,RUN,10,"['apt-get update     && apt-get install -q -y --no-install-recommends         ca-certificates curl git gnupg build-essential     && apt-get clean     && rm -rf /var/lib/apt/lists/*', 'curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/master/install.sh | bash', '. ""$NVM_DIR/nvm.sh"" && nvm install ${NODE_VERSION}', '. ""$NVM_DIR/nvm.sh"" && nvm use v${NODE_VERSION}', '. ""$NVM_DIR/nvm.sh"" && nvm alias default v${NODE_VERSION}', 'curl -fsSLO https://github.com/mikefarah/yq/releases/download/v4.14.1/yq_linux_amd64.tar.gz     && tar -zvxf ./yq_linux_amd64.tar.gz      && mv ./yq_linux_amd64 /usr/local/bin/yq     && rm -f ./yq_linux_amd64.tar.gz ./yq.1 ./install-man-page.sh', 'npm i -g npm@^7 yarn pyright', 'python -m pip install -U pip setuptools', 'python3 -m venv $VIRTUAL_ENV', 'pip install -r ./dev-requirements.txt']"
bentoml/BentoML,latest,/scripts/Dockerfile-checker,COPY,2,"['requirements/dev-requirements.txt .', 'requirements/tests-requirements.txt .']"
bentoml/BentoML,latest,/scripts/Dockerfile-checker,WORKDIR,1,"['""/bentoml""']"
bentoml/BentoML,latest,/scripts/Dockerfile-checker,VOLUME,1,"['[""/bentoml""]']"
bentoml/BentoML,latest,/bentoml/_internal/bento/docker/Dockerfile.template,FROM,1,['{base_image}']
bentoml/BentoML,latest,/bentoml/_internal/bento/docker/Dockerfile.template,ARG,3,"['UID=1034', 'GID=1034', 'BENTO_PATH=/home/bentoml/bento']"
bentoml/BentoML,latest,/bentoml/_internal/bento/docker/Dockerfile.template,RUN,9,"['groupadd -g $GID -o bentoml && useradd -m -u $UID -g $GID -o -r bentoml', 'mkdir $BENTO_PATH && chown bentoml:bentoml $BENTO_PATH -R', 'chmod +x ./env/docker/init.sh', './env/docker/init.sh ensure_python', './env/docker/init.sh restore_conda_env', './env/docker/init.sh install_pip_packages', './env/docker/init.sh install_wheels', './env/docker/init.sh user_setup_script', 'chmod +x ./env/docker/entrypoint.sh']"
bentoml/BentoML,latest,/bentoml/_internal/bento/docker/Dockerfile.template,ENV,2,"['BENTO_PATH=$BENTO_PATH', 'BENTOML_HOME=/home/bentoml/']"
bentoml/BentoML,latest,/bentoml/_internal/bento/docker/Dockerfile.template,WORKDIR,1,['$BENTO_PATH']
bentoml/BentoML,latest,/bentoml/_internal/bento/docker/Dockerfile.template,COPY,2,"['--chown=bentoml:bentoml ./env ./env', '--chown=bentoml:bentoml . ./']"
bentoml/BentoML,latest,/bentoml/_internal/bento/docker/Dockerfile.template,EXPOSE,1,['5000']
bentoml/BentoML,latest,/bentoml/_internal/bento/docker/Dockerfile.template,USER,1,['bentoml']
bentoml/BentoML,latest,/bentoml/_internal/bento/docker/Dockerfile.template,ENTRYPOINT,1,"['[ ""./env/docker/entrypoint.sh"" ]']"
bentoml/BentoML,latest,/bentoml/_internal/bento/docker/Dockerfile.template,CMD,1,"['[""bentoml"", ""serve"", ""."", ""--production""]']"
deepjavalibrary/djl,latest,/docker/windows/Dockerfile,ARG,1,['version=ltsc2019']
deepjavalibrary/djl,latest,/docker/windows/Dockerfile,FROM,1,['mcr.microsoft.com/windows/servercore:$version']
deepjavalibrary/djl,latest,/docker/windows/Dockerfile,ADD,1,['https://aka.ms/vs/16/release/vc_redist.x64.exe /vc_redist.x64.exe']
deepjavalibrary/djl,latest,/docker/windows/Dockerfile,RUN,3,"['C:\\vc_redist.x64.exe /quiet /install', ""powershell -Command     Set-ExecutionPolicy Bypass -Scope Process -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'));     choco feature disable --name showDownloadProgress"", 'choco install -y jdk8']"
deepjavalibrary/djl,latest,/docker/windows/Dockerfile,ENV,1,['chocolateyUseWindowsCompression false']
deepjavalibrary/djl,latest,/.devcontainer/base.Dockerfile,ARG,12,"['VARIANT=11', 'INSTALL_ZSH=""true""', 'UPGRADE_PACKAGES=""false""', 'USERNAME=vscode', 'USER_UID=1000', 'USER_GID=$USER_UID', 'INSTALL_MAVEN=""false""', 'MAVEN_VERSION=3.6.3', 'INSTALL_GRADLE=""false""', 'GRADLE_VERSION=5.4.1', 'INSTALL_NODE=""true""', 'NODE_VERSION=""none""']"
deepjavalibrary/djl,latest,/.devcontainer/base.Dockerfile,FROM,1,['openjdk:${VARIANT}-jdk-buster']
deepjavalibrary/djl,latest,/.devcontainer/base.Dockerfile,COPY,3,"['library-scripts/common-debian.sh /tmp/library-scripts/', 'library-scripts/java-debian.sh /tmp/library-scripts/', 'library-scripts/node-debian.sh /tmp/library-scripts/']"
deepjavalibrary/djl,latest,/.devcontainer/base.Dockerfile,RUN,3,"['bash /tmp/library-scripts/common-debian.sh ""${INSTALL_ZSH}"" ""${USERNAME}"" ""${USER_UID}"" ""${USER_GID}"" ""${UPGRADE_PACKAGES}""     && if [ ! -d ""/docker-java-home"" ]; then ln -s ""${JAVA_HOME}"" /docker-java-home; fi     && apt-get clean -y && rm -rf /var/lib/apt/lists/* /tmp/library-scripts', 'bash /tmp/library-scripts/java-debian.sh ""none"" ""${SDKMAN_DIR}"" ""${USERNAME}"" ""true""     && if [ ""${INSTALL_MAVEN}"" = ""true"" ]; then bash /tmp/library-scripts/maven-debian.sh ${MAVEN_VERSION} ""${SDKMAN_DIR}"" ${USERNAME} ""true""; fi     && if [ ""${INSTALL_GRADLE}"" = ""true"" ]; then bash /tmp/library-scripts/gradle-debian.sh ${GRADLE_VERSION} ""${SDKMAN_DIR}"" ${USERNAME} ""true""; fi     && apt-get clean -y && rm -rf /var/lib/apt/lists/* /tmp/library-scripts', 'if [ ""$INSTALL_NODE"" = ""true"" ]; then bash /tmp/library-scripts/node-debian.sh ""${NVM_DIR}"" ""${NODE_VERSION}"" ""${USERNAME}""; fi     && apt-get clean -y && rm -rf /var/lib/apt/lists/* /tmp/library-scripts']"
deepjavalibrary/djl,latest,/.devcontainer/base.Dockerfile,ENV,4,"['SDKMAN_DIR=""/usr/local/sdkman""', 'PATH=""${PATH}:${SDKMAN_DIR}/java/current/bin:${SDKMAN_DIR}/maven/current/bin:${SDKMAN_DIR}/gradle/current/bin""', 'NVM_DIR=/usr/local/share/nvm', 'NVM_SYMLINK_CURRENT=true     PATH=""${NVM_DIR}/current/bin:${PATH}""']"
deepjavalibrary/djl,latest,/.devcontainer/Dockerfile,ARG,7,"['VARIANT=11', 'INSTALL_MAVEN=""false""', 'MAVEN_VERSION=3.6.3', 'INSTALL_GRADLE=""false""', 'GRADLE_VERSION=5.4.1', 'INSTALL_NODE=""true""', 'NODE_VERSION=""lts/*""']"
deepjavalibrary/djl,latest,/.devcontainer/Dockerfile,FROM,1,['mcr.microsoft.com/vscode/devcontainers/java:${VARIANT}']
deepjavalibrary/djl,latest,/.devcontainer/Dockerfile,RUN,2,"['if [ ""${INSTALL_MAVEN}"" = ""true"" ]; then su vscode -c ""source /usr/local/sdkman/bin/sdkman-init.sh && sdk install maven \\""${MAVEN_VERSION}\\""""; fi     && if [ ""${INSTALL_GRADLE}"" = ""true"" ]; then su vscode -c ""source /usr/local/sdkman/bin/sdkman-init.sh && sdk install gradle \\""${GRADLE_VERSION}\\""""; fi', 'if [ ""${INSTALL_NODE}"" = ""true"" ]; then su vscode -c ""source /usr/local/share/nvm/nvm.sh && nvm install ${NODE_VERSION} 2>&1""; fi']"
deepjavalibrary/djl,latest,/jupyter/Dockerfile,FROM,1,['ubuntu:18.04']
deepjavalibrary/djl,latest,/jupyter/Dockerfile,RUN,9,"['apt-get update || true', 'apt-get install -y openjdk-11-jdk-headless', 'apt-get install -y python3-pip git', 'pip3 install jupyter', ""apt-get update     && DEBIAN_FRONTEND=noninteractive apt-get install -y locales     && sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen     && dpkg-reconfigure --frontend=noninteractive locales     && update-locale LANG=en_US.UTF-8"", 'apt-get install -y curl', 'git clone https://github.com/frankfliu/IJava.git', 'cd IJava/ && ./gradlew installKernel && cd .. && rm -rf IJava/', 'rm -rf ~/.gradle']"
deepjavalibrary/djl,latest,/jupyter/Dockerfile,WORKDIR,1,['/home/jupyter']
deepjavalibrary/djl,latest,/jupyter/Dockerfile,ENV,2,"['LANG en_US.UTF-8', 'LC_ALL en_US.UTF-8']"
deepjavalibrary/djl,latest,/jupyter/Dockerfile,EXPOSE,1,['8888']
deepjavalibrary/djl,latest,/jupyter/Dockerfile,ENTRYPOINT,1,"['[""jupyter"", ""notebook"", ""--ip=0.0.0.0"", ""--no-browser"", ""--allow-root"", ""--NotebookApp.token=\'\'"",  ""--NotebookApp.password=\'\'""]']"
jsbroks/coco-annotator,latest,/Dockerfile,FROM,2,"['node:10 as build-stage', 'jsbroks/coco-annotator:python-env']"
jsbroks/coco-annotator,latest,/Dockerfile,WORKDIR,3,"['/workspace/', '/workspace/client', '/workspace/']"
jsbroks/coco-annotator,latest,/Dockerfile,COPY,5,"['./client /workspace/client', './client/package* /workspace/', './backend/ /workspace/', './.git /workspace/.git', '--from=build-stage /workspace/client/dist /workspace/dist']"
jsbroks/coco-annotator,latest,/Dockerfile,RUN,5,"['npm install -g @vue/cli@3.3.0', 'npm install -g @vue/cli-service@3.3.0', 'npm install', 'npm run build', 'python set_path.py']"
jsbroks/coco-annotator,latest,/Dockerfile,ENV,3,"['NODE_PATH=/workspace/node_modules', 'FLASK_ENV=production', 'DEBUG=false']"
jsbroks/coco-annotator,latest,/Dockerfile,EXPOSE,1,['5000']
jsbroks/coco-annotator,latest,/Dockerfile,CMD,1,['gunicorn -c webserver/gunicorn_config.py webserver:app --no-sendfile --timeout 180']
jsbroks/coco-annotator,latest,/backend/Dockerfile,FROM,1,['tensorflow/tensorflow:1.14.0-gpu-py3']
jsbroks/coco-annotator,latest,/backend/Dockerfile,RUN,7,"['apt-get update', 'apt-get install -y git', 'pip install -r requirements.txt &&     pip install gunicorn[eventlet]==19.9.0 &&     pip install pycocotools', 'git clone --single-branch --depth 1 https://github.com/matterport/Mask_RCNN.git /tmp/maskrcnn', 'cd /tmp/maskrcnn && python3 setup.py install', 'git clone --single --depth 1 https://github.com/jsbroks/dextr-keras.git /tmp/dextr &&     cd /tmp/dextr &&     python setup.py install', 'apt-get -y -o Dpkg::Options::=""--force-confmiss"" install --reinstall netbase']"
jsbroks/coco-annotator,latest,/backend/Dockerfile,WORKDIR,1,['/workspace/']
jsbroks/coco-annotator,latest,/backend/Dockerfile,COPY,1,['./backend/requirements.txt /workspace/']
jsbroks/coco-annotator,latest,/backend/tests/Dockerfile,FROM,1,['python:3.6']
jsbroks/coco-annotator,latest,/backend/tests/Dockerfile,WORKDIR,1,['/workspace/']
jsbroks/coco-annotator,latest,/backend/tests/Dockerfile,COPY,2,"['./backend/ /workspace/', './.git /workspace/.git']"
jsbroks/coco-annotator,latest,/backend/tests/Dockerfile,RUN,1,['pip install -r requirements.txt &&    pip install pycocotools']
jsbroks/coco-annotator,latest,/backend/tests/Dockerfile,ENV,1,['LOGIN_DISABLED=true']
jsbroks/coco-annotator,latest,/backend/tests/Dockerfile,CMD,1,['pytest']
jsbroks/coco-annotator,latest,/backend/webserver/Dockerfile,FROM,1,['jsbroks/coco-annotator:python-env']
jsbroks/coco-annotator,latest,/backend/webserver/Dockerfile,WORKDIR,1,['/workspace/']
jsbroks/coco-annotator,latest,/backend/webserver/Dockerfile,COPY,2,"['./backend/ /workspace/', './.git /workspace/.git']"
jsbroks/coco-annotator,latest,/backend/webserver/Dockerfile,RUN,1,['python set_path.py']
jsbroks/coco-annotator,latest,/backend/webserver/Dockerfile,ENV,2,"['FLASK_ENV=development', 'DEBUG=true']"
jsbroks/coco-annotator,latest,/backend/webserver/Dockerfile,EXPOSE,1,['5000']
jsbroks/coco-annotator,latest,/backend/webserver/Dockerfile,CMD,1,['gunicorn -c webserver/gunicorn_config.py webserver:app --no-sendfile']
jsbroks/coco-annotator,latest,/backend/workers/Dockerfile,FROM,1,['jsbroks/coco-annotator:python-env']
jsbroks/coco-annotator,latest,/backend/workers/Dockerfile,WORKDIR,1,['/workspace/']
jsbroks/coco-annotator,latest,/backend/workers/Dockerfile,COPY,1,['./backend/ /workspace/']
jsbroks/coco-annotator,latest,/backend/workers/Dockerfile,EXPOSE,1,['5555']
jsbroks/coco-annotator,latest,/backend/workers/Dockerfile,CMD,1,['celery -A workers worker -l info']
jsbroks/coco-annotator,latest,/client/Dockerfile,FROM,1,['node:10']
jsbroks/coco-annotator,latest,/client/Dockerfile,RUN,2,"['npm install -g --quiet     @vue/cli@3.3.0     @vue/cli-service@3.3.0', 'npm install']"
jsbroks/coco-annotator,latest,/client/Dockerfile,WORKDIR,2,"['/workspace/', '/workspace/client/']"
jsbroks/coco-annotator,latest,/client/Dockerfile,COPY,1,['./client/package.json /workspace/package.json']
jsbroks/coco-annotator,latest,/client/Dockerfile,ENV,1,['NODE_PATH=/workspace/node_modules']
jsbroks/coco-annotator,latest,/client/Dockerfile,EXPOSE,1,['8080']
jsbroks/coco-annotator,latest,/client/Dockerfile,CMD,1,['npm run serve']
stellargraph/stellargraph,latest,/docker/stellargraph-treon/Dockerfile,FROM,2,"['python:3.6-slim as base', 'stellargraph/stellargraph']"
stellargraph/stellargraph,latest,/docker/stellargraph-treon/Dockerfile,WORKDIR,1,['/data']
stellargraph/stellargraph,latest,/docker/stellargraph-treon/Dockerfile,RUN,2,"['apt-get update     && apt-get install --no-install-recommends -y curl unzip     && curl -sLO ""https://linqs-data.soe.ucsc.edu/public/lbc/cora.tgz""     && tar --no-same-owner -xf cora.tgz     && curl -sLO ""https://linqs-data.soe.ucsc.edu/public/Pubmed-Diabetes.tgz""     && tar --no-same-owner -xf Pubmed-Diabetes.tgz     && curl -sLO ""http://socialcomputing.asu.edu/uploads/1283153973/BlogCatalog-dataset.zip""     && unzip BlogCatalog-dataset.zip', 'pip install --upgrade pip --user     && pip install --no-cache-dir jupyter==""${JUPYTER_VERSION}"" treon==""${TREON_VERSION}"" seaborn==""${SEABORN_VERSION}"" --user']"
stellargraph/stellargraph,latest,/docker/stellargraph-treon/Dockerfile,ENV,1,"['PATH=${PATH}:/home/stellar/.local/bin     JUPYTER_VERSION=""1.0.0""     TREON_VERSION=""0.1.2""     SEABORN_VERSION=""0.9.0""']"
stellargraph/stellargraph,latest,/docker/stellargraph-treon/Dockerfile,COPY,5,"['--chown=stellar ./demos /home/stellar/demos', '--chown=stellar ./scripts/ /home/stellar/scripts', '--chown=stellar --from=base /data/cora /home/stellar/data/cora', '--chown=stellar --from=base /data/Pubmed-Diabetes /home/stellar/data/pubmed/Pubmed-Diabetes', '--chown=stellar --from=base /data/BlogCatalog-dataset /home/stellar/data/BlogCatalog-dataset']"
stellargraph/stellargraph,latest,/docker/stellargraph-treon/Dockerfile,CMD,1,"['[""sh"", ""-c"", ""python /home/stellar/scripts/test_demos.py""]']"
stellargraph/stellargraph,latest,/docker/stellargraph/Dockerfile,FROM,1,['python:3.6-slim']
stellargraph/stellargraph,latest,/docker/stellargraph/Dockerfile,RUN,4,"[""adduser --disabled-password --gecos '' stellar"", 'mkdir /build && chown stellar:stellar /build', 'echo ""+++ installing dependencies""     && pip install --no-cache-dir /build/ --user     && pip uninstall -y stellargraph', 'echo ""+++ installing stellargraph"" && pip install --no-cache-dir /build/ --user']"
stellargraph/stellargraph,latest,/docker/stellargraph/Dockerfile,USER,1,['stellar']
stellargraph/stellargraph,latest,/docker/stellargraph/Dockerfile,ENV,1,['PATH=${PATH}:/home/stellar/.local/bin']
stellargraph/stellargraph,latest,/docker/stellargraph/Dockerfile,WORKDIR,2,"['/build', '/home/stellar']"
stellargraph/stellargraph,latest,/docker/stellargraph/Dockerfile,COPY,3,"['--chown=stellar:stellar setup.py /build/setup.py', '--chown=stellar:stellar stellargraph/version.py /build/stellargraph/version.py', '--chown=stellar:stellar . /build/']"
stellargraph/stellargraph,latest,/docker/stellargraph-neo4j/Dockerfile,ARG,2,"['NEO4J_VERSION', 'NEO4J_VERSION']"
stellargraph/stellargraph,latest,/docker/stellargraph-neo4j/Dockerfile,FROM,1,['neo4j:${NEO4J_VERSION}']
stellargraph/stellargraph,latest,/docker/stellargraph-neo4j/Dockerfile,USER,1,['neo4j']
stellargraph/stellargraph,latest,/docker/stellargraph-neo4j/Dockerfile,COPY,1,['install-lib.sh /']
stellargraph/stellargraph,latest,/docker/stellargraph-neo4j/Dockerfile,RUN,1,['bash /install-lib.sh']
stellargraph/stellargraph,latest,/docker/stellargraph-ci-runner/Dockerfile,ARG,2,"['PYTHON_VERSION', 'PRERELEASE_VERSIONS']"
stellargraph/stellargraph,latest,/docker/stellargraph-ci-runner/Dockerfile,FROM,1,['python:${PYTHON_VERSION}']
stellargraph/stellargraph,latest,/docker/stellargraph-ci-runner/Dockerfile,WORKDIR,1,['/build']
stellargraph/stellargraph,latest,/docker/stellargraph-ci-runner/Dockerfile,COPY,3,"['setup.py /build/setup.py', 'stellargraph/version.py /build/stellargraph/version.py', 'docker/stellargraph-ci-runner/install-packages.sh /install-packages.sh']"
stellargraph/stellargraph,latest,/docker/stellargraph-ci-runner/Dockerfile,RUN,1,['bash /install-packages.sh']
stellargraph/stellargraph,latest,/scripts/ci/format-dockerfiles.sh,SET,1,['-euo pipefail']
stellargraph/stellargraph,latest,/scripts/ci/format-dockerfiles.sh,FIND,1,"["". -name Dockerfile -o -name '*.dockerfile' | while IFS= read -r file; do""]"
stellargraph/stellargraph,latest,/scripts/ci/format-dockerfiles.sh,ECHO,3,"['""Checking formatting of $file""', '-n ""::error file=${file}::$message"" | awk 1 ORS=""%0A""', '']"
stellargraph/stellargraph,latest,/scripts/ci/format-dockerfiles.sh,"FORMATTED=""${FILE}.FORMATTED""",1,['']
stellargraph/stellargraph,latest,/scripts/ci/format-dockerfiles.sh,DOCKERFILE-UTILS,1,"['format --spaces 4 ""$file"" > ""$formatted""']"
stellargraph/stellargraph,latest,/scripts/ci/format-dockerfiles.sh,IF,1,"['! diff ""$file"" ""$formatted""; then']"
stellargraph/stellargraph,latest,/scripts/ci/format-dockerfiles.sh,"MESSAGE=""DOCKERFILE",1,"[""has incorrect formatting according to 'dockerfile-utils format --spaces 4 $file'. Formatted form:""]"
stellargraph/stellargraph,latest,/scripts/ci/format-dockerfiles.sh,$(CAT,1,"['""$formatted"")""']"
stellargraph/stellargraph,latest,/scripts/ci/format-dockerfiles.sh,FI,1,['']
stellargraph/stellargraph,latest,/scripts/ci/format-dockerfiles.sh,DONE,1,['']
blakeblackshear/frigate,latest,/docker/Dockerfile.armv7,FROM,1,['frigate-base']
blakeblackshear/frigate,latest,/docker/Dockerfile.armv7,LABEL,1,"['maintainer ""blakeb@blakeshome.com""']"
blakeblackshear/frigate,latest,/docker/Dockerfile.armv7,ENV,1,['DEBIAN_FRONTEND=noninteractive']
blakeblackshear/frigate,latest,/docker/Dockerfile.armv7,RUN,2,"['apt-get -qq update     && apt-get -qq install --no-install-recommends -y     libgomp1     libopenexr24     libgstreamer1.0-0     libgstreamer-plugins-base1.0-0     libopenblas-base     libjpeg-turbo8     libpng16-16     libtiff5     libdc1394-22     libaom0     libx265-179     && rm -rf /var/lib/apt/lists/*     && (apt-get autoremove -y; apt-get autoclean -y)', 'chmod +x /tmp/s6-overlay-armhf-installer && /tmp/s6-overlay-armhf-installer /']"
blakeblackshear/frigate,latest,/docker/Dockerfile.armv7,ADD,1,['https://github.com/just-containers/s6-overlay/releases/download/v2.2.0.3/s6-overlay-armhf-installer /tmp/']
blakeblackshear/frigate,latest,/docker/Dockerfile.armv7,ENTRYPOINT,1,"['[""/init""]']"
blakeblackshear/frigate,latest,/docker/Dockerfile.armv7,CMD,1,"['[""python3"", ""-u"", ""-m"", ""frigate""]']"
blakeblackshear/frigate,latest,/docker/Dockerfile.amd64,FROM,1,['frigate-base']
blakeblackshear/frigate,latest,/docker/Dockerfile.amd64,LABEL,1,"['maintainer ""blakeb@blakeshome.com""']"
blakeblackshear/frigate,latest,/docker/Dockerfile.amd64,ENV,1,['LIBVA_DRIVER_NAME=i965']
blakeblackshear/frigate,latest,/docker/Dockerfile.amd64,RUN,3,"[""wget -qO - https://repositories.intel.com/graphics/intel-graphics.key | apt-key add -     && echo 'deb [arch=amd64] https://repositories.intel.com/graphics/ubuntu focal main' > /etc/apt/sources.list.d/intel-graphics.list     && apt-key adv --keyserver keyserver.ubuntu.com --recv-keys F63F0F2B90935439     && echo 'deb http://ppa.launchpad.net/kisak/kisak-mesa/ubuntu focal main' > /etc/apt/sources.list.d/kisak-mesa-focal.list"", 'apt-get -qq update     && apt-get -qq install --no-install-recommends -y     libgomp1     libva-drm2 libva2 libmfx1 i965-va-driver vainfo intel-media-va-driver-non-free mesa-vdpau-drivers mesa-va-drivers mesa-vdpau-drivers libdrm-radeon1     && rm -rf /var/lib/apt/lists/*     && (apt-get autoremove -y; apt-get autoclean -y)', 'chmod +x /tmp/s6-overlay-amd64-installer && /tmp/s6-overlay-amd64-installer /']"
blakeblackshear/frigate,latest,/docker/Dockerfile.amd64,ADD,1,['https://github.com/just-containers/s6-overlay/releases/download/v2.2.0.3/s6-overlay-amd64-installer /tmp/']
blakeblackshear/frigate,latest,/docker/Dockerfile.amd64,ENTRYPOINT,1,"['[""/init""]']"
blakeblackshear/frigate,latest,/docker/Dockerfile.amd64,CMD,1,"['[""python3"", ""-u"", ""-m"", ""frigate""]']"
blakeblackshear/frigate,latest,/docker/Dockerfile.web,ARG,1,['NODE_VERSION=14.0']
blakeblackshear/frigate,latest,/docker/Dockerfile.web,FROM,1,['node:${NODE_VERSION}']
blakeblackshear/frigate,latest,/docker/Dockerfile.web,WORKDIR,1,['/opt/frigate']
blakeblackshear/frigate,latest,/docker/Dockerfile.web,COPY,1,['. .']
blakeblackshear/frigate,latest,/docker/Dockerfile.web,RUN,1,['npm install && npm run build']
blakeblackshear/frigate,latest,/docker/Dockerfile.ffmpeg.aarch64,FROM,3,"['ubuntu:20.04 AS base', 'base as build', 'base AS release']"
blakeblackshear/frigate,latest,/docker/Dockerfile.ffmpeg.aarch64,WORKDIR,1,['/tmp/workdir']
blakeblackshear/frigate,latest,/docker/Dockerfile.ffmpeg.aarch64,ENV,3,"['DEBIAN_FRONTEND=noninteractive', 'FFMPEG_VERSION=4.3.2         AOM_VERSION=v1.0.0         FDKAAC_VERSION=0.1.5         FREETYPE_VERSION=2.11.0         FRIBIDI_VERSION=0.19.7         KVAZAAR_VERSION=1.2.0         LAME_VERSION=3.100         LIBPTHREAD_STUBS_VERSION=0.4         LIBVIDSTAB_VERSION=1.1.0         LIBXCB_VERSION=1.13.1         XCBPROTO_VERSION=1.13         OGG_VERSION=1.3.2         OPENCOREAMR_VERSION=0.1.5         OPUS_VERSION=1.2         OPENJPEG_VERSION=2.1.2         THEORA_VERSION=1.1.1         VORBIS_VERSION=1.3.5         VPX_VERSION=1.8.0         WEBP_VERSION=1.0.2         X264_VERSION=20170226-2245-stable         X265_VERSION=3.1.1         XAU_VERSION=1.0.9         XORG_MACROS_VERSION=1.19.2         XPROTO_VERSION=7.0.31         XVID_VERSION=1.3.4         LIBZMQ_VERSION=4.3.2         SRC=/usr/local', 'LD_LIBRARY_PATH=/usr/local/lib:/usr/local/lib64:/usr/lib:/usr/lib64:/lib:/lib64']"
blakeblackshear/frigate,latest,/docker/Dockerfile.ffmpeg.aarch64,RUN,31,"['apt-get -yqq update &&         apt-get install -yq --no-install-recommends ca-certificates expat libgomp1 xutils-dev &&         apt-get autoremove -y &&         apt-get clean -y', 'buildDeps=""autoconf         automake         cmake         curl         bzip2         libexpat1-dev         g++         gcc         git         gperf         libtool         make         nasm         perl         pkg-config         python         libssl-dev         yasm         linux-headers-raspi2         libomxil-bellagio-dev         zlib1g-dev"" &&         apt-get -yqq update &&         apt-get install -yq --no-install-recommends ${buildDeps}', 'DIR=/tmp/opencore-amr &&         mkdir -p ${DIR} &&         cd ${DIR} &&         curl -sL https://versaweb.dl.sourceforge.net/project/opencore-amr/opencore-amr/opencore-amr-${OPENCOREAMR_VERSION}.tar.gz |         tar -zx --strip-components=1 &&         ./configure --prefix=""${PREFIX}"" --enable-shared  &&         make -j $(nproc) &&         make -j $(nproc) install &&         rm -rf ${DIR}', 'DIR=/tmp/x264 &&         mkdir -p ${DIR} &&         cd ${DIR} &&         curl -sL https://download.videolan.org/pub/videolan/x264/snapshots/x264-snapshot-${X264_VERSION}.tar.bz2 |         tar -jx --strip-components=1 &&         ./configure --prefix=""${PREFIX}"" --enable-shared --enable-pic --disable-cli &&         make -j $(nproc) &&         make -j $(nproc) install &&         rm -rf ${DIR}', 'DIR=/tmp/x265 &&         mkdir -p ${DIR} &&         cd ${DIR} &&         curl -sL https://download.videolan.org/pub/videolan/x265/x265_${X265_VERSION}.tar.gz  |         tar -zx &&         cd x265_${X265_VERSION}/build/linux &&         sed -i ""/-DEXTRA_LIB/ s/$/ -DCMAKE_INSTALL_PREFIX=\\${PREFIX}/"" multilib.sh &&         sed -i ""/^cmake/ s/$/ -DENABLE_CLI=OFF/"" multilib.sh &&         export CXXFLAGS=""${CXXFLAGS} -fPIC"" &&         ./multilib.sh &&         make -C 8bit install &&         rm -rf ${DIR}', 'DIR=/tmp/ogg &&         mkdir -p ${DIR} &&         cd ${DIR} &&         curl -sLO http://downloads.xiph.org/releases/ogg/libogg-${OGG_VERSION}.tar.gz &&         echo ${OGG_SHA256SUM} | sha256sum --check &&         tar -zx --strip-components=1 -f libogg-${OGG_VERSION}.tar.gz &&         ./configure --prefix=""${PREFIX}"" --enable-shared  &&         make -j $(nproc) &&         make -j $(nproc) install &&         rm -rf ${DIR}', 'DIR=/tmp/opus &&         mkdir -p ${DIR} &&         cd ${DIR} &&         curl -sLO https://archive.mozilla.org/pub/opus/opus-${OPUS_VERSION}.tar.gz &&         echo ${OPUS_SHA256SUM} | sha256sum --check &&         tar -zx --strip-components=1 -f opus-${OPUS_VERSION}.tar.gz &&         autoreconf -fiv &&         ./configure --prefix=""${PREFIX}"" --enable-shared &&         make -j $(nproc) &&         make -j $(nproc) install &&         rm -rf ${DIR}', 'DIR=/tmp/vorbis &&         mkdir -p ${DIR} &&         cd ${DIR} &&         curl -sLO http://downloads.xiph.org/releases/vorbis/libvorbis-${VORBIS_VERSION}.tar.gz &&         echo ${VORBIS_SHA256SUM} | sha256sum --check &&         tar -zx --strip-components=1 -f libvorbis-${VORBIS_VERSION}.tar.gz &&         ./configure --prefix=""${PREFIX}"" --with-ogg=""${PREFIX}"" --enable-shared &&         make -j $(nproc) &&         make -j $(nproc) install &&         rm -rf ${DIR}', 'DIR=/tmp/theora &&         mkdir -p ${DIR} &&         cd ${DIR} &&         curl -sLO http://downloads.xiph.org/releases/theora/libtheora-${THEORA_VERSION}.tar.gz &&         echo ${THEORA_SHA256SUM} | sha256sum --check &&         tar -zx --strip-components=1 -f libtheora-${THEORA_VERSION}.tar.gz &&         curl -sL \'http://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=config.guess;hb=HEAD\' -o config.guess &&         curl -sL \'http://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=config.sub;hb=HEAD\' -o config.sub &&         ./configure --prefix=""${PREFIX}"" --with-ogg=""${PREFIX}"" --enable-shared &&         make -j $(nproc) &&         make -j $(nproc) install &&         rm -rf ${DIR}', 'DIR=/tmp/vpx &&         mkdir -p ${DIR} &&         cd ${DIR} &&         curl -sL https://codeload.github.com/webmproject/libvpx/tar.gz/v${VPX_VERSION} |         tar -zx --strip-components=1 &&         ./configure --prefix=""${PREFIX}"" --enable-vp8 --enable-vp9 --enable-vp9-highbitdepth --enable-pic --enable-shared         --disable-debug --disable-examples --disable-docs --disable-install-bins  &&         make -j $(nproc) &&         make -j $(nproc) install &&         rm -rf ${DIR}', 'DIR=/tmp/vebp &&         mkdir -p ${DIR} &&         cd ${DIR} &&         curl -sL https://storage.googleapis.com/downloads.webmproject.org/releases/webp/libwebp-${WEBP_VERSION}.tar.gz |         tar -zx --strip-components=1 &&         ./configure --prefix=""${PREFIX}"" --enable-shared  &&         make -j $(nproc) &&         make -j $(nproc) install &&         rm -rf ${DIR}', 'DIR=/tmp/lame &&         mkdir -p ${DIR} &&         cd ${DIR} &&         curl -sL https://versaweb.dl.sourceforge.net/project/lame/lame/$(echo ${LAME_VERSION} | sed -e \'s/[^0-9]*\\([0-9]*\\)[.]\\([0-9]*\\)[.]\\([0-9]*\\)\\([0-9A-Za-z-]*\\)/\\1.\\2/\')/lame-${LAME_VERSION}.tar.gz |         tar -zx --strip-components=1 &&         ./configure --prefix=""${PREFIX}"" --bindir=""${PREFIX}/bin"" --enable-shared --enable-nasm --disable-frontend &&         make -j $(nproc) &&         make -j $(nproc) install &&         rm -rf ${DIR}', 'DIR=/tmp/xvid &&         mkdir -p ${DIR} &&         cd ${DIR} &&         curl -sLO http://downloads.xvid.org/downloads/xvidcore-${XVID_VERSION}.tar.gz &&         echo ${XVID_SHA256SUM} | sha256sum --check &&         tar -zx -f xvidcore-${XVID_VERSION}.tar.gz &&         cd xvidcore/build/generic &&         ./configure --prefix=""${PREFIX}"" --bindir=""${PREFIX}/bin"" &&         make -j $(nproc) &&         make -j $(nproc) install &&         rm -rf ${DIR}', 'DIR=/tmp/fdk-aac &&         mkdir -p ${DIR} &&         cd ${DIR} &&         curl -sL https://github.com/mstorsjo/fdk-aac/archive/v${FDKAAC_VERSION}.tar.gz |         tar -zx --strip-components=1 &&         autoreconf -fiv &&         ./configure --prefix=""${PREFIX}"" --enable-shared --datadir=""${DIR}"" &&         make -j $(nproc) &&         make -j $(nproc) install &&         rm -rf ${DIR}', 'DIR=/tmp/openjpeg &&         mkdir -p ${DIR} &&         cd ${DIR} &&         curl -sL https://github.com/uclouvain/openjpeg/archive/v${OPENJPEG_VERSION}.tar.gz |         tar -zx --strip-components=1 &&         export CFLAGS=""${CFLAGS} -DPNG_ARM_NEON_OPT=0"" &&         cmake -DBUILD_THIRDPARTY:BOOL=ON -DCMAKE_INSTALL_PREFIX=""${PREFIX}"" . &&         make -j $(nproc) &&         make -j $(nproc) install &&         rm -rf ${DIR}', 'DIR=/tmp/freetype &&         mkdir -p ${DIR} &&         cd ${DIR} &&         curl -sLO https://download.savannah.gnu.org/releases/freetype/freetype-${FREETYPE_VERSION}.tar.gz &&         echo ${FREETYPE_SHA256SUM} | sha256sum --check &&         tar -zx --strip-components=1 -f freetype-${FREETYPE_VERSION}.tar.gz &&         ./configure --prefix=""${PREFIX}"" --disable-static --enable-shared &&         make -j $(nproc) &&         make -j $(nproc) install &&         rm -rf ${DIR}', 'DIR=/tmp/vid.stab &&         mkdir -p ${DIR} &&         cd ${DIR} &&         curl -sLO https://github.com/georgmartius/vid.stab/archive/v${LIBVIDSTAB_VERSION}.tar.gz &&         echo ${LIBVIDSTAB_SHA256SUM} | sha256sum --check &&          tar -zx --strip-components=1 -f v${LIBVIDSTAB_VERSION}.tar.gz &&         cmake -DCMAKE_INSTALL_PREFIX=""${PREFIX}"" . &&         make -j $(nproc) &&         make -j $(nproc) install &&         rm -rf ${DIR}', 'DIR=/tmp/fribidi &&         mkdir -p ${DIR} &&         cd ${DIR} &&         curl -sLO https://github.com/fribidi/fribidi/archive/${FRIBIDI_VERSION}.tar.gz &&         echo ${FRIBIDI_SHA256SUM} | sha256sum --check &&         tar -zx --strip-components=1 -f ${FRIBIDI_VERSION}.tar.gz &&         sed -i \'s/^SUBDIRS =.*/SUBDIRS=gen.tab charset lib bin/\' Makefile.am &&         ./bootstrap --no-config --auto &&         ./configure --prefix=""${PREFIX}"" --disable-static --enable-shared &&         make -j1 &&         make -j $(nproc) install &&         rm -rf ${DIR}', 'DIR=/tmp/kvazaar &&         mkdir -p ${DIR} &&         cd ${DIR} &&         curl -sLO https://github.com/ultravideo/kvazaar/archive/v${KVAZAAR_VERSION}.tar.gz &&         tar -zx --strip-components=1 -f v${KVAZAAR_VERSION}.tar.gz &&         ./autogen.sh &&         ./configure --prefix=""${PREFIX}"" --disable-static --enable-shared &&         make -j $(nproc) &&         make -j $(nproc) install &&         rm -rf ${DIR}', 'DIR=/tmp/aom &&         git clone --branch ${AOM_VERSION} --depth 1 https://aomedia.googlesource.com/aom ${DIR} ;         cd ${DIR} ;         rm -rf CMakeCache.txt CMakeFiles ;         mkdir -p ./aom_build ;         cd ./aom_build ;         cmake -DCMAKE_INSTALL_PREFIX=""${PREFIX}"" -DBUILD_SHARED_LIBS=1 ..;         make ;         make install ;         rm -rf ${DIR}', 'DIR=/tmp/xorg-macros &&         mkdir -p ${DIR} &&         cd ${DIR} &&         curl -sLO https://www.x.org/archive//individual/util/util-macros-${XORG_MACROS_VERSION}.tar.gz &&         tar -zx --strip-components=1 -f util-macros-${XORG_MACROS_VERSION}.tar.gz &&         ./configure --srcdir=${DIR} --prefix=""${PREFIX}"" &&         make -j $(nproc) &&         make -j $(nproc) install &&         rm -rf ${DIR}', 'DIR=/tmp/xproto &&         mkdir -p ${DIR} &&         cd ${DIR} &&         curl -sLO https://www.x.org/archive/individual/proto/xproto-${XPROTO_VERSION}.tar.gz &&         tar -zx --strip-components=1 -f xproto-${XPROTO_VERSION}.tar.gz &&         curl -sL \'http://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=config.guess;hb=HEAD\' -o config.guess &&         curl -sL \'http://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=config.sub;hb=HEAD\' -o config.sub &&         ./configure --srcdir=${DIR} --prefix=""${PREFIX}"" &&         make -j $(nproc) &&         make -j $(nproc) install &&         rm -rf ${DIR}', 'DIR=/tmp/libXau &&         mkdir -p ${DIR} &&         cd ${DIR} &&         curl -sLO https://www.x.org/archive/individual/lib/libXau-${XAU_VERSION}.tar.gz &&         tar -zx --strip-components=1 -f libXau-${XAU_VERSION}.tar.gz &&         ./configure --srcdir=${DIR} --prefix=""${PREFIX}"" &&         make -j $(nproc) &&         make -j $(nproc) install &&         rm -rf ${DIR}', 'DIR=/tmp/libpthread-stubs &&         mkdir -p ${DIR} &&         cd ${DIR} &&         curl -sLO https://xcb.freedesktop.org/dist/libpthread-stubs-${LIBPTHREAD_STUBS_VERSION}.tar.gz &&         tar -zx --strip-components=1 -f libpthread-stubs-${LIBPTHREAD_STUBS_VERSION}.tar.gz &&         ./configure --prefix=""${PREFIX}"" &&         make -j $(nproc) &&         make -j $(nproc) install &&         rm -rf ${DIR}', 'DIR=/tmp/libxcb-proto &&         mkdir -p ${DIR} &&         cd ${DIR} &&         curl -sLO https://xcb.freedesktop.org/dist/xcb-proto-${XCBPROTO_VERSION}.tar.gz &&         tar -zx --strip-components=1 -f xcb-proto-${XCBPROTO_VERSION}.tar.gz &&         ACLOCAL_PATH=""${PREFIX}/share/aclocal"" ./autogen.sh &&         ./configure --prefix=""${PREFIX}"" &&         make -j $(nproc) &&         make -j $(nproc) install &&         rm -rf ${DIR}', 'DIR=/tmp/libxcb &&         mkdir -p ${DIR} &&         cd ${DIR} &&         curl -sLO https://xcb.freedesktop.org/dist/libxcb-${LIBXCB_VERSION}.tar.gz &&         tar -zx --strip-components=1 -f libxcb-${LIBXCB_VERSION}.tar.gz &&         ACLOCAL_PATH=""${PREFIX}/share/aclocal"" ./autogen.sh &&         ./configure --prefix=""${PREFIX}"" --disable-static --enable-shared &&         make -j $(nproc) &&         make -j $(nproc) install &&         rm -rf ${DIR}', 'DIR=/tmp/libzmq &&         mkdir -p ${DIR} &&         cd ${DIR} &&         curl -sLO https://github.com/zeromq/libzmq/archive/v${LIBZMQ_VERSION}.tar.gz &&         echo ${LIBZMQ_SHA256SUM} | sha256sum --check &&         tar -xz --strip-components=1 -f v${LIBZMQ_VERSION}.tar.gz &&         ./autogen.sh &&         ./configure --prefix=""${PREFIX}"" &&         make -j $(nproc) &&         make check &&         make -j $(nproc) install &&         rm -rf ${DIR}', 'DIR=/tmp/rkmpp &&         mkdir -p ${DIR} &&         cd ${DIR} &&         git clone https://github.com/rockchip-linux/libdrm-rockchip && git clone https://github.com/rockchip-linux/mpp &&         cd libdrm-rockchip && bash autogen.sh && ./configure && make && make install &&         cd ../mpp && cmake -DRKPLATFORM=ON -DHAVE_DRM=ON && make -j6 && make install &&         rm -rf ${DIR}', 'DIR=/tmp/ffmpeg && mkdir -p ${DIR} && cd ${DIR} &&         curl -sLO https://ffmpeg.org/releases/ffmpeg-${FFMPEG_VERSION}.tar.bz2 &&         tar -jx --strip-components=1 -f ffmpeg-${FFMPEG_VERSION}.tar.bz2', 'DIR=/tmp/ffmpeg && mkdir -p ${DIR} && cd ${DIR} &&         ./configure         --disable-debug         --disable-doc         --disable-ffplay         --enable-shared         --enable-avresample         --enable-libopencore-amrnb         --enable-libopencore-amrwb         --enable-gpl         --enable-libfreetype         --enable-libvidstab         --enable-libmp3lame         --enable-libopus         --enable-libtheora         --enable-libvorbis         --enable-libvpx         --enable-libwebp         --enable-libxcb         --enable-libx265         --enable-libxvid         --enable-libx264         --enable-nonfree         --enable-openssl         --enable-libfdk_aac         --enable-postproc         --enable-small         --enable-version3         --enable-libzmq         --extra-libs=-ldl         --prefix=""${PREFIX}""         --enable-libopenjpeg         --enable-libkvazaar         --enable-libaom         --extra-libs=-lpthread         --enable-rkmpp         --enable-libdrm         --enable-v4l2_m2m         --enable-neon         --extra-cflags=""-I${PREFIX}/include""         --extra-ldflags=""-L${PREFIX}/lib"" &&         make -j $(nproc) &&         make -j $(nproc) install &&         make tools/zmqsend && cp tools/zmqsend ${PREFIX}/bin/ &&         make distclean &&         hash -r &&         cd tools &&         make qt-faststart && cp qt-faststart ${PREFIX}/bin/', 'ldd ${PREFIX}/bin/ffmpeg | grep opt/ffmpeg | cut -d \' \' -f 3 | xargs -i cp {} /usr/local/lib/ &&         for lib in /usr/local/lib/*.so.*; do ln -s ""${lib##*/}"" ""${lib%%.so.*}"".so; done &&         cp ${PREFIX}/bin/* /usr/local/bin/ &&         cp -r ${PREFIX}/share/ffmpeg /usr/local/share/ &&         LD_LIBRARY_PATH=/usr/local/lib ffmpeg -buildconf &&         cp -r ${PREFIX}/include/libav* ${PREFIX}/include/libpostproc ${PREFIX}/include/libsw* /usr/local/include &&         mkdir -p /usr/local/lib/pkgconfig &&         for pc in ${PREFIX}/lib/pkgconfig/libav*.pc ${PREFIX}/lib/pkgconfig/libpostproc.pc ${PREFIX}/lib/pkgconfig/libsw*.pc; do         sed ""s:${PREFIX}:/usr/local:g"" <""$pc"" >/usr/local/lib/pkgconfig/""${pc##*/}"";         done']"
blakeblackshear/frigate,latest,/docker/Dockerfile.ffmpeg.aarch64,ARG,14,"['FREETYPE_SHA256SUM=""a45c6b403413abd5706f3582f04c8339d26397c4304b78fa552f2215df64101f freetype-2.11.0.tar.gz""', 'FRIBIDI_SHA256SUM=""3fc96fa9473bd31dcb5500bdf1aa78b337ba13eb8c301e7c28923fea982453a8 0.19.7.tar.gz""', 'LIBVIDSTAB_SHA256SUM=""14d2a053e56edad4f397be0cb3ef8eb1ec3150404ce99a426c4eb641861dc0bb v1.1.0.tar.gz""', 'OGG_SHA256SUM=""e19ee34711d7af328cb26287f4137e70630e7261b17cbe3cd41011d73a654692 libogg-1.3.2.tar.gz""', 'OPUS_SHA256SUM=""77db45a87b51578fbc49555ef1b10926179861d854eb2613207dc79d9ec0a9a9 opus-1.2.tar.gz""', 'THEORA_SHA256SUM=""40952956c47811928d1e7922cda3bc1f427eb75680c3c37249c91e949054916b libtheora-1.1.1.tar.gz""', 'VORBIS_SHA256SUM=""6efbcecdd3e5dfbf090341b485da9d176eb250d893e3eb378c428a2db38301ce libvorbis-1.3.5.tar.gz""', 'XVID_SHA256SUM=""4e9fd62728885855bc5007fe1be58df42e5e274497591fec37249e1052ae316f xvidcore-1.3.4.tar.gz""', 'LIBZMQ_SHA256SUM=""02ecc88466ae38cf2c8d79f09cfd2675ba299a439680b64ade733e26a349edeb v4.3.2.tar.gz""', 'LD_LIBRARY_PATH=/opt/ffmpeg/lib', 'MAKEFLAGS=""-j2""', 'PKG_CONFIG_PATH=""/opt/ffmpeg/share/pkgconfig:/opt/ffmpeg/lib/pkgconfig:/opt/ffmpeg/lib64/pkgconfig""', 'PREFIX=/opt/ffmpeg', 'LD_LIBRARY_PATH=""/opt/ffmpeg/lib:/opt/ffmpeg/lib64:/usr/lib64:/usr/lib:/lib64:/lib""']"
blakeblackshear/frigate,latest,/docker/Dockerfile.ffmpeg.aarch64,CMD,1,"['[""--help""]']"
blakeblackshear/frigate,latest,/docker/Dockerfile.ffmpeg.aarch64,ENTRYPOINT,1,"['[""ffmpeg""]']"
blakeblackshear/frigate,latest,/docker/Dockerfile.ffmpeg.aarch64,COPY,1,['--from=build /usr/local /usr/local/']
blakeblackshear/frigate,latest,/docker/Dockerfile.dev,FROM,1,['frigate:latest']
blakeblackshear/frigate,latest,/docker/Dockerfile.dev,ARG,3,"['USERNAME=vscode', 'USER_UID=1000', 'USER_GID=$USER_UID']"
blakeblackshear/frigate,latest,/docker/Dockerfile.dev,RUN,4,"['groupadd --gid $USER_GID $USERNAME     && useradd --uid $USER_UID --gid $USER_GID -m $USERNAME     && apt-get update     && apt-get install -y sudo     && echo $USERNAME ALL=\\(root\\) NOPASSWD:ALL > /etc/sudoers.d/$USERNAME     && chmod 0440 /etc/sudoers.d/$USERNAME', 'apt-get update     && apt-get install -y git curl vim htop', 'pip3 install pylint black', 'curl -sL https://deb.nodesource.com/setup_14.x | bash -     && apt-get install -y nodejs']"
blakeblackshear/frigate,latest,/docker/Dockerfile.ffmpeg.amd64nvidia,FROM,4,"['nvidia/cuda:11.1-devel-ubuntu20.04 AS devel-base', 'nvidia/cuda:11.1-runtime-ubuntu20.04 AS runtime-base', 'devel-base as build', 'runtime-base AS release']"
blakeblackshear/frigate,latest,/docker/Dockerfile.ffmpeg.amd64nvidia,ENV,7,"['NVIDIA_DRIVER_CAPABILITIES compute,utility,video', 'DEBIAN_FRONTEND=noninteractive', 'NVIDIA_DRIVER_CAPABILITIES compute,utility,video', 'DEBIAN_FRONTEND=noninteractive', 'NVIDIA_HEADERS_VERSION=9.1.23.1', 'FFMPEG_VERSION=4.3.2         AOM_VERSION=v1.0.0         FDKAAC_VERSION=0.1.5         FREETYPE_VERSION=2.5.5         FRIBIDI_VERSION=0.19.7         KVAZAAR_VERSION=1.2.0         LAME_VERSION=3.100         LIBPTHREAD_STUBS_VERSION=0.4         LIBVIDSTAB_VERSION=1.1.0         LIBXCB_VERSION=1.13.1         XCBPROTO_VERSION=1.13         OGG_VERSION=1.3.2         OPENCOREAMR_VERSION=0.1.5         OPUS_VERSION=1.2         OPENJPEG_VERSION=2.1.2         THEORA_VERSION=1.1.1         VORBIS_VERSION=1.3.5         VPX_VERSION=1.8.0         WEBP_VERSION=1.0.2         X264_VERSION=20170226-2245-stable         X265_VERSION=3.1.1         XAU_VERSION=1.0.9         XORG_MACROS_VERSION=1.19.2         XPROTO_VERSION=7.0.31         XVID_VERSION=1.3.4         LIBZMQ_VERSION=4.3.2         LIBSRT_VERSION=1.4.1         LIBARIBB24_VERSION=1.0.3         LIBPNG_VERSION=1.6.9         SRC=/usr/local', 'LD_LIBRARY_PATH=/usr/local/lib:/usr/local/lib64']"
blakeblackshear/frigate,latest,/docker/Dockerfile.ffmpeg.amd64nvidia,WORKDIR,2,"['/tmp/workdir', '/tmp/workdir']"
blakeblackshear/frigate,latest,/docker/Dockerfile.ffmpeg.amd64nvidia,RUN,35,"['apt-get -yqq update &&         apt-get install -yq --no-install-recommends ca-certificates expat libgomp1 &&         apt-get autoremove -y &&         apt-get clean -y', 'apt-get -yqq update &&         apt-get install -yq --no-install-recommends ca-certificates expat libgomp1 libxcb-shape0-dev &&         apt-get autoremove -y &&         apt-get clean -y', 'buildDeps=""autoconf         automake         cmake         curl         bzip2         libexpat1-dev         g++         gcc         git         gperf         libtool         make         nasm         perl         pkg-config         python         libssl-dev         yasm         zlib1g-dev"" &&         apt-get -yqq update &&         apt-get install -yq --no-install-recommends ${buildDeps}', 'DIR=/tmp/nv-codec-headers &&         git clone https://github.com/FFmpeg/nv-codec-headers ${DIR} &&         cd ${DIR} &&         git checkout n${NVIDIA_HEADERS_VERSION} &&         make PREFIX=""${PREFIX}"" &&         make install PREFIX=""${PREFIX}"" &&         rm -rf ${DIR}', 'DIR=/tmp/opencore-amr &&         mkdir -p ${DIR} &&         cd ${DIR} &&         curl -sL https://versaweb.dl.sourceforge.net/project/opencore-amr/opencore-amr/opencore-amr-${OPENCOREAMR_VERSION}.tar.gz |         tar -zx --strip-components=1 &&         ./configure --prefix=""${PREFIX}"" --enable-shared  &&         make &&         make install &&         rm -rf ${DIR}', 'DIR=/tmp/x264 &&         mkdir -p ${DIR} &&         cd ${DIR} &&         curl -sL https://download.videolan.org/pub/videolan/x264/snapshots/x264-snapshot-${X264_VERSION}.tar.bz2 |         tar -jx --strip-components=1 &&         ./configure --prefix=""${PREFIX}"" --enable-shared --enable-pic --disable-cli &&         make &&         make install &&         rm -rf ${DIR}', 'DIR=/tmp/x265 &&         mkdir -p ${DIR} &&         cd ${DIR} &&         curl -sL https://download.videolan.org/pub/videolan/x265/x265_${X265_VERSION}.tar.gz  |         tar -zx &&         cd x265_${X265_VERSION}/build/linux &&         sed -i ""/-DEXTRA_LIB/ s/$/ -DCMAKE_INSTALL_PREFIX=\\${PREFIX}/"" multilib.sh &&         sed -i ""/^cmake/ s/$/ -DENABLE_CLI=OFF/"" multilib.sh &&         ./multilib.sh &&         make -C 8bit install &&         rm -rf ${DIR}', 'DIR=/tmp/ogg &&         mkdir -p ${DIR} &&         cd ${DIR} &&         curl -sLO http://downloads.xiph.org/releases/ogg/libogg-${OGG_VERSION}.tar.gz &&         echo ${OGG_SHA256SUM} | sha256sum --check &&         tar -zx --strip-components=1 -f libogg-${OGG_VERSION}.tar.gz &&         ./configure --prefix=""${PREFIX}"" --enable-shared  &&         make &&         make install &&         rm -rf ${DIR}', 'DIR=/tmp/opus &&         mkdir -p ${DIR} &&         cd ${DIR} &&         curl -sLO https://archive.mozilla.org/pub/opus/opus-${OPUS_VERSION}.tar.gz &&         echo ${OPUS_SHA256SUM} | sha256sum --check &&         tar -zx --strip-components=1 -f opus-${OPUS_VERSION}.tar.gz &&         autoreconf -fiv &&         ./configure --prefix=""${PREFIX}"" --enable-shared &&         make &&         make install &&         rm -rf ${DIR}', 'DIR=/tmp/vorbis &&         mkdir -p ${DIR} &&         cd ${DIR} &&         curl -sLO http://downloads.xiph.org/releases/vorbis/libvorbis-${VORBIS_VERSION}.tar.gz &&         echo ${VORBIS_SHA256SUM} | sha256sum --check &&         tar -zx --strip-components=1 -f libvorbis-${VORBIS_VERSION}.tar.gz &&         ./configure --prefix=""${PREFIX}"" --with-ogg=""${PREFIX}"" --enable-shared &&         make &&         make install &&         rm -rf ${DIR}', 'DIR=/tmp/theora &&         mkdir -p ${DIR} &&         cd ${DIR} &&         curl -sLO http://downloads.xiph.org/releases/theora/libtheora-${THEORA_VERSION}.tar.gz &&         echo ${THEORA_SHA256SUM} | sha256sum --check &&         tar -zx --strip-components=1 -f libtheora-${THEORA_VERSION}.tar.gz &&         ./configure --prefix=""${PREFIX}"" --with-ogg=""${PREFIX}"" --enable-shared &&         make &&         make install &&         rm -rf ${DIR}', 'DIR=/tmp/vpx &&         mkdir -p ${DIR} &&         cd ${DIR} &&         curl -sL https://codeload.github.com/webmproject/libvpx/tar.gz/v${VPX_VERSION} |         tar -zx --strip-components=1 &&         ./configure --prefix=""${PREFIX}"" --enable-vp8 --enable-vp9 --enable-vp9-highbitdepth --enable-pic --enable-shared         --disable-debug --disable-examples --disable-docs --disable-install-bins  &&         make &&         make install &&         rm -rf ${DIR}', 'DIR=/tmp/vebp &&         mkdir -p ${DIR} &&         cd ${DIR} &&         curl -sL https://storage.googleapis.com/downloads.webmproject.org/releases/webp/libwebp-${WEBP_VERSION}.tar.gz |         tar -zx --strip-components=1 &&         ./configure --prefix=""${PREFIX}"" --enable-shared  &&         make &&         make install &&         rm -rf ${DIR}', 'DIR=/tmp/lame &&         mkdir -p ${DIR} &&         cd ${DIR} &&         curl -sL https://versaweb.dl.sourceforge.net/project/lame/lame/$(echo ${LAME_VERSION} | sed -e \'s/[^0-9]*\\([0-9]*\\)[.]\\([0-9]*\\)[.]\\([0-9]*\\)\\([0-9A-Za-z-]*\\)/\\1.\\2/\')/lame-${LAME_VERSION}.tar.gz |         tar -zx --strip-components=1 &&         ./configure --prefix=""${PREFIX}"" --bindir=""${PREFIX}/bin"" --enable-shared --enable-nasm --disable-frontend &&         make &&         make install &&         rm -rf ${DIR}', 'DIR=/tmp/xvid &&         mkdir -p ${DIR} &&         cd ${DIR} &&         curl -sLO http://downloads.xvid.org/downloads/xvidcore-${XVID_VERSION}.tar.gz &&         echo ${XVID_SHA256SUM} | sha256sum --check &&         tar -zx -f xvidcore-${XVID_VERSION}.tar.gz &&         cd xvidcore/build/generic &&         ./configure --prefix=""${PREFIX}"" --bindir=""${PREFIX}/bin"" &&         make &&         make install &&         rm -rf ${DIR}', 'DIR=/tmp/fdk-aac &&         mkdir -p ${DIR} &&         cd ${DIR} &&         curl -sL https://github.com/mstorsjo/fdk-aac/archive/v${FDKAAC_VERSION}.tar.gz |         tar -zx --strip-components=1 &&         autoreconf -fiv &&         ./configure --prefix=""${PREFIX}"" --enable-shared --datadir=""${DIR}"" &&         make &&         make install &&         rm -rf ${DIR}', 'DIR=/tmp/openjpeg &&         mkdir -p ${DIR} &&         cd ${DIR} &&         curl -sL https://github.com/uclouvain/openjpeg/archive/v${OPENJPEG_VERSION}.tar.gz |         tar -zx --strip-components=1 &&         cmake -DBUILD_THIRDPARTY:BOOL=ON -DCMAKE_INSTALL_PREFIX=""${PREFIX}"" . &&         make &&         make install &&         rm -rf ${DIR}', 'DIR=/tmp/freetype &&         mkdir -p ${DIR} &&         cd ${DIR} &&         curl -sLO https://download.savannah.gnu.org/releases/freetype/freetype-${FREETYPE_VERSION}.tar.gz &&         echo ${FREETYPE_SHA256SUM} | sha256sum --check &&         tar -zx --strip-components=1 -f freetype-${FREETYPE_VERSION}.tar.gz &&         ./configure --prefix=""${PREFIX}"" --disable-static --enable-shared &&         make &&         make install &&         rm -rf ${DIR}', 'DIR=/tmp/vid.stab &&         mkdir -p ${DIR} &&         cd ${DIR} &&         curl -sLO https://github.com/georgmartius/vid.stab/archive/v${LIBVIDSTAB_VERSION}.tar.gz &&         echo ${LIBVIDSTAB_SHA256SUM} | sha256sum --check &&          tar -zx --strip-components=1 -f v${LIBVIDSTAB_VERSION}.tar.gz &&         cmake -DCMAKE_INSTALL_PREFIX=""${PREFIX}"" . &&         make &&         make install &&         rm -rf ${DIR}', 'DIR=/tmp/fribidi &&         mkdir -p ${DIR} &&         cd ${DIR} &&         curl -sLO https://github.com/fribidi/fribidi/archive/${FRIBIDI_VERSION}.tar.gz &&         echo ${FRIBIDI_SHA256SUM} | sha256sum --check &&         tar -zx --strip-components=1 -f ${FRIBIDI_VERSION}.tar.gz &&         sed -i \'s/^SUBDIRS =.*/SUBDIRS=gen.tab charset lib bin/\' Makefile.am &&         ./bootstrap --no-config --auto &&         ./configure --prefix=""${PREFIX}"" --disable-static --enable-shared &&         make -j1 &&         make install &&         rm -rf ${DIR}', 'DIR=/tmp/kvazaar &&         mkdir -p ${DIR} &&         cd ${DIR} &&         curl -sLO https://github.com/ultravideo/kvazaar/archive/v${KVAZAAR_VERSION}.tar.gz &&         tar -zx --strip-components=1 -f v${KVAZAAR_VERSION}.tar.gz &&         ./autogen.sh &&         ./configure --prefix=""${PREFIX}"" --disable-static --enable-shared &&         make &&         make install &&         rm -rf ${DIR}', 'DIR=/tmp/aom &&         git clone --branch ${AOM_VERSION} --depth 1 https://aomedia.googlesource.com/aom ${DIR} ;         cd ${DIR} ;         rm -rf CMakeCache.txt CMakeFiles ;         mkdir -p ./aom_build ;         cd ./aom_build ;         cmake -DCMAKE_INSTALL_PREFIX=""${PREFIX}"" -DBUILD_SHARED_LIBS=1 ..;         make ;         make install ;         rm -rf ${DIR}', 'DIR=/tmp/xorg-macros &&         mkdir -p ${DIR} &&         cd ${DIR} &&         curl -sLO https://www.x.org/archive//individual/util/util-macros-${XORG_MACROS_VERSION}.tar.gz &&         tar -zx --strip-components=1 -f util-macros-${XORG_MACROS_VERSION}.tar.gz &&         ./configure --srcdir=${DIR} --prefix=""${PREFIX}"" &&         make &&         make install &&         rm -rf ${DIR}', 'DIR=/tmp/xproto &&         mkdir -p ${DIR} &&         cd ${DIR} &&         curl -sLO https://www.x.org/archive/individual/proto/xproto-${XPROTO_VERSION}.tar.gz &&         tar -zx --strip-components=1 -f xproto-${XPROTO_VERSION}.tar.gz &&         ./configure --srcdir=${DIR} --prefix=""${PREFIX}"" &&         make &&         make install &&         rm -rf ${DIR}', 'DIR=/tmp/libXau &&         mkdir -p ${DIR} &&         cd ${DIR} &&         curl -sLO https://www.x.org/archive/individual/lib/libXau-${XAU_VERSION}.tar.gz &&         tar -zx --strip-components=1 -f libXau-${XAU_VERSION}.tar.gz &&         ./configure --srcdir=${DIR} --prefix=""${PREFIX}"" &&         make &&         make install &&         rm -rf ${DIR}', 'DIR=/tmp/libpthread-stubs &&         mkdir -p ${DIR} &&         cd ${DIR} &&         curl -sLO https://xcb.freedesktop.org/dist/libpthread-stubs-${LIBPTHREAD_STUBS_VERSION}.tar.gz &&         tar -zx --strip-components=1 -f libpthread-stubs-${LIBPTHREAD_STUBS_VERSION}.tar.gz &&         ./configure --prefix=""${PREFIX}"" &&         make &&         make install &&         rm -rf ${DIR}', 'DIR=/tmp/libxcb-proto &&         mkdir -p ${DIR} &&         cd ${DIR} &&         curl -sLO https://xcb.freedesktop.org/dist/xcb-proto-${XCBPROTO_VERSION}.tar.gz &&         tar -zx --strip-components=1 -f xcb-proto-${XCBPROTO_VERSION}.tar.gz &&         ACLOCAL_PATH=""${PREFIX}/share/aclocal"" ./autogen.sh &&         ./configure --prefix=""${PREFIX}"" &&         make &&         make install &&         rm -rf ${DIR}', 'DIR=/tmp/libxcb &&         mkdir -p ${DIR} &&         cd ${DIR} &&         curl -sLO https://xcb.freedesktop.org/dist/libxcb-${LIBXCB_VERSION}.tar.gz &&         tar -zx --strip-components=1 -f libxcb-${LIBXCB_VERSION}.tar.gz &&         ACLOCAL_PATH=""${PREFIX}/share/aclocal"" ./autogen.sh &&         ./configure --prefix=""${PREFIX}"" --disable-static --enable-shared &&         make &&         make install &&         rm -rf ${DIR}', 'DIR=/tmp/libzmq &&         mkdir -p ${DIR} &&         cd ${DIR} &&         curl -sLO https://github.com/zeromq/libzmq/archive/v${LIBZMQ_VERSION}.tar.gz &&         echo ${LIBZMQ_SHA256SUM} | sha256sum --check &&         tar -xz --strip-components=1 -f v${LIBZMQ_VERSION}.tar.gz &&         ./autogen.sh &&         ./configure --prefix=""${PREFIX}"" &&         make &&         make check &&         make install &&         rm -rf ${DIR}', 'DIR=/tmp/srt &&         mkdir -p ${DIR} &&         cd ${DIR} &&         curl -sLO https://github.com/Haivision/srt/archive/v${LIBSRT_VERSION}.tar.gz &&         tar -xz --strip-components=1 -f v${LIBSRT_VERSION}.tar.gz &&         cmake -DCMAKE_INSTALL_PREFIX=""${PREFIX}"" . &&         make &&         make install &&         rm -rf ${DIR}', 'DIR=/tmp/png &&         mkdir -p ${DIR} &&         cd ${DIR} &&         git clone https://git.code.sf.net/p/libpng/code ${DIR} -b v${LIBPNG_VERSION} --depth 1 &&         ./autogen.sh &&         ./configure --prefix=""${PREFIX}"" &&         make check &&         make install &&         rm -rf ${DIR}', 'DIR=/tmp/b24 &&         mkdir -p ${DIR} &&         cd ${DIR} &&         curl -sLO https://github.com/nkoriyama/aribb24/archive/v${LIBARIBB24_VERSION}.tar.gz &&         echo ${LIBARIBB24_SHA256SUM} | sha256sum --check &&         tar -xz --strip-components=1 -f v${LIBARIBB24_VERSION}.tar.gz &&         autoreconf -fiv &&         ./configure CFLAGS=""-I${PREFIX}/include -fPIC"" --prefix=""${PREFIX}"" &&         make &&         make install &&         rm -rf ${DIR}', 'DIR=/tmp/ffmpeg && mkdir -p ${DIR} && cd ${DIR} &&         curl -sLO https://ffmpeg.org/releases/ffmpeg-${FFMPEG_VERSION}.tar.bz2 &&         tar -jx --strip-components=1 -f ffmpeg-${FFMPEG_VERSION}.tar.bz2', 'DIR=/tmp/ffmpeg && mkdir -p ${DIR} && cd ${DIR} &&         ./configure         --disable-debug         --disable-doc         --disable-ffplay         --enable-shared         --enable-avresample         --enable-libopencore-amrnb         --enable-libopencore-amrwb         --enable-gpl         --enable-libfreetype         --enable-libvidstab         --enable-libmp3lame         --enable-libopus         --enable-libtheora         --enable-libvorbis         --enable-libvpx         --enable-libwebp         --enable-libxcb         --enable-libx265         --enable-libxvid         --enable-libx264         --enable-nonfree         --enable-openssl         --enable-libfdk_aac         --enable-postproc         --enable-small         --enable-version3         --enable-libzmq         --extra-libs=-ldl         --prefix=""${PREFIX}""         --enable-libopenjpeg         --enable-libkvazaar         --enable-libaom         --extra-libs=-lpthread         --enable-libsrt         --enable-libaribb24         --enable-nvenc         --enable-cuda         --enable-cuvid         --enable-libnpp         --extra-cflags=""-I${PREFIX}/include -I${PREFIX}/include/ffnvcodec -I/usr/local/cuda/include/""         --extra-ldflags=""-L${PREFIX}/lib -L/usr/local/cuda/lib64 -L/usr/local/cuda/lib32/"" &&         make &&         make install &&         make tools/zmqsend && cp tools/zmqsend ${PREFIX}/bin/ &&         make distclean &&         hash -r &&         cd tools &&         make qt-faststart && cp qt-faststart ${PREFIX}/bin/', 'LD_LIBRARY_PATH=""${PREFIX}/lib:${PREFIX}/lib64:${LD_LIBRARY_PATH}"" ldd ${PREFIX}/bin/ffmpeg | grep opt/ffmpeg | cut -d \' \' -f 3 | xargs -i cp {} /usr/local/lib/ &&         for lib in /usr/local/lib/*.so.*; do ln -s ""${lib##*/}"" ""${lib%%.so.*}"".so; done &&         cp ${PREFIX}/bin/* /usr/local/bin/ &&         cp -r ${PREFIX}/share/* /usr/local/share/ &&         LD_LIBRARY_PATH=/usr/local/lib ffmpeg -buildconf &&         cp -r ${PREFIX}/include/libav* ${PREFIX}/include/libpostproc ${PREFIX}/include/libsw* /usr/local/include &&         mkdir -p /usr/local/lib/pkgconfig &&         for pc in ${PREFIX}/lib/pkgconfig/libav*.pc ${PREFIX}/lib/pkgconfig/libpostproc.pc ${PREFIX}/lib/pkgconfig/libsw*.pc; do         sed ""s:${PREFIX}:/usr/local:g; s:/lib64:/lib:g"" <""$pc"" >/usr/local/lib/pkgconfig/""${pc##*/}"";         done']"
blakeblackshear/frigate,latest,/docker/Dockerfile.ffmpeg.amd64nvidia,ARG,15,"['FREETYPE_SHA256SUM=""5d03dd76c2171a7601e9ce10551d52d4471cf92cd205948e60289251daddffa8 freetype-2.5.5.tar.gz""', 'FRIBIDI_SHA256SUM=""3fc96fa9473bd31dcb5500bdf1aa78b337ba13eb8c301e7c28923fea982453a8 0.19.7.tar.gz""', 'LIBVIDSTAB_SHA256SUM=""14d2a053e56edad4f397be0cb3ef8eb1ec3150404ce99a426c4eb641861dc0bb v1.1.0.tar.gz""', 'OGG_SHA256SUM=""e19ee34711d7af328cb26287f4137e70630e7261b17cbe3cd41011d73a654692 libogg-1.3.2.tar.gz""', 'OPUS_SHA256SUM=""77db45a87b51578fbc49555ef1b10926179861d854eb2613207dc79d9ec0a9a9 opus-1.2.tar.gz""', 'THEORA_SHA256SUM=""40952956c47811928d1e7922cda3bc1f427eb75680c3c37249c91e949054916b libtheora-1.1.1.tar.gz""', 'VORBIS_SHA256SUM=""6efbcecdd3e5dfbf090341b485da9d176eb250d893e3eb378c428a2db38301ce libvorbis-1.3.5.tar.gz""', 'XVID_SHA256SUM=""4e9fd62728885855bc5007fe1be58df42e5e274497591fec37249e1052ae316f xvidcore-1.3.4.tar.gz""', 'LIBZMQ_SHA256SUM=""02ecc88466ae38cf2c8d79f09cfd2675ba299a439680b64ade733e26a349edeb v4.3.2.tar.gz""', 'LIBARIBB24_SHA256SUM=""f61560738926e57f9173510389634d8c06cabedfa857db4b28fb7704707ff128 v1.0.3.tar.gz""', 'LD_LIBRARY_PATH=/opt/ffmpeg/lib', 'MAKEFLAGS=""-j2""', 'PKG_CONFIG_PATH=""/opt/ffmpeg/share/pkgconfig:/opt/ffmpeg/lib/pkgconfig:/opt/ffmpeg/lib64/pkgconfig""', 'PREFIX=/opt/ffmpeg', 'LD_LIBRARY_PATH=""/opt/ffmpeg/lib:/opt/ffmpeg/lib64""']"
blakeblackshear/frigate,latest,/docker/Dockerfile.ffmpeg.amd64nvidia,CMD,1,"['[""--help""]']"
blakeblackshear/frigate,latest,/docker/Dockerfile.ffmpeg.amd64nvidia,ENTRYPOINT,1,"['[""ffmpeg""]']"
blakeblackshear/frigate,latest,/docker/Dockerfile.ffmpeg.amd64nvidia,COPY,4,"['--from=build /usr/local/bin /usr/local/bin/', '--from=build /usr/local/share /usr/local/share/', '--from=build /usr/local/lib /usr/local/lib/', '--from=build /usr/local/include /usr/local/include/']"
blakeblackshear/frigate,latest,/docker/Dockerfile.ffmpeg.armv7,FROM,3,"['ubuntu:20.04 AS base', 'base as build', 'base AS release']"
blakeblackshear/frigate,latest,/docker/Dockerfile.ffmpeg.armv7,WORKDIR,1,['/tmp/workdir']
blakeblackshear/frigate,latest,/docker/Dockerfile.ffmpeg.armv7,ENV,3,"['DEBIAN_FRONTEND=noninteractive', 'FFMPEG_VERSION=4.3.2         AOM_VERSION=v1.0.0         FDKAAC_VERSION=0.1.5         FREETYPE_VERSION=2.5.5         FRIBIDI_VERSION=0.19.7         KVAZAAR_VERSION=1.2.0         LAME_VERSION=3.100         LIBPTHREAD_STUBS_VERSION=0.4         LIBVIDSTAB_VERSION=1.1.0         LIBXCB_VERSION=1.13.1         XCBPROTO_VERSION=1.13         OGG_VERSION=1.3.2         OPENCOREAMR_VERSION=0.1.5         OPUS_VERSION=1.2         OPENJPEG_VERSION=2.1.2         THEORA_VERSION=1.1.1         VORBIS_VERSION=1.3.5         VPX_VERSION=1.8.0         WEBP_VERSION=1.0.2         X264_VERSION=20170226-2245-stable         X265_VERSION=3.1.1         XAU_VERSION=1.0.9         XORG_MACROS_VERSION=1.19.2         XPROTO_VERSION=7.0.31         XVID_VERSION=1.3.4         LIBZMQ_VERSION=4.3.3         SRC=/usr/local', 'LD_LIBRARY_PATH=/usr/local/lib:/usr/local/lib64:/usr/lib:/usr/lib64:/lib:/lib64']"
blakeblackshear/frigate,latest,/docker/Dockerfile.ffmpeg.armv7,RUN,30,"['apt-get -yqq update &&         apt-get install -yq --no-install-recommends ca-certificates expat libgomp1 &&         apt-get autoremove -y &&         apt-get clean -y', 'buildDeps=""autoconf         automake         cmake         curl         bzip2         libexpat1-dev         g++         gcc         git         gperf         libtool         make         nasm         perl         pkg-config         python         sudo         libssl-dev         yasm         linux-headers-raspi2         libomxil-bellagio-dev         libx265-dev         libaom-dev         zlib1g-dev"" &&         apt-get -yqq update &&         apt-get install -yq --no-install-recommends ${buildDeps}', 'DIR=/tmp/opencore-amr &&         mkdir -p ${DIR} &&         cd ${DIR} &&         curl -sL https://versaweb.dl.sourceforge.net/project/opencore-amr/opencore-amr/opencore-amr-${OPENCOREAMR_VERSION}.tar.gz |         tar -zx --strip-components=1 &&         ./configure --prefix=""${PREFIX}"" --enable-shared  &&         make -j $(nproc) &&         make -j $(nproc) install &&         rm -rf ${DIR}', 'DIR=/tmp/x264 &&         mkdir -p ${DIR} &&         cd ${DIR} &&         curl -sL https://download.videolan.org/pub/videolan/x264/snapshots/x264-snapshot-${X264_VERSION}.tar.bz2 |         tar -jx --strip-components=1 &&         ./configure --prefix=""${PREFIX}"" --enable-shared --enable-pic --disable-cli &&         make -j $(nproc) &&         make -j $(nproc) install &&         rm -rf ${DIR}', 'DIR=/tmp/ogg &&         mkdir -p ${DIR} &&         cd ${DIR} &&         curl -sLO http://downloads.xiph.org/releases/ogg/libogg-${OGG_VERSION}.tar.gz &&         echo ${OGG_SHA256SUM} | sha256sum --check &&         tar -zx --strip-components=1 -f libogg-${OGG_VERSION}.tar.gz &&         ./configure --prefix=""${PREFIX}"" --enable-shared  &&         make -j $(nproc) &&         make -j $(nproc) install &&         rm -rf ${DIR}', 'DIR=/tmp/opus &&         mkdir -p ${DIR} &&         cd ${DIR} &&         curl -sLO https://archive.mozilla.org/pub/opus/opus-${OPUS_VERSION}.tar.gz &&         echo ${OPUS_SHA256SUM} | sha256sum --check &&         tar -zx --strip-components=1 -f opus-${OPUS_VERSION}.tar.gz &&         autoreconf -fiv &&         ./configure --prefix=""${PREFIX}"" --enable-shared &&         make -j $(nproc) &&         make -j $(nproc) install &&         rm -rf ${DIR}', 'DIR=/tmp/vorbis &&         mkdir -p ${DIR} &&         cd ${DIR} &&         curl -sLO http://downloads.xiph.org/releases/vorbis/libvorbis-${VORBIS_VERSION}.tar.gz &&         echo ${VORBIS_SHA256SUM} | sha256sum --check &&         tar -zx --strip-components=1 -f libvorbis-${VORBIS_VERSION}.tar.gz &&         ./configure --prefix=""${PREFIX}"" --with-ogg=""${PREFIX}"" --enable-shared &&         make -j $(nproc) &&         make -j $(nproc) install &&         rm -rf ${DIR}', 'DIR=/tmp/theora &&         mkdir -p ${DIR} &&         cd ${DIR} &&         curl -sLO http://downloads.xiph.org/releases/theora/libtheora-${THEORA_VERSION}.tar.gz &&         echo ${THEORA_SHA256SUM} | sha256sum --check &&         tar -zx --strip-components=1 -f libtheora-${THEORA_VERSION}.tar.gz &&         curl -sL \'http://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=config.guess;hb=HEAD\' -o config.guess &&         curl -sL \'http://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=config.sub;hb=HEAD\' -o config.sub &&         ./configure --prefix=""${PREFIX}"" --with-ogg=""${PREFIX}"" --enable-shared &&         make -j $(nproc) &&         make -j $(nproc) install &&         rm -rf ${DIR}', 'DIR=/tmp/vpx &&         mkdir -p ${DIR} &&         cd ${DIR} &&         curl -sL https://codeload.github.com/webmproject/libvpx/tar.gz/v${VPX_VERSION} |         tar -zx --strip-components=1 &&         ./configure --prefix=""${PREFIX}"" --enable-vp8 --enable-vp9 --enable-vp9-highbitdepth --enable-pic --enable-shared         --disable-debug --disable-examples --disable-docs --disable-install-bins  &&         make -j $(nproc) &&         make -j $(nproc) install &&         rm -rf ${DIR}', 'DIR=/tmp/vebp &&         mkdir -p ${DIR} &&         cd ${DIR} &&         curl -sL https://storage.googleapis.com/downloads.webmproject.org/releases/webp/libwebp-${WEBP_VERSION}.tar.gz |         tar -zx --strip-components=1 &&         ./configure --prefix=""${PREFIX}"" --enable-shared  &&         make -j $(nproc) &&         make -j $(nproc) install &&         rm -rf ${DIR}', 'DIR=/tmp/lame &&         mkdir -p ${DIR} &&         cd ${DIR} &&         curl -sL https://versaweb.dl.sourceforge.net/project/lame/lame/$(echo ${LAME_VERSION} | sed -e \'s/[^0-9]*\\([0-9]*\\)[.]\\([0-9]*\\)[.]\\([0-9]*\\)\\([0-9A-Za-z-]*\\)/\\1.\\2/\')/lame-${LAME_VERSION}.tar.gz |         tar -zx --strip-components=1 &&         ./configure --prefix=""${PREFIX}"" --bindir=""${PREFIX}/bin"" --enable-shared --enable-nasm --disable-frontend &&         make -j $(nproc) &&         make -j $(nproc) install &&         rm -rf ${DIR}', 'DIR=/tmp/xvid &&         mkdir -p ${DIR} &&         cd ${DIR} &&         curl -sLO http://downloads.xvid.org/downloads/xvidcore-${XVID_VERSION}.tar.gz &&         echo ${XVID_SHA256SUM} | sha256sum --check &&         tar -zx -f xvidcore-${XVID_VERSION}.tar.gz &&         cd xvidcore/build/generic &&         ./configure --prefix=""${PREFIX}"" --bindir=""${PREFIX}/bin"" &&         make -j $(nproc) &&         make -j $(nproc) install &&         rm -rf ${DIR}', 'DIR=/tmp/fdk-aac &&         mkdir -p ${DIR} &&         cd ${DIR} &&         curl -sL https://github.com/mstorsjo/fdk-aac/archive/v${FDKAAC_VERSION}.tar.gz |         tar -zx --strip-components=1 &&         autoreconf -fiv &&         ./configure --prefix=""${PREFIX}"" --enable-shared --datadir=""${DIR}"" &&         make -j $(nproc) &&         make -j $(nproc) install &&         rm -rf ${DIR}', 'DIR=/tmp/openjpeg &&         mkdir -p ${DIR} &&         cd ${DIR} &&         curl -sL https://github.com/uclouvain/openjpeg/archive/v${OPENJPEG_VERSION}.tar.gz |         tar -zx --strip-components=1 &&         export CFLAGS=""${CFLAGS} -DPNG_ARM_NEON_OPT=0"" &&         cmake -DBUILD_THIRDPARTY:BOOL=ON -DCMAKE_INSTALL_PREFIX=""${PREFIX}"" . &&         make -j $(nproc) &&         make -j $(nproc) install &&         rm -rf ${DIR}', 'DIR=/tmp/freetype &&         mkdir -p ${DIR} &&         cd ${DIR} &&         curl -sLO https://download.savannah.gnu.org/releases/freetype/freetype-${FREETYPE_VERSION}.tar.gz &&         echo ${FREETYPE_SHA256SUM} | sha256sum --check &&         tar -zx --strip-components=1 -f freetype-${FREETYPE_VERSION}.tar.gz &&         ./configure --prefix=""${PREFIX}"" --disable-static --enable-shared &&         make -j $(nproc) &&         make -j $(nproc) install &&         rm -rf ${DIR}', 'DIR=/tmp/vid.stab &&         mkdir -p ${DIR} &&         cd ${DIR} &&         curl -sLO https://github.com/georgmartius/vid.stab/archive/v${LIBVIDSTAB_VERSION}.tar.gz &&         echo ${LIBVIDSTAB_SHA256SUM} | sha256sum --check &&          tar -zx --strip-components=1 -f v${LIBVIDSTAB_VERSION}.tar.gz &&         cmake -DCMAKE_INSTALL_PREFIX=""${PREFIX}"" . &&         make -j $(nproc) &&         make -j $(nproc) install &&         rm -rf ${DIR}', 'DIR=/tmp/fribidi &&         mkdir -p ${DIR} &&         cd ${DIR} &&         curl -sLO https://github.com/fribidi/fribidi/archive/${FRIBIDI_VERSION}.tar.gz &&         echo ${FRIBIDI_SHA256SUM} | sha256sum --check &&         tar -zx --strip-components=1 -f ${FRIBIDI_VERSION}.tar.gz &&         sed -i \'s/^SUBDIRS =.*/SUBDIRS=gen.tab charset lib bin/\' Makefile.am &&         ./bootstrap --no-config --auto &&         ./configure --prefix=""${PREFIX}"" --disable-static --enable-shared &&         make -j1 &&         make -j $(nproc) install &&         rm -rf ${DIR}', 'DIR=/tmp/kvazaar &&         mkdir -p ${DIR} &&         cd ${DIR} &&         curl -sLO https://github.com/ultravideo/kvazaar/archive/v${KVAZAAR_VERSION}.tar.gz &&         tar -zx --strip-components=1 -f v${KVAZAAR_VERSION}.tar.gz &&         ./autogen.sh &&         ./configure --prefix=""${PREFIX}"" --disable-static --enable-shared &&         make -j $(nproc) &&         make -j $(nproc) install &&         rm -rf ${DIR}', 'DIR=/tmp/xorg-macros &&         mkdir -p ${DIR} &&         cd ${DIR} &&         curl -sLO https://www.x.org/archive//individual/util/util-macros-${XORG_MACROS_VERSION}.tar.gz &&         tar -zx --strip-components=1 -f util-macros-${XORG_MACROS_VERSION}.tar.gz &&         ./configure --srcdir=${DIR} --prefix=""${PREFIX}"" &&         make -j $(nproc) &&         make -j $(nproc) install &&         rm -rf ${DIR}', 'DIR=/tmp/xproto &&         mkdir -p ${DIR} &&         cd ${DIR} &&         curl -sLO https://www.x.org/archive/individual/proto/xproto-${XPROTO_VERSION}.tar.gz &&         tar -zx --strip-components=1 -f xproto-${XPROTO_VERSION}.tar.gz &&         curl -sL \'http://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=config.guess;hb=HEAD\' -o config.guess &&         curl -sL \'http://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=config.sub;hb=HEAD\' -o config.sub &&         ./configure --srcdir=${DIR} --prefix=""${PREFIX}"" &&         make -j $(nproc) &&         make -j $(nproc) install &&         rm -rf ${DIR}', 'DIR=/tmp/libXau &&         mkdir -p ${DIR} &&         cd ${DIR} &&         curl -sLO https://www.x.org/archive/individual/lib/libXau-${XAU_VERSION}.tar.gz &&         tar -zx --strip-components=1 -f libXau-${XAU_VERSION}.tar.gz &&         ./configure --srcdir=${DIR} --prefix=""${PREFIX}"" &&         make -j $(nproc) &&         make -j $(nproc) install &&         rm -rf ${DIR}', 'DIR=/tmp/libpthread-stubs &&         mkdir -p ${DIR} &&         cd ${DIR} &&         curl -sLO https://xcb.freedesktop.org/dist/libpthread-stubs-${LIBPTHREAD_STUBS_VERSION}.tar.gz &&         tar -zx --strip-components=1 -f libpthread-stubs-${LIBPTHREAD_STUBS_VERSION}.tar.gz &&         ./configure --prefix=""${PREFIX}"" &&         make -j $(nproc) &&         make -j $(nproc) install &&         rm -rf ${DIR}', 'DIR=/tmp/libxcb-proto &&         mkdir -p ${DIR} &&         cd ${DIR} &&         curl -sLO https://xcb.freedesktop.org/dist/xcb-proto-${XCBPROTO_VERSION}.tar.gz &&         tar -zx --strip-components=1 -f xcb-proto-${XCBPROTO_VERSION}.tar.gz &&         ACLOCAL_PATH=""${PREFIX}/share/aclocal"" ./autogen.sh &&         ./configure --prefix=""${PREFIX}"" &&         make -j $(nproc) &&         make -j $(nproc) install &&         rm -rf ${DIR}', 'DIR=/tmp/libxcb &&         mkdir -p ${DIR} &&         cd ${DIR} &&         curl -sLO https://xcb.freedesktop.org/dist/libxcb-${LIBXCB_VERSION}.tar.gz &&         tar -zx --strip-components=1 -f libxcb-${LIBXCB_VERSION}.tar.gz &&         ACLOCAL_PATH=""${PREFIX}/share/aclocal"" ./autogen.sh &&         ./configure --prefix=""${PREFIX}"" --disable-static --enable-shared &&         make -j $(nproc) &&         make -j $(nproc) install &&         rm -rf ${DIR}', 'DIR=/tmp/libzmq &&         mkdir -p ${DIR} &&         cd ${DIR} &&         curl -sLO https://github.com/zeromq/libzmq/archive/v${LIBZMQ_VERSION}.tar.gz &&         tar -xz --strip-components=1 -f v${LIBZMQ_VERSION}.tar.gz &&         ./autogen.sh &&         ./configure --prefix=""${PREFIX}"" &&         make -j $(nproc) &&         make -j $(nproc) install &&         rm -rf ${DIR}', 'DIR=/tmp/userland &&         mkdir -p ${DIR} &&         cd ${DIR} &&         git clone --depth 1 https://github.com/raspberrypi/userland.git . &&         ./buildme &&         rm -rf ${DIR}', 'DIR=/tmp/ffmpeg && mkdir -p ${DIR} && cd ${DIR} &&         curl -sLO https://ffmpeg.org/releases/ffmpeg-${FFMPEG_VERSION}.tar.bz2 &&         tar -jx --strip-components=1 -f ffmpeg-${FFMPEG_VERSION}.tar.bz2', 'DIR=/tmp/ffmpeg && mkdir -p ${DIR} && cd ${DIR} &&         ./configure         --disable-debug         --disable-doc         --disable-ffplay         --enable-shared         --enable-avresample         --enable-libopencore-amrnb         --enable-libopencore-amrwb         --enable-gpl         --enable-libfreetype         --enable-libvidstab         --enable-libmp3lame         --enable-libopus         --enable-libtheora         --enable-libvorbis         --enable-libvpx         --enable-libwebp         --enable-libxcb         --enable-libx265         --enable-libxvid         --enable-libx264         --enable-nonfree         --enable-openssl         --enable-libfdk_aac         --enable-postproc         --enable-small         --enable-version3         --enable-libzmq         --extra-libs=-ldl         --prefix=""${PREFIX}""         --enable-libopenjpeg         --enable-libkvazaar         --enable-libaom         --extra-libs=-lpthread         --enable-omx         --enable-omx-rpi         --enable-mmal         --enable-v4l2_m2m         --enable-neon         --extra-cflags=""-I${PREFIX}/include""         --extra-ldflags=""-L${PREFIX}/lib"" &&         make -j $(nproc) &&         make -j $(nproc) install &&         make tools/zmqsend && cp tools/zmqsend ${PREFIX}/bin/ &&         make distclean &&         hash -r &&         cd tools &&         make qt-faststart && cp qt-faststart ${PREFIX}/bin/', 'ldd ${PREFIX}/bin/ffmpeg | grep opt/ffmpeg | cut -d \' \' -f 3 | xargs -i cp {} /usr/local/lib/ &&         ldd ${PREFIX}/bin/ffmpeg | grep opt/vc | cut -d \' \' -f 3 | xargs -i cp {} /usr/local/lib/ &&         for lib in /usr/local/lib/*.so.*; do ln -s ""${lib##*/}"" ""${lib%%.so.*}"".so; done &&         cp ${PREFIX}/bin/* /usr/local/bin/ &&         cp -r ${PREFIX}/share/ffmpeg /usr/local/share/ &&         LD_LIBRARY_PATH=/usr/local/lib ffmpeg -buildconf &&         cp -r ${PREFIX}/include/libav* ${PREFIX}/include/libpostproc ${PREFIX}/include/libsw* /usr/local/include &&         mkdir -p /usr/local/lib/pkgconfig &&         for pc in ${PREFIX}/lib/pkgconfig/libav*.pc ${PREFIX}/lib/pkgconfig/libpostproc.pc ${PREFIX}/lib/pkgconfig/libsw*.pc; do         sed ""s:${PREFIX}:/usr/local:g"" <""$pc"" >/usr/local/lib/pkgconfig/""${pc##*/}"";         done', 'apt-get -yqq update &&         apt-get install -yq --no-install-recommends libx265-dev libaom-dev &&         apt-get autoremove -y &&         apt-get clean -y']"
blakeblackshear/frigate,latest,/docker/Dockerfile.ffmpeg.armv7,ARG,13,"['FREETYPE_SHA256SUM=""5d03dd76c2171a7601e9ce10551d52d4471cf92cd205948e60289251daddffa8 freetype-2.5.5.tar.gz""', 'FRIBIDI_SHA256SUM=""3fc96fa9473bd31dcb5500bdf1aa78b337ba13eb8c301e7c28923fea982453a8 0.19.7.tar.gz""', 'LIBVIDSTAB_SHA256SUM=""14d2a053e56edad4f397be0cb3ef8eb1ec3150404ce99a426c4eb641861dc0bb v1.1.0.tar.gz""', 'OGG_SHA256SUM=""e19ee34711d7af328cb26287f4137e70630e7261b17cbe3cd41011d73a654692 libogg-1.3.2.tar.gz""', 'OPUS_SHA256SUM=""77db45a87b51578fbc49555ef1b10926179861d854eb2613207dc79d9ec0a9a9 opus-1.2.tar.gz""', 'THEORA_SHA256SUM=""40952956c47811928d1e7922cda3bc1f427eb75680c3c37249c91e949054916b libtheora-1.1.1.tar.gz""', 'VORBIS_SHA256SUM=""6efbcecdd3e5dfbf090341b485da9d176eb250d893e3eb378c428a2db38301ce libvorbis-1.3.5.tar.gz""', 'XVID_SHA256SUM=""4e9fd62728885855bc5007fe1be58df42e5e274497591fec37249e1052ae316f xvidcore-1.3.4.tar.gz""', 'LD_LIBRARY_PATH=/opt/ffmpeg/lib', 'MAKEFLAGS=""-j2""', 'PKG_CONFIG_PATH=""/opt/ffmpeg/share/pkgconfig:/opt/ffmpeg/lib/pkgconfig:/opt/ffmpeg/lib64/pkgconfig:/opt/vc/lib/pkgconfig""', 'PREFIX=/opt/ffmpeg', 'LD_LIBRARY_PATH=""/opt/ffmpeg/lib:/opt/ffmpeg/lib64:/usr/lib64:/usr/lib:/lib64:/lib:/opt/vc/lib""']"
blakeblackshear/frigate,latest,/docker/Dockerfile.ffmpeg.armv7,CMD,1,"['[""--help""]']"
blakeblackshear/frigate,latest,/docker/Dockerfile.ffmpeg.armv7,ENTRYPOINT,1,"['[""ffmpeg""]']"
blakeblackshear/frigate,latest,/docker/Dockerfile.ffmpeg.armv7,COPY,1,['--from=build /usr/local /usr/local/']
blakeblackshear/frigate,latest,/docker/Dockerfile.wheels,FROM,2,"['ubuntu:20.04 as build', 'scratch']"
blakeblackshear/frigate,latest,/docker/Dockerfile.wheels,ENV,1,['DEBIAN_FRONTEND=noninteractive']
blakeblackshear/frigate,latest,/docker/Dockerfile.wheels,RUN,4,"['apt-get -qq update     && apt-get -qq install -y     python3     python3-dev     wget     build-essential cmake git pkg-config libgtk-3-dev     libavcodec-dev libavformat-dev libswscale-dev libv4l-dev     libxvidcore-dev libx264-dev libjpeg-dev libpng-dev libtiff-dev     gfortran openexr libatlas-base-dev libssl-dev    libtbb2 libtbb-dev libdc1394-22-dev libopenexr-dev     libgstreamer-plugins-base1.0-dev libgstreamer1.0-dev     gcc gfortran libopenblas-dev liblapack-dev cython', 'wget -q https://bootstrap.pypa.io/get-pip.py -O get-pip.py     && python3 get-pip.py ""pip==20.2.4""', 'pip3 install scikit-build', 'pip3 wheel --wheel-dir=/wheels     opencv-python-headless     numpy     imutils     scipy     psutil     Flask     paho-mqtt     PyYAML     matplotlib     click     setproctitle     peewee']"
blakeblackshear/frigate,latest,/docker/Dockerfile.wheels,COPY,1,['--from=build /wheels /wheels']
blakeblackshear/frigate,latest,/docker/Dockerfile.ffmpeg.amd64,FROM,3,"['ubuntu:20.04 AS base', 'base as build', 'base AS release']"
blakeblackshear/frigate,latest,/docker/Dockerfile.ffmpeg.amd64,WORKDIR,1,['/tmp/workdir']
blakeblackshear/frigate,latest,/docker/Dockerfile.ffmpeg.amd64,ENV,3,"['DEBIAN_FRONTEND=noninteractive', 'FFMPEG_VERSION=4.3.2         AOM_VERSION=v1.0.0         FDKAAC_VERSION=0.1.5         FREETYPE_VERSION=2.5.5         FRIBIDI_VERSION=0.19.7         KVAZAAR_VERSION=1.2.0         LAME_VERSION=3.100         LIBPTHREAD_STUBS_VERSION=0.4         LIBVIDSTAB_VERSION=1.1.0         LIBXCB_VERSION=1.13.1         XCBPROTO_VERSION=1.13         OGG_VERSION=1.3.2         OPENCOREAMR_VERSION=0.1.5         OPUS_VERSION=1.2         OPENJPEG_VERSION=2.1.2         THEORA_VERSION=1.1.1         VORBIS_VERSION=1.3.5         VPX_VERSION=1.8.0         WEBP_VERSION=1.0.2         X264_VERSION=20170226-2245-stable         X265_VERSION=3.1.1         XAU_VERSION=1.0.9         XORG_MACROS_VERSION=1.19.2         XPROTO_VERSION=7.0.31         XVID_VERSION=1.3.4         LIBZMQ_VERSION=4.3.2         SRC=/usr/local', 'LD_LIBRARY_PATH=/usr/local/lib:/usr/local/lib64:/usr/lib:/usr/lib64:/lib:/lib64']"
blakeblackshear/frigate,latest,/docker/Dockerfile.ffmpeg.amd64,RUN,31,"['apt-get -yqq update &&         apt-get install -yq --no-install-recommends ca-certificates expat libgomp1 &&         apt-get autoremove -y &&         apt-get clean -y', 'buildDeps=""autoconf         automake         cmake         curl         bzip2         libexpat1-dev         g++         gcc         git         gperf         libtool         make         nasm         perl         pkg-config         python         libssl-dev         yasm         libva-dev         libmfx-dev         zlib1g-dev"" &&         apt-get -yqq update &&         apt-get install -yq --no-install-recommends ${buildDeps}', 'DIR=/tmp/opencore-amr &&         mkdir -p ${DIR} &&         cd ${DIR} &&         curl -sL https://versaweb.dl.sourceforge.net/project/opencore-amr/opencore-amr/opencore-amr-${OPENCOREAMR_VERSION}.tar.gz |         tar -zx --strip-components=1 &&         ./configure --prefix=""${PREFIX}"" --enable-shared  &&         make &&         make install &&         rm -rf ${DIR}', 'DIR=/tmp/x264 &&         mkdir -p ${DIR} &&         cd ${DIR} &&         curl -sL https://download.videolan.org/pub/videolan/x264/snapshots/x264-snapshot-${X264_VERSION}.tar.bz2 |         tar -jx --strip-components=1 &&         ./configure --prefix=""${PREFIX}"" --enable-shared --enable-pic --disable-cli &&         make &&         make install &&         rm -rf ${DIR}', 'DIR=/tmp/x265 &&         mkdir -p ${DIR} &&         cd ${DIR} &&         curl -sL https://download.videolan.org/pub/videolan/x265/x265_${X265_VERSION}.tar.gz  |         tar -zx &&         cd x265_${X265_VERSION}/build/linux &&         sed -i ""/-DEXTRA_LIB/ s/$/ -DCMAKE_INSTALL_PREFIX=\\${PREFIX}/"" multilib.sh &&         sed -i ""/^cmake/ s/$/ -DENABLE_CLI=OFF/"" multilib.sh &&         ./multilib.sh &&         make -C 8bit install &&         rm -rf ${DIR}', 'DIR=/tmp/ogg &&         mkdir -p ${DIR} &&         cd ${DIR} &&         curl -sLO http://downloads.xiph.org/releases/ogg/libogg-${OGG_VERSION}.tar.gz &&         echo ${OGG_SHA256SUM} | sha256sum --check &&         tar -zx --strip-components=1 -f libogg-${OGG_VERSION}.tar.gz &&         ./configure --prefix=""${PREFIX}"" --enable-shared  &&         make &&         make install &&         rm -rf ${DIR}', 'DIR=/tmp/opus &&         mkdir -p ${DIR} &&         cd ${DIR} &&         curl -sLO https://archive.mozilla.org/pub/opus/opus-${OPUS_VERSION}.tar.gz &&         echo ${OPUS_SHA256SUM} | sha256sum --check &&         tar -zx --strip-components=1 -f opus-${OPUS_VERSION}.tar.gz &&         autoreconf -fiv &&         ./configure --prefix=""${PREFIX}"" --enable-shared &&         make &&         make install &&         rm -rf ${DIR}', 'DIR=/tmp/vorbis &&         mkdir -p ${DIR} &&         cd ${DIR} &&         curl -sLO http://downloads.xiph.org/releases/vorbis/libvorbis-${VORBIS_VERSION}.tar.gz &&         echo ${VORBIS_SHA256SUM} | sha256sum --check &&         tar -zx --strip-components=1 -f libvorbis-${VORBIS_VERSION}.tar.gz &&         ./configure --prefix=""${PREFIX}"" --with-ogg=""${PREFIX}"" --enable-shared &&         make &&         make install &&         rm -rf ${DIR}', 'DIR=/tmp/theora &&         mkdir -p ${DIR} &&         cd ${DIR} &&         curl -sLO http://downloads.xiph.org/releases/theora/libtheora-${THEORA_VERSION}.tar.gz &&         echo ${THEORA_SHA256SUM} | sha256sum --check &&         tar -zx --strip-components=1 -f libtheora-${THEORA_VERSION}.tar.gz &&         ./configure --prefix=""${PREFIX}"" --with-ogg=""${PREFIX}"" --enable-shared &&         make &&         make install &&         rm -rf ${DIR}', 'DIR=/tmp/vpx &&         mkdir -p ${DIR} &&         cd ${DIR} &&         curl -sL https://codeload.github.com/webmproject/libvpx/tar.gz/v${VPX_VERSION} |         tar -zx --strip-components=1 &&         ./configure --prefix=""${PREFIX}"" --enable-vp8 --enable-vp9 --enable-vp9-highbitdepth --enable-pic --enable-shared         --disable-debug --disable-examples --disable-docs --disable-install-bins  &&         make &&         make install &&         rm -rf ${DIR}', 'DIR=/tmp/vebp &&         mkdir -p ${DIR} &&         cd ${DIR} &&         curl -sL https://storage.googleapis.com/downloads.webmproject.org/releases/webp/libwebp-${WEBP_VERSION}.tar.gz |         tar -zx --strip-components=1 &&         ./configure --prefix=""${PREFIX}"" --enable-shared  &&         make &&         make install &&         rm -rf ${DIR}', 'DIR=/tmp/lame &&         mkdir -p ${DIR} &&         cd ${DIR} &&         curl -sL https://versaweb.dl.sourceforge.net/project/lame/lame/$(echo ${LAME_VERSION} | sed -e \'s/[^0-9]*\\([0-9]*\\)[.]\\([0-9]*\\)[.]\\([0-9]*\\)\\([0-9A-Za-z-]*\\)/\\1.\\2/\')/lame-${LAME_VERSION}.tar.gz |         tar -zx --strip-components=1 &&         ./configure --prefix=""${PREFIX}"" --bindir=""${PREFIX}/bin"" --enable-shared --enable-nasm --disable-frontend &&         make &&         make install &&         rm -rf ${DIR}', 'DIR=/tmp/xvid &&         mkdir -p ${DIR} &&         cd ${DIR} &&         curl -sLO http://downloads.xvid.org/downloads/xvidcore-${XVID_VERSION}.tar.gz &&         echo ${XVID_SHA256SUM} | sha256sum --check &&         tar -zx -f xvidcore-${XVID_VERSION}.tar.gz &&         cd xvidcore/build/generic &&         ./configure --prefix=""${PREFIX}"" --bindir=""${PREFIX}/bin"" &&         make &&         make install &&         rm -rf ${DIR}', 'DIR=/tmp/fdk-aac &&         mkdir -p ${DIR} &&         cd ${DIR} &&         curl -sL https://github.com/mstorsjo/fdk-aac/archive/v${FDKAAC_VERSION}.tar.gz |         tar -zx --strip-components=1 &&         autoreconf -fiv &&         ./configure --prefix=""${PREFIX}"" --enable-shared --datadir=""${DIR}"" &&         make &&         make install &&         rm -rf ${DIR}', 'DIR=/tmp/openjpeg &&         mkdir -p ${DIR} &&         cd ${DIR} &&         curl -sL https://github.com/uclouvain/openjpeg/archive/v${OPENJPEG_VERSION}.tar.gz |         tar -zx --strip-components=1 &&         cmake -DBUILD_THIRDPARTY:BOOL=ON -DCMAKE_INSTALL_PREFIX=""${PREFIX}"" . &&         make &&         make install &&         rm -rf ${DIR}', 'DIR=/tmp/freetype &&         mkdir -p ${DIR} &&         cd ${DIR} &&         curl -sLO https://download.savannah.gnu.org/releases/freetype/freetype-${FREETYPE_VERSION}.tar.gz &&         echo ${FREETYPE_SHA256SUM} | sha256sum --check &&         tar -zx --strip-components=1 -f freetype-${FREETYPE_VERSION}.tar.gz &&         ./configure --prefix=""${PREFIX}"" --disable-static --enable-shared &&         make &&         make install &&         rm -rf ${DIR}', 'DIR=/tmp/vid.stab &&         mkdir -p ${DIR} &&         cd ${DIR} &&         curl -sLO https://github.com/georgmartius/vid.stab/archive/v${LIBVIDSTAB_VERSION}.tar.gz &&         echo ${LIBVIDSTAB_SHA256SUM} | sha256sum --check &&          tar -zx --strip-components=1 -f v${LIBVIDSTAB_VERSION}.tar.gz &&         cmake -DCMAKE_INSTALL_PREFIX=""${PREFIX}"" . &&         make &&         make install &&         rm -rf ${DIR}', 'DIR=/tmp/fribidi &&         mkdir -p ${DIR} &&         cd ${DIR} &&         curl -sLO https://github.com/fribidi/fribidi/archive/${FRIBIDI_VERSION}.tar.gz &&         echo ${FRIBIDI_SHA256SUM} | sha256sum --check &&         tar -zx --strip-components=1 -f ${FRIBIDI_VERSION}.tar.gz &&         sed -i \'s/^SUBDIRS =.*/SUBDIRS=gen.tab charset lib bin/\' Makefile.am &&         ./bootstrap --no-config --auto &&         ./configure --prefix=""${PREFIX}"" --disable-static --enable-shared &&         make -j1 &&         make install &&         rm -rf ${DIR}', 'DIR=/tmp/kvazaar &&         mkdir -p ${DIR} &&         cd ${DIR} &&         curl -sLO https://github.com/ultravideo/kvazaar/archive/v${KVAZAAR_VERSION}.tar.gz &&         tar -zx --strip-components=1 -f v${KVAZAAR_VERSION}.tar.gz &&         ./autogen.sh &&         ./configure --prefix=""${PREFIX}"" --disable-static --enable-shared &&         make &&         make install &&         rm -rf ${DIR}', 'DIR=/tmp/aom &&         git clone --branch ${AOM_VERSION} --depth 1 https://aomedia.googlesource.com/aom ${DIR} ;         cd ${DIR} ;         rm -rf CMakeCache.txt CMakeFiles ;         mkdir -p ./aom_build ;         cd ./aom_build ;         cmake -DCMAKE_INSTALL_PREFIX=""${PREFIX}"" -DBUILD_SHARED_LIBS=1 ..;         make ;         make install ;         rm -rf ${DIR}', 'DIR=/tmp/xorg-macros &&         mkdir -p ${DIR} &&         cd ${DIR} &&         curl -sLO https://www.x.org/archive//individual/util/util-macros-${XORG_MACROS_VERSION}.tar.gz &&         tar -zx --strip-components=1 -f util-macros-${XORG_MACROS_VERSION}.tar.gz &&         ./configure --srcdir=${DIR} --prefix=""${PREFIX}"" &&         make &&         make install &&         rm -rf ${DIR}', 'DIR=/tmp/xproto &&         mkdir -p ${DIR} &&         cd ${DIR} &&         curl -sLO https://www.x.org/archive/individual/proto/xproto-${XPROTO_VERSION}.tar.gz &&         tar -zx --strip-components=1 -f xproto-${XPROTO_VERSION}.tar.gz &&         ./configure --srcdir=${DIR} --prefix=""${PREFIX}"" &&         make &&         make install &&         rm -rf ${DIR}', 'DIR=/tmp/libXau &&         mkdir -p ${DIR} &&         cd ${DIR} &&         curl -sLO https://www.x.org/archive/individual/lib/libXau-${XAU_VERSION}.tar.gz &&         tar -zx --strip-components=1 -f libXau-${XAU_VERSION}.tar.gz &&         ./configure --srcdir=${DIR} --prefix=""${PREFIX}"" &&         make &&         make install &&         rm -rf ${DIR}', 'DIR=/tmp/libpthread-stubs &&         mkdir -p ${DIR} &&         cd ${DIR} &&         curl -sLO https://xcb.freedesktop.org/dist/libpthread-stubs-${LIBPTHREAD_STUBS_VERSION}.tar.gz &&         tar -zx --strip-components=1 -f libpthread-stubs-${LIBPTHREAD_STUBS_VERSION}.tar.gz &&         ./configure --prefix=""${PREFIX}"" &&         make &&         make install &&         rm -rf ${DIR}', 'DIR=/tmp/libxcb-proto &&         mkdir -p ${DIR} &&         cd ${DIR} &&         curl -sLO https://xcb.freedesktop.org/dist/xcb-proto-${XCBPROTO_VERSION}.tar.gz &&         tar -zx --strip-components=1 -f xcb-proto-${XCBPROTO_VERSION}.tar.gz &&         ACLOCAL_PATH=""${PREFIX}/share/aclocal"" ./autogen.sh &&         ./configure --prefix=""${PREFIX}"" &&         make &&         make install &&         rm -rf ${DIR}', 'DIR=/tmp/libxcb &&         mkdir -p ${DIR} &&         cd ${DIR} &&         curl -sLO https://xcb.freedesktop.org/dist/libxcb-${LIBXCB_VERSION}.tar.gz &&         tar -zx --strip-components=1 -f libxcb-${LIBXCB_VERSION}.tar.gz &&         ACLOCAL_PATH=""${PREFIX}/share/aclocal"" ./autogen.sh &&         ./configure --prefix=""${PREFIX}"" --disable-static --enable-shared &&         make &&         make install &&         rm -rf ${DIR}', 'DIR=/tmp/libzmq &&         mkdir -p ${DIR} &&         cd ${DIR} &&         curl -sLO https://github.com/zeromq/libzmq/archive/v${LIBZMQ_VERSION}.tar.gz &&         echo ${LIBZMQ_SHA256SUM} | sha256sum --check &&         tar -xz --strip-components=1 -f v${LIBZMQ_VERSION}.tar.gz &&         ./autogen.sh &&         ./configure --prefix=""${PREFIX}"" &&         make &&         make check &&         make install &&         rm -rf ${DIR}', 'DIR=/tmp/ffmpeg && mkdir -p ${DIR} && cd ${DIR} &&         curl -sLO https://ffmpeg.org/releases/ffmpeg-${FFMPEG_VERSION}.tar.bz2 &&         tar -jx --strip-components=1 -f ffmpeg-${FFMPEG_VERSION}.tar.bz2', 'DIR=/tmp/ffmpeg && mkdir -p ${DIR} && cd ${DIR} &&         ./configure         --disable-debug         --disable-doc         --disable-ffplay         --enable-shared         --enable-avresample         --enable-libopencore-amrnb         --enable-libopencore-amrwb         --enable-gpl         --enable-libfreetype         --enable-libvidstab         --enable-libmfx         --enable-libmp3lame         --enable-libopus         --enable-libtheora         --enable-libvorbis         --enable-libvpx         --enable-libwebp         --enable-libxcb         --enable-libx265         --enable-libxvid         --enable-libx264         --enable-nonfree         --enable-openssl         --enable-libfdk_aac         --enable-postproc         --enable-small         --enable-version3         --enable-libzmq         --extra-libs=-ldl         --prefix=""${PREFIX}""         --enable-libopenjpeg         --enable-libkvazaar         --enable-libaom         --extra-libs=-lpthread         --enable-vaapi         --extra-cflags=""-I${PREFIX}/include""         --extra-ldflags=""-L${PREFIX}/lib"" &&         make &&         make install &&         make tools/zmqsend && cp tools/zmqsend ${PREFIX}/bin/ &&         make distclean &&         hash -r &&         cd tools &&         make qt-faststart && cp qt-faststart ${PREFIX}/bin/', 'ldd ${PREFIX}/bin/ffmpeg | grep opt/ffmpeg | cut -d \' \' -f 3 | xargs -i cp {} /usr/local/lib/ &&         for lib in /usr/local/lib/*.so.*; do ln -s ""${lib##*/}"" ""${lib%%.so.*}"".so; done &&         cp ${PREFIX}/bin/* /usr/local/bin/ &&         cp -r ${PREFIX}/share/ffmpeg /usr/local/share/ &&         LD_LIBRARY_PATH=/usr/local/lib ffmpeg -buildconf &&         cp -r ${PREFIX}/include/libav* ${PREFIX}/include/libpostproc ${PREFIX}/include/libsw* /usr/local/include &&         mkdir -p /usr/local/lib/pkgconfig &&         for pc in ${PREFIX}/lib/pkgconfig/libav*.pc ${PREFIX}/lib/pkgconfig/libpostproc.pc ${PREFIX}/lib/pkgconfig/libsw*.pc; do         sed ""s:${PREFIX}:/usr/local:g"" <""$pc"" >/usr/local/lib/pkgconfig/""${pc##*/}"";         done', 'apt-get update -y &&         apt-get install -y --no-install-recommends libva-drm2 libva2 i965-va-driver mesa-va-drivers &&         rm -rf /var/lib/apt/lists/*']"
blakeblackshear/frigate,latest,/docker/Dockerfile.ffmpeg.amd64,ARG,14,"['FREETYPE_SHA256SUM=""5d03dd76c2171a7601e9ce10551d52d4471cf92cd205948e60289251daddffa8 freetype-2.5.5.tar.gz""', 'FRIBIDI_SHA256SUM=""3fc96fa9473bd31dcb5500bdf1aa78b337ba13eb8c301e7c28923fea982453a8 0.19.7.tar.gz""', 'LIBVIDSTAB_SHA256SUM=""14d2a053e56edad4f397be0cb3ef8eb1ec3150404ce99a426c4eb641861dc0bb v1.1.0.tar.gz""', 'OGG_SHA256SUM=""e19ee34711d7af328cb26287f4137e70630e7261b17cbe3cd41011d73a654692 libogg-1.3.2.tar.gz""', 'OPUS_SHA256SUM=""77db45a87b51578fbc49555ef1b10926179861d854eb2613207dc79d9ec0a9a9 opus-1.2.tar.gz""', 'THEORA_SHA256SUM=""40952956c47811928d1e7922cda3bc1f427eb75680c3c37249c91e949054916b libtheora-1.1.1.tar.gz""', 'VORBIS_SHA256SUM=""6efbcecdd3e5dfbf090341b485da9d176eb250d893e3eb378c428a2db38301ce libvorbis-1.3.5.tar.gz""', 'XVID_SHA256SUM=""4e9fd62728885855bc5007fe1be58df42e5e274497591fec37249e1052ae316f xvidcore-1.3.4.tar.gz""', 'LIBZMQ_SHA256SUM=""02ecc88466ae38cf2c8d79f09cfd2675ba299a439680b64ade733e26a349edeb v4.3.2.tar.gz""', 'LD_LIBRARY_PATH=/opt/ffmpeg/lib', 'MAKEFLAGS=""-j2""', 'PKG_CONFIG_PATH=""/opt/ffmpeg/share/pkgconfig:/opt/ffmpeg/lib/pkgconfig:/opt/ffmpeg/lib64/pkgconfig""', 'PREFIX=/opt/ffmpeg', 'LD_LIBRARY_PATH=""/opt/ffmpeg/lib:/opt/ffmpeg/lib64:/usr/lib64:/usr/lib:/lib64:/lib""']"
blakeblackshear/frigate,latest,/docker/Dockerfile.ffmpeg.amd64,CMD,1,"['[""--help""]']"
blakeblackshear/frigate,latest,/docker/Dockerfile.ffmpeg.amd64,ENTRYPOINT,1,"['[""ffmpeg""]']"
blakeblackshear/frigate,latest,/docker/Dockerfile.ffmpeg.amd64,COPY,1,['--from=build /usr/local /usr/local/']
blakeblackshear/frigate,latest,/docker/Dockerfile.amd64nvidia,FROM,1,['frigate-base']
blakeblackshear/frigate,latest,/docker/Dockerfile.amd64nvidia,LABEL,1,"['maintainer ""blakeb@blakeshome.com""']"
blakeblackshear/frigate,latest,/docker/Dockerfile.amd64nvidia,RUN,5,"['apt-get -qq update     && apt-get -qq install --no-install-recommends -y     libgomp1     && rm -rf /var/lib/apt/lists/*     && (apt-get autoremove -y; apt-get autoclean -y)', 'apt-get update && apt-get install -y --no-install-recommends     gnupg2 curl ca-certificates &&     curl -fsSL https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2004/x86_64/7fa2af80.pub | apt-key add - &&     echo ""deb https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2004/x86_64 /"" > /etc/apt/sources.list.d/cuda.list &&     echo ""deb https://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu2004/x86_64 /"" > /etc/apt/sources.list.d/nvidia-ml.list &&     apt-get purge --autoremove -y curl     && rm -rf /var/lib/apt/lists/*', 'apt-get update && apt-get install -y --no-install-recommends     cuda-cudart-11-1=11.1.74-1     cuda-compat-11-1     && ln -s cuda-11.1 /usr/local/cuda &&     rm -rf /var/lib/apt/lists/*', 'echo ""/usr/local/nvidia/lib"" >> /etc/ld.so.conf.d/nvidia.conf &&     echo ""/usr/local/nvidia/lib64"" >> /etc/ld.so.conf.d/nvidia.conf', 'chmod +x /tmp/s6-overlay-amd64-installer && /tmp/s6-overlay-amd64-installer /']"
blakeblackshear/frigate,latest,/docker/Dockerfile.amd64nvidia,ENV,7,"['NVIDIA_DRIVER_CAPABILITIES compute,utility,video', 'CUDA_VERSION 11.1.1', 'PATH /usr/local/nvidia/bin:/usr/local/cuda/bin:${PATH}', 'LD_LIBRARY_PATH /usr/local/nvidia/lib:/usr/local/nvidia/lib64', 'NVIDIA_VISIBLE_DEVICES all', 'NVIDIA_DRIVER_CAPABILITIES compute,utility,video', 'NVIDIA_REQUIRE_CUDA ""cuda>=11.1 brand=tesla,driver>=418,driver<419 brand=tesla,driver>=440,driver<441 brand=tesla,driver>=450,driver<451""']"
blakeblackshear/frigate,latest,/docker/Dockerfile.amd64nvidia,ADD,1,['https://github.com/just-containers/s6-overlay/releases/download/v2.2.0.3/s6-overlay-amd64-installer /tmp/']
blakeblackshear/frigate,latest,/docker/Dockerfile.amd64nvidia,ENTRYPOINT,1,"['[""/init""]']"
blakeblackshear/frigate,latest,/docker/Dockerfile.amd64nvidia,CMD,1,"['[""python3"", ""-u"", ""-m"", ""frigate""]']"
blakeblackshear/frigate,latest,/docker/Dockerfile.nginx,FROM,3,"['ubuntu:20.04 AS base', 'base as build', 'base']"
blakeblackshear/frigate,latest,/docker/Dockerfile.nginx,ENV,1,['DEBIAN_FRONTEND=noninteractive']
blakeblackshear/frigate,latest,/docker/Dockerfile.nginx,RUN,7,"['apt-get -yqq update &&     apt-get install -yq --no-install-recommends ca-certificates expat libgomp1 &&     apt-get autoremove -y &&     apt-get clean -y', ""cp /etc/apt/sources.list /etc/apt/sources.list~     && sed -Ei 's/^# deb-src /deb-src /' /etc/apt/sources.list     && apt-get update"", 'apt-get -yqq build-dep nginx', ""apt-get -yqq install --no-install-recommends curl     && mkdir /tmp/nginx     && curl -sL https://nginx.org/download/nginx-${NGINX_VERSION}.tar.gz | tar -C /tmp/nginx -zx --strip-components=1     && mkdir /tmp/nginx-vod-module     && curl -sL https://github.com/kaltura/nginx-vod-module/archive/refs/tags/${VOD_MODULE_VERSION}.tar.gz | tar -C /tmp/nginx-vod-module -zx --strip-components=1     && sed -i 's/MAX_CLIPS (128)/MAX_CLIPS (1080)/g' /tmp/nginx-vod-module/vod/media_set.h     && mkdir /tmp/nginx-secure-token-module     && curl -sL https://github.com/kaltura/nginx-secure-token-module/archive/refs/tags/${SECURE_TOKEN_MODULE_VERSION}.tar.gz | tar -C /tmp/nginx-secure-token-module -zx --strip-components=1     && mkdir /tmp/nginx-rtmp-module     && curl -sL https://github.com/arut/nginx-rtmp-module/archive/refs/tags/v${RTMP_MODULE_VERSION}.tar.gz | tar -C /tmp/nginx-rtmp-module -zx --strip-components=1"", './configure --prefix=/usr/local/nginx     --with-file-aio     --with-http_sub_module     --with-http_ssl_module     --with-threads     --add-module=../nginx-vod-module     --add-module=../nginx-secure-token-module     --add-module=../nginx-rtmp-module     --with-cc-opt=""-O3 -Wno-error=implicit-fallthrough""', 'make && make install', 'rm -rf /usr/local/nginx/html /usr/local/nginx/conf/*.default']"
blakeblackshear/frigate,latest,/docker/Dockerfile.nginx,ARG,4,"['NGINX_VERSION=1.18.0', 'VOD_MODULE_VERSION=1.28', 'SECURE_TOKEN_MODULE_VERSION=1.4', 'RTMP_MODULE_VERSION=1.2.1']"
blakeblackshear/frigate,latest,/docker/Dockerfile.nginx,WORKDIR,1,['/tmp/nginx']
blakeblackshear/frigate,latest,/docker/Dockerfile.nginx,COPY,1,['--from=build /usr/local/nginx /usr/local/nginx']
blakeblackshear/frigate,latest,/docker/Dockerfile.nginx,ENTRYPOINT,1,"['[""/usr/local/nginx/sbin/nginx""]']"
blakeblackshear/frigate,latest,/docker/Dockerfile.nginx,CMD,1,"['[""-g"", ""daemon off;""]']"
blakeblackshear/frigate,latest,/docker/Dockerfile.base,ARG,4,"['ARCH=amd64', 'WHEELS_VERSION', 'FFMPEG_VERSION', 'NGINX_VERSION']"
blakeblackshear/frigate,latest,/docker/Dockerfile.base,FROM,5,"['blakeblackshear/frigate-wheels:${WHEELS_VERSION}-${ARCH} as wheels', 'blakeblackshear/frigate-ffmpeg:${FFMPEG_VERSION}-${ARCH} as ffmpeg', 'blakeblackshear/frigate-nginx:${NGINX_VERSION} as nginx', 'frigate-web as web', 'ubuntu:20.04']"
blakeblackshear/frigate,latest,/docker/Dockerfile.base,LABEL,1,"['maintainer ""blakeb@blakeshome.com""']"
blakeblackshear/frigate,latest,/docker/Dockerfile.base,COPY,6,"['--from=ffmpeg /usr/local /usr/local/', '--from=wheels /wheels/. /wheels/', '--from=nginx /usr/local/nginx/ /usr/local/nginx/', 'labelmap.txt /labelmap.txt', '--from=web /opt/frigate/build web/', 'docker/rootfs/ /']"
blakeblackshear/frigate,latest,/docker/Dockerfile.base,ENV,2,"['FLASK_ENV=development', 'DEBIAN_FRONTEND=noninteractive']"
blakeblackshear/frigate,latest,/docker/Dockerfile.base,RUN,4,"['apt-get -qq update     && apt-get upgrade -y     && apt-get -qq install --no-install-recommends -y gnupg wget unzip tzdata libxml2     && apt-get -qq install --no-install-recommends -y python3-pip     && pip3 install -U /wheels/*.whl     && APT_KEY_DONT_WARN_ON_DANGEROUS_USAGE=DontWarn apt-key adv --fetch-keys https://packages.cloud.google.com/apt/doc/apt-key.gpg     && echo ""deb https://packages.cloud.google.com/apt coral-edgetpu-stable main"" > /etc/apt/sources.list.d/coral-edgetpu.list     && echo ""libedgetpu1-max libedgetpu/accepted-eula select true"" | debconf-set-selections     && apt-get -qq update && apt-get -qq install --no-install-recommends -y libedgetpu1-max python3-tflite-runtime python3-pycoral     && rm -rf /var/lib/apt/lists/* /wheels     && (apt-get autoremove -y; apt-get autoclean -y)', 'pip3 install     peewee_migrate     pydantic     zeroconf     ws4py', 'wget -q https://github.com/google-coral/test_data/raw/release-frogfish/ssdlite_mobiledet_coco_qat_postprocess_edgetpu.tflite -O /edgetpu_model.tflite', 'wget -q https://github.com/google-coral/test_data/raw/release-frogfish/ssdlite_mobiledet_coco_qat_postprocess.tflite -O /cpu_model.tflite']"
blakeblackshear/frigate,latest,/docker/Dockerfile.base,WORKDIR,1,['/opt/frigate/']
blakeblackshear/frigate,latest,/docker/Dockerfile.base,ADD,2,"['frigate frigate/', 'migrations migrations/']"
blakeblackshear/frigate,latest,/docker/Dockerfile.base,EXPOSE,2,"['5000', '1935']"
blakeblackshear/frigate,latest,/docker/Dockerfile.aarch64,FROM,1,['frigate-base']
blakeblackshear/frigate,latest,/docker/Dockerfile.aarch64,LABEL,1,"['maintainer ""blakeb@blakeshome.com""']"
blakeblackshear/frigate,latest,/docker/Dockerfile.aarch64,ENV,1,['DEBIAN_FRONTEND=noninteractive']
blakeblackshear/frigate,latest,/docker/Dockerfile.aarch64,RUN,2,"['apt-get -qq update     && apt-get -qq install --no-install-recommends -y     libgomp1     libopenexr24     libgstreamer1.0-0     libgstreamer-plugins-base1.0-0     libopenblas-base     libjpeg-turbo8     libpng16-16     libtiff5     libdc1394-22     && rm -rf /var/lib/apt/lists/*     && (apt-get autoremove -y; apt-get autoclean -y)', 'chmod +x /tmp/s6-overlay-aarch64-installer && /tmp/s6-overlay-aarch64-installer /']"
blakeblackshear/frigate,latest,/docker/Dockerfile.aarch64,ADD,1,['https://github.com/just-containers/s6-overlay/releases/download/v2.2.0.3/s6-overlay-aarch64-installer /tmp/']
blakeblackshear/frigate,latest,/docker/Dockerfile.aarch64,ENTRYPOINT,1,"['[""/init""]']"
blakeblackshear/frigate,latest,/docker/Dockerfile.aarch64,CMD,1,"['[""python3"", ""-u"", ""-m"", ""frigate""]']"
Drakkar-Software/OctoBot,latest,/Dockerfile,FROM,2,"['python:3.8-slim-buster AS base', 'python:3.8-slim-buster']"
Drakkar-Software/OctoBot,latest,/Dockerfile,RUN,3,"['apt-get update     && apt-get install -y --no-install-recommends build-essential git gcc libffi-dev libssl-dev libxml2-dev libxslt1-dev libxslt-dev libjpeg62-turbo-dev zlib1g-dev     && python -m venv /opt/venv', 'pip install -U setuptools wheel pip>=20.0.0     && pip install Cython==0.29.21     && pip install --prefer-binary -r requirements.txt     && python setup.py install', 'apt-get update     && apt-get install -y --no-install-recommends curl libxslt-dev libxcb-xinput0 libjpeg62-turbo-dev zlib1g-dev libblas-dev liblapack-dev libatlas-base-dev libopenjp2-7 libtiff-dev     && rm -rf /var/lib/apt/lists/*     && ln -s /opt/venv/bin/OctoBot OctoBot # Make sure we use the virtualenv     && chmod +x docker-entrypoint.sh']"
Drakkar-Software/OctoBot,latest,/Dockerfile,ENV,3,"['CRYPTOGRAPHY_DONT_BUILD_RUST=1', 'PATH=""/opt/venv/bin:$PATH""', 'TENTACLES_URL_TAG=$TENTACLES_URL_TAG']"
Drakkar-Software/OctoBot,latest,/Dockerfile,COPY,4,"['. .', '--from=base /opt/venv /opt/venv', 'octobot/config /octobot/octobot/config', 'docker-entrypoint.sh docker-entrypoint.sh']"
Drakkar-Software/OctoBot,latest,/Dockerfile,ARG,1,"['TENTACLES_URL_TAG=""""']"
Drakkar-Software/OctoBot,latest,/Dockerfile,WORKDIR,1,['/octobot']
Drakkar-Software/OctoBot,latest,/Dockerfile,VOLUME,4,"['/octobot/backtesting', '/octobot/logs', '/octobot/tentacles', '/octobot/user']"
Drakkar-Software/OctoBot,latest,/Dockerfile,EXPOSE,1,['5001']
Drakkar-Software/OctoBot,latest,/Dockerfile,HEALTHCHECK,1,['--interval=1m --timeout=30s --retries=3 CMD curl --fail http://localhost:5001 || exit 1']
Drakkar-Software/OctoBot,latest,/Dockerfile,ENTRYPOINT,1,"['[""./docker-entrypoint.sh""]']"
Drakkar-Software/OctoBot,latest,/tests/Dockerfile,ARG,1,['OCTOBOT_IMAGE']
Drakkar-Software/OctoBot,latest,/tests/Dockerfile,FROM,1,['$OCTOBOT_IMAGE']
Drakkar-Software/OctoBot,latest,/tests/Dockerfile,ENV,2,"['PATH=""/opt/venv/bin:$PATH""', 'CYTHON_IGNORE=true']"
Drakkar-Software/OctoBot,latest,/tests/Dockerfile,COPY,2,"['dev_requirements.txt .', 'tests tests']"
Drakkar-Software/OctoBot,latest,/tests/Dockerfile,RUN,1,['pip freeze && pip install --prefer-binary -r dev_requirements.txt']
Drakkar-Software/OctoBot,latest,/tests/Dockerfile,ENTRYPOINT,1,"['[""./tests/docker-entrypoint.sh""]']"
sony/nnabla,latest,/docker/tutorial/Dockerfile,FROM,1,['ubuntu:16.04']
sony/nnabla,latest,/docker/tutorial/Dockerfile,ARG,4,"['PIP_INS_OPTS', 'PYTHONWARNINGS', 'CURL_OPTS', 'WGET_OPTS']"
sony/nnabla,latest,/docker/tutorial/Dockerfile,RUN,7,"['apt-get update && apt-get install -y --no-install-recommends     python3-pip python3-setuptools python3-wheel git    && rm -rf /var/lib/apt/lists/*', 'pip3 install ${PIP_INS_OPTS} nnabla', 'pip3 install ${PIP_INS_OPTS} jupyter', 'pip3 install ${PIP_INS_OPTS} sklearn', 'pip3 install ${PIP_INS_OPTS} imageio', 'git clone --depth=1 https://github.com/sony/nnabla && mv nnabla/tutorial . && rm -rf nnabla', 'git clone --depth=1 https://github.com/sony/nnabla-examples && rm -rf nnabla-examples/.git  && mv nnabla-examples tutorial']"
sony/nnabla,latest,/docker/tutorial/Dockerfile,WORKDIR,1,['/tutorial']
sony/nnabla,latest,/docker/tutorial/Dockerfile,CMD,1,"['[""jupyter"", ""notebook"", ""--ip=*"", ""--port=8888"", ""--allow-root"", ""--no-browser"", ""--NotebookApp.token=\'nnabla\'""]']"
sony/nnabla,latest,/docker/development/Dockerfile.build-ppc64le,FROM,1,['ppc64le/centos:7']
sony/nnabla,latest,/docker/development/Dockerfile.build-ppc64le,ARG,7,"['PIP_INS_OPTS', 'PYTHONWARNINGS', 'CURL_OPTS', 'WGET_OPTS', 'YUM_OPTS', 'PYTHON_VERSION_MAJOR', 'PYTHON_VERSION_MINOR']"
sony/nnabla,latest,/docker/development/Dockerfile.build-ppc64le,ENV,9,"['LC_ALL C', 'LANG C', 'LANGUAGE C', 'CMAKEVER=3.14.3', 'PROTOVER=3.10.1', 'PATH /tmp/.local/bin:$PATH', 'LD_LIBRARY_PATH /usr/local/lib64:$LD_LIBRARY_PATH', 'CC /usr/local/bin/gcc', 'CXX /usr/local/bin/g++']"
sony/nnabla,latest,/docker/development/Dockerfile.build-ppc64le,RUN,7,"['eval ${YUM_OPTS}     && yum install -y        epel-release        yum-utils     && yum install -y         curl         freetype-devel         git         hdf5         hdf5-devel         lapack-devel         libjpeg-devel         xz-devel         libpng-devel         redhat-lsb-core         rpm-build         unzip         wget         zip         zlib-static         libmpc-devel         mpfr-devel         gmp-devel     && yum group install -y ""Development Tools""     && yum clean all', 'mkdir /tmp/deps     && cd /tmp/deps     && wget ${WGET_OPTS} http://ftp.tsukuba.wide.ad.jp/software/gcc/releases/gcc-6.5.0/gcc-6.5.0.tar.gz     && tar zxf gcc-6.5.0.tar.gz     && cd gcc-6.5.0     && ./configure --disable-multilib --enable-languages=c,c++     && make -j8     && make install     && cd /     && rm -rf /tmp/*', 'mkdir /tmp/deps     && cd /tmp/deps     && yum install -y cmake3     && curl ${CURL_OPTS} -L https://github.com/Kitware/CMake/releases/download/v${CMAKEVER}/cmake-${CMAKEVER}.tar.gz -o cmake-${CMAKEVER}.tar.gz     && tar xf cmake-${CMAKEVER}.tar.gz     && cd cmake-${CMAKEVER}     && mkdir build     && cd build     && cmake3 -DBUILD_TESTING=FALSE ..     && make     && make install     && yum remove -y cmake3     && yum clean all     && rm -rf /var/cache/yum/*     && cd /     && rm -rf /tmp/*', 'mkdir /tmp/deps     && cd /tmp/deps     && curl ${CURL_OPTS} -L https://github.com/google/protobuf/archive/v${PROTOVER}.tar.gz -o protobuf-v${PROTOVER}.tar.gz     && tar xvf protobuf-v${PROTOVER}.tar.gz     && cd protobuf-${PROTOVER}     && mkdir build     && cd build     && cmake         -DCMAKE_POSITION_INDEPENDENT_CODE=ON         -Dprotobuf_BUILD_TESTS=OFF         -DCMAKE_CXX_STANDARD=14         -D CMAKE_C_COMPILER=gcc CMAKE_CXX_COMPILER=g++ /usr/bin/gcc         ../cmake     && make     && make install     && cd /     && rm -rf /tmp/*', 'mkdir /tmp/deps     && cd /tmp/deps     && curl ${CURL_OPTS} -L https://www.libarchive.org/downloads/libarchive-3.3.2.tar.gz -o libarchive-3.3.2.tar.gz     && tar xfa libarchive-3.3.2.tar.gz     && mkdir libarchive-build     && cd libarchive-build     && cmake         -DCMAKE_POSITION_INDEPENDENT_CODE=ON -DENABLE_NETTLE=FALSE -DENABLE_OPENSSL=FALSE         -DENABLE_LZO=FALSE -DENABLE_LZMA=FALSE -DENABLE_BZip2=FALSE         -DENABLE_LIBXML2=FALSE -DENABLE_EXPAT=FALSE -DENABLE_PCREPOSIX=FALSE -DENABLE_LibGCC=FALSE         -DENABLE_CNG=FALSE -DENABLE_TAR=FALSE -DENABLE_TAR_SHARED=FALSE -DENABLE_CPIO=FALSE         -DENABLE_CPIO_SHARED=FALSE -DENABLE_CAT=FALSE -DENABLE_CAT_SHARED=FALSE -DENABLE_XATTR=FALSE         -DENABLE_ACL=FALSE -DENABLE_ICONV=FALSE -DENABLE_TEST=FALSE         ../libarchive-3.3.2     && make     && make install     && cd /     && rm -rf /tmp/*', 'mkdir /tmp/deps     && cd /tmp/deps     && wget ${WGET_OPTS} http://nixos.org/releases/patchelf/patchelf-0.9/patchelf-0.9.tar.bz2     && tar xfa patchelf-0.9.tar.bz2     && cd patchelf-0.9     && ./configure     && make     && make install     && cd /     && rm -rf /tmp/*', 'if [ ""${PYVERNAME}"" == ""3.6"" ]; then wget ${WGET_OPTS} https://www.python.org/ftp/python/3.6.12/Python-3.6.12.tgz; fi \t&& if [ ""${PYVERNAME}"" == ""3.7"" ]; then wget ${WGET_OPTS} https://www.python.org/ftp/python/3.7.10/Python-3.7.10.tgz; fi \t&& if [ ""${PYVERNAME}"" == ""3.8"" ]; then wget ${WGET_OPTS} https://www.python.org/ftp/python/3.8.8/Python-3.8.8.tgz; fi \t&& if [ ""${PYVERNAME}"" == ""3.9"" ]; then wget ${WGET_OPTS} https://www.python.org/ftp/python/3.9.8/Python-3.9.8.tgz; fi \t&& tar -xzf Python-${PYVERNAME}*.tgz \t&& cd Python-${PYVERNAME}* \t&& ./configure --enable-optimizations \t&& make altinstall \t&& ln -s -f /usr/local/bin/python${PYVERNAME} /usr/bin/python \t&& ln -s /usr/local/bin/pip${PYVERNAME} /usr/local/bin/pip \t&& pip install ${PIP_INS_OPTS} -y numpy scipy scikit-image six \t&& pip install ${PIP_INS_OPTS} -U -r /tmp/deps/setup_requirements.txt \t&& pip install ${PIP_INS_OPTS} -U -r /tmp/deps/requirements.txt \t&& pip install ${PIP_INS_OPTS} -U -r /tmp/deps/test_requirements.txt \t&& cd .. \t&& rm -rf Python-${PYVERNAME}* \t&& rm -rf /tmp/*']"
sony/nnabla,latest,/docker/development/Dockerfile.build-ppc64le,ADD,3,"['python/setup_requirements.txt /tmp/deps/', 'python/requirements.txt /tmp/deps/', 'python/test_requirements.txt /tmp/deps/']"
sony/nnabla,latest,/docker/development/Dockerfile.build-armhf,FROM,1,['multiarch/debian-debootstrap:armhf-buster']
sony/nnabla,latest,/docker/development/Dockerfile.build-armhf,ARG,5,"['PIP_INS_OPTS', 'PYTHONWARNINGS', 'CURL_OPTS', 'WGET_OPTS', 'APT_OPTS']"
sony/nnabla,latest,/docker/development/Dockerfile.build-armhf,ENV,5,"['LC_ALL C', 'LANG C', 'LANGUAGE C', 'PROTOVER=3.10.1', 'PATH /tmp/.local/bin:$PATH']"
sony/nnabla,latest,/docker/development/Dockerfile.build-armhf,RUN,10,"['eval ${APT_OPTS}     && apt-get update && apt-get install -y --no-install-recommends     bzip2     ca-certificates     ccache     cmake     curl     g++     git     libarchive-dev     libatlas-base-dev     libhdf5-dev     libopenblas-dev     liblapack-dev     make     pkg-config     python3     python3-dev     python3-pip     python3-setuptools     python3-wheel     unzip     wget     zip     liblzma-dev', 'mkdir /tmp/deps     && cd /tmp/deps     && curl ${CURL_OPTS} -L https://github.com/google/protobuf/archive/v${PROTOVER}.tar.gz -o protobuf-v${PROTOVER}.tar.gz     && tar xvf protobuf-v${PROTOVER}.tar.gz     && cd protobuf-${PROTOVER}     && mkdir build     && cd build     && cmake         -DCMAKE_POSITION_INDEPENDENT_CODE=ON         -Dprotobuf_BUILD_TESTS=OFF         -DCMAKE_CXX_STANDARD=14         -D CMAKE_C_COMPILER=gcc CMAKE_CXX_COMPILER=g++ /usr/bin/gcc         ../cmake     && make -j8     && make install     && cd /     && rm -rf /tmp/*', 'python3 -m pip install ${PIP_INS_OPTS} --upgrade pip', 'echo ""[global]"" >/etc/pip.conf', 'echo ""extra-index-url=https://www.piwheels.org/simple"" >> /etc/pip.conf', 'pip3 install ${PIP_INS_OPTS} ipython', 'pip3 install ${PIP_INS_OPTS} -r /tmp/deps/setup_requirements.txt', 'cat /tmp/deps/requirements.txt |grep -v onnx >/tmp/deps/r.txt', 'mv /tmp/deps/r.txt /tmp/deps/requirements.txt', 'pip3 install ${PIP_INS_OPTS} -r /tmp/deps/requirements.txt']"
sony/nnabla,latest,/docker/development/Dockerfile.build-armhf,ADD,3,"['python/setup_requirements.txt /tmp/deps/', 'python/requirements.txt /tmp/deps/', 'python/test_requirements.txt /tmp/deps/']"
sony/nnabla,latest,/docker/development/Dockerfile.nnabla-test,FROM,1,['ubuntu:18.04']
sony/nnabla,latest,/docker/development/Dockerfile.nnabla-test,ARG,7,"['PIP_INS_OPTS', 'PYTHONWARNINGS', 'CURL_OPTS', 'WGET_OPTS', 'APT_OPTS', 'PYTHON_VERSION_MAJOR', 'PYTHON_VERSION_MINOR']"
sony/nnabla,latest,/docker/development/Dockerfile.nnabla-test,ENV,7,"['LC_ALL C', 'LANG C', 'LANGUAGE C', 'PYVERNAME=${PYTHON_VERSION_MAJOR}.${PYTHON_VERSION_MINOR}', 'DEBIAN_FRONTEND noninteractive', 'PATH /tmp/.local/bin:$PATH', 'LD_LIBRARY_PATH /usr/local/lib64:$LD_LIBRARY_PATH']"
sony/nnabla,latest,/docker/development/Dockerfile.nnabla-test,RUN,10,"['eval ${APT_OPTS} && apt-get update', 'apt install -y software-properties-common', 'add-apt-repository -y ppa:deadsnakes/ppa', 'apt-get update', 'apt-get install -y --no-install-recommends        bzip2        ca-certificates        ccache        clang-format-5.0        cmake        curl        g++        git        libarchive-dev        libgoogle-glog-dev        libgtest-dev        libhdf5-dev        libleveldb-dev        liblmdb-dev        libsnappy-dev        libssl-dev        libsndfile1        liblzma-dev        make        openssl        unzip        wget        zip        python${PYVERNAME}-dev        python3-venv        python${PYVERNAME}        python${PYVERNAME}-venv     && apt-get clean     && rm -rf /var/lib/apt/lists/*', 'apt-get update     && apt-get install -y --no-install-recommends        python${PYVERNAME}-distutils || echo ""skip install python-distutils""     && apt-get clean     && rm -rf /var/lib/apt/lists/*', 'curl ${CURL_OPTS} https://bootstrap.pypa.io/get-pip.py -o get-pip.py     && python${PYVERNAME} get-pip.py ${PIP_INS_OPTS}     && rm get-pip.py', 'update-alternatives --install /usr/bin/python python /usr/bin/python${PYVERNAME} 0', 'mkdir /tmp/deps     && cd /tmp/deps     && PROTOVER=3.10.1     && curl ${CURL_OPTS} -L https://github.com/google/protobuf/archive/v${PROTOVER}.tar.gz -o protobuf-v${PROTOVER}.tar.gz     && tar xvf protobuf-v${PROTOVER}.tar.gz     && cd protobuf-${PROTOVER}     && mkdir build     && cd build     && cmake         -DCMAKE_POSITION_INDEPENDENT_CODE=ON         -Dprotobuf_BUILD_TESTS=OFF         -DCMAKE_CXX_STANDARD=14         -D CMAKE_C_COMPILER=gcc CMAKE_CXX_COMPILER=g++ /usr/bin/gcc         ../cmake     && make -j8     && make install     && cd /     && rm -rf /tmp/*', 'pip install ${PIP_INS_OPTS} numpy     && pip install ${PIP_INS_OPTS} -U -r /tmp/deps/setup_requirements.txt     && pip install ${PIP_INS_OPTS} -U -r /tmp/deps/requirements.txt     && pip install ${PIP_INS_OPTS} -U -r /tmp/deps/test_requirements.txt     && rm -rf /tmp/*']"
sony/nnabla,latest,/docker/development/Dockerfile.nnabla-test,ADD,3,"['python/setup_requirements.txt /tmp/deps/', 'python/requirements.txt /tmp/deps/', 'python/test_requirements.txt /tmp/deps/']"
sony/nnabla,latest,/docker/development/Dockerfile.nnabla-test-armhf,FROM,1,['multiarch/debian-debootstrap:armhf-buster']
sony/nnabla,latest,/docker/development/Dockerfile.nnabla-test-armhf,ARG,6,"['PIP_INS_OPTS', 'PYTHONWARNINGS', 'CURL_OPTS', 'WGET_OPTS', 'APT_OPTS', 'LIBARCHIVEVER=3.4.3']"
sony/nnabla,latest,/docker/development/Dockerfile.nnabla-test-armhf,ENV,5,"['LC_ALL C', 'LANG C', 'LANGUAGE C', 'PROTOVER=3.10.1', 'PATH /tmp/.local/bin:$PATH']"
sony/nnabla,latest,/docker/development/Dockerfile.nnabla-test-armhf,RUN,10,"['eval ${APT_OPTS}     && apt-get update && apt-get install -y --no-install-recommends     bzip2     ca-certificates     ccache     cmake     curl     g++     git     libarchive-dev     libatlas-base-dev     libhdf5-dev     libopenblas-dev     liblapack-dev     libsndfile1     liblzma-dev     make     pkg-config     python3     python3-dev     python3-pip     python3-setuptools     python3-wheel     python3-venv     unzip     wget     zip', 'mkdir /tmp/deps     && cd /tmp/deps     && curl ${CURL_OPTS} -L https://github.com/google/protobuf/archive/v${PROTOVER}.tar.gz -o protobuf-v${PROTOVER}.tar.gz     && tar xvf protobuf-v${PROTOVER}.tar.gz     && cd protobuf-${PROTOVER}     && mkdir build     && cd build     && cmake         -DCMAKE_POSITION_INDEPENDENT_CODE=ON         -Dprotobuf_BUILD_TESTS=OFF         -DCMAKE_CXX_STANDARD=14         -D CMAKE_C_COMPILER=gcc CMAKE_CXX_COMPILER=g++ /usr/bin/gcc         ../cmake     && make -j8     && make install     && cd /     && rm -rf /tmp/*', 'mkdir /tmp/deps     && cd /tmp/deps     && curl ${CURL_OPTS} -L https://github.com/libarchive/libarchive/archive/v${LIBARCHIVEVER}.tar.gz -o libarchive-${LIBARCHIVEVER}.tar.gz     && tar xfa libarchive-${LIBARCHIVEVER}.tar.gz     && mkdir libarchive-build     && cd libarchive-build     && cmake         -DCMAKE_POSITION_INDEPENDENT_CODE=ON -DENABLE_NETTLE=FALSE -DENABLE_OPENSSL=FALSE         -DENABLE_LZO=FALSE -DENABLE_LZMA=FALSE -DENABLE_BZip2=FALSE         -DENABLE_LIBXML2=FALSE -DENABLE_EXPAT=FALSE -DENABLE_PCREPOSIX=FALSE -DENABLE_LibGCC=FALSE         -DENABLE_CNG=FALSE -DENABLE_TAR=FALSE -DENABLE_TAR_SHARED=FALSE -DENABLE_CPIO=FALSE         -DENABLE_CPIO_SHARED=FALSE -DENABLE_CAT=FALSE -DENABLE_CAT_SHARED=FALSE -DENABLE_XATTR=FALSE         -DENABLE_ACL=FALSE -DENABLE_ICONV=FALSE -DENABLE_TEST=FALSE         ../libarchive-${LIBARCHIVEVER}     && make -j8     && make install     && cd /     && rm -rf /tmp/*', 'python3 -m pip install ${PIP_INS_OPTS} --upgrade pip', 'echo ""[global]"" >/etc/pip.conf', 'echo ""extra-index-url=https://www.piwheels.org/simple"" >> /etc/pip.conf', 'python3 -m pip install ${PIP_INS_OPTS} --no-cache-dir numpy==1.19.5', 'python3 -m pip install ${PIP_INS_OPTS} --no-cache-dir scipy\\<1.4', 'python3 -m pip install ${PIP_INS_OPTS} --no-cache-dir     autopep8     boto3     cython     h5py     mako     pillow     protobuf     pytest     pyyaml     tqdm', 'python3 -m pip install ${PIP_INS_OPTS} ipython']"
sony/nnabla,latest,/docker/development/Dockerfile.document,FROM,1,['ubuntu:18.04']
sony/nnabla,latest,/docker/development/Dockerfile.document,ARG,5,"['PIP_INS_OPTS', 'PYTHONWARNINGS', 'CURL_OPTS', 'WGET_OPTS', 'APT_OPTS']"
sony/nnabla,latest,/docker/development/Dockerfile.document,ENV,3,"['LC_ALL C', 'LANG C', 'LANGUAGE C']"
sony/nnabla,latest,/docker/development/Dockerfile.document,RUN,6,"['eval ${APT_OPTS}     && apt-get update && apt-get install -y --no-install-recommends     clang-format-3.9     cmake     curl     g++     git     make     python3-dev     python3-pip     python3-setuptools     unzip     zip     zlib1g-dev     libhdf5-dev     libarchive-dev', 'pip3 install ${PIP_INS_OPTS} -U -r /tmp/deps/setup_requirements.txt', 'pip3 install ${PIP_INS_OPTS} -U -r /tmp/deps/requirements.txt', ""sed -i '/nnabla==/d' /tmp/deps/requirements.txt     && pip3 install ${PIP_INS_OPTS} -U -r /tmp/deps/requirements.txt"", 'apt-get -yqq update     && apt-get -yqq install --no-install-recommends         build-essential         dh-autoreconf         pkg-config     && git clone https://github.com/google/protobuf.git /protobuf     && cd /protobuf     && git checkout v3.10.1     && ./autogen.sh     && ./configure     && make     && make install     && ldconfig     && apt-get -yqq purge dh-autoreconf     && apt-get -yqq clean     && rm -rf /var/lib/apt/lists/*     && rm -rf /protobuf /protoc-gen-doc', 'apt-get -yqq update     && apt-get -yqq install --no-install-recommends         doxygen         libclang-dev         fonts-freefont-ttf         graphviz         pandoc         plantuml     && apt-get -yqq clean     && rm -rf /var/lib/apt/lists/*']"
sony/nnabla,latest,/docker/development/Dockerfile.document,ADD,3,"['python/setup_requirements.txt /tmp/deps/', 'python/requirements.txt /tmp/deps/', 'doc/requirements.txt /tmp/deps/']"
sony/nnabla,latest,/docker/development/Dockerfile.android,FROM,1,['ubuntu:16.04']
sony/nnabla,latest,/docker/development/Dockerfile.android,ARG,9,"['PIP_INS_OPTS', 'PYTHONWARNINGS', 'CURL_OPTS', 'WGET_OPTS', 'APT_OPTS', 'ANDROID_PLATFORM', 'ANDROID_ARCHITECTURE', 'ANDROID_CMAKE_SYSTEM_NAME', 'ANDROID_EABI']"
sony/nnabla,latest,/docker/development/Dockerfile.android,RUN,14,"['eval ${APT_OPTS}     && apt-get update && apt-get install -y --no-install-recommends         bzip2         ca-certificates         ccache         clang-format-3.8         curl         g++         git         libarchive-dev         libhdf5-dev         make         unzip         wget         zip         emacs         python-pip     && cd /     && rm -rf /tmp/*', 'pip install ${PIP_INS_OPTS} setuptools', 'pip install ${PIP_INS_OPTS} --upgrade pip', 'pip install ${PIP_INS_OPTS} six', 'pip install ${PIP_INS_OPTS} PyYAML', 'pip install ${PIP_INS_OPTS} Mako', 'cd ${BUILD_DIR} && curl ${CURL_OPTS} -O ${CMAKE_URL}   && tar zxvf cmake*.tar.gz   && rm cmake*.tar.gz   && cd cmake*   && ./bootstrap   && make   && make install', 'cd ${BUILD_DIR}   && curl ${CURL_OPTS} -O ${NDK_URL}   && unzip ${NDK_NAME}-linux-x86_64.zip   && rm -f ${NDK_NAME}-linux-x86_64.zip   && mv ${NDK_NAME} android-ndk', 'mkdir /tmp/deps     && cd /tmp/deps     && curl ${CURL_OPTS} -L https://github.com/google/protobuf/archive/v${PROTOVER}.tar.gz -o protobuf-v${PROTOVER}.tar.gz     && tar xvf protobuf-v${PROTOVER}.tar.gz     && cd protobuf-${PROTOVER}     && mkdir build     && cd build     && cmake         -DCMAKE_POSITION_INDEPENDENT_CODE=ON         -Dprotobuf_BUILD_TESTS=OFF         -DCMAKE_CXX_STANDARD=14         -D CMAKE_C_COMPILER=gcc CMAKE_CXX_COMPILER=g++ /usr/bin/gcc         ../cmake     && make     && make install     && cd /     && rm -rf /tmp/*', 'mkdir -p /usr/local/android', 'chmod -R a+rw /usr/local/android', 'sh $NDK_PATH/build/tools/make-standalone-toolchain.sh --platform=$PLATFORM --arch=$ARCHITECTURE --install-dir=$TOOLCHAIN_INSTALL_DIR', 'cd /tmp     && curl ${CURL_OPTS} -L https://github.com/google/protobuf/archive/v${PROTOVER}.tar.gz -o protobuf-v${PROTOVER}.tar.gz     && tar xvf protobuf-v${PROTOVER}.tar.gz     && cd protobuf-${PROTOVER}     && mkdir build     && cd build     && cmake  -DCMAKE_TOOLCHAIN_FILE=$NDK_PATH/build/cmake/android.toolchain.cmake               -DANDROID_TOOLCHAIN=clang               -DCMAKE_SYSTEM_NAME=$CMAKE_SYSTEM_NAME               -DCMAKE_POSITION_INDEPENDENT_CODE=ON               -Dprotobuf_BUILD_TESTS=OFF               -DCMAKE_INSTALL_PREFIX=$TOOLCHAIN_INSTALL_DIR               -DANDROID_STL=c++_static               -DANDROID_ABI=$EABI               ../cmake     && $TOOLCHAIN_INSTALL_DIR/bin/make     && $TOOLCHAIN_INSTALL_DIR/bin/make install', 'cd /tmp     && set -xe     && curl ${CURL_OPTS} -L https://www.libarchive.org/downloads/libarchive-3.3.2.tar.gz -o libarchive-3.3.2.tar.gz     && tar xf libarchive-3.3.2.tar.gz     && cd libarchive-3.3.2     && sed -i ""/INCLUDE(CheckTypeSize)/aINCLUDE_DIRECTORIES(/tmp/libarchive-3.3.2/contrib/android/include/)""        CMakeLists.txt     && cmake         -DCMAKE_TOOLCHAIN_FILE=$NDK_PATH/build/cmake/android.toolchain.cmake        -DANDROID_TOOLCHAIN=clang        -DCMAKE_SYSTEM_NAME=$CMAKE_SYSTEM_NAME        -DCMAKE_POSITION_INDEPENDENT_CODE=ON        -DCMAKE_INSTALL_PREFIX=$TOOLCHAIN_INSTALL_DIR        -DENABLE_TEST=OFF        -DANDROID_STL=c++_static        -DANDROID_ABI=$EABI .     && sed -i ""/#define HAVE_STATFS 1/a#define HAVE_STATVFS 1"" config.h     && sed -i ""/#include \\""passphrase.h\\""/a#ifdef ANDROID\\nint wctomb(char *s, wchar_t wc) { return wcrtomb(s,wc,NULL); }\\nint mbtowc(wchar_t *pwc, const char *s, size_t n) { return mbrtowc(pwc, s, n, NULL); }\\n#endif"" tar/util.c     && $TOOLCHAIN_INSTALL_DIR/bin/make     && $TOOLCHAIN_INSTALL_DIR/bin/make install     && cp /tmp/libarchive-3.3.2/contrib/android/include/* $TOOLCHAIN_INSTALL_DIR/include/']"
sony/nnabla,latest,/docker/development/Dockerfile.android,ENV,20,"['BUILD_DIR /usr/local/src', 'CMAKE_URL https://cmake.org/files/v3.11/cmake-3.11.3.tar.gz', 'NDK_NAME android-ndk-r16b', 'NDK_URL https://dl.google.com/android/repository/${NDK_NAME}-linux-x86_64.zip', 'NDK_PATH ${BUILD_DIR}/android-ndk', 'PROTOVER 3.1.0', 'SYSTEM_PYTHON /usr/bin/python', 'SYSTEM_PROTOC /usr/local/bin/protoc', 'NDK_PATH /usr/local/src/android-ndk', 'PLATFORM ${ANDROID_PLATFORM}', 'ARCHITECTURE ${ANDROID_ARCHITECTURE}', 'CMAKE_SYSTEM_NAME ${ANDROID_CMAKE_SYSTEM_NAME}', 'EABI ${ANDROID_EABI}', 'TOOLCHAIN_INSTALL_DIR /usr/local/android/${ARCHITECTURE}', 'GCC ${CMAKE_SYSTEM_NAME}-gcc', 'GCXX ${CMAKE_SYSTEM_NAME}-c++', 'SYSROOT ${NDK_PATH}/platforms/${PLATFORM}/arch-${ARCHITECTURE}', 'CC ${GCC}', 'CXX ${GCXX}', 'PATH ${TOOLCHAIN_INSTALL_DIR}/bin:${PATH}']"
sony/nnabla,latest,/docker/development/Dockerfile.nnabla-test-ppc64le,FROM,1,['ubuntu:18.04']
sony/nnabla,latest,/docker/development/Dockerfile.nnabla-test-ppc64le,ARG,7,"['PIP_INS_OPTS', 'PYTHONWARNINGS', 'CURL_OPTS', 'WGET_OPTS', 'APT_OPTS', 'PYTHON_VERSION_MAJOR', 'PYTHON_VERSION_MINOR']"
sony/nnabla,latest,/docker/development/Dockerfile.nnabla-test-ppc64le,ENV,6,"['LC_ALL C', 'LANG C', 'LANGUAGE C', 'PYVERNAME=${PYTHON_VERSION_MAJOR}.${PYTHON_VERSION_MINOR}', 'PATH /tmp/.local/bin:$PATH', 'LD_LIBRARY_PATH /usr/local/lib64:$LD_LIBRARY_PATH']"
sony/nnabla,latest,/docker/development/Dockerfile.nnabla-test-ppc64le,RUN,11,"['eval ${APT_OPTS} && apt-get update', 'apt install -y software-properties-common', 'add-apt-repository -y ppa:deadsnakes/ppa', 'apt-get update', 'apt-get install -y --no-install-recommends        build-essential        bzip2        ca-certificates        ccache        clang-format-5.0        cmake        curl        g++        gfortran        git        graphviz        libarchive-dev        libfreetype6-dev        libhdf5-dev        libjpeg-dev        liblapack-dev        libleveldb-dev        liblmdb-dev        libsnappy-dev        libssl-dev        make        openssl        pkg-config        unzip        wget        zip        python${PYVERNAME}-dev        python3-venv        python${PYVERNAME}        python${PYVERNAME}-venv        libsndfile1        liblzma-dev     && apt-get clean     && rm -rf /var/lib/apt/lists/*', 'apt-get update     && apt-get install -y --no-install-recommends        python${PYVERNAME}-distutils || echo ""skip install python-distutils""     && apt-get clean     && rm -rf /var/lib/apt/lists/*', 'curl ${CURL_OPTS} https://bootstrap.pypa.io/get-pip.py -o get-pip.py     && python${PYVERNAME} get-pip.py ${PIP_INS_OPTS}     && rm get-pip.py', 'update-alternatives --install /usr/bin/python python /usr/bin/python${PYVERNAME} 0', 'cd /tmp     && curl ${CURL_OPTS} -L https://www.libarchive.org/downloads/libarchive-3.3.2.tar.gz -o libarchive-3.3.2.tar.gz     && tar xfa libarchive-3.3.2.tar.gz     && mkdir libarchive-build     && cd libarchive-build     && cmake         -DCMAKE_POSITION_INDEPENDENT_CODE=ON         -DENABLE_NETTLE=FALSE         -DENABLE_OPENSSL=FALSE         -DENABLE_LZO=FALSE         -DENABLE_LZMA=FALSE         -DENABLE_BZip2=FALSE         -DENABLE_LIBXML2=FALSE         -DENABLE_EXPAT=FALSE         -DENABLE_PCREPOSIX=FALSE         -DENABLE_LibGCC=FALSE         -DENABLE_CNG=FALSE         -DENABLE_TAR=FALSE         -DENABLE_TAR_SHARED=FALSE         -DENABLE_CPIO=FALSE         -DENABLE_CPIO_SHARED=FALSE         -DENABLE_CAT=FALSE         -DENABLE_CAT_SHARED=FALSE         -DENABLE_XATTR=FALSE         -DENABLE_ACL=FALSE         -DENABLE_ICONV=FALSE         -DENABLE_TEST=FALSE         ../libarchive-3.3.2     && make     && make install     && cd /     && rm -rf /tmp/*', 'mkdir /tmp/deps     && cd /tmp/deps     && PROTOVER=3.10.1     && curl ${CURL_OPTS} -L https://github.com/google/protobuf/archive/v${PROTOVER}.tar.gz -o protobuf-v${PROTOVER}.tar.gz     && tar xvf protobuf-v${PROTOVER}.tar.gz     && cd protobuf-${PROTOVER}     && mkdir build     && cd build     && cmake         -DCMAKE_POSITION_INDEPENDENT_CODE=ON         -Dprotobuf_BUILD_TESTS=OFF         -DCMAKE_CXX_STANDARD=14         -D CMAKE_C_COMPILER=gcc CMAKE_CXX_COMPILER=g++ /usr/bin/gcc         ../cmake     && make     && make install     && cd /     && rm -rf /tmp/*', 'pip install ${PIP_INS_OPTS} -y -U numpy \t&& pip install ${PIP_INS_OPTS} scipy\\<1.4 \t&& pip install ${PIP_INS_OPTS} -U -r /tmp/deps/setup_requirements.txt \t&& pip install ${PIP_INS_OPTS} -U -r /tmp/deps/requirements.txt \t&& pip install ${PIP_INS_OPTS} -U -r /tmp/deps/test_requirements.txt \t&& rm -rf /tmp/*']"
sony/nnabla,latest,/docker/development/Dockerfile.nnabla-test-ppc64le,ADD,3,"['python/setup_requirements.txt /tmp/deps/', 'python/requirements.txt /tmp/deps/', 'python/test_requirements.txt /tmp/deps/']"
sony/nnabla,latest,/docker/development/Dockerfile.android-test,FROM,1,['gradle:4.10.0-jdk8']
sony/nnabla,latest,/docker/development/Dockerfile.android-test,ARG,5,"['PIP_INS_OPTS', 'PYTHONWARNINGS', 'CURL_OPTS', 'WGET_OPTS', 'APT_OPTS']"
sony/nnabla,latest,/docker/development/Dockerfile.android-test,USER,1,['root']
sony/nnabla,latest,/docker/development/Dockerfile.android-test,ENV,1,"['SDK_URL=""https://dl.google.com/android/repository/sdk-tools-linux-3859397.zip""     ANDROID_HOME=""/usr/local/android-sdk""     ANDROID_VERSION=28     ANDROID_BUILD_TOOLS_VERSION=27.0.3']"
sony/nnabla,latest,/docker/development/Dockerfile.android-test,RUN,5,"['eval ${APT_OPTS} && apt-get install curl', 'mkdir ""$ANDROID_HOME"" .android     && cd ""$ANDROID_HOME""     && curl ${CURL_OPTS} -o sdk.zip $SDK_URL     && unzip sdk.zip     && rm sdk.zip     && yes | $ANDROID_HOME/tools/bin/sdkmanager --licenses --list --verbose --no_https --proxy=http --proxy_host=proxy.kanto.sony.co.jp --proxy_port=10080', '$ANDROID_HOME/tools/bin/sdkmanager --update --list --verbose --no_https --proxy=http --proxy_host=proxy.kanto.sony.co.jp --proxy_port=10080', '$ANDROID_HOME/tools/bin/sdkmanager ""build-tools;${ANDROID_BUILD_TOOLS_VERSION}""     ""platforms;android-${ANDROID_VERSION}""     ""platform-tools"" --no_https --proxy=http --proxy_host=proxy.kanto.sony.co.jp --proxy_port=10080', 'apt-get update && apt-get install build-essential -y && apt-get install file -y && apt-get install apt-utils -y']"
sony/nnabla,latest,/docker/development/Dockerfile.auto-format,FROM,1,['ubuntu:18.04']
sony/nnabla,latest,/docker/development/Dockerfile.auto-format,ARG,5,"['PIP_INS_OPTS', 'PYTHONWARNINGS', 'CURL_OPTS', 'WGET_OPTS', 'APT_OPTS']"
sony/nnabla,latest,/docker/development/Dockerfile.auto-format,RUN,2,"['eval ${APT_OPTS}     && apt-get update && apt-get install -y --no-install-recommends     clang-format-3.9     make     git     python3-pip     python3-setuptools     && apt-get -yqq clean     && rm -rf /var/lib/apt/lists/*', 'pip3 install ${PIP_INS_OPTS} -U     autopep8     future     pyyaml     tqdm     setuptools     six     wheel']"
sony/nnabla,latest,/docker/development/Dockerfile.auto-format,ENV,1,['PYTHONIOENCODING utf-8']
sony/nnabla,latest,/docker/development/Dockerfile.build,FROM,1,['centos:7']
sony/nnabla,latest,/docker/development/Dockerfile.build,ARG,10,"['PIP_INS_OPTS', 'PYTHONWARNINGS', 'CURL_OPTS', 'WGET_OPTS', 'YUM_OPTS', 'CMAKEVER=3.14.3', 'PROTOVER=3.10.1', 'LIBARCHIVEVER=3.4.3', 'PYTHON_VERSION_MAJOR=3', 'PYTHON_VERSION_MINOR=6']"
sony/nnabla,latest,/docker/development/Dockerfile.build,ENV,8,"['LC_ALL C', 'LANG C', 'LANGUAGE C', 'PYVERNAME=${PYTHON_VERSION_MAJOR}.${PYTHON_VERSION_MINOR}', 'PATH /tmp/.local/bin:$PATH', 'LD_LIBRARY_PATH /usr/local/lib64:$LD_LIBRARY_PATH', 'CC /usr/local/bin/gcc', 'CXX /usr/local/bin/g++']"
sony/nnabla,latest,/docker/development/Dockerfile.build,RUN,7,"['eval ${YUM_OPTS}     && yum install -y        epel-release        yum-utils     && yum install -y         curl         freetype-devel         git         hdf5         hdf5-devel         lapack-devel         libjpeg-devel         xz-devel         libpng-devel         redhat-lsb-core         rpm-build         unzip         wget         which         zip         zlib-static         libmpc-devel         mpfr-devel         gmp-devel         openssl-devel         bzip2-devel         libffi-devel     && yum group install -y ""Development Tools""     && yum clean all', 'mkdir /tmp/deps     && cd /tmp/deps     && wget ${WGET_OPTS} http://ftp.tsukuba.wide.ad.jp/software/gcc/releases/gcc-6.5.0/gcc-6.5.0.tar.gz     && tar zxf gcc-6.5.0.tar.gz     && cd gcc-6.5.0     && ./configure --disable-multilib --enable-languages=c,c++     && make -j8     && make install     && cd /     && rm -rf /tmp/*', 'mkdir /tmp/deps     && cd /tmp/deps     && yum install -y cmake3     && curl ${CURL_OPTS} -L https://github.com/Kitware/CMake/releases/download/v${CMAKEVER}/cmake-${CMAKEVER}.tar.gz -o cmake-${CMAKEVER}.tar.gz     && tar xf cmake-${CMAKEVER}.tar.gz     && cd cmake-${CMAKEVER}     && mkdir build     && cd build     && cmake3 -DBUILD_TESTING=FALSE ..     && make -j8     && make install     && yum remove -y cmake3     && yum clean all     && rm -rf /var/cache/yum/*     && cd /     && rm -rf /tmp/*', 'mkdir /tmp/deps     && cd /tmp/deps     && curl ${CURL_OPTS} -L https://github.com/google/protobuf/archive/v${PROTOVER}.tar.gz -o protobuf-v${PROTOVER}.tar.gz     && tar xvf protobuf-v${PROTOVER}.tar.gz     && cd protobuf-${PROTOVER}     && mkdir build     && cd build     && cmake         -DCMAKE_POSITION_INDEPENDENT_CODE=ON         -Dprotobuf_BUILD_TESTS=OFF         -DCMAKE_CXX_STANDARD=14         -D CMAKE_C_COMPILER=gcc CMAKE_CXX_COMPILER=g++ /usr/bin/gcc         ../cmake     && make -j8     && make install     && cd /     && rm -rf /tmp/*', 'mkdir /tmp/deps     && cd /tmp/deps     && curl ${CURL_OPTS} -L https://github.com/libarchive/libarchive/archive/v${LIBARCHIVEVER}.tar.gz -o libarchive-${LIBARCHIVEVER}.tar.gz     && tar xfa libarchive-${LIBARCHIVEVER}.tar.gz     && mkdir libarchive-build     && cd libarchive-build     && cmake         -DCMAKE_POSITION_INDEPENDENT_CODE=ON -DENABLE_NETTLE=FALSE -DENABLE_OPENSSL=FALSE         -DENABLE_LZO=FALSE -DENABLE_LZMA=FALSE -DENABLE_BZip2=FALSE         -DENABLE_LIBXML2=FALSE -DENABLE_EXPAT=FALSE -DENABLE_PCREPOSIX=FALSE -DENABLE_LibGCC=FALSE         -DENABLE_CNG=FALSE -DENABLE_TAR=FALSE -DENABLE_TAR_SHARED=FALSE -DENABLE_CPIO=FALSE         -DENABLE_CPIO_SHARED=FALSE -DENABLE_CAT=FALSE -DENABLE_CAT_SHARED=FALSE -DENABLE_XATTR=FALSE         -DENABLE_ACL=FALSE -DENABLE_ICONV=FALSE -DENABLE_TEST=FALSE         ../libarchive-${LIBARCHIVEVER}     && make -j8     && make install     && cd /     && rm -rf /tmp/*', 'mkdir /tmp/deps     && cd /tmp/deps     && wget ${WGET_OPTS} http://nixos.org/releases/patchelf/patchelf-0.9/patchelf-0.9.tar.bz2     && tar xfa patchelf-0.9.tar.bz2     && cd patchelf-0.9     && ./configure     && make     && make install     && cd /     && rm -rf /tmp/*', 'if [ ""${PYVERNAME}"" == ""3.6"" ]; then wget ${WGET_OPTS} https://www.python.org/ftp/python/3.6.12/Python-3.6.12.tgz; fi \t&& if [ ""${PYVERNAME}"" == ""3.7"" ]; then wget ${WGET_OPTS} https://www.python.org/ftp/python/3.7.10/Python-3.7.10.tgz; fi \t&& if [ ""${PYVERNAME}"" == ""3.8"" ]; then wget ${WGET_OPTS} https://www.python.org/ftp/python/3.8.8/Python-3.8.8.tgz; fi \t&& if [ ""${PYVERNAME}"" == ""3.9"" ]; then wget ${WGET_OPTS} https://www.python.org/ftp/python/3.9.8/Python-3.9.8.tgz; fi \t&& tar -xzf Python-${PYVERNAME}*.tgz \t&& cd Python-${PYVERNAME}* \t&& ./configure --enable-optimizations \t&& make altinstall \t&& ln -s -f /usr/local/bin/python${PYVERNAME} /usr/bin/python \t&& ln -s /usr/local/bin/pip${PYVERNAME} /usr/local/bin/pip \t&& pip install ${PIP_INS_OPTS} -U -r /tmp/deps/setup_requirements.txt \t&& pip install ${PIP_INS_OPTS} -U -r /tmp/deps/requirements.txt \t&& pip install ${PIP_INS_OPTS} -U -r /tmp/deps/test_requirements.txt \t&& cd .. \t&& rm -rf Python-${PYVERNAME}* \t&& rm -rf /tmp/*']"
sony/nnabla,latest,/docker/development/Dockerfile.build,ADD,3,"['python/setup_requirements.txt /tmp/deps/', 'python/requirements.txt /tmp/deps/', 'python/test_requirements.txt /tmp/deps/']"
sony/nnabla,latest,/docker/runtime/Dockerfile,FROM,1,['ubuntu:18.04']
sony/nnabla,latest,/docker/runtime/Dockerfile,ARG,8,"['PIP_INS_OPTS', 'PYTHONWARNINGS', 'CURL_OPTS', 'WGET_OPTS', 'APT_OPTS', 'PYTHON_VERSION_MAJOR', 'PYTHON_VERSION_MINOR', 'WHL_PATH']"
sony/nnabla,latest,/docker/runtime/Dockerfile,ENV,2,"['PYVERNAME=${PYTHON_VERSION_MAJOR}.${PYTHON_VERSION_MINOR}', 'LD_LIBRARY_PATH /usr/lib64:$LD_LIBRARY_PATH']"
sony/nnabla,latest,/docker/runtime/Dockerfile,RUN,12,"['eval ${APT_OPTS} && apt-get update', 'apt install -y software-properties-common', 'add-apt-repository ppa:deadsnakes/ppa', 'apt-get update', 'apt-get install -y --no-install-recommends         bzip2         ca-certificates         curl         libglib2.0-0         libgl1-mesa-glx         python${PYVERNAME}     && apt-get clean     && rm -rf /var/lib/apt/lists/*', 'apt-get update     && apt-get install -y --no-install-recommends        python${PYVERNAME}-distutils || echo ""skip install python-distutils""     && apt-get clean     && rm -rf /var/lib/apt/lists/*', 'curl ${CURL_OPTS} https://bootstrap.pypa.io/get-pip.py -o get-pip.py     && python${PYVERNAME} get-pip.py ${PIP_INS_OPTS}', 'update-alternatives --install /usr/bin/python3 python3 /usr/bin/python${PYVERNAME} 0', 'pip install ${PIP_INS_OPTS} wheel', 'pip install ${PIP_INS_OPTS} protobuf', 'pip install ${PIP_INS_OPTS} opencv-python || true', 'pip install ${PIP_INS_OPTS} /tmp/*.whl && rm -rf /tmp/*']"
sony/nnabla,latest,/docker/runtime/Dockerfile,ADD,1,['$WHL_PATH/*.whl /tmp/']
sony/nnabla,latest,/docker/release/Dockerfile.py38,FROM,1,['ubuntu:18.04']
sony/nnabla,latest,/docker/release/Dockerfile.py38,ARG,5,"['PIP_INS_OPTS', 'PYTHONWARNINGS', 'CURL_OPTS', 'WGET_OPTS', 'NNABLA_VER']"
sony/nnabla,latest,/docker/release/Dockerfile.py38,RUN,7,"['apt-get update     && apt-get install -y --no-install-recommends        bzip2        ca-certificates        curl        libglib2.0-0        libgl1-mesa-glx        python3.8        python3-pip     && rm -rf /var/lib/apt/lists/*', 'update-alternatives --install /usr/bin/python python /usr/bin/python3.8 0', 'update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.8 0', 'pip3 install ${PIP_INS_OPTS} --upgrade pip', 'pip install ${PIP_INS_OPTS} wheel setuptools', 'pip install ${PIP_INS_OPTS} opencv-python || true', 'pip install ${PIP_INS_OPTS} nnabla==${NNABLA_VER}']"
sony/nnabla,latest,/docker/release/Dockerfile.py36,FROM,2,"['ubuntu:18.04 as flatc', 'ubuntu:18.04']"
sony/nnabla,latest,/docker/release/Dockerfile.py36,RUN,9,"['apt-get update     && apt-get install -y --no-install-recommends        ca-certificates        curl        cmake        make        g++        git     && rm -rf /var/lib/apt/lists/*', 'umask 0     && mkdir -p /tmp/deps     && cd /tmp/deps     && git clone https://github.com/google/flatbuffers.git     && cd flatbuffers     && cmake -G ""Unix Makefiles""     && make     && make install     && cd /     && rm -rf /tmp/*', 'apt-get update     && apt-get install -y --no-install-recommends        bzip2        ca-certificates        curl        libglib2.0-0        libgl1-mesa-glx        python3.6        python3-pip     && rm -rf /var/lib/apt/lists/*', 'update-alternatives --install /usr/bin/python python /usr/bin/python3.6 0', 'update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.6 0', 'pip3 install ${PIP_INS_OPTS} --upgrade pip', 'pip install ${PIP_INS_OPTS} wheel setuptools', 'pip install ${PIP_INS_OPTS} opencv-python || true', 'pip install ${PIP_INS_OPTS} nnabla==${NNABLA_VER} nnabla_converter==${NNABLA_VER}']"
sony/nnabla,latest,/docker/release/Dockerfile.py36,ARG,5,"['PIP_INS_OPTS', 'PYTHONWARNINGS', 'CURL_OPTS', 'WGET_OPTS', 'NNABLA_VER']"
sony/nnabla,latest,/docker/release/Dockerfile.py36,COPY,1,['--from=flatc /usr/local/bin/flatc /usr/local/bin/flatc']
sony/nnabla,latest,/docker/release/Dockerfile.py37,FROM,2,"['ubuntu:18.04 as flatc', 'ubuntu:18.04']"
sony/nnabla,latest,/docker/release/Dockerfile.py37,RUN,9,"['apt-get update     && apt-get install -y --no-install-recommends        ca-certificates        curl        cmake        make        g++        git     && rm -rf /var/lib/apt/lists/*', 'umask 0     && mkdir -p /tmp/deps     && cd /tmp/deps     && git clone https://github.com/google/flatbuffers.git     && cd flatbuffers     && cmake -G ""Unix Makefiles""     && make     && make install     && cd /     && rm -rf /tmp/*', 'apt-get update     && apt-get install -y --no-install-recommends        bzip2        ca-certificates        curl        libglib2.0-0        libgl1-mesa-glx        python3.7        python3-pip     && rm -rf /var/lib/apt/lists/*', 'update-alternatives --install /usr/bin/python python /usr/bin/python3.7 0', 'update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.7 0', 'pip3 install ${PIP_INS_OPTS} --upgrade pip', 'pip install ${PIP_INS_OPTS} wheel setuptools', 'pip install ${PIP_INS_OPTS} opencv-python || true', 'pip install ${PIP_INS_OPTS} nnabla==${NNABLA_VER} nnabla_converter==${NNABLA_VER}']"
sony/nnabla,latest,/docker/release/Dockerfile.py37,ARG,5,"['PIP_INS_OPTS', 'PYTHONWARNINGS', 'CURL_OPTS', 'WGET_OPTS', 'NNABLA_VER']"
sony/nnabla,latest,/docker/release/Dockerfile.py37,COPY,1,['--from=flatc /usr/local/bin/flatc /usr/local/bin/flatc']
sony/nnabla,latest,/docker/release/Dockerfile.py39,FROM,1,['ubuntu:18.04']
sony/nnabla,latest,/docker/release/Dockerfile.py39,ARG,5,"['PIP_INS_OPTS', 'PYTHONWARNINGS', 'CURL_OPTS', 'WGET_OPTS', 'NNABLA_VER']"
sony/nnabla,latest,/docker/release/Dockerfile.py39,ENV,1,['DEBIAN_FRONTEND noninteractive']
sony/nnabla,latest,/docker/release/Dockerfile.py39,RUN,9,"['eval ${APT_OPTS}     && apt-get update     && apt-get install -y --no-install-recommends     software-properties-common     && apt-get clean     && rm -rf /var/lib/apt/lists/*', 'add-apt-repository ppa:deadsnakes/ppa', 'apt-get update     && apt-get install -y --no-install-recommends        bzip2        ca-certificates        curl        libglib2.0-0        libgl1-mesa-glx        python3.9        python3-pip        python3.9-distutils     && rm -rf /var/lib/apt/lists/*', 'update-alternatives --install /usr/bin/python python /usr/bin/python3.9 0', 'update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.9 0', 'pip3 install ${PIP_INS_OPTS} --upgrade pip', 'pip install ${PIP_INS_OPTS} wheel setuptools', 'pip install ${PIP_INS_OPTS} opencv-python || true', 'pip install ${PIP_INS_OPTS} nnabla==${NNABLA_VER}']"
sony/nnabla,latest,/docker/release/Dockerfile.py37-armhf,FROM,1,['multiarch/debian-debootstrap:armhf-buster']
sony/nnabla,latest,/docker/release/Dockerfile.py37-armhf,ARG,5,"['PIP_INS_OPTS', 'PYTHONWARNINGS', 'CURL_OPTS', 'WGET_OPTS', 'NNABLA_VER']"
sony/nnabla,latest,/docker/release/Dockerfile.py37-armhf,ENV,3,"['LC_ALL C', 'LANG C', 'LANGUAGE C']"
sony/nnabla,latest,/docker/release/Dockerfile.py37-armhf,RUN,9,"['apt-get update && apt-get install -y --no-install-recommends     bzip2     ca-certificates     libarchive-dev     libatlas-base-dev     libhdf5-dev     libopenblas-dev     liblapack-dev     pkg-config     python3     python3-dev     python3-pip     python3-setuptools     python3-wheel     && apt-get clean     && rm -rf /var/lib/apt/lists/*', 'python3 -m pip install ${PIP_INS_OPTS} --upgrade pip', 'echo ""[global]"" >/etc/pip.conf', 'echo ""extra-index-url=https://www.piwheels.org/simple"" >> /etc/pip.conf', 'python3 -m pip install ${PIP_INS_OPTS} --no-cache-dir numpy', 'python3 -m pip install ${PIP_INS_OPTS} --no-cache-dir scipy\\<1.4', 'python3 -m pip install ${PIP_INS_OPTS} --no-cache-dir     boto3     cython     h5py     pillow     protobuf     pyyaml     tqdm', 'python3 -m pip install ${PIP_INS_OPTS} ipython', 'pip install ${PIP_INS_OPTS} nnabla==${NNABLA_VER}']"
kermitt2/grobid,latest,/Dockerfile.delft,FROM,2,"['openjdk:8u275-jdk as builder', 'tensorflow/tensorflow:1.15.5-gpu']"
kermitt2/grobid,latest,/Dockerfile.delft,USER,1,['root']
kermitt2/grobid,latest,/Dockerfile.delft,RUN,21,"['apt-get update &&     apt-get -y --no-install-recommends install unzip', 'rm -rf grobid-home/pdf2xml', 'rm -rf grobid-home/pdfalto/lin-32', 'rm -rf grobid-home/pdfalto/mac-64', 'rm -rf grobid-home/pdfalto/win-*', 'rm -rf grobid-home/lib/lin-32', 'rm -rf grobid-home/lib/win-*', 'rm -rf grobid-home/lib/mac-64', './gradlew clean assemble --no-daemon  --info --stacktrace', 'unzip -o /opt/grobid-source/grobid-service/build/distributions/grobid-service-*.zip &&     mv grobid-service* grobid-service', 'unzip -o /opt/grobid-source/grobid-home/build/distributions/grobid-home-*.zip &&     chmod -R 755 /opt/grobid/grobid-home/pdfalto', 'rm -rf grobid-source', 'apt-get update &&     apt-get -y --no-install-recommends install apt-utils build-essential gcc libxml2 libfontconfig unzip curl     openjdk-8-jre-headless ca-certificates-java     musl gfortran     python3 python3-pip python3-setuptools python3-dev     && apt-get clean     && rm -rf /var/lib/apt/lists/*', 'python3 -m pip install pip --upgrade', 'pip3 install requests delft==0.2.8', 'mkdir -p /data     && ln -s /data /opt/grobid/data     && ln -s /data ./data', 'chmod +x /tini', 'curl --fail --show-error --location -q ${JDK_URL} -o /tmp/openjdk.tar.gz     && ls -lh /tmp/openjdk.tar.gz     && mkdir - ""${TEMP_JDK_HOME}""     && tar --extract         --file /tmp/openjdk.tar.gz         --directory ""${TEMP_JDK_HOME}""         --strip-components 1         --no-same-owner     && JAVA_HOME=${TEMP_JDK_HOME} pip3 install jep==3.9.1     && rm -f /tmp/openjdk.tar.gz     && rm -rf ""${TEMP_JDK_HOME}""', 'rm /opt/grobid/grobid-home/lib/lin-64/libjep.so', 'python3 preload_embeddings.py', 'ln -s /opt/grobid /opt/delft']"
kermitt2/grobid,latest,/Dockerfile.delft,WORKDIR,4,"['/opt/grobid-source', '/opt/grobid', '/opt/grobid', '/opt/grobid']"
kermitt2/grobid,latest,/Dockerfile.delft,COPY,12,"['gradle/ ./gradle/', 'gradlew ./', 'gradle.properties ./', 'build.gradle ./', 'settings.gradle ./', 'grobid-home/ ./grobid-home/', 'grobid-core/ ./grobid-core/', 'grobid-service/ ./grobid-service/', 'grobid-trainer/ ./grobid-trainer/', '--from=builder /opt/grobid .', '--from=builder /opt/grobid-source/grobid-home/scripts/preload_embeddings.py .', '--from=builder /opt/grobid-source/grobid-home/config/embedding-registry.json .']"
kermitt2/grobid,latest,/Dockerfile.delft,CMD,2,"['nvidia-smi', '[""./grobid-service/bin/grobid-service""]']"
kermitt2/grobid,latest,/Dockerfile.delft,ENV,7,"['LANG C.UTF-8', 'PYTHONWARNINGS=""ignore""', 'JAVA_OPTS=-Xmx4g', 'TINI_VERSION v0.18.0', 'TEMP_JDK_HOME=/tmp/jdk-${JAVA_VERSION}', 'JDK_URL=https://github.com/AdoptOpenJDK/openjdk8-upstream-binaries/releases/download/jdk8u212-b04/OpenJDK8U-x64_linux_8u212b04.tar.gz', 'LD_LIBRARY_PATH=/usr/local/lib/python3.6/dist-packages/jep:${LD_LIBRARY_PATH}']"
kermitt2/grobid,latest,/Dockerfile.delft,ADD,1,['https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini /tini']
kermitt2/grobid,latest,/Dockerfile.delft,ENTRYPOINT,1,"['[""/tini"", ""-s"", ""--""]']"
kermitt2/grobid,latest,/Dockerfile.delft,ARG,1,['GROBID_VERSION']
kermitt2/grobid,latest,/Dockerfile.delft,LABEL,1,"['authors=""The contributors""     org.label-schema.name=""GROBID""     org.label-schema.description=""Image with GROBID service""     org.label-schema.url=""https://github.com/kermitt2/grobid""     org.label-schema.version=${GROBID_VERSION}']"
kermitt2/grobid,latest,/Dockerfile.crf,FROM,2,"['openjdk:8u212-jdk as builder', 'openjdk:11-jre-slim']"
kermitt2/grobid,latest,/Dockerfile.crf,USER,1,['root']
kermitt2/grobid,latest,/Dockerfile.crf,RUN,15,"['apt-get update &&     apt-get -y --no-install-recommends install unzip', 'rm -rf grobid-home/pdf2xml', 'rm -rf grobid-home/pdfalto/lin-32', 'rm -rf grobid-home/pdfalto/mac-64', 'rm -rf grobid-home/pdfalto/win-*', 'rm -rf grobid-home/lib/lin-32', 'rm -rf grobid-home/lib/win-*', 'rm -rf grobid-home/lib/mac-64', 'rm -rf grobid-home/models/*-BidLSTM_CRF*', './gradlew clean assemble --no-daemon  --info --stacktrace', 'unzip -o /opt/grobid-source/grobid-service/build/distributions/grobid-service-*.zip &&     mv grobid-service* grobid-service', 'unzip -o /opt/grobid-source/grobid-home/build/distributions/grobid-home-*.zip &&     chmod -R 755 /opt/grobid/grobid-home/pdfalto', 'rm -rf grobid-source', 'apt-get update &&     apt-get -y --no-install-recommends install libxml2 libfontconfig &&     rm -rf /var/lib/apt/lists/*', 'chmod +x /tini']"
kermitt2/grobid,latest,/Dockerfile.crf,WORKDIR,3,"['/opt/grobid-source', '/opt/grobid', '/opt/grobid']"
kermitt2/grobid,latest,/Dockerfile.crf,COPY,10,"['gradle/ ./gradle/', 'gradlew ./', 'gradle.properties ./', 'build.gradle ./', 'settings.gradle ./', 'grobid-home/ ./grobid-home/', 'grobid-core/ ./grobid-core/', 'grobid-service/ ./grobid-service/', 'grobid-trainer/ ./grobid-trainer/', '--from=builder /opt/grobid .']"
kermitt2/grobid,latest,/Dockerfile.crf,ENV,1,['TINI_VERSION v0.18.0']
kermitt2/grobid,latest,/Dockerfile.crf,ADD,1,['https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini /tini']
kermitt2/grobid,latest,/Dockerfile.crf,ENTRYPOINT,1,"['[""/tini"", ""-s"", ""--""]']"
kermitt2/grobid,latest,/Dockerfile.crf,CMD,1,"['[""./grobid-service/bin/grobid-service""]']"
kermitt2/grobid,latest,/Dockerfile.crf,ARG,1,['GROBID_VERSION']
kermitt2/grobid,latest,/Dockerfile.crf,LABEL,1,"['authors=""The contributors""     org.label-schema.name=""GROBID""     org.label-schema.description=""Image with GROBID service""     org.label-schema.url=""https://github.com/kermitt2/grobid""     org.label-schema.version=${GROBID_VERSION}']"
olivia-ai/olivia,latest,/Dockerfile,FROM,1,['golang:latest']
olivia-ai/olivia,latest,/Dockerfile,LABEL,1,"['maintainer=""Hugo Lageneste <hugo@olivia-ai.org>""']"
olivia-ai/olivia,latest,/Dockerfile,WORKDIR,1,['/app']
olivia-ai/olivia,latest,/Dockerfile,COPY,2,"['go.mod go.sum ./', '. .']"
olivia-ai/olivia,latest,/Dockerfile,RUN,3,"['go mod download', 'go test', 'go build -o main .']"
olivia-ai/olivia,latest,/Dockerfile,EXPOSE,1,['$PORT']
olivia-ai/olivia,latest,/Dockerfile,CMD,1,"['[""./main"", ""-port=$PORT""]']"
SeldonIO/seldon-server,latest,/docker/td-agent-server/Dockerfile,FROM,1,['seldonio/td-agent:1.0']
SeldonIO/seldon-server,latest,/docker/td-agent-server/Dockerfile,EXPOSE,1,['24224']
SeldonIO/seldon-server,latest,/docker/td-agent-server/Dockerfile,ADD,1,['td-agent.conf /etc/td-agent/td-agent.conf']
SeldonIO/seldon-server,latest,/docker/td-agent-server/Dockerfile,RUN,3,"['mkdir -p /seldon-data/logs/events', 'mkdir -p /seldon-data/logs/actions', 'mkdir -p /seldon-data/logs/stats']"
SeldonIO/seldon-server,latest,/docker/td-agent-server/Dockerfile,VOLUME,1,['/seldon-data']
SeldonIO/seldon-server,latest,/docker/seldon-spark-build/Dockerfile,FROM,1,['maven:3.3.3-jdk-7']
SeldonIO/seldon-server,latest,/docker/seldon-spark-build/Dockerfile,ENV,1,['SELDON_HOME /home/seldon']
SeldonIO/seldon-server,latest,/docker/seldon-spark-build/Dockerfile,RUN,2,"['mkdir -p  ""$SELDON_HOME""', 'cd ${SELDON_HOME} &&     tar xfz seldon-server.tar.gz &&     rm -fv seldon-server.tar.gz &&     cd seldon-server/offline-jobs/spark &&     mvn clean package &&     cd ${SELDON_HOME} &&     cp seldon-server/offline-jobs/spark/target/*.jar . &&     rm -rf seldon-server']"
SeldonIO/seldon-server,latest,/docker/seldon-spark-build/Dockerfile,WORKDIR,1,['$SELDON_HOME']
SeldonIO/seldon-server,latest,/docker/seldon-spark-build/Dockerfile,COPY,1,['seldon-server.tar.gz ${SELDON_HOME}/']
SeldonIO/seldon-server,latest,/docker/seldon-spark-build/Dockerfile,CMD,1,"['[""bash""]']"
SeldonIO/seldon-server,latest,/docker/kafka-k8s/Dockerfile,FROM,1,['anapsix/alpine-java']
SeldonIO/seldon-server,latest,/docker/kafka-k8s/Dockerfile,RUN,2,"['apk add --update unzip wget curl docker jq coreutils', '/tmp/download-kafka.sh && tar xfz /tmp/kafka_${SCALA_VERSION}-${KAFKA_VERSION}.tgz -C /opt && rm /tmp/kafka_${SCALA_VERSION}-${KAFKA_VERSION}.tgz']"
SeldonIO/seldon-server,latest,/docker/kafka-k8s/Dockerfile,ENV,2,"['KAFKA_VERSION=""0.10.2.1"" SCALA_VERSION=""2.11""', 'KAFKA_HOME /opt/kafka_${SCALA_VERSION}-${KAFKA_VERSION}']"
SeldonIO/seldon-server,latest,/docker/kafka-k8s/Dockerfile,ADD,4,"['download-kafka.sh /tmp/download-kafka.sh', 'start-kafka.sh /usr/bin/start-kafka.sh', 'broker-list.sh /usr/bin/broker-list.sh', 'create-topics.sh /usr/bin/create-topics.sh']"
SeldonIO/seldon-server,latest,/docker/kafka-k8s/Dockerfile,VOLUME,1,"['[""/kafka""]']"
SeldonIO/seldon-server,latest,/docker/kafka-k8s/Dockerfile,CMD,1,"['[""start-kafka.sh""]']"
SeldonIO/seldon-server,latest,/docker/seldon-control/Dockerfile.in,FROM,1,['seldonio/pyseldon:%SELDON_PYTHON_PACKAGE_VERSION%']
SeldonIO/seldon-server,latest,/docker/seldon-control/Dockerfile.in,RUN,14,"['apt-get update &&     apt-get -y -q install netcat dnsutils emacs vim mysql-client', 'pip install memcache-cli awscli', 'apt-get update &&   apt-get install -y openjdk-7-jdk &&   rm -rf /var/lib/apt/lists/*', 'mkdir -p /opt &&     cd /opt &&     curl http://www.apache.org/dist/hadoop/common/hadoop-${hadoop_ver}/hadoop-${hadoop_ver}.tar.gz |         tar -zx hadoop-${hadoop_ver}/lib/native &&     ln -s hadoop-${hadoop_ver} hadoop &&     echo Hadoop ${hadoop_ver} native libraries installed in /opt/hadoop/lib/native', 'mkdir -p /opt &&     cd /opt &&     curl http://archive.apache.org/dist/spark/spark-${spark_ver}/spark-${spark_ver}-bin-hadoop2.6.tgz |         tar -zx &&     ln -s spark-${spark_ver}-bin-hadoop2.6 spark &&     echo Spark ${spark_ver} installed in /opt', 'pip install luigi', 'mkdir -p /opt &&     cd /opt &&     git clone https://github.com/edenhill/librdkafka &&     cd librdkafka &&     ./configure &&     make && make install', 'mkdir -p /opt &&     cd /opt &&     git clone https://github.com/edenhill/kafkacat &&     cd kafkacat &&     ./configure &&     make && make install', 'mkdir -p  ""$SELDON_HOME""', 'ln -s $SELDON_HOME/libs/seldon-spark-${SELDON_SPARK_VERSION}-jar-with-dependencies.jar $SELDON_HOME/libs/seldon-spark.jar', '(mkdir /root/.seldon && ln -s /home/seldon/seldon.conf /root/.seldon/seldon.conf)', 'mkdir -p /seldon-data/conf', 'mkdir -p /seldon-data/seldon-models', 'mkdir -p /usr/share/maven /usr/share/maven/ref   && curl -fsSL http://apache.osuosl.org/maven/maven-3/$MAVEN_VERSION/binaries/apache-maven-$MAVEN_VERSION-bin.tar.gz     | tar -xzC /usr/share/maven --strip-components=1   && ln -s /usr/share/maven/bin/mvn /usr/bin/mvn']"
SeldonIO/seldon-server,latest,/docker/seldon-control/Dockerfile.in,ENV,8,"['JAVA_HOME /usr/lib/jvm/java-7-openjdk-amd64', 'hadoop_ver 2.6.5', 'spark_ver 1.5.2', 'PATH $PATH:/opt/spark/bin', 'LUIGI_CONFIG_PATH /home/seldon/luigi.cfg', 'SELDON_HOME /home/seldon', 'MAVEN_HOME /usr/share/maven', 'MAVEN_CONFIG ""$USER_HOME_DIR/.m2""']"
SeldonIO/seldon-server,latest,/docker/seldon-control/Dockerfile.in,COPY,4,"['luigi.cfg /home/seldon/luigi.cfg', './seldon-spark-${SELDON_SPARK_VERSION}-jar-with-dependencies.jar $SELDON_HOME/libs/', 'seldon.conf /home/seldon', 'client-dashboard.json $SELDON_HOME']"
SeldonIO/seldon-server,latest,/docker/seldon-control/Dockerfile.in,WORKDIR,1,['$SELDON_HOME']
SeldonIO/seldon-server,latest,/docker/seldon-control/Dockerfile.in,ARG,3,"['SELDON_SPARK_VERSION', 'MAVEN_VERSION=3.3.9', 'USER_HOME_DIR=""/home/seldon""']"
SeldonIO/seldon-server,latest,/docker/seldon-control/Dockerfile.in,VOLUME,2,"['/seldon-data', '""$USER_HOME_DIR/.m2""']"
SeldonIO/seldon-server,latest,/docker/seldon-control/Dockerfile.in,ADD,1,['grpc-util ${SELDON_HOME}/grpc-util']
SeldonIO/seldon-server,latest,/docker/locust/Dockerfile.in,FROM,1,['seldonio/pyseldon:%SELDON_PYTHON_PACKAGE_VERSION%']
SeldonIO/seldon-server,latest,/docker/locust/Dockerfile.in,ENV,3,"['HOME /root', 'DEBIAN_FRONTEND noninteractive', 'SELDON_HOME /home/seldon']"
SeldonIO/seldon-server,latest,/docker/locust/Dockerfile.in,RUN,1,['pip install locustio']
SeldonIO/seldon-server,latest,/docker/locust/Dockerfile.in,ADD,1,['./scripts $SELDON_HOME/scripts']
SeldonIO/seldon-server,latest,/docker/locust/Dockerfile.in,CMD,1,"['[""bash""]']"
SeldonIO/seldon-server,latest,/docker/seldon-server-maintenance/Dockerfile,FROM,1,['ubuntu:latest']
SeldonIO/seldon-server,latest,/docker/seldon-server-maintenance/Dockerfile,RUN,4,"['apt-get update && apt-get -y install cron rsyslog', 'chmod 0600 /etc/cron.d/rm-old-logs', 'touch /var/log/cron.log', 'mkdir -p  ""${SELDON_HOME}""']"
SeldonIO/seldon-server,latest,/docker/seldon-server-maintenance/Dockerfile,ADD,2,"['scripts/crontab /etc/cron.d/rm-old-logs', 'scripts/rm_old_logs.sh $SELDON_HOME/rm_old_logs.sh']"
SeldonIO/seldon-server,latest,/docker/seldon-server-maintenance/Dockerfile,ENV,1,['SELDON_HOME /home/seldon']
SeldonIO/seldon-server,latest,/docker/seldon-server-maintenance/Dockerfile,CMD,1,['touch /etc/cron.d/rm-old-logs && cron -L15 && tail -f /var/log/cron.log']
SeldonIO/seldon-server,latest,/docker/pyseldon/Dockerfile,FROM,1,['continuumio/anaconda:4.1.1']
SeldonIO/seldon-server,latest,/docker/pyseldon/Dockerfile,ENV,5,"['HOME /root', 'DEBIAN_FRONTEND noninteractive', 'LD_LIBRARY_PATH $LD_LIBRARY_PATH:/usr/local/lib', 'SELDON_HOME /home/seldon', 'GRPC_PYTHON_VERSION 1.0.0']"
SeldonIO/seldon-server,latest,/docker/pyseldon/Dockerfile,RUN,20,"['conda install  -f  numpy', 'apt-get update &&     apt-get -y -q install build-essential automake autoconf libxmu-dev g++ gcc libpthread-stubs0-dev libtool libboost-program-options-dev libboost-python-dev zlib1g-dev libc6 libgcc1 libstdc++6 libblas-dev liblapack-dev git telnet procps memcached libmemcached-dev mysql-client-5.5 mysql-common libmysqlclient-dev unzip', 'pip install xgboost==0.4a30', 'cd /tmp/ &&     TF_WHL_FILE=tensorflow-0.10.0rc0-cp27-none-linux_x86_64.whl &&     wget https://storage.googleapis.com/tensorflow/linux/cpu/${TF_WHL_FILE} &&     pip install ${TF_WHL_FILE} &&     rm ${TF_WHL_FILE}', 'cd /usr/local/src;git clone https://github.com/JohnLangford/vowpal_wabbit.git;cd vowpal_wabbit;git checkout 8.1 ;./autogen.sh;./configure;make;make test;make install', 'cd /usr/local/src; git clone https://github.com/seldonio/wabbit_wappa.git  ; cd wabbit_wappa ; python setup.py install', 'cd /usr/local/src;wget http://osmot.cs.cornell.edu/kddcup/perf/perf.src.tar.gz;tar xvf perf.src.tar.gz;rm perf.src.tar.gz;mv perf.src perf;cd perf;make -B perf;make install', 'pip install kazoo filechunkio Flask gunicorn pylibmc gensim annoy smart_open', 'cd /usr/local/src && mkdir keras && cd keras &&        git clone https://github.com/fchollet/keras.git &&        cd keras && git checkout tags/0.2.0 && python setup.py install', 'cd /ur/local/src; git clone https://github.com/fmfn/BayesianOptimization ; cd BayesianOptimization ; python setup.py install', 'pip install sklearn --upgrade', 'pip install pandas --upgrade', 'pip install cmd2 MySQL-python', 'pip install DAWG', 'pip install -e git+git://github.com/SeldonIO/wabbit_wappa#egg=wabbit-wappa-3.0.2', 'pip install -e git+git://github.com/fmfn/BayesianOptimization#egg=bayes_opt', 'echo ""using SELDON_PYTHON_PACKAGE_VERSION[${SELDON_PYTHON_PACKAGE_VERSION}]""', 'mkdir -p /tmp/install &&     cd /tmp/install &&     mv /tmp/seldon-${SELDON_PYTHON_PACKAGE_VERSION}.tar.gz . &&     tar xfz seldon-${SELDON_PYTHON_PACKAGE_VERSION}.tar.gz &&     cd seldon-${SELDON_PYTHON_PACKAGE_VERSION} &&     pip install python-daemon &&     python setup.py install &&     rm -rf /tmp/install', 'mkdir -p /tmp/protoc &&     curl -L https://github.com/google/protobuf/releases/download/v3.0.0/protoc-3.0.0-linux-x86_64.zip > /tmp/protoc/protoc.zip &&     cd /tmp/protoc &&     unzip protoc.zip &&     cp /tmp/protoc/bin/protoc /usr/local/bin &&     chmod go+rx /usr/local/bin/protoc &&     cd /tmp &&     rm -r /tmp/protoc', 'pip install grpcio==${GRPC_PYTHON_VERSION} grpcio-tools==${GRPC_PYTHON_VERSION}']"
SeldonIO/seldon-server,latest,/docker/pyseldon/Dockerfile,ARG,1,['SELDON_PYTHON_PACKAGE_VERSION']
SeldonIO/seldon-server,latest,/docker/pyseldon/Dockerfile,COPY,1,['seldon-${SELDON_PYTHON_PACKAGE_VERSION}.tar.gz /tmp/']
SeldonIO/seldon-server,latest,/docker/pyseldon/Dockerfile,ADD,1,['./scripts $SELDON_HOME/scripts']
SeldonIO/seldon-server,latest,/docker/pyseldon/Dockerfile,CMD,1,"['[""bash""]']"
SeldonIO/seldon-server,latest,/docker/td-agent-node/Dockerfile,FROM,1,['seldonio/td-agent:1.0']
SeldonIO/seldon-server,latest,/docker/td-agent-node/Dockerfile,ADD,1,['td-agent.conf /etc/td-agent/td-agent.conf']
SeldonIO/seldon-server,latest,/docker/zookeeper-k8s/Dockerfile,FROM,1,['ubuntu:14.04']
SeldonIO/seldon-server,latest,/docker/zookeeper-k8s/Dockerfile,MAINTAINER,1,['dev@seldon.io']
SeldonIO/seldon-server,latest,/docker/zookeeper-k8s/Dockerfile,ENV,1,['ZOOKEEPER_VERSION 3.4.8']
SeldonIO/seldon-server,latest,/docker/zookeeper-k8s/Dockerfile,EXPOSE,1,['2181 2888 3888']
SeldonIO/seldon-server,latest,/docker/zookeeper-k8s/Dockerfile,RUN,1,['apt-get update && apt-get -y upgrade && \tapt-get -y install wget openjdk-7-jre-headless && \twget -q -O - http://apache.mirrors.pair.com/zookeeper/zookeeper-${ZOOKEEPER_VERSION}/zookeeper-${ZOOKEEPER_VERSION}.tar.gz | tar -xzf - -C /opt && \tmv /opt/zookeeper-${ZOOKEEPER_VERSION} /opt/zookeeper && \tmkdir -p /opt/zookeeper/data && \tmkdir -p /opt/zookeeper/log']
SeldonIO/seldon-server,latest,/docker/zookeeper-k8s/Dockerfile,WORKDIR,1,['/opt/zookeeper']
SeldonIO/seldon-server,latest,/docker/zookeeper-k8s/Dockerfile,VOLUME,1,"['[""/opt/zookeeper/conf"", ""/opt/zookeeper/data"", ""/opt/zookeeper/log""]']"
SeldonIO/seldon-server,latest,/docker/zookeeper-k8s/Dockerfile,COPY,1,['config-and-run.sh ./bin/']
SeldonIO/seldon-server,latest,/docker/zookeeper-k8s/Dockerfile,CMD,1,"['[""/opt/zookeeper/bin/config-and-run.sh""]']"
SeldonIO/seldon-server,latest,/docker/grafana/Dockerfile,FROM,1,['grafana/grafana:2.6.0']
SeldonIO/seldon-server,latest,/docker/grafana/Dockerfile,RUN,2,"['apt-get update &&     apt-get install -y curl', 'mkdir -p /seldon-data/grafana']"
SeldonIO/seldon-server,latest,/docker/grafana/Dockerfile,VOLUME,1,['/seldon-data']
SeldonIO/seldon-server,latest,/docker/grafana/Dockerfile,COPY,1,['run.sh /run.sh']
SeldonIO/seldon-server,latest,/docker/grafana/Dockerfile,EXPOSE,1,['3000']
SeldonIO/seldon-server,latest,/docker/grafana/Dockerfile,ENTRYPOINT,1,['/run.sh']
SeldonIO/seldon-server,latest,/docker/proxy-server/Dockerfile,FROM,1,['nginx:alpine']
SeldonIO/seldon-server,latest,/docker/proxy-server/Dockerfile,ENV,2,"['BASIC_AUTH_FILE /etc/nginx/basic_auth', 'NGINX_PORT 80']"
SeldonIO/seldon-server,latest,/docker/proxy-server/Dockerfile,ADD,2,"['proxy.conf /etc/nginx/conf.d/default.conf', 'entrypoint.sh /entrypoint.sh']"
SeldonIO/seldon-server,latest,/docker/proxy-server/Dockerfile,CMD,1,"['[""/entrypoint.sh""]']"
SeldonIO/seldon-server,latest,/docker/ngram/Dockerfile,FROM,1,['seldonio/pyseldon']
SeldonIO/seldon-server,latest,/docker/ngram/Dockerfile,RUN,2,"['apt-get -y -q  install build-essential libboost-all-dev zlib1g-dev libbz2-dev liblzma-dev', 'wget -O - http://kheafield.com/code/kenlm.tar.gz |tar xz ; cd  kenlm ; ./bjam -j4']"
SeldonIO/seldon-server,latest,/docker/ngram/Dockerfile,ADD,1,['./ngram_scripts /ngram_scripts']
SeldonIO/seldon-server,latest,/docker/seldon-server/Dockerfile,FROM,1,['maven:3.3.3-jdk-8']
SeldonIO/seldon-server,latest,/docker/seldon-server/Dockerfile,ENV,7,"['SELDON_HOME /home/seldon', 'CATALINA_HOME /usr/local/tomcat', 'PATH $CATALINA_HOME/bin:$PATH', 'TOMCAT_MAJOR 7', 'TOMCAT_VERSION 7.0.82', 'TOMCAT_TGZ_URL https://www.apache.org/dist/tomcat/tomcat-$TOMCAT_MAJOR/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.tar.gz', 'SELDON_ZKSERVERS zookeeper']"
SeldonIO/seldon-server,latest,/docker/seldon-server/Dockerfile,RUN,6,"['mkdir -p  ""${SELDON_HOME}""', 'cd ${SELDON_HOME} &&     tar xfz seldon-server.tar.gz &&     cd seldon-server/server &&     mvn clean package &&     mv -v ${SELDON_HOME}/seldon-server/server/target/*.war ${SELDON_HOME}/ &&     rm -rf ${SELDON_HOME}/seldon-server &&     rm -f ${SELDON_HOME}/seldon-server.tar.gz', 'mkdir -p ""$CATALINA_HOME""', 'set -x \t&& curl -fSL ""$TOMCAT_TGZ_URL"" -o tomcat.tar.gz \t&& tar -xvf tomcat.tar.gz --strip-components=1 \t&& rm bin/*.bat \t&& rm tomcat.tar.gz*', 'apt-get update &&     apt-get install -y less telnet emacs', '(mkdir -p $SELDON_HOME/ROOT &&     mv -v $SELDON_HOME/*.war $SELDON_HOME/ROOT &&     cd $SELDON_HOME/ROOT && unzip *.war && rm *.war &&     rm -rf $CATALINA_HOME/webapps/ROOT && ln -s $SELDON_HOME/ROOT $CATALINA_HOME/webapps/ROOT &&     mkdir -p $SELDON_HOME/logs/base &&     mkdir -p $SELDON_HOME/logs/actions &&     mkdir -p $SELDON_HOME/logs/tomcat &&     mkdir -p $CATALINA_HOME/logs/seldon-server &&     ln -s $SELDON_HOME/logs/base $CATALINA_HOME/logs/seldon-server/base  &&     ln -s $SELDON_HOME/logs/tomcat $CATALINA_HOME/logs/tomcat  &&     ln -s $SELDON_HOME/logs/actions $CATALINA_HOME/logs/seldon-server/actions  )']"
SeldonIO/seldon-server,latest,/docker/seldon-server/Dockerfile,WORKDIR,3,"['${SELDON_HOME}', '$CATALINA_HOME', '${SELDON_HOME}']"
SeldonIO/seldon-server,latest,/docker/seldon-server/Dockerfile,COPY,1,['seldon-server.tar.gz ${SELDON_HOME}/']
SeldonIO/seldon-server,latest,/docker/seldon-server/Dockerfile,EXPOSE,1,['8080']
SeldonIO/seldon-server,latest,/docker/seldon-server/Dockerfile,ADD,5,"['scripts/server.xml $CATALINA_HOME/conf/server.xml', 'scripts/context.xml $CATALINA_HOME/conf/context.xml', 'scripts/catalina.policy $CATALINA_HOME/conf/catalina.policy', 'scripts/start-server.sh $SELDON_HOME/start-server.sh', 'scripts/start-server-debug.sh $SELDON_HOME/start-server-debug.sh']"
SeldonIO/seldon-server,latest,/docker/seldon-server/Dockerfile,CMD,1,"['[""bash""]']"
SeldonIO/seldon-server,latest,/docker/influxdb/Dockerfile,FROM,1,['kubernetes/heapster_influxdb:v0.6']
SeldonIO/seldon-server,latest,/docker/influxdb/Dockerfile,RUN,1,['mkdir -p /seldon-data/influxdb']
SeldonIO/seldon-server,latest,/docker/influxdb/Dockerfile,VOLUME,1,['/seldon-data']
SeldonIO/seldon-server,latest,/docker/influxdb/Dockerfile,ADD,1,['config.toml /etc/influxdb.toml']
SeldonIO/seldon-server,latest,/docker/iago/Dockerfile,FROM,1,['maven:3.3.3-jdk-8']
SeldonIO/seldon-server,latest,/docker/iago/Dockerfile,RUN,3,"['apt-get update &&     apt-get -y -q install build-essential automake autoconf zlib1g-dev libc6 libgcc1 libstdc++6 git telnet procps', 'git clone https://github.com/twitter/iago &&     cd iago &&     mvn package -DskipTests', 'cd iago &&     mkdir tmp; cd tmp &&     unzip ../target/iago-*-package-dist.zip']"
SeldonIO/seldon-server,latest,/docker/iago/Dockerfile,COPY,2,"['web.ramp-up.scala.in /iago/tmp', 'start-load-test.sh /']"
SeldonIO/seldon-server,latest,/docker/examples/anomaly_detection/inne/Dockerfile.in,FROM,1,['seldonio/pyseldon:%SELDON_PYTHON_PACKAGE_VERSION%']
SeldonIO/seldon-server,latest,/docker/examples/anomaly_detection/inne/Dockerfile.in,ENV,1,['SELDON_HOME=/home/seldon']
SeldonIO/seldon-server,latest,/docker/examples/anomaly_detection/inne/Dockerfile.in,COPY,4,"['inne_pipeline.py $SELDON_HOME/inne_pipeline.py', 'create-json.py $SELDON_HOME/create-json.py', 'DataGenerator.py $SELDON_HOME/DataGenerator.py', 'run_microservice.sh /run_microservice.sh']"
SeldonIO/seldon-server,latest,/docker/examples/anomaly_detection/inne/Dockerfile.in,RUN,3,"['mkdir -p $SELDON_HOME/data && cd $SELDON_HOME/ && python DataGenerator.py --std 0.1 --nb-samples 1000 --dim 4 --nb-clusters 3 --fout data/simulation.csv', 'mkdir -p $SELDON_HOME/data/simulation/events/1 && cat $SELDON_HOME/data/simulation.csv | python $SELDON_HOME/create-json.py | shuf > $SELDON_HOME/data/simulation/events/1/simulation.json', 'cd $SELDON_HOME && python $SELDON_HOME/inne_pipeline.py --events data/simulation/events/1 --models /data/simulation/inne_models/1']"
SeldonIO/seldon-server,latest,/docker/examples/anomaly_detection/inne/Dockerfile.in,CMD,1,"['[""/run_microservice.sh""]']"
SeldonIO/seldon-server,latest,/docker/examples/iris/keras/Dockerfile.in,FROM,1,['seldonio/pyseldon:%SELDON_PYTHON_PACKAGE_VERSION%']
SeldonIO/seldon-server,latest,/docker/examples/iris/keras/Dockerfile.in,RUN,4,"['pip install theano', 'mkdir -p $SELDON_HOME/data && cd $SELDON_HOME/data ; wget --quiet http://archive.ics.uci.edu/ml/machine-learning-databases/iris/iris.data', 'mkdir -p $SELDON_HOME/data/iris/events/1 && cat $SELDON_HOME/data/iris.data | python $SELDON_HOME/create-json.py | shuf > $SELDON_HOME/data/iris/events/1/iris.json', 'cd $SELDON_HOME && python $SELDON_HOME/keras_pipeline.py --events data/iris/events/1 --models /data/iris/keras_models/1']"
SeldonIO/seldon-server,latest,/docker/examples/iris/keras/Dockerfile.in,ENV,2,"['SELDON_HOME=/home/seldon', 'KERAS_BACKEND=theano']"
SeldonIO/seldon-server,latest,/docker/examples/iris/keras/Dockerfile.in,COPY,3,"['keras_pipeline.py $SELDON_HOME/keras_pipeline.py', 'create-json.py $SELDON_HOME/create-json.py', 'run_microservice.sh /run_microservice.sh']"
SeldonIO/seldon-server,latest,/docker/examples/iris/keras/Dockerfile.in,CMD,1,"['[""/run_microservice.sh""]']"
SeldonIO/seldon-server,latest,/docker/examples/iris/xgboost/Dockerfile.in,FROM,1,['seldonio/pyseldon:%SELDON_PYTHON_PACKAGE_VERSION%']
SeldonIO/seldon-server,latest,/docker/examples/iris/xgboost/Dockerfile.in,ENV,1,['SELDON_HOME=/home/seldon']
SeldonIO/seldon-server,latest,/docker/examples/iris/xgboost/Dockerfile.in,COPY,3,"['xgb_pipeline.py $SELDON_HOME/xgb_pipeline.py', 'create-json.py $SELDON_HOME/create-json.py', 'run_microservice.sh /run_microservice.sh']"
SeldonIO/seldon-server,latest,/docker/examples/iris/xgboost/Dockerfile.in,RUN,3,"['mkdir -p $SELDON_HOME/data && cd $SELDON_HOME/data ; wget --quiet http://archive.ics.uci.edu/ml/machine-learning-databases/iris/iris.data', 'mkdir -p $SELDON_HOME/data/iris/events/1 && cat $SELDON_HOME/data/iris.data | python $SELDON_HOME/create-json.py | shuf > $SELDON_HOME/data/iris/events/1/iris.json', 'cd $SELDON_HOME && python $SELDON_HOME/xgb_pipeline.py --events data/iris/events/1 --models /data/iris/xgb_models/1']"
SeldonIO/seldon-server,latest,/docker/examples/iris/xgboost/Dockerfile.in,CMD,1,"['[""/run_microservice.sh""]']"
SeldonIO/seldon-server,latest,/docker/examples/iris/xgboost_rpc/Dockerfile.in,FROM,1,['seldonio/pyseldon:%SELDON_PYTHON_PACKAGE_VERSION%']
SeldonIO/seldon-server,latest,/docker/examples/iris/xgboost_rpc/Dockerfile.in,ENV,1,['SELDON_HOME=/home/seldon']
SeldonIO/seldon-server,latest,/docker/examples/iris/xgboost_rpc/Dockerfile.in,COPY,5,"['xgb_pipeline.py $SELDON_HOME/xgb_pipeline.py', 'create-json.py $SELDON_HOME/create-json.py', 'proto/iris.proto $SELDON_HOME/proto/iris.proto', 'python/iris_rpc_microservice.py $SELDON_HOME/python', 'run_microservice.sh /run_microservice.sh']"
SeldonIO/seldon-server,latest,/docker/examples/iris/xgboost_rpc/Dockerfile.in,RUN,6,"['mkdir -p $SELDON_HOME/data && cd $SELDON_HOME/data ; wget --quiet http://archive.ics.uci.edu/ml/machine-learning-databases/iris/iris.data', 'mkdir -p $SELDON_HOME/data/iris/events/1 && cat $SELDON_HOME/data/iris.data | python $SELDON_HOME/create-json.py | shuf > $SELDON_HOME/data/iris/events/1/iris.json', 'cd $SELDON_HOME && python $SELDON_HOME/xgb_pipeline.py --events data/iris/events/1 --models /data/iris/xgb_models/1', 'mkdir $SELDON_HOME/proto', 'mkdir $SELDON_HOME/python', 'python -m grpc.tools.protoc -I $SELDON_HOME/proto  --python_out=$SELDON_HOME/python --grpc_python_out=$SELDON_HOME/python $SELDON_HOME/proto/iris.proto']"
SeldonIO/seldon-server,latest,/docker/examples/iris/xgboost_rpc/Dockerfile.in,CMD,1,"['[""/run_microservice.sh""]']"
SeldonIO/seldon-server,latest,/docker/examples/iris/vw/Dockerfile.in,FROM,1,['seldonio/pyseldon:%SELDON_PYTHON_PACKAGE_VERSION%']
SeldonIO/seldon-server,latest,/docker/examples/iris/vw/Dockerfile.in,ENV,1,['SELDON_HOME=/home/seldon']
SeldonIO/seldon-server,latest,/docker/examples/iris/vw/Dockerfile.in,COPY,3,"['vw_pipeline.py $SELDON_HOME/vw_pipeline.py', 'create-json.py $SELDON_HOME/create-json.py', 'run_microservice.sh /run_microservice.sh']"
SeldonIO/seldon-server,latest,/docker/examples/iris/vw/Dockerfile.in,RUN,3,"['mkdir -p $SELDON_HOME/data && cd $SELDON_HOME/data ; wget --quiet http://archive.ics.uci.edu/ml/machine-learning-databases/iris/iris.data', 'mkdir -p $SELDON_HOME/data/iris/events/1 && cat $SELDON_HOME/data/iris.data | python $SELDON_HOME/create-json.py | shuf > $SELDON_HOME/data/iris/events/1/iris.json', 'cd $SELDON_HOME && python $SELDON_HOME/vw_pipeline.py --events data/iris/events/1 --models /data/iris/vw_models/1']"
SeldonIO/seldon-server,latest,/docker/examples/iris/vw/Dockerfile.in,CMD,1,"['[""/run_microservice.sh""]']"
SeldonIO/seldon-server,latest,/docker/examples/iris/scikit/Dockerfile.in,FROM,1,['seldonio/pyseldon:%SELDON_PYTHON_PACKAGE_VERSION%']
SeldonIO/seldon-server,latest,/docker/examples/iris/scikit/Dockerfile.in,ENV,1,['SELDON_HOME=/home/seldon']
SeldonIO/seldon-server,latest,/docker/examples/iris/scikit/Dockerfile.in,COPY,3,"['scikit_pipeline.py $SELDON_HOME/scikit_pipeline.py', 'create-json.py $SELDON_HOME/create-json.py', 'run_microservice.sh /run_microservice.sh']"
SeldonIO/seldon-server,latest,/docker/examples/iris/scikit/Dockerfile.in,RUN,3,"['mkdir -p $SELDON_HOME/data && cd $SELDON_HOME/data ; wget --quiet http://archive.ics.uci.edu/ml/machine-learning-databases/iris/iris.data', 'mkdir -p $SELDON_HOME/data/iris/events/1 && cat $SELDON_HOME/data/iris.data | python $SELDON_HOME/create-json.py | shuf > $SELDON_HOME/data/iris/events/1/iris.json', 'cd $SELDON_HOME && python $SELDON_HOME/scikit_pipeline.py --events data/iris/events/1 --models /data/iris/scikit_models/1']"
SeldonIO/seldon-server,latest,/docker/examples/iris/scikit/Dockerfile.in,CMD,1,"['[""/run_microservice.sh""]']"
SeldonIO/seldon-server,latest,/docker/examples/reuters/microservice/Dockerfile.in,FROM,1,['seldonio/pyseldon:%SELDON_PYTHON_PACKAGE_VERSION%']
SeldonIO/seldon-server,latest,/docker/examples/reuters/microservice/Dockerfile.in,ENV,1,['SELDON_HOME /home/seldon']
SeldonIO/seldon-server,latest,/docker/examples/reuters/microservice/Dockerfile.in,RUN,3,"['mkdir -p  ""$SELDON_HOME""', 'git clone https://github.com/fergiemcdowall/reuters-21578-json', 'python build_model.py']"
SeldonIO/seldon-server,latest,/docker/examples/reuters/microservice/Dockerfile.in,WORKDIR,1,['$SELDON_HOME']
SeldonIO/seldon-server,latest,/docker/examples/reuters/microservice/Dockerfile.in,ADD,1,['build_model.py $SELDON_HOME/build_model.py']
SeldonIO/seldon-server,latest,/docker/examples/reuters/microservice/Dockerfile.in,CMD,1,"['[ ""python"",""/home/seldon/scripts/start_recommendation_microservice.py"",""--recommender"",""/home/seldon/reuters_recommender""]']"
SeldonIO/seldon-server,latest,/docker/examples/reuters/data/Dockerfile.in,FROM,1,['seldonio/seldon-control:%SELDON_CONTROL_IMAGE_VERSION%']
SeldonIO/seldon-server,latest,/docker/examples/reuters/data/Dockerfile.in,ENV,1,['REUTERS_HOME /home/seldon/reuters']
SeldonIO/seldon-server,latest,/docker/examples/reuters/data/Dockerfile.in,RUN,3,"['mkdir -p  ""$REUTERS_HOME""', 'git clone https://github.com/fergiemcdowall/reuters-21578-json', 'python create_csv.py']"
SeldonIO/seldon-server,latest,/docker/examples/reuters/data/Dockerfile.in,WORKDIR,1,['$REUTERS_HOME']
SeldonIO/seldon-server,latest,/docker/examples/reuters/data/Dockerfile.in,ADD,3,"['create_csv.py $REUTERS_HOME/create_csv.py', 'attr.json $REUTERS_HOME/attr.json', 'run_seldon_cli.sh /run_seldon_cli.sh']"
SeldonIO/seldon-server,latest,/docker/examples/reuters/data/Dockerfile.in,CMD,1,"['[""/run_seldon_cli.sh""]']"
SeldonIO/seldon-server,latest,/docker/examples/tensorflow_deep_mnist/Dockerfile.in,FROM,1,['seldonio/pyseldon:%SELDON_PYTHON_PACKAGE_VERSION%']
SeldonIO/seldon-server,latest,/docker/examples/tensorflow_deep_mnist/Dockerfile.in,ENV,1,['SELDON_HOME=/home/seldon']
SeldonIO/seldon-server,latest,/docker/examples/tensorflow_deep_mnist/Dockerfile.in,COPY,4,"['create_pipeline.py $SELDON_HOME/create_pipeline.py', 'train_model.sh $SELDON_HOME/train_model.sh', 'load_model.sh $SELDON_HOME/load_model.sh', 'run_microservice.sh /run_microservice.sh']"
SeldonIO/seldon-server,latest,/docker/examples/tensorflow_deep_mnist/Dockerfile.in,CMD,1,"['[""/run_microservice.sh""]']"
SeldonIO/seldon-server,latest,/docker/examples/finefoods/Dockerfile.in,FROM,1,['seldonio/pyseldon:%SELDON_PYTHON_PACKAGE_VERSION%']
SeldonIO/seldon-server,latest,/docker/examples/finefoods/Dockerfile.in,ENV,1,['SELDON_HOME=/home/seldon']
SeldonIO/seldon-server,latest,/docker/examples/finefoods/Dockerfile.in,COPY,1,['/scripts/* $SELDON_HOME/']
SeldonIO/seldon-server,latest,/docker/examples/finefoods/Dockerfile.in,CMD,1,"['[""bash""]']"
SeldonIO/seldon-server,latest,/docker/examples/ml100k/Dockerfile.in,FROM,1,['seldonio/seldon-control:%SELDON_CONTROL_IMAGE_VERSION%']
SeldonIO/seldon-server,latest,/docker/examples/ml100k/Dockerfile.in,RUN,1,['apt-get update &&     apt-get -y -q install unzip']
SeldonIO/seldon-server,latest,/docker/examples/ml100k/Dockerfile.in,ADD,2,"['attr.json /attr.json', 'create_ml100k_recommender.sh /create_ml100k_recommender.sh']"
SeldonIO/seldon-server,latest,/docker/examples/ml10m/Dockerfile.in,FROM,1,['seldonio/seldon-control:%SELDON_CONTROL_IMAGE_VERSION%']
SeldonIO/seldon-server,latest,/docker/examples/ml10m/Dockerfile.in,RUN,1,['apt-get update &&     apt-get -y -q install unzip']
SeldonIO/seldon-server,latest,/docker/examples/ml10m/Dockerfile.in,ADD,2,"['attr.json /attr.json', 'create_ml10m_recommender.sh /create_ml10m_recommender.sh']"
SeldonIO/seldon-server,latest,/docker/examples/US_stocks_fund/Dockerfile.in,FROM,1,['seldonio/pyseldon:%SELDON_PYTHON_PACKAGE_VERSION%']
SeldonIO/seldon-server,latest,/docker/examples/US_stocks_fund/Dockerfile.in,ENV,1,['SELDON_HOME=/home/seldon']
SeldonIO/seldon-server,latest,/docker/examples/US_stocks_fund/Dockerfile.in,COPY,4,"['data/indicators_nan_replaced.csv $SELDON_HOME/data/indicators_nan_replaced.csv', 'create_pipeline.py $SELDON_HOME/create_pipeline.py', 'train_model.sh $SELDON_HOME/train_model.sh', 'run_microservice.sh /run_microservice.sh']"
SeldonIO/seldon-server,latest,/docker/examples/US_stocks_fund/Dockerfile.in,CMD,1,"['[""/run_microservice.sh""]']"
SeldonIO/seldon-server,latest,/docker/mysql/Dockerfile,FROM,1,['mysql:5.6.29']
SeldonIO/seldon-server,latest,/docker/mysql/Dockerfile,ENV,2,"['HOME /root', 'DEBIAN_FRONTEND noninteractive']"
SeldonIO/seldon-server,latest,/docker/mysql/Dockerfile,RUN,1,['mkdir -p /seldon-data/mysql']
SeldonIO/seldon-server,latest,/docker/mysql/Dockerfile,VOLUME,1,['/seldon-data']
SeldonIO/seldon-server,latest,/docker/mysql/Dockerfile,ADD,1,['my.cnf /etc/mysql/conf.d/seldon.cnf']
SeldonIO/seldon-server,latest,/docker/seldon-stream/Dockerfile,FROM,1,['maven:3.3.3-jdk-8']
SeldonIO/seldon-server,latest,/docker/seldon-stream/Dockerfile,ENV,1,['SELDON_HOME /home/seldon']
SeldonIO/seldon-server,latest,/docker/seldon-stream/Dockerfile,RUN,2,"['mkdir -p  ""${SELDON_HOME}""', 'cd ${SELDON_HOME} &&     tar xfz seldon-server.tar.gz &&     cd seldon-server/stream &&     mvn clean package &&     mv -v ${SELDON_HOME}/seldon-server/stream/target/*.jar ${SELDON_HOME}/ &&     rm -rf ${SELDON_HOME}/seldon-server &&     rm -f ${SELDON_HOME}/seldon-server.tar.gz']"
SeldonIO/seldon-server,latest,/docker/seldon-stream/Dockerfile,WORKDIR,1,['${SELDON_HOME}']
SeldonIO/seldon-server,latest,/docker/seldon-stream/Dockerfile,COPY,1,['seldon-server.tar.gz ${SELDON_HOME}/']
SeldonIO/seldon-server,latest,/docker/seldon-stream/Dockerfile,CMD,1,"['[""bash""]']"
SeldonIO/seldon-server,latest,/docker/td-agent/Dockerfile,FROM,1,['ubuntu:trusty']
SeldonIO/seldon-server,latest,/docker/td-agent/Dockerfile,ENV,2,"['HOME /root', 'DEBIAN_FRONTEND noninteractive']"
SeldonIO/seldon-server,latest,/docker/td-agent/Dockerfile,RUN,1,"['(   apt-get update &&         apt-get install curl -y &&         curl http://packages.treasuredata.com/GPG-KEY-td-agent | apt-key add - &&         echo ""deb http://packages.treasuredata.com/2/ubuntu/trusty/ trusty contrib"" | tee /etc/apt/sources.list.d/treasure-data.list &&         apt-get update &&         apt-get install -y --force-yes td-agent &&         apt-get install -y make gcc patch &&         td-agent-gem install fluent-plugin-kafka --no-document &&         apt-get remove -y --auto-remove curl make gcc patch ruby-dev &&         apt-get clean -y && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*)']"
SeldonIO/seldon-server,latest,/docker/td-agent/Dockerfile,EXPOSE,1,['8888']
SeldonIO/seldon-server,latest,/docker/td-agent/Dockerfile,CMD,1,"['[""td-agent""]']"
SeldonIO/seldon-server,latest,/docker/stream-itemsim/Dockerfile,FROM,1,['ubuntu:14.04']
SeldonIO/seldon-server,latest,/docker/stream-itemsim/Dockerfile,RUN,5,"['apt-get update &&     apt-get -y -q install netcat dnsutils emacs vim mysql-client libmysqlclient-dev mysql-common software-properties-common python python-dev python-pip', 'add-apt-repository ppa:openjdk-r/ppa &&   apt-get update &&   apt-get install -y openjdk-8-jdk &&   rm -rf /var/lib/apt/lists/*', 'pip install kafka-python MySQL-python', 'mkdir -p  ""$SELDON_HOME""', 'ln -s $SELDON_HOME/libs/seldon-stream-${SELDON_STREAM_VERSION}-jar-with-dependencies.jar $SELDON_HOME/libs/seldon-stream.jar']"
SeldonIO/seldon-server,latest,/docker/stream-itemsim/Dockerfile,ENV,2,"['JAVA_HOME /usr/lib/jvm/java-8-openjdk-amd64', 'SELDON_HOME /home/seldon']"
SeldonIO/seldon-server,latest,/docker/stream-itemsim/Dockerfile,WORKDIR,1,['$SELDON_HOME']
SeldonIO/seldon-server,latest,/docker/stream-itemsim/Dockerfile,ARG,1,['SELDON_STREAM_VERSION']
SeldonIO/seldon-server,latest,/docker/stream-itemsim/Dockerfile,COPY,2,"['./seldon-stream-${SELDON_STREAM_VERSION}-jar-with-dependencies.jar $SELDON_HOME/libs/', 'scripts/itemsim-kafka-to-mysql.py $SELDON_HOME/python/']"
SeldonIO/seldon-server,latest,/vm/build/docker-images/java7jre/Dockerfile,FROM,1,['ubuntu:trusty']
SeldonIO/seldon-server,latest,/vm/build/docker-images/java7jre/Dockerfile,ENV,3,"['HOME /root', 'DEBIAN_FRONTEND noninteractive', 'JAVA_HOME /usr/lib/jvm/java-7-openjdk-amd64']"
SeldonIO/seldon-server,latest,/vm/build/docker-images/java7jre/Dockerfile,RUN,1,['(   apt-get update &&         apt-get install -y openjdk-7-jre-headless &&         apt-get clean -y && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*)']
SeldonIO/seldon-server,latest,/vm/build/docker-images/java7jre/Dockerfile,CMD,1,"['[""bash""]']"
SeldonIO/seldon-server,latest,/vm/build/docker-images/zookeeper/Dockerfile,FROM,1,['seldonio/java7jre:0.1']
SeldonIO/seldon-server,latest,/vm/build/docker-images/zookeeper/Dockerfile,ENV,2,"['HOME /root', 'DEBIAN_FRONTEND noninteractive']"
SeldonIO/seldon-server,latest,/vm/build/docker-images/zookeeper/Dockerfile,RUN,1,['(   apt-get update &&         apt-get install -y wget python-pip &&         wget -q -O - http://apache.mirrors.pair.com/zookeeper/zookeeper-3.4.6/zookeeper-3.4.6.tar.gz | tar -xzf - -C /opt &&         mv /opt/zookeeper-3.4.6 /opt/zookeeper &&         cp /opt/zookeeper/conf/zoo_sample.cfg /opt/zookeeper/conf/zoo.cfg &&         mkdir -p /tmp/zookeeper && \tpip install kazoo &&         apt-get remove -y --auto-remove wget &&         apt-get clean -y && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*)']
SeldonIO/seldon-server,latest,/vm/build/docker-images/zookeeper/Dockerfile,EXPOSE,1,['2181 2888 3888']
SeldonIO/seldon-server,latest,/vm/build/docker-images/zookeeper/Dockerfile,WORKDIR,1,['/opt/zookeeper']
SeldonIO/seldon-server,latest,/vm/build/docker-images/zookeeper/Dockerfile,VOLUME,1,"['[""/opt/zookeeper/conf"", ""/tmp/zookeeper""]']"
SeldonIO/seldon-server,latest,/vm/build/docker-images/zookeeper/Dockerfile,ENTRYPOINT,1,"['[""/opt/zookeeper/bin/zkServer.sh""]']"
SeldonIO/seldon-server,latest,/vm/build/docker-images/zookeeper/Dockerfile,CMD,1,"['[""start-foreground""]']"
SeldonIO/seldon-server,latest,/vm/build/docker-images/memcached/Dockerfile,FROM,1,['ubuntu:trusty']
SeldonIO/seldon-server,latest,/vm/build/docker-images/memcached/Dockerfile,ENV,2,"['HOME /root', 'DEBIAN_FRONTEND noninteractive']"
SeldonIO/seldon-server,latest,/vm/build/docker-images/memcached/Dockerfile,RUN,1,['apt-get update &&     apt-get install -y memcached']
SeldonIO/seldon-server,latest,/vm/build/docker-images/memcached/Dockerfile,EXPOSE,1,['11211']
SeldonIO/seldon-server,latest,/vm/build/docker-images/memcached/Dockerfile,CMD,1,"['[""-m"", ""128""]']"
SeldonIO/seldon-server,latest,/vm/build/docker-images/memcached/Dockerfile,USER,1,['daemon']
SeldonIO/seldon-server,latest,/vm/build/docker-images/memcached/Dockerfile,ENTRYPOINT,1,['memcached']
SeldonIO/seldon-server,latest,/vm/build/docker-images/busybox/Dockerfile,FROM,1,['busybox']
SeldonIO/seldon-server,latest,/vm/build/docker-images/td_agent/Dockerfile,FROM,1,['ubuntu:trusty']
SeldonIO/seldon-server,latest,/vm/build/docker-images/td_agent/Dockerfile,ENV,2,"['HOME /root', 'DEBIAN_FRONTEND noninteractive']"
SeldonIO/seldon-server,latest,/vm/build/docker-images/td_agent/Dockerfile,RUN,1,"['(   apt-get update &&         apt-get install curl -y &&         curl http://packages.treasuredata.com/GPG-KEY-td-agent | apt-key add - &&         echo ""deb http://packages.treasuredata.com/2/ubuntu/trusty/ trusty contrib"" | tee /etc/apt/sources.list.d/treasure-data.list &&         apt-get update &&         apt-get install -y --force-yes td-agent &&         apt-get install -y make gcc patch &&         td-agent-gem install fluent-plugin-kafka --no-document &&         apt-get remove -y --auto-remove curl make gcc patch ruby-dev &&         apt-get clean -y && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*)']"
SeldonIO/seldon-server,latest,/vm/build/docker-images/td_agent/Dockerfile,ADD,1,['td-agent.conf /etc/td-agent/td-agent.conf']
SeldonIO/seldon-server,latest,/vm/build/docker-images/td_agent/Dockerfile,EXPOSE,1,['8888']
SeldonIO/seldon-server,latest,/vm/build/docker-images/td_agent/Dockerfile,CMD,1,"['[""td-agent""]']"
SeldonIO/seldon-server,latest,/vm/build/docker-images/mysql/Dockerfile,FROM,1,['mysql:5.6.21']
SeldonIO/seldon-server,latest,/vm/build/docker-images/mysql/Dockerfile,ENV,2,"['HOME /root', 'DEBIAN_FRONTEND noninteractive']"
SeldonIO/seldon-server,latest,/vm/build/docker-images/mysql/Dockerfile,RUN,2,"['mkdir -p /etc/mysql', 'usermod -u 1000 mysql']"
SeldonIO/seldon-server,latest,/vm/build/docker-images/mysql/Dockerfile,ADD,1,['my.cnf /etc/mysql/my.cnf']
SeldonIO/seldon-server,latest,/offline-jobs/sv/docker/Dockerfile,FROM,1,['ubuntu:trusty']
SeldonIO/seldon-server,latest,/offline-jobs/sv/docker/Dockerfile,ENV,3,"['HOME /root', 'DEBIAN_FRONTEND noninteractive', 'JAVA_HOME /usr/lib/jvm/java-7-openjdk-amd64']"
SeldonIO/seldon-server,latest,/offline-jobs/sv/docker/Dockerfile,RUN,2,"['( apt-get update &&     apt-get install -y python-pip openjdk-7-jre-headless )', 'pip install awscli kazoo boto FileChunkIO']"
SeldonIO/seldon-server,latest,/offline-jobs/sv/docker/Dockerfile,ADD,1,['./scripts /semvec']
SeldonIO/seldon-server,latest,/offline-jobs/sv/docker/Dockerfile,CMD,1,"['[""bash""]']"
SeldonIO/seldon-server,latest,/offline-jobs/vw/docker/Dockerfile,FROM,1,['ubuntu:trusty']
SeldonIO/seldon-server,latest,/offline-jobs/vw/docker/Dockerfile,ENV,4,"['HOME /root', 'DEBIAN_FRONTEND noninteractive', 'LD_LIBRARY_PATH $LD_LIBRARY_PATH:/usr/local/lib', 'PYTHONPATH $PYTHONPATH:/seldon-server/external/predictor/python']"
SeldonIO/seldon-server,latest,/offline-jobs/vw/docker/Dockerfile,RUN,8,"['apt-get update &&   apt-get install -y python python-pip python-dev curl jq python-boto wget libboost-all-dev libxml2-dev libxslt-dev gfortran mysql-server libmysqlclient-dev', 'DEBIAN_FRONTEND=noninteractive apt-get -y -q install build-essential automake autoconf libxmu-dev gcc libpthread-stubs0-dev libtool libboost-program-options-dev libboost-python-dev zlib1g-dev libc6 libgcc1 libstdc++6 libblas-dev liblapack-dev git', 'pip install nltk unidecode numpy pandas scipy patsy gensim docx pyth pymongo mysql-python zk_shell awscli', 'wget -q -O rosetta-0.2.5.tar.gz https://github.com/columbia-applied-data-science/rosetta/archive/0.2.5.tar.gz &&     pip install rosetta-0.2.5.tar.gz', 'cd /usr/local/src;git clone https://github.com/JohnLangford/vowpal_wabbit.git;cd vowpal_wabbit;git checkout 7.10;./autogen.sh;./configure;make;make test;make install', 'cd /usr/local/src;wget http://osmot.cs.cornell.edu/kddcup/perf/perf.src.tar.gz;tar xvf perf.src.tar.gz;rm perf.src.tar.gz;mv perf.src perf;cd perf;make -B perf;make install', 'pip install wabbit_wappa filechunkio', 'git clone https://github.com/seldonio/seldon-server /seldon-server']"
SeldonIO/seldon-server,latest,/offline-jobs/vw/docker/Dockerfile,ADD,1,['./scripts /scripts']
SeldonIO/seldon-server,latest,/offline-jobs/vw/docker/Dockerfile,CMD,1,"['[""bash""]']"
SeldonIO/seldon-server,latest,/build/components/seldon_python_package/docker/Dockerfile,FROM,1,['continuumio/anaconda:4.1.1']
SeldonIO/seldon-server,latest,/build/components/seldon_python_package/docker/Dockerfile,RUN,6,"['apt-get update &&     apt-get -y -q install build-essential memcached libmemcached-dev mysql-client-5.5 mysql-common libmysqlclient-dev unzip', 'pip install python-daemon', 'pip install kazoo filechunkio Flask gunicorn pylibmc gensim annoy smart_open', 'pip install cmd2 MySQL-python', 'mkdir -p /tmp/protoc &&     curl -L https://github.com/google/protobuf/releases/download/v3.0.0/protoc-3.0.0-linux-x86_64.zip > /tmp/protoc/protoc.zip &&     cd /tmp/protoc &&     unzip protoc.zip &&     cp /tmp/protoc/bin/protoc /usr/local/bin &&     chmod go+rx /usr/local/bin/protoc &&     cd /tmp &&     rm -r /tmp/protoc', 'pip install grpcio==${GRPC_PYTHON_VERSION} grpcio-tools==${GRPC_PYTHON_VERSION}']"
SeldonIO/seldon-server,latest,/build/components/seldon_python_package/docker/Dockerfile,ENV,1,['GRPC_PYTHON_VERSION 1.0.0']
ml-tooling/ml-workspace,latest,/Dockerfile,FROM,1,['ubuntu:20.04']
ml-tooling/ml-workspace,latest,/Dockerfile,USER,1,['root']
ml-tooling/ml-workspace,latest,/Dockerfile,ENV,15,"['SHELL=""/bin/bash""     HOME=""/root""      NB_USER=""root""     USER_GID=0     XDG_CACHE_HOME=""/root/.cache/""     XDG_RUNTIME_DIR=""/tmp""     DISPLAY="":1""     TERM=""xterm""     DEBIAN_FRONTEND=""noninteractive""     RESOURCES_PATH=""/resources""     SSL_RESOURCES_PATH=""/resources/ssl""     WORKSPACE_HOME=""/workspace""', 'LC_ALL=""en_US.UTF-8""     LANG=""en_US.UTF-8""     LANGUAGE=""en_US:en""', 'PATH=/usr/local/openresty/nginx/sbin:$PATH', 'CONDA_DIR=/opt/conda     CONDA_ROOT=/opt/conda     PYTHON_VERSION=""3.8.10""     CONDA_PYTHON_DIR=/opt/conda/lib/python3.8     MINICONDA_VERSION=4.9.2     MINICONDA_MD5=122c8c9beb51e124ab32a0fa6426c656     CONDA_VERSION=4.9.2', 'PATH=$CONDA_ROOT/bin:$PATH', 'LD_LIBRARY_PATH=$CONDA_ROOT/lib', 'PATH=$RESOURCES_PATH/.pyenv/shims:$RESOURCES_PATH/.pyenv/bin:$PATH     PYENV_ROOT=$RESOURCES_PATH/.pyenv', 'PATH=$HOME/.local/bin:$PATH', 'PATH=/opt/node/bin:$PATH', 'LD_LIBRARY_PATH=/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:$CONDA_ROOT/lib', 'WORKSPACE_FLAVOR=$ARG_WORKSPACE_FLAVOR', 'VNC_PW=vncpassword     VNC_RESOLUTION=1600x900     VNC_COL_DEPTH=24', 'KMP_DUPLICATE_LIB_OK=""True""     KMP_AFFINITY=""granularity=fine,compact,1,0""     KMP_BLOCKTIME=0     MKL_THREADING_LAYER=GNU     ENABLE_IPC=1     PYTHON_PRETTY_ERRORS_ISATTY_ONLY=1     HDF5_USE_FILE_LOCKING=False', 'CONFIG_BACKUP_ENABLED=""true""     SHUTDOWN_INACTIVE_KERNELS=""false""     SHARED_LINKS_ENABLED=""true""     AUTHENTICATE_VIA_JUPYTER=""false""     DATA_ENVIRONMENT=$WORKSPACE_HOME""/environment""     WORKSPACE_BASE_URL=""/""     INCLUDE_TUTORIALS=""true""     WORKSPACE_PORT=""8080""     SHELL=""/usr/bin/zsh""     MAX_NUM_THREADS=""auto""', 'WORKSPACE_VERSION=$ARG_WORKSPACE_VERSION']"
ml-tooling/ml-workspace,latest,/Dockerfile,WORKDIR,1,['$HOME']
ml-tooling/ml-workspace,latest,/Dockerfile,RUN,35,"['mkdir $RESOURCES_PATH && chmod a+rwx $RESOURCES_PATH &&     mkdir $WORKSPACE_HOME && chmod a+rwx $WORKSPACE_HOME &&     mkdir $SSL_RESOURCES_PATH && chmod a+rwx $SSL_RESOURCES_PATH', 'chmod a+rwx /usr/bin/clean-layer.sh &&     chmod a+rwx /usr/bin/fix-permissions.sh', ""apt-get update &&     apt-get install -y locales &&     sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen &&     locale-gen &&     dpkg-reconfigure --frontend=noninteractive locales &&     update-locale LANG=en_US.UTF-8 &&     clean-layer.sh"", 'apt-get update --fix-missing &&     apt-get install -y sudo apt-utils &&     apt-get upgrade -y &&     apt-get update &&     apt-get install -y --no-install-recommends         apt-transport-https         gnupg-agent         gpg-agent         gnupg2         ca-certificates         build-essential         pkg-config         software-properties-common         lsof         net-tools         libcurl4         curl         wget         cron         openssl         iproute2         psmisc         tmux         dpkg-sig         uuid-dev         csh         xclip         clinfo         time         libssl-dev         libgdbm-dev         libncurses5-dev         libncursesw5-dev         libreadline-dev         libedit-dev         xz-utils         gawk         swig         graphviz libgraphviz-dev         screen         nano         locate         sqlite3         xmlstarlet         parallel         libspatialindex-dev         yara         libhiredis-dev         libpq-dev         libmysqlclient-dev         libleptonica-dev         libgeos-dev         less         tree         bash-completion         iputils-ping         socat         jq         rsync         libsqlite3-dev         git         subversion         jed         unixodbc unixodbc-dev         libtiff-dev         libjpeg-dev         libpng-dev         libglib2.0-0         libxext6         libsm6         libxext-dev         libxrender1         libzmq3-dev         protobuf-compiler         libprotobuf-dev         libprotoc-dev         autoconf         automake         libtool         cmake          fonts-liberation         google-perftools         zip         gzip         unzip         bzip2         lzop         libarchive-tools         zlibc         unp         libbz2-dev         liblzma-dev         zlib1g-dev &&     add-apt-repository -y ppa:git-core/ppa  &&     apt-get update &&     apt-get install -y --no-install-recommends git &&     chmod -R a+rwx /usr/local/bin/ &&     ldconfig &&     fix-permissions.sh $HOME &&     clean-layer.sh', 'wget --no-verbose https://github.com/krallin/tini/releases/download/v0.19.0/tini -O /tini &&     chmod +x /tini', 'apt-get update &&     apt-get install -y --no-install-recommends         openssh-client         openssh-server         sslh         autossh         mussh &&     chmod go-w $HOME &&     mkdir -p $HOME/.ssh/ &&     touch $HOME/.ssh/config  &&     sudo chown -R $NB_USER:users $HOME/.ssh &&     chmod 700 $HOME/.ssh &&     printenv >> $HOME/.ssh/environment &&     chmod -R a+rwx /usr/local/bin/ &&     fix-permissions.sh $HOME &&     clean-layer.sh', 'OPEN_RESTY_VERSION=""1.19.3.2"" &&     mkdir $RESOURCES_PATH""/openresty"" &&     cd $RESOURCES_PATH""/openresty"" &&     apt-get update &&     apt-get purge -y nginx nginx-common &&     apt-get install -y libssl-dev libpcre3 libpcre3-dev apache2-utils &&     wget --no-verbose https://openresty.org/download/openresty-$OPEN_RESTY_VERSION.tar.gz  -O ./openresty.tar.gz &&     tar xfz ./openresty.tar.gz &&     rm ./openresty.tar.gz &&     cd ./openresty-$OPEN_RESTY_VERSION/ &&     ./configure --with-http_stub_status_module --with-http_sub_module > /dev/null &&     make -j2 > /dev/null &&     make install > /dev/null &&     mkdir -p /var/log/nginx/ &&     touch /var/log/nginx/upstream.log &&     cd $RESOURCES_PATH &&     rm -r $RESOURCES_PATH""/openresty"" &&     chmod -R a+rwx $RESOURCES_PATH &&     clean-layer.sh', 'wget --no-verbose https://repo.anaconda.com/miniconda/Miniconda3-py38_${CONDA_VERSION}-Linux-x86_64.sh -O ~/miniconda.sh &&     echo ""${MINICONDA_MD5} *miniconda.sh"" | md5sum -c - &&     /bin/bash ~/miniconda.sh -b -p $CONDA_ROOT &&     export PATH=$CONDA_ROOT/bin:$PATH &&     rm ~/miniconda.sh &&     $CONDA_ROOT/bin/conda config --system --add channels conda-forge &&     $CONDA_ROOT/bin/conda config --system --set auto_update_conda False &&     $CONDA_ROOT/bin/conda config --system --set show_channel_urls True &&     $CONDA_ROOT/bin/conda config --system --set channel_priority strict &&     $CONDA_ROOT/bin/conda config --system --set pip_interop_enabled false &&     $CONDA_ROOT/bin/conda update -y -n base -c defaults conda &&     $CONDA_ROOT/bin/conda update -y setuptools &&     $CONDA_ROOT/bin/conda install -y conda-build &&     $CONDA_ROOT/bin/conda install -y --update-all python=$PYTHON_VERSION &&     ln -s $CONDA_ROOT/bin/python /usr/local/bin/python &&     ln -s $CONDA_ROOT/bin/conda /usr/bin/conda &&     $CONDA_ROOT/bin/conda install -y pip &&     $CONDA_ROOT/bin/pip install --upgrade pip &&     chmod -R a+rwx /usr/local/bin/ &&     $CONDA_ROOT/bin/conda clean -y --packages &&     $CONDA_ROOT/bin/conda clean -y -a -f  &&     $CONDA_ROOT/bin/conda build purge-all &&     fix-permissions.sh $CONDA_ROOT &&     clean-layer.sh', 'git clone https://github.com/pyenv/pyenv.git $RESOURCES_PATH/.pyenv &&     git clone https://github.com/pyenv/pyenv-virtualenv.git $RESOURCES_PATH/.pyenv/plugins/pyenv-virtualenv  &&     git clone git://github.com/pyenv/pyenv-doctor.git $RESOURCES_PATH/.pyenv/plugins/pyenv-doctor &&     git clone https://github.com/pyenv/pyenv-update.git $RESOURCES_PATH/.pyenv/plugins/pyenv-update &&     git clone https://github.com/pyenv/pyenv-which-ext.git $RESOURCES_PATH/.pyenv/plugins/pyenv-which-ext &&     apt-get update &&     apt-get install -y --no-install-recommends libffi-dev &&     clean-layer.sh', 'pip install pipx &&     python -m pipx ensurepath &&     clean-layer.sh', 'apt-get update &&     curl -sL https://deb.nodesource.com/setup_14.x | sudo -E bash - &&     apt-get install -y nodejs &&     rm -f /opt/conda/bin/node && ln -s /usr/bin/node /opt/conda/bin/node &&     rm -f /opt/conda/bin/npm && ln -s /usr/bin/npm /opt/conda/bin/npm &&     chmod a+rwx /usr/bin/node &&     chmod a+rwx /usr/bin/npm &&     mkdir -p /opt/node/bin &&     ln -s /usr/bin/node /opt/node/bin/node &&     ln -s /usr/bin/npm /opt/node/bin/npm &&     /usr/bin/npm install -g npm &&     /usr/bin/npm install -g yarn &&     /usr/bin/npm install -g typescript &&     /usr/bin/npm install -g webpack &&     /usr/bin/npm install -g node-gyp &&     /usr/bin/npm update -g &&     clean-layer.sh', 'apt-get update &&     mkdir -p /var/run/sshd && chmod 400 /var/run/sshd &&     apt-get install -y --no-install-recommends rsyslog &&     pipx install supervisor &&     pipx inject supervisor supervisor-stdout &&     mkdir -p /var/log/supervisor/ &&     clean-layer.sh', 'add-apt-repository -y ppa:xubuntu-dev/staging &&     apt-get update &&     apt-get install -y --no-install-recommends xfce4 &&     apt-get install -y --no-install-recommends gconf2 &&     apt-get install -y --no-install-recommends xfce4-terminal &&     apt-get install -y --no-install-recommends xfce4-clipman &&     apt-get install -y --no-install-recommends xterm &&     apt-get install -y --no-install-recommends --allow-unauthenticated xfce4-taskmanager  &&     apt-get install -y --no-install-recommends xauth xinit dbus-x11 &&     apt-get install -y --no-install-recommends gdebi &&     apt-get install -y --no-install-recommends catfish &&     apt-get install -y --no-install-recommends font-manager &&     apt-get install -y thunar-vcs-plugin &&     apt-get install -y --no-install-recommends libqt5concurrent5 libqt5widgets5 libqt5xml5 &&     wget --no-verbose https://github.com/variar/klogg/releases/download/v20.12/klogg-20.12.0.813-Linux.deb -O $RESOURCES_PATH/klogg.deb &&     dpkg -i $RESOURCES_PATH/klogg.deb &&     rm $RESOURCES_PATH/klogg.deb &&     apt-get install -y --no-install-recommends baobab &&     apt-get install -y --no-install-recommends mousepad &&     apt-get install -y --no-install-recommends vim &&     apt-get install -y --no-install-recommends htop &&     apt-get install -y p7zip p7zip-rar &&     apt-get install -y --no-install-recommends thunar-archive-plugin &&     apt-get install -y xarchiver &&     apt-get install -y --no-install-recommends sqlitebrowser &&     apt-get install -y --no-install-recommends nautilus gvfs-backends &&     apt-get install -y --no-install-recommends gigolo gvfs-bin &&     apt-get install -y --no-install-recommends gftp &&     add-apt-repository ppa:saiarcot895/chromium-beta &&     apt-get update &&     apt-get install -y chromium-browser chromium-browser-l10n chromium-codecs-ffmpeg &&     ln -s /usr/bin/chromium-browser /usr/bin/google-chrome &&     apt-get purge -y pm-utils xscreensaver* &&     apt-get remove -y app-install-data gnome-user-guide &&     clean-layer.sh', 'apt-get update  &&     cd ${RESOURCES_PATH} &&     wget -qO- https://sourceforge.net/projects/tigervnc/files/stable/1.11.0/tigervnc-1.11.0.x86_64.tar.gz/download | tar xz --strip 1 -C / &&     mkdir -p ./novnc/utils/websockify &&     wget -qO- https://github.com/novnc/noVNC/archive/v1.2.0.tar.gz | tar xz --strip 1 -C ./novnc &&     wget -qO- https://github.com/novnc/websockify/archive/v0.9.0.tar.gz | tar xz --strip 1 -C ./novnc/utils/websockify &&     chmod +x -v ./novnc/utils/*.sh &&     mkdir -p $HOME/.vnc &&     fix-permissions.sh ${RESOURCES_PATH} &&     clean-layer.sh', '/bin/bash $RESOURCES_PATH/tools/vs-code-server.sh --install &&     clean-layer.sh', '/bin/bash $RESOURCES_PATH/tools/ungit.sh --install &&     clean-layer.sh', '/bin/bash $RESOURCES_PATH/tools/netdata.sh --install &&     clean-layer.sh', '/bin/bash $RESOURCES_PATH/tools/filebrowser.sh --install &&     clean-layer.sh', 'if [ ""$WORKSPACE_FLAVOR"" = ""minimal"" ]; then         exit 0 ;     fi &&     /bin/bash $RESOURCES_PATH/tools/vs-code-desktop.sh --install &&     clean-layer.sh', 'if [ ""$WORKSPACE_FLAVOR"" = ""minimal"" ]; then         exit 0 ;     fi &&     /bin/bash $RESOURCES_PATH/tools/firefox.sh --install &&     clean-layer.sh', 'ln -s -f $CONDA_ROOT/bin/python /usr/bin/python &&     apt-get update &&     pip install --upgrade pip &&     if [ ""$WORKSPACE_FLAVOR"" = ""minimal"" ]; then         conda install -y --update-all \'python=\'$PYTHON_VERSION nomkl ;     else         conda install -y --update-all \'python=\'$PYTHON_VERSION mkl-service mkl ;     fi &&     conda install -y --update-all             \'python=\'$PYTHON_VERSION             \'ipython=7.24.*\'             \'notebook=6.4.*\'             \'jupyterlab=3.0.*\'             \'nbconvert=5.6.*\'             \'yarl==1.5.*\'             \'scipy==1.7.*\'             \'numpy==1.19.*\'             scikit-learn             numexpr &&     conda config --system --set channel_priority false &&     pip install --no-cache-dir --upgrade --upgrade-strategy only-if-needed -r ${RESOURCES_PATH}/libraries/requirements-minimal.txt &&     if [ ""$WORKSPACE_FLAVOR"" = ""minimal"" ]; then         fix-permissions.sh $CONDA_ROOT &&         clean-layer.sh &&         exit 0 ;     fi &&     apt-get install -y --no-install-recommends libopenmpi-dev openmpi-bin &&     conda install -y --freeze-installed          \'python=\'$PYTHON_VERSION         boost         mkl-include &&     conda install -y --freeze-installed -c mingfeima mkldnn &&     conda install -y -c pytorch ""pytorch==1.9.*"" cpuonly &&     pip install --no-cache-dir --upgrade --upgrade-strategy only-if-needed -r ${RESOURCES_PATH}/libraries/requirements-light.txt &&     if [ ""$WORKSPACE_FLAVOR"" = ""light"" ]; then         fix-permissions.sh $CONDA_ROOT &&         clean-layer.sh &&         exit 0 ;     fi &&     apt-get install -y --no-install-recommends liblapack-dev libatlas-base-dev libeigen3-dev libblas-dev &&     apt-get install -y --no-install-recommends libhdf5-dev &&     apt-get install -y --no-install-recommends libtbb-dev &&     apt-get install -y --no-install-recommends libtesseract-dev &&     pip install --no-cache-dir tesserocr &&     apt-get install -y --no-install-recommends libopenexr-dev &&     apt-get install -y --no-install-recommends libgomp1 &&     conda install -y --freeze-installed libjpeg-turbo &&     conda install -y -c bioconda -c conda-forge snakemake-minimal &&     conda install -y -c conda-forge mamba &&     conda install -y --freeze-installed faiss-cpu &&     pip install --no-cache-dir --upgrade --upgrade-strategy only-if-needed --use-deprecated=legacy-resolver -r ${RESOURCES_PATH}/libraries/requirements-full.txt &&     python -m spacy download en &&     fix-permissions.sh $CONDA_ROOT &&     clean-layer.sh', 'rm -f /opt/conda/bin/node && ln -s /usr/bin/node /opt/conda/bin/node &&     rm -f /opt/conda/bin/npm && ln -s /usr/bin/npm /opt/conda/bin/npm', 'mkdir -p $HOME/.jupyter/nbconfig/ &&     printf ""{\\""load_extensions\\"": {}}"" > $HOME/.jupyter/nbconfig/notebook.json &&     jupyter contrib nbextension install --sys-prefix &&     jupyter nbextensions_configurator enable --sys-prefix &&     nbdime config-git --enable --global &&     jupyter nbextension enable --py jupytext --sys-prefix &&     jupyter nbextension enable skip-traceback/main --sys-prefix &&     jupyter nbextension enable toc2/main --sys-prefix &&     jupyter nbextension enable execute_time/ExecuteTime --sys-prefix &&     jupyter nbextension enable collapsible_headings/main --sys-prefix &&     jupyter nbextension enable codefolding/main --sys-prefix &&     jupyter nbextension disable pydeck/extension &&     pip install --no-cache-dir git+https://github.com/InfuseAI/jupyter_tensorboard.git &&     jupyter tensorboard enable --sys-prefix &&     cat $HOME/.jupyter/nbconfig/notebook.json | jq \'.toc2={""moveMenuLeft"": false,""widenNotebook"": false,""skip_h1_title"": false,""sideBar"": true,""number_sections"": false,""collapse_to_match_collapsible_headings"": true}\' > tmp.$$.json && mv tmp.$$.json $HOME/.jupyter/nbconfig/notebook.json &&     if [ ""$WORKSPACE_FLAVOR"" = ""minimal"" ]; then         clean-layer.sh &&         exit 0 ;     fi &&     jupyter nbextension install https://github.com/drillan/jupyter-black/archive/master.zip --sys-prefix &&     jupyter nbextension enable jupyter-black-master/jupyter-black --sys-prefix &&     if [ ""$WORKSPACE_FLAVOR"" = ""light"" ]; then         clean-layer.sh &&         exit 0 ;     fi &&     pip install witwidget &&     jupyter nbextension install --py --symlink --sys-prefix witwidget &&     jupyter nbextension enable --py --sys-prefix witwidget &&     jupyter nbextension enable --py --sys-prefix qgrid &&     ipcluster nbextension enable &&     clean-layer.sh', 'npm install -g es6-promise &&     jupyter lab build &&     lab_ext_install=\'jupyter labextension install -y --debug-log-path=/dev/stdout --log-level=WARN --minimize=False --no-build\' &&     $lab_ext_install @jupyter-widgets/jupyterlab-manager &&     if [ ""$WORKSPACE_FLAVOR"" = ""minimal"" ]; then         jupyter lab build -y --debug-log-path=/dev/stdout --log-level=WARN &&         jupyter lab clean &&         jlpm cache clean &&         rm -rf $CONDA_ROOT/share/jupyter/lab/staging &&         clean-layer.sh &&         exit 0 ;     fi &&     $lab_ext_install @jupyterlab/toc &&     pip install git+https://github.com/chaoleili/jupyterlab_tensorboard.git &&     pip install jupyterlab-git &&     if [ ""$WORKSPACE_FLAVOR"" = ""light"" ]; then         jupyter lab build -y --debug-log-path=/dev/stdout --log-level=WARN &&         jupyter lab clean &&         jlpm cache clean &&         rm -rf $CONDA_ROOT/share/jupyter/lab/staging &&         clean-layer.sh &&         exit 0 ;     fi     && pip install jupyterlab-lsp==3.7.0 jupyter-lsp==1.3.0 &&     $lab_ext_install jupyterlab-plotly &&     $lab_ext_install install @jupyter-widgets/jupyterlab-manager plotlywidget &&     $lab_ext_install jupyterlab-chart-editor &&     pip install lckr-jupyterlab-variableinspector &&     $lab_ext_install @ryantam626/jupyterlab_code_formatter &&     pip install jupyterlab_code_formatter &&     jupyter serverextension enable --py jupyterlab_code_formatter     && jupyter lab build -y --debug-log-path=/dev/stdout --log-level=WARN &&     jupyter lab build &&     jupyter lab clean &&     jlpm cache clean &&     rm -rf $CONDA_ROOT/share/jupyter/lab/staging &&     clean-layer.sh', 'pip install --no-cache-dir $RESOURCES_PATH/jupyter-extensions/tooling-extension/ &&     clean-layer.sh', '/bin/bash $RESOURCES_PATH/tools/oh-my-zsh.sh --install &&     conda init zsh &&     chsh -s $(which zsh) $NB_USER &&     curl -s https://get.sdkman.io | bash &&     clean-layer.sh', '/bin/bash $RESOURCES_PATH/tools/git-lfs.sh --install &&     clean-layer.sh', 'SLEEP_TIMER=25 &&     if [ ""$WORKSPACE_FLAVOR"" = ""minimal"" ]; then         exit 0 ;     fi &&     cd $RESOURCES_PATH &&     mkdir -p $HOME/.vscode/extensions/ &&     VS_JUPYTER_VERSION=""2021.6.832593372"" &&     wget --retry-on-http-error=429 --waitretry 15 --tries 5 --no-verbose https://marketplace.visualstudio.com/_apis/public/gallery/publishers/ms-toolsai/vsextensions/jupyter/$VS_JUPYTER_VERSION/vspackage -O ms-toolsai.jupyter-$VS_JUPYTER_VERSION.vsix &&     bsdtar -xf ms-toolsai.jupyter-$VS_JUPYTER_VERSION.vsix extension &&     rm ms-toolsai.jupyter-$VS_JUPYTER_VERSION.vsix &&     mv extension $HOME/.vscode/extensions/ms-toolsai.jupyter-$VS_JUPYTER_VERSION &&     sleep $SLEEP_TIMER &&     VS_PYTHON_VERSION=""2021.5.926500501"" &&     wget --no-verbose https://github.com/microsoft/vscode-python/releases/download/$VS_PYTHON_VERSION/ms-python-release.vsix &&     bsdtar -xf ms-python-release.vsix extension &&     rm ms-python-release.vsix &&     mv extension $HOME/.vscode/extensions/ms-python.python-$VS_PYTHON_VERSION &&     sleep $SLEEP_TIMER &&     if [ ""$WORKSPACE_FLAVOR"" = ""light"" ]; then         exit 0 ;     fi &&     PRETTIER_VERSION=""6.4.0"" &&     wget --no-verbose https://github.com/prettier/prettier-vscode/releases/download/v$PRETTIER_VERSION/prettier-vscode-$PRETTIER_VERSION.vsix &&     bsdtar -xf prettier-vscode-$PRETTIER_VERSION.vsix extension &&     rm prettier-vscode-$PRETTIER_VERSION.vsix &&     mv extension $HOME/.vscode/extensions/prettier-vscode-$PRETTIER_VERSION.vsix &&     VS_CODE_RUNNER_VERSION=""0.9.17"" &&     wget --no-verbose https://github.com/formulahendry/vscode-code-runner/releases/download/$VS_CODE_RUNNER_VERSION/code-runner-$VS_CODE_RUNNER_VERSION.vsix &&     bsdtar -xf code-runner-$VS_CODE_RUNNER_VERSION.vsix extension &&     rm code-runner-$VS_CODE_RUNNER_VERSION.vsix &&     mv extension $HOME/.vscode/extensions/code-runner-$VS_CODE_RUNNER_VERSION &&     sleep $SLEEP_TIMER &&     VS_ESLINT_VERSION=""2.1.23"" &&     wget --retry-on-http-error=429 --waitretry 15 --tries 5 --no-verbose https://marketplace.visualstudio.com/_apis/public/gallery/publishers/dbaeumer/vsextensions/vscode-eslint/$VS_ESLINT_VERSION/vspackage -O dbaeumer.vscode-eslint.vsix &&     bsdtar -xf dbaeumer.vscode-eslint.vsix extension &&     rm dbaeumer.vscode-eslint.vsix &&     mv extension $HOME/.vscode/extensions/dbaeumer.vscode-eslint-$VS_ESLINT_VERSION.vsix &&     fix-permissions.sh $HOME/.vscode/extensions/ &&     clean-layer.sh', 'apt-get update &&     if [ ""$WORKSPACE_FLAVOR"" = ""minimal"" ] || [ ""$WORKSPACE_FLAVOR"" = ""light"" ]; then         clean-layer.sh  &&         exit 0 ;     fi &&     clean-layer.sh', 'ln -s $RESOURCES_PATH/novnc/vnc.html $RESOURCES_PATH/novnc/index.html', 'cp -f $RESOURCES_PATH/branding/logo.png $CONDA_PYTHON_DIR""/site-packages/notebook/static/base/images/logo.png"" &&     cp -f $RESOURCES_PATH/branding/favicon.ico $CONDA_PYTHON_DIR""/site-packages/notebook/static/base/images/favicon.ico"" &&     cp -f $RESOURCES_PATH/branding/favicon.ico $CONDA_PYTHON_DIR""/site-packages/notebook/static/favicon.ico"" &&     mkdir -p $RESOURCES_PATH""/filebrowser/img/icons/"" &&     cp -f $RESOURCES_PATH/branding/favicon.ico $RESOURCES_PATH""/filebrowser/img/icons/favicon.ico"" &&     cp -f $RESOURCES_PATH/branding/favicon.ico $RESOURCES_PATH""/filebrowser/img/icons/favicon-32x32.png"" &&     cp -f $RESOURCES_PATH/branding/favicon.ico $RESOURCES_PATH""/filebrowser/img/icons/favicon-16x16.png"" &&     cp -f $RESOURCES_PATH/branding/ml-workspace-logo.svg $RESOURCES_PATH""/filebrowser/img/logo.svg""', ""git config --global core.fileMode false &&     git config --global http.sslVerify false &&     git config --global credential.helper 'cache --timeout=31540000'"", 'MPLBACKEND=Agg python -c ""import matplotlib.pyplot""     sed -i ""s/^.*Matplotlib is building the font cache using fc-list.*$/# Warning removed/g"" $CONDA_PYTHON_DIR/site-packages/matplotlib/font_manager.py', 'echo ""[Desktop Entry]\\nVersion=1.0\\nType=Link\\nName=Ungit\\nComment=Git Client\\nCategories=Development;\\nIcon=/resources/icons/ungit-icon.png\\nURL=http://localhost:8092/tools/ungit"" > /usr/share/applications/ungit.desktop &&     chmod +x /usr/share/applications/ungit.desktop &&     echo ""[Desktop Entry]\\nVersion=1.0\\nType=Link\\nName=Netdata\\nComment=Hardware Monitoring\\nCategories=System;Utility;Development;\\nIcon=/resources/icons/netdata-icon.png\\nURL=http://localhost:8092/tools/netdata"" > /usr/share/applications/netdata.desktop &&     chmod +x /usr/share/applications/netdata.desktop &&     echo ""[Desktop Entry]\\nVersion=1.0\\nType=Link\\nName=Glances\\nComment=Hardware Monitoring\\nCategories=System;Utility;\\nIcon=/resources/icons/glances-icon.png\\nURL=http://localhost:8092/tools/glances"" > /usr/share/applications/glances.desktop &&     chmod +x /usr/share/applications/glances.desktop &&     rm /usr/share/applications/xfce4-mail-reader.desktop &&     rm /usr/share/applications/xfce4-session-logout.desktop', ""touch $HOME/.ssh/config &&     chmod -R a+rwx $WORKSPACE_HOME &&     chmod -R a+rwx $RESOURCES_PATH &&     chmod -R a+rwx /usr/share/applications/ &&     ln -s $RESOURCES_PATH/tools/ $HOME/Desktop/Tools &&     ln -s $WORKSPACE_HOME $HOME/Desktop/workspace &&     chmod a+rwx /usr/local/bin/start-notebook.sh &&     chmod a+rwx /usr/local/bin/start.sh &&     chmod a+rwx /usr/local/bin/start-singleuser.sh &&     chown root:root /tmp &&     chmod 1777 /tmp &&     echo 'cd '$WORKSPACE_HOME >> $HOME/.bashrc""]"
ml-tooling/ml-workspace,latest,/Dockerfile,COPY,40,"['resources/scripts/clean-layer.sh  /usr/bin/clean-layer.sh', 'resources/scripts/fix-permissions.sh  /usr/bin/fix-permissions.sh', 'resources/nginx/lua-extensions /etc/nginx/nginx_plugins', 'resources/tools/vs-code-server.sh $RESOURCES_PATH/tools/vs-code-server.sh', 'resources/tools/ungit.sh $RESOURCES_PATH/tools/ungit.sh', 'resources/tools/netdata.sh $RESOURCES_PATH/tools/netdata.sh', 'resources/tools/filebrowser.sh $RESOURCES_PATH/tools/filebrowser.sh', 'resources/tools/vs-code-desktop.sh $RESOURCES_PATH/tools/vs-code-desktop.sh', 'resources/tools/firefox.sh $RESOURCES_PATH/tools/firefox.sh', 'resources/libraries ${RESOURCES_PATH}/libraries', 'resources/jupyter/start.sh     resources/jupyter/start-notebook.sh     resources/jupyter/start-singleuser.sh     /usr/local/bin/', 'resources/jupyter/nbconfig /etc/jupyter/nbconfig', 'resources/jupyter/jupyter_notebook_config.json /etc/jupyter/', 'resources/jupyter/extensions $RESOURCES_PATH/jupyter-extensions', 'resources/tools/oh-my-zsh.sh $RESOURCES_PATH/tools/oh-my-zsh.sh', 'resources/tools/git-lfs.sh $RESOURCES_PATH/tools/git-lfs.sh', 'resources/docker-entrypoint.py     resources/5xx.html     $RESOURCES_PATH/', 'resources/scripts $RESOURCES_PATH/scripts', 'resources/branding $RESOURCES_PATH/branding', 'resources/home/ $HOME/', 'resources/ssh/ssh_config resources/ssh/sshd_config  /etc/ssh/', 'resources/nginx/nginx.conf /etc/nginx/nginx.conf', 'resources/config/xrdp.ini /etc/xrdp/xrdp.ini', 'resources/supervisor/supervisord.conf /etc/supervisor/supervisord.conf', 'resources/supervisor/programs/ /etc/supervisor/conf.d/', 'resources/config/90assumeyes /etc/apt/apt.conf.d/', 'resources/novnc/ $RESOURCES_PATH/novnc/', 'resources/jupyter/tensorboard_notebook_patch.py $CONDA_PYTHON_DIR/site-packages/tensorboard/notebook.py', 'resources/jupyter/jupyter_notebook_config.py /etc/jupyter/', 'resources/jupyter/sidebar.jupyterlab-settings $HOME/.jupyter/lab/user-settings/@jupyterlab/application-extension/', 'resources/jupyter/plugin.jupyterlab-settings $HOME/.jupyter/lab/user-settings/@jupyterlab/extensionmanager-extension/', 'resources/jupyter/ipython_config.py /etc/ipython/ipython_config.py', 'resources/netdata/ /etc/netdata/', 'resources/netdata/cloud.conf /var/lib/netdata/cloud.d/cloud.conf', 'resources/icons $RESOURCES_PATH/icons', 'resources/tools $RESOURCES_PATH/tools', 'resources/tests $RESOURCES_PATH/tests', 'resources/tutorials $RESOURCES_PATH/tutorials', 'resources/licenses $RESOURCES_PATH/licenses', 'resources/reports $RESOURCES_PATH/reports']"
ml-tooling/ml-workspace,latest,/Dockerfile,ARG,4,"['ARG_WORKSPACE_FLAVOR=""full""', 'ARG_BUILD_DATE=""unknown""', 'ARG_VCS_REF=""unknown""', 'ARG_WORKSPACE_VERSION=""unknown""']"
ml-tooling/ml-workspace,latest,/Dockerfile,LABEL,1,"['""maintainer""=""mltooling.team@gmail.com""     ""workspace.version""=$WORKSPACE_VERSION     ""workspace.flavor""=$WORKSPACE_FLAVOR     ""io.k8s.description""=""All-in-one web-based development environment for machine learning.""     ""io.k8s.display-name""=""Machine Learning Workspace""     ""io.openshift.expose-services""=""8080:http, 5901:xvnc""     ""io.openshift.non-scalable""=""true""     ""io.openshift.tags""=""workspace, machine learning, vnc, ubuntu, xfce""     ""io.openshift.min-memory""=""1Gi""     ""org.opencontainers.image.title""=""Machine Learning Workspace""     ""org.opencontainers.image.description""=""All-in-one web-based development environment for machine learning.""     ""org.opencontainers.image.documentation""=""https://github.com/ml-tooling/ml-workspace""     ""org.opencontainers.image.url""=""https://github.com/ml-tooling/ml-workspace""     ""org.opencontainers.image.source""=""https://github.com/ml-tooling/ml-workspace""     ""org.opencontainers.image.version""=$WORKSPACE_VERSION     ""org.opencontainers.image.vendor""=""ML Tooling""     ""org.opencontainers.image.authors""=""Lukas Masuch & Benjamin Raethlein""     ""org.opencontainers.image.revision""=$ARG_VCS_REF     ""org.opencontainers.image.created""=$ARG_BUILD_DATE     ""org.label-schema.name""=""Machine Learning Workspace""     ""org.label-schema.description""=""All-in-one web-based development environment for machine learning.""     ""org.label-schema.usage""=""https://github.com/ml-tooling/ml-workspace""     ""org.label-schema.url""=""https://github.com/ml-tooling/ml-workspace""     ""org.label-schema.vcs-url""=""https://github.com/ml-tooling/ml-workspace""     ""org.label-schema.vendor""=""ML Tooling""     ""org.label-schema.version""=$WORKSPACE_VERSION     ""org.label-schema.schema-version""=""1.0""     ""org.label-schema.vcs-ref""=$ARG_VCS_REF     ""org.label-schema.build-date""=$ARG_BUILD_DATE']"
ml-tooling/ml-workspace,latest,/Dockerfile,ENTRYPOINT,1,"['[""/tini"", ""-g"", ""--""]']"
ml-tooling/ml-workspace,latest,/Dockerfile,CMD,1,"['[""python"", ""/resources/docker-entrypoint.py""]']"
ml-tooling/ml-workspace,latest,/Dockerfile,EXPOSE,1,['8080']
ml-tooling/ml-workspace,latest,/deployment/google-cloud-run/Dockerfile,FROM,1,['mltooling/ml-workspace-minimal:latest']
ml-tooling/ml-workspace,latest,/deployment/google-cloud-run/Dockerfile,ENV,1,['WORKSPACE_PORT=8080']
ml-tooling/ml-workspace,latest,/deployment/google-cloud-run/Dockerfile,EXPOSE,1,['8080']
ml-tooling/ml-workspace,latest,/gpu-flavor/Dockerfile,ARG,5,"['ARG_WORKSPACE_BASE_IMAGE=""mltooling/ml-workspace:latest""', 'ARG_WORKSPACE_FLAVOR=""gpu""', 'ARG_WORKSPACE_VERSION=""latest""', 'ARG_BUILD_DATE=""unknown""', 'ARG_VCS_REF=""unknown""']"
ml-tooling/ml-workspace,latest,/gpu-flavor/Dockerfile,FROM,1,['$ARG_WORKSPACE_BASE_IMAGE']
ml-tooling/ml-workspace,latest,/gpu-flavor/Dockerfile,ENV,13,"['WORKSPACE_FLAVOR=$ARG_WORKSPACE_FLAVOR', 'CUDA_VERSION 11.2.2', 'PATH /usr/local/nvidia/bin:/usr/local/cuda/bin:${PATH}', 'LD_LIBRARY_PATH /usr/local/nvidia/lib:/usr/local/nvidia/lib64', 'NVIDIA_VISIBLE_DEVICES all', 'NVIDIA_DRIVER_CAPABILITIES compute,utility', 'NVIDIA_REQUIRE_CUDA ""cuda>=11.2 brand=tesla,driver>=418,driver<419 brand=tesla,driver>=440,driver<441 driver>=450""', 'NCCL_VERSION 2.8.4', 'LIBRARY_PATH /usr/local/cuda/lib64/stubs', 'CUDNN_VERSION 8.1.1.33', 'LD_LIBRARY_PATH ${LD_LIBRARY_PATH}:/usr/local/cuda/extras/CUPTI/lib64', 'TF_FORCE_GPU_ALLOW_GROWTH true', 'WORKSPACE_VERSION=$ARG_WORKSPACE_VERSION']"
ml-tooling/ml-workspace,latest,/gpu-flavor/Dockerfile,USER,1,['root']
ml-tooling/ml-workspace,latest,/gpu-flavor/Dockerfile,RUN,9,"['apt-get update && apt-get install -y --no-install-recommends     gnupg2 curl ca-certificates &&     curl -fsSL https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2004/x86_64/7fa2af80.pub | apt-key add - &&     echo ""deb https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2004/x86_64 /"" > /etc/apt/sources.list.d/cuda.list &&     echo ""deb https://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu2004/x86_64 /"" > /etc/apt/sources.list.d/nvidia-ml.list &&     apt-get clean &&     rm -rf $HOME/.cache/* &&     rm -rf /tmp/* &&     rm -rf /var/lib/apt/lists/*', 'apt-get update && apt-get install -y --no-install-recommends     cuda-cudart-11-2=11.2.152-1     cuda-compat-11-2     && ln -s cuda-11.2 /usr/local/cuda &&     rm -rf /var/lib/apt/lists/* &&     apt-get clean &&     rm -rf $HOME/.cache/* &&     rm -rf /tmp/* &&     rm -rf /var/lib/apt/lists/*', 'echo ""/usr/local/nvidia/lib"" >> /etc/ld.so.conf.d/nvidia.conf     && echo ""/usr/local/nvidia/lib64"" >> /etc/ld.so.conf.d/nvidia.conf', 'apt-get update && apt-get install -y --no-install-recommends     cuda-libraries-11-2=11.2.2-1     libnpp-11-2=11.3.2.152-1     cuda-nvtx-11-2=11.2.152-1     libcublas-11-2=11.4.1.1043-1     libcusparse-11-2=11.4.1.1152-1     libnccl2=$NCCL_VERSION-1+cuda11.2     && rm -rf /var/lib/apt/lists/*     && apt-get clean     && rm -rf $HOME/.cache/*     && rm -rf /tmp/*     && rm -rf /var/lib/apt/lists/*', 'apt-mark hold libcublas-11-2 libnccl2', 'apt-get update && apt-get install -y --no-install-recommends     libtinfo5 libncursesw5     cuda-cudart-dev-11-2=11.2.152-1     cuda-command-line-tools-11-2=11.2.2-1     cuda-minimal-build-11-2=11.2.2-1     cuda-libraries-dev-11-2=11.2.2-1     cuda-nvml-dev-11-2=11.2.152-1     libnpp-dev-11-2=11.3.2.152-1     libnccl-dev=2.8.4-1+cuda11.2     libcublas-dev-11-2=11.4.1.1043-1     libcusparse-dev-11-2=11.4.1.1152-1 &&     apt-get clean &&     rm -rf $HOME/.cache/* &&     rm -rf /tmp/* &&     rm -rf /var/lib/apt/lists/*', 'apt-mark hold libcublas-dev-11-2 libnccl-dev', 'apt-get update && apt-get install -y --no-install-recommends     libcudnn8=$CUDNN_VERSION-1+cuda11.2     libcudnn8-dev=$CUDNN_VERSION-1+cuda11.2     && apt-mark hold libcudnn8 &&     apt-get clean &&     rm -rf /root/.cache/* &&     rm -rf /tmp/* &&     rm -rf /var/lib/apt/lists/*', 'apt-get update &&     apt-get install -y libomp-dev libopenblas-base &&     conda remove --force -y pytorch cpuonly &&     conda install cudatoolkit=11.2 -c pytorch -c nvidia &&     pip install --no-cache-dir torch==1.9.0+cu111 torchvision==0.10.0+cu111 torchaudio==0.9.0 -f https://download.pytorch.org/whl/torch_stable.html &&     pip install --no-cache-dir cupy-cuda112 &&     pip install --no-cache-dir pycuda &&     pip install --no-cache-dir gpustat py3nvml gputil &&     pip install --no-cache-dir scikit-cuda &&     pip uninstall -y tensorflow tensorflow-cpu intel-tensorflow &&     pip install --no-cache-dir tensorflow-gpu==2.5.0 &&     pip uninstall -y onnxruntime &&     pip install --no-cache-dir onnxruntime-gpu==1.8.0 onnxruntime-training==1.8.0 &&     pip uninstall -y mxnet-mkl &&     pip install --no-cache-dir mxnet-cu112 &&     pip install --upgrade jax[cuda111] -f https://storage.googleapis.com/jax-releases/jax_releases.html &&     conda install -y pygpu &&     pip uninstall -y lightgbm &&     pip install lightgbm --install-option=--gpu --install-option=""--opencl-include-dir=/usr/local/cuda/include/"" --install-option=""--opencl-library=/usr/local/cuda/lib64/libOpenCL.so""  &&     pip install --upgrade --force-reinstall nvidia-ml-py3 &&     pip install --no-cache-dir SpeedTorch &&     pip install --no-cache-dir ipyexperiments &&     clean-layer.sh']"
ml-tooling/ml-workspace,latest,/gpu-flavor/Dockerfile,LABEL,2,"['com.nvidia.cudnn.version=""${CUDNN_VERSION}""', '""workspace.version""=$WORKSPACE_VERSION     ""workspace.flavor""=$WORKSPACE_FLAVOR     ""workspace.baseimage""=$ARG_WORKSPACE_BASE_IMAGE     ""org.opencontainers.image.version""=$WORKSPACE_VERSION     ""org.opencontainers.image.revision""=$ARG_VCS_REF     ""org.opencontainers.image.created""=$ARG_BUILD_DATE     ""org.label-schema.version""=$WORKSPACE_VERSION     ""org.label-schema.vcs-ref""=$ARG_VCS_REF     ""org.label-schema.build-date""=$ARG_BUILD_DATE']"
ml-tooling/ml-workspace,latest,/.github/actions/build-environment/Dockerfile,FROM,1,['mltooling/build-environment:0.6.6']
ml-tooling/ml-workspace,latest,/.github/actions/build-environment/Dockerfile,RUN,1,['apt-get update     && apt-get install -y --no-install-recommends         openssh-client     && apt-get clean     && rm -rf /var/lib/apt/lists/*']
polyaxon/polyaxon,latest,/core/tests/test_polypod/test_init/test_init_dockerfile.py,IMPORT,1,['pytest']
polyaxon/polyaxon,latest,/core/tests/test_polypod/test_init/test_init_dockerfile.py,FROM,12,"['polyaxon.auxiliaries import V1PolyaxonInitContainer, get_init_resources', 'polyaxon.containers.contexts import (', 'polyaxon.containers.names import INIT_DOCKERFILE_CONTAINER_PREFIX', 'polyaxon.polyflow import V1Plugins', 'polyaxon.polypod.common import constants', 'polyaxon.polypod.common.env_vars import get_run_instance_env_var', 'polyaxon.polypod.common.mounts import (', 'polyaxon.polypod.common.volumes import get_volume_name', 'polyaxon.polypod.init.dockerfile import get_dockerfile_init_container', 'polyaxon.polypod.specs.contexts import PluginsContextsSpec', 'polyaxon.schemas.types.dockerfile import V1DockerfileType', 'tests.utils import BaseTestCase']"
polyaxon/polyaxon,latest,/core/tests/test_polypod/test_init/test_init_dockerfile.py,"CONTEXT_MOUNT_ARTIFACTS,",1,['']
polyaxon/polyaxon,latest,/core/tests/test_polypod/test_init/test_init_dockerfile.py,"CONTEXT_MOUNT_RUN_OUTPUTS_FORMAT,",1,['']
polyaxon/polyaxon,latest,/core/tests/test_polypod/test_init/test_init_dockerfile.py,),5,"['', '', '', '', '']"
polyaxon/polyaxon,latest,/core/tests/test_polypod/test_init/test_init_dockerfile.py,"GET_AUTH_CONTEXT_MOUNT,",1,['']
polyaxon/polyaxon,latest,/core/tests/test_polypod/test_init/test_init_dockerfile.py,"GET_CONNECTIONS_CONTEXT_MOUNT,",1,['']
polyaxon/polyaxon,latest,/core/tests/test_polypod/test_init/test_init_dockerfile.py,@PYTEST.MARK.POLYPOD_MARK,1,['']
polyaxon/polyaxon,latest,/core/tests/test_polypod/test_init/test_init_dockerfile.py,CLASS,1,['TestInitDockerfile(BaseTestCase):']
polyaxon/polyaxon,latest,/core/tests/test_polypod/test_init/test_init_dockerfile.py,DEF,1,['test_get_dockerfile_init_container(self):']
polyaxon/polyaxon,latest,/core/tests/test_polypod/test_init/test_init_dockerfile.py,DOCKERFILE_ARGS,2,"['= V1DockerfileType(image=""test/test"")', '= V1DockerfileType(']"
polyaxon/polyaxon,latest,/core/tests/test_polypod/test_init/test_init_dockerfile.py,CONTAINER,2,"['= get_dockerfile_init_container(', '= get_dockerfile_init_container(']"
polyaxon/polyaxon,latest,/core/tests/test_polypod/test_init/test_init_dockerfile.py,"POLYAXON_INIT=V1POLYAXONINITCONTAINER(IMAGE=""FOO"",",1,"['image_tag=""""),']"
polyaxon/polyaxon,latest,/core/tests/test_polypod/test_init/test_init_dockerfile.py,"DOCKERFILE_ARGS=DOCKERFILE_ARGS,",2,"['', '']"
polyaxon/polyaxon,latest,/core/tests/test_polypod/test_init/test_init_dockerfile.py,"ENV=NONE,",1,['']
polyaxon/polyaxon,latest,/core/tests/test_polypod/test_init/test_init_dockerfile.py,"CONTEXTS=PLUGINSCONTEXTSSPEC.FROM_CONFIG(V1PLUGINS(AUTH=TRUE)),",2,"['', '']"
polyaxon/polyaxon,latest,/core/tests/test_polypod/test_init/test_init_dockerfile.py,"RUN_PATH=""TEST"",",2,"['', '']"
polyaxon/polyaxon,latest,/core/tests/test_polypod/test_init/test_init_dockerfile.py,"RUN_INSTANCE=""FOO.BAR.RUNS.UUID"",",2,"['', '']"
polyaxon/polyaxon,latest,/core/tests/test_polypod/test_init/test_init_dockerfile.py,ASSERT,16,"['INIT_DOCKERFILE_CONTAINER_PREFIX in container.name', 'container.image == ""foo""', 'container.image_pull_policy is None', 'container.command == [""polyaxon"", ""docker"", ""generate""]', 'container.args == [', 'container.env == [', 'container.resources == get_init_resources()', 'container.volume_mounts == [', 'INIT_DOCKERFILE_CONTAINER_PREFIX in container.name', 'container.image == ""init/init""', 'container.image_pull_policy == ""IfNotPresent""', 'container.command == [""polyaxon"", ""docker"", ""generate""]', 'container.args == [', 'container.env == [', 'container.resources == get_init_resources()', 'container.volume_mounts == [']"
polyaxon/polyaxon,latest,/core/tests/test_polypod/test_init/test_init_dockerfile.py,"""--BUILD-CONTEXT={}"".FORMAT(DOCKERFILE_ARGS.TO_DICT(DUMP=TRUE)),",2,"['', '']"
polyaxon/polyaxon,latest,/core/tests/test_polypod/test_init/test_init_dockerfile.py,"""--DESTINATION={}"".FORMAT(CONTEXT_MOUNT_ARTIFACTS),",1,['']
polyaxon/polyaxon,latest,/core/tests/test_polypod/test_init/test_init_dockerfile.py,"""--COPY-PATH={}"".FORMAT(CONTEXT_MOUNT_RUN_OUTPUTS_FORMAT.FORMAT(""TEST"")),",2,"['', '']"
polyaxon/polyaxon,latest,/core/tests/test_polypod/test_init/test_init_dockerfile.py,"""--TRACK"",",2,"['', '']"
polyaxon/polyaxon,latest,/core/tests/test_polypod/test_init/test_init_dockerfile.py,],6,"['', '', '', '', '', '']"
polyaxon/polyaxon,latest,/core/tests/test_polypod/test_init/test_init_dockerfile.py,"GET_RUN_INSTANCE_ENV_VAR(RUN_INSTANCE=""FOO.BAR.RUNS.UUID"")",2,"['', '']"
polyaxon/polyaxon,latest,/core/tests/test_polypod/test_init/test_init_dockerfile.py,GET_CONNECTIONS_CONTEXT_MOUNT(,2,"['', '']"
polyaxon/polyaxon,latest,/core/tests/test_polypod/test_init/test_init_dockerfile.py,"NAME=CONSTANTS.CONTEXT_VOLUME_ARTIFACTS,",1,['']
polyaxon/polyaxon,latest,/core/tests/test_polypod/test_init/test_init_dockerfile.py,"MOUNT_PATH=CONTEXT_MOUNT_ARTIFACTS,",1,['']
polyaxon/polyaxon,latest,/core/tests/test_polypod/test_init/test_init_dockerfile.py,"),",3,"['', '', '']"
polyaxon/polyaxon,latest,/core/tests/test_polypod/test_init/test_init_dockerfile.py,"GET_AUTH_CONTEXT_MOUNT(READ_ONLY=TRUE),",2,"['', '']"
polyaxon/polyaxon,latest,/core/tests/test_polypod/test_init/test_init_dockerfile.py,"IMAGE=""TEST/TEST"",",1,['']
polyaxon/polyaxon,latest,/core/tests/test_polypod/test_init/test_init_dockerfile.py,"LANG_ENV=""LANG"",",1,['']
polyaxon/polyaxon,latest,/core/tests/test_polypod/test_init/test_init_dockerfile.py,"RUN=[""STEP1"",",1,"['""step2""],']"
polyaxon/polyaxon,latest,/core/tests/test_polypod/test_init/test_init_dockerfile.py,"ENV=[[""KEY1"",",1,"['""val1""], [""key2"", ""val2""]],']"
polyaxon/polyaxon,latest,/core/tests/test_polypod/test_init/test_init_dockerfile.py,"UID=2222,",1,['']
polyaxon/polyaxon,latest,/core/tests/test_polypod/test_init/test_init_dockerfile.py,"GID=2222,",1,['']
polyaxon/polyaxon,latest,/core/tests/test_polypod/test_init/test_init_dockerfile.py,POLYAXON_INIT=V1POLYAXONINITCONTAINER(,1,['']
polyaxon/polyaxon,latest,/core/tests/test_polypod/test_init/test_init_dockerfile.py,"IMAGE=""INIT/INIT"",",1,"['image_tag="""", image_pull_policy=""IfNotPresent""']"
polyaxon/polyaxon,latest,/core/tests/test_polypod/test_init/test_init_dockerfile.py,"ENV=[],",1,['']
polyaxon/polyaxon,latest,/core/tests/test_polypod/test_init/test_init_dockerfile.py,"MOUNT_PATH=""/SOMEPATH"",",1,['']
polyaxon/polyaxon,latest,/core/tests/test_polypod/test_init/test_init_dockerfile.py,"""--DESTINATION=/SOMEPATH"",",1,['']
polyaxon/polyaxon,latest,/core/tests/test_polypod/test_init/test_init_dockerfile.py,"NAME=GET_VOLUME_NAME(""/SOMEPATH""),",1,"['mount_path=""/somepath""']"
polyaxon/polyaxon,latest,/core/tests/test_builds/test_dockerfile_generator.py,IMPORT,3,"['os', 'pytest', 'tempfile']"
polyaxon/polyaxon,latest,/core/tests/test_builds/test_dockerfile_generator.py,FROM,3,"['polyaxon.builds.generator.generator import DockerFileGenerator', 'polyaxon.schemas.types.dockerfile import (', 'tests.utils import BaseTestCase']"
polyaxon/polyaxon,latest,/core/tests/test_builds/test_dockerfile_generator.py,"POLYAXON_DOCKER_WORKDIR,",1,['']
polyaxon/polyaxon,latest,/core/tests/test_builds/test_dockerfile_generator.py,"POLYAXON_DOCKERFILE_NAME,",1,['']
polyaxon/polyaxon,latest,/core/tests/test_builds/test_dockerfile_generator.py,"V1DOCKERFILETYPE,",1,['']
polyaxon/polyaxon,latest,/core/tests/test_builds/test_dockerfile_generator.py,),20,"['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '']"
polyaxon/polyaxon,latest,/core/tests/test_builds/test_dockerfile_generator.py,@PYTEST.MARK.API_BUILDS,1,['']
polyaxon/polyaxon,latest,/core/tests/test_builds/test_dockerfile_generator.py,CLASS,2,"['TestDockerfileGenerator(BaseTestCase):', 'TestGenerate(BaseTestCase):']"
polyaxon/polyaxon,latest,/core/tests/test_builds/test_dockerfile_generator.py,@STATICMETHOD,1,['']
polyaxon/polyaxon,latest,/core/tests/test_builds/test_dockerfile_generator.py,DEF,4,"['touch(path):', 'test_get_generated_dockerfile_path(self):', 'test_render_works_as_expected(self):  # pylint:disable=too-many-statements', 'test_generate(self):']"
polyaxon/polyaxon,latest,/core/tests/test_builds/test_dockerfile_generator.py,WITH,1,"['open(path, ""w"") as f:']"
polyaxon/polyaxon,latest,/core/tests/test_builds/test_dockerfile_generator.py,"F.WRITE(""TEST"")",1,['']
polyaxon/polyaxon,latest,/core/tests/test_builds/test_dockerfile_generator.py,REPO_PATH,2,"['= os.path.join(tempfile.mkdtemp(), ""repo"")', '= os.path.join(tempfile.mkdtemp(), ""repo"")']"
polyaxon/polyaxon,latest,/core/tests/test_builds/test_dockerfile_generator.py,OS.MKDIR(REPO_PATH),2,"['', '']"
polyaxon/polyaxon,latest,/core/tests/test_builds/test_dockerfile_generator.py,BUILD_CONTEXT,10,"['= V1DockerfileType(image=""busybox"")', '= V1DockerfileType(image=""busybox"")', '= V1DockerfileType(image=""busybox"", workdir_path=repo_path)', '= V1DockerfileType(', '= V1DockerfileType(', '= V1DockerfileType(', '= V1DockerfileType(', '= V1DockerfileType(', '= V1DockerfileType(', '= V1DockerfileType(']"
polyaxon/polyaxon,latest,/core/tests/test_builds/test_dockerfile_generator.py,BUILDER,9,"['= DockerFileGenerator(', '= DockerFileGenerator(', '= DockerFileGenerator(', '= DockerFileGenerator(', '= DockerFileGenerator(', '= DockerFileGenerator(', '= DockerFileGenerator(', '= DockerFileGenerator(', '= DockerFileGenerator(']"
polyaxon/polyaxon,latest,/core/tests/test_builds/test_dockerfile_generator.py,"BUILD_CONTEXT=BUILD_CONTEXT,",9,"['destination=repo_path', 'destination=repo_path', 'destination=repo_path', 'destination=repo_path', 'destination=repo_path', 'destination=repo_path', 'destination=repo_path', 'destination=repo_path', 'destination=repo_path']"
polyaxon/polyaxon,latest,/core/tests/test_builds/test_dockerfile_generator.py,ASSERT,37,"['builder.dockerfile_path == ""{}/{}"".format(', '""FROM busybox"" in dockerfile', '""WORKDIR {}"".format(POLYAXON_DOCKER_WORKDIR) in dockerfile', '""COPY"" not in dockerfile', '""COPY {}"".format(repo_path) in dockerfile', '""LC_ALL"" not in dockerfile', '""LANG"" not in dockerfile', '""LANGUAGE"" not in dockerfile', '""ENV BLA BLA"" in dockerfile', '""groupadd"" not in dockerfile', '""useradd"" not in dockerfile', '""COPY {} {}"".format(copy[0], POLYAXON_DOCKER_WORKDIR) in dockerfile', '""COPY {} {}"".format(copy[1], POLYAXON_DOCKER_WORKDIR) in dockerfile', '""COPY {} {}"".format(copy[2][0], copy[2][1]) in dockerfile', '(', '(', '""RUN {}"".format(run[0]) in dockerfile', '""RUN {}"".format(run[1]) in dockerfile', '""RUN {}"".format(run[2]) in dockerfile', '""groupadd"" not in dockerfile', '""useradd"" not in dockerfile', '""groupadd"" not in dockerfile', '""useradd"" not in dockerfile', '""1000"" not in dockerfile', '""groupadd"" not in dockerfile', '""useradd"" not in dockerfile', '""1000"" not in dockerfile', '""groupadd"" in dockerfile', '""useradd"" in dockerfile', '""-u 1000"" in dockerfile', '""-g 1000"" in dockerfile', '""en_US.UTF-8"" in dockerfile', '""LC_ALL"" in dockerfile', '""LANG"" in dockerfile', '""LANGUAGE"" in dockerfile', 'not os.path.isfile(""{}/{}"".format(tmp_path, POLYAXON_DOCKERFILE_NAME))', 'os.path.isfile(""{}/{}"".format(tmp_path, POLYAXON_DOCKERFILE_NAME))']"
polyaxon/polyaxon,latest,/core/tests/test_builds/test_dockerfile_generator.py,"REPO_PATH,",1,['POLYAXON_DOCKERFILE_NAME']
polyaxon/polyaxon,latest,/core/tests/test_builds/test_dockerfile_generator.py,BUILDER.CLEAN(),9,"['', '', '', '', '', '', '', '', '']"
polyaxon/polyaxon,latest,/core/tests/test_builds/test_dockerfile_generator.py,DOCKERFILE,8,"['= builder.render()', '= builder.render()', '= builder.render()', '= builder.render()', '= builder.render()', '= builder.render()', '= builder.render()', '= builder.render()']"
polyaxon/polyaxon,latest,/core/tests/test_builds/test_dockerfile_generator.py,"IMAGE=""BUSYBOX"",",7,"['workdir_path=repo_path, env=[(""BLA"", ""BLA"")]', '', 'workdir_path=repo_path, uid=1000', 'workdir_path=repo_path, gid=1000', 'workdir_path=repo_path, uid=1000, gid=1000', 'workdir_path=repo_path, lang_env=""en_US.UTF-8""', '']"
polyaxon/polyaxon,latest,/core/tests/test_builds/test_dockerfile_generator.py,COPY,1,['= [']
polyaxon/polyaxon,latest,/core/tests/test_builds/test_dockerfile_generator.py,"""POLYAXON_REQUIREMENTS.TXT"",",1,['']
polyaxon/polyaxon,latest,/core/tests/test_builds/test_dockerfile_generator.py,"""POLYAXON_SETUP.SH"",",1,['']
polyaxon/polyaxon,latest,/core/tests/test_builds/test_dockerfile_generator.py,"[""ENVIRONMENT-IN.YML"",",1,"['""environment-out.yml""],']"
polyaxon/polyaxon,latest,/core/tests/test_builds/test_dockerfile_generator.py,],3,"['', '', '']"
polyaxon/polyaxon,latest,/core/tests/test_builds/test_dockerfile_generator.py,POST_RUN_COPY,1,['= [']
polyaxon/polyaxon,latest,/core/tests/test_builds/test_dockerfile_generator.py,"""POST_RUN_SETUP.SH"",",1,['']
polyaxon/polyaxon,latest,/core/tests/test_builds/test_dockerfile_generator.py,"[""POST_RUN_ENVIRONMENT-IN.YML"",",1,"['""post_run_environment-out.yml""],']"
polyaxon/polyaxon,latest,/core/tests/test_builds/test_dockerfile_generator.py,RUN,1,['= [']
polyaxon/polyaxon,latest,/core/tests/test_builds/test_dockerfile_generator.py,"""PIP",1,"['install -r polyaxon_requirements.txt"",']"
polyaxon/polyaxon,latest,/core/tests/test_builds/test_dockerfile_generator.py,"""./POLYAXON_SETUP.SH"",",1,['']
polyaxon/polyaxon,latest,/core/tests/test_builds/test_dockerfile_generator.py,"""CONDA",1,"['env update -n base -f environment.yml"",']"
polyaxon/polyaxon,latest,/core/tests/test_builds/test_dockerfile_generator.py,"WORKDIR_PATH=REPO_PATH,",1,['']
polyaxon/polyaxon,latest,/core/tests/test_builds/test_dockerfile_generator.py,"COPY=COPY,",1,['']
polyaxon/polyaxon,latest,/core/tests/test_builds/test_dockerfile_generator.py,"POST_RUN_COPY=POST_RUN_COPY,",1,['']
polyaxon/polyaxon,latest,/core/tests/test_builds/test_dockerfile_generator.py,"RUN=RUN,",1,['']
polyaxon/polyaxon,latest,/core/tests/test_builds/test_dockerfile_generator.py,"""COPY",2,"['{} {}"".format(post_run_copy[0], POLYAXON_DOCKER_WORKDIR) in dockerfile', '{} {}"".format(post_run_copy[1][0], post_run_copy[1][1]) in dockerfile']"
polyaxon/polyaxon,latest,/core/tests/test_builds/test_dockerfile_generator.py,TMP_PATH,1,['= tempfile.mkdtemp()']
polyaxon/polyaxon,latest,/core/tests/test_builds/test_dockerfile_generator.py,"WORKDIR_PATH=TMP_PATH,",1,['']
polyaxon/polyaxon,latest,/core/tests/test_builds/test_dockerfile_generator.py,"LANG_ENV=""EN_US.UTF-8"",",1,['']
polyaxon/polyaxon,latest,/core/tests/test_builds/test_dockerfile_generator.py,"UID=100,",1,['']
polyaxon/polyaxon,latest,/core/tests/test_builds/test_dockerfile_generator.py,"GID=100,",1,['']
polyaxon/polyaxon,latest,/core/tests/test_builds/test_dockerfile_generator.py,"DOCKERFILEGENERATOR(BUILD_CONTEXT=BUILD_CONTEXT,",1,['destination=tmp_path).create()']
polyaxon/polyaxon,latest,/core/tests/test_schemas/test_types/test_dockerfile.py,IMPORT,1,['pytest']
polyaxon/polyaxon,latest,/core/tests/test_schemas/test_types/test_dockerfile.py,FROM,3,"['marshmallow import ValidationError', 'polyaxon.schemas.types.dockerfile import (', 'tests.utils import BaseTestCase']"
polyaxon/polyaxon,latest,/core/tests/test_schemas/test_types/test_dockerfile.py,"POLYAXON_DOCKER_SHELL,",1,['']
polyaxon/polyaxon,latest,/core/tests/test_schemas/test_types/test_dockerfile.py,"POLYAXON_DOCKER_WORKDIR,",1,['']
polyaxon/polyaxon,latest,/core/tests/test_schemas/test_types/test_dockerfile.py,"POLYAXON_DOCKERFILE_NAME,",1,['']
polyaxon/polyaxon,latest,/core/tests/test_schemas/test_types/test_dockerfile.py,"V1DOCKERFILETYPE,",1,['']
polyaxon/polyaxon,latest,/core/tests/test_schemas/test_types/test_dockerfile.py,),1,['']
polyaxon/polyaxon,latest,/core/tests/test_schemas/test_types/test_dockerfile.py,@PYTEST.MARK.INIT_MARK,1,['']
polyaxon/polyaxon,latest,/core/tests/test_schemas/test_types/test_dockerfile.py,CLASS,1,['TestDockerfileInitConfigs(BaseTestCase):']
polyaxon/polyaxon,latest,/core/tests/test_schemas/test_types/test_dockerfile.py,DEF,7,"['test_valid_image(self):', 'test_does_not_accept_dockerfiles(self):', 'test_build_config(self):', 'test_build_config_image_use_cases(self):', 'test_build_repo_with_install_step_copy_path_config(self):', 'test_build_repo_with_security_context(self):', 'test_build_config_with_default_values(self):']"
polyaxon/polyaxon,latest,/core/tests/test_schemas/test_types/test_dockerfile.py,CONFIG_DICT,23,"['= {""image"": None}', '= {""image"": """"}', '= {""image"": ""some_image_name:sdf:sdf:foo""}', '= {""image"": ""registry.foobar.com/my/docker/some_image_name:foo:foo""}', '= {""image"": ""some_image_name / foo""}', '= {""image"": ""some_image_name /foo:sdf""}', '= {""image"": ""some_image_name /foo :sdf""}', '= {', '= {""image"": ""registry.foobar.com:foo:foo/my/docker/some_image_name""}', '= {""image"": ""registry.foobar.com:/my/docker/some_image_name:foo""}', '= {""dockerfile"": ""foo/bar""}', '= {""image"": ""some_image_name""}', '= {""image"": ""some_image_name""}', '= {""image"": ""registry.foobar.com/my/docker/some_image_name""}', '= {""image"": ""registry.foobar.com:4567/some_image_name""}', '= {""image"": ""some_image_name:4567""}', '= {""image"": ""some_image_name:foo""}', '= {""image"": ""registry.foobar.com/my/docker/some_image_name:foo""}', '= {""image"": ""registry.foobar.com:4567/some_image_name:foo""}', '= {', '= {', '= {""image"": ""some_image_name""}', '= {}']"
polyaxon/polyaxon,latest,/core/tests/test_schemas/test_types/test_dockerfile.py,WITH,12,"['self.assertRaises(ValidationError):', 'self.assertRaises(ValidationError):', 'self.assertRaises(ValidationError):', 'self.assertRaises(ValidationError):', 'self.assertRaises(ValidationError):', 'self.assertRaises(ValidationError):', 'self.assertRaises(ValidationError):', 'self.assertRaises(ValidationError):', 'self.assertRaises(ValidationError):', 'self.assertRaises(ValidationError):', 'self.assertRaises(ValidationError):', 'self.assertRaises(ValidationError):']"
polyaxon/polyaxon,latest,/core/tests/test_schemas/test_types/test_dockerfile.py,V1DOCKERFILETYPE.FROM_DICT(CONFIG_DICT),12,"['', '', '', '', '', '', '', '', '', '', '', '']"
polyaxon/polyaxon,latest,/core/tests/test_schemas/test_types/test_dockerfile.py,"""IMAGE"":",3,"['""registry.foobar.com:foo:foo/my/docker/some_image_name:foo""', '""tensorflow:1.3.0"",', '""tensorflow:1.3.0"",']"
polyaxon/polyaxon,latest,/core/tests/test_schemas/test_types/test_dockerfile.py,},3,"['', '', '']"
polyaxon/polyaxon,latest,/core/tests/test_schemas/test_types/test_dockerfile.py,CONFIG,11,"['= V1DockerfileType.from_dict(config_dict)', '= V1DockerfileType.from_dict(config_dict)', '= V1DockerfileType.from_dict(config_dict)', '= V1DockerfileType.from_dict(config_dict)', '= V1DockerfileType.from_dict(config_dict)', '= V1DockerfileType.from_dict(config_dict)', '= V1DockerfileType.from_dict(config_dict)', '= V1DockerfileType.from_dict(config_dict)', '= V1DockerfileType.from_dict(config_dict)', '= V1DockerfileType.from_dict(config_dict)', '= V1DockerfileType.from_dict(config_dict)']"
polyaxon/polyaxon,latest,/core/tests/test_schemas/test_types/test_dockerfile.py,ASSERT,18,"['config.image_tag == ""latest""', 'config.image_tag == ""latest""', 'config.image_tag == ""latest""', 'config.image_tag == ""latest""', 'config.image_tag == ""4567""', 'config.image_tag == ""foo""', 'config.image_tag == ""foo""', 'config.image_tag == ""foo""', 'config.to_dict() == config_dict', 'config.image_tag == ""1.3.0""', 'config.to_dict() == config_dict', 'config.image_tag == ""1.3.0""', 'config.uid == 1000', 'config.gid == 3000', 'config.image_tag == ""latest""', 'config.filename == POLYAXON_DOCKERFILE_NAME', 'config.shell == POLYAXON_DOCKER_SHELL', 'config.workdir == POLYAXON_DOCKER_WORKDIR']"
polyaxon/polyaxon,latest,/core/tests/test_schemas/test_types/test_dockerfile.py,"""PATH"":",1,"['[""./module""],']"
polyaxon/polyaxon,latest,/core/tests/test_schemas/test_types/test_dockerfile.py,"""COPY"":",1,"['[""/foo/bar"", [""/foo2"", ""/bar2""]],']"
polyaxon/polyaxon,latest,/core/tests/test_schemas/test_types/test_dockerfile.py,"""POSTRUNCOPY"":",1,"['[""/foo/bar"", [""/foo2"", ""/bar2""]],']"
polyaxon/polyaxon,latest,/core/tests/test_schemas/test_types/test_dockerfile.py,"""RUN"":",2,"['[""pip install tensor2tensor""],', '[""pip install tensor2tensor""],']"
polyaxon/polyaxon,latest,/core/tests/test_schemas/test_types/test_dockerfile.py,"""ENV"":",2,"['{""LC_ALL"": ""en_US.UTF-8""},', '{""LC_ALL"": ""en_US.UTF-8""},']"
polyaxon/polyaxon,latest,/core/tests/test_schemas/test_types/test_dockerfile.py,"""FILENAME"":",2,"['""dockerfile"",', '""dockerfile"",']"
polyaxon/polyaxon,latest,/core/tests/test_schemas/test_types/test_dockerfile.py,"""WORKDIR"":",2,"['"""",', '"""",']"
polyaxon/polyaxon,latest,/core/tests/test_schemas/test_types/test_dockerfile.py,"""SHELL"":",2,"['""sh"",', '""sh"",']"
polyaxon/polyaxon,latest,/core/tests/test_schemas/test_types/test_dockerfile.py,"""UID"":",1,"['1000,']"
polyaxon/polyaxon,latest,/core/tests/test_schemas/test_types/test_dockerfile.py,"""GID"":",1,"['3000,']"
polyaxon/polyaxon,latest,/core/tests/test_schemas/test_types/test_dockerfile.py,"""USERNAME"":",1,"['""test"",']"
polyaxon/polyaxon,latest,/core/polyaxon/init/dockerfile.py,IMPORT,1,['os']
polyaxon/polyaxon,latest,/core/polyaxon/init/dockerfile.py,FROM,5,"['typing import Dict', 'polyaxon import settings', 'polyaxon.client import RunClient, get_rel_asset_path', 'polyaxon.exceptions import PolyaxonClientException, PolyaxonContainerException', 'polyaxon.polyboard.artifacts import V1ArtifactKind, V1RunArtifact']"
polyaxon/polyaxon,latest,/core/polyaxon/init/dockerfile.py,DEF,1,"['create_dockerfile_lineage(dockerfile_path: str, summary: Dict):']"
polyaxon/polyaxon,latest,/core/polyaxon/init/dockerfile.py,IF,2,"['not dockerfile_path:', 'settings.CLIENT_CONFIG.no_api:']"
polyaxon/polyaxon,latest,/core/polyaxon/init/dockerfile.py,RETURN,2,"['', '']"
polyaxon/polyaxon,latest,/core/polyaxon/init/dockerfile.py,FILENAME,1,['= os.path.basename(dockerfile_path)']
polyaxon/polyaxon,latest,/core/polyaxon/init/dockerfile.py,TRY:,1,['']
polyaxon/polyaxon,latest,/core/polyaxon/init/dockerfile.py,RUN_CLIENT,1,['= RunClient()']
polyaxon/polyaxon,latest,/core/polyaxon/init/dockerfile.py,EXCEPT,1,['PolyaxonClientException as e:']
polyaxon/polyaxon,latest,/core/polyaxon/init/dockerfile.py,RAISE,1,['PolyaxonContainerException(e)']
polyaxon/polyaxon,latest,/core/polyaxon/init/dockerfile.py,ARTIFACT_RUN,1,['= V1RunArtifact(']
polyaxon/polyaxon,latest,/core/polyaxon/init/dockerfile.py,"NAME=FILENAME,",1,['']
polyaxon/polyaxon,latest,/core/polyaxon/init/dockerfile.py,"KIND=V1ARTIFACTKIND.DOCKERFILE,",1,['']
polyaxon/polyaxon,latest,/core/polyaxon/init/dockerfile.py,"PATH=GET_REL_ASSET_PATH(DOCKERFILE_PATH),",1,['']
polyaxon/polyaxon,latest,/core/polyaxon/init/dockerfile.py,"SUMMARY=SUMMARY,",1,['']
polyaxon/polyaxon,latest,/core/polyaxon/init/dockerfile.py,"IS_INPUT=TRUE,",1,['']
polyaxon/polyaxon,latest,/core/polyaxon/init/dockerfile.py,),1,['']
polyaxon/polyaxon,latest,/core/polyaxon/init/dockerfile.py,RUN_CLIENT.LOG_ARTIFACT_LINEAGE(ARTIFACT_RUN),1,['']
polyaxon/polyaxon,latest,/core/polyaxon/polypod/init/dockerfile.py,FROM,12,"['typing import List, Optional', 'polyaxon.auxiliaries import V1PolyaxonInitContainer', 'polyaxon.containers.contexts import (', 'polyaxon.containers.names import (', 'polyaxon.k8s import k8s_schemas', 'polyaxon.polypod.common import constants', 'polyaxon.polypod.common.env_vars import get_run_instance_env_var', 'polyaxon.polypod.common.mounts import (', 'polyaxon.polypod.common.volumes import get_volume_name', 'polyaxon.polypod.specs.contexts import PluginsContextsSpec', 'polyaxon.schemas.types import V1DockerfileType', 'polyaxon.utils.list_utils import to_list']"
polyaxon/polyaxon,latest,/core/polyaxon/polypod/init/dockerfile.py,"CONTEXT_MOUNT_ARTIFACTS,",1,['']
polyaxon/polyaxon,latest,/core/polyaxon/polypod/init/dockerfile.py,"CONTEXT_MOUNT_RUN_OUTPUTS_FORMAT,",1,['']
polyaxon/polyaxon,latest,/core/polyaxon/polypod/init/dockerfile.py,),6,"['', '', '', '-> k8s_schemas.V1Container:', '', '']"
polyaxon/polyaxon,latest,/core/polyaxon/polypod/init/dockerfile.py,"INIT_DOCKERFILE_CONTAINER_PREFIX,",1,['']
polyaxon/polyaxon,latest,/core/polyaxon/polypod/init/dockerfile.py,"GENERATE_CONTAINER_NAME,",1,['']
polyaxon/polyaxon,latest,/core/polyaxon/polypod/init/dockerfile.py,"GET_AUTH_CONTEXT_MOUNT,",1,['']
polyaxon/polyaxon,latest,/core/polyaxon/polypod/init/dockerfile.py,"GET_CONNECTIONS_CONTEXT_MOUNT,",1,['']
polyaxon/polyaxon,latest,/core/polyaxon/polypod/init/dockerfile.py,DEF,1,['get_dockerfile_init_container(']
polyaxon/polyaxon,latest,/core/polyaxon/polypod/init/dockerfile.py,POLYAXON_INIT:,1,"['V1PolyaxonInitContainer,']"
polyaxon/polyaxon,latest,/core/polyaxon/polypod/init/dockerfile.py,DOCKERFILE_ARGS:,1,"['V1DockerfileType,']"
polyaxon/polyaxon,latest,/core/polyaxon/polypod/init/dockerfile.py,CONTEXTS:,1,"['PluginsContextsSpec,']"
polyaxon/polyaxon,latest,/core/polyaxon/polypod/init/dockerfile.py,RUN_PATH:,1,"['str,']"
polyaxon/polyaxon,latest,/core/polyaxon/polypod/init/dockerfile.py,RUN_INSTANCE:,1,"['str,']"
polyaxon/polyaxon,latest,/core/polyaxon/polypod/init/dockerfile.py,ENV:,1,"['List[k8s_schemas.V1EnvVar] = None,']"
polyaxon/polyaxon,latest,/core/polyaxon/polypod/init/dockerfile.py,MOUNT_PATH:,1,"['Optional[str] = None,']"
polyaxon/polyaxon,latest,/core/polyaxon/polypod/init/dockerfile.py,ENV,2,"['= to_list(env, check_none=True)', '= env + [get_run_instance_env_var(run_instance)]']"
polyaxon/polyaxon,latest,/core/polyaxon/polypod/init/dockerfile.py,VOLUME_NAME,1,['= (']
polyaxon/polyaxon,latest,/core/polyaxon/polypod/init/dockerfile.py,GET_VOLUME_NAME(MOUNT_PATH),1,['']
polyaxon/polyaxon,latest,/core/polyaxon/polypod/init/dockerfile.py,IF,2,"['mount_path', 'contexts and contexts.auth:']"
polyaxon/polyaxon,latest,/core/polyaxon/polypod/init/dockerfile.py,ELSE,1,['constants.CONTEXT_VOLUME_ARTIFACTS']
polyaxon/polyaxon,latest,/core/polyaxon/polypod/init/dockerfile.py,MOUNT_PATH,1,['= mount_path or CONTEXT_MOUNT_ARTIFACTS']
polyaxon/polyaxon,latest,/core/polyaxon/polypod/init/dockerfile.py,VOLUME_MOUNTS,1,['= [']
polyaxon/polyaxon,latest,/core/polyaxon/polypod/init/dockerfile.py,"GET_CONNECTIONS_CONTEXT_MOUNT(NAME=VOLUME_NAME,",1,['mount_path=mount_path)']
polyaxon/polyaxon,latest,/core/polyaxon/polypod/init/dockerfile.py,],1,['']
polyaxon/polyaxon,latest,/core/polyaxon/polypod/init/dockerfile.py,VOLUME_MOUNTS.APPEND(GET_AUTH_CONTEXT_MOUNT(READ_ONLY=TRUE)),1,['']
polyaxon/polyaxon,latest,/core/polyaxon/polypod/init/dockerfile.py,RETURN,1,['k8s_schemas.V1Container(']
polyaxon/polyaxon,latest,/core/polyaxon/polypod/init/dockerfile.py,"NAME=GENERATE_CONTAINER_NAME(INIT_DOCKERFILE_CONTAINER_PREFIX),",1,['']
polyaxon/polyaxon,latest,/core/polyaxon/polypod/init/dockerfile.py,"IMAGE=POLYAXON_INIT.GET_IMAGE(),",1,['']
polyaxon/polyaxon,latest,/core/polyaxon/polypod/init/dockerfile.py,"IMAGE_PULL_POLICY=POLYAXON_INIT.IMAGE_PULL_POLICY,",1,['']
polyaxon/polyaxon,latest,/core/polyaxon/polypod/init/dockerfile.py,"COMMAND=[""POLYAXON"",",1,"['""docker"", ""generate""],']"
polyaxon/polyaxon,latest,/core/polyaxon/polypod/init/dockerfile.py,ARGS=[,1,['']
polyaxon/polyaxon,latest,/core/polyaxon/polypod/init/dockerfile.py,"""--BUILD-CONTEXT={}"".FORMAT(DOCKERFILE_ARGS.TO_DICT(DUMP=TRUE)),",1,['']
polyaxon/polyaxon,latest,/core/polyaxon/polypod/init/dockerfile.py,"""--DESTINATION={}"".FORMAT(MOUNT_PATH),",1,['']
polyaxon/polyaxon,latest,/core/polyaxon/polypod/init/dockerfile.py,"""--COPY-PATH={}"".FORMAT(CONTEXT_MOUNT_RUN_OUTPUTS_FORMAT.FORMAT(RUN_PATH)),",1,['']
polyaxon/polyaxon,latest,/core/polyaxon/polypod/init/dockerfile.py,"""--TRACK"",",1,['']
polyaxon/polyaxon,latest,/core/polyaxon/polypod/init/dockerfile.py,"],",1,['']
polyaxon/polyaxon,latest,/core/polyaxon/polypod/init/dockerfile.py,"ENV=ENV,",1,['']
polyaxon/polyaxon,latest,/core/polyaxon/polypod/init/dockerfile.py,"RESOURCES=POLYAXON_INIT.GET_RESOURCES(),",1,['']
polyaxon/polyaxon,latest,/core/polyaxon/polypod/init/dockerfile.py,"VOLUME_MOUNTS=VOLUME_MOUNTS,",1,['']
polyaxon/polyaxon,latest,/core/polyaxon/builds/generator/dockerfile.py,POLYAXON_DOCKER_TEMPLATE,1,"['= """"""']"
polyaxon/polyaxon,latest,/core/polyaxon/builds/generator/dockerfile.py,FROM,1,['{{ image }}']
polyaxon/polyaxon,latest,/core/polyaxon/builds/generator/dockerfile.py,{%,28,"['if lang_env -%}', 'endif -%}', 'if shell %}', 'endif -%}', 'if path -%}', 'for path_step in path -%}', 'endfor -%}', 'endif -%}', 'if env -%}', 'for env_step in env -%}', 'endfor -%}', 'endif -%}', 'if copy -%}', 'for copy_step in copy -%}', 'endfor -%}', 'endif -%}', 'if run -%}', 'for step in run -%}', 'endfor -%}', 'endif -%}', 'if post_run_copy -%}', 'for copy_step in post_run_copy -%}', 'endfor -%}', 'endif -%}', 'if uid and gid -%}', 'endif -%}', 'if workdir_path -%}', 'endif -%}']"
polyaxon/polyaxon,latest,/core/polyaxon/builds/generator/dockerfile.py,ENV,6,"['LC_ALL {{ lang_env }}', 'LANG {{ lang_env }}', 'LANGUAGE {{ lang_env }}', 'SHELL {{ shell }}', 'PATH=""${PATH}:{{ path_step }}""', '{{ env_step[0] }} {{ env_step[1] }}']"
polyaxon/polyaxon,latest,/core/polyaxon/builds/generator/dockerfile.py,WORKDIR,1,['{{ workdir }}']
polyaxon/polyaxon,latest,/core/polyaxon/builds/generator/dockerfile.py,COPY,3,"['{{ copy_step[0] }} {{ copy_step[1] }}', '{{ copy_step[0] }} {{ copy_step[1] }}', '{{ workdir_path }} {{ workdir }}']"
polyaxon/polyaxon,latest,/core/polyaxon/builds/generator/dockerfile.py,RUN,2,"['{{ step }}', 'groupadd -g {{ gid }} -r polyaxon && useradd -r -m -g polyaxon -u {{ uid }} {{ username }}']"
polyaxon/polyaxon,latest,/core/polyaxon/builds/generator/dockerfile.py,"""""""",1,['']
polyaxon/polyaxon,latest,/core/polyaxon/schemas/types/dockerfile.py,IMPORT,1,['polyaxon_sdk']
polyaxon/polyaxon,latest,/core/polyaxon/schemas/types/dockerfile.py,FROM,7,"['marshmallow import fields, validates_schema', 'polyaxon.schemas.base import BaseCamelSchema', 'polyaxon.schemas.fields.docker_image import validate_image', 'polyaxon.schemas.fields.ref_or_obj import RefOrObject', 'polyaxon.schemas.fields.str_or_list import StrOrList', 'polyaxon.schemas.types.base import BaseTypeConfig', 'polyaxon.utils.signal_decorators import check_partial']"
polyaxon/polyaxon,latest,/core/polyaxon/schemas/types/dockerfile.py,POLYAXON_DOCKERFILE_NAME,1,"['= ""Dockerfile""']"
polyaxon/polyaxon,latest,/core/polyaxon/schemas/types/dockerfile.py,POLYAXON_DOCKER_WORKDIR,1,"['= ""/code""']"
polyaxon/polyaxon,latest,/core/polyaxon/schemas/types/dockerfile.py,POLYAXON_DOCKER_SHELL,1,"['= ""/bin/bash""']"
polyaxon/polyaxon,latest,/core/polyaxon/schemas/types/dockerfile.py,CLASS,2,"['DockerfileTypeSchema(BaseCamelSchema):', 'V1DockerfileType(BaseTypeConfig, polyaxon_sdk.V1DockerfileType):']"
polyaxon/polyaxon,latest,/core/polyaxon/schemas/types/dockerfile.py,IMAGE,1,"['= RefOrObject(fields.Str(), required=True)']"
polyaxon/polyaxon,latest,/core/polyaxon/schemas/types/dockerfile.py,ENV,1,"['= RefOrObject(fields.Dict(keys=fields.Str(), allow_none=True))']"
polyaxon/polyaxon,latest,/core/polyaxon/schemas/types/dockerfile.py,PATH,1,"['= RefOrObject(fields.List(fields.Str(), allow_none=True))']"
polyaxon/polyaxon,latest,/core/polyaxon/schemas/types/dockerfile.py,COPY,1,"['= RefOrObject(fields.List(StrOrList(), allow_none=True))']"
polyaxon/polyaxon,latest,/core/polyaxon/schemas/types/dockerfile.py,POST_RUN_COPY,1,"['= RefOrObject(fields.List(StrOrList(), allow_none=True))']"
polyaxon/polyaxon,latest,/core/polyaxon/schemas/types/dockerfile.py,RUN,1,"['= RefOrObject(fields.List(fields.Str(), allow_none=True))']"
polyaxon/polyaxon,latest,/core/polyaxon/schemas/types/dockerfile.py,LANG_ENV,1,['= RefOrObject(fields.Str(allow_none=True))']
polyaxon/polyaxon,latest,/core/polyaxon/schemas/types/dockerfile.py,UID,1,['= RefOrObject(fields.Int(allow_none=True))']
polyaxon/polyaxon,latest,/core/polyaxon/schemas/types/dockerfile.py,GID,1,['= RefOrObject(fields.Int(allow_none=True))']
polyaxon/polyaxon,latest,/core/polyaxon/schemas/types/dockerfile.py,USERNAME,1,['= RefOrObject(fields.Str(allow_none=True))']
polyaxon/polyaxon,latest,/core/polyaxon/schemas/types/dockerfile.py,FILENAME,1,['= RefOrObject(fields.Str(allow_none=True))']
polyaxon/polyaxon,latest,/core/polyaxon/schemas/types/dockerfile.py,WORKDIR,1,['= RefOrObject(fields.Str(allow_none=True))']
polyaxon/polyaxon,latest,/core/polyaxon/schemas/types/dockerfile.py,WORKDIR_PATH,1,['= RefOrObject(fields.Str(allow_none=True))']
polyaxon/polyaxon,latest,/core/polyaxon/schemas/types/dockerfile.py,SHELL,1,['= RefOrObject(fields.Str(allow_none=True))']
polyaxon/polyaxon,latest,/core/polyaxon/schemas/types/dockerfile.py,@STATICMETHOD,1,['']
polyaxon/polyaxon,latest,/core/polyaxon/schemas/types/dockerfile.py,DEF,9,"['schema_config():', 'validate_dockerfile(self, data, **kwargs):', 'filename(self):', 'filename(self, filename):', 'workdir(self):', 'workdir(self, workdir):', 'shell(self):', 'shell(self, shell):', 'image_tag(self):']"
polyaxon/polyaxon,latest,/core/polyaxon/schemas/types/dockerfile.py,RETURN,8,"['V1DockerfileType', '(', 'self._workdir if self._workdir is not None else POLYAXON_DOCKER_WORKDIR', 'self._shell if self._shell is not None else POLYAXON_DOCKER_SHELL', 'None', '""latest""', '""latest"" if ""/"" in tagged_image[-1] else tagged_image[-1]', 'tagged_image[-1]']"
polyaxon/polyaxon,latest,/core/polyaxon/schemas/types/dockerfile.py,@VALIDATES_SCHEMA,1,['']
polyaxon/polyaxon,latest,/core/polyaxon/schemas/types/dockerfile.py,@CHECK_PARTIAL,1,['']
polyaxon/polyaxon,latest,/core/polyaxon/schemas/types/dockerfile.py,"VALIDATE_IMAGE(DATA.GET(""IMAGE""))",1,['']
polyaxon/polyaxon,latest,/core/polyaxon/schemas/types/dockerfile.py,"""""""DOCKERFILE",1,['type.']
polyaxon/polyaxon,latest,/core/polyaxon/schemas/types/dockerfile.py,THIS,2,"['type allows you to easily construct a dockerfile without', 'could be very useful to leverage any cached commands before copying new artifacts.']"
polyaxon/polyaxon,latest,/core/polyaxon/schemas/types/dockerfile.py,THE,6,"['need to clone repo or download a file. It exposes a very simple interface for generating', 'inputs definition', 'params usage', 'inputs definition', 'params usage', 'COPY commands will be placed after RUN commands.']"
polyaxon/polyaxon,latest,/core/polyaxon/schemas/types/dockerfile.py,A,1,['dockerfile to build your container.']
polyaxon/polyaxon,latest,/core/polyaxon/schemas/types/dockerfile.py,ARGS:,1,['']
polyaxon/polyaxon,latest,/core/polyaxon/schemas/types/dockerfile.py,IMAGE:,1,['str']
polyaxon/polyaxon,latest,/core/polyaxon/schemas/types/dockerfile.py,ENV:,1,"['Dict, optional']"
polyaxon/polyaxon,latest,/core/polyaxon/schemas/types/dockerfile.py,PATH:,1,"['List[str], optional']"
polyaxon/polyaxon,latest,/core/polyaxon/schemas/types/dockerfile.py,COPY:,1,"['Union[List[str], List[[str, str]], optional']"
polyaxon/polyaxon,latest,/core/polyaxon/schemas/types/dockerfile.py,POST_RUN_COPY:,1,"['Union[List[str], List[[str, str]], optional']"
polyaxon/polyaxon,latest,/core/polyaxon/schemas/types/dockerfile.py,RUN:,1,"['List[str], optional']"
polyaxon/polyaxon,latest,/core/polyaxon/schemas/types/dockerfile.py,LANG_ENV:,1,"['str, optional']"
polyaxon/polyaxon,latest,/core/polyaxon/schemas/types/dockerfile.py,UID:,1,"['str, optional']"
polyaxon/polyaxon,latest,/core/polyaxon/schemas/types/dockerfile.py,GID:,1,"['str, optional']"
polyaxon/polyaxon,latest,/core/polyaxon/schemas/types/dockerfile.py,USERNAME:,1,"[""str, optional, default 'polyaxon'""]"
polyaxon/polyaxon,latest,/core/polyaxon/schemas/types/dockerfile.py,FILENAME:,1,"['str, optional']"
polyaxon/polyaxon,latest,/core/polyaxon/schemas/types/dockerfile.py,WORKDIR:,1,"['str, optional']"
polyaxon/polyaxon,latest,/core/polyaxon/schemas/types/dockerfile.py,WORKDIR_PATH:,1,"['str, optional']"
polyaxon/polyaxon,latest,/core/polyaxon/schemas/types/dockerfile.py,SHELL:,1,"['str, optional']"
polyaxon/polyaxon,latest,/core/polyaxon/schemas/types/dockerfile.py,```YAML,5,"['', '', '', '', '']"
polyaxon/polyaxon,latest,/core/polyaxon/schemas/types/dockerfile.py,>>>,77,"['inputs:', '- name: test1', 'type: dockerfile', 'params:', 'test1:', 'value:', 'image: test', 'run: [""pip install package1""]', ""env: {'KEY1': 'en_US.UTF-8', 'KEY2':2}"", 'version:  1.1', 'kind: component', 'run:', 'kind: job', 'init:', '- dockerfile:', 'image: test', 'run: [""pip install package1""]', ""env: {'KEY1': 'en_US.UTF-8', 'KEY2':2}"", '...', 'from polyaxon import types', 'from polyaxon.schemas import types', 'from polyaxon.polyflow import V1IO', 'inputs = [', 'V1IO(', 'name=""test1"",', 'type=types.DOCKERFILE,', '),', ']', 'from polyaxon import types', 'from polyaxon.schemas import types', 'from polyaxon.polyflow import V1Param', 'params = {', '""test1"": V1Param(', 'value=types.V1DockerfileType(', 'image=""test:version"",', 'run=[""pip install package1""],', ""env={'KEY1': 'en_US.UTF-8', 'KEY2':2}"", ')', '),', '}', 'from polyaxon.polyflow import V1Component, V1Init, V1Job', 'from polyaxon.schemas.types import V1DockerfileType', 'from polyaxon.k8s import k8s_schemas', 'component = V1Component(', 'run=V1Job(', 'init=[', 'V1Init(', 'dockerfile=V1DockerfileType(', 'image=""test"",', 'run=[""pip install package1""],', ""env={'KEY1': 'en_US.UTF-8', 'KEY2':2},"", ')', '),', '],', 'container=k8s_schemas.V1Container(...)', ')', ')', 'image: image:tag', 'env:', 'KEY1: value1', 'KEY2: value2', 'path:', '- module/add/to/path', 'copy:', '- copy/local/requirements.txt', '- [copy/.cache/dir, /destination]', 'run:', '- pip install ...', '- mv foo bar', 'postRunCopy:', '- copy/local/path', '- [copy/local/path, /path/to/user/in/container]', 'langEnv: en_US.UTF-8', 'uid: 2222', 'gid: 1111', 'filename: Dockerfile2', 'workdir: ../my-code']"
polyaxon/polyaxon,latest,/core/polyaxon/schemas/types/dockerfile.py,```,7,"['', '', '', '', '', '', '']"
polyaxon/polyaxon,latest,/core/polyaxon/schemas/types/dockerfile.py,```PYTHON,3,"['', '', '']"
polyaxon/polyaxon,latest,/core/polyaxon/schemas/types/dockerfile.py,*,13,"['image: the base image to use, is will exposed as `FROM` command in the dockerfile.', 'env: environment variables dictionary that will be exposed as `ENV` sections.', 'path: list of paths to be added to your `PATH` environment variable.', 'copy: a list a copy commands that will be exposed as list of COPY commands. You can pass a', 'postRunCopy: Similar to the copy section,', 'run: a list a run commands that will be exposed as list of RUN commands.', 'langEnv: if passed it will expose these environment variable: ENV LC_ALL, LANG, LANGUAGE', 'uid and gid: will create a new user based on these 2 values.', ""username: an optional name to use for the uid/gid, default is 'polyaxon' user."", 'filename: an optional name for your dockerfile, default is Dockerfile.', 'workdir: the WORKDIR for your dockerfile, default is `/code`', 'workdirPath: the local workdir to copy to the docker container.', 'shell: shell type environment variable, default `/bin/bash`.']"
polyaxon/polyaxon,latest,/core/polyaxon/schemas/types/dockerfile.py,"UNION[LIST[STR],",1,"['List[[str, str]], if a str is passed it will be placed under the workdir,']"
polyaxon/polyaxon,latest,/core/polyaxon/schemas/types/dockerfile.py,IF,5,"['[str, str] is passed the path will be placed under the second string.', 'not self.image:', 'len(tagged_image) == 1:', 'len(tagged_image) == 2:', 'len(tagged_image) == 3:']"
polyaxon/polyaxon,latest,/core/polyaxon/schemas/types/dockerfile.py,**N.B.**,1,"['this is not a path, if you need to generate the dockerfile on a custom path,']"
polyaxon/polyaxon,latest,/core/polyaxon/schemas/types/dockerfile.py,YOU,1,['will need to set the path key on the init container definition.']
polyaxon/polyaxon,latest,/core/polyaxon/schemas/types/dockerfile.py,"""""""",1,['']
polyaxon/polyaxon,latest,/core/polyaxon/schemas/types/dockerfile.py,IDENTIFIER,1,"['= ""dockerfile""']"
polyaxon/polyaxon,latest,/core/polyaxon/schemas/types/dockerfile.py,SCHEMA,1,['= DockerfileTypeSchema']
polyaxon/polyaxon,latest,/core/polyaxon/schemas/types/dockerfile.py,REDUCED_ATTRIBUTES,1,['= [']
polyaxon/polyaxon,latest,/core/polyaxon/schemas/types/dockerfile.py,"""IMAGE"",",1,['']
polyaxon/polyaxon,latest,/core/polyaxon/schemas/types/dockerfile.py,"""ENV"",",1,['']
polyaxon/polyaxon,latest,/core/polyaxon/schemas/types/dockerfile.py,"""PATH"",",1,['']
polyaxon/polyaxon,latest,/core/polyaxon/schemas/types/dockerfile.py,"""COPY"",",1,['']
polyaxon/polyaxon,latest,/core/polyaxon/schemas/types/dockerfile.py,"""POSTRUNCOPY"",",1,['']
polyaxon/polyaxon,latest,/core/polyaxon/schemas/types/dockerfile.py,"""RUN"",",1,['']
polyaxon/polyaxon,latest,/core/polyaxon/schemas/types/dockerfile.py,"""LANGENV"",",1,['']
polyaxon/polyaxon,latest,/core/polyaxon/schemas/types/dockerfile.py,"""UID"",",1,['']
polyaxon/polyaxon,latest,/core/polyaxon/schemas/types/dockerfile.py,"""GID"",",1,['']
polyaxon/polyaxon,latest,/core/polyaxon/schemas/types/dockerfile.py,"""USERNAME"",",1,['']
polyaxon/polyaxon,latest,/core/polyaxon/schemas/types/dockerfile.py,"""FILENAME"",",1,['']
polyaxon/polyaxon,latest,/core/polyaxon/schemas/types/dockerfile.py,"""WORKDIR"",",1,['']
polyaxon/polyaxon,latest,/core/polyaxon/schemas/types/dockerfile.py,"""WORKDIRPATH"",",1,['']
polyaxon/polyaxon,latest,/core/polyaxon/schemas/types/dockerfile.py,"""SHELL"",",1,['']
polyaxon/polyaxon,latest,/core/polyaxon/schemas/types/dockerfile.py,],1,['']
polyaxon/polyaxon,latest,/core/polyaxon/schemas/types/dockerfile.py,@PROPERTY,4,"['', '', '', '']"
polyaxon/polyaxon,latest,/core/polyaxon/schemas/types/dockerfile.py,SELF._FILENAME,2,"['if self._filename is not None else POLYAXON_DOCKERFILE_NAME', '= filename']"
polyaxon/polyaxon,latest,/core/polyaxon/schemas/types/dockerfile.py,),1,['']
polyaxon/polyaxon,latest,/core/polyaxon/schemas/types/dockerfile.py,@FILENAME.SETTER,1,['']
polyaxon/polyaxon,latest,/core/polyaxon/schemas/types/dockerfile.py,@WORKDIR.SETTER,1,['']
polyaxon/polyaxon,latest,/core/polyaxon/schemas/types/dockerfile.py,SELF._WORKDIR,1,['= workdir']
polyaxon/polyaxon,latest,/core/polyaxon/schemas/types/dockerfile.py,@SHELL.SETTER,1,['']
polyaxon/polyaxon,latest,/core/polyaxon/schemas/types/dockerfile.py,SELF._SHELL,1,['= shell']
polyaxon/polyaxon,latest,/core/polyaxon/schemas/types/dockerfile.py,TAGGED_IMAGE,1,"['= self.image.split("":"")']"
polyaxon/polyaxon,latest,/sandbox/coreapi/Dockerfile.dev,FROM,1,['polyaxon-base-dev']
polyaxon/polyaxon,latest,/sandbox/coreapi/Dockerfile.dev,LABEL,1,"['maintainer=""Polyaxon, Inc. <contact@polyaxon.com>""']"
polyaxon/polyaxon,latest,/sandbox/coreapi/Dockerfile.dev,RUN,3,"['apt-get -y update &&     apt-get -y install nginx &&     apt-get -y install libldap2-dev libsasl2-dev &&     apt-get autoremove &&     apt-get clean &&     rm -rf /var/lib/apt/lists/*', 'pip3 install --no-cache-dir -r /requirements/requirements-dev.txt', 'pip3 install -e /polyaxon/core']"
polyaxon/polyaxon,latest,/sandbox/coreapi/Dockerfile.dev,COPY,4,"['/platform/coreapi/requirements /requirements/', '/core /polyaxon/core', '/sdks/python/http_client/v1 /polyaxon/sdks/python/http_client/v1', '/platform /polyaxon/platform']"
polyaxon/polyaxon,latest,/sandbox/coreapi/Dockerfile.dev,VOLUME,1,['/polyaxon']
polyaxon/polyaxon,latest,/sandbox/coreapi/Dockerfile.dev,WORKDIR,2,"['/polyaxon', '/polyaxon/platform/coreapi']"
polyaxon/polyaxon,latest,/sandbox/coreapi/Dockerfile.dev,ENV,4,"['PYTHONPATH=""${PYTHONPATH}:/polyaxon/sdks/python/http_client/v1""', 'PYTHONPATH=""${PYTHONPATH}:/polyaxon/core""', 'PYTHONPATH=""${PYTHONPATH}:/polyaxon/platform/polycommon""', 'PYTHONPATH=""${PYTHONPATH}:/polyaxon/platform/coredb""']"
polyaxon/polyaxon,latest,/site/docs/intro/builds/building-containers-custom-dockerfile.md,---,2,"['', '']"
polyaxon/polyaxon,latest,/site/docs/intro/builds/building-containers-custom-dockerfile.md,TITLE:,1,"['""Building containers with custom dockerfile""']"
polyaxon/polyaxon,latest,/site/docs/intro/builds/building-containers-custom-dockerfile.md,SUB_LINK:,1,"['""builds/building-containers-custom-dockerfile""']"
polyaxon/polyaxon,latest,/site/docs/intro/builds/building-containers-custom-dockerfile.md,META_TITLE:,1,"['""Building containers with custom dockerfile - Polyaxon quick start tutorial - Core Concepts""']"
polyaxon/polyaxon,latest,/site/docs/intro/builds/building-containers-custom-dockerfile.md,META_DESCRIPTION:,1,"['""Building containers with custom dockerfile - Become familiar with the ecosystem of Polyaxon tools with a top-level overview and useful links to get you started.""']"
polyaxon/polyaxon,latest,/site/docs/intro/builds/building-containers-custom-dockerfile.md,VISIBILITY:,1,['public']
polyaxon/polyaxon,latest,/site/docs/intro/builds/building-containers-custom-dockerfile.md,STATUS:,1,['published']
polyaxon/polyaxon,latest,/site/docs/intro/builds/building-containers-custom-dockerfile.md,TAGS:,1,['']
polyaxon/polyaxon,latest,/site/docs/intro/builds/building-containers-custom-dockerfile.md,-,4,"['tutorials', 'concepts', 'quick-start', 'git:']"
polyaxon/polyaxon,latest,/site/docs/intro/builds/building-containers-custom-dockerfile.md,SIDEBAR:,1,"['""intro""']"
polyaxon/polyaxon,latest,/site/docs/intro/builds/building-containers-custom-dockerfile.md,IN,3,"['the previous tutorial we showed how to create the docker image `polyaxon/polyaxon-quick-start` using the init Dockerfile.', 'this tutorial we will show how to use a custom Dockerfile from a local folder or a remote repo.', 'our case it should look at the root of the uploads folder.']"
polyaxon/polyaxon,latest,/site/docs/intro/builds/building-containers-custom-dockerfile.md,>,1,"['**Note**: You can build docker images outside of Polyaxon, or use your own system.']"
polyaxon/polyaxon,latest,/site/docs/intro/builds/building-containers-custom-dockerfile.md,USING,1,"['the `job` runtime, users can use Polyaxon to build docker images, there are a couple of build options and components provided.']"
polyaxon/polyaxon,latest,/site/docs/intro/builds/building-containers-custom-dockerfile.md,FIRST,1,['we need to clone the quick-start repo which has a `Dockerfile` and `requirements.txt`.']
polyaxon/polyaxon,latest,/site/docs/intro/builds/building-containers-custom-dockerfile.md,TO,1,['build the image that we are using in this quick-start tutorial using the dockerfile in the repo:']
polyaxon/polyaxon,latest,/site/docs/intro/builds/building-containers-custom-dockerfile.md,```YAML,3,"['', '', '']"
polyaxon/polyaxon,latest,/site/docs/intro/builds/building-containers-custom-dockerfile.md,FROM,1,['tensorflow/tensorflow:2.2.0']
polyaxon/polyaxon,latest,/site/docs/intro/builds/building-containers-custom-dockerfile.md,LABEL,1,"['maintainer=""Polyaxon, Inc. <contact@polyaxon.com>""']"
polyaxon/polyaxon,latest,/site/docs/intro/builds/building-containers-custom-dockerfile.md,WORKDIR,1,['/code']
polyaxon/polyaxon,latest,/site/docs/intro/builds/building-containers-custom-dockerfile.md,COPY,2,"['requirements.txt /code', 'model.py /code']"
polyaxon/polyaxon,latest,/site/docs/intro/builds/building-containers-custom-dockerfile.md,RUN,1,['pip install --no-cache-dir -r /code/requirements.txt']
polyaxon/polyaxon,latest,/site/docs/intro/builds/building-containers-custom-dockerfile.md,```,3,"['', '', '']"
polyaxon/polyaxon,latest,/site/docs/intro/builds/building-containers-custom-dockerfile.md,WE,2,"['need to adjust the polyaxonfile to handle the uploads folder:', 'are also passing a parameter `destination` which is of type [image](/docs/core/specification/types/),']"
polyaxon/polyaxon,latest,/site/docs/intro/builds/building-containers-custom-dockerfile.md,VERSION:,2,"['1', '1']"
polyaxon/polyaxon,latest,/site/docs/intro/builds/building-containers-custom-dockerfile.md,KIND:,2,"['operation', 'operation']"
polyaxon/polyaxon,latest,/site/docs/intro/builds/building-containers-custom-dockerfile.md,NAME:,2,"['build', 'build']"
polyaxon/polyaxon,latest,/site/docs/intro/builds/building-containers-custom-dockerfile.md,PARAMS:,2,"['', '']"
polyaxon/polyaxon,latest,/site/docs/intro/builds/building-containers-custom-dockerfile.md,DESTINATION:,2,"['', '']"
polyaxon/polyaxon,latest,/site/docs/intro/builds/building-containers-custom-dockerfile.md,CONNECTION:,2,"['docker-connection', 'docker-connection']"
polyaxon/polyaxon,latest,/site/docs/intro/builds/building-containers-custom-dockerfile.md,VALUE:,4,"['polyaxon/polyaxon-quick-start', '""{{ globals.run_artifacts_path }}/uploads""', 'polyaxon/polyaxon-quick-start', '""{{ globals.artifacts_path }}/polyaxon-quick-start""']"
polyaxon/polyaxon,latest,/site/docs/intro/builds/building-containers-custom-dockerfile.md,CONTEXT:,2,"['', '']"
polyaxon/polyaxon,latest,/site/docs/intro/builds/building-containers-custom-dockerfile.md,HUBREF:,2,"['kaniko', 'kaniko']"
polyaxon/polyaxon,latest,/site/docs/intro/builds/building-containers-custom-dockerfile.md,THE,2,"[""`hubRef` is the reference of the component we are going to run, in this case, it's a Kaniko component for building the image."", '[docker-connection](/docs/setup/connections/registry/) is a [connection](/docs/setup/connections/)']"
polyaxon/polyaxon,latest,/site/docs/intro/builds/building-containers-custom-dockerfile.md,IT,1,['defines the name of the image and the connection to use for pushing the image.']
polyaxon/polyaxon,latest,/site/docs/intro/builds/building-containers-custom-dockerfile.md,THAT,1,['we configured to authenticate Kaniko to push images.']
polyaxon/polyaxon,latest,/site/docs/intro/builds/building-containers-custom-dockerfile.md,YOU,2,"['amy notice that the difference between this polyaxonfile and the previous polyaxonfile is that we are passing a context value to point to where Kaniko should find the dockerfile.', 'can notice that the context value is now pointing to where the repo is being cloned using the git initializer.']"
polyaxon/polyaxon,latest,/site/docs/intro/builds/building-containers-custom-dockerfile.md,SIMILAR,1,"['to the previous section, we can adjust our polyaxonfile to expect a Dockerfile coming from a remote repo:']"
polyaxon/polyaxon,latest,/site/docs/intro/builds/building-containers-custom-dockerfile.md,RUNPATCH:,1,['']
polyaxon/polyaxon,latest,/site/docs/intro/builds/building-containers-custom-dockerfile.md,INIT:,1,['']
polyaxon/polyaxon,latest,/site/docs/intro/builds/building-containers-custom-dockerfile.md,URL:,1,"['""https://github.com/org/polyaxon/polyaxon-quick-start""']"
mars-project/mars,latest,/mars/deploy/kubernetes/docker/Dockerfile,ARG,1,['BASE_CONTAINER=marsproject/mars-base']
mars-project/mars,latest,/mars/deploy/kubernetes/docker/Dockerfile,FROM,1,['${BASE_CONTAINER}']
mars-project/mars,latest,/mars/deploy/kubernetes/docker/Dockerfile,COPY,1,['. /opt/mars/']
mars-project/mars,latest,/mars/deploy/kubernetes/docker/Dockerfile,RUN,3,"['apt-get -yq update --allow-releaseinfo-change   && apt-get -yq install gcc g++   && curl -fsSL https://deb.nodesource.com/setup_14.x | sudo -E bash -   && sudo apt-get install -y nodejs   && /opt/conda/bin/pip install -e /opt/mars   && apt-get -yq remove gcc g++ nodejs   && apt-get -yq autoremove   && apt-get -yq clean   && rm -rf /var/lib/apt/lists/*   && rm -rf /usr/local/lib/node_modules', 'mkdir -p /srv', 'cp /opt/mars/mars/deploy/kubernetes/docker/docker-logging.conf /srv/logging.conf   && cp /opt/mars/mars/deploy/kubernetes/docker/entrypoint.sh /srv/entrypoint.sh   && chmod a+x /srv/*.sh']"
mars-project/mars,latest,/mars/deploy/kubernetes/docker/Dockerfile,WORKDIR,1,['/srv']
mars-project/mars,latest,/mars/deploy/kubernetes/docker/Dockerfile,ENTRYPOINT,1,"['[ ""/srv/entrypoint.sh"" ]']"
mars-project/mars,latest,/mars/deploy/kubernetes/docker/Dockerfile.base,ARG,1,['BASE_CONTAINER=continuumio/miniconda3:4.9.2']
mars-project/mars,latest,/mars/deploy/kubernetes/docker/Dockerfile.base,FROM,1,['${BASE_CONTAINER}']
mars-project/mars,latest,/mars/deploy/kubernetes/docker/Dockerfile.base,COPY,1,['retry.sh /srv/retry.sh']
mars-project/mars,latest,/mars/deploy/kubernetes/docker/Dockerfile.base,RUN,1,['/srv/retry.sh 3 /opt/conda/bin/conda install     cloudpickle     cython     greenlet     mkl     numba     numexpr     numpy\\>=1.14.0     pandas\\>=1.0.0     psutil     scikit-learn     scipy     sqlalchemy     tornado     lz4   && /srv/retry.sh 3 /opt/conda/bin/conda install -c conda-forge     libiconv     pyarrow\\>=1.0     tiledb-py     python-kubernetes     uvloop   && /opt/conda/bin/conda clean --all -f -y']
mars-project/mars,latest,/mars/deploy/kubernetes/tests/Dockerfile.test,ARG,1,['BASE_CONTAINER=marsproject/mars-base']
mars-project/mars,latest,/mars/deploy/kubernetes/tests/Dockerfile.test,FROM,1,['${BASE_CONTAINER}']
mars-project/mars,latest,/mars/deploy/kubernetes/tests/Dockerfile.test,RUN,5,"['/srv/retry.sh 3 /opt/conda/bin/conda install -c pkgs/main     coverage\\>=5.0 cloudpickle   && conda clean --all -f -y', 'apt-get -yq update --allow-releaseinfo-change', 'apt-get -yq install git gcc g++', 'echo ""import coverage; coverage.process_startup()"" >     $(/opt/conda/bin/python -c ""import site; print(site.getsitepackages()[-1])"")/coverage.pth', 'chmod a+x /srv/*.sh']"
mars-project/mars,latest,/mars/deploy/kubernetes/tests/Dockerfile.test,COPY,4,"['docker-logging.conf /srv/logging.conf', 'build_ext.sh /srv/build_ext.sh', 'entrypoint.sh /srv/entrypoint.sh', 'graceful_stop.sh /srv/graceful_stop.sh']"
Waikato/moa,latest,/docker/devel-gui.Dockerfile,FROM,1,['ubuntu:18.04']
Waikato/moa,latest,/docker/devel-gui.Dockerfile,RUN,10,"['mkdir /app', 'ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone', 'apt-get update && apt-get install -y --no-install-recommends         wget         git         ca-certificates         default-jre         openjdk-8-jdk         maven         unzip         texlive-full         &&     apt-get clean &&     rm -rf /var/lib/apt/lists/*', 'git clone https://github.com/Waikato/moa.git', 'cd moa &&     export JAVA_HOME=""/usr"" &&     mvn clean install -DskipTests=true &&     mvn -f release.xml package -DskipTests=true', ""cd /app/moa/target/ && ls -1 | egrep 'moa-.*-SNAPSHOT-bin.zip' | xargs cp -t /app"", 'rm -rf moa', ""ls -1 | egrep 'moa-.*-SNAPSHOT-bin.zip' | xargs unzip"", 'rm *.zip', 'mv moa-* moa']"
Waikato/moa,latest,/docker/devel-gui.Dockerfile,WORKDIR,1,['/app']
Waikato/moa,latest,/docker/devel-gui.Dockerfile,ENV,1,['TZ=Europe/Paris']
Waikato/moa,latest,/docker/devel-gui.Dockerfile,CMD,1,['moa/bin/moa.sh']
Waikato/moa,latest,/docker/moa-gui.Dockerfile,FROM,1,['ubuntu:18.04']
Waikato/moa,latest,/docker/moa-gui.Dockerfile,RUN,3,"['mkdir /app', 'apt-get update && apt-get install -y --no-install-recommends         wget         unzip         curl         ca-certificates         default-jre         &&     apt-get clean &&     rm -rf /var/lib/apt/lists/*', 'url=$(curl --silent ""https://api.github.com/repos/Waikato/moa/releases/latest""  | grep -Po \'""browser_download_url"": ""\\K.*-bin\\.zip(?="")\') &&     wget $url &&     file=$(echo $url | grep -Po \'/[0-9.]{1,}\\/\\K.*[^-bin.zip]\') &&     unzip $file-bin.zip && mv $file moa &&     rm $file-bin.zip']"
Waikato/moa,latest,/docker/moa-gui.Dockerfile,WORKDIR,1,['/app']
Waikato/moa,latest,/docker/moa-gui.Dockerfile,CMD,1,['moa/bin/moa.sh']
tensorlayer/hyperpose,latest,/Dockerfile,FROM,1,['nvidia/cuda:10.0-cudnn7-devel-ubuntu18.04']
tensorlayer/hyperpose,latest,/Dockerfile,RUN,9,"['echo \'Acquire::Retries ""5"";\' > /etc/apt/apt.conf.d/99AcquireRetries', 'apt update --allow-unauthenticated', 'version=""7.0.0-1+cuda10.0"" ;     apt install -y     libnvinfer7=${version} libnvonnxparsers7=${version} libnvparsers7=${version}     libnvinfer-plugin7=${version} libnvinfer-dev=${version} libnvonnxparsers-dev=${version}     libnvparsers-dev=${version} libnvinfer-plugin-dev=${version} &&     apt-mark hold     libnvinfer7 libnvonnxparsers7 libnvparsers7 libnvinfer-plugin7 libnvinfer-dev libnvonnxparsers-dev libnvparsers-dev libnvinfer-plugin-dev ', 'apt install -y software-properties-common &&     add-apt-repository ""deb http://security.ubuntu.com/ubuntu xenial-security main"" &&     APT_DEPS=""git cmake wget zip libgtk-3-dev libavcodec-dev libavformat-dev libswscale-dev libtbb2 libtbb-dev libjpeg-dev libpng-dev libtiff-dev libjasper-dev libdc1394-22-dev libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev x264 v4l-utils python3-dev python3-pip libcanberra-gtk-module libcanberra-gtk3-module"" &&     apt install -y $APT_DEPS || apt install -y $APT_DEPS &&     python3 -m pip install numpy', 'wget https://github.com/opencv/opencv/archive/refs/tags/4.4.0.zip && unzip 4.4.0.zip &&     cd opencv-4.4.0 && mkdir build && cd build &&     cmake .. -DCMAKE_BUILD_TYPE=Release              -DCMAKE_INSTALL_PREFIX=/usr/local              -DWITH_TBB=ON              -DWITH_V4L=ON              -DBUILD_TESTS=OFF              -DBUILD_OPENCV_PYTHON3=OFF &&     make -j && make install', 'apt install -y python3-dev python3-pip subversion libgflags-dev', ""( [ `find /hyperpose/pre_installed_models -regex '.*\\.\\(onnx\\|uff\\)' | wc -l` > 0 ] &&     mkdir -p /hyperpose/data && mv /hyperpose/pre_installed_models/ /hyperpose/data/models ) ||     for file in $(find /hyperpose/scripts -type f -iname 'download-*-model.sh'); do sh $file; done"", '/hyperpose/scripts/download-test-data.sh', 'cd hyperpose && mkdir build && cd build &&     cmake .. -DCMAKE_BUILD_TYPE=Release && make -j']"
tensorlayer/hyperpose,latest,/Dockerfile,COPY,1,['. /hyperpose']
tensorlayer/hyperpose,latest,/Dockerfile,WORKDIR,1,['/hyperpose/build']
tensorlayer/hyperpose,latest,/Dockerfile,ENTRYPOINT,1,"['[""./hyperpose-cli""]']"
tensorlayer/hyperpose,latest,/Dockerfile.cu102.bk,FROM,1,['nvidia/cuda:10.2-cudnn8-devel-ubuntu18.04']
tensorlayer/hyperpose,latest,/Dockerfile.cu102.bk,RUN,9,"['echo \'Acquire::Retries ""5"";\' > /etc/apt/apt.conf.d/99AcquireRetries', 'apt update --allow-unauthenticated', 'version=""8.0.0-1+cuda10.2"" ;     apt install -y     libnvinfer8=${version} libnvonnxparsers8=${version} libnvparsers8=${version}     libnvinfer-plugin8=${version} libnvinfer-dev=${version} libnvonnxparsers-dev=${version}     libnvparsers-dev=${version} libnvinfer-plugin-dev=${version} &&     apt-mark hold     libnvinfer8 libnvonnxparsers8 libnvparsers8 libnvinfer-plugin8 libnvinfer-dev libnvonnxparsers-dev libnvparsers-dev libnvinfer-plugin-dev', 'apt install -y software-properties-common &&     add-apt-repository ""deb http://security.ubuntu.com/ubuntu xenial-security main"" &&     APT_DEPS=""git cmake wget zip libgtk-3-dev libavcodec-dev libavformat-dev libswscale-dev libtbb2 libtbb-dev libjpeg-dev libpng-dev libtiff-dev libjasper-dev libdc1394-22-dev libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev x264 v4l-utils python3-dev python3-pip libcanberra-gtk-module libcanberra-gtk3-module"" &&     apt install -y $APT_DEPS || apt install -y $APT_DEPS &&     python3 -m pip install numpy', 'wget https://github.com/opencv/opencv/archive/refs/tags/4.4.0.zip && unzip 4.4.0.zip &&     cd opencv-4.4.0 && mkdir build && cd build &&     cmake .. -DCMAKE_BUILD_TYPE=Release              -DCMAKE_INSTALL_PREFIX=/usr/local              -DWITH_TBB=ON              -DWITH_V4L=ON              -DBUILD_TESTS=OFF              -DBUILD_OPENCV_PYTHON3=OFF &&     make -j && make install', 'apt install -y python3-dev python3-pip subversion libgflags-dev', ""( [ `find /hyperpose/pre_installed_models -regex '.*\\.\\(onnx\\|uff\\)' | wc -l` > 0 ] &&     mkdir -p /hyperpose/data && mv /hyperpose/pre_installed_models/ /hyperpose/data/models ) ||     for file in $(find /hyperpose/scripts -type f -iname 'download-*-model.sh'); do sh $file; done"", '/hyperpose/scripts/download-test-data.sh', 'cd hyperpose && mkdir build && cd build &&     cmake .. -DCMAKE_BUILD_TYPE=Release && make -j']"
tensorlayer/hyperpose,latest,/Dockerfile.cu102.bk,COPY,1,['. /hyperpose']
tensorlayer/hyperpose,latest,/Dockerfile.cu102.bk,WORKDIR,1,['/hyperpose/build']
tensorlayer/hyperpose,latest,/Dockerfile.cu102.bk,ENTRYPOINT,1,"['[""./hyperpose-cli""]']"
opendatacam/opendatacam,latest,/docker/build/xavier/Dockerfile,FROM,1,['opendatacam/opendatacam-darknet-base:v1.0.0-odc-Yolo-v3-xavier']
opendatacam/opendatacam,latest,/docker/build/xavier/Dockerfile,ENV,1,['DEBIAN_FRONTEND noninteractive']
opendatacam/opendatacam,latest,/docker/build/xavier/Dockerfile,RUN,7,"['apt-get update && apt-get install -y jq wget', 'mkdir opendatacam_videos && cd opendatacam_videos && wget https://github.com/opendatacam/opendatacam/raw/development/public/static/demo/demo.mp4', 'curl -sL https://deb.nodesource.com/setup_12.x | bash - &&     apt-get install -y nodejs', 'npm install', 'npm run build', ""sed -i -e 's+TO_REPLACE_PATH_TO_DARKNET+/var/local/darknet+g' config.json &&   sed -i -e 's+TO_REPLACE_VIDEO_INPUT+file+g' config.json &&   sed -i -e 's+TO_REPLACE_NEURAL_NETWORK+yolov4+g' config.json"", 'chmod 777 launch.sh']"
opendatacam/opendatacam,latest,/docker/build/xavier/Dockerfile,WORKDIR,2,"['/var/local/darknet', '/var/local/opendatacam']"
opendatacam/opendatacam,latest,/docker/build/xavier/Dockerfile,COPY,4,"['yolov4.weights yolov4.weights', './package*.json /var/local/opendatacam/', './ /var/local/opendatacam', 'docker/build/xavier/launch.sh launch.sh']"
opendatacam/opendatacam,latest,/docker/build/xavier/Dockerfile,EXPOSE,1,['8080 8070 8090']
opendatacam/opendatacam,latest,/docker/build/xavier/Dockerfile,CMD,1,"['[""./launch.sh""]']"
opendatacam/opendatacam,latest,/docker/build/nano/Dockerfile,FROM,1,['opendatacam/opendatacam-darknet-base:v1.0.0-odc-Yolo-v3-nano']
opendatacam/opendatacam,latest,/docker/build/nano/Dockerfile,ENV,1,['DEBIAN_FRONTEND noninteractive']
opendatacam/opendatacam,latest,/docker/build/nano/Dockerfile,RUN,7,"['apt-get update && apt-get install -y jq wget', 'mkdir opendatacam_videos && cd opendatacam_videos && wget https://github.com/opendatacam/opendatacam/raw/development/public/static/demo/demo.mp4', 'curl -sL https://deb.nodesource.com/setup_12.x | bash - &&     apt-get install -y nodejs', 'npm install', 'npm run build', ""sed -i -e 's+TO_REPLACE_PATH_TO_DARKNET+/var/local/darknet+g' config.json &&   sed -i -e 's+TO_REPLACE_VIDEO_INPUT+file+g' config.json &&   sed -i -e 's+TO_REPLACE_NEURAL_NETWORK+yolov4-tiny+g' config.json"", 'chmod 777 launch.sh']"
opendatacam/opendatacam,latest,/docker/build/nano/Dockerfile,WORKDIR,2,"['/var/local/darknet', '/var/local/opendatacam']"
opendatacam/opendatacam,latest,/docker/build/nano/Dockerfile,COPY,4,"['yolov4-tiny.weights yolov4-tiny.weights', './package*.json /var/local/opendatacam/', './ /var/local/opendatacam', 'docker/build/nano/launch.sh launch.sh']"
opendatacam/opendatacam,latest,/docker/build/nano/Dockerfile,EXPOSE,1,['8080 8070 8090']
opendatacam/opendatacam,latest,/docker/build/nano/Dockerfile,CMD,1,"['[""./launch.sh""]']"
opendatacam/opendatacam,latest,/docker/build/desktop/Dockerfile,FROM,1,['opendatacam/opendatacam-darknet-base:v1.0.0-odc-Yolo-v3-desktop']
opendatacam/opendatacam,latest,/docker/build/desktop/Dockerfile,ENV,1,['DEBIAN_FRONTEND noninteractive']
opendatacam/opendatacam,latest,/docker/build/desktop/Dockerfile,RUN,7,"['apt-get update && apt-get install -y jq wget', 'mkdir opendatacam_videos && cd opendatacam_videos && wget https://github.com/opendatacam/opendatacam/raw/development/public/static/demo/demo.mp4', 'curl -sL https://deb.nodesource.com/setup_12.x | bash - &&     apt-get install -y nodejs', 'npm install', 'npm run build', ""sed -i -e 's+TO_REPLACE_PATH_TO_DARKNET+/var/local/darknet+g' config.json &&   sed -i -e 's+TO_REPLACE_VIDEO_INPUT+file+g' config.json &&   sed -i -e 's+TO_REPLACE_NEURAL_NETWORK+yolov4+g' config.json"", 'chmod 777 launch.sh']"
opendatacam/opendatacam,latest,/docker/build/desktop/Dockerfile,WORKDIR,2,"['/var/local/darknet', '/var/local/opendatacam']"
opendatacam/opendatacam,latest,/docker/build/desktop/Dockerfile,COPY,4,"['yolov4.weights yolov4.weights', './package*.json /var/local/opendatacam/', './ /var/local/opendatacam', 'docker/build/desktop/launch.sh launch.sh']"
opendatacam/opendatacam,latest,/docker/build/desktop/Dockerfile,EXPOSE,1,['8080 8070 8090']
opendatacam/opendatacam,latest,/docker/build/desktop/Dockerfile,CMD,1,"['[""./launch.sh""]']"
opendatacam/opendatacam,latest,/docker/build/base-desktop/Dockerfile,FROM,1,['nvidia/cuda:10.2-cudnn7-devel-ubuntu18.04']
opendatacam/opendatacam,latest,/docker/build/base-desktop/Dockerfile,RUN,8,"['apt-get update -y && apt-get install -y             libgstreamer1.0-0             gstreamer1.0-plugins-base             gstreamer1.0-plugins-good             gstreamer1.0-plugins-bad             gstreamer1.0-plugins-ugly             gstreamer1.0-libav             gstreamer1.0-doc             gstreamer1.0-tools             libgstreamer1.0-dev             libgstreamer-plugins-base1.0-dev', 'apt-get update -y && apt-get install -y  pkg-config  zlib1g-dev  libwebp-dev  libtbb2 libtbb-dev   libgtk2.0-dev pkg-config libavcodec-dev libavformat-dev libswscale-dev libv4l-dev  cmake', 'apt-get install -y   autoconf   autotools-dev   build-essential   gcc   git', 'apt-get update -y && apt-get install -y ffmpeg', 'git clone --depth 1 -b ${OPENCV_RELEASE_TAG}  https://github.com/opencv/opencv.git /var/local/git/opencv', 'cd /var/local/git/opencv', 'mkdir -p /var/local/git/opencv/build &&     cd /var/local/git/opencv/build $$ &&     cmake -D CMAKE_INSTALL_PREFIX=/usr/local CMAKE_BUILD_TYPE=Release -D WITH_GSTREAMER=ON -D WITH_GSTREAMER_0_10=OFF -D WITH_CUDA=OFF -D WITH_TBB=ON -D WITH_LIBV4L=ON WITH_FFMPEG=ON -DOPENCV_GENERATE_PKGCONFIG=ON ..', 'cd /var/local/git/opencv/build &&       make -j8 install']"
opendatacam/opendatacam,latest,/docker/build/base-desktop/Dockerfile,ENV,1,['OPENCV_RELEASE_TAG 4.1.1']
opendatacam/opendatacam,latest,/docker/build/base-desktop/Dockerfile,CMD,1,"['[ ""sleep"", ""infinity"" ]']"
VertaAI/modeldb,latest,/protos/scripts/Dockerfile,FROM,1,['ubuntu:18.04']
VertaAI/modeldb,latest,/protos/scripts/Dockerfile,RUN,8,"['apt-get update &&     apt-get install -y --no-install-recommends       apt-transport-https       ca-certificates       curl       gnupg-agent       software-properties-common       unzip', 'curl -o /tmp/go.tgz https://dl.google.com/go/go1.14.linux-amd64.tar.gz &&     tar -xvzf /tmp/go.tgz -C /tmp &&     mv /tmp/go /usr/local &&     rm -rf /tmp/go*', 'apt-get update &&     apt-get install -y --no-install-recommends git', './get_dependencies.sh', 'apt-get update &&     apt-get install -y --no-install-recommends python3-pip python3-setuptools', 'pip3 install grpcio-tools==1.27.2 grpcio==1.27.2', 'apt-get update &&     apt-get install -y --no-install-recommends jq', 'pip3 install pystache==0.5.4 Click==7.0']"
VertaAI/modeldb,latest,/protos/scripts/Dockerfile,USER,1,['root']
VertaAI/modeldb,latest,/protos/scripts/Dockerfile,ENV,6,"['HOME /root', 'GOROOT /usr/local/go', 'GOPATH $HOME/go', 'PATH $GOPATH/bin:$GOROOT/bin:$PATH', 'LC_ALL C.UTF-8', 'LANG C.UTF-8']"
VertaAI/modeldb,latest,/protos/scripts/Dockerfile,COPY,1,['get_dependencies.sh get_dependencies.sh']
VertaAI/modeldb,latest,/webapp/Dockerfile,FROM,2,"['node:12.16.2-alpine as builder', 'node:12.16.2-alpine']"
VertaAI/modeldb,latest,/webapp/Dockerfile,RUN,5,"['mkdir -p /usr/src/app/client', 'yarn install', 'yarn build', 'mkdir -p /usr/src/app/client', 'yarn install']"
VertaAI/modeldb,latest,/webapp/Dockerfile,WORKDIR,3,"['/usr/src/app/client', '/usr/src/app/client', '/usr/src/app']"
VertaAI/modeldb,latest,/webapp/Dockerfile,COPY,8,"['client/package.json /usr/src/app/client/package.json', 'client/yarn.lock /usr/src/app/client/yarn.lock', 'client /usr/src/app/client', 'package.json /usr/src/app/package.json', 'yarn.lock /usr/src/app/yarn.lock', 'server.js server.js', '.env.default .env', '--from=builder /usr/src/app/client/build /usr/src/app/client/build']"
VertaAI/modeldb,latest,/webapp/Dockerfile,ENV,3,"['REACT_APP_OSS 1', 'REACT_APP_PUBLIC_URL /', 'DEPLOYED ""yes""']"
VertaAI/modeldb,latest,/webapp/Dockerfile,EXPOSE,1,['3000']
VertaAI/modeldb,latest,/webapp/Dockerfile,CMD,1,"['[ ""yarn"", ""start"" ]']"
VertaAI/modeldb,latest,/backend/dockerfile,FROM,2,"['adoptopenjdk/openjdk16:jdk-16_36-alpine as builder', 'adoptopenjdk/openjdk16:jdk-16_36-alpine']"
VertaAI/modeldb,latest,/backend/dockerfile,RUN,3,"['apk add wget', 'GRPC_HEALTH_PROBE_VERSION=v0.3.0 &&     wget -qO/bin/grpc_health_probe https://github.com/grpc-ecosystem/grpc-health-probe/releases/download/${GRPC_HEALTH_PROBE_VERSION}/grpc_health_probe-linux-amd64 &&     chmod +x /bin/grpc_health_probe', 'mkdir -p modeldb-project-work-dir']"
VertaAI/modeldb,latest,/backend/dockerfile,COPY,3,"['--from=builder /bin/grpc_health_probe /bin/grpc_health_probe', 'target/modeldb-1.0-SNAPSHOT-client-build.jar modeldb-1.0-SNAPSHOT-client-build.jar', 'src/main/resources/liquibase/ src/main/resources/liquibase/']"
VertaAI/modeldb,latest,/backend/dockerfile,WORKDIR,1,['/modeldb-project-work-dir']
VertaAI/modeldb,latest,/backend/dockerfile,ENV,2,"['NAME modeldb-backend', 'VERTA_MODELDB_CONFIG /config/config.yaml']"
VertaAI/modeldb,latest,/backend/dockerfile,ENTRYPOINT,1,"['[""java""]']"
VertaAI/modeldb,latest,/backend/dockerfile,CMD,1,"['[""-jar"", ""modeldb-1.0-SNAPSHOT-client-build.jar""]']"
VertaAI/modeldb,latest,/backend/proxy/Dockerfile,FROM,2,"['golang:1.12.5-alpine3.9 as builder', 'scratch']"
VertaAI/modeldb,latest,/backend/proxy/Dockerfile,RUN,2,"['apk add --no-cache git mercurial bash', 'CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -o /proxy ./backend/proxy']"
VertaAI/modeldb,latest,/backend/proxy/Dockerfile,WORKDIR,1,['/tmp/build']
VertaAI/modeldb,latest,/backend/proxy/Dockerfile,ADD,3,"['protos/gen/go ./protos/gen/go', 'go.mod .', 'go.sum .']"
VertaAI/modeldb,latest,/backend/proxy/Dockerfile,COPY,2,"['backend/proxy/proxy.go ./backend/proxy/proxy.go', '--from=builder /proxy /app/bin/proxy']"
VertaAI/modeldb,latest,/backend/proxy/Dockerfile,EXPOSE,1,['8080']
VertaAI/modeldb,latest,/backend/proxy/Dockerfile,ENTRYPOINT,1,"['[""/app/bin/proxy""]']"
VertaAI/modeldb,latest,/backend/graphql/Dockerfile,FROM,2,"['golang:1.12.5-alpine3.9 as builder', 'scratch']"
VertaAI/modeldb,latest,/backend/graphql/Dockerfile,RUN,2,"['apk add --no-cache git mercurial bash', 'CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -o /graphql ./backend/graphql/cmd/graphql.go']"
VertaAI/modeldb,latest,/backend/graphql/Dockerfile,WORKDIR,1,['/tmp/build']
VertaAI/modeldb,latest,/backend/graphql/Dockerfile,ADD,3,"['protos/gen/go ./protos/gen/go', 'go.mod .', 'go.sum .']"
VertaAI/modeldb,latest,/backend/graphql/Dockerfile,COPY,2,"['backend/graphql/ ./backend/graphql/', '--from=builder /graphql /app/bin/graphql']"
VertaAI/modeldb,latest,/backend/graphql/Dockerfile,EXPOSE,1,['4000']
VertaAI/modeldb,latest,/backend/graphql/Dockerfile,ENTRYPOINT,1,"['[""/app/bin/graphql""]']"
sentinel-hub/eo-learn,latest,/docker/eolearn-examples.dockerfile,FROM,1,['sentinelhub/eolearn:latest']
sentinel-hub/eo-learn,latest,/docker/eolearn-examples.dockerfile,LABEL,1,"['description=""An official eo-learn docker image with a full eo-learn installation, Jupyter notebook, all example notebooks, and some additional dependencies required to run those notebooks.""']"
sentinel-hub/eo-learn,latest,/docker/eolearn-examples.dockerfile,RUN,2,"['apt-get update && apt-get install -y         ffmpeg     && apt-get clean && apt-get autoremove -y && rm -rf /var/lib/apt/lists/*', 'pip3 install --no-cache-dir         ffmpeg-python         ipyleaflet']"
sentinel-hub/eo-learn,latest,/docker/eolearn-examples.dockerfile,COPY,2,"['./examples ./examples', './example_data ./example_data']"
sentinel-hub/eo-learn,latest,/docker/eolearn.dockerfile,FROM,1,['python:3.8-buster']
sentinel-hub/eo-learn,latest,/docker/eolearn.dockerfile,LABEL,2,"['maintainer=""Sinergise EO research team <eoresearch@sinergise.com>""', 'description=""An official eo-learn docker image with a full eo-learn installation and Jupyter notebook.""']"
sentinel-hub/eo-learn,latest,/docker/eolearn.dockerfile,RUN,8,"['apt-get update && apt-get install -y         gcc         libgdal-dev         graphviz         proj-bin         libproj-dev         libspatialindex-dev     && apt-get clean && apt-get autoremove -y && rm -rf /var/lib/apt/lists/*', 'pip3 install --no-cache-dir pip --upgrade', 'pip3 install --no-cache-dir shapely --no-binary :all:', 'FORCE_CYTHON=1 pip install cartopy', 'pip3 install --no-cache-dir     ./core     ./coregistration     ./features     ./geometry     ./io[GEODB,METEOBLUE]     ./mask     ./ml_tools     ./visualization[FULL]', 'pip3 install --no-cache-dir     .     rtree     jupyter', 'rm -r ./*', 'chmod +x /tini']"
sentinel-hub/eo-learn,latest,/docker/eolearn.dockerfile,ENV,3,"['CPLUS_INCLUDE_PATH=/usr/include/gdal', 'C_INCLUDE_PATH=/usr/include/gdal', 'TINI_VERSION=v0.19.0']"
sentinel-hub/eo-learn,latest,/docker/eolearn.dockerfile,WORKDIR,2,"['/tmp', '/home/eolearner']"
sentinel-hub/eo-learn,latest,/docker/eolearn.dockerfile,COPY,9,"['core core', 'coregistration coregistration', 'features features', 'geometry geometry', 'io io', 'mask mask', 'ml_tools ml_tools', 'visualization visualization', 'setup.py README.md requirements-dev.txt ./']"
sentinel-hub/eo-learn,latest,/docker/eolearn.dockerfile,ADD,1,['https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini /tini']
sentinel-hub/eo-learn,latest,/docker/eolearn.dockerfile,ENTRYPOINT,1,"['[""/tini"", ""--""]']"
sentinel-hub/eo-learn,latest,/docker/eolearn.dockerfile,EXPOSE,1,['8888']
sentinel-hub/eo-learn,latest,/docker/eolearn.dockerfile,CMD,1,"['[""/usr/local/bin/jupyter"", ""notebook"", ""--no-browser"", ""--port=8888"", ""--ip=0.0.0.0"",      ""--NotebookApp.token=\'\'"", ""--allow-root""]']"
rlworkgroup/garage,latest,/docker/Dockerfile,ARG,7,"['PARENT_IMAGE=ubuntu:18.04', 'user=garage-user', 'uid=999', 'user=garage-user', 'uid=999', 'user=garage-user', 'uid=999']"
rlworkgroup/garage,latest,/docker/Dockerfile,FROM,6,"['$PARENT_IMAGE AS garage-base', 'garage-base AS garage', 'garage AS garage-nvidia', 'garage-base AS garage-dev', 'garage-dev AS garage-dev-nvidia', 'garage-dev AS garage-test']"
rlworkgroup/garage,latest,/docker/Dockerfile,ENV,12,"['LANG C.UTF-8', 'USER $user', 'HOME /home/$user', 'PYENV_ROOT ""$HOME/.pyenv""', 'PATH ""$PYENV_ROOT/shims:$PYENV_ROOT/bin:$PATH:$HOME/.local/bin""', 'PATH_NO_VENV $PATH', 'LD_LIBRARY_PATH $LD_LIBRARY_PATH:$HOME/.mujoco/mujoco200/bin:/usr/lib/nvidia-000', 'LD_PRELOAD /usr/lib/x86_64-linux-gnu/libGLEW.so', 'MUJOCO_GL ""glfw""', 'VIRTUAL_ENV $HOME/venv', 'PATH ""$VIRTUAL_ENV/bin:$PATH""', 'MJKEY_PATH $HOME/.mujoco/mjkey.txt']"
rlworkgroup/garage,latest,/docker/Dockerfile,RUN,16,"['apt-get -y -q update &&   DEBIAN_FRONTEND=noninteractive apt-get install -y     wget     unzip     git     curl     cmake     xorg-dev     libglew-dev     libosmesa6-dev     patchelf     libopenmpi-dev     libbz2-dev     libreadline-dev     libssl-dev     libsqlite3-dev     ruby-full &&   apt-get clean &&   rm -rf /var/lib/apt/lists/*', 'wget https://github.com/glfw/glfw/releases/download/3.3/glfw-3.3.zip &&   unzip glfw-3.3.zip &&   rm glfw-3.3.zip &&   cd glfw-3.3 &&   mkdir glfw-build &&   cd glfw-build &&   cmake -DBUILD_SHARED_LIBS=ON -DGLFW_BUILD_EXAMPLES=OFF -DGLFW_BUILD_TESTS=OFF -DGLFW_BUILD_DOCS=OFF .. &&   make -j""$(nproc)"" &&   make install &&   cd ../../ &&   rm -rf glfw-3.3', 'groupadd -g $uid $user &&     useradd -m -r -u $uid -g $user $user &&     chown -R $user:$user /home/$user', 'curl https://pyenv.run | bash &&   pyenv install 3.6.12 &&   pyenv global 3.6.12 &&   pip install virtualenv &&   rm -r $HOME/.cache/pip', 'mkdir -p $HOME/.mujoco &&   wget https://www.roboti.us/download/mujoco200_linux.zip -O mujoco.zip --no-check-certificate &&   unzip mujoco.zip -d $HOME/.mujoco &&   rm mujoco.zip &&   ln -s $HOME/.mujoco/mujoco200_linux $HOME/.mujoco/mujoco200', 'mkdir -p /usr/lib/nvidia-000', 'python -m virtualenv $VIRTUAL_ENV', 'pip install --upgrade pip setuptools wheel &&   rm -r $HOME/.cache/pip', 'touch $MJKEY_PATH', 'apt-get -y -q update &&   DEBIAN_FRONTEND=noninteractive apt-get install -y     xvfb     pulseaudio &&   apt-get clean &&   rm -rf /var/lib/apt/lists/* &&   mkdir -p -m 1777 /tmp/.X11-unix', ""pip install --upgrade pip setuptools wheel &&   pip install garage[all] &&   rm -r $HOME/.cache/pip &&   (python -c 'import mujoco_py' || true) &&   rm $MJKEY_PATH"", 'apt-get -y -q update &&   DEBIAN_FRONTEND=noninteractive apt-get install -y     graphviz &&   apt-get clean &&   rm -rf /var/lib/apt/lists/*', 'git init &&   pip install pre-commit &&   pre-commit install &&   pre-commit install-hooks &&   rm -r $HOME/.cache/pip', ""pip install --upgrade pip setuptools wheel &&   pip install .[all,dev] &&   (python -c 'import mujoco_py' || true) &&   rm $MJKEY_PATH &&   rm -r $HOME/.cache/pip"", 'python setup.py sdist &&     cp dist/*.tar.gz dist/garage.tar.gz &&     pip install dist/garage.tar.gz[all,dev]', 'cd benchmarks && python setup.py sdist &&     cp dist/*.tar.gz dist/benchmarks.tar.gz &&     pip install dist/benchmarks.tar.gz']"
rlworkgroup/garage,latest,/docker/Dockerfile,USER,7,"['$user', 'root', '$user', 'root', '$user', 'root', '$user']"
rlworkgroup/garage,latest,/docker/Dockerfile,WORKDIR,2,"['$HOME', '$HOME/code/garage']"
rlworkgroup/garage,latest,/docker/Dockerfile,COPY,9,"['--chown=$user:$user docker/entrypoint-headless.sh $HOME/code/garage/docker/entrypoint-headless.sh', '--chown=$user:$user docker/entrypoint-runtime.sh $HOME/code/garage/docker/entrypoint-runtime.sh', '--chown=$user:$user README.md $HOME/code/garage/README.md', '--chown=$user:$user VERSION $HOME/code/garage/VERSION', '--chown=$user:$user scripts/garage $HOME/code/garage/scripts/garage', '--chown=$user:$user src/garage/__init__.py $HOME/code/garage/src/garage/__init__.py', '--chown=$user:$user setup.py $HOME/code/garage/setup.py', '--chown=$user:$user .pre-commit-config.yaml $HOME/code/garage', '--chown=$user:$user . $HOME/code/garage']"
rlworkgroup/garage,latest,/docker/Dockerfile,ENTRYPOINT,4,"['[""code/garage/docker/entrypoint-headless.sh""]', '[""code/garage/docker/entrypoint-runtime.sh""]', '[""docker/entrypoint-headless.sh""]', '[""docker/entrypoint-runtime.sh""]']"
rlworkgroup/garage,latest,/docker/Dockerfile,CMD,1,"[""nice -n 11 pytest -v -n auto -m 'not huge and not flaky' --durations=20""]"
NervanaSystems/ngraph,latest,/contrib/docker/Dockerfile.ngraph.ubuntu1604_gpu,FROM,1,['nvidia/cuda:8.0-cudnn7-devel-ubuntu16.04']
NervanaSystems/ngraph,latest,/contrib/docker/Dockerfile.ngraph.ubuntu1604_gpu,RUN,15,"['rm /etc/apt/sources.list.d/cuda.list', 'rm /etc/apt/sources.list.d/nvidia-ml.list', 'apt-get update &&     apt-get install -y sudo curl apt-transport-https &&     apt-get clean autoclean &&     apt-get autoremove -y', 'curl http://developer.download.nvidia.com/compute/cuda/repos/GPGKEY | sudo apt-key add -', 'apt-get update &&     apt-get install -y python-dev python-pip software-properties-common &&     apt-get clean autoclean &&     apt-get autoremove -y', 'pip install --upgrade pip', 'pip install virtualenv==16.7.10 pytest', 'apt-get update &&     apt-get install -y python3 python3-pip python3-dev python3-venv &&     apt-get clean autoclean &&     apt-get autoremove -y', 'pip3 install virtualenv pytest', 'apt-get update && apt-get install -y protobuf-compiler libprotobuf-dev', 'apt-get update && apt-get install -y         build-essential cmake         clang-3.9 clang-format-3.9         git         wget patch diffutils zlib1g-dev libtinfo-dev         doxygen graphviz &&         apt-get clean autoclean &&         apt-get autoremove -y', 'ln -s /usr/bin/make /usr/bin/gmake', 'pip install sphinx', 'pip install breathe', 'pip install numpy']"
NervanaSystems/ngraph,latest,/contrib/docker/Dockerfile.ngraph.ubuntu1604_gpu,WORKDIR,1,['/home']
NervanaSystems/ngraph,latest,/contrib/docker/Dockerfile.ngraph.centos74_gpu,FROM,1,['nvidia/cuda:8.0-cudnn7-devel-centos7']
NervanaSystems/ngraph,latest,/contrib/docker/Dockerfile.ngraph.centos74_gpu,RUN,12,"[""yum -y update &&     yum -y --enablerepo=extras install epel-release &&     yum -y install     gcc gcc-c++     cmake3 make     git     wget patch diffutils zlib-devel ncurses-devel libtinfo-dev     python python-devel python-setuptools     doxygen graphviz     which     'perl(Data::Dumper)'"", 'ln -s /usr/bin/cmake3 /usr/bin/cmake', 'ln -s /usr/local/cuda/include/cudnn.h /usr/local/cuda/include/cudnn_v7.h', 'cmake --version', 'make --version', 'gcc --version', 'c++ --version', 'easy_install pip', 'pip install virtualenv==16.7.10', 'pip install sphinx', 'pip install breathe', 'pip install numpy']"
NervanaSystems/ngraph,latest,/contrib/docker/Dockerfile.ngraph.centos74_gpu,WORKDIR,1,['/home']
NervanaSystems/ngraph,latest,/contrib/docker/Dockerfile.ngraph.ubuntu1604,FROM,1,['ubuntu:16.04']
NervanaSystems/ngraph,latest,/contrib/docker/Dockerfile.ngraph.ubuntu1604,RUN,6,"['apt-get update && apt-get install -y         build-essential cmake         clang-3.9 clang-format-3.9         git         wget patch diffutils zlib1g-dev libtinfo-dev         doxygen graphviz         python-pip python3-sphinx', 'apt-get clean autoclean &&     apt-get autoremove -y', 'pip install --upgrade pip', 'pip install sphinx', 'pip install breathe', 'pip install numpy']"
NervanaSystems/ngraph,latest,/contrib/docker/Dockerfile.ngraph.ubuntu1604,WORKDIR,1,['/home']
NervanaSystems/ngraph,latest,/contrib/docker/Dockerfile.ngraph,FROM,1,['ubuntu:16.04']
NervanaSystems/ngraph,latest,/contrib/docker/Dockerfile.ngraph,RUN,6,"['apt-get update && apt-get install -y         build-essential cmake         clang-3.9 clang-format-3.9         git         wget patch diffutils zlib1g-dev libtinfo-dev         doxygen graphviz         python-sphinx python3-sphinx         python-pip', 'apt-get clean autoclean &&     apt-get autoremove -y', 'pip install --upgrade pip', 'pip install sphinx', 'pip install breathe', 'pip install numpy']"
NervanaSystems/ngraph,latest,/contrib/docker/Dockerfile.ngraph,WORKDIR,1,['/home']
NervanaSystems/ngraph,latest,/contrib/docker/Dockerfile.ngraph.centos74,FROM,1,['centos:7']
NervanaSystems/ngraph,latest,/contrib/docker/Dockerfile.ngraph.centos74,RUN,11,"[""yum -y update &&     yum -y --enablerepo=extras install epel-release &&     yum -y install     gcc gcc-c++     cmake3 make     git     wget patch diffutils zlib-devel ncurses-devel libtinfo-dev     python python-devel python-sphinx python-setuptools     doxygen graphviz     which     'perl(Data::Dumper)'"", 'ln -s /usr/bin/cmake3 /usr/bin/cmake', 'cmake --version', 'make --version', 'gcc --version', 'c++ --version', 'easy_install pip', 'pip install virtualenv==16.7.10', 'pip install sphinx', 'pip install breathe', 'pip install numpy']"
NervanaSystems/ngraph,latest,/contrib/docker/Dockerfile.ngraph.centos74,WORKDIR,1,['/home']
vearch/vearch,latest,/cloud/Dockerfile,FROM,1,['centos:7']
vearch/vearch,latest,/cloud/Dockerfile,ADD,2,"['compile/bin /vearch/bin/', 'compile/lib /vearch/lib/']"
vearch/vearch,latest,/cloud/Dockerfile,ENV,2,"['MASTER_NAME=""___MASTER_NAME___""', 'LD_LIBRARY_PATH=""$LD_LIBRARY_PATH:/vearch/lib/""']"
vearch/vearch,latest,/cloud/Dockerfile,RUN,2,"['yum install -y epel-release', 'yum install -y libgomp lapack openssl libzstd openblas tbb']"
vearch/vearch,latest,/cloud/Dockerfile,ENTRYPOINT,1,"['[""/vearch/bin/vearch"", ""-conf"", ""/vearch/config.toml"", ""-master"", ""$MASTER_NAME""]']"
vearch/vearch,latest,/cloud/env/Dockerfile,FROM,1,['centos:7']
vearch/vearch,latest,/cloud/env/Dockerfile,COPY,2,"['env.sh /env/env.sh', 'app /env/app/']"
vearch/vearch,latest,/cloud/env/Dockerfile,RUN,1,['/env/env.sh']
vearch/vearch,latest,/cloud/env/docker/Dockerfile,FROM,1,['centos:7']
vearch/vearch,latest,/cloud/env/docker/Dockerfile,RUN,2,"['yum -y update', 'yum install -y epel-release wget gcc gcc-c++ make automake git blas-devel lapack-devel which openssl-devel libzstd-devel openblas-devel tbb-devel &&    mkdir -p /env/app &&    cd /env/app/ &&    wget https://cmake.org/files/v3.20/cmake-3.20.0-rc3.tar.gz &&    tar xf cmake-3.20.0-rc3.tar.gz &&    cd /env/app/cmake-3.20.0-rc3 &&    ./bootstrap &&    gmake &&    gmake install &&    cd /usr/bin &&    ln -s cmake3 cmake &&    cd /env/app &&    wget https://github.com/facebook/rocksdb/archive/v6.2.2.tar.gz -O rocksdb-v6.2.2.tar.gz &&    tar -xzf rocksdb-v6.2.2.tar.gz &&    cd /env/app/rocksdb-6.2.2 &&    make shared_lib &&    mkdir -p /env/app/rocksdb_install/lib &&    cp librocksdb.so.6.2.2 /env/app/rocksdb_install/lib &&    cd /env/app/rocksdb_install/lib &&    ln -s librocksdb.so.6.2.2 librocksdb.so.6.2 &&    ln -s librocksdb.so.6.2 librocksdb.so &&    cp -r /env/app/rocksdb-6.2.2/include /env/app/rocksdb_install/ &&    cd /env/app/ &&    wget https://dl.google.com/go/go1.12.7.linux-amd64.tar.gz &&    tar -xzf go1.12.7.linux-amd64.tar.gz']"
DragonComputer/Dragonfire,latest,/Dockerfile,FROM,1,['ubuntu:18.04']
DragonComputer/Dragonfire,latest,/Dockerfile,RUN,5,"['rm /bin/sh && ln -s /bin/bash /bin/sh', 'apt-get update', 'apt-get install -y git make wget', 'apt-get -qqy install libssl-dev libffi-dev', 'make dev-install']"
DragonComputer/Dragonfire,latest,/Dockerfile,ENV,1,['PYTHONUNBUFFERED 1     PIP_NO_CACHE_DIR=off']
DragonComputer/Dragonfire,latest,/Dockerfile,ARG,1,['DEBIAN_FRONTEND=noninteractive']
DragonComputer/Dragonfire,latest,/Dockerfile,LABEL,1,"['maintainer=""Mehmet Mert Yildiran mert.yildiran@boun.edu.tr""']"
DragonComputer/Dragonfire,latest,/Dockerfile,WORKDIR,1,['/app']
DragonComputer/Dragonfire,latest,/Dockerfile,ADD,1,['. /app']
araffin/rl-baselines-zoo,latest,/docker/Dockerfile,ARG,2,"['PARENT_IMAGE', 'USE_GPU']"
araffin/rl-baselines-zoo,latest,/docker/Dockerfile,FROM,1,['$PARENT_IMAGE']
araffin/rl-baselines-zoo,latest,/docker/Dockerfile,RUN,2,"['apt-get -y update     && apt-get -y install     ffmpeg     freeglut3-dev     swig     xvfb     && apt-get clean     && rm -rf /var/lib/apt/lists/*', 'mkdir -p ${CODE_DIR}/rl_zoo &&     . $VENV/bin/activate &&     pip uninstall -y stable-baselines &&     pip install stable-baselines[mpi]==2.10.0 &&     pip install box2d-py==2.3.5 &&     pip install pybullet &&     pip install gym-minigrid &&     pip install scikit-optimize &&     pip install optuna &&     pip install pytablewriter &&     rm -rf $HOME/.cache/pip']"
araffin/rl-baselines-zoo,latest,/docker/Dockerfile,ENV,3,"['CODE_DIR /root/code', 'VENV /root/venv', 'PATH=$VENV/bin:$PATH']"
araffin/rl-baselines-zoo,latest,/docker/Dockerfile,COPY,1,['docker/entrypoint.sh /tmp/']
araffin/rl-baselines-zoo,latest,/docker/Dockerfile,ENTRYPOINT,1,"['[""/tmp/entrypoint.sh""]']"
araffin/rl-baselines-zoo,latest,/docker/Dockerfile,CMD,1,['/bin/bash']
jonaswinkler/paperless-ng,latest,/Dockerfile,FROM,2,"['ubuntu:20.04 AS jbig2enc', 'python:3.9-slim-bullseye']"
jonaswinkler/paperless-ng,latest,/Dockerfile,WORKDIR,2,"['/usr/src/jbig2enc', '/usr/src/paperless/src/']"
jonaswinkler/paperless-ng,latest,/Dockerfile,RUN,8,"['apt-get update && apt-get install -y --no-install-recommends build-essential automake libtool libleptonica-dev zlib1g-dev git ca-certificates', 'git clone https://github.com/agl/jbig2enc .', './autogen.sh', './configure && make', 'apt-get update \t&& apt-get -y --no-install-recommends install \t\tcurl \t\tgnupg \t\timagemagick \t\tgettext \t\ttzdata \t\tgosu \t\tfonts-liberation \t\tlibatlas-base-dev \t\tlibxslt1-dev \t\toptipng \t\tlibxml2 \t\tpngquant \t\tunpaper \t\tzlib1g \t\tghostscript \t\ticc-profiles-free \t\tfile \t\tlibmagic-dev \t\tmedia-types \t\tliblept5 \t\tqpdf \t\ttesseract-ocr \t\ttesseract-ocr-eng \t\ttesseract-ocr-deu \t\ttesseract-ocr-fra \t\ttesseract-ocr-ita \t\ttesseract-ocr-spa   && rm -rf /var/lib/apt/lists/*', 'apt-get update   && apt-get -y --no-install-recommends install \t\tbuild-essential \t\tlibpq-dev \t\tlibqpdf-dev \t&& python3 -m pip install --upgrade --no-cache-dir supervisor   && python3 -m pip install --no-cache-dir -r ../requirements.txt \t&& apt-get -y purge build-essential libqpdf-dev \t&& apt-get -y autoremove --purge \t&& rm -rf /var/lib/apt/lists/*', 'cd docker   && cp imagemagick-policy.xml /etc/ImageMagick-6/policy.xml \t&& mkdir /var/log/supervisord /var/run/supervisord \t&& cp supervisord.conf /etc/supervisord.conf \t&& cp docker-entrypoint.sh /sbin/docker-entrypoint.sh \t&& cp docker-prepare.sh /sbin/docker-prepare.sh \t&& chmod 755 /sbin/docker-entrypoint.sh \t&& chmod +x install_management_commands.sh \t&& ./install_management_commands.sh \t&& cd .. \t&& rm docker -rf', 'addgroup --gid 1000 paperless \t&& useradd --uid 1000 --gid paperless --home-dir /usr/src/paperless paperless \t&& chown -R paperless:paperless ../ \t&& gosu paperless python3 manage.py collectstatic --clear --no-input \t&& gosu paperless python3 manage.py compilemessages']"
jonaswinkler/paperless-ng,latest,/Dockerfile,COPY,7,"['--from=jbig2enc /usr/src/jbig2enc/src/.libs/libjbig2enc* /usr/local/lib/', '--from=jbig2enc /usr/src/jbig2enc/src/jbig2 /usr/local/bin/', '--from=jbig2enc /usr/src/jbig2enc/src/*.h /usr/local/include/', 'requirements.txt ../', 'docker/ ./docker/', 'gunicorn.conf.py ../', 'src/ ./']"
jonaswinkler/paperless-ng,latest,/Dockerfile,VOLUME,1,"['[""/usr/src/paperless/data"", ""/usr/src/paperless/media"", ""/usr/src/paperless/consume"", ""/usr/src/paperless/export""]']"
jonaswinkler/paperless-ng,latest,/Dockerfile,ENTRYPOINT,1,"['[""/sbin/docker-entrypoint.sh""]']"
jonaswinkler/paperless-ng,latest,/Dockerfile,EXPOSE,1,['8000']
jonaswinkler/paperless-ng,latest,/Dockerfile,CMD,1,"['[""/usr/local/bin/supervisord"", ""-c"", ""/etc/supervisord.conf""]']"
jonaswinkler/paperless-ng,latest,/Dockerfile,LABEL,1,"['maintainer=""Jonas Winkler <dev@jpwinkler.de>""']"
jonaswinkler/paperless-ng,latest,/docs/Dockerfile,FROM,1,['python:3.5.1']
jonaswinkler/paperless-ng,latest,/docs/Dockerfile,MAINTAINER,1,['Pit Kleyersburg <pitkley@googlemail.com>']
jonaswinkler/paperless-ng,latest,/docs/Dockerfile,RUN,3,"['pip install Sphinx Pygments', 'mkdir /build', 'make html']"
jonaswinkler/paperless-ng,latest,/docs/Dockerfile,COPY,1,['. /build']
jonaswinkler/paperless-ng,latest,/docs/Dockerfile,WORKDIR,2,"['/build/docs', '/build/docs/_build/html']"
jonaswinkler/paperless-ng,latest,/docs/Dockerfile,EXPOSE,1,['8000/tcp']
jonaswinkler/paperless-ng,latest,/docs/Dockerfile,CMD,1,"['[""python3"", ""-m"", ""http.server""]']"
determined-ai/determined,latest,/model_hub/docker/Dockerfile.transformers,ARG,4,"['BASE_IMAGE', 'TRANSFORMERS_VERSION', 'DATASETS_VERSION', 'MODEL_HUB_VERSION']"
determined-ai/determined,latest,/model_hub/docker/Dockerfile.transformers,FROM,1,['${BASE_IMAGE}']
determined-ai/determined,latest,/model_hub/docker/Dockerfile.transformers,RUN,4,"['pip install transformers==${TRANSFORMERS_VERSION} datasets==${DATASETS_VERSION} attrdict', 'pip install sentencepiece!=0.1.92 protobuf sklearn conllu seqeval', 'mkdir -p /tmp/model-hub-wheel', 'python -m pip install --find-links=/tmp/model-hub-wheel model-hub==${MODEL_HUB_VERSION}']"
determined-ai/determined,latest,/model_hub/docker/Dockerfile.transformers,ADD,1,['dist /tmp/model-hub-wheel']
determined-ai/determined,latest,/model_hub/docker/Dockerfile.mmdetection,ARG,6,"['BASE_IMAGE', 'MMCV_VERSION', 'MMCV_CUDA_VERSION', 'TORCH_VERSION', 'MMDETECTION_VERSION', 'MODEL_HUB_VERSION']"
determined-ai/determined,latest,/model_hub/docker/Dockerfile.mmdetection,FROM,1,['${BASE_IMAGE}']
determined-ai/determined,latest,/model_hub/docker/Dockerfile.mmdetection,ENV,3,"['CMAKE_PREFIX_PATH=""$(dirname $(which conda))/../""', 'FORCE_CUDA=""1""', 'MMDETECTION_CONFIG_DIR=/mmdetection/configs']"
determined-ai/determined,latest,/model_hub/docker/Dockerfile.mmdetection,RUN,9,"['apt-get update && apt-get install -y git ninja-build libglib2.0-0 libsm6 libxrender-dev libxext6 libgl1-mesa-glx unzip    && apt-get clean     && rm -rf /var/lib/apt/lists/*', 'pip install mmcv-full==${MMCV_VERSION} -f https://download.openmmlab.com/mmcv/dist/${MMCV_CUDA_VERSION}/torch${TORCH_VERSION}/index.html', 'conda clean --all', 'git clone https://github.com/open-mmlab/mmdetection.git /mmdetection', 'git checkout tags/v${MMDETECTION_VERSION}', 'pip install -r requirements/build.txt', 'pip install --no-cache-dir -e .', 'mkdir -p /tmp/model-hub-wheel', 'python -m pip install --find-links=/tmp/model-hub-wheel model-hub==${MODEL_HUB_VERSION}']"
determined-ai/determined,latest,/model_hub/docker/Dockerfile.mmdetection,WORKDIR,1,['/mmdetection']
determined-ai/determined,latest,/model_hub/docker/Dockerfile.mmdetection,ADD,1,['dist /tmp/model-hub-wheel']
determined-ai/determined,latest,/agent/Dockerfile,FROM,1,['ubuntu:20.04']
determined-ai/determined,latest,/agent/Dockerfile,MAINTAINER,1,['Determined AI <hello@determined.ai>']
determined-ai/determined,latest,/agent/Dockerfile,RUN,3,"['apt-get update -yq     && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends       unattended-upgrades     && unattended-upgrade     && apt-get remove -y unattended-upgrades     && apt-get autoremove -y     && rm -rf /var/lib/apt/lists/*', 'ldconfig', 'chmod +x /run/determined/workdir/entrypoint.sh']"
determined-ai/determined,latest,/agent/Dockerfile,ENV,1,['NVIDIA_VISIBLE_DEVICES=all NVIDIA_DRIVER_CAPABILITIES=utility']
determined-ai/determined,latest,/agent/Dockerfile,COPY,3,"['packaging/LICENSE /usr/share/doc/determined-agent/copyright', 'packaging/entrypoint.sh /run/determined/workdir/entrypoint.sh', 'determined-agent /usr/bin/determined-agent']"
determined-ai/determined,latest,/agent/Dockerfile,WORKDIR,1,['/run/determined/workdir']
determined-ai/determined,latest,/agent/Dockerfile,ENTRYPOINT,1,"['[ ""/run/determined/workdir/entrypoint.sh"" ]']"
determined-ai/determined,latest,/agent/Dockerfile,CMD,1,"['[""run""]']"
determined-ai/determined,latest,/master/Dockerfile,FROM,1,['ubuntu:20.04']
determined-ai/determined,latest,/master/Dockerfile,MAINTAINER,1,['Determined AI <hello@determined.ai>']
determined-ai/determined,latest,/master/Dockerfile,RUN,1,['apt-get update -yq     && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends       ca-certificates       unattended-upgrades     && unattended-upgrade     && apt-get remove -y unattended-upgrades     && apt-get autoremove -y     && rm -rf /var/lib/apt/lists/*']
determined-ai/determined,latest,/master/Dockerfile,COPY,6,"['packaging/master.yaml /etc/determined/master.yaml', 'packaging/LICENSE /usr/share/doc/determined-master/copyright', 'build /usr/share/determined/master', 'static /usr/share/determined/master/static', 'determined-gotmpl /usr/bin/determined-gotmpl', 'determined-master /usr/bin/determined-master']"
determined-ai/determined,latest,/master/Dockerfile,EXPOSE,1,['8080']
determined-ai/determined,latest,/master/Dockerfile,ENTRYPOINT,1,"['[""/usr/bin/determined-master""]']"
determined-ai/determined,latest,/examples/computer_vision/mmdetection_pytorch/docker/Dockerfile,FROM,1,['determinedai/environments:cuda-11.0-pytorch-1.7-lightning-1.2-tf-2.4-gpu-0.16.0']
determined-ai/determined,latest,/examples/computer_vision/mmdetection_pytorch/docker/Dockerfile,ENV,2,"['CMAKE_PREFIX_PATH=""$(dirname $(which conda))/../""', 'FORCE_CUDA=""1""']"
determined-ai/determined,latest,/examples/computer_vision/mmdetection_pytorch/docker/Dockerfile,RUN,7,"['apt-get update && apt-get install -y git ninja-build libglib2.0-0 libsm6 libxrender-dev libxext6 libgl1-mesa-glx    && apt-get clean     && rm -rf /var/lib/apt/lists/*', 'pip install mmcv-full -f https://download.openmmlab.com/mmcv/dist/cu110/torch1.7.0/index.html', 'conda clean --all', 'git clone https://github.com/open-mmlab/mmdetection.git /mmdetection', 'pip install -r requirements/build.txt', 'pip install --no-cache-dir -e .', 'pip install determined']"
determined-ai/determined,latest,/examples/computer_vision/mmdetection_pytorch/docker/Dockerfile,WORKDIR,1,['/mmdetection']
mesosphere/dcos-commons,latest,/Dockerfile,FROM,1,['mesosphere/dcos-commons-base:latest@sha256:da062e485be6d1b3df081ffcda4d800ede6650bcaed86eb67adc9db169cb2082']
mesosphere/dcos-commons,latest,/Dockerfile,ENV,6,"['GO_VERSION=1.10.2', 'PATH=$PATH:/usr/local/go/bin', 'LC_ALL=C.UTF-8 LANG=C.UTF-8', 'GOPATH=/go-tmp', 'PATH=/build-tools:$PATH', 'DCOS_COMMONS_DIST_ROOT /dcos-commons-dist']"
mesosphere/dcos-commons,latest,/Dockerfile,RUN,10,"['curl -O https://storage.googleapis.com/golang/go${GO_VERSION}.linux-amd64.tar.gz &&     tar -zxf go${GO_VERSION}.linux-amd64.tar.gz &&     mv go /usr/local &&     rm -f go${GO_VERSION}.linux-amd64.tar.gz &&     go version', 'pip3 install --upgrade -r frozen_requirements.txt', 'validate_pip_freeze.py frozen_requirements.txt', 'mkdir /root/.ssh', 'mkdir /tmp/repo/', 'cd /tmp/repo/ &&     ./gradlew testClasses &&     git init &&     pre-commit install-hooks &&     cd / &&     rm -rf /tmp/repo/', 'mkdir /build-tools', 'cp /build-tools/copy-files /build-tools/init', 'mkdir /dcos-commons-dist', 'grep -oE ""version = \'.*?\'"" ${DCOS_COMMONS_DIST_ROOT}/build.gradle | sed \'s/version = //\' > ${DCOS_COMMONS_DIST_ROOT}/.version']"
mesosphere/dcos-commons,latest,/Dockerfile,COPY,17,"['frozen_requirements.txt frozen_requirements.txt', 'tools/validate_pip_freeze.py /usr/local/bin', 'dep-snapshots/dcos /usr/local/bin', '/ /tmp/repo/', 'tools/distribution/copy-files /build-tools/', 'tools/ci/test_runner.sh /build-tools/', 'tools/ci/launch_cluster.sh /build-tools/', 'tools/distribution/* ${DCOS_COMMONS_DIST_ROOT}/', 'test.sh ${DCOS_COMMONS_DIST_ROOT}/', 'TESTING.md ${DCOS_COMMONS_DIST_ROOT}/', 'conftest.py ${DCOS_COMMONS_DIST_ROOT}/', 'testing ${DCOS_COMMONS_DIST_ROOT}/testing', 'tools ${DCOS_COMMONS_DIST_ROOT}/tools', '.pre-commit-config.yaml ${DCOS_COMMONS_DIST_ROOT}/', 'run_container.sh ${DCOS_COMMONS_DIST_ROOT}/', 'build.gradle ${DCOS_COMMONS_DIST_ROOT}/build.gradle', 'tools/container/venvs /venvs']"
mesosphere/dcos-commons,latest,/Dockerfile.base,FROM,1,['ubuntu:18.04@sha256:0925d086715714114c1988f7c947db94064fd385e171a63c07730f1fa014e6f9']
mesosphere/dcos-commons,latest,/Dockerfile.base,ARG,2,"['DOCKER_VERSION=5:18.09.8', 'DIND_COMMIT=37498f009d8bf25fbb6199e8ccd34bed84f2874b']"
mesosphere/dcos-commons,latest,/Dockerfile.base,COPY,1,['dind-wrapper.sh /usr/local/bin/dind-wrapper.sh']
mesosphere/dcos-commons,latest,/Dockerfile.base,RUN,3,"['apt-get update &&     apt-get install -y         wget         gnupg &&     wget -O - ""https://download.docker.com/linux/ubuntu/gpg""         | apt-key add -qq -     && echo ""deb [arch=amd64]         https://download.docker.com/linux/ubuntu         bionic         stable"" > /etc/apt/sources.list.d/docker.list     && wget -O /usr/local/bin/dind ""https://raw.githubusercontent.com/docker/docker/${DIND_COMMIT}/hack/dind""     && chmod a+x /usr/local/bin/dind     && chmod a+x /usr/local/bin/dind-wrapper.sh', 'apt-get install -y python3-software-properties software-properties-common &&     add-apt-repository -y ppa:openjdk-r/ppa &&     apt-get update &&     apt-get install -y -V -oDebug::pkgDepCache::AutoInstall=yes     grub-pc-     curl     docker-ce=""${DOCKER_VERSION}~3-0~ubuntu-bionic""     git     jq     libcairo2-dev     libgirepository1.0-dev     libssl-dev     openjdk-11-jdk     pkg-config     python-pip     python3     python3-cairo-dev     python3-dev     python3-pip     rsync     tox     software-properties-common     upx-ucl     wget     zip &&     rm -rf /var/lib/apt/lists/* &&     java -version', 'apt-get remove -y python3-crypto']"
mesosphere/dcos-commons,latest,/tools-internal/kdc-api-server/Dockerfile.mit-centos7,FROM,2,"['golang:1.11', 'centos:centos7']"
mesosphere/dcos-commons,latest,/tools-internal/kdc-api-server/Dockerfile.mit-centos7,WORKDIR,2,"['/go/src/github.com/mesosphere/kdc-api-server', '/kdc']"
mesosphere/dcos-commons,latest,/tools-internal/kdc-api-server/Dockerfile.mit-centos7,RUN,4,"['go get -d -v golang.org/x/net/html gopkg.in/jcmturner/gokrb5.v7/keytab', 'go get github.com/dcos/client-go/dcos', 'CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -a -installsuffix cgo -o api-server .', 'yum -y install epel-release &&     yum install -y krb5-server supervisor &&     yum clean all &&     echo -e ""\\n\\n"" | kdb5_util create -r LOCAL -s']"
mesosphere/dcos-commons,latest,/tools-internal/kdc-api-server/Dockerfile.mit-centos7,COPY,3,"['server/ /go/src/github.com/mesosphere/kdc-api-server', 'docker/* /kdc/', '--from=0 /go/src/github.com/mesosphere/kdc-api-server/api-server /kdc']"
mesosphere/dcos-commons,latest,/tools-internal/kdc-api-server/Dockerfile.mit-centos7,ENV,1,['KRB5_CONFIG=/kdc/krb5.conf     KRB5_KDC_PROFILE=/kdc/kdc.conf     KDC_BIN=/usr/sbin/krb5kdc     KADMIN_BIN=/sbin/kadmin.local']
mesosphere/dcos-commons,latest,/tools-internal/kdc-api-server/Dockerfile.mit-centos7,CMD,1,['/usr/bin/supervisord -c /kdc/supervisord.conf']
mesosphere/dcos-commons,latest,/tools-internal/kdc-api-server/Dockerfile.mit-alpine,FROM,2,"['golang:1.11', 'alpine:3.9']"
mesosphere/dcos-commons,latest,/tools-internal/kdc-api-server/Dockerfile.mit-alpine,WORKDIR,2,"['/go/src/github.com/mesosphere/kdc-api-server', '/kdc']"
mesosphere/dcos-commons,latest,/tools-internal/kdc-api-server/Dockerfile.mit-alpine,RUN,4,"['go get -d -v golang.org/x/net/html gopkg.in/jcmturner/gokrb5.v7/keytab', 'go get github.com/dcos/client-go/dcos', 'CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -a -installsuffix cgo -o api-server .', 'apk add --no-cache krb5 krb5-server krb5-libs supervisor &&     echo -e ""\\n\\n"" | kdb5_util create -r LOCAL -s']"
mesosphere/dcos-commons,latest,/tools-internal/kdc-api-server/Dockerfile.mit-alpine,COPY,3,"['server/ /go/src/github.com/mesosphere/kdc-api-server', 'docker/* /kdc/', '--from=0 /go/src/github.com/mesosphere/kdc-api-server/api-server /kdc']"
mesosphere/dcos-commons,latest,/tools-internal/kdc-api-server/Dockerfile.mit-alpine,ENV,1,['KRB5_CONFIG=/kdc/krb5.conf     KRB5_KDC_PROFILE=/kdc/kdc.conf     KDC_BIN=/usr/sbin/krb5kdc     KADMIN_BIN=/usr/sbin/kadmin.local']
mesosphere/dcos-commons,latest,/tools-internal/kdc-api-server/Dockerfile.mit-alpine,CMD,1,['/usr/bin/supervisord -c /kdc/supervisord.conf']
mesosphere/dcos-commons,latest,/tools-internal/kdc-api-server/Dockerfile.heimdal-centos7,FROM,2,"['golang:1.11', 'centos:centos7']"
mesosphere/dcos-commons,latest,/tools-internal/kdc-api-server/Dockerfile.heimdal-centos7,WORKDIR,2,"['/go/src/github.com/mesosphere/kdc-api-server', '/kdc']"
mesosphere/dcos-commons,latest,/tools-internal/kdc-api-server/Dockerfile.heimdal-centos7,RUN,4,"['go get -d -v golang.org/x/net/html gopkg.in/jcmturner/gokrb5.v7/keytab', 'go get github.com/dcos/client-go/dcos', 'CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -a -installsuffix cgo -o api-server .', 'yum -y install epel-release &&     yum install -y heimdal-server heimdal-workstation supervisor &&     yum clean all &&     mkdir -p /var/heimdal &&     kstash --random-key &&     ${KADMIN_BIN} -l init --realm-max-ticket-life=unlimited --realm-max-renewable-life=unlimited LOCAL']"
mesosphere/dcos-commons,latest,/tools-internal/kdc-api-server/Dockerfile.heimdal-centos7,COPY,3,"['server/ /go/src/github.com/mesosphere/kdc-api-server', 'docker/* /kdc/', '--from=0 /go/src/github.com/mesosphere/kdc-api-server/api-server /kdc']"
mesosphere/dcos-commons,latest,/tools-internal/kdc-api-server/Dockerfile.heimdal-centos7,ENV,1,['KRB5_CONFIG=/kdc/krb5.conf     KRB5_KDC_PROFILE=/kdc/kdc.conf     KDC_BIN=/usr/libexec/kdc     KADMIN_BIN=/usr/bin/heimdal-kadmin     KTUTIL_BIN=/usr/bin/heimdal-ktutil']
mesosphere/dcos-commons,latest,/tools-internal/kdc-api-server/Dockerfile.heimdal-centos7,CMD,1,['/usr/bin/supervisord -c /kdc/supervisord.conf']
mesosphere/dcos-commons,latest,/tools-internal/kdc-api-server/Dockerfile.heimdal-alpine,FROM,2,"['golang:1.11', 'alpine:3.9']"
mesosphere/dcos-commons,latest,/tools-internal/kdc-api-server/Dockerfile.heimdal-alpine,WORKDIR,2,"['/go/src/github.com/mesosphere/kdc-api-server', '/kdc']"
mesosphere/dcos-commons,latest,/tools-internal/kdc-api-server/Dockerfile.heimdal-alpine,RUN,4,"['go get -d -v golang.org/x/net/html gopkg.in/jcmturner/gokrb5.v7/keytab', 'go get github.com/dcos/client-go/dcos', 'CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -a -installsuffix cgo -o api-server .', 'apk add --no-cache heimdal supervisor &&     mkdir -p /var/heimdal &&     kstash --random-key &&     ${KADMIN_BIN} -l init --realm-max-ticket-life=unlimited --realm-max-renewable-life=unlimited LOCAL']"
mesosphere/dcos-commons,latest,/tools-internal/kdc-api-server/Dockerfile.heimdal-alpine,COPY,3,"['server/ /go/src/github.com/mesosphere/kdc-api-server', 'docker/* /kdc/', '--from=0 /go/src/github.com/mesosphere/kdc-api-server/api-server /kdc']"
mesosphere/dcos-commons,latest,/tools-internal/kdc-api-server/Dockerfile.heimdal-alpine,ENV,1,['KRB5_CONFIG=/kdc/krb5.conf     KRB5_KDC_PROFILE=/kdc/kdc.conf     KDC_BIN=/usr/sbin/kdc     KADMIN_BIN=/usr/bin/kadmin     KTUTIL_BIN=/usr/bin/ktutil']
mesosphere/dcos-commons,latest,/tools-internal/kdc-api-server/Dockerfile.heimdal-alpine,CMD,1,['/usr/bin/supervisord -c /kdc/supervisord.conf']
mesosphere/dcos-commons,latest,/tools/Dockerfile,FROM,1,['nvaziri/kdc:dev_0']
mesosphere/dcos-commons,latest,/tools/Dockerfile,CMD,1,['/run.sh']
TuringLang/Turing.jl,latest,/docker/0.8.3/Dockerfile,FROM,1,['julia:1.3.1-buster']
TuringLang/Turing.jl,latest,/docker/0.8.3/Dockerfile,RUN,1,"['set -eux; \tjulia -e \'using Pkg; Pkg.add(Pkg.PackageSpec(name=""Turing"", version=""0.8.3""))\'; \tjulia -e \'using Turing\'; \tmkdir -p ~/.julia/config; \techo \'using Turing\' >> ~/.julia/config/startup.jl']"
TuringLang/Turing.jl,latest,/docker/latest/Dockerfile,FROM,1,['julia:1.3.1-buster']
TuringLang/Turing.jl,latest,/docker/latest/Dockerfile,RUN,1,"['set -eux; \tjulia -e \'using Pkg; Pkg.add(Pkg.PackageSpec(name=""Turing"", version=""0.9.0""))\'; \tjulia -e \'using Turing\'; \tmkdir -p ~/.julia/config; \techo \'using Turing\' >> ~/.julia/config/startup.jl']"
prabhuomkar/pytorch-cpp,latest,/Dockerfile,ARG,8,"['BASE_IMAGE=ubuntu:18.04', 'PYTHON_VERSION=3.8', 'PYTHON_VERSION', 'PYTORCH_VERSION=1.10.1', 'TORCHVISION_VERSION=0.11.2', 'PYTHON_VERSION', 'GROUP_ID=1000', 'USER_ID=1000']"
prabhuomkar/pytorch-cpp,latest,/Dockerfile,FROM,4,"['${BASE_IMAGE} AS dev-base', 'dev-base AS conda', 'conda AS conda-installs', 'conda AS build']"
prabhuomkar/pytorch-cpp,latest,/Dockerfile,RUN,5,"['apt-get update &&     apt-get install -y --no-install-recommends     build-essential     curl     git     ca-certificates &&     apt-get autoremove -y &&     rm -rf /var/lib/apt/lists/*', 'curl --silent --show-error --location --output ~/miniconda.sh https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh  &&     chmod +x ~/miniconda.sh &&     ~/miniconda.sh -b -p /opt/conda &&     rm ~/miniconda.sh &&     conda install -y python=${PYTHON_VERSION} &&     conda clean -ya', 'conda install pytorch==${PYTORCH_VERSION} torchvision==${TORCHVISION_VERSION} cpuonly -y -c pytorch && conda clean -ya', 'pip install --upgrade --no-cache-dir cmake &&     groupadd --gid ${GROUP_ID} pytorch &&     useradd --uid ${USER_ID} --gid pytorch  --create-home --no-log-init --shell /bin/bash pytorch &&     chown --changes --silent --no-dereference --recursive ${USER_ID}:${GROUP_ID} /home/pytorch', 'chmod +x /docker-entrypoint.sh']"
prabhuomkar/pytorch-cpp,latest,/Dockerfile,ENV,5,"['PATH /opt/conda/bin:$PATH', 'CONDA_AUTO_UPDATE_CONDA=false', 'NO_CUDA=1', 'PYTHON_VERSION=${PYTHON_VERSION}', 'HOME=/home/pytorch']"
prabhuomkar/pytorch-cpp,latest,/Dockerfile,WORKDIR,1,['/pytorch-cpp']
prabhuomkar/pytorch-cpp,latest,/Dockerfile,USER,1,['pytorch']
prabhuomkar/pytorch-cpp,latest,/Dockerfile,COPY,2,"['--from=conda-installs /opt/conda /opt/conda', '--chown=pytorch:pytorch ./docker/docker-entrypoint.sh /']"
prabhuomkar/pytorch-cpp,latest,/Dockerfile,ENTRYPOINT,1,"['[ ""/docker-entrypoint.sh"" ]']"
prabhuomkar/pytorch-cpp,latest,/Dockerfile,LABEL,1,"['maintainer=""prabhuomkar@pm.me,markus.fleischhacker28@gmail.com""']"
polakowo/vectorbt,latest,/Dockerfile,FROM,1,['jupyter/scipy-notebook:bbf0ada0a935']
polakowo/vectorbt,latest,/Dockerfile,USER,2,"['root', '$NB_UID']"
polakowo/vectorbt,latest,/Dockerfile,WORKDIR,3,"['/tmp', 'vectorbt', '""$HOME/work""']"
polakowo/vectorbt,latest,/Dockerfile,RUN,5,"['apt-get update &&  apt-get install -yq --no-install-recommends curl &&  apt-get clean &&  rm -rf /var/lib/apt/lists/*', 'chmod -R +x scripts', 'if [[ -n ""${FULL}"" ]] ; then     scripts/install-talib.sh && pip install --no-cache-dir .[full] ; else     pip install --no-cache-dir . ; fi', 'scripts/install-labextensions.sh &&     jupyter lab clean &&     npm cache clean --force &&     rm -rf /home/$NB_USER/.cache/yarn &&     rm -rf $CONDA_DIR/share/jupyter/lab/staging', 'if [[ -n ""${TEST}"" ]] ; then     pip install --no-cache-dir pytest &&     export NUMBA_BOUNDSCHECK=1 &&     export NUMBA_DISABLE_JIT=1 &&     python -m pytest tests ; fi']"
polakowo/vectorbt,latest,/Dockerfile,COPY,1,['. vectorbt']
polakowo/vectorbt,latest,/Dockerfile,ARG,2,"['FULL=""yes""', 'TEST']"
polakowo/vectorbt,latest,/Dockerfile,ENV,1,"['JUPYTER_ENABLE_LAB ""yes""']"
polakowo/vectorbt,latest,/apps/candlestick-patterns/Dockerfile,FROM,1,['python:3.8-slim']
polakowo/vectorbt,latest,/apps/candlestick-patterns/Dockerfile,RUN,6,"['apt-get -y update && apt-get -y install gcc curl make', 'pip install --upgrade pip', 'pip install numpy>=1.19.4', 'curl -O https://netcologne.dl.sourceforge.net/project/ta-lib/ta-lib/0.4.0/ta-lib-0.4.0-src.tar.gz     && tar -xzf ta-lib-0.4.0-src.tar.gz     && cd ta-lib/     && ./configure --prefix=/usr     && make     && make install     && cd ..', 'pip install --no-cache-dir -r requirements.txt', 'apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*']"
polakowo/vectorbt,latest,/apps/candlestick-patterns/Dockerfile,COPY,3,"['requirements.txt .', 'assets ./assets', 'app.py .']"
polakowo/vectorbt,latest,/apps/candlestick-patterns/Dockerfile,CMD,1,"['[""python"", ""app.py""]']"
WasmEdge/WasmEdge,latest,/utils/docker/Dockerfile.ci-image-base,FROM,1,['ubuntu:20.04']
WasmEdge/WasmEdge,latest,/utils/docker/Dockerfile.ci-image-base,MAINTAINER,1,['hydai hydai@secondstate.io']
WasmEdge/WasmEdge,latest,/utils/docker/Dockerfile.ci-image-base,ENV,1,['DEBIAN_FRONTEND=noninteractive']
WasmEdge/WasmEdge,latest,/utils/docker/Dockerfile.ci-image-base,RUN,4,"['apt update && apt upgrade -y \t&& apt install -y \tapt-transport-https \tca-certificates \tcurl \tgnupg-agent \tsoftware-properties-common', 'curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add -', 'add-apt-repository \t\t""deb [arch=amd64] https://download.docker.com/linux/ubuntu \t\t$(lsb_release -cs) \t\tstable""', 'apt update && apt install -y \tdocker-ce \tdocker-ce-cli \tcontainerd.io']"
WasmEdge/WasmEdge,latest,/utils/docker/Dockerfile.appdev_x86_64,FROM,1,['ubuntu:21.04']
WasmEdge/WasmEdge,latest,/utils/docker/Dockerfile.appdev_x86_64,RUN,9,"['apt-get update &&    DEBIAN_FRONTEND=noninteractive apt-get install -y wget git curl software-properties-common golang', ""curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- --default-toolchain stable -y"", 'rustup target add wasm32-wasi', 'curl https://raw.githubusercontent.com/second-state/rustwasmc/master/installer/init.sh -sSf | sh', 'curl -sL https://deb.nodesource.com/setup_12.x | bash -', 'apt-get install -y nodejs', 'npm install wasmedge-extensions', 'mkdir -p /root/examples', 'wget https://github.com/WasmEdge/WasmEdge/raw/master/tools/wasmedge/examples/hello.wasm &&    wget https://github.com/WasmEdge/WasmEdge/raw/master/tools/wasmedge/examples/js/qjs.wasm &&    wget https://github.com/WasmEdge/WasmEdge/raw/master/tools/wasmedge/examples/js/hello.js &&    wget https://github.com/WasmEdge/WasmEdge/raw/master/tools/wasmedge/examples/js/repl.js &&    wget https://github.com/WasmEdge/WasmEdge/raw/master/tools/wasmedge/examples/js/qjs_tf.wasm &&    wget -O tf_image_classify.js https://raw.githubusercontent.com/second-state/wasmedge-quickjs/main/example_js/tensorflow_lite_demo/main.js &&    wget https://github.com/second-state/wasmedge-quickjs/raw/main/example_js/tensorflow_lite_demo/lite-model_aiy_vision_classifier_food_V1_1.tflite &&    wget https://github.com/second-state/wasmedge-quickjs/raw/main/example_js/tensorflow_lite_demo/food.jpg &&    wget https://github.com/second-state/wasmedge-quickjs/raw/main/example_js/tensorflow_lite_demo/aiy_food_V1_labelmap.txt']"
WasmEdge/WasmEdge,latest,/utils/docker/Dockerfile.appdev_x86_64,ENV,1,['PATH=/root/.cargo/bin:$PATH']
WasmEdge/WasmEdge,latest,/utils/docker/Dockerfile.appdev_x86_64,WORKDIR,1,['/root/examples']
WasmEdge/WasmEdge,latest,/utils/docker/Dockerfile.appdev_x86_64,ENTRYPOINT,1,"['[""/bin/bash"", ""-l""]']"
WasmEdge/WasmEdge,latest,/utils/docker/Dockerfile.manylinux2014_aarch64,FROM,1,['quay.io/pypa/manylinux2014_aarch64']
WasmEdge/WasmEdge,latest,/utils/docker/Dockerfile.manylinux2014_aarch64,MAINTAINER,1,['hydai hydai@secondstate.io']
WasmEdge/WasmEdge,latest,/utils/docker/Dockerfile.manylinux2014_aarch64,ADD,1,['SHA256SUM /root/']
WasmEdge/WasmEdge,latest,/utils/docker/Dockerfile.manylinux2014_aarch64,ENV,6,"['PATH /toolchain/bin:$PATH', 'CC gcc', 'CXX g++', 'CPPFLAGS -I/toolchain/include', 'LDFLAGS -L/toolchain/lib64', 'PKG_CONFIG_PATH /toolchain/lib64/pkgconfig']"
WasmEdge/WasmEdge,latest,/utils/docker/Dockerfile.manylinux2014_aarch64,RUN,2,"['cd && (yum check-update || true) && yum install -y xz openssl-devel rpm-build &&     export CPU=$(/opt/python/cp39-cp39/bin/python3 -c         \'import multiprocessing; print(multiprocessing.cpu_count())\') &&     export CFGFLAGS=""--prefix=/toolchain --disable-shared --libdir=/toolchain/lib64"" &&     curl -s -L -O --remote-name-all         https://ftp.gnu.org/gnu/gmp/gmp-6.2.1.tar.xz         https://ftp.gnu.org/gnu/mpfr/mpfr-4.1.0.tar.xz         https://ftp.gnu.org/gnu/mpc/mpc-1.2.1.tar.gz         https://libisl.sourceforge.io/isl-0.24.tar.xz         https://github.com/facebook/zstd/releases/download/v1.5.0/zstd-1.5.0.tar.gz         https://ftp.gnu.org/gnu/gcc/gcc-11.1.0/gcc-11.1.0.tar.xz         https://github.com/Kitware/CMake/releases/download/v3.20.2/cmake-3.20.2.tar.gz         https://github.com/ninja-build/ninja/archive/v1.10.2.tar.gz         https://github.com/llvm/llvm-project/releases/download/llvmorg-12.0.0/llvm-12.0.0.src.tar.xz         https://github.com/llvm/llvm-project/releases/download/llvmorg-12.0.0/lld-12.0.0.src.tar.xz         https://github.com/llvm/llvm-project/releases/download/llvmorg-12.0.0/libunwind-12.0.0.src.tar.xz &&     sha256sum -c SHA256SUM &&     xz -dc gmp-6.2.1.tar.xz | tar -xf - &&     xz -dc mpfr-4.1.0.tar.xz | tar -xf - &&     gzip -dc mpc-1.2.1.tar.gz | tar -xf - &&     xz -dc isl-0.24.tar.xz | tar -xf - &&     gzip -dc zstd-1.5.0.tar.gz | tar -xf - &&     xz -dc gcc-11.1.0.tar.xz | tar -xf - &&     gzip -dc cmake-3.20.2.tar.gz | tar -xf - &&     gzip -dc v1.10.2.tar.gz | tar -xf - &&     xz -dc llvm-12.0.0.src.tar.xz | tar -xf - &&     xz -dc lld-12.0.0.src.tar.xz | tar -xf - &&     xz -dc libunwind-12.0.0.src.tar.xz | tar -xf - &&     mkdir build && cd build && ../gmp-6.2.1/configure --build=aarch64-redhat-linux-gnu $CFGFLAGS && make -s -j $CPU && make -s install && cd - && rm -rf build &&     mkdir build && cd build && ../mpfr-4.1.0/configure $CFGFLAGS && make -s -j $CPU && make -s install && cd - && rm -rf build &&     mkdir build && cd build && ../mpc-1.2.1/configure $CFGFLAGS && make -s -j $CPU && make -s install && cd - && rm -rf build &&     mkdir build && cd build && ../isl-0.24/configure $CFGFLAGS && make -s -j $CPU && make -s install && cd - && rm -rf build &&     export ZSTDFLAGS=""PREFIX=/toolchain LIBDIR=/toolchain/lib64 SED_ERE_OPT=--regexp-extended"" &&     cd zstd-1.5.0 && make -s $ZSTDFLAGS -j $CPU && make -s $ZSTDFLAGS install && rm -f /toolchain/lib64/libzstd.so* && cd - &&     mkdir build && cd build && ../gcc-11.1.0/configure --prefix=/toolchain --libdir=/toolchain/lib64         --with-gmp=/toolchain --with-gmp-lib=/toolchain/lib64         --with-zstd=/toolchain --with-zstd-lib=/toolchain/lib64         --disable-libmpx --disable-libsanitizer --disable-libunwind-exceptions         --disable-multilib --enable-__cxa_atexit --enable-gnu-indirect-function         --enable-gnu-unique-object --enable-initfini-array --enable-languages=""c,c++,lto""         --enable-linker-build-id --enable-lto --enable-plugin --enable-threads=posix         --with-default-libstdcxx-abi=""gcc4-compatible""         --with-gcc-major-version-only --with-linker-hash-style=""gnu""         --with-arch=""armv8-a"" &&     make -s -j $CPU && make -s install && cd - && rm -rf build &&     mv -v /toolchain/lib64/libstdc++.so.6.0.29 /toolchain/lib64/libstdc++.so.6.0.29.backup &&     echo -e ""OUTPUT_FORMAT(elf64-aarch64)\\nINPUT ( libstdc++.so.6.0.19 libstdc++.a )""        > /toolchain/lib64/libstdc++.so.6.0.29 &&     export PATH=""/toolchain/bin:$PATH"" &&     mkdir build && cd build && /opt/python/cp39-cp39/bin/python         ../ninja-1.10.2/configure.py --bootstrap         --with-python=/opt/python/cp39-cp39/bin/python &&     cp -v ninja /toolchain/bin/ninja && cd - && rm -rf build &&     mkdir build && cd build && ../cmake-3.20.2/configure --prefix=/toolchain         --parallel=$CPU && make -s -j $CPU && make -s install && cd - && rm -rf build &&     mv -v llvm-12.0.0.src llvm &&     mv -v lld-12.0.0.src lld &&     mv -v libunwind-12.0.0.src libunwind &&     cmake -Bbuild -GNinja -DCMAKE_BUILD_TYPE=Release         -DCMAKE_INSTALL_PREFIX=/toolchain         -DPython3_ROOT_DIR=/opt/python/cp39-cp39 -DLLVM_LIBDIR_SUFFIX=64         -DLLVM_TARGETS_TO_BUILD=""AArch64"" -DLLVM_ENABLE_PROJECTS=lld         -DLLVM_DEFAULT_TARGET_TRIPLE=""aarch64-redhat-linux-gnu"" llvm &&     cmake --build build --target install &&     rm -rf build && rm -rf *', 'yum clean all']"
WasmEdge/WasmEdge,latest,/utils/docker/Dockerfile.ubuntu2104_armv7l,FROM,1,['arm32v7/ubuntu:hirsute']
WasmEdge/WasmEdge,latest,/utils/docker/Dockerfile.ubuntu2104_armv7l,MAINTAINER,1,['hydai hydai@secondstate.io']
WasmEdge/WasmEdge,latest,/utils/docker/Dockerfile.ubuntu2104_armv7l,ENV,3,"['DEBIAN_FRONTEND=noninteractive', 'CC=gcc', 'CXX=g++']"
WasmEdge/WasmEdge,latest,/utils/docker/Dockerfile.ubuntu2104_armv7l,RUN,2,"['apt update && apt upgrade -y \t&& apt install -y \tbuild-essential \tcmake \tcurl \tdpkg-dev \tgcc \tgcc-multilib \tg++ \tg++-multilib \tgit \tllvm-12-dev \tlibboost-all-dev \tliblld-12-dev \tlibssl-dev \tninja-build \tsoftware-properties-common \tpython3 \trpm \twget \txz-utils', 'rm -rf /var/lib/apt/lists/*']"
WasmEdge/WasmEdge,latest,/utils/docker/Dockerfile.build-clang,ARG,1,['BASE=wasmedge/wasmedge:ubuntu-base']
WasmEdge/WasmEdge,latest,/utils/docker/Dockerfile.build-clang,FROM,1,['${BASE}']
WasmEdge/WasmEdge,latest,/utils/docker/Dockerfile.build-clang,RUN,2,"['apt update && apt install -y \tclang-12', 'rm -rf /var/lib/apt/lists/*']"
WasmEdge/WasmEdge,latest,/utils/docker/Dockerfile.build-clang,ENV,2,"['CC=/usr/bin/clang-12', 'CXX=/usr/bin/clang++-12']"
WasmEdge/WasmEdge,latest,/utils/docker/Dockerfile.manylinux2010_x86_64,FROM,1,['quay.io/pypa/manylinux2010_x86_64']
WasmEdge/WasmEdge,latest,/utils/docker/Dockerfile.manylinux2010_x86_64,MAINTAINER,1,['hydai hydai@secondstate.io']
WasmEdge/WasmEdge,latest,/utils/docker/Dockerfile.manylinux2010_x86_64,ADD,1,['SHA256SUM /root/']
WasmEdge/WasmEdge,latest,/utils/docker/Dockerfile.manylinux2010_x86_64,ENV,6,"['PATH /toolchain/bin:$PATH', 'CC gcc', 'CXX g++', 'CPPFLAGS -I/toolchain/include', 'LDFLAGS -L/toolchain/lib64', 'PKG_CONFIG_PATH /toolchain/lib64/pkgconfig']"
WasmEdge/WasmEdge,latest,/utils/docker/Dockerfile.manylinux2010_x86_64,RUN,2,"['cd && (yum check-update || true) && yum install -y xz openssl-devel rpm-build dpkg &&     export CPU=$(/opt/python/cp39-cp39/bin/python3 -c         \'import multiprocessing; print(multiprocessing.cpu_count())\') &&     export CFGFLAGS=""--prefix=/toolchain --disable-shared --libdir=/toolchain/lib64"" &&     curl -s -L -O --remote-name-all         https://ftp.gnu.org/gnu/gmp/gmp-6.2.1.tar.xz         https://ftp.gnu.org/gnu/mpfr/mpfr-4.1.0.tar.xz         https://ftp.gnu.org/gnu/mpc/mpc-1.2.1.tar.gz         https://libisl.sourceforge.io/isl-0.24.tar.xz         https://github.com/facebook/zstd/releases/download/v1.5.0/zstd-1.5.0.tar.gz         https://ftp.gnu.org/gnu/gcc/gcc-11.1.0/gcc-11.1.0.tar.xz         https://github.com/Kitware/CMake/releases/download/v3.20.2/cmake-3.20.2.tar.gz         https://github.com/ninja-build/ninja/archive/v1.10.2.tar.gz         https://github.com/llvm/llvm-project/releases/download/llvmorg-12.0.0/llvm-12.0.0.src.tar.xz         https://github.com/llvm/llvm-project/releases/download/llvmorg-12.0.0/lld-12.0.0.src.tar.xz         https://github.com/llvm/llvm-project/releases/download/llvmorg-12.0.0/libunwind-12.0.0.src.tar.xz &&     sha256sum -c SHA256SUM &&     xz -dc gmp-6.2.1.tar.xz | tar -xf - &&     xz -dc mpfr-4.1.0.tar.xz | tar -xf - &&     gzip -dc mpc-1.2.1.tar.gz | tar -xf - &&     xz -dc isl-0.24.tar.xz | tar -xf - &&     gzip -dc zstd-1.5.0.tar.gz | tar -xf - &&     xz -dc gcc-11.1.0.tar.xz | tar -xf - &&     gzip -dc cmake-3.20.2.tar.gz | tar -xf - &&     gzip -dc v1.10.2.tar.gz | tar -xf - &&     xz -dc llvm-12.0.0.src.tar.xz | tar -xf - &&     xz -dc lld-12.0.0.src.tar.xz | tar -xf - &&     xz -dc libunwind-12.0.0.src.tar.xz | tar -xf - &&     mkdir build && cd build && ../gmp-6.2.1/configure --build=x86_64-pc-linux-gnu $CFGFLAGS && make -s -j $CPU && make -s install && cd - && rm -rf build &&     mkdir build && cd build && ../mpfr-4.1.0/configure $CFGFLAGS && make -s -j $CPU && make -s install && cd - && rm -rf build &&     mkdir build && cd build && ../mpc-1.2.1/configure $CFGFLAGS && make -s -j $CPU && make -s install && cd - && rm -rf build &&     mkdir build && cd build && ../isl-0.24/configure $CFGFLAGS && make -s -j $CPU && make -s install && cd - && rm -rf build &&     export ZSTDFLAGS=""PREFIX=/toolchain LIBDIR=/toolchain/lib64 SED_ERE_OPT=--regexp-extended"" &&     cd zstd-1.5.0 && make -s $ZSTDFLAGS -j $CPU && make -s $ZSTDFLAGS install && rm -f /toolchain/lib64/libzstd.so* && cd - &&     mkdir build && cd build && ../gcc-11.1.0/configure --prefix=/toolchain --libdir=/toolchain/lib64         --with-gmp=/toolchain --with-gmp-lib=/toolchain/lib64         --with-zstd=/toolchain --with-zstd-lib=/toolchain/lib64         --disable-libmpx --disable-libsanitizer --disable-libunwind-exceptions         --disable-multilib --enable-__cxa_atexit --enable-gnu-indirect-function         --enable-gnu-unique-object --enable-initfini-array --enable-languages=""c,c++,lto""         --enable-linker-build-id --enable-lto --enable-plugin --enable-threads=posix         --with-default-libstdcxx-abi=""gcc4-compatible""         --with-gcc-major-version-only --with-linker-hash-style=""gnu""         --with-arch=""x86-64"" --with-tune=""generic"" &&     make -s -j $CPU && make -s install && cd - && rm -rf build &&     mv -v /toolchain/lib64/libstdc++.so.6.0.29 /toolchain/lib64/libstdc++.so.6.0.29.backup &&     echo -e ""OUTPUT_FORMAT(elf64-x86-64)\\nINPUT ( libstdc++.so.6.0.13 libstdc++.a )""        > /toolchain/lib64/libstdc++.so.6.0.29 &&     export PATH=""/toolchain/bin:$PATH"" &&     mkdir build && cd build && /opt/python/cp39-cp39/bin/python         ../ninja-1.10.2/configure.py --bootstrap         --with-python=/opt/python/cp39-cp39/bin/python &&     cp -v ninja /toolchain/bin/ninja && cd - && rm -rf build &&     mkdir build && cd build && ../cmake-3.20.2/configure --prefix=/toolchain         --parallel=$CPU && make -s -j $CPU && make -s install && cd - && rm -rf build &&     mv -v llvm-12.0.0.src llvm &&     mv -v lld-12.0.0.src lld &&     mv -v libunwind-12.0.0.src libunwind &&     cmake -Bbuild -GNinja -DCMAKE_BUILD_TYPE=Release         -DCMAKE_INSTALL_PREFIX=/toolchain         -DPython3_ROOT_DIR=/opt/python/cp39-cp39 -DLLVM_LIBDIR_SUFFIX=64         -DLLVM_TARGETS_TO_BUILD=""X86"" -DLLVM_ENABLE_PROJECTS=lld         -DLLVM_DEFAULT_TARGET_TRIPLE=""x86_64-pc-linux-gnu"" llvm &&     cmake --build build --target install &&     rm -rf build && rm -rf *', 'yum clean all']"
WasmEdge/WasmEdge,latest,/utils/docker/Dockerfile.build-gcc,ARG,1,['BASE=wasmedge/wasmedge:ubuntu-base']
WasmEdge/WasmEdge,latest,/utils/docker/Dockerfile.build-gcc,FROM,1,['${BASE}']
WasmEdge/WasmEdge,latest,/utils/docker/Dockerfile.build-gcc,RUN,2,"['apt update && apt install -y \tgcc \tg++', 'rm -rf /var/lib/apt/lists/*']"
WasmEdge/WasmEdge,latest,/utils/docker/Dockerfile.build-gcc,ENV,2,"['CC=gcc', 'CXX=g++']"
WasmEdge/WasmEdge,latest,/utils/docker/Dockerfile.ubuntu2004_x86_64,FROM,1,['ubuntu:20.04']
WasmEdge/WasmEdge,latest,/utils/docker/Dockerfile.ubuntu2004_x86_64,MAINTAINER,1,['hydai hydai@secondstate.io']
WasmEdge/WasmEdge,latest,/utils/docker/Dockerfile.ubuntu2004_x86_64,ENV,3,"['DEBIAN_FRONTEND=noninteractive', 'CC=gcc', 'CXX=g++']"
WasmEdge/WasmEdge,latest,/utils/docker/Dockerfile.ubuntu2004_x86_64,RUN,2,"['apt update && apt upgrade -y \t&& apt install -y \tsoftware-properties-common \twget \tcmake \tninja-build \tcurl \tgit \tdpkg-dev \tlibboost-all-dev \tllvm-10-dev \tliblld-10-dev \tgcc \trpm \tdpkg-dev \tg++', 'rm -rf /var/lib/apt/lists/*']"
WasmEdge/WasmEdge,latest,/utils/docker/Dockerfile.manylinux2014_x86_64,FROM,1,['quay.io/pypa/manylinux2014_x86_64']
WasmEdge/WasmEdge,latest,/utils/docker/Dockerfile.manylinux2014_x86_64,MAINTAINER,1,['hydai hydai@secondstate.io']
WasmEdge/WasmEdge,latest,/utils/docker/Dockerfile.manylinux2014_x86_64,ADD,1,['SHA256SUM /root/']
WasmEdge/WasmEdge,latest,/utils/docker/Dockerfile.manylinux2014_x86_64,ENV,6,"['PATH /toolchain/bin:$PATH', 'CC gcc', 'CXX g++', 'CPPFLAGS -I/toolchain/include', 'LDFLAGS -L/toolchain/lib64', 'PKG_CONFIG_PATH /toolchain/lib64/pkgconfig']"
WasmEdge/WasmEdge,latest,/utils/docker/Dockerfile.manylinux2014_x86_64,RUN,2,"['cd && (yum check-update || true) && yum install -y xz openssl-devel rpm-build dpkg &&     export CPU=$(/opt/python/cp39-cp39/bin/python3 -c         \'import multiprocessing; print(multiprocessing.cpu_count())\') &&     export CFGFLAGS=""--prefix=/toolchain --disable-shared --libdir=/toolchain/lib64"" &&     curl -s -L -O --remote-name-all         https://ftp.gnu.org/gnu/gmp/gmp-6.2.1.tar.xz         https://ftp.gnu.org/gnu/mpfr/mpfr-4.1.0.tar.xz         https://ftp.gnu.org/gnu/mpc/mpc-1.2.1.tar.gz         https://libisl.sourceforge.io/isl-0.24.tar.xz         https://github.com/facebook/zstd/releases/download/v1.5.0/zstd-1.5.0.tar.gz         https://ftp.gnu.org/gnu/gcc/gcc-11.1.0/gcc-11.1.0.tar.xz         https://github.com/Kitware/CMake/releases/download/v3.20.2/cmake-3.20.2.tar.gz         https://github.com/ninja-build/ninja/archive/v1.10.2.tar.gz         https://github.com/llvm/llvm-project/releases/download/llvmorg-12.0.0/llvm-12.0.0.src.tar.xz         https://github.com/llvm/llvm-project/releases/download/llvmorg-12.0.0/lld-12.0.0.src.tar.xz         https://github.com/llvm/llvm-project/releases/download/llvmorg-12.0.0/libunwind-12.0.0.src.tar.xz &&     sha256sum -c SHA256SUM &&     xz -dc gmp-6.2.1.tar.xz | tar -xf - &&     xz -dc mpfr-4.1.0.tar.xz | tar -xf - &&     gzip -dc mpc-1.2.1.tar.gz | tar -xf - &&     xz -dc isl-0.24.tar.xz | tar -xf - &&     gzip -dc zstd-1.5.0.tar.gz | tar -xf - &&     xz -dc gcc-11.1.0.tar.xz | tar -xf - &&     gzip -dc cmake-3.20.2.tar.gz | tar -xf - &&     gzip -dc v1.10.2.tar.gz | tar -xf - &&     xz -dc llvm-12.0.0.src.tar.xz | tar -xf - &&     xz -dc lld-12.0.0.src.tar.xz | tar -xf - &&     xz -dc libunwind-12.0.0.src.tar.xz | tar -xf - &&     mkdir build && cd build && ../gmp-6.2.1/configure --build=x86_64-pc-linux-gnu $CFGFLAGS && make -s -j $CPU && make -s install && cd - && rm -rf build &&     mkdir build && cd build && ../mpfr-4.1.0/configure $CFGFLAGS && make -s -j $CPU && make -s install && cd - && rm -rf build &&     mkdir build && cd build && ../mpc-1.2.1/configure $CFGFLAGS && make -s -j $CPU && make -s install && cd - && rm -rf build &&     mkdir build && cd build && ../isl-0.24/configure $CFGFLAGS && make -s -j $CPU && make -s install && cd - && rm -rf build &&     export ZSTDFLAGS=""PREFIX=/toolchain LIBDIR=/toolchain/lib64 SED_ERE_OPT=--regexp-extended"" &&     cd zstd-1.5.0 && make -s $ZSTDFLAGS -j $CPU && make -s $ZSTDFLAGS install && rm -f /toolchain/lib64/libzstd.so* && cd - &&     mkdir build && cd build && ../gcc-11.1.0/configure --prefix=/toolchain --libdir=/toolchain/lib64         --with-gmp=/toolchain --with-gmp-lib=/toolchain/lib64         --with-zstd=/toolchain --with-zstd-lib=/toolchain/lib64         --disable-libmpx --disable-libsanitizer --disable-libunwind-exceptions         --disable-multilib --enable-__cxa_atexit --enable-gnu-indirect-function         --enable-gnu-unique-object --enable-initfini-array --enable-languages=""c,c++,lto""         --enable-linker-build-id --enable-lto --enable-plugin --enable-threads=posix         --with-default-libstdcxx-abi=""gcc4-compatible""         --with-gcc-major-version-only --with-linker-hash-style=""gnu""         --with-arch=""x86-64"" --with-tune=""generic"" &&     make -s -j $CPU && make -s install && cd - && rm -rf build &&     mv -v /toolchain/lib64/libstdc++.so.6.0.29 /toolchain/lib64/libstdc++.so.6.0.29.backup &&     echo -e ""OUTPUT_FORMAT(elf64-x86-64)\\nINPUT ( libstdc++.so.6.0.19 libstdc++.a )""        > /toolchain/lib64/libstdc++.so.6.0.29 &&     export PATH=""/toolchain/bin:$PATH"" &&     mkdir build && cd build && /opt/python/cp39-cp39/bin/python         ../ninja-1.10.2/configure.py --bootstrap         --with-python=/opt/python/cp39-cp39/bin/python &&     cp -v ninja /toolchain/bin/ninja && cd - && rm -rf build &&     mkdir build && cd build && ../cmake-3.20.2/configure --prefix=/toolchain         --parallel=$CPU && make -s -j $CPU && make -s install && cd - && rm -rf build &&     mv -v llvm-12.0.0.src llvm &&     mv -v lld-12.0.0.src lld &&     mv -v libunwind-12.0.0.src libunwind &&     cmake -Bbuild -GNinja -DCMAKE_BUILD_TYPE=Release         -DCMAKE_INSTALL_PREFIX=/toolchain         -DPython3_ROOT_DIR=/opt/python/cp39-cp39 -DLLVM_LIBDIR_SUFFIX=64         -DLLVM_TARGETS_TO_BUILD=""X86"" -DLLVM_ENABLE_PROJECTS=lld         -DLLVM_DEFAULT_TARGET_TRIPLE=""x86_64-pc-linux-gnu"" llvm &&     cmake --build build --target install &&     rm -rf build && rm -rf *', 'yum clean all']"
WasmEdge/WasmEdge,latest,/utils/docker/Dockerfile.appdev_aarch64,FROM,1,['ubuntu:21.04']
WasmEdge/WasmEdge,latest,/utils/docker/Dockerfile.appdev_aarch64,RUN,9,"['apt-get update &&    DEBIAN_FRONTEND=noninteractive apt-get install -y wget git curl software-properties-common golang', ""curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- --default-toolchain stable -y"", 'rustup target add wasm32-wasi', 'curl https://raw.githubusercontent.com/second-state/rustwasmc/master/installer/init.sh -sSf | sh', 'curl -sL https://deb.nodesource.com/setup_12.x | bash -', 'apt-get install -y nodejs', 'npm install wasmedge-core', 'mkdir -p /root/examples', 'wget https://github.com/WasmEdge/WasmEdge/raw/master/tools/wasmedge/examples/hello.wasm &&    wget https://github.com/WasmEdge/WasmEdge/raw/master/tools/wasmedge/examples/js/qjs.wasm &&    wget https://github.com/WasmEdge/WasmEdge/raw/master/tools/wasmedge/examples/js/hello.js &&    wget https://github.com/WasmEdge/WasmEdge/raw/master/tools/wasmedge/examples/js/repl.js']"
WasmEdge/WasmEdge,latest,/utils/docker/Dockerfile.appdev_aarch64,ENV,1,['PATH=/root/.cargo/bin:$PATH']
WasmEdge/WasmEdge,latest,/utils/docker/Dockerfile.appdev_aarch64,WORKDIR,1,['/root/examples']
WasmEdge/WasmEdge,latest,/utils/docker/Dockerfile.appdev_aarch64,ENTRYPOINT,1,"['[""/bin/bash"", ""-l""]']"
WasmEdge/WasmEdge,latest,/utils/docker/Dockerfile.manylinux1_x86_64,FROM,1,['quay.io/pypa/manylinux1_x86_64']
WasmEdge/WasmEdge,latest,/utils/docker/Dockerfile.manylinux1_x86_64,MAINTAINER,1,['hydai hydai@secondstate.io']
WasmEdge/WasmEdge,latest,/utils/docker/Dockerfile.manylinux1_x86_64,ADD,1,['SHA256SUM gcc-4.8.2-gcc-11.patch llvm-glibc-2.5.patch cmake-glibc-2.5.patch /root/']
WasmEdge/WasmEdge,latest,/utils/docker/Dockerfile.manylinux1_x86_64,ENV,6,"['PATH /toolchain/bin:$PATH', 'CC gcc', 'CXX g++', 'CPPFLAGS -I/toolchain/include', 'LDFLAGS -L/toolchain/lib64', 'PKG_CONFIG_PATH /toolchain/lib64/pkgconfig']"
WasmEdge/WasmEdge,latest,/utils/docker/Dockerfile.manylinux1_x86_64,RUN,2,"['cd && (yum check-update || true) && yum install -y xz openssl-devel rpm-build dpkg &&     export CPU=$(/opt/python/cp39-cp39/bin/python3 -c         \'import multiprocessing; print(multiprocessing.cpu_count())\') &&     export CFGFLAGS=""--prefix=/toolchain --disable-shared --libdir=/toolchain/lib64"" &&     curl -s -L -O --remote-name-all         https://ftp.gnu.org/gnu/gmp/gmp-6.2.1.tar.xz         https://ftp.gnu.org/gnu/mpfr/mpfr-4.1.0.tar.xz         https://ftp.gnu.org/gnu/mpc/mpc-1.2.1.tar.gz         https://libisl.sourceforge.io/isl-0.24.tar.xz         https://github.com/facebook/zstd/releases/download/v1.5.0/zstd-1.5.0.tar.gz         https://ftp.gnu.org/gnu/gcc/gcc-11.1.0/gcc-11.1.0.tar.xz         https://github.com/Kitware/CMake/releases/download/v3.20.2/cmake-3.20.2.tar.gz         https://github.com/ninja-build/ninja/archive/v1.10.2.tar.gz         https://github.com/llvm/llvm-project/releases/download/llvmorg-12.0.0/llvm-12.0.0.src.tar.xz         https://github.com/llvm/llvm-project/releases/download/llvmorg-12.0.0/lld-12.0.0.src.tar.xz         https://github.com/llvm/llvm-project/releases/download/llvmorg-12.0.0/libunwind-12.0.0.src.tar.xz &&     sha256sum -c SHA256SUM &&     xz -dc gmp-6.2.1.tar.xz | tar -xf - &&     xz -dc mpfr-4.1.0.tar.xz | tar -xf - &&     gzip -dc mpc-1.2.1.tar.gz | tar -xf - &&     xz -dc isl-0.24.tar.xz | tar -xf - &&     gzip -dc zstd-1.5.0.tar.gz | tar -xf - &&     xz -dc gcc-11.1.0.tar.xz | tar -xf - &&     gzip -dc cmake-3.20.2.tar.gz | tar -xf - &&     gzip -dc v1.10.2.tar.gz | tar -xf - &&     xz -dc llvm-12.0.0.src.tar.xz | tar -xf - &&     xz -dc lld-12.0.0.src.tar.xz | tar -xf - &&     xz -dc libunwind-12.0.0.src.tar.xz | tar -xf - &&     cd gcc-11.1.0 && patch -p1 < ../gcc-4.8.2-gcc-11.patch && cd - &&     cd llvm-12.0.0.src && patch -p1 < ../llvm-glibc-2.5.patch && cd - &&     cd cmake-3.20.2 && patch -p1 < ../cmake-glibc-2.5.patch && cd - &&     mkdir build && cd build && ../gmp-6.2.1/configure --build=x86_64-pc-linux-gnu $CFGFLAGS && make -s -j $CPU && make -s install && cd - && rm -rf build &&     mkdir build && cd build && ../mpfr-4.1.0/configure $CFGFLAGS && make -s -j $CPU && make -s install && cd - && rm -rf build &&     mkdir build && cd build && ../mpc-1.2.1/configure $CFGFLAGS && make -s -j $CPU && make -s install && cd - && rm -rf build &&     mkdir build && cd build && ../isl-0.24/configure $CFGFLAGS && make -s -j $CPU && make -s install && cd - && rm -rf build &&     export ZSTDFLAGS=""PREFIX=/toolchain LIBDIR=/toolchain/lib64 SED_ERE_OPT=--regexp-extended"" &&     cd zstd-1.5.0 && make -s $ZSTDFLAGS -j $CPU && make -s $ZSTDFLAGS install && rm -f /toolchain/lib64/libzstd.so* && cd - &&     mkdir build && cd build && ../gcc-11.1.0/configure --prefix=/toolchain --libdir=/toolchain/lib64         --with-gmp=/toolchain --with-gmp-lib=/toolchain/lib64         --with-zstd=/toolchain --with-zstd-lib=/toolchain/lib64         --disable-libmpx --disable-libsanitizer --disable-libunwind-exceptions         --disable-multilib --enable-__cxa_atexit --enable-gnu-indirect-function         --disable-gnu-unique-object --enable-initfini-array --enable-languages=""c,c++,lto""         --enable-linker-build-id --enable-lto --enable-plugin --enable-threads=posix         --with-default-libstdcxx-abi=""gcc4-compatible""         --with-gcc-major-version-only --with-linker-hash-style=""gnu""         --with-arch=""x86-64"" --with-tune=""generic"" &&     make -s -j $CPU && make -s install && cd - && rm -rf build &&     mv -v /toolchain/lib64/libstdc++.so.6.0.29 /toolchain/lib64/libstdc++.so.6.0.29.backup &&     echo -e ""OUTPUT_FORMAT(elf64-x86-64)\\nINPUT ( libstdc++.so.6.0.8 libstdc++.a )""        > /toolchain/lib64/libstdc++.so.6.0.29 &&     export PATH=""/toolchain/bin:$PATH"" &&     mkdir build && cd build && /opt/python/cp39-cp39/bin/python         ../ninja-1.10.2/configure.py --bootstrap         --with-python=/opt/python/cp39-cp39/bin/python &&     cp -v ninja /toolchain/bin/ninja && cd - && rm -rf build &&     mkdir build && cd build && ../cmake-3.20.2/configure --prefix=/toolchain         --parallel=$CPU && make -s -j $CPU && make -s install && cd - && rm -rf build &&     mv -v llvm-12.0.0.src llvm &&     mv -v lld-12.0.0.src lld &&     mv -v libunwind-12.0.0.src libunwind &&     cmake -Bbuild -GNinja -DCMAKE_BUILD_TYPE=Release         -DCMAKE_INSTALL_PREFIX=/toolchain         -DPython3_ROOT_DIR=/opt/python/cp39-cp39 -DLLVM_LIBDIR_SUFFIX=64         -DLLVM_TARGETS_TO_BUILD=""X86"" -DLLVM_ENABLE_PROJECTS=lld         -DLLVM_DEFAULT_TARGET_TRIPLE=""x86_64-pc-linux-gnu"" llvm &&     cmake --build build --target install &&     rm -rf build && rm -rf *', 'yum clean all']"
WasmEdge/WasmEdge,latest,/utils/docker/Dockerfile.base,FROM,1,['ubuntu:20.04']
WasmEdge/WasmEdge,latest,/utils/docker/Dockerfile.base,MAINTAINER,1,['hydai hydai@secondstate.io']
WasmEdge/WasmEdge,latest,/utils/docker/Dockerfile.base,ENV,1,['DEBIAN_FRONTEND=noninteractive']
WasmEdge/WasmEdge,latest,/utils/docker/Dockerfile.base,RUN,2,"['apt update && apt upgrade -y \t&& apt install -y \tsoftware-properties-common \tdpkg-dev \twget \tcmake \tninja-build \tcurl \tgit \tlibboost-all-dev \tllvm-12-dev \tliblld-12-dev', 'rm -rf /var/lib/apt/lists/*']"
WasmEdge/WasmEdge,latest,/.devcontainer/Dockerfile,FROM,1,['wasmedge/wasmedge:latest']
TensorSpeech/TensorFlowASR,latest,/Dockerfile,FROM,1,['tensorflow/tensorflow:2.3.2-gpu']
TensorSpeech/TensorFlowASR,latest,/Dockerfile,RUN,5,"['apt-get update     && apt-get upgrade -y     && apt-get install -y     && apt-get -y install apt-utils gcc libpq-dev libsndfile-dev git build-essential cmake screen', 'apt clean && apt-get clean', 'pip --no-cache-dir install -r /requirements.txt', 'if [ ""$install_rnnt_loss"" = ""true"" ] ;     then if [ ""$using_gpu"" = ""true"" ] ; then export CUDA_HOME=/usr/local/cuda ; else echo \'Using CPU\' ; fi     && ./scripts/install_rnnt_loss.sh     else echo \'Using pure TensorFlow\'; fi', 'echo ""export LD_LIBRARY_PATH=/usr/local/cuda-10.2/lib64${LD_LIBRARY_PATH:+:${LD_LIBRARY_PATH}}"" >> /root/.bashrc']"
TensorSpeech/TensorFlowASR,latest,/Dockerfile,COPY,2,"['requirements.txt /', 'scripts /scripts']"
TensorSpeech/TensorFlowASR,latest,/Dockerfile,ARG,2,"['install_rnnt_loss=true', 'using_gpu=true']"
BlazingDB/blazingsql,latest,/Dockerfile,ARG,6,"['CUDA_VER=""10.2""', 'UBUNTU_VERSION=""16.04""', 'CUDA_VER=10.2', 'CONDA_CH=""-c blazingsql -c rapidsai -c nvidia""', 'PYTHON_VERSION=""3.7""', 'RAPIDS_VERSION=""0.18""']"
BlazingDB/blazingsql,latest,/Dockerfile,FROM,1,['nvidia/cuda:${CUDA_VER}-runtime-ubuntu${UBUNTU_VERSION}']
BlazingDB/blazingsql,latest,/Dockerfile,LABEL,1,"['Description=""blazingdb/blazingsql is the official BlazingDB environment for BlazingSQL on NIVIDA RAPIDS."" Vendor=""BlazingSQL"" Version=""0.4.0""']"
BlazingDB/blazingsql,latest,/Dockerfile,SHELL,1,"['[""/bin/bash"", ""-c""]']"
BlazingDB/blazingsql,latest,/Dockerfile,ENV,1,['PYTHONDONTWRITEBYTECODE=true']
BlazingDB/blazingsql,latest,/Dockerfile,RUN,1,"[""apt-get update -qq &&     apt-get install curl git -yqq --no-install-recommends &&     apt-get clean -y &&     curl -s -o /tmp/miniconda.sh https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh &&     bash /tmp/miniconda.sh -bfp /usr/local/ &&     rm -rf /tmp/miniconda.sh &&     conda create python=${PYTHON_VERSION} -y -n bsql &&     conda install -y -n bsql     ${CONDA_CH}     -c conda-forge -c defaults     cugraph=${RAPIDS_VERSION} cuml=${RAPIDS_VERSION}     cusignal=${RAPIDS_VERSION}     cuspatial=${RAPIDS_VERSION}     cuxfilter clx=${RAPIDS_VERSION}     python=${PYTHON_VERSION} cudatoolkit=${CUDA_VER}     blazingsql=${RAPIDS_VERSION}     jupyterlab     networkx statsmodels xgboost     geoviews seaborn matplotlib holoviews colorcet &&     conda clean -afy &&     rm -rf /var/cache/apt /var/lib/apt/lists/* /tmp/miniconda.sh /usr/local/pkgs/* &&     rm -rf /usr/local/envs/bsql/include &&     rm -f /usr/local/envs/bsql/lib/libpython3.*m.so.1.0 &&     find /usr/local/envs/bsql -name '__pycache__' -type d -exec rm -rf '{}' '+' &&     find /usr/local/envs/bsql -follow -type f -name '*.pyc' -delete &&     rm -rf /usr/local/envs/bsql/lib/libasan.so.5.0.0     /usr/local/envs/bsql/lib/libtsan.so.0.0.0     /usr/local/envs/bsql/lib/liblsan.so.0.0.0     /usr/local/envs/bsql/lib/libubsan.so.1.0.0     /usr/local/envs/bsql/bin/sqlite3     /usr/local/envs/bsql/bin/openssl     /usr/local/envs/bsql/share/terminfo     /usr/local/envs/bsql/bin/postgres     /usr/local/envs/bsql/bin/pg_*     /usr/local/envs/bsql/man     /usr/local/envs/bsql/qml     /usr/local/envs/bsql/qsci     /usr/local/envs/bsql/mkspecs &&     find /usr/local/envs/bsql/lib/python3.*/site-packages -name 'tests' -type d -exec rm -rf '{}' '+' &&     find /usr/local/envs/bsql/lib/python3.*/site-packages -name '*.pyx' -delete &&     find /usr/local/envs/bsql -name '*.c' -delete &&   git clone --branch=master https://github.com/BlazingDB/Welcome_to_BlazingSQL_Notebooks /blazingsql &&   rm -rf /blazingsql/.git &&   mkdir /.local /.jupyter /.cupy && chmod 777 /.local /.jupyter /.cupy""]"
BlazingDB/blazingsql,latest,/Dockerfile,WORKDIR,1,['/blazingsql']
BlazingDB/blazingsql,latest,/Dockerfile,COPY,1,['run_jupyter.sh /blazingsql']
BlazingDB/blazingsql,latest,/Dockerfile,EXPOSE,1,['8888']
BlazingDB/blazingsql,latest,/Dockerfile,CMD,1,"['[""/blazingsql/run_jupyter.sh""]']"
BlazingDB/blazingsql,latest,/powerpc/developer/Dockerfile,FROM,1,['nvidia/cuda:10.1-devel-centos7']
BlazingDB/blazingsql,latest,/powerpc/developer/Dockerfile,RUN,57,"['yum install wget gcc gcc-c++ bzip2 make libtool openssh-devel zlib-devel -y', 'wget -q http://ftp.mirrorservice.org/sites/sourceware.org/pub/gcc/releases/gcc-7.4.0/gcc-7.4.0.tar.gz', 'tar -xf gcc-7.4.0.tar.gz', './contrib/download_prerequisites', './configure --disable-multilib --enable-languages=c,c++ && make -j`nproc` && make install', 'update-alternatives --install /usr/bin/cc cc /usr/local/bin/gcc 999', 'rm -f /usr/bin/gcc', 'update-alternatives --install /usr/bin/gcc gcc /usr/local/bin/gcc 999', 'rm -f /usr/bin/g++', 'update-alternatives --install /usr/bin/g++ g++ /usr/local/bin/g++ 999', ""echo '/usr/local/lib' > /etc/ld.so.conf.d/local-lib.conf"", ""echo '/usr/local/lib64' > /etc/ld.so.conf.d/local-lib64.conf"", 'yum install openssl-devel -y', 'wget -q https://github.com/Kitware/CMake/releases/download/v3.17.3/cmake-3.17.3.tar.gz', 'tar -xf cmake-3.17.3.tar.gz', './bootstrap', 'make -j`nproc`', 'make install', 'yum install -y libffi-devel zlib zlib-devel', 'yum install -y bzip2-devel', 'yum install -y xz-devel', 'wget -q https://www.python.org/ftp/python/3.7.7/Python-3.7.7.tgz', 'tar -xf Python-3.7.7.tgz', 'cd Python-3.7.7/ && ./configure --enable-optimizations --enable-shared && make altinstall', 'update-alternatives --install /usr/bin/python3 python3 /usr/local/bin/python3.7 999', 'yum install git nano -y', 'yum install which -y', 'yum install epel-release -y', 'yum install -y openblas-devel', 'yum install -y https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm', 'yum install -y texinfo', 'yum install -y libjpeg-devel freetype-devel', 'mkdir -p /opt/blazingsql-powerpc-prefix', 'python3 -m venv /opt/blazingsql-powerpc-prefix', 'source /opt/blazingsql-powerpc-prefix/bin/activate && pip3.7 install -r /opt/requirements.txt', 'yum install -y libcurl-devel', 'yum install -y maven', 'bash /opt/install-dependencies.sh /opt/blazingsql-powerpc-prefix', 'yum install -y Lmod', 'mkdir -p /opt/sw/', 'yum install -y tree', 'chmod 777 /opt', 'chmod 777 /opt/blazingsql-powerpc-prefix', 'chmod 777 /opt/blazingsql-powerpc-prefix/bin', 'chmod 777 /opt/blazingsql-powerpc-prefix/lib', 'chmod 777 /opt/blazingsql-powerpc-prefix/lib/python3.7/', 'chmod 777 /opt/blazingsql-powerpc-prefix/lib/python3.7/site-packages/', 'chmod 777 /opt/blazingsql-powerpc-prefix/lib64', 'chmod 777 /opt/blazingsql-powerpc-prefix/include', 'chmod 777 /opt/blazingsql-powerpc-prefix/etc', 'chmod 777 /opt/blazingsql-powerpc-prefix/share', 'chmod 777 /opt/blazingsql-powerpc-prefix/share/cysignals/', 'chmod 777 /opt/blazingsql-powerpc-prefix/share/doc/', 'chmod 777 /opt/blazingsql-powerpc-prefix/share/jupyter/', 'chmod 777 /opt/blazingsql-powerpc-prefix/share/man/', 'chmod 777 /opt/blazingsql-powerpc-prefix/share/man/man1', 'yum install -y patch']"
BlazingDB/blazingsql,latest,/powerpc/developer/Dockerfile,WORKDIR,4,"['gcc-7.4.0', 'cmake-3.17.3/', '/app', '/app']"
BlazingDB/blazingsql,latest,/powerpc/developer/Dockerfile,ENV,7,"['PATH=${PATH}:/opt/blazingsql-powerpc-prefix/bin/', 'LD_LIBRARY_PATH=/usr/local/lib:/usr/local/lib64:/usr/local/nvidia/lib:/usr/local/nvidia/lib64', 'CC=/usr/local/bin/gcc', 'CXX=/usr/local/bin/g++', 'CUDACXX=/usr/local/cuda/bin/nvcc', 'CMAKE_ROOT=/usr/local/share/cmake-3.17/', 'MODULEPATH=/opt/modulefiles/']"
BlazingDB/blazingsql,latest,/powerpc/developer/Dockerfile,COPY,3,"['requirements.txt /opt/requirements.txt', 'install-dependencies.sh /opt/install-dependencies.sh', 'modulefiles /opt/modulefiles']"
BlazingDB/blazingsql,latest,/tests/KrbHDFS/hdfs/Dockerfile,ARG,1,['UBUNTU_VERSION=16.04']
BlazingDB/blazingsql,latest,/tests/KrbHDFS/hdfs/Dockerfile,FROM,1,['ubuntu:${UBUNTU_VERSION}']
BlazingDB/blazingsql,latest,/tests/KrbHDFS/hdfs/Dockerfile,LABEL,1,"['Description=""blazingsql/hdfs-testing""']"
BlazingDB/blazingsql,latest,/tests/KrbHDFS/hdfs/Dockerfile,SHELL,1,"['[""/bin/bash"", ""-c""]']"
BlazingDB/blazingsql,latest,/tests/KrbHDFS/hdfs/Dockerfile,RUN,55,"['cat /etc/os-release', 'apt-get update', 'apt-get install -y openssh-server openssh-client rsync vim rsyslog unzip libselinux1', 'echo \'alias ll=""ls -alFh""\' >> /root/.bashrc', 'ssh-keygen -q -N """" -t rsa -f /root/.ssh/id_rsa', 'cp /root/.ssh/id_rsa.pub /root/.ssh/authorized_keys', 'DEBIAN_FRONTEND=noninteractive apt-get install -y krb5-user libpam-krb5 libpam-ccreds auth-client-config', 'mkdir -p /var/log/kerberos', 'touch /var/log/kerberos/kadmind.log', 'wget https://archive.apache.org/dist/hadoop/core/hadoop-2.7.3/hadoop-2.7.3.tar.gz', 'tar -xf hadoop-2.7.3.tar.gz -C /usr/local/', 'cd /usr/local     && ln -s ./hadoop-2.7.3 hadoop     && chown root:root -R hadoop/', 'mkdir -p $HADOOP_PREFIX/input', 'apt-get install -y autoconf pkg-config make automake cmake g++-5 openjdk-8-jdk', 'wget https://github.com/google/protobuf/releases/download/v2.5.0/protobuf-2.5.0.tar.gz', 'tar -xf protobuf-2.5.0.tar.gz -C /tmp/', 'cd /tmp/protobuf-2.5.0     && ./configure     && make     && make install', 'wget https://archive.apache.org/dist/hadoop/core/hadoop-2.7.3/hadoop-2.7.3-src.tar.gz', 'tar -xf hadoop-2.7.3-src.tar.gz -C /tmp', 'wget https://www-us.apache.org/dist/maven/maven-3/3.6.2/binaries/apache-maven-3.6.2-bin.tar.gz', 'tar -xf apache-maven-3.6.2-bin.tar.gz -C /usr/local', 'cd /usr/local && ln -s ./apache-maven-3.6.2/ maven', 'wget https://www.apache.org/dist/hive/hive-1.2.2/apache-hive-1.2.2-bin.tar.gz', 'tar -xf apache-hive-1.2.2-bin.tar.gz', 'mv apache-hive-1.2.2-bin /usr/lib/hive', 'rm -rf $HADOOP_PREFIX/lib/native', 'mvn dependency:go-offline', 'ln -sf bash /bin/sh', 'apt-get install -y --no-install-recommends libcurl4-openssl-dev libssl-dev uuid-dev zlib1g-dev', 'bash && mvn compile -Pnative', 'cp target/native/target/usr/local/lib/libhadoop.a $HADOOP_PREFIX/lib/native', 'cp target/native/target/usr/local/lib/libhadoop.so.1.0.0 $HADOOP_PREFIX/lib/native', 'mvn dependency:go-offline', 'bash && mvn compile -Pnative', 'cp target/native/target/usr/local/bin/container-executor $HADOOP_PREFIX/bin/', 'chmod 6050 $HADOOP_PREFIX/bin/container-executor', 'chmod 600 /root/.ssh/config', 'chown root:root /root/.ssh/config', 'ls -la $HADOOP_PREFIX/etc/hadoop/*-env.sh', 'chmod +x $HADOOP_PREFIX/etc/hadoop/*-env.sh', 'ls -la $HADOOP_PREFIX/etc/hadoop/*-env.sh', 'sed  -i ""/^[^#]*UsePAM/ s/.*/#&/""  /etc/ssh/sshd_config', 'echo ""UsePAM no"" >> /etc/ssh/sshd_config', 'echo ""Port 2122"" >> /etc/ssh/sshd_config', 'cp $HADOOP_PREFIX/etc/hadoop/*.xml $HADOOP_PREFIX/input', 'mkdir -p /usr/java/', 'ln -fs $JAVA_HOME default', 'chmod +x $HADOOP_PREFIX/etc/hadoop/hadoop-env.sh', 'mkdir $HADOOP_PREFIX/nm-local-dirs     && mkdir $HADOOP_PREFIX/nm-log-dirs', 'chown root:root $BOOTSTRAP', 'chmod 700 $BOOTSTRAP', 'chmod +x /root/create_dir_from_info.sh', 'chmod +x /root/load_swap_dir.sh', 'chmod +x /root/create_hive_warehouse.sh', 'mkdir -p /conf_dir']"
BlazingDB/blazingsql,latest,/tests/KrbHDFS/hdfs/Dockerfile,ENV,25,"['HADOOP_PREFIX /usr/local/hadoop', 'HADOOP_COMMON_HOME $HADOOP_PREFIX', 'HADOOP_HDFS_HOME $HADOOP_PREFIX', 'HADOOP_MAPRED_HOME $HADOOP_PREFIX', 'HADOOP_YARN_HOME $HADOOP_PREFIX', 'HADOOP_CONF_DIR $HADOOP_PREFIX/etc/hadoop', 'YARN_CONF_DIR $HADOOP_PREFIX/etc/hadoop', 'NM_CONTAINER_EXECUTOR_PATH $HADOOP_PREFIX/bin/container-executor', 'HADOOP_BIN_HOME $HADOOP_PREFIX/bin', 'PATH $PATH:$HADOOP_BIN_HOME', 'KRB_REALM EXAMPLE.COM', 'DOMAIN_REALM example.com', 'KERBEROS_ADMIN admin/admin', 'KERBEROS_ADMIN_PASSWORD admin', 'KERBEROS_ROOT_USER_PASSWORD password', 'KEYTAB_DIR /etc/security/keytabs', 'FQDN hadoop.com', 'HADOOP_PROTOC_PATH /usr/local/bin/protoc', 'PATH $PATH:/usr/local/maven/bin', 'LD_LIBRARY_PATH $LD_LIBRARY_PATH:/usr/local/lib', 'HIVE_HOME /usr/lib/hive', 'PATH $PATH:$HIVE_HOME/bin', 'JAVA_HOME /usr/lib/jvm/java-8-openjdk-amd64', 'JAVA $JAVA_HOME/bin/java', 'BOOTSTRAP /etc/bootstrap.sh']"
BlazingDB/blazingsql,latest,/tests/KrbHDFS/hdfs/Dockerfile,ADD,16,"['./setting.xml /usr/local/maven/conf', 'config_files/ssh_config /root/.ssh/config', 'config_files/hadoop-env.sh $HADOOP_PREFIX/etc/hadoop/hadoop-env.sh', 'config_files/core-site.xml $HADOOP_PREFIX/etc/hadoop/core-site.xml', 'config_files/hdfs-site.xml $HADOOP_PREFIX/etc/hadoop/hdfs-site.xml', 'config_files/mapred-site.xml $HADOOP_PREFIX/etc/hadoop/mapred-site.xml', 'config_files/yarn-site.xml $HADOOP_PREFIX/etc/hadoop/yarn-site.xml', 'config_files/container-executor.cfg $HADOOP_PREFIX/etc/hadoop/container-executor.cfg', 'config_files/ssl-server.xml $HADOOP_PREFIX/etc/hadoop/ssl-server.xml', 'config_files/ssl-client.xml $HADOOP_PREFIX/etc/hadoop/ssl-client.xml', 'config_files/keystore.jks $HADOOP_PREFIX/lib/keystore.jks', 'bootstrap.sh $BOOTSTRAP', 'config_files/krb5.conf /root/krb5.conf', 'create_dir_from_info.sh /root/create_dir_from_info.sh', 'load_swap_dir.sh /root/load_swap_dir.sh', 'create_hive_warehouse.sh /root/create_hive_warehouse.sh']"
BlazingDB/blazingsql,latest,/tests/KrbHDFS/hdfs/Dockerfile,WORKDIR,4,"['/tmp/hadoop-2.7.3-src/hadoop-common-project/hadoop-common', '/tmp/hadoop-2.7.3-src/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager', '/usr/java/', '/']"
BlazingDB/blazingsql,latest,/tests/KrbHDFS/hdfs/Dockerfile,VOLUME,2,"['/tmp', '/conf_dir']"
BlazingDB/blazingsql,latest,/tests/KrbHDFS/hdfs/Dockerfile,CMD,1,"['[""/etc/bootstrap.sh"", ""-d""]']"
BlazingDB/blazingsql,latest,/tests/KrbHDFS/hdfs/Dockerfile,EXPOSE,5,"['50010 50020 50070 50075 50090 8020 9000', '10020 19888', '8030 8031 8032 8033 8040 8042 8088', '49707 2122', '10000']"
BlazingDB/blazingsql,latest,/tests/KrbHDFS/krb/Dockerfile,FROM,1,['centos:6.6']
BlazingDB/blazingsql,latest,/tests/KrbHDFS/krb/Dockerfile,LABEL,1,"['Description=""blazingsql/kerberos-testing""']"
BlazingDB/blazingsql,latest,/tests/KrbHDFS/krb/Dockerfile,RUN,3,"['rpm -Uvh http://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm', 'yum clean all', 'yum --disablerepo=""epel"" install -y krb5-server krb5-libs krb5-auth-dialog krb5-workstation']"
BlazingDB/blazingsql,latest,/tests/KrbHDFS/krb/Dockerfile,EXPOSE,1,['88 749']
BlazingDB/blazingsql,latest,/tests/KrbHDFS/krb/Dockerfile,ADD,1,['config.sh /config.sh']
BlazingDB/blazingsql,latest,/tests/KrbHDFS/krb/Dockerfile,ENTRYPOINT,1,"['[""/config.sh""]']"
exadel-inc/CompreFace,latest,/ui/docker-dev/Dockerfile,FROM,2,"['node:12.7-alpine AS build', 'nginx:1.19.0']"
exadel-inc/CompreFace,latest,/ui/docker-dev/Dockerfile,WORKDIR,1,['/usr/src/app']
exadel-inc/CompreFace,latest,/ui/docker-dev/Dockerfile,LABEL,1,['intermidiate_frs=true']
exadel-inc/CompreFace,latest,/ui/docker-dev/Dockerfile,COPY,2,"['. .', '--from=build /usr/src/app/nginx/ /etc/nginx/']"
exadel-inc/CompreFace,latest,/ui/docker-dev/Dockerfile,RUN,2,"['echo ""Hello from dev docker""', 'rm /etc/nginx/conf.d/default.conf']"
exadel-inc/CompreFace,latest,/ui/docker-prod/Dockerfile,FROM,2,"['node:12.7-alpine AS build', 'nginx:1.21.1']"
exadel-inc/CompreFace,latest,/ui/docker-prod/Dockerfile,WORKDIR,1,['/usr/src/app']
exadel-inc/CompreFace,latest,/ui/docker-prod/Dockerfile,LABEL,1,['intermidiate_frs=true']
exadel-inc/CompreFace,latest,/ui/docker-prod/Dockerfile,COPY,3,"['. .', '--from=build /usr/src/app/dist/compreface /usr/share/nginx/html', '--from=build /usr/src/app/nginx/ /etc/nginx/']"
exadel-inc/CompreFace,latest,/ui/docker-prod/Dockerfile,RUN,3,"['npm install', 'npm run build:prod', 'rm /etc/nginx/conf.d/default.conf']"
exadel-inc/CompreFace,latest,/custom-builds/Single-Docker-File/Dockerfile,ARG,3,"['BASE_IMAGE=exadel/compreface-core:latest', 'VERSION=latest', 'APPERY_API_KEY']"
exadel-inc/CompreFace,latest,/custom-builds/Single-Docker-File/Dockerfile,FROM,4,"['exadel/compreface-admin:${VERSION} as admin', 'exadel/compreface-api:${VERSION} as api', 'exadel/compreface-fe:${VERSION} as fe', '${BASE_IMAGE}']"
exadel-inc/CompreFace,latest,/custom-builds/Single-Docker-File/Dockerfile,ENV,15,"['TZ=America/Los_Angeles', 'POSTGRES_USER=compreface', 'POSTGRES_PASSWORD=M7yfTsBscdqvZs49', 'POSTGRES_DB=frs', 'PGDATA=/var/lib/postgresql/data', 'POSTGRES_URL=jdbc:postgresql://localhost:5432/${POSTGRES_DB}', 'SPRING_PROFILES_ACTIVE=dev', 'ENABLE_EMAIL_SERVER=false', 'ADMIN_JAVA_OPTS=-Xmx1g', 'CRUD_PORT=8081', 'PYTHON_URL=http://localhost:3000', 'APPERY_API_KEY ${APPERY_API_KEY}', 'API_JAVA_OPTS=-Xmx4g', 'SAVE_IMAGES_TO_DB=true', 'API_PORT=8080']"
exadel-inc/CompreFace,latest,/custom-builds/Single-Docker-File/Dockerfile,RUN,15,"['ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone', 'apt-get update && apt-get install -y lsb-release', 'sh -c \'echo ""deb http://apt.postgresql.org/pub/repos/apt $(lsb_release -cs)-pgdg main"" > /etc/apt/sources.list.d/pgdg.list\'', 'wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | apt-key add -', 'apt-get update && apt-get install -y postgresql-13     && rm -rf /var/lib/apt/lists/*', 'rm /etc/postgresql/13/main/postgresql.conf', 'mv /var/lib/postgresql/13/main $PGDATA', '/etc/init.d/postgresql start &&     psql --command ""CREATE USER ${POSTGRES_USER} WITH SUPERUSER PASSWORD \'${POSTGRES_PASSWORD}\';"" &&    createdb -O ${POSTGRES_USER} ${POSTGRES_DB}', 'cp -r $PGDATA /var/lib/postgresql/default', 'apt-get update && apt-get install -y openjdk-11-jre-headless     && rm -rf /var/lib/apt/lists/*', 'apt-get update && apt-get install -y nginx     && rm -rf /var/lib/apt/lists/*', 'adduser --system --no-create-home --shell /bin/false --group --disabled-login nginx', 'apt-get update && apt-get install -y supervisor mc && rm -rf /var/lib/apt/lists/*', 'mkdir -p /var/log/supervisor', 'chmod +x /startup.sh']"
exadel-inc/CompreFace,latest,/custom-builds/Single-Docker-File/Dockerfile,COPY,8,"['custom-builds/Single-Docker-File/postgresql.conf /etc/postgresql/13/main/postgresql.conf', '--from=admin /home/app.jar /app/admin/app.jar', '--from=api /home/app.jar /app/api/app.jar', '--from=fe /usr/share/nginx/html /usr/share/nginx/html', '--from=fe /etc/nginx/ /etc/nginx/', 'custom-builds/Single-Docker-File/nginx.conf /etc/nginx/conf.d/nginx.conf', 'custom-builds/Single-Docker-File/supervisord.conf /etc/supervisor/conf.d/supervisord.conf', 'custom-builds/Single-Docker-File/startup.sh /startup.sh']"
exadel-inc/CompreFace,latest,/custom-builds/Single-Docker-File/Dockerfile,USER,4,"['postgres', 'root', 'nginx', 'root']"
exadel-inc/CompreFace,latest,/custom-builds/Single-Docker-File/Dockerfile,CMD,1,"['[""/usr/bin/supervisord""]']"
exadel-inc/CompreFace,latest,/embedding-calculator/Dockerfile,ARG,9,"['BASE_IMAGE', 'BE_VERSION', 'APP_VERSION_STRING', 'INTEL_OPTIMIZATION=false', 'GPU_IDX=-1', 'FACE_DETECTION_PLUGIN=""facenet.FaceDetector""', 'CALCULATION_PLUGIN=""facenet.Calculator""', 'EXTRA_PLUGINS=""facenet.LandmarksDetector,agegender.AgeDetector,agegender.GenderDetector,facenet.facemask.MaskDetector""', 'SKIP_TESTS']"
exadel-inc/CompreFace,latest,/embedding-calculator/Dockerfile,FROM,1,['${BASE_IMAGE:-python:3.7-slim}']
exadel-inc/CompreFace,latest,/embedding-calculator/Dockerfile,RUN,4,"['apt-get update && apt-get install -y build-essential cmake git wget unzip         curl yasm pkg-config libswscale-dev libtbb2 libtbb-dev libjpeg-dev         libpng-dev libtiff-dev libavformat-dev libpq-dev libfreeimage3     && rm -rf /var/lib/apt/lists/*', 'pip --no-cache-dir install -r requirements.txt', 'python -m src.services.facescan.plugins.setup', 'if [ -z $SKIP_TESTS  ]; then pytest -m ""not performance"" /app/ml/src; fi']"
exadel-inc/CompreFace,latest,/embedding-calculator/Dockerfile,SHELL,1,"['[""/bin/bash"", ""-c""]']"
exadel-inc/CompreFace,latest,/embedding-calculator/Dockerfile,WORKDIR,1,['/app/ml']
exadel-inc/CompreFace,latest,/embedding-calculator/Dockerfile,COPY,7,"['requirements.txt .', 'src src', 'srcext srcext', 'tools tools', 'sample_images sample_images', 'pytest.ini .', 'uwsgi.ini .']"
exadel-inc/CompreFace,latest,/embedding-calculator/Dockerfile,ENV,11,"['BE_VERSION=$BE_VERSION', 'APP_VERSION_STRING=$APP_VERSION_STRING', 'HOME=/app/ml', 'LC_ALL=C.UTF-8', 'LANG=C.UTF-8', 'PYTHONUNBUFFERED=0', 'JOBLIB_MULTIPROCESSING=0', 'GPU_IDX=$GPU_IDX INTEL_OPTIMIZATION=$INTEL_OPTIMIZATION', 'FACE_DETECTION_PLUGIN=$FACE_DETECTION_PLUGIN CALCULATION_PLUGIN=$CALCULATION_PLUGIN     EXTRA_PLUGINS=$EXTRA_PLUGINS', 'UWSGI_PROCESSES=${UWSGI_PROCESSES:-2}', 'UWSGI_THREADS=1']"
exadel-inc/CompreFace,latest,/embedding-calculator/Dockerfile,EXPOSE,1,['3000']
exadel-inc/CompreFace,latest,/embedding-calculator/Dockerfile,CMD,1,"['[""uwsgi"", ""--ini"", ""uwsgi.ini""]']"
exadel-inc/CompreFace,latest,/embedding-calculator/gpu.Dockerfile,ARG,11,"['UBUNTU_VERSION=18.04', 'ARCH=', 'CUDA=10.0', 'ARCH', 'CUDA', 'CUDNN=7.6.4.38-1', 'CUDNN_MAJOR_VERSION=7', 'LIB_DIR_PREFIX=x86_64', 'LIBNVINFER=6.0.1-1', 'LIBNVINFER_MAJOR_VERSION=6', 'PYTHON=python3.7']"
exadel-inc/CompreFace,latest,/embedding-calculator/gpu.Dockerfile,FROM,1,['nvidia/cuda${ARCH:+-$ARCH}:${CUDA}-base-ubuntu${UBUNTU_VERSION} as base']
exadel-inc/CompreFace,latest,/embedding-calculator/gpu.Dockerfile,ENV,8,"['CUDA=$CUDA', 'LD_LIBRARY_PATH /usr/local/cuda/extras/CUPTI/lib64:/usr/local/cuda/lib64:$LD_LIBRARY_PATH', 'LANG C.UTF-8', 'TF_FORCE_GPU_ALLOW_GROWTH=true', 'MXNET_CPU_WORKER_NTHREADS=24', 'MXNET_ENGINE_TYPE=ThreadedEnginePerDevice MXNET_CUDNN_AUTOTUNE_DEFAULT=0', 'SKIP_TESTS=1', 'UWSGI_PROCESSES=1']"
exadel-inc/CompreFace,latest,/embedding-calculator/gpu.Dockerfile,SHELL,1,"['[""/bin/bash"", ""-c""]']"
exadel-inc/CompreFace,latest,/embedding-calculator/gpu.Dockerfile,RUN,7,"['apt-get update && apt-get install -y --no-install-recommends         build-essential         cuda-command-line-tools-${CUDA/./-}         libcublas10=10.2.1.243-1         cuda-nvrtc-${CUDA/./-}         cuda-cufft-${CUDA/./-}         cuda-curand-${CUDA/./-}         cuda-cusolver-${CUDA/./-}         cuda-cusparse-${CUDA/./-}         curl         libcudnn7=${CUDNN}+cuda${CUDA}         libfreetype6-dev         libhdf5-serial-dev         libzmq3-dev         pkg-config         software-properties-common         unzip', '[[ ""${ARCH}"" = ""ppc64le"" ]] || { apt-get update &&         apt-get install -y --no-install-recommends libnvinfer${LIBNVINFER_MAJOR_VERSION}=${LIBNVINFER}+cuda${CUDA}         libnvinfer-plugin${LIBNVINFER_MAJOR_VERSION}=${LIBNVINFER}+cuda${CUDA}         && apt-get clean         && rm -rf /var/lib/apt/lists/*; }', 'ln -s /usr/local/cuda/lib64/stubs/libcuda.so /usr/local/cuda/lib64/stubs/libcuda.so.1     && echo ""/usr/local/cuda/lib64/stubs"" > /etc/ld.so.conf.d/z-cuda-stubs.conf     && ldconfig', 'add-apt-repository ppa:deadsnakes/ppa && apt-get update && apt-get install -y ${PYTHON} libpython3.7-dev libgl1-mesa-glx', 'curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py && ${PYTHON} get-pip.py', '${PYTHON} -m pip --no-cache-dir install --upgrade pip setuptools', 'ln -s $(which $PYTHON) /usr/local/bin/python']"
exadel-inc/CompreFace,latest,/dev/Dockerfile,FROM,3,"['maven:3.6.3-jdk-11-slim as build', 'openjdk:11.0.8-jre-slim as frs_core', 'openjdk:11.0.8-jre-slim as frs_crud']"
exadel-inc/CompreFace,latest,/dev/Dockerfile,ARG,4,"['ND4J_CLASSIFIER', 'DIR=/workspace/compreface', 'DIR=/workspace/compreface', 'APPERY_API_KEY']"
exadel-inc/CompreFace,latest,/dev/Dockerfile,WORKDIR,1,['/workspace/compreface']
exadel-inc/CompreFace,latest,/dev/Dockerfile,LABEL,1,['intermidiate_frs=true']
exadel-inc/CompreFace,latest,/dev/Dockerfile,COPY,9,"['pom.xml .', 'api/pom.xml api/', 'admin/pom.xml admin/', 'common/pom.xml common/', 'api api', 'admin admin', 'common common', '--from=build ${DIR}/api/target/*.jar /home/app.jar', '--from=build ${DIR}/admin/target/*.jar /home/app.jar']"
exadel-inc/CompreFace,latest,/dev/Dockerfile,RUN,2,"['mvn -B clean install -DskipTests -Dcheckstyle.skip -Dasciidoctor.skip -Djacoco.skip -Dmaven.gitcommitid.skip -Dspring-boot.repackage.skip -Dmaven.exec.skip=true -Dmaven.install.skip -Dmaven.resources.skip', 'mvn package -Dmaven.test.skip=true -Dmaven.site.skip=true -Dmaven.javadoc.skip=true -Dnd4j.classifier=$ND4J_CLASSIFIER']"
exadel-inc/CompreFace,latest,/dev/Dockerfile,ENTRYPOINT,2,"['[""sh"",""-c"",""java $API_JAVA_OPTS -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005 -jar /home/app.jar""]', '[""sh"",""-c"",""java $ADMIN_JAVA_OPTS -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005 -jar /home/app.jar""]']"
exadel-inc/CompreFace,latest,/dev/Dockerfile,ENV,1,['APPERY_API_KEY ${APPERY_API_KEY}']
PaddlePaddle/Serving,latest,/tools/Dockerfile.cuda10.2-cudnn7.devel,FROM,1,['nvidia/cuda:10.2-cudnn7-devel-ubuntu16.04']
PaddlePaddle/Serving,latest,/tools/Dockerfile.cuda10.2-cudnn7.devel,MAINTAINER,1,['PaddlePaddle Authors <paddle-dev@baidu.com>']
PaddlePaddle/Serving,latest,/tools/Dockerfile.cuda10.2-cudnn7.devel,ARG,2,"['WITH_GPU', 'WITH_AVX']"
PaddlePaddle/Serving,latest,/tools/Dockerfile.cuda10.2-cudnn7.devel,ENV,8,"['WITH_GPU=${WITH_GPU:-ON}', 'WITH_AVX=${WITH_AVX:-ON}', 'HOME /root', 'PATH=/usr/local/gcc-8.2/bin:$PATH', 'PATH=/home/cmake-3.16.0-Linux-x86_64/bin:$PATH', 'LD_LIBRARY_PATH=/usr/local/lib:${LD_LIBRARY_PATH}', 'GOROOT=/usr/local/go GOPATH=/root/go', 'PATH=usr/local/go/bin:/root/go/bin:${PATH}']"
PaddlePaddle/Serving,latest,/tools/Dockerfile.cuda10.2-cudnn7.devel,COPY,3,"['tools/dockerfiles/root/ /root/', 'tools/dockerfiles/build_scripts /build_scripts', 'tools/dockerfiles/build_scripts /build_scripts']"
PaddlePaddle/Serving,latest,/tools/Dockerfile.cuda10.2-cudnn7.devel,RUN,28,"['apt-get update &&     apt-get install -y make build-essential libssl-dev zlib1g-dev libbz2-dev     libreadline-dev libsqlite3-dev wget curl llvm libncurses5-dev libncursesw5-dev     xz-utils tk-dev libffi-dev liblzma-dev', 'apt-get update &&     apt-get install -y --allow-downgrades --allow-change-held-packages     patchelf git python-pip python-dev python-opencv openssh-server bison     wget unzip unrar tar xz-utils bzip2 gzip coreutils ntp     curl sed grep graphviz libjpeg-dev zlib1g-dev      python-matplotlib unzip     automake locales clang-format swig      liblapack-dev liblapacke-dev libcurl4-openssl-dev     net-tools libtool module-init-tools vim &&     apt-get clean -y', 'ln -s /usr/lib/x86_64-linux-gnu/libssl.so /usr/lib/libssl.so.10 &&     ln -s /usr/lib/x86_64-linux-gnu/libcrypto.so /usr/lib/libcrypto.so.10', 'wget https://github.com/koalaman/shellcheck/releases/download/v0.7.1/shellcheck-v0.7.1.linux.x86_64.tar.xz -O shellcheck-v0.7.1.linux.x86_64.tar.xz &&     tar -xf shellcheck-v0.7.1.linux.x86_64.tar.xz && cp  shellcheck-v0.7.1/shellcheck /usr/bin/shellcheck &&     rm -rf shellcheck-v0.7.1.linux.x86_64.tar.xz shellcheck-v0.7.1', 'bash /build_scripts/install_gcc.sh gcc82 && rm -rf /build_scripts', 'cp gcc gcc.bak && cp g++ g++.bak && rm gcc && rm g++', 'ln -s /usr/local/gcc-8.2/bin/gcc /usr/local/bin/gcc', 'ln -s /usr/local/gcc-8.2/bin/g++ /usr/local/bin/g++', 'ln -s /usr/local/gcc-8.2/bin/gcc /usr/bin/gcc', 'ln -s /usr/local/gcc-8.2/bin/g++ /usr/bin/g++', 'wget -q https://cmake.org/files/v3.16/cmake-3.16.0-Linux-x86_64.tar.gz && tar -zxvf cmake-3.16.0-Linux-x86_64.tar.gz && rm cmake-3.16.0-Linux-x86_64.tar.gz', 'mkdir -p /root/python_build/ && wget -q https://www.sqlite.org/2018/sqlite-autoconf-3250300.tar.gz &&     tar -zxf sqlite-autoconf-3250300.tar.gz && cd sqlite-autoconf-3250300 &&     ./configure -prefix=/usr/local && make -j8 && make install && cd ../ && rm sqlite-autoconf-3250300.tar.gz', 'wget -q https://www.python.org/ftp/python/3.6.0/Python-3.6.0.tgz &&     tar -xzf Python-3.6.0.tgz && cd Python-3.6.0 &&     CFLAGS=""-Wformat"" ./configure --prefix=/usr/local/ --enable-shared > /dev/null &&     make -j8 > /dev/null && make altinstall > /dev/null && ldconfig && cd .. && rm -rf Python-3.6.0*', 'wget -q https://www.python.org/ftp/python/3.7.0/Python-3.7.0.tgz &&     tar -xzf Python-3.7.0.tgz && cd Python-3.7.0 &&     CFLAGS=""-Wformat"" ./configure --prefix=/usr/local/ --enable-shared > /dev/null &&     make -j8 > /dev/null && make altinstall > /dev/null && ldconfig && cd .. && rm -rf Python-3.7.0*', 'wget -q https://www.python.org/ftp/python/3.8.0/Python-3.8.0.tgz &&     tar -xzf Python-3.8.0.tgz && cd Python-3.8.0 &&     CFLAGS=""-Wformat"" ./configure --prefix=/usr/local/ --enable-shared > /dev/null &&     make -j8 > /dev/null && make altinstall > /dev/null && ldconfig && cd .. && rm -rf Python-3.8.0*', 'ln -sf /usr/local/bin/python3.6 /usr/local/bin/python3 && ln -sf /usr/local/bin/python3.6 /usr/bin/python3 && ln -sf /usr/local/bin/pip3.6 /usr/local/bin/pip3 && ln -sf /usr/local/bin/pip3.6 /usr/bin/pip3', 'rm -r /root/python_build', 'wget -qO- https://paddle-ci.cdn.bcebos.com/go1.17.2.linux-amd64.tar.gz |     tar -xz -C /usr/local &&     mkdir /root/go &&     mkdir /root/go/bin &&     mkdir /root/go/src &&     echo ""GOROOT=/usr/local/go"" >> /root/.bashrc &&     echo ""GOPATH=/root/go"" >> /root/.bashrc &&     echo ""PATH=/usr/local/go/bin:/root/go/bin:$PATH"" >> /root/.bashrc', 'bash /build_scripts/install_trt.sh cuda10.2 cudnn7', 'rm -rf /build_scripts', 'git config --global credential.helper store', 'localedef -i en_US -f UTF-8 en_US.UTF-8', 'apt-get install libprotobuf-dev -y', 'wget -q https://paddle-ci.cdn.bcebos.com/patchelf_0.10-2_amd64.deb &&     dpkg -i patchelf_0.10-2_amd64.deb', ""mkdir /var/run/sshd && echo 'root:root' | chpasswd && sed -ri 's/^PermitRootLogin\\s+.*/PermitRootLogin yes/' /etc/ssh/sshd_config && sed -ri 's/UsePAM yes/#UsePAM yes/g' /etc/ssh/sshd_config"", 'wget https://paddle-ci.gz.bcebos.com/ccache-3.7.9.tar.gz &&     tar xf ccache-3.7.9.tar.gz && mkdir /usr/local/ccache-3.7.9 && cd ccache-3.7.9 &&     ./configure -prefix=/usr/local/ccache-3.7.9 &&     make -j8 && make install &&     ln -s /usr/local/ccache-3.7.9/bin/ccache /usr/local/bin/ccache', 'python3.8 -m pip install --upgrade pip==21.1.1 requests &&     python3.7 -m pip install --upgrade pip==21.1.1 requests &&     python3.6 -m pip install --upgrade pip==21.1.1 requests', 'wget https://paddle-serving.bj.bcebos.com/others/centos_ssl.tar &&     tar xf centos_ssl.tar && rm -rf centos_ssl.tar &&     mv libcrypto.so.1.0.2k /usr/lib/libcrypto.so.1.0.2k && mv libssl.so.1.0.2k /usr/lib/libssl.so.1.0.2k &&     ln -sf /usr/lib/libcrypto.so.1.0.2k /usr/lib/libcrypto.so.10 &&     ln -sf /usr/lib/libssl.so.1.0.2k /usr/lib/libssl.so.10 &&     ln -sf /usr/lib/libcrypto.so.10 /usr/lib/libcrypto.so &&     ln -sf /usr/lib/libssl.so.10 /usr/lib/libssl.so']"
PaddlePaddle/Serving,latest,/tools/Dockerfile.cuda10.2-cudnn7.devel,WORKDIR,2,"['/usr/bin', '/home']"
PaddlePaddle/Serving,latest,/tools/Dockerfile.cuda10.2-cudnn7.devel,CMD,1,['source ~/.bashrc']
PaddlePaddle/Serving,latest,/tools/Dockerfile.cuda10.2-cudnn7.devel,EXPOSE,1,['22']
PaddlePaddle/Serving,latest,/tools/Dockerfile.cuda10.1-cudnn7-gcc54.devel,FROM,1,['hub.baidubce.com/ctr/cuda:10.1-cudnn7-devel-ubuntu16.04']
PaddlePaddle/Serving,latest,/tools/Dockerfile.cuda10.1-cudnn7-gcc54.devel,MAINTAINER,1,['PaddlePaddle Authors <paddle-dev@baidu.com>']
PaddlePaddle/Serving,latest,/tools/Dockerfile.cuda10.1-cudnn7-gcc54.devel,ARG,2,"['WITH_GPU', 'WITH_AVX']"
PaddlePaddle/Serving,latest,/tools/Dockerfile.cuda10.1-cudnn7-gcc54.devel,ENV,7,"['WITH_GPU=${WITH_GPU:-ON}', 'WITH_AVX=${WITH_AVX:-ON}', 'HOME /root', 'PATH=/home/cmake-3.16.0-Linux-x86_64/bin:$PATH', 'LD_LIBRARY_PATH=/usr/local/lib:${LD_LIBRARY_PATH}', 'GOROOT=/usr/local/go GOPATH=/root/go', 'PATH=usr/local/go/bin:/root/go/bin:${PATH}']"
PaddlePaddle/Serving,latest,/tools/Dockerfile.cuda10.1-cudnn7-gcc54.devel,COPY,2,"['tools/dockerfiles/root/ /root/', 'tools/dockerfiles/build_scripts /build_scripts']"
PaddlePaddle/Serving,latest,/tools/Dockerfile.cuda10.1-cudnn7-gcc54.devel,RUN,22,"['apt-get update &&     apt-get install -y make build-essential libssl-dev zlib1g-dev libbz2-dev     libreadline-dev libsqlite3-dev wget curl llvm libncurses5-dev libncursesw5-dev     xz-utils tk-dev libffi-dev liblzma-dev', 'apt-get update &&     apt-get install -y --allow-downgrades --allow-change-held-packages     patchelf git python-pip python-dev python-opencv openssh-server bison     wget unzip unrar tar xz-utils bzip2 gzip coreutils ntp     curl sed grep graphviz libjpeg-dev zlib1g-dev      python-matplotlib unzip     automake locales clang-format swig      liblapack-dev liblapacke-dev libcurl4-openssl-dev     net-tools libtool module-init-tools vim &&     apt-get clean -y', 'ln -s /usr/lib/x86_64-linux-gnu/libssl.so /usr/lib/libssl.so.10 &&     ln -s /usr/lib/x86_64-linux-gnu/libcrypto.so /usr/lib/libcrypto.so.10', 'wget https://github.com/koalaman/shellcheck/releases/download/v0.7.1/shellcheck-v0.7.1.linux.x86_64.tar.xz -O shellcheck-v0.7.1.linux.x86_64.tar.xz &&     tar -xf shellcheck-v0.7.1.linux.x86_64.tar.xz && cp  shellcheck-v0.7.1/shellcheck /usr/bin/shellcheck &&     rm -rf shellcheck-v0.7.1.linux.x86_64.tar.xz shellcheck-v0.7.1', 'wget -q https://cmake.org/files/v3.16/cmake-3.16.0-Linux-x86_64.tar.gz && tar -zxvf cmake-3.16.0-Linux-x86_64.tar.gz && rm cmake-3.16.0-Linux-x86_64.tar.gz', 'mkdir -p /root/python_build/ && wget -q https://www.sqlite.org/2018/sqlite-autoconf-3250300.tar.gz &&     tar -zxf sqlite-autoconf-3250300.tar.gz && cd sqlite-autoconf-3250300 &&     ./configure -prefix=/usr/local && make -j8 && make install && cd ../ && rm sqlite-autoconf-3250300.tar.gz', 'wget -q https://www.python.org/ftp/python/3.6.0/Python-3.6.0.tgz &&     tar -xzf Python-3.6.0.tgz && cd Python-3.6.0 &&     CFLAGS=""-Wformat"" ./configure --prefix=/usr/local/ --enable-shared > /dev/null &&     make -j8 > /dev/null && make altinstall > /dev/null && ldconfig && cd .. && rm -rf Python-3.6.0*', 'wget -q https://www.python.org/ftp/python/3.7.0/Python-3.7.0.tgz &&     tar -xzf Python-3.7.0.tgz && cd Python-3.7.0 &&     CFLAGS=""-Wformat"" ./configure --prefix=/usr/local/ --enable-shared > /dev/null &&     make -j8 > /dev/null && make altinstall > /dev/null && ldconfig && cd .. && rm -rf Python-3.7.0*', 'wget -q https://www.python.org/ftp/python/3.8.0/Python-3.8.0.tgz &&     tar -xzf Python-3.8.0.tgz && cd Python-3.8.0 &&     CFLAGS=""-Wformat"" ./configure --prefix=/usr/local/ --enable-shared > /dev/null &&     make -j8 > /dev/null && make altinstall > /dev/null && ldconfig && cd .. && rm -rf Python-3.8.0*', 'ln -sf /usr/local/bin/python3.6 /usr/local/bin/python3 && ln -sf /usr/local/bin/python3.6 /usr/bin/python3 && ln -sf /usr/local/bin/pip3.6 /usr/local/bin/pip3 && ln -sf /usr/local/bin/pip3.6 /usr/bin/pip3', 'rm -r /root/python_build', 'wget -qO- https://dl.google.com/go/go1.14.linux-amd64.tar.gz |     tar -xz -C /usr/local &&     mkdir /root/go &&     mkdir /root/go/bin &&     mkdir /root/go/src &&     echo ""GOROOT=/usr/local/go"" >> /root/.bashrc &&     echo ""GOPATH=/root/go"" >> /root/.bashrc &&     echo ""PATH=/usr/local/go/bin:/root/go/bin:$PATH"" >> /root/.bashrc', 'bash /build_scripts/install_trt.sh', 'rm -rf /build_scripts', 'git config --global credential.helper store', 'localedef -i en_US -f UTF-8 en_US.UTF-8', 'apt-get install libprotobuf-dev -y', 'wget -q https://paddle-ci.cdn.bcebos.com/patchelf_0.10-2_amd64.deb &&     dpkg -i patchelf_0.10-2_amd64.deb', ""mkdir /var/run/sshd && echo 'root:root' | chpasswd && sed -ri 's/^PermitRootLogin\\s+.*/PermitRootLogin yes/' /etc/ssh/sshd_config && sed -ri 's/UsePAM yes/#UsePAM yes/g' /etc/ssh/sshd_config"", 'wget https://paddle-ci.gz.bcebos.com/ccache-3.7.9.tar.gz &&     tar xf ccache-3.7.9.tar.gz && mkdir /usr/local/ccache-3.7.9 && cd ccache-3.7.9 &&     ./configure -prefix=/usr/local/ccache-3.7.9 &&     make -j8 && make install &&     ln -s /usr/local/ccache-3.7.9/bin/ccache /usr/local/bin/ccache', 'python3.8 -m pip install --upgrade pip requests &&     python3.7 -m pip install --upgrade pip requests &&     python3.6 -m pip install --upgrade pip requests', 'wget https://paddle-serving.bj.bcebos.com/others/centos_ssl.tar &&     tar xf centos_ssl.tar && rm -rf centos_ssl.tar &&     mv libcrypto.so.1.0.2k /usr/lib/libcrypto.so.1.0.2k && mv libssl.so.1.0.2k /usr/lib/libssl.so.1.0.2k &&     ln -sf /usr/lib/libcrypto.so.1.0.2k /usr/lib/libcrypto.so.10 &&     ln -sf /usr/lib/libssl.so.1.0.2k /usr/lib/libssl.so.10 &&     ln -sf /usr/lib/libcrypto.so.10 /usr/lib/libcrypto.so &&     ln -sf /usr/lib/libssl.so.10 /usr/lib/libssl.so']"
PaddlePaddle/Serving,latest,/tools/Dockerfile.cuda10.1-cudnn7-gcc54.devel,WORKDIR,1,['/home']
PaddlePaddle/Serving,latest,/tools/Dockerfile.cuda10.1-cudnn7-gcc54.devel,CMD,1,['source ~/.bashrc']
PaddlePaddle/Serving,latest,/tools/Dockerfile.cuda10.1-cudnn7-gcc54.devel,EXPOSE,1,['22']
PaddlePaddle/Serving,latest,/tools/Dockerfile.devel,FROM,1,['hub.baidubce.com/ctr/cuda:9.0-cudnn7-devel-ubuntu16.04']
PaddlePaddle/Serving,latest,/tools/Dockerfile.devel,MAINTAINER,1,['PaddlePaddle Authors <paddle-dev@baidu.com>']
PaddlePaddle/Serving,latest,/tools/Dockerfile.devel,ARG,2,"['WITH_GPU', 'WITH_AVX']"
PaddlePaddle/Serving,latest,/tools/Dockerfile.devel,ENV,8,"['WITH_GPU=${WITH_GPU:-ON}', 'WITH_AVX=${WITH_AVX:-ON}', 'HOME /root', 'PATH=/usr/local/gcc-8.2/bin:$PATH', 'PATH=/home/cmake-3.16.0-Linux-x86_64/bin:$PATH', 'LD_LIBRARY_PATH=/usr/local/lib:${LD_LIBRARY_PATH}', 'GOROOT=/usr/local/go GOPATH=/root/go', 'PATH=usr/local/go/bin:/root/go/bin:${PATH}']"
PaddlePaddle/Serving,latest,/tools/Dockerfile.devel,COPY,3,"['tools/dockerfiles/root/ /root/', 'tools/dockerfiles/build_scripts /build_scripts', 'tools/dockerfiles/build_scripts /build_scripts']"
PaddlePaddle/Serving,latest,/tools/Dockerfile.devel,RUN,28,"['apt-get update &&     apt-get install -y make build-essential libssl-dev zlib1g-dev libbz2-dev     libreadline-dev libsqlite3-dev wget curl llvm libncurses5-dev libncursesw5-dev     xz-utils tk-dev libffi-dev liblzma-dev', 'apt-get update &&     apt-get install -y --allow-downgrades --allow-change-held-packages     patchelf git python-pip python-dev python-opencv openssh-server bison     wget unzip unrar tar xz-utils bzip2 gzip coreutils ntp     curl sed grep graphviz libjpeg-dev zlib1g-dev      python-matplotlib unzip     automake locales clang-format swig      liblapack-dev liblapacke-dev libcurl4-openssl-dev     net-tools libtool module-init-tools vim &&     apt-get clean -y', 'ln -s /usr/lib/x86_64-linux-gnu/libssl.so /usr/lib/libssl.so.10 &&     ln -s /usr/lib/x86_64-linux-gnu/libcrypto.so /usr/lib/libcrypto.so.10', 'wget https://github.com/koalaman/shellcheck/releases/download/v0.7.1/shellcheck-v0.7.1.linux.x86_64.tar.xz -O shellcheck-v0.7.1.linux.x86_64.tar.xz &&     tar -xf shellcheck-v0.7.1.linux.x86_64.tar.xz && cp  shellcheck-v0.7.1/shellcheck /usr/bin/shellcheck &&     rm -rf shellcheck-v0.7.1.linux.x86_64.tar.xz shellcheck-v0.7.1', 'bash /build_scripts/install_gcc.sh gcc82 && rm -rf /build_scripts', 'cp gcc gcc.bak && cp g++ g++.bak && rm gcc && rm g++', 'ln -s /usr/local/gcc-8.2/bin/gcc /usr/local/bin/gcc', 'ln -s /usr/local/gcc-8.2/bin/g++ /usr/local/bin/g++', 'ln -s /usr/local/gcc-8.2/bin/gcc /usr/bin/gcc', 'ln -s /usr/local/gcc-8.2/bin/g++ /usr/bin/g++', 'wget -q https://cmake.org/files/v3.16/cmake-3.16.0-Linux-x86_64.tar.gz && tar -zxvf cmake-3.16.0-Linux-x86_64.tar.gz && rm cmake-3.16.0-Linux-x86_64.tar.gz', 'mkdir -p /root/python_build/ && wget -q https://www.sqlite.org/2018/sqlite-autoconf-3250300.tar.gz &&     tar -zxf sqlite-autoconf-3250300.tar.gz && cd sqlite-autoconf-3250300 &&     ./configure -prefix=/usr/local && make -j8 && make install && cd ../ && rm sqlite-autoconf-3250300.tar.gz', 'wget -q https://www.python.org/ftp/python/3.6.0/Python-3.6.0.tgz &&     tar -xzf Python-3.6.0.tgz && cd Python-3.6.0 &&     CFLAGS=""-Wformat"" ./configure --prefix=/usr/local/ --enable-shared > /dev/null &&     make -j8 > /dev/null && make altinstall > /dev/null && ldconfig && cd .. && rm -rf Python-3.6.0*', 'wget -q https://www.python.org/ftp/python/3.7.0/Python-3.7.0.tgz &&     tar -xzf Python-3.7.0.tgz && cd Python-3.7.0 &&     CFLAGS=""-Wformat"" ./configure --prefix=/usr/local/ --enable-shared > /dev/null &&     make -j8 > /dev/null && make altinstall > /dev/null && ldconfig && cd .. && rm -rf Python-3.7.0*', 'wget -q https://www.python.org/ftp/python/3.8.0/Python-3.8.0.tgz &&     tar -xzf Python-3.8.0.tgz && cd Python-3.8.0 &&     CFLAGS=""-Wformat"" ./configure --prefix=/usr/local/ --enable-shared > /dev/null &&     make -j8 > /dev/null && make altinstall > /dev/null && ldconfig && cd .. && rm -rf Python-3.8.0*', 'ln -sf /usr/local/bin/python3.6 /usr/local/bin/python3 && ln -sf /usr/local/bin/python3.6 /usr/bin/python3 && ln -sf /usr/local/bin/pip3.6 /usr/local/bin/pip3 && ln -sf /usr/local/bin/pip3.6 /usr/bin/pip3', 'rm -r /root/python_build', 'wget -qO- https://paddle-ci.cdn.bcebos.com/go1.17.2.linux-amd64.tar.gz |     tar -xz -C /usr/local &&     mkdir /root/go &&     mkdir /root/go/bin &&     mkdir /root/go/src &&     echo ""GOROOT=/usr/local/go"" >> /root/.bashrc &&     echo ""GOPATH=/root/go"" >> /root/.bashrc &&     echo ""PATH=/usr/local/go/bin:/root/go/bin:$PATH"" >> /root/.bashrc', 'bash /build_scripts/install_trt.sh', 'rm -rf /build_scripts', 'git config --global credential.helper store', 'localedef -i en_US -f UTF-8 en_US.UTF-8', 'apt-get install libprotobuf-dev -y', 'wget -q https://paddle-ci.cdn.bcebos.com/patchelf_0.10-2_amd64.deb &&     dpkg -i patchelf_0.10-2_amd64.deb', ""mkdir /var/run/sshd && echo 'root:root' | chpasswd && sed -ri 's/^PermitRootLogin\\s+.*/PermitRootLogin yes/' /etc/ssh/sshd_config && sed -ri 's/UsePAM yes/#UsePAM yes/g' /etc/ssh/sshd_config"", 'wget https://paddle-ci.gz.bcebos.com/ccache-3.7.9.tar.gz &&     tar xf ccache-3.7.9.tar.gz && mkdir /usr/local/ccache-3.7.9 && cd ccache-3.7.9 &&     ./configure -prefix=/usr/local/ccache-3.7.9 &&     make -j8 && make install &&     ln -s /usr/local/ccache-3.7.9/bin/ccache /usr/local/bin/ccache', 'python3.8 -m pip install --upgrade pip==21.1.1 requests &&     python3.7 -m pip install --upgrade pip==21.1.1 requests &&     python3.6 -m pip install --upgrade pip==21.1.1 requests', 'wget https://paddle-serving.bj.bcebos.com/others/centos_ssl.tar &&     tar xf centos_ssl.tar && rm -rf centos_ssl.tar &&     mv libcrypto.so.1.0.2k /usr/lib/libcrypto.so.1.0.2k && mv libssl.so.1.0.2k /usr/lib/libssl.so.1.0.2k &&     ln -sf /usr/lib/libcrypto.so.1.0.2k /usr/lib/libcrypto.so.10 &&     ln -sf /usr/lib/libssl.so.1.0.2k /usr/lib/libssl.so.10 &&     ln -sf /usr/lib/libcrypto.so.10 /usr/lib/libcrypto.so &&     ln -sf /usr/lib/libssl.so.10 /usr/lib/libssl.so']"
PaddlePaddle/Serving,latest,/tools/Dockerfile.devel,WORKDIR,2,"['/usr/bin', '/home']"
PaddlePaddle/Serving,latest,/tools/Dockerfile.devel,CMD,1,['source ~/.bashrc']
PaddlePaddle/Serving,latest,/tools/Dockerfile.devel,EXPOSE,1,['22']
PaddlePaddle/Serving,latest,/tools/Dockerfile.cuda11.2-cudnn8.devel,FROM,1,['nvidia/cuda:11.2.0-cudnn8-devel-ubuntu16.04']
PaddlePaddle/Serving,latest,/tools/Dockerfile.cuda11.2-cudnn8.devel,MAINTAINER,1,['PaddlePaddle Authors <paddle-dev@baidu.com>']
PaddlePaddle/Serving,latest,/tools/Dockerfile.cuda11.2-cudnn8.devel,ARG,2,"['WITH_GPU', 'WITH_AVX']"
PaddlePaddle/Serving,latest,/tools/Dockerfile.cuda11.2-cudnn8.devel,ENV,8,"['WITH_GPU=${WITH_GPU:-ON}', 'WITH_AVX=${WITH_AVX:-ON}', 'HOME /root', 'PATH=/usr/local/gcc-8.2/bin:$PATH', 'PATH=/home/cmake-3.16.0-Linux-x86_64/bin:$PATH', 'LD_LIBRARY_PATH=/usr/local/lib:${LD_LIBRARY_PATH}', 'GOROOT=/usr/local/go GOPATH=/root/go', 'PATH=usr/local/go/bin:/root/go/bin:${PATH}']"
PaddlePaddle/Serving,latest,/tools/Dockerfile.cuda11.2-cudnn8.devel,COPY,3,"['tools/dockerfiles/root/ /root/', 'tools/dockerfiles/build_scripts /build_scripts', 'tools/dockerfiles/build_scripts /build_scripts']"
PaddlePaddle/Serving,latest,/tools/Dockerfile.cuda11.2-cudnn8.devel,RUN,28,"['apt-get update &&     apt-get install -y make build-essential libssl-dev zlib1g-dev libbz2-dev     libreadline-dev libsqlite3-dev wget curl llvm libncurses5-dev libncursesw5-dev     xz-utils tk-dev libffi-dev liblzma-dev', 'apt-get update &&     apt-get install -y --allow-downgrades --allow-change-held-packages     patchelf git python-pip python-dev python-opencv openssh-server bison     wget unzip unrar tar xz-utils bzip2 gzip coreutils ntp     curl sed grep graphviz libjpeg-dev zlib1g-dev      python-matplotlib unzip     automake locales clang-format swig      liblapack-dev liblapacke-dev libcurl4-openssl-dev     net-tools libtool module-init-tools vim &&     apt-get clean -y', 'ln -s /usr/lib/x86_64-linux-gnu/libssl.so /usr/lib/libssl.so.10 &&     ln -s /usr/lib/x86_64-linux-gnu/libcrypto.so /usr/lib/libcrypto.so.10', 'wget https://github.com/koalaman/shellcheck/releases/download/v0.7.1/shellcheck-v0.7.1.linux.x86_64.tar.xz -O shellcheck-v0.7.1.linux.x86_64.tar.xz &&     tar -xf shellcheck-v0.7.1.linux.x86_64.tar.xz && cp  shellcheck-v0.7.1/shellcheck /usr/bin/shellcheck &&     rm -rf shellcheck-v0.7.1.linux.x86_64.tar.xz shellcheck-v0.7.1', 'bash /build_scripts/install_gcc.sh gcc82 && rm -rf /build_scripts', 'cp gcc gcc.bak && cp g++ g++.bak && rm gcc && rm g++', 'ln -s /usr/local/gcc-8.2/bin/gcc /usr/local/bin/gcc', 'ln -s /usr/local/gcc-8.2/bin/g++ /usr/local/bin/g++', 'ln -s /usr/local/gcc-8.2/bin/gcc /usr/bin/gcc', 'ln -s /usr/local/gcc-8.2/bin/g++ /usr/bin/g++', 'wget -q https://cmake.org/files/v3.16/cmake-3.16.0-Linux-x86_64.tar.gz && tar -zxvf cmake-3.16.0-Linux-x86_64.tar.gz && rm cmake-3.16.0-Linux-x86_64.tar.gz', 'mkdir -p /root/python_build/ && wget -q https://www.sqlite.org/2018/sqlite-autoconf-3250300.tar.gz &&     tar -zxf sqlite-autoconf-3250300.tar.gz && cd sqlite-autoconf-3250300 &&     ./configure -prefix=/usr/local && make -j8 && make install && cd ../ && rm sqlite-autoconf-3250300.tar.gz', 'wget -q https://www.python.org/ftp/python/3.6.0/Python-3.6.0.tgz &&     tar -xzf Python-3.6.0.tgz && cd Python-3.6.0 &&     CFLAGS=""-Wformat"" ./configure --prefix=/usr/local/ --enable-shared > /dev/null &&     make -j8 > /dev/null && make altinstall > /dev/null && ldconfig && cd .. && rm -rf Python-3.6.0*', 'wget -q https://www.python.org/ftp/python/3.7.0/Python-3.7.0.tgz &&     tar -xzf Python-3.7.0.tgz && cd Python-3.7.0 &&     CFLAGS=""-Wformat"" ./configure --prefix=/usr/local/ --enable-shared > /dev/null &&     make -j8 > /dev/null && make altinstall > /dev/null && ldconfig && cd .. && rm -rf Python-3.7.0*', 'wget -q https://www.python.org/ftp/python/3.8.0/Python-3.8.0.tgz &&     tar -xzf Python-3.8.0.tgz && cd Python-3.8.0 &&     CFLAGS=""-Wformat"" ./configure --prefix=/usr/local/ --enable-shared > /dev/null &&     make -j8 > /dev/null && make altinstall > /dev/null && ldconfig && cd .. && rm -rf Python-3.8.0*', 'ln -sf /usr/local/bin/python3.6 /usr/local/bin/python3 && ln -sf /usr/local/bin/python3.6 /usr/bin/python3 && ln -sf /usr/local/bin/pip3.6 /usr/local/bin/pip3 && ln -sf /usr/local/bin/pip3.6 /usr/bin/pip3', 'rm -r /root/python_build', 'wget -qO- https://paddle-ci.cdn.bcebos.com/go1.17.2.linux-amd64.tar.gz |     tar -xz -C /usr/local &&     mkdir /root/go &&     mkdir /root/go/bin &&     mkdir /root/go/src &&     echo ""GOROOT=/usr/local/go"" >> /root/.bashrc &&     echo ""GOPATH=/root/go"" >> /root/.bashrc &&     echo ""PATH=/usr/local/go/bin:/root/go/bin:$PATH"" >> /root/.bashrc', 'bash /build_scripts/install_trt.sh cuda11.2', 'rm -rf /build_scripts', 'git config --global credential.helper store', 'localedef -i en_US -f UTF-8 en_US.UTF-8', 'apt-get install libprotobuf-dev -y', 'wget -q https://paddle-ci.cdn.bcebos.com/patchelf_0.10-2_amd64.deb &&     dpkg -i patchelf_0.10-2_amd64.deb', ""mkdir /var/run/sshd && echo 'root:root' | chpasswd && sed -ri 's/^PermitRootLogin\\s+.*/PermitRootLogin yes/' /etc/ssh/sshd_config && sed -ri 's/UsePAM yes/#UsePAM yes/g' /etc/ssh/sshd_config"", 'wget https://paddle-ci.gz.bcebos.com/ccache-3.7.9.tar.gz &&     tar xf ccache-3.7.9.tar.gz && mkdir /usr/local/ccache-3.7.9 && cd ccache-3.7.9 &&     ./configure -prefix=/usr/local/ccache-3.7.9 &&     make -j8 && make install &&     ln -s /usr/local/ccache-3.7.9/bin/ccache /usr/local/bin/ccache', 'python3.8 -m pip install --upgrade pip==21.1.1 requests &&     python3.7 -m pip install --upgrade pip==21.1.1 requests &&     python3.6 -m pip install --upgrade pip==21.1.1 requests', 'wget https://paddle-serving.bj.bcebos.com/others/centos_ssl.tar &&     tar xf centos_ssl.tar && rm -rf centos_ssl.tar &&     mv libcrypto.so.1.0.2k /usr/lib/libcrypto.so.1.0.2k && mv libssl.so.1.0.2k /usr/lib/libssl.so.1.0.2k &&     ln -sf /usr/lib/libcrypto.so.1.0.2k /usr/lib/libcrypto.so.10 &&     ln -sf /usr/lib/libssl.so.1.0.2k /usr/lib/libssl.so.10 &&     ln -sf /usr/lib/libcrypto.so.10 /usr/lib/libcrypto.so &&     ln -sf /usr/lib/libssl.so.10 /usr/lib/libssl.so']"
PaddlePaddle/Serving,latest,/tools/Dockerfile.cuda11.2-cudnn8.devel,WORKDIR,2,"['/usr/bin', '/home']"
PaddlePaddle/Serving,latest,/tools/Dockerfile.cuda11.2-cudnn8.devel,CMD,1,['source ~/.bashrc']
PaddlePaddle/Serving,latest,/tools/Dockerfile.cuda11.2-cudnn8.devel,EXPOSE,1,['22']
PaddlePaddle/Serving,latest,/tools/Dockerfile.cuda10.2-cudnn8.devel,FROM,1,['hub.baidubce.com/ctr/cuda:10.2-cudnn8-devel-ubuntu16.04']
PaddlePaddle/Serving,latest,/tools/Dockerfile.cuda10.2-cudnn8.devel,MAINTAINER,1,['PaddlePaddle Authors <paddle-dev@baidu.com>']
PaddlePaddle/Serving,latest,/tools/Dockerfile.cuda10.2-cudnn8.devel,ARG,2,"['WITH_GPU', 'WITH_AVX']"
PaddlePaddle/Serving,latest,/tools/Dockerfile.cuda10.2-cudnn8.devel,ENV,8,"['WITH_GPU=${WITH_GPU:-ON}', 'WITH_AVX=${WITH_AVX:-ON}', 'HOME /root', 'PATH=/usr/local/gcc-8.2/bin:$PATH', 'PATH=/home/cmake-3.16.0-Linux-x86_64/bin:$PATH', 'LD_LIBRARY_PATH=/usr/local/lib:${LD_LIBRARY_PATH}', 'GOROOT=/usr/local/go GOPATH=/root/go', 'PATH=usr/local/go/bin:/root/go/bin:${PATH}']"
PaddlePaddle/Serving,latest,/tools/Dockerfile.cuda10.2-cudnn8.devel,COPY,3,"['tools/dockerfiles/root/ /root/', 'tools/dockerfiles/build_scripts /build_scripts', 'tools/dockerfiles/build_scripts /build_scripts']"
PaddlePaddle/Serving,latest,/tools/Dockerfile.cuda10.2-cudnn8.devel,RUN,28,"['apt-get update &&     apt-get install -y make build-essential libssl-dev zlib1g-dev libbz2-dev     libreadline-dev libsqlite3-dev wget curl llvm libncurses5-dev libncursesw5-dev     xz-utils tk-dev libffi-dev liblzma-dev', 'apt-get update &&     apt-get install -y --allow-downgrades --allow-change-held-packages     patchelf git python-pip python-dev python-opencv openssh-server bison     wget unzip unrar tar xz-utils bzip2 gzip coreutils ntp     curl sed grep graphviz libjpeg-dev zlib1g-dev      python-matplotlib unzip     automake locales clang-format swig      liblapack-dev liblapacke-dev libcurl4-openssl-dev     net-tools libtool module-init-tools vim &&     apt-get clean -y', 'ln -s /usr/lib/x86_64-linux-gnu/libssl.so /usr/lib/libssl.so.10 &&     ln -s /usr/lib/x86_64-linux-gnu/libcrypto.so /usr/lib/libcrypto.so.10', 'wget https://github.com/koalaman/shellcheck/releases/download/v0.7.1/shellcheck-v0.7.1.linux.x86_64.tar.xz -O shellcheck-v0.7.1.linux.x86_64.tar.xz &&     tar -xf shellcheck-v0.7.1.linux.x86_64.tar.xz && cp  shellcheck-v0.7.1/shellcheck /usr/bin/shellcheck &&     rm -rf shellcheck-v0.7.1.linux.x86_64.tar.xz shellcheck-v0.7.1', 'bash /build_scripts/install_gcc.sh gcc82 && rm -rf /build_scripts', 'cp gcc gcc.bak && cp g++ g++.bak && rm gcc && rm g++', 'ln -s /usr/local/gcc-8.2/bin/gcc /usr/local/bin/gcc', 'ln -s /usr/local/gcc-8.2/bin/g++ /usr/local/bin/g++', 'ln -s /usr/local/gcc-8.2/bin/gcc /usr/bin/gcc', 'ln -s /usr/local/gcc-8.2/bin/g++ /usr/bin/g++', 'wget -q https://cmake.org/files/v3.16/cmake-3.16.0-Linux-x86_64.tar.gz && tar -zxvf cmake-3.16.0-Linux-x86_64.tar.gz && rm cmake-3.16.0-Linux-x86_64.tar.gz', 'mkdir -p /root/python_build/ && wget -q https://www.sqlite.org/2018/sqlite-autoconf-3250300.tar.gz &&     tar -zxf sqlite-autoconf-3250300.tar.gz && cd sqlite-autoconf-3250300 &&     ./configure -prefix=/usr/local && make -j8 && make install && cd ../ && rm sqlite-autoconf-3250300.tar.gz', 'wget -q https://www.python.org/ftp/python/3.6.0/Python-3.6.0.tgz &&     tar -xzf Python-3.6.0.tgz && cd Python-3.6.0 &&     CFLAGS=""-Wformat"" ./configure --prefix=/usr/local/ --enable-shared > /dev/null &&     make -j8 > /dev/null && make altinstall > /dev/null && ldconfig && cd .. && rm -rf Python-3.6.0*', 'wget -q https://www.python.org/ftp/python/3.7.0/Python-3.7.0.tgz &&     tar -xzf Python-3.7.0.tgz && cd Python-3.7.0 &&     CFLAGS=""-Wformat"" ./configure --prefix=/usr/local/ --enable-shared > /dev/null &&     make -j8 > /dev/null && make altinstall > /dev/null && ldconfig && cd .. && rm -rf Python-3.7.0*', 'wget -q https://www.python.org/ftp/python/3.8.0/Python-3.8.0.tgz &&     tar -xzf Python-3.8.0.tgz && cd Python-3.8.0 &&     CFLAGS=""-Wformat"" ./configure --prefix=/usr/local/ --enable-shared > /dev/null &&     make -j8 > /dev/null && make altinstall > /dev/null && ldconfig && cd .. && rm -rf Python-3.8.0*', 'ln -sf /usr/local/bin/python3.6 /usr/local/bin/python3 && ln -sf /usr/local/bin/python3.6 /usr/bin/python3 && ln -sf /usr/local/bin/pip3.6 /usr/local/bin/pip3 && ln -sf /usr/local/bin/pip3.6 /usr/bin/pip3', 'rm -r /root/python_build', 'wget -qO- https://paddle-ci.cdn.bcebos.com/go1.17.2.linux-amd64.tar.gz |     tar -xz -C /usr/local &&     mkdir /root/go &&     mkdir /root/go/bin &&     mkdir /root/go/src &&     echo ""GOROOT=/usr/local/go"" >> /root/.bashrc &&     echo ""GOPATH=/root/go"" >> /root/.bashrc &&     echo ""PATH=/usr/local/go/bin:/root/go/bin:$PATH"" >> /root/.bashrc', 'bash /build_scripts/install_trt.sh cuda10.2 cudnn8', 'rm -rf /build_scripts', 'git config --global credential.helper store', 'localedef -i en_US -f UTF-8 en_US.UTF-8', 'apt-get install libprotobuf-dev -y', 'wget -q https://paddle-ci.cdn.bcebos.com/patchelf_0.10-2_amd64.deb &&     dpkg -i patchelf_0.10-2_amd64.deb', ""mkdir /var/run/sshd && echo 'root:root' | chpasswd && sed -ri 's/^PermitRootLogin\\s+.*/PermitRootLogin yes/' /etc/ssh/sshd_config && sed -ri 's/UsePAM yes/#UsePAM yes/g' /etc/ssh/sshd_config"", 'wget https://paddle-ci.gz.bcebos.com/ccache-3.7.9.tar.gz &&     tar xf ccache-3.7.9.tar.gz && mkdir /usr/local/ccache-3.7.9 && cd ccache-3.7.9 &&     ./configure -prefix=/usr/local/ccache-3.7.9 &&     make -j8 && make install &&     ln -s /usr/local/ccache-3.7.9/bin/ccache /usr/local/bin/ccache', 'python3.8 -m pip install --upgrade pip==21.1.1 requests &&     python3.7 -m pip install --upgrade pip==21.1.1 requests &&     python3.6 -m pip install --upgrade pip==21.1.1 requests', 'wget https://paddle-serving.bj.bcebos.com/others/centos_ssl.tar &&     tar xf centos_ssl.tar && rm -rf centos_ssl.tar &&     mv libcrypto.so.1.0.2k /usr/lib/libcrypto.so.1.0.2k && mv libssl.so.1.0.2k /usr/lib/libssl.so.1.0.2k &&     ln -sf /usr/lib/libcrypto.so.1.0.2k /usr/lib/libcrypto.so.10 &&     ln -sf /usr/lib/libssl.so.1.0.2k /usr/lib/libssl.so.10 &&     ln -sf /usr/lib/libcrypto.so.10 /usr/lib/libcrypto.so &&     ln -sf /usr/lib/libssl.so.10 /usr/lib/libssl.so']"
PaddlePaddle/Serving,latest,/tools/Dockerfile.cuda10.2-cudnn8.devel,WORKDIR,2,"['/usr/bin', '/home']"
PaddlePaddle/Serving,latest,/tools/Dockerfile.cuda10.2-cudnn8.devel,CMD,1,['source ~/.bashrc']
PaddlePaddle/Serving,latest,/tools/Dockerfile.cuda10.2-cudnn8.devel,EXPOSE,1,['22']
PaddlePaddle/Serving,latest,/tools/Dockerfile.cuda10.1-cudnn7.devel,FROM,1,['hub.baidubce.com/ctr/cuda:10.1-cudnn7-devel-ubuntu16.04']
PaddlePaddle/Serving,latest,/tools/Dockerfile.cuda10.1-cudnn7.devel,MAINTAINER,1,['PaddlePaddle Authors <paddle-dev@baidu.com>']
PaddlePaddle/Serving,latest,/tools/Dockerfile.cuda10.1-cudnn7.devel,ARG,2,"['WITH_GPU', 'WITH_AVX']"
PaddlePaddle/Serving,latest,/tools/Dockerfile.cuda10.1-cudnn7.devel,ENV,8,"['WITH_GPU=${WITH_GPU:-ON}', 'WITH_AVX=${WITH_AVX:-ON}', 'HOME /root', 'PATH=/usr/local/gcc-8.2/bin:$PATH', 'PATH=/home/cmake-3.16.0-Linux-x86_64/bin:$PATH', 'LD_LIBRARY_PATH=/usr/local/lib:${LD_LIBRARY_PATH}', 'GOROOT=/usr/local/go GOPATH=/root/go', 'PATH=usr/local/go/bin:/root/go/bin:${PATH}']"
PaddlePaddle/Serving,latest,/tools/Dockerfile.cuda10.1-cudnn7.devel,COPY,3,"['tools/dockerfiles/root/ /root/', 'tools/dockerfiles/build_scripts /build_scripts', 'tools/dockerfiles/build_scripts /build_scripts']"
PaddlePaddle/Serving,latest,/tools/Dockerfile.cuda10.1-cudnn7.devel,RUN,28,"['apt-get update &&     apt-get install -y make build-essential libssl-dev zlib1g-dev libbz2-dev     libreadline-dev libsqlite3-dev wget curl llvm libncurses5-dev libncursesw5-dev     xz-utils tk-dev libffi-dev liblzma-dev', 'apt-get update &&     apt-get install -y --allow-downgrades --allow-change-held-packages     patchelf git python-pip python-dev python-opencv openssh-server bison     wget unzip unrar tar xz-utils bzip2 gzip coreutils ntp     curl sed grep graphviz libjpeg-dev zlib1g-dev      python-matplotlib unzip     automake locales clang-format swig      liblapack-dev liblapacke-dev libcurl4-openssl-dev     net-tools libtool module-init-tools vim &&     apt-get clean -y', 'ln -s /usr/lib/x86_64-linux-gnu/libssl.so /usr/lib/libssl.so.10 &&     ln -s /usr/lib/x86_64-linux-gnu/libcrypto.so /usr/lib/libcrypto.so.10', 'wget https://github.com/koalaman/shellcheck/releases/download/v0.7.1/shellcheck-v0.7.1.linux.x86_64.tar.xz -O shellcheck-v0.7.1.linux.x86_64.tar.xz &&     tar -xf shellcheck-v0.7.1.linux.x86_64.tar.xz && cp  shellcheck-v0.7.1/shellcheck /usr/bin/shellcheck &&     rm -rf shellcheck-v0.7.1.linux.x86_64.tar.xz shellcheck-v0.7.1', 'bash /build_scripts/install_gcc.sh gcc82 && rm -rf /build_scripts', 'cp gcc gcc.bak && cp g++ g++.bak && rm gcc && rm g++', 'ln -s /usr/local/gcc-8.2/bin/gcc /usr/local/bin/gcc', 'ln -s /usr/local/gcc-8.2/bin/g++ /usr/local/bin/g++', 'ln -s /usr/local/gcc-8.2/bin/gcc /usr/bin/gcc', 'ln -s /usr/local/gcc-8.2/bin/g++ /usr/bin/g++', 'wget -q https://cmake.org/files/v3.16/cmake-3.16.0-Linux-x86_64.tar.gz && tar -zxvf cmake-3.16.0-Linux-x86_64.tar.gz && rm cmake-3.16.0-Linux-x86_64.tar.gz', 'mkdir -p /root/python_build/ && wget -q https://www.sqlite.org/2018/sqlite-autoconf-3250300.tar.gz &&     tar -zxf sqlite-autoconf-3250300.tar.gz && cd sqlite-autoconf-3250300 &&     ./configure -prefix=/usr/local && make -j8 && make install && cd ../ && rm sqlite-autoconf-3250300.tar.gz', 'wget -q https://www.python.org/ftp/python/3.6.0/Python-3.6.0.tgz &&     tar -xzf Python-3.6.0.tgz && cd Python-3.6.0 &&     CFLAGS=""-Wformat"" ./configure --prefix=/usr/local/ --enable-shared > /dev/null &&     make -j8 > /dev/null && make altinstall > /dev/null && ldconfig && cd .. && rm -rf Python-3.6.0*', 'wget -q https://www.python.org/ftp/python/3.7.0/Python-3.7.0.tgz &&     tar -xzf Python-3.7.0.tgz && cd Python-3.7.0 &&     CFLAGS=""-Wformat"" ./configure --prefix=/usr/local/ --enable-shared > /dev/null &&     make -j8 > /dev/null && make altinstall > /dev/null && ldconfig && cd .. && rm -rf Python-3.7.0*', 'wget -q https://www.python.org/ftp/python/3.8.0/Python-3.8.0.tgz &&     tar -xzf Python-3.8.0.tgz && cd Python-3.8.0 &&     CFLAGS=""-Wformat"" ./configure --prefix=/usr/local/ --enable-shared > /dev/null &&     make -j8 > /dev/null && make altinstall > /dev/null && ldconfig && cd .. && rm -rf Python-3.8.0*', 'ln -sf /usr/local/bin/python3.6 /usr/local/bin/python3 && ln -sf /usr/local/bin/python3.6 /usr/bin/python3 && ln -sf /usr/local/bin/pip3.6 /usr/local/bin/pip3 && ln -sf /usr/local/bin/pip3.6 /usr/bin/pip3', 'rm -r /root/python_build', 'wget -qO- https://paddle-ci.cdn.bcebos.com/go1.17.2.linux-amd64.tar.gz |     tar -xz -C /usr/local &&     mkdir /root/go &&     mkdir /root/go/bin &&     mkdir /root/go/src &&     echo ""GOROOT=/usr/local/go"" >> /root/.bashrc &&     echo ""GOPATH=/root/go"" >> /root/.bashrc &&     echo ""PATH=/usr/local/go/bin:/root/go/bin:$PATH"" >> /root/.bashrc', 'bash /build_scripts/install_trt.sh cuda10.1', 'rm -rf /build_scripts', 'git config --global credential.helper store', 'localedef -i en_US -f UTF-8 en_US.UTF-8', 'apt-get install libprotobuf-dev -y', 'wget -q https://paddle-ci.cdn.bcebos.com/patchelf_0.10-2_amd64.deb &&     dpkg -i patchelf_0.10-2_amd64.deb', ""mkdir /var/run/sshd && echo 'root:root' | chpasswd && sed -ri 's/^PermitRootLogin\\s+.*/PermitRootLogin yes/' /etc/ssh/sshd_config && sed -ri 's/UsePAM yes/#UsePAM yes/g' /etc/ssh/sshd_config"", 'wget https://paddle-ci.gz.bcebos.com/ccache-3.7.9.tar.gz &&     tar xf ccache-3.7.9.tar.gz && mkdir /usr/local/ccache-3.7.9 && cd ccache-3.7.9 &&     ./configure -prefix=/usr/local/ccache-3.7.9 &&     make -j8 && make install &&     ln -s /usr/local/ccache-3.7.9/bin/ccache /usr/local/bin/ccache', 'python3.8 -m pip install --upgrade pip==21.1.1 requests &&     python3.7 -m pip install --upgrade pip==21.1.1 requests &&     python3.6 -m pip install --upgrade pip==21.1.1 requests', 'wget https://paddle-serving.bj.bcebos.com/others/centos_ssl.tar &&     tar xf centos_ssl.tar && rm -rf centos_ssl.tar &&     mv libcrypto.so.1.0.2k /usr/lib/libcrypto.so.1.0.2k && mv libssl.so.1.0.2k /usr/lib/libssl.so.1.0.2k &&     ln -sf /usr/lib/libcrypto.so.1.0.2k /usr/lib/libcrypto.so.10 &&     ln -sf /usr/lib/libssl.so.1.0.2k /usr/lib/libssl.so.10 &&     ln -sf /usr/lib/libcrypto.so.10 /usr/lib/libcrypto.so &&     ln -sf /usr/lib/libssl.so.10 /usr/lib/libssl.so']"
PaddlePaddle/Serving,latest,/tools/Dockerfile.cuda10.1-cudnn7.devel,WORKDIR,2,"['/usr/bin', '/home']"
PaddlePaddle/Serving,latest,/tools/Dockerfile.cuda10.1-cudnn7.devel,CMD,1,['source ~/.bashrc']
PaddlePaddle/Serving,latest,/tools/Dockerfile.cuda10.1-cudnn7.devel,EXPOSE,1,['22']
PaddlePaddle/Serving,latest,/tools/Dockerfile.runtime_template,FROM,1,['<<base_image>>']
PaddlePaddle/Serving,latest,/tools/Dockerfile.runtime_template,RUN,14,"['apt-get update &&     apt-get install -y make build-essential', 'apt-get update &&     apt-get install -y wget tar xz-utils bzip2  libcurl4-openssl-dev     curl sed grep zlib1g-dev  libreadline-gplv2-dev libncursesw5-dev libssl-dev libsqlite3-dev tk-dev libgdbm-dev libc6-dev libbz2-dev libffi-dev &&     apt-get clean -y', 'bash /build_scripts/install_gcc.sh gcc82 && rm -rf /build_scripts', 'cp gcc gcc.bak && cp g++ g++.bak && rm gcc && rm g++', 'ln -s /usr/local/gcc-8.2/bin/gcc /usr/local/bin/gcc', 'ln -s /usr/local/gcc-8.2/bin/g++ /usr/local/bin/g++', 'ln -s /usr/local/gcc-8.2/bin/gcc /usr/bin/gcc', 'ln -s /usr/local/gcc-8.2/bin/g++ /usr/bin/g++', 'bash /build_scripts/install_python.sh <<python_version>> && rm -rf /build_scripts', 'bash /build_scripts/install_whl.sh <<serving_version>> <<paddle_version>> <<run_env>> <<python_version>> && rm -rf /build_scripts', 'bash /build_scripts/soft_link.sh <<run_env>>', 'bash /build_scripts/install_trt.sh <<run_env>> && rm -rf /build_scripts', 'wget -qO- https://dl.google.com/go/go1.14.linux-amd64.tar.gz |     tar -xz -C /usr/local &&     mkdir /root/go &&     mkdir /root/go/bin &&     mkdir /root/go/src &&     echo ""GOROOT=/usr/local/go"" >> /root/.bashrc &&     echo ""GOPATH=/root/go"" >> /root/.bashrc &&     echo ""PATH=/usr/local/go/bin:/root/go/bin:$PATH"" >> /root/.bashrc', 'wget https://paddle-serving.bj.bcebos.com/others/centos_ssl.tar &&     tar xf centos_ssl.tar && rm -rf centos_ssl.tar &&     mv libcrypto.so.1.0.2k /usr/lib/libcrypto.so.1.0.2k && mv libssl.so.1.0.2k /usr/lib/libssl.so.1.0.2k &&     ln -sf /usr/lib/libcrypto.so.1.0.2k /usr/lib/libcrypto.so.10 &&     ln -sf /usr/lib/libssl.so.1.0.2k /usr/lib/libssl.so.10 &&     ln -sf /usr/lib/libcrypto.so.10 /usr/lib/libcrypto.so &&     ln -sf /usr/lib/libssl.so.10 /usr/lib/libssl.so']"
PaddlePaddle/Serving,latest,/tools/Dockerfile.runtime_template,WORKDIR,5,"['/usr/bin', '/home', '/home', '/home', '/home']"
PaddlePaddle/Serving,latest,/tools/Dockerfile.runtime_template,COPY,5,"['tools/dockerfiles/build_scripts /build_scripts', 'tools/dockerfiles/build_scripts /build_scripts', 'tools/dockerfiles/build_scripts /build_scripts', 'tools/dockerfiles/build_scripts /build_scripts', 'tools/dockerfiles/build_scripts /build_scripts']"
PaddlePaddle/Serving,latest,/tools/Dockerfile.runtime_template,ENV,1,['PATH=/usr/local/gcc-8.2/bin:$PATH']
PaddlePaddle/Serving,latest,/tools/Dockerfile.runtime_template,EXPOSE,1,['22']
PaddlePaddle/Serving,latest,/tools/Dockerfile.ci,FROM,1,['hub.baidubce.com/paddlepaddle/serving:latest-cuda10.2-cudnn8-devel']
bytedance/fedlearner,latest,/Dockerfile,FROM,1,['python:3.6']
bytedance/fedlearner,latest,/Dockerfile,WORKDIR,1,['/app']
bytedance/fedlearner,latest,/Dockerfile,COPY,1,['. /app']
bytedance/fedlearner,latest,/Dockerfile,RUN,3,"['apt-get -y update     && apt-get -y install cron     && apt-get -y install libgmp-dev     && apt-get -y install libmpfr-dev     && apt-get -y install libmpc-dev     && export DEBIAN_FRONTEND=noninteractive     && apt-get -y install krb5-user     && rm -rf /var/lib/apt/lists/*', 'pip install --upgrade pip     && pip install -r requirements.txt     && rm -rf ~/.cache/pip', 'make protobuf     && make op']"
bytedance/fedlearner,latest,/Dockerfile,ENV,2,"['PYTHONPATH=/app:$PYTHONPATH', 'TZ=""Asia/Shanghai""']"
bytedance/fedlearner,latest,/Dockerfile,CMD,1,['[]']
bytedance/fedlearner,latest,/web_console_v2/Dockerfile,FROM,1,['python:3.7']
bytedance/fedlearner,latest,/web_console_v2/Dockerfile,RUN,4,"['apt-get update &&     apt install -y curl &&     curl -sL https://deb.nodesource.com/setup_14.x | bash &&     apt-get install -y make nodejs nginx &&     apt-get clean', 'npx pnpm install && npx pnpm build && rm -rf node_modules', 'pip3 install --no-cache-dir -r requirements.txt && make protobuf', ""curl -fOL https://github.com/cdr/code-server/releases/download/v3.8.0/code-server_3.8.0_amd64.deb &&     dpkg -i code-server_3.8.0_amd64.deb &&     rm code-server_3.8.0_amd64.deb &&     mkdir -p ~/.config/code-server/ &&     echo 'bind-addr: 0.0.0.0:1992\\nauth: password\\npassword: fedlearner\\ncert: false\\n' >> ~/.config/code-server/config.yaml""]"
bytedance/fedlearner,latest,/web_console_v2/Dockerfile,WORKDIR,4,"['/app', '/app/client', '/app/api', '/app']"
bytedance/fedlearner,latest,/web_console_v2/Dockerfile,COPY,2,"['. .', 'nginx.conf /etc/nginx/conf.d/nginx.conf']"
bytedance/fedlearner,latest,/web_console_v2/Dockerfile,EXPOSE,3,"['1989', '1990', '1992']"
bytedance/fedlearner,latest,/web_console_v2/Dockerfile,ENV,1,"['TZ=""Asia/Shanghai""']"
bytedance/fedlearner,latest,/web_console_v2/Dockerfile,CMD,1,['sh run_prod.sh']
bytedance/fedlearner,latest,/web_console_v2/docker/spark/Dockerfile,FROM,1,['registry.cn-beijing.aliyuncs.com/fedlearner/spark-py:v3.0.0']
bytedance/fedlearner,latest,/web_console_v2/docker/spark/Dockerfile,LABEL,1,"['maintainers=""Wang Sen <wangsen.0914@bytedance.com>, Runyu Yu<yurunyu@bytedance.com>""']"
bytedance/fedlearner,latest,/web_console_v2/docker/spark/Dockerfile,USER,1,['root']
bytedance/fedlearner,latest,/web_console_v2/docker/spark/Dockerfile,ARG,1,['DEBIAN_FRONTEND=noninteractive']
bytedance/fedlearner,latest,/web_console_v2/docker/spark/Dockerfile,RUN,5,"[""mkdir -p /usr/share/man/man1/ && apt update && apt install -y software-properties-common      && apt-add-repository 'deb http://security.debian.org/debian-security stretch/updates main'      && apt update && apt install -y maven openjdk-8-jdk git      && apt-get clean && rm -rf /var/lib/apt/lists/*"", 'git clone https://github.com/tensorflow/ecosystem.git /opt/ecosystem', 'cd ${ROOT_DIR}/hadoop && mvn clean install -DskipTests && cp target/tensorflow-hadoop-1.10.0.jar ${SPARK_HOME}/jars/', 'cd ${ROOT_DIR}/spark/spark-tensorflow-connector && mvn clean install -DskipTests && cp target/spark-tensorflow-connector_2.12-1.11.0.jar ${SPARK_HOME}/jars/     && rm -rf /opt/ecosystem', 'pip3 install -U pip -i https://pypi.doubanio.com/simple     && /usr/bin/python3 -m pip install -r /opt/env/requirements.txt -i https://pypi.doubanio.com/simple']"
bytedance/fedlearner,latest,/web_console_v2/docker/spark/Dockerfile,ENV,6,"['ROOT_DIR /opt/ecosystem', 'SPARK_HOME /opt/spark', 'JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64', 'PATH ${JAVA_HOME}/bin:${PATH}', 'PYSPARK_PYTHON=/usr/bin/python3', 'PYSPARK_DRIVER_PYTHON=/usr/bin/python3']"
bytedance/fedlearner,latest,/web_console_v2/docker/spark/Dockerfile,COPY,1,['./requirements.txt /opt/env/requirements.txt']
bytedance/fedlearner,latest,/deploy/kubernetes_operator/Dockerfile,ARG,2,"['GO_VERSION=1.14', 'WHAT=cmd/operator/main.go']"
bytedance/fedlearner,latest,/deploy/kubernetes_operator/Dockerfile,FROM,2,"['golang:${GO_VERSION}-alpine AS builder', 'alpine AS final']"
bytedance/fedlearner,latest,/deploy/kubernetes_operator/Dockerfile,RUN,4,"[""mkdir /user &&     echo 'nobody:x:65534:65534:nobody:/:' > /user/passwd &&     echo 'nobody:x:65534:' > /user/group"", 'go mod download', 'go build -o /app -trimpath ""${WHAT}""', 'apk --update add tzdata && cp /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone']"
bytedance/fedlearner,latest,/deploy/kubernetes_operator/Dockerfile,ENV,6,"['GOOS linux', 'GOARCH amd64', 'CGO_ENABLED 0', 'WHAT=${WHAT}', 'GO111MODULE=on', 'TZ=""Asia/Shanghai""']"
bytedance/fedlearner,latest,/deploy/kubernetes_operator/Dockerfile,WORKDIR,1,['/src']
bytedance/fedlearner,latest,/deploy/kubernetes_operator/Dockerfile,COPY,5,"['./go.mod ./go.sum ./', './ ./', '--from=builder /user/group /user/passwd /etc/', '--from=builder /etc/ssl/certs/ca-certificates.crt /etc/ssl/certs/', '--from=builder /app /app']"
bytedance/fedlearner,latest,/deploy/kubernetes_operator/Dockerfile,USER,1,['nobody:nobody']
bytedance/fedlearner,latest,/deploy/kubernetes_operator/Dockerfile,ENTRYPOINT,1,"['[""/app""]']"
bytedance/fedlearner,latest,/web_console/Dockerfile,FROM,1,['mhart/alpine-node:12']
bytedance/fedlearner,latest,/web_console/Dockerfile,WORKDIR,1,['/app']
bytedance/fedlearner,latest,/web_console/Dockerfile,COPY,1,['. .']
bytedance/fedlearner,latest,/web_console/Dockerfile,RUN,2,"['npm ci', 'npm run build']"
bytedance/fedlearner,latest,/web_console/Dockerfile,EXPOSE,1,['1989']
bytedance/fedlearner,latest,/web_console/Dockerfile,CMD,1,"['[""startup.sh""]']"
neuml/txtai,latest,/docker/api.Dockerfile,FROM,1,['nvidia/cuda:10.2-base-ubuntu18.04']
neuml/txtai,latest,/docker/api.Dockerfile,LABEL,2,"['maintainer=""NeuML""', 'repository=""txtai""']"
neuml/txtai,latest,/docker/api.Dockerfile,ENV,2,"['LC_ALL=C.UTF-8', 'LANG=C.UTF-8']"
neuml/txtai,latest,/docker/api.Dockerfile,EXPOSE,1,['8000']
neuml/txtai,latest,/docker/api.Dockerfile,RUN,5,"['apt-get update &&     apt-get -y --no-install-recommends install libgomp1 libsndfile1 gcc g++ python3.7 python3.7-dev python3-pip &&     rm -rf /var/lib/apt/lists', 'ln -s /usr/bin/python3.7 /usr/bin/python &&     python -m pip install --no-cache-dir -U pip wheel setuptools &&     python -m pip install --no-cache-dir txtai[api,pipeline] &&     python -c ""import nltk; nltk.download(\'punkt\')""', 'apt-get -y purge gcc g++ python3.7-dev && apt-get -y autoremove', 'echo ""path: /txtai"" > index.yml &&     echo ""writable: True"" >> index.yml &&     echo ""embeddings:"" >> index.yml &&     echo ""  method: transformers"" >> index.yml &&     echo ""  path: sentence-transformers/nli-mpnet-base-v2"" >> index.yml &&     echo ""extractor:"" >> index.yml &&     echo ""  path: distilbert-base-cased-distilled-squad"" >> index.yml &&     echo ""labels:"" >> index.yml', 'python -c ""from transformers import AutoModel; AutoModel.from_pretrained(\'sentence-transformers/nli-mpnet-base-v2\')"" &&     python -c ""from transformers import AutoModel; AutoModel.from_pretrained(\'distilbert-base-cased-distilled-squad\')"" &&     python -c ""from transformers import AutoModel; AutoModel.from_pretrained(\'facebook/bart-large-mnli\')""']"
neuml/txtai,latest,/docker/api.Dockerfile,ENTRYPOINT,1,"['CONFIG=index.yml uvicorn --host 0.0.0.0 ""txtai.api:app""']"
IntelAI/models,latest,/tools/docker/tools.Dockerfile,FROM,1,['ubuntu:16.04']
IntelAI/models,latest,/tools/docker/tools.Dockerfile,LABEL,1,"['maintainer=""Austin Anderson <angerson@google.com>""']"
IntelAI/models,latest,/tools/docker/tools.Dockerfile,ARG,3,"['HTTP_PROXY', 'HTTPS_PROXY', 'NO_PROXY']"
IntelAI/models,latest,/tools/docker/tools.Dockerfile,ENV,3,"['http_proxy=${HTTP_PROXY}', 'https_proxy=${HTTPS_PROXY}', 'no_proxy=${NO_PROXY}']"
IntelAI/models,latest,/tools/docker/tools.Dockerfile,RUN,7,"['if [ ""$HTTPS_PROXY"" != """" ]]; then   touch /etc/apt/apt.conf.d/proxy.conf &&   echo \'Acquire::https::Proxy ""\'$HTTPS_PROXY\'"";\' >> /etc/apt/apt.conf.d/proxy.conf; fi', 'if [ ""$HTTP_PROXY"" != """" ]]; then   echo \'Acquire::http::Proxy ""\'$HTTP_PROXY\'"";\' >> /etc/apt/apt.conf.d/proxy.conf; fi', 'apt-get update &&     apt-get install -y     bash     build-essential     curl     git     libffi-dev     libssl-dev     python3     python3-pip     python-dev', 'curl -sSL https://get.docker.com/ | sh', ""pip3 install --upgrade pip==20.3.4 &&     pip3 install          absl-py          cerberus          'cryptography<=3.2.1'          'docker==4.2.2'          GitPython          ndg-httpsclient          pyasn1          pyopenssl          pyyaml          setuptools          urllib3"", 'curl -L -o kustomize.tar.gz https://github.com/kubernetes-sigs/kustomize/releases/download/kustomize%2Fv3.8.7/kustomize_v3.8.7_linux_amd64.tar.gz &&     tar xzf kustomize.tar.gz &&     chmod +x kustomize &&     mv kustomize /usr/local/bin', 'chmod a+rwx /etc/bash.bashrc']"
IntelAI/models,latest,/tools/docker/tools.Dockerfile,WORKDIR,1,['/tf']
IntelAI/models,latest,/tools/docker/tools.Dockerfile,VOLUME,1,"['[""/tf""]']"
IntelAI/models,latest,/tools/docker/tools.Dockerfile,COPY,1,['bashrc /etc/bash.bashrc']
IntelAI/models,latest,/tools/docker/partials/centos/entrypoint.partial.Dockerfile,ENV,5,"['USER_ID=0', 'USER_NAME=root', 'GROUP_ID=0', 'GROUP_NAME=root', 'GOSU_VERSION=1.11']"
IntelAI/models,latest,/tools/docker/partials/centos/entrypoint.partial.Dockerfile,RUN,3,"['curl -o /tmp/gosu.key -SL ""https://keys.openpgp.org/vks/v1/by-fingerprint/B42F6819007F00F88E364FD4036A9C25BF357DD4""     && gpg --import /tmp/gosu.key     && curl -o /usr/local/bin/gosu -SL ""https://github.com/tianon/gosu/releases/download/${GOSU_VERSION}/gosu-amd64""     && curl -o /usr/local/bin/gosu.asc -SL ""https://github.com/tianon/gosu/releases/download/${GOSU_VERSION}/gosu-amd64.asc""     && gpg --verify /usr/local/bin/gosu.asc     && rm /usr/local/bin/gosu.asc     && rm -r /root/.gnupg/     && rm /tmp/gosu.key     && chmod +x /usr/local/bin/gosu', 'echo -e \'#!/bin/bash\\nUSER_ID=$USER_ID\\nUSER_NAME=$USER_NAME\\nGROUP_ID=$GROUP_ID\\nGROUP_NAME=$GROUP_NAME\\nif [[ $GROUP_NAME != root ]]; then\\n  groupadd -r -g $GROUP_ID $GROUP_NAME\\nfi\\nif [[ $USER_NAME != root ]]; then\\n  useradd --no-log-init -r -u $USER_ID -g $GROUP_NAME -s /bin/bash -M $USER_NAME\\nfi\\nexec /usr/local/bin/gosu $USER_NAME:$GROUP_NAME ""$@""\\n \'>> /tmp/entrypoint.sh', 'chmod u+x,g+x /tmp/entrypoint.sh']"
IntelAI/models,latest,/tools/docker/partials/centos/entrypoint.partial.Dockerfile,ENTRYPOINT,1,"['[""/tmp/entrypoint.sh""]']"
IntelAI/models,latest,/tools/docker/partials/centos/tcmalloc.partial.Dockerfile,RUN,1,['dnf -y install https://extras.getpagespeed.com/release-el8-latest.rpm &&     dnf -y install gperftools &&     yum clean all']
IntelAI/models,latest,/tools/docker/partials/centos/unzip.partial.Dockerfile,RUN,1,['yum update -y && yum install -y unzip']
IntelAI/models,latest,/tools/docker/partials/centos/entrypoint-centos.partial.Dockerfile,ENV,5,"['USER_ID=0', 'USER_NAME=root', 'GROUP_ID=0', 'GROUP_NAME=root', 'GOSU_VERSION=1.11']"
IntelAI/models,latest,/tools/docker/partials/centos/entrypoint-centos.partial.Dockerfile,RUN,3,"['gpg --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4     && curl -o /usr/local/bin/gosu -SL ""https://github.com/tianon/gosu/releases/download/${GOSU_VERSION}/gosu-amd64""     && curl -o /usr/local/bin/gosu.asc -SL ""https://github.com/tianon/gosu/releases/download/${GOSU_VERSION}/gosu-amd64.asc""     && gpg --verify /usr/local/bin/gosu.asc     && rm /usr/local/bin/gosu.asc     && rm -r /root/.gnupg/     && chmod +x /usr/local/bin/gosu', 'echo -e \'#!/bin/bash\\nUSER_ID=$USER_ID\\nUSER_NAME=$USER_NAME\\nGROUP_ID=$GROUP_ID\\nGROUP_NAME=$GROUP_NAME\\nif [[ $GROUP_NAME != root ]]; then\\n  groupadd -r -g $GROUP_ID $GROUP_NAME\\nfi\\nif [[ $USER_NAME != root ]]; then\\n  useradd --no-log-init -r -u $USER_ID -g $GROUP_NAME -s /bin/bash -M $USER_NAME\\nfi\\nexec /usr/local/bin/gosu $USER_NAME:$GROUP_NAME ""$@""\\nsource ~/anaconda3/bin/activate pytorch\\n \'>> /tmp/entrypoint.sh', 'chmod u+x,g+x /tmp/entrypoint.sh']"
IntelAI/models,latest,/tools/docker/partials/centos/entrypoint-centos.partial.Dockerfile,ENTRYPOINT,1,"['[""/tmp/entrypoint.sh""]']"
IntelAI/models,latest,/tools/docker/partials/centos/python-build.partial.Dockerfile,RUN,1,['yum install -y gcc gcc-c++ &&     yum install -y python3-devel &&     yum clean all']
IntelAI/models,latest,/tools/docker/partials/centos/numactl.partial.Dockerfile,RUN,1,['yum update -y && yum install -y numactl']
IntelAI/models,latest,/tools/docker/partials/centos/horovod.partial.Dockerfile,ARG,1,['HOROVOD_VERSION=0.22.1']
IntelAI/models,latest,/tools/docker/partials/centos/horovod.partial.Dockerfile,ENV,1,['HOROVOD_WITHOUT_MXNET=1     HOROVOD_WITHOUT_PYTORCH=1     HOROVOD_WITH_TENSORFLOW=1     HOROVOD_CPU_OPERATIONS=MPI     HOROVOD_WITH_MPI=1     HOROVOD_WITHOUT_GLOO=1']
IntelAI/models,latest,/tools/docker/partials/centos/horovod.partial.Dockerfile,RUN,1,['python3 -m pip install --no-cache-dir horovod==${HOROVOD_VERSION}']
IntelAI/models,latest,/tools/docker/partials/centos/libgl.partial.Dockerfile,RUN,1,['yum update -y && yum install -y        mesa-libGL        glib2-devel']
IntelAI/models,latest,/tools/docker/partials/centos/common.partial.Dockerfile,ENV,1,['DEBIAN_FRONTEND=noninteractive']
IntelAI/models,latest,/tools/docker/partials/centos/common.partial.Dockerfile,RUN,1,['yum update -y &&     yum install -y         numactl         libXext         libSM         python3-tkinter &&     pip install requests']
IntelAI/models,latest,/tools/docker/partials/centos/tensorflow/benchmarks-source.partial.Dockerfile,ARG,2,"['TF_BENCHMARKS_BRANCH', 'TF_BENCHMARKS_DIR=/tensorflow/benchmarks']"
IntelAI/models,latest,/tools/docker/partials/centos/tensorflow/benchmarks-source.partial.Dockerfile,ENV,1,['TF_BENCHMARKS_DIR=${TF_BENCHMARKS_DIR}']
IntelAI/models,latest,/tools/docker/partials/centos/tensorflow/benchmarks-source.partial.Dockerfile,RUN,1,['yum update -y && yum install -y git &&     git clone --single-branch https://github.com/tensorflow/benchmarks.git ${TF_BENCHMARKS_DIR} &&     ( cd ${TF_BENCHMARKS_DIR} &&     git checkout ${TF_BENCHMARKS_BRANCH} )']
IntelAI/models,latest,/tools/docker/partials/centos/tensorflow/model-source.partial.Dockerfile,ARG,3,"['TF_MODELS_BRANCH', 'FETCH_PR', 'CODE_DIR=/tensorflow/models']"
IntelAI/models,latest,/tools/docker/partials/centos/tensorflow/model-source.partial.Dockerfile,ENV,1,['TF_MODELS_DIR=${CODE_DIR}']
IntelAI/models,latest,/tools/docker/partials/centos/tensorflow/model-source.partial.Dockerfile,RUN,1,"['yum update -y && yum install -y git &&     git clone https://github.com/tensorflow/models.git ${CODE_DIR} &&     ( cd ${CODE_DIR} &&     if [ ! -z ""${FETCH_PR}"" ]; then git fetch origin ${FETCH_PR}; fi &&     git checkout ${TF_MODELS_BRANCH} )']"
IntelAI/models,latest,/tools/docker/partials/centos/object_detection/protoc.partial.Dockerfile,ARG,1,['TF_MODELS_DIR=/tensorflow/models']
IntelAI/models,latest,/tools/docker/partials/centos/object_detection/protoc.partial.Dockerfile,RUN,1,['cd ${TF_MODELS_DIR}/research &&     yum update -y && yum install -y         unzip         wget &&     wget --quiet -O protobuf.zip https://github.com/google/protobuf/releases/download/v3.3.0/protoc-3.3.0-linux-x86_64.zip &&     unzip -o protobuf.zip &&     rm protobuf.zip &&     ./bin/protoc object_detection/protos/*.proto --python_out=.']
IntelAI/models,latest,/tools/docker/partials/centos/pytorch/ipex-centos-icx-dlrm-base.partial.Dockerfile,ARG,1,['IPEX_CONTAINER_TAG=ipex-icx-dlrm-base:centos7']
IntelAI/models,latest,/tools/docker/partials/centos/pytorch/ipex-centos-icx-dlrm-base.partial.Dockerfile,FROM,1,['$IPEX_CONTAINER_TAG']
IntelAI/models,latest,/tools/docker/partials/centos/pytorch/ipex-centos-icx-dlrm-base.partial.Dockerfile,SHELL,1,"['[""/bin/bash"", ""-c""]']"
IntelAI/models,latest,/tools/docker/partials/centos/pytorch/ipex-centos-icx-dlrm-base.partial.Dockerfile,RUN,1,"['echo ""source activate pytorch"" >> ~/.bash_profile']"
IntelAI/models,latest,/tools/docker/partials/centos/pytorch/ipex-centos-icx-resnet50-base.partial.Dockerfile,ARG,1,['IPEX_CONTAINER_TAG=ipex-icx-resnet50-base:centos7']
IntelAI/models,latest,/tools/docker/partials/centos/pytorch/ipex-centos-icx-resnet50-base.partial.Dockerfile,FROM,1,['$IPEX_CONTAINER_TAG']
IntelAI/models,latest,/tools/docker/partials/centos/pytorch/ipex-centos-icx-resnet50-base.partial.Dockerfile,SHELL,1,"['[""/bin/bash"", ""-c""]']"
IntelAI/models,latest,/tools/docker/partials/centos/pytorch/ipex-centos-icx-resnet50-base.partial.Dockerfile,RUN,1,"['echo ""source activate pytorch"" >> ~/.bash_profile']"
IntelAI/models,latest,/tools/docker/partials/common/opencv.partial.Dockerfile,RUN,1,['pip install opencv-python']
IntelAI/models,latest,/tools/docker/partials/common/model_package.partial.Dockerfile,ARG,3,"['PACKAGE_DIR=model_packages', 'PACKAGE_NAME', 'MODEL_WORKSPACE']"
IntelAI/models,latest,/tools/docker/partials/common/model_package.partial.Dockerfile,RUN,2,"['umask 002 && mkdir -p ${MODEL_WORKSPACE} && chgrp root ${MODEL_WORKSPACE} && chmod g+s+w,o+s+r ${MODEL_WORKSPACE}', 'chown -R root ${MODEL_WORKSPACE}/${PACKAGE_NAME} && chgrp -R root ${MODEL_WORKSPACE}/${PACKAGE_NAME} && chmod -R g+s+w ${MODEL_WORKSPACE}/${PACKAGE_NAME} && find ${MODEL_WORKSPACE}/${PACKAGE_NAME} -type d | xargs chmod o+r+x']"
IntelAI/models,latest,/tools/docker/partials/common/model_package.partial.Dockerfile,ADD,1,['--chown=0:0 ${PACKAGE_DIR}/${PACKAGE_NAME}.tar.gz ${MODEL_WORKSPACE}']
IntelAI/models,latest,/tools/docker/partials/common/model_package.partial.Dockerfile,WORKDIR,1,['${MODEL_WORKSPACE}/${PACKAGE_NAME}']
IntelAI/models,latest,/tools/docker/partials/common/conda.partial.Dockerfile,ARG,1,['INTEL_PYTHON_TAG=latest']
IntelAI/models,latest,/tools/docker/partials/common/conda.partial.Dockerfile,FROM,1,['intelpython/intelpython3_core:$INTEL_PYTHON_TAG']
IntelAI/models,latest,/tools/docker/partials/common/intel-python.partial.Dockerfile,ARG,2,"['PY_VERSION', 'INTEL_PY_BUILD']"
IntelAI/models,latest,/tools/docker/partials/common/intel-python.partial.Dockerfile,RUN,1,['conda config --add channels intel &&     conda install  -y -q intelpython${PY_VERSION}_core==${INTEL_PY_BUILD} python=${PY_VERSION}']
IntelAI/models,latest,/tools/docker/partials/common/tensorflow-addons-0.11.0.partial.Dockerfile,RUN,1,['pip install tensorflow-addons==0.11.0']
IntelAI/models,latest,/tools/docker/partials/common/recommendation/ncf_pip_installs.partial.Dockerfile,RUN,1,"[""pip install         google-api-python-client==1.6.7         google-cloud-bigquery==0.31.0         kaggle==1.3.9         numpy==1.16.3         oauth2client==4.1.2         pandas         'psutil>=5.6.7'         py-cpuinfo==3.3.0         typing""]"
IntelAI/models,latest,/tools/docker/partials/common/image_segmentation/3d_unet_pip_installs.partial.Dockerfile,RUN,1,['pip install         Keras==2.6.0rc3         SimpleITK==1.2.0         nibabel==2.3.3         nilearn==0.6.2         numpy==1.16.3         tables==3.4.4']
IntelAI/models,latest,/tools/docker/partials/common/image_segmentation/unet_pip_installs.partial.Dockerfile,RUN,1,"[""pip install         'Pillow>=8.1.2'         click         matplotlib         numpy==1.16.3""]"
IntelAI/models,latest,/tools/docker/partials/common/datasets/execute_preprocess_coco_val.partial.Dockerfile,CMD,1,['scripts/preprocess_coco_val.sh']
IntelAI/models,latest,/tools/docker/partials/common/ml/test-scikit-learn.partial.Dockerfile,RUN,1,"['python -c ""import modin.pandas""']"
IntelAI/models,latest,/tools/docker/partials/common/ml/conda-install-xgboost.partial.Dockerfile,RUN,1,['conda config --add channels intel     && conda install  -y -q xgboost     && conda clean --all']
IntelAI/models,latest,/tools/docker/partials/common/ml/conda-install-scikit-learn.partial.Dockerfile,RUN,2,"['conda install -y -q         daal4py         scikit-learn-intelex         threadpoolctl &&     conda clean -y --all', 'echo \'from sklearnex import patch_sklearn\\nfrom sklearnex import unpatch_sklearn\\npatch_sklearn()\\nprint(""To disable Intel(R) Extension for Scikit-learn*, you can run: unpatch_sklearn()"")\\n\' >> ${PYTHONSTARTUP}']"
IntelAI/models,latest,/tools/docker/partials/common/ml/conda-install-scikit-learn.partial.Dockerfile,ENV,1,['PYTHONSTARTUP=${HOME}/.patch_sklearn.py']
IntelAI/models,latest,/tools/docker/partials/common/ml/xgboost.partial.Dockerfile,RUN,1,['conda config --add channels intel     && conda install  -y -q xgboost     && conda clean --all']
IntelAI/models,latest,/tools/docker/partials/common/ml/modin-ray.partial.Dockerfile,ENV,1,['MODIN_ENGINE ray']
IntelAI/models,latest,/tools/docker/partials/common/ml/modin-ray.partial.Dockerfile,RUN,2,"['python3 -m pip install     modin     ray', ""sed -i.bak '/include_webui/ s/^#*/#/' ${CONDA_INSTALL_PATH}/lib/python3.7/site-packages/modin/engines/ray/utils.py""]"
IntelAI/models,latest,/tools/docker/partials/common/tensorflow/conda-install-tensorflow.partial.Dockerfile,RUN,1,['conda config --add channels intel     && conda install -y -q tensorflow     && conda clean --all']
IntelAI/models,latest,/tools/docker/partials/common/tensorflow/tensorflow-base.partial.Dockerfile,ARG,2,"['TENSORFLOW_IMAGE=""intel/intel-optimized-tensorflow""', 'TENSORFLOW_TAG']"
IntelAI/models,latest,/tools/docker/partials/common/tensorflow/tensorflow-base.partial.Dockerfile,FROM,1,['${TENSORFLOW_IMAGE}:${TENSORFLOW_TAG}']
IntelAI/models,latest,/tools/docker/partials/common/object_detection/ssdresnet34_bfloat16_patch.partial.Dockerfile,RUN,1,['cd ${TF_MODELS_DIR} &&     git apply --ignore-space-change --ignore-whitespace ${MODEL_WORKSPACE}/${PACKAGE_NAME}/models/object_detection/tensorflow/ssd-resnet34/training/bfloat16/tf-2.0.diff']
IntelAI/models,latest,/tools/docker/partials/common/object_detection/pip_installs.partial.Dockerfile,RUN,1,"[""pip install         Cython         contextlib2         jupyter         lxml         matplotlib         numpy>=1.17.4         'pillow>=8.1.2' &&     pip install pycocotools""]"
IntelAI/models,latest,/tools/docker/partials/common/object_detection/rfcn_patch.partial.Dockerfile,RUN,1,['cd ${TF_MODELS_DIR} &&     git checkout 6c21084503b27a9ab118e1db25f79957d5ef540b &&     git apply --ignore-space-change --ignore-whitespace ${MODEL_WORKSPACE}/${PACKAGE_NAME}/models/object_detection/tensorflow/rfcn/inference/tf-2.0.patch']
IntelAI/models,latest,/tools/docker/partials/common/language_translation/transformer_lt_pip_installs.partial.Dockerfile,RUN,1,['pip install Cython pandas']
IntelAI/models,latest,/tools/docker/partials/common/pytorch/pytorch-base.partial.Dockerfile,ARG,2,"['PYTORCH_IMAGE=""intel/intel-optimized-pytorch""', 'PYTORCH_TAG']"
IntelAI/models,latest,/tools/docker/partials/common/pytorch/pytorch-base.partial.Dockerfile,FROM,1,['${PYTORCH_IMAGE}:${PYTORCH_TAG}']
IntelAI/models,latest,/tools/docker/partials/common/pytorch/ipex-conda.partial.Dockerfile,RUN,1,['conda install -y -c intel/label/oneapibeta intel-extension-for-pytorch']
IntelAI/models,latest,/tools/docker/partials/common/pytorch/torchccl-conda.partial.Dockerfile,RUN,1,['conda install -y -c intel/label/oneapibeta torch_ccl']
IntelAI/models,latest,/tools/docker/partials/common/pytorch/torchccl-conda.partial.Dockerfile,ARG,1,['PYTHON_VERSION=3.7']
IntelAI/models,latest,/tools/docker/partials/common/pytorch/torchccl-conda.partial.Dockerfile,ENV,1,"['LD_LIBRARY_PATH=""/opt/conda/lib/python${PYTHON_VERSION}/site-packages/ccl/lib/:${LD_LIBRARY_PATH}""']"
IntelAI/models,latest,/tools/docker/partials/common/pytorch/pytorch-conda.partial.Dockerfile,RUN,1,['conda install -y -c intel/label/oneapibeta pytorch']
IntelAI/models,latest,/tools/docker/partials/common/text_to_speech/wavenet_pip_installs.partial.Dockerfile,RUN,1,['pip install librosa==0.5']
IntelAI/models,latest,/tools/docker/partials/ubuntu/entrypoint.partial.Dockerfile,ENV,4,"['USER_ID=0', 'USER_NAME=root', 'GROUP_ID=0', 'GROUP_NAME=root']"
IntelAI/models,latest,/tools/docker/partials/ubuntu/entrypoint.partial.Dockerfile,RUN,3,"['apt-get update &&     apt-get install --no-install-recommends --fix-missing -y gosu', 'echo \'#!/bin/bash\\nUSER_ID=$USER_ID\\nUSER_NAME=$USER_NAME\\nGROUP_ID=$GROUP_ID\\nGROUP_NAME=$GROUP_NAME\\nif [[ $GROUP_NAME != root ]]; then\\n  groupadd -r -g $GROUP_ID $GROUP_NAME\\nfi\\nif [[ $USER_NAME != root ]]; then\\n  useradd --no-log-init -r -u $USER_ID -g $GROUP_NAME -s /bin/bash -M $USER_NAME\\nfi\\nexec /usr/sbin/gosu $USER_NAME:$GROUP_NAME ""$@""\\n \'>> /tmp/entrypoint.sh', 'chmod u+x,g+x /tmp/entrypoint.sh']"
IntelAI/models,latest,/tools/docker/partials/ubuntu/entrypoint.partial.Dockerfile,ENTRYPOINT,1,"['[""/tmp/entrypoint.sh""]']"
IntelAI/models,latest,/tools/docker/partials/ubuntu/gcc-8.partial.Dockerfile,RUN,2,"['apt-get update &&     apt-get install --no-install-recommends --fix-missing -y     python3-apt     software-properties-common', 'apt-get update &&     apt-get install --no-install-recommends --fix-missing -y         gcc-8         g++-8 &&   update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 8 &&   update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 8']"
IntelAI/models,latest,/tools/docker/partials/ubuntu/tcmalloc.partial.Dockerfile,RUN,1,['apt-get install --no-install-recommends --fix-missing -y google-perftools']
IntelAI/models,latest,/tools/docker/partials/ubuntu/unzip.partial.Dockerfile,RUN,1,['apt-get install --no-install-recommends --fix-missing -y unzip']
IntelAI/models,latest,/tools/docker/partials/ubuntu/python-build.partial.Dockerfile,ARG,1,['PY_VERSION=3']
IntelAI/models,latest,/tools/docker/partials/ubuntu/python-build.partial.Dockerfile,RUN,1,['apt-get update &&     apt-get install -y --no-install-recommends --fix-missing         build-essential         python${PY_VERSION}-dev']
IntelAI/models,latest,/tools/docker/partials/ubuntu/numactl.partial.Dockerfile,RUN,1,['apt-get update &&     apt-get install -y --no-install-recommends --fix-missing numactl']
IntelAI/models,latest,/tools/docker/partials/ubuntu/kubectl-1.18.3.partial.Dockerfile,RUN,2,"['apt-get update &&     apt-get install -y --no-install-recommends --fix-missing curl', 'curl -LO https://storage.googleapis.com/kubernetes-release/release/v1.18.3/bin/linux/amd64/kubectl &&     chmod +x ./kubectl &&     mv kubectl /usr/local/bin']"
IntelAI/models,latest,/tools/docker/partials/ubuntu/openssh-7.6.partial.Dockerfile,RUN,1,['apt-get install --no-install-recommends --fix-missing -y     openssh-client     openssh-server     systemd &&     systemctl enable ssh']
IntelAI/models,latest,/tools/docker/partials/ubuntu/horovod.partial.Dockerfile,ARG,1,['HOROVOD_VERSION=87094a4']
IntelAI/models,latest,/tools/docker/partials/ubuntu/horovod.partial.Dockerfile,ENV,1,['HOROVOD_WITHOUT_MXNET=1     HOROVOD_WITHOUT_PYTORCH=1     HOROVOD_WITH_TENSORFLOW=1']
IntelAI/models,latest,/tools/docker/partials/ubuntu/horovod.partial.Dockerfile,RUN,2,"['apt-get update &&     apt-get install -y --no-install-recommends --fix-missing     cmake     git', 'pip install git+https://github.com/horovod/horovod.git@${HOROVOD_VERSION}']"
IntelAI/models,latest,/tools/docker/partials/ubuntu/tar.partial.Dockerfile,RUN,1,['apt-get install --no-install-recommends --fix-missing -y tar']
IntelAI/models,latest,/tools/docker/partials/ubuntu/ubuntu-base.partial.Dockerfile,ARG,1,['UBUNTU_VERSION']
IntelAI/models,latest,/tools/docker/partials/ubuntu/ubuntu-base.partial.Dockerfile,FROM,1,['ubuntu:${UBUNTU_VERSION}']
IntelAI/models,latest,/tools/docker/partials/ubuntu/libgl.partial.Dockerfile,RUN,1,['apt-get update &&     apt-get install --no-install-recommends --fix-missing -y         libgl1-mesa-glx         libglib2.0-0']
IntelAI/models,latest,/tools/docker/partials/ubuntu/miniconda.partial.Dockerfile,ARG,2,"['CONDA_INSTALL_PATH=/opt/conda', 'MINICONDA_VERSION=4.7.12']"
IntelAI/models,latest,/tools/docker/partials/ubuntu/miniconda.partial.Dockerfile,RUN,1,"['apt-get update &&     apt-get install --no-install-recommends --fix-missing -y         wget         ca-certificates &&     wget --quiet https://repo.anaconda.com/miniconda/Miniconda3-${MINICONDA_VERSION}-Linux-x86_64.sh -O miniconda.sh &&     bash miniconda.sh -b -p ${CONDA_INSTALL_PATH} &&     rm miniconda.sh &&     ln -s ${CONDA_INSTALL_PATH}/etc/profile.d/conda.sh /etc/profile.d/conda.sh &&     echo "". ${CONDA_INSTALL_PATH}/etc/profile.d/conda.sh"" >> ~/.bashrc &&     echo ""conda activate base"" >> ~/.bashrc']"
IntelAI/models,latest,/tools/docker/partials/ubuntu/miniconda.partial.Dockerfile,ENV,1,"['PATH=""${CONDA_INSTALL_PATH}/bin:${PATH}""']"
IntelAI/models,latest,/tools/docker/partials/ubuntu/common.partial.Dockerfile,ENV,1,['DEBIAN_FRONTEND=noninteractive']
IntelAI/models,latest,/tools/docker/partials/ubuntu/common.partial.Dockerfile,RUN,1,['apt-get update &&     apt-get install --no-install-recommends --fix-missing -y         libsm6         libxext6         python-tk &&     pip install requests']
IntelAI/models,latest,/tools/docker/partials/ubuntu/cpio.partial.Dockerfile,RUN,1,['apt-get update &&     apt-get install -y cpio']
IntelAI/models,latest,/tools/docker/partials/ubuntu/openmpi-2.1.1-8.partial.Dockerfile,RUN,1,['apt-get install --no-install-recommends --fix-missing -y     libopenmpi-dev     openmpi-bin     openmpi-common     openssh-client     openssh-server']
IntelAI/models,latest,/tools/docker/partials/ubuntu/recommendation/dlrm.partial.Dockerfile,ENV,1,['DEBIAN_FRONTEND=noninteractive']
IntelAI/models,latest,/tools/docker/partials/ubuntu/recommendation/dlrm.partial.Dockerfile,RUN,1,['apt-get -y update &&     apt-get install --no-install-recommends --fix-missing -y git &&     python -m pip install onnx &&     python -m pip install -e git+https://github.com/mlperf/logging@0.7.0-rc2#egg=logging &&     conda install -y -c intel scikit-learn &&     conda install -c conda-forge gperftools &&     conda clean -a']
IntelAI/models,latest,/tools/docker/partials/ubuntu/recommendation/pandas_install.partial.Dockerfile,ENV,1,['DEBIAN_FRONTEND=noninteractive']
IntelAI/models,latest,/tools/docker/partials/ubuntu/recommendation/pandas_install.partial.Dockerfile,RUN,1,['apt-get update &&     apt-get install --no-install-recommends --fix-missing -y         python-pandas &&     pip install pandas']
IntelAI/models,latest,/tools/docker/partials/ubuntu/image_segmentation/maskrcnn_pip_installs.partial.Dockerfile,ARG,1,['MASK_RCNN_SOURCE_DIR=/workspace/Mask_RCNN']
IntelAI/models,latest,/tools/docker/partials/ubuntu/image_segmentation/maskrcnn_pip_installs.partial.Dockerfile,ENV,1,['MODEL_SRC_DIR=${MASK_RCNN_SOURCE_DIR}']
IntelAI/models,latest,/tools/docker/partials/ubuntu/image_segmentation/maskrcnn_pip_installs.partial.Dockerfile,RUN,2,"[""pip install         IPython[all]         'Pillow>=8.1.2'         cython         h5py         imgaug         keras==2.0.8         matplotlib         numpy==1.16.3         opencv-python         pycocotools         scikit-image         scipy==1.2.0 &&     apt-get update &&     apt-get install --no-install-recommends --fix-missing -y         git         wget"", 'git clone https://github.com/matterport/Mask_RCNN.git ${MODEL_SRC_DIR} &&     ( cd ${MODEL_SRC_DIR} &&     wget https://github.com/matterport/Mask_RCNN/releases/download/v2.0/mask_rcnn_coco.h5 )']"
IntelAI/models,latest,/tools/docker/partials/ubuntu/image_segmentation/tensorflow-unet.partial.Dockerfile,ARG,3,"['TF_UNET_BRANCH', 'FETCH_PR', 'CODE_DIR=/tensorflow-unet']"
IntelAI/models,latest,/tools/docker/partials/ubuntu/image_segmentation/tensorflow-unet.partial.Dockerfile,ENV,1,['TF_UNET_DIR=${CODE_DIR}']
IntelAI/models,latest,/tools/docker/partials/ubuntu/image_segmentation/tensorflow-unet.partial.Dockerfile,RUN,1,"['apt-get update &&     apt-get install --no-install-recommends --fix-missing -y git &&     git clone https://github.com/jakeret/tf_unet.git ${CODE_DIR} &&     ( cd ${CODE_DIR} &&     if [ ! -z ""$FETCH_PR"" ]; then git fetch origin ${FETCH_PR}; fi &&     git checkout ${TF_UNET_BRANCH} )']"
IntelAI/models,latest,/tools/docker/partials/ubuntu/tensorflow/benchmarks-source.partial.Dockerfile,ARG,2,"['TF_BENCHMARKS_BRANCH', 'TF_BENCHMARKS_DIR=/tensorflow/benchmarks']"
IntelAI/models,latest,/tools/docker/partials/ubuntu/tensorflow/benchmarks-source.partial.Dockerfile,ENV,1,['TF_BENCHMARKS_DIR=${TF_BENCHMARKS_DIR}']
IntelAI/models,latest,/tools/docker/partials/ubuntu/tensorflow/benchmarks-source.partial.Dockerfile,RUN,1,['apt-get install --no-install-recommends --fix-missing -y git &&     git clone --single-branch https://github.com/tensorflow/benchmarks.git ${TF_BENCHMARKS_DIR} &&     ( cd ${TF_BENCHMARKS_DIR} &&     git checkout ${TF_BENCHMARKS_BRANCH} )']
IntelAI/models,latest,/tools/docker/partials/ubuntu/tensorflow/model-source.partial.Dockerfile,ARG,3,"['TF_MODELS_BRANCH', 'FETCH_PR', 'CODE_DIR=/tensorflow/models']"
IntelAI/models,latest,/tools/docker/partials/ubuntu/tensorflow/model-source.partial.Dockerfile,ENV,1,['TF_MODELS_DIR=${CODE_DIR}']
IntelAI/models,latest,/tools/docker/partials/ubuntu/tensorflow/model-source.partial.Dockerfile,RUN,1,"['apt-get update &&     apt-get install --no-install-recommends --fix-missing -y git &&     git clone https://github.com/tensorflow/models.git ${CODE_DIR} &&     ( cd ${CODE_DIR} &&     if [ ! -z ""${FETCH_PR}"" ]; then git fetch origin ${FETCH_PR}; fi &&     git checkout ${TF_MODELS_BRANCH} )']"
IntelAI/models,latest,/tools/docker/partials/ubuntu/object_detection/protoc.partial.Dockerfile,ARG,1,['TF_MODELS_DIR=/tensorflow/models']
IntelAI/models,latest,/tools/docker/partials/ubuntu/object_detection/protoc.partial.Dockerfile,RUN,1,['cd ${TF_MODELS_DIR}/research &&     apt-get install --no-install-recommends --fix-missing -y         unzip         wget &&     wget --quiet -O protobuf.zip https://github.com/google/protobuf/releases/download/v3.3.0/protoc-3.3.0-linux-x86_64.zip &&     unzip -o protobuf.zip &&     rm protobuf.zip &&     ./bin/protoc object_detection/protos/*.proto --python_out=. &&     apt-get remove -y         unzip         wget &&     apt-get autoremove -y']
IntelAI/models,latest,/tools/docker/partials/ubuntu/language_translation/mlperf_gnmt_tf_addons.partial.Dockerfile,RUN,3,"['apt-get update && apt-get install -y --no-install-recommends         build-essential         ca-certificates         curl         unzip         git         rsync         &&     apt-get clean &&     rm -rf /var/lib/apt/lists/*', 'mkdir /bazel &&     cd /bazel &&     curl -H ""User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/57.0.2987.133 Safari/537.36"" -fSsL -O https://github.com/bazelbuild/bazel/releases/download/$BAZEL_VERSION/bazel-$BAZEL_VERSION-installer-linux-x86_64.sh &&     curl -H ""User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/57.0.2987.133 Safari/537.36"" -fSsL -o /bazel/LICENSE.txt https://raw.githubusercontent.com/bazelbuild/bazel/master/LICENSE &&     chmod +x bazel-*.sh &&     ./bazel-$BAZEL_VERSION-installer-linux-x86_64.sh &&     cd / &&     rm -f /bazel/bazel-$BAZEL_VERSION-installer-linux-x86_64.sh', 'git clone --single-branch --branch=r0.5 https://github.com/tensorflow/addons.git &&     (cd addons &&     git apply ${MODEL_WORKSPACE}/${PACKAGE_NAME}/models/language_translation/tensorflow/mlperf_gnmt/gnmt-v0.5.2.patch &&     echo ""y"" | bash configure.sh  &&     bazel build --enable_runfiles build_pip_pkg &&     bazel-bin/build_pip_pkg artifacts &&     pip install artifacts/tensorflow_addons-*.whl --no-deps) &&     rm -rf ./addons']"
IntelAI/models,latest,/tools/docker/partials/ubuntu/language_translation/mlperf_gnmt_tf_addons.partial.Dockerfile,ENV,1,['BAZEL_VERSION 3.0.0']
IntelAI/models,latest,/tools/docker/partials/ubuntu/language_translation/mlperf_gnmt_tf_addons.partial.Dockerfile,WORKDIR,2,"['/', '${MODEL_WORKSPACE}/${PACKAGE_NAME}']"
IntelAI/models,latest,/tools/docker/partials/ubuntu/text_to_speech/tensorflow-wavenet.partial.Dockerfile,ARG,3,"['TF_WAVENET_BRANCH', 'FETCH_PR', 'CODE_DIR=/tensorflow-wavenet']"
IntelAI/models,latest,/tools/docker/partials/ubuntu/text_to_speech/tensorflow-wavenet.partial.Dockerfile,ENV,1,['TF_WAVENET_DIR=${CODE_DIR}']
IntelAI/models,latest,/tools/docker/partials/ubuntu/text_to_speech/tensorflow-wavenet.partial.Dockerfile,RUN,1,"['apt-get update &&     apt-get install --no-install-recommends --fix-missing -y git &&     git clone https://github.com/ibab/tensorflow-wavenet.git ${CODE_DIR} &&     ( cd ${CODE_DIR} &&     if [ ! -z ""$FETCH_PR"" ]; then git fetch origin ${FETCH_PR}; fi &&     git checkout ${TF_WAVENET_BRANCH} )']"
IntelAI/models,latest,/dockerfiles/intel-tf-object-detection.Dockerfile,ARG,7,"['TENSORFLOW_IMAGE=""intel/intel-optimized-tensorflow""', 'TENSORFLOW_TAG=""latest""', 'PY_VERSION=""3.8""', 'TF_MODELS_BRANCH', 'FETCH_PR', 'CODE_DIR=/tensorflow/models', 'TF_MODELS_DIR=/tensorflow/models']"
IntelAI/models,latest,/dockerfiles/intel-tf-object-detection.Dockerfile,FROM,1,['${TENSORFLOW_IMAGE}:${TENSORFLOW_TAG}']
IntelAI/models,latest,/dockerfiles/intel-tf-object-detection.Dockerfile,ENV,2,"['DEBIAN_FRONTEND=noninteractive', 'TF_MODELS_DIR=${CODE_DIR}']"
IntelAI/models,latest,/dockerfiles/intel-tf-object-detection.Dockerfile,RUN,5,"['apt-get update &&     apt-get install --no-install-recommends --fix-missing -y         libsm6         libxext6         python-tk &&     pip install requests', 'apt-get update &&     apt-get install -y --no-install-recommends --fix-missing         build-essential         python${PY_VERSION}-dev', 'apt-get update &&     apt-get install --no-install-recommends --fix-missing -y git &&     git clone https://github.com/tensorflow/models.git ${CODE_DIR} &&     ( cd ${CODE_DIR} &&     if [ ! -z ""${FETCH_PR}"" ]; then git fetch origin ${FETCH_PR}; fi &&     git checkout ${TF_MODELS_BRANCH} )', ""pip install         Cython         contextlib2         jupyter         lxml         matplotlib         numpy>=1.17.4         'pillow>=8.1.2' &&     pip install pycocotools"", 'cd ${TF_MODELS_DIR}/research &&     apt-get install --no-install-recommends --fix-missing -y         unzip         wget &&     wget --quiet -O protobuf.zip https://github.com/google/protobuf/releases/download/v3.3.0/protoc-3.3.0-linux-x86_64.zip &&     unzip -o protobuf.zip &&     rm protobuf.zip &&     ./bin/protoc object_detection/protos/*.proto --python_out=. &&     apt-get remove -y         unzip         wget &&     apt-get autoremove -y']"
IntelAI/models,latest,/dockerfiles/intel-tf-language-modeling.Dockerfile,ARG,2,"['TENSORFLOW_IMAGE=""intel/intel-optimized-tensorflow""', 'TENSORFLOW_TAG=""latest""']"
IntelAI/models,latest,/dockerfiles/intel-tf-language-modeling.Dockerfile,FROM,1,['${TENSORFLOW_IMAGE}:${TENSORFLOW_TAG}']
IntelAI/models,latest,/dockerfiles/intel-tf-language-modeling.Dockerfile,ENV,1,['DEBIAN_FRONTEND=noninteractive']
IntelAI/models,latest,/dockerfiles/intel-tf-language-modeling.Dockerfile,RUN,1,['apt-get update &&     apt-get install --no-install-recommends --fix-missing -y         libsm6         libxext6         python-tk &&     pip install requests']
IntelAI/models,latest,/dockerfiles/intel-tf-language-translation.Dockerfile,ARG,2,"['TENSORFLOW_IMAGE=""intel/intel-optimized-tensorflow""', 'TENSORFLOW_TAG=""latest""']"
IntelAI/models,latest,/dockerfiles/intel-tf-language-translation.Dockerfile,FROM,1,['${TENSORFLOW_IMAGE}:${TENSORFLOW_TAG}']
IntelAI/models,latest,/dockerfiles/intel-tf-language-translation.Dockerfile,ENV,1,['DEBIAN_FRONTEND=noninteractive']
IntelAI/models,latest,/dockerfiles/intel-tf-language-translation.Dockerfile,RUN,1,['apt-get update &&     apt-get install --no-install-recommends --fix-missing -y         libsm6         libxext6         python-tk &&     pip install requests']
IntelAI/models,latest,/dockerfiles/intel-tf-image-recognition.Dockerfile,ARG,2,"['TENSORFLOW_IMAGE=""intel/intel-optimized-tensorflow""', 'TENSORFLOW_TAG=""latest""']"
IntelAI/models,latest,/dockerfiles/intel-tf-image-recognition.Dockerfile,FROM,1,['${TENSORFLOW_IMAGE}:${TENSORFLOW_TAG}']
IntelAI/models,latest,/dockerfiles/intel-tf-image-recognition.Dockerfile,ENV,1,['DEBIAN_FRONTEND=noninteractive']
IntelAI/models,latest,/dockerfiles/intel-tf-image-recognition.Dockerfile,RUN,1,['apt-get update &&     apt-get install --no-install-recommends --fix-missing -y         libsm6         libxext6         python-tk &&     pip install requests']
IntelAI/models,latest,/dockerfiles/lpot/tensorflow/intel-tf-lpot.Dockerfile,ARG,5,"['TENSORFLOW_IMAGE=""intel/intel-optimized-tensorflow""', 'TENSORFLOW_TAG=""2.5.0-ubuntu-20.04""', 'PY_VERSION=""3.8""', 'LPOT_SOURCE_DIR=/src/lpot', 'LPOT_BRANCH=master']"
IntelAI/models,latest,/dockerfiles/lpot/tensorflow/intel-tf-lpot.Dockerfile,FROM,1,['${TENSORFLOW_IMAGE}:${TENSORFLOW_TAG}']
IntelAI/models,latest,/dockerfiles/lpot/tensorflow/intel-tf-lpot.Dockerfile,RUN,3,"['apt-get update &&     apt-get install -y --no-install-recommends --fix-missing         build-essential         python${PY_VERSION}-dev', 'pip install lpot', 'apt-get update &&     apt-get install --no-install-recommends --fix-missing -y git &&     git clone --single-branch --branch ${LPOT_BRANCH} https://github.com/intel/lpot.git ${LPOT_SOURCE_DIR}']"
IntelAI/models,latest,/dockerfiles/lpot/tensorflow/intel-tf-lpot.Dockerfile,ENV,1,['LPOT_SOURCE_DIR=$LPOT_SOURCE_DIR']
IntelAI/models,latest,/dockerfiles/lpot/tensorflow/intel-tf-lpot.Dockerfile,WORKDIR,1,['${LPOT_SOURCE_DIR}']
IntelAI/models,latest,/dockerfiles/lpot/tensorflow/intel-tf-lpot-inceptionv3.Dockerfile,ARG,5,"['TENSORFLOW_IMAGE=""intel/intel-optimized-tensorflow""', 'TENSORFLOW_TAG=""2.5.0-ubuntu-20.04""', 'PY_VERSION=""3.8""', 'LPOT_SOURCE_DIR=/src/lpot', 'LPOT_BRANCH=master']"
IntelAI/models,latest,/dockerfiles/lpot/tensorflow/intel-tf-lpot-inceptionv3.Dockerfile,FROM,1,['${TENSORFLOW_IMAGE}:${TENSORFLOW_TAG}']
IntelAI/models,latest,/dockerfiles/lpot/tensorflow/intel-tf-lpot-inceptionv3.Dockerfile,RUN,5,"['apt-get update &&     apt-get install -y --no-install-recommends --fix-missing         build-essential         python${PY_VERSION}-dev', 'pip install lpot', 'apt-get update &&     apt-get install --no-install-recommends --fix-missing -y git &&     git clone --single-branch --branch ${LPOT_BRANCH} https://github.com/intel/lpot.git ${LPOT_SOURCE_DIR}', 'apt-get install --no-install-recommends --fix-missing -y wget', 'wget https://storage.googleapis.com/intel-optimized-tensorflow/models/v1_6/inceptionv3_fp32_pretrained_model.pb']"
IntelAI/models,latest,/dockerfiles/lpot/tensorflow/intel-tf-lpot-inceptionv3.Dockerfile,ENV,2,"['LPOT_SOURCE_DIR=$LPOT_SOURCE_DIR', 'PRETRAINED_MODEL=${PWD}/inceptionv3_fp32_pretrained_model.pb']"
IntelAI/models,latest,/dockerfiles/lpot/tensorflow/intel-tf-lpot-inceptionv3.Dockerfile,WORKDIR,2,"['${LPOT_SOURCE_DIR}', '${LPOT_SOURCE_DIR}/examples/tensorflow/image_recognition']"
IntelAI/models,latest,/dockerfiles/dataset_containers/intel-tf-object-detection-preprocess-coco-val.Dockerfile,ARG,10,"['TENSORFLOW_IMAGE=""intel/intel-optimized-tensorflow""', 'TENSORFLOW_TAG=""1.15.2""', 'PY_VERSION=""3.8""', 'TF_MODELS_BRANCH=""1efe98bb8e8d98bbffc703a90d88df15fc2ce906""', 'FETCH_PR', 'CODE_DIR=/tensorflow/models', 'TF_MODELS_DIR=/tensorflow/models', 'PACKAGE_DIR=model_packages', 'PACKAGE_NAME=""preprocess-coco-val""', 'MODEL_WORKSPACE']"
IntelAI/models,latest,/dockerfiles/dataset_containers/intel-tf-object-detection-preprocess-coco-val.Dockerfile,FROM,1,['${TENSORFLOW_IMAGE}:${TENSORFLOW_TAG}']
IntelAI/models,latest,/dockerfiles/dataset_containers/intel-tf-object-detection-preprocess-coco-val.Dockerfile,ENV,6,"['DEBIAN_FRONTEND=noninteractive', 'TF_MODELS_DIR=${CODE_DIR}', 'USER_ID=0', 'USER_NAME=root', 'GROUP_ID=0', 'GROUP_NAME=root']"
IntelAI/models,latest,/dockerfiles/dataset_containers/intel-tf-object-detection-preprocess-coco-val.Dockerfile,RUN,10,"['apt-get update &&     apt-get install --no-install-recommends --fix-missing -y         libsm6         libxext6         python-tk &&     pip install requests', 'apt-get update &&     apt-get install -y --no-install-recommends --fix-missing         build-essential         python${PY_VERSION}-dev', 'apt-get update &&     apt-get install --no-install-recommends --fix-missing -y git &&     git clone https://github.com/tensorflow/models.git ${CODE_DIR} &&     ( cd ${CODE_DIR} &&     if [ ! -z ""${FETCH_PR}"" ]; then git fetch origin ${FETCH_PR}; fi &&     git checkout ${TF_MODELS_BRANCH} )', ""pip install         Cython         contextlib2         jupyter         lxml         matplotlib         numpy>=1.17.4         'pillow>=8.1.2' &&     pip install pycocotools"", 'cd ${TF_MODELS_DIR}/research &&     apt-get install --no-install-recommends --fix-missing -y         unzip         wget &&     wget --quiet -O protobuf.zip https://github.com/google/protobuf/releases/download/v3.3.0/protoc-3.3.0-linux-x86_64.zip &&     unzip -o protobuf.zip &&     rm protobuf.zip &&     ./bin/protoc object_detection/protos/*.proto --python_out=. &&     apt-get remove -y         unzip         wget &&     apt-get autoremove -y', 'umask 002 && mkdir -p ${MODEL_WORKSPACE} && chgrp root ${MODEL_WORKSPACE} && chmod g+s+w,o+s+r ${MODEL_WORKSPACE}', 'chown -R root ${MODEL_WORKSPACE}/${PACKAGE_NAME} && chgrp -R root ${MODEL_WORKSPACE}/${PACKAGE_NAME} && chmod -R g+s+w ${MODEL_WORKSPACE}/${PACKAGE_NAME} && find ${MODEL_WORKSPACE}/${PACKAGE_NAME} -type d | xargs chmod o+r+x', 'apt-get update &&     apt-get install --no-install-recommends --fix-missing -y gosu', 'echo \'#!/bin/bash\\nUSER_ID=$USER_ID\\nUSER_NAME=$USER_NAME\\nGROUP_ID=$GROUP_ID\\nGROUP_NAME=$GROUP_NAME\\nif [[ $GROUP_NAME != root ]]; then\\n  groupadd -r -g $GROUP_ID $GROUP_NAME\\nfi\\nif [[ $USER_NAME != root ]]; then\\n  useradd --no-log-init -r -u $USER_ID -g $GROUP_NAME -s /bin/bash -M $USER_NAME\\nfi\\nexec /usr/sbin/gosu $USER_NAME:$GROUP_NAME ""$@""\\n \'>> /tmp/entrypoint.sh', 'chmod u+x,g+x /tmp/entrypoint.sh']"
IntelAI/models,latest,/dockerfiles/dataset_containers/intel-tf-object-detection-preprocess-coco-val.Dockerfile,ADD,1,['--chown=0:0 ${PACKAGE_DIR}/${PACKAGE_NAME}.tar.gz ${MODEL_WORKSPACE}']
IntelAI/models,latest,/dockerfiles/dataset_containers/intel-tf-object-detection-preprocess-coco-val.Dockerfile,WORKDIR,1,['${MODEL_WORKSPACE}/${PACKAGE_NAME}']
IntelAI/models,latest,/dockerfiles/dataset_containers/intel-tf-object-detection-preprocess-coco-val.Dockerfile,CMD,1,['scripts/preprocess_coco_val.sh']
IntelAI/models,latest,/dockerfiles/dataset_containers/intel-tf-object-detection-preprocess-coco-val.Dockerfile,ENTRYPOINT,1,"['[""/tmp/entrypoint.sh""]']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-image-segmentation-unet-fp32-inference.Dockerfile,ARG,8,"['TENSORFLOW_IMAGE=""intel/intel-optimized-tensorflow""', 'TENSORFLOW_TAG=""1.15.2""', 'TF_UNET_BRANCH=""cpu_optimized""', 'FETCH_PR=""pull/276/head:cpu_optimized""', 'CODE_DIR=/tensorflow-unet', 'PACKAGE_DIR=model_packages', 'PACKAGE_NAME=""unet-fp32-inference""', 'MODEL_WORKSPACE']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-image-segmentation-unet-fp32-inference.Dockerfile,FROM,1,['${TENSORFLOW_IMAGE}:${TENSORFLOW_TAG}']
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-image-segmentation-unet-fp32-inference.Dockerfile,ENV,6,"['DEBIAN_FRONTEND=noninteractive', 'TF_UNET_DIR=${CODE_DIR}', 'USER_ID=0', 'USER_NAME=root', 'GROUP_ID=0', 'GROUP_NAME=root']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-image-segmentation-unet-fp32-inference.Dockerfile,RUN,9,"['apt-get update &&     apt-get install --no-install-recommends --fix-missing -y         libsm6         libxext6         python-tk &&     pip install requests', 'apt-get update &&     apt-get install --no-install-recommends --fix-missing -y git &&     git clone https://github.com/jakeret/tf_unet.git ${CODE_DIR} &&     ( cd ${CODE_DIR} &&     if [ ! -z ""$FETCH_PR"" ]; then git fetch origin ${FETCH_PR}; fi &&     git checkout ${TF_UNET_BRANCH} )', ""pip install         'Pillow>=8.1.2'         click         matplotlib         numpy==1.16.3"", 'umask 002 && mkdir -p ${MODEL_WORKSPACE} && chgrp root ${MODEL_WORKSPACE} && chmod g+s+w,o+s+r ${MODEL_WORKSPACE}', 'chown -R root ${MODEL_WORKSPACE}/${PACKAGE_NAME} && chgrp -R root ${MODEL_WORKSPACE}/${PACKAGE_NAME} && chmod -R g+s+w ${MODEL_WORKSPACE}/${PACKAGE_NAME} && find ${MODEL_WORKSPACE}/${PACKAGE_NAME} -type d | xargs chmod o+r+x', 'apt-get update &&     apt-get install --no-install-recommends --fix-missing -y gosu', 'echo \'#!/bin/bash\\nUSER_ID=$USER_ID\\nUSER_NAME=$USER_NAME\\nGROUP_ID=$GROUP_ID\\nGROUP_NAME=$GROUP_NAME\\nif [[ $GROUP_NAME != root ]]; then\\n  groupadd -r -g $GROUP_ID $GROUP_NAME\\nfi\\nif [[ $USER_NAME != root ]]; then\\n  useradd --no-log-init -r -u $USER_ID -g $GROUP_NAME -s /bin/bash -M $USER_NAME\\nfi\\nexec /usr/sbin/gosu $USER_NAME:$GROUP_NAME ""$@""\\n \'>> /tmp/entrypoint.sh', 'chmod u+x,g+x /tmp/entrypoint.sh', 'apt-get install --no-install-recommends --fix-missing -y tar']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-image-segmentation-unet-fp32-inference.Dockerfile,ADD,1,['--chown=0:0 ${PACKAGE_DIR}/${PACKAGE_NAME}.tar.gz ${MODEL_WORKSPACE}']
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-image-segmentation-unet-fp32-inference.Dockerfile,WORKDIR,1,['${MODEL_WORKSPACE}/${PACKAGE_NAME}']
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-image-segmentation-unet-fp32-inference.Dockerfile,ENTRYPOINT,1,"['[""/tmp/entrypoint.sh""]']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-image-recognition-inceptionv3-fp32-inference.Dockerfile,ARG,5,"['TENSORFLOW_IMAGE=""intel/intel-optimized-tensorflow""', 'TENSORFLOW_TAG=""latest""', 'PACKAGE_DIR=model_packages', 'PACKAGE_NAME=""inceptionv3-fp32-inference""', 'MODEL_WORKSPACE']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-image-recognition-inceptionv3-fp32-inference.Dockerfile,FROM,1,['${TENSORFLOW_IMAGE}:${TENSORFLOW_TAG}']
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-image-recognition-inceptionv3-fp32-inference.Dockerfile,ENV,5,"['DEBIAN_FRONTEND=noninteractive', 'USER_ID=0', 'USER_NAME=root', 'GROUP_ID=0', 'GROUP_NAME=root']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-image-recognition-inceptionv3-fp32-inference.Dockerfile,RUN,6,"['apt-get update &&     apt-get install --no-install-recommends --fix-missing -y         libsm6         libxext6         python-tk &&     pip install requests', 'umask 002 && mkdir -p ${MODEL_WORKSPACE} && chgrp root ${MODEL_WORKSPACE} && chmod g+s+w,o+s+r ${MODEL_WORKSPACE}', 'chown -R root ${MODEL_WORKSPACE}/${PACKAGE_NAME} && chgrp -R root ${MODEL_WORKSPACE}/${PACKAGE_NAME} && chmod -R g+s+w ${MODEL_WORKSPACE}/${PACKAGE_NAME} && find ${MODEL_WORKSPACE}/${PACKAGE_NAME} -type d | xargs chmod o+r+x', 'apt-get update &&     apt-get install --no-install-recommends --fix-missing -y gosu', 'echo \'#!/bin/bash\\nUSER_ID=$USER_ID\\nUSER_NAME=$USER_NAME\\nGROUP_ID=$GROUP_ID\\nGROUP_NAME=$GROUP_NAME\\nif [[ $GROUP_NAME != root ]]; then\\n  groupadd -r -g $GROUP_ID $GROUP_NAME\\nfi\\nif [[ $USER_NAME != root ]]; then\\n  useradd --no-log-init -r -u $USER_ID -g $GROUP_NAME -s /bin/bash -M $USER_NAME\\nfi\\nexec /usr/sbin/gosu $USER_NAME:$GROUP_NAME ""$@""\\n \'>> /tmp/entrypoint.sh', 'chmod u+x,g+x /tmp/entrypoint.sh']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-image-recognition-inceptionv3-fp32-inference.Dockerfile,ADD,1,['--chown=0:0 ${PACKAGE_DIR}/${PACKAGE_NAME}.tar.gz ${MODEL_WORKSPACE}']
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-image-recognition-inceptionv3-fp32-inference.Dockerfile,WORKDIR,1,['${MODEL_WORKSPACE}/${PACKAGE_NAME}']
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-image-recognition-inceptionv3-fp32-inference.Dockerfile,ENTRYPOINT,1,"['[""/tmp/entrypoint.sh""]']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-image-recognition-inceptionv4-int8-inference.Dockerfile,ARG,5,"['TENSORFLOW_IMAGE=""intel/intel-optimized-tensorflow""', 'TENSORFLOW_TAG=""latest""', 'PACKAGE_DIR=model_packages', 'PACKAGE_NAME=""inceptionv4-int8-inference""', 'MODEL_WORKSPACE']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-image-recognition-inceptionv4-int8-inference.Dockerfile,FROM,1,['${TENSORFLOW_IMAGE}:${TENSORFLOW_TAG}']
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-image-recognition-inceptionv4-int8-inference.Dockerfile,ENV,5,"['DEBIAN_FRONTEND=noninteractive', 'USER_ID=0', 'USER_NAME=root', 'GROUP_ID=0', 'GROUP_NAME=root']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-image-recognition-inceptionv4-int8-inference.Dockerfile,RUN,6,"['apt-get update &&     apt-get install --no-install-recommends --fix-missing -y         libsm6         libxext6         python-tk &&     pip install requests', 'umask 002 && mkdir -p ${MODEL_WORKSPACE} && chgrp root ${MODEL_WORKSPACE} && chmod g+s+w,o+s+r ${MODEL_WORKSPACE}', 'chown -R root ${MODEL_WORKSPACE}/${PACKAGE_NAME} && chgrp -R root ${MODEL_WORKSPACE}/${PACKAGE_NAME} && chmod -R g+s+w ${MODEL_WORKSPACE}/${PACKAGE_NAME} && find ${MODEL_WORKSPACE}/${PACKAGE_NAME} -type d | xargs chmod o+r+x', 'apt-get update &&     apt-get install --no-install-recommends --fix-missing -y gosu', 'echo \'#!/bin/bash\\nUSER_ID=$USER_ID\\nUSER_NAME=$USER_NAME\\nGROUP_ID=$GROUP_ID\\nGROUP_NAME=$GROUP_NAME\\nif [[ $GROUP_NAME != root ]]; then\\n  groupadd -r -g $GROUP_ID $GROUP_NAME\\nfi\\nif [[ $USER_NAME != root ]]; then\\n  useradd --no-log-init -r -u $USER_ID -g $GROUP_NAME -s /bin/bash -M $USER_NAME\\nfi\\nexec /usr/sbin/gosu $USER_NAME:$GROUP_NAME ""$@""\\n \'>> /tmp/entrypoint.sh', 'chmod u+x,g+x /tmp/entrypoint.sh']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-image-recognition-inceptionv4-int8-inference.Dockerfile,ADD,1,['--chown=0:0 ${PACKAGE_DIR}/${PACKAGE_NAME}.tar.gz ${MODEL_WORKSPACE}']
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-image-recognition-inceptionv4-int8-inference.Dockerfile,WORKDIR,1,['${MODEL_WORKSPACE}/${PACKAGE_NAME}']
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-image-recognition-inceptionv4-int8-inference.Dockerfile,ENTRYPOINT,1,"['[""/tmp/entrypoint.sh""]']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-image-recognition-densenet169-fp32-inference.Dockerfile,ARG,5,"['TENSORFLOW_IMAGE=""intel/intel-optimized-tensorflow""', 'TENSORFLOW_TAG=""latest""', 'PACKAGE_DIR=model_packages', 'PACKAGE_NAME=""densenet169-fp32-inference""', 'MODEL_WORKSPACE']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-image-recognition-densenet169-fp32-inference.Dockerfile,FROM,1,['${TENSORFLOW_IMAGE}:${TENSORFLOW_TAG}']
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-image-recognition-densenet169-fp32-inference.Dockerfile,ENV,5,"['DEBIAN_FRONTEND=noninteractive', 'USER_ID=0', 'USER_NAME=root', 'GROUP_ID=0', 'GROUP_NAME=root']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-image-recognition-densenet169-fp32-inference.Dockerfile,RUN,6,"['apt-get update &&     apt-get install --no-install-recommends --fix-missing -y         libsm6         libxext6         python-tk &&     pip install requests', 'umask 002 && mkdir -p ${MODEL_WORKSPACE} && chgrp root ${MODEL_WORKSPACE} && chmod g+s+w,o+s+r ${MODEL_WORKSPACE}', 'chown -R root ${MODEL_WORKSPACE}/${PACKAGE_NAME} && chgrp -R root ${MODEL_WORKSPACE}/${PACKAGE_NAME} && chmod -R g+s+w ${MODEL_WORKSPACE}/${PACKAGE_NAME} && find ${MODEL_WORKSPACE}/${PACKAGE_NAME} -type d | xargs chmod o+r+x', 'apt-get update &&     apt-get install --no-install-recommends --fix-missing -y gosu', 'echo \'#!/bin/bash\\nUSER_ID=$USER_ID\\nUSER_NAME=$USER_NAME\\nGROUP_ID=$GROUP_ID\\nGROUP_NAME=$GROUP_NAME\\nif [[ $GROUP_NAME != root ]]; then\\n  groupadd -r -g $GROUP_ID $GROUP_NAME\\nfi\\nif [[ $USER_NAME != root ]]; then\\n  useradd --no-log-init -r -u $USER_ID -g $GROUP_NAME -s /bin/bash -M $USER_NAME\\nfi\\nexec /usr/sbin/gosu $USER_NAME:$GROUP_NAME ""$@""\\n \'>> /tmp/entrypoint.sh', 'chmod u+x,g+x /tmp/entrypoint.sh']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-image-recognition-densenet169-fp32-inference.Dockerfile,ADD,1,['--chown=0:0 ${PACKAGE_DIR}/${PACKAGE_NAME}.tar.gz ${MODEL_WORKSPACE}']
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-image-recognition-densenet169-fp32-inference.Dockerfile,WORKDIR,1,['${MODEL_WORKSPACE}/${PACKAGE_NAME}']
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-image-recognition-densenet169-fp32-inference.Dockerfile,ENTRYPOINT,1,"['[""/tmp/entrypoint.sh""]']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-image-segmentation-3d-unet-fp32-inference.Dockerfile,ARG,5,"['TENSORFLOW_IMAGE=""intel/intel-optimized-tensorflow""', 'TENSORFLOW_TAG=""1.15.2""', 'PACKAGE_DIR=model_packages', 'PACKAGE_NAME=""3d-unet-fp32-inference""', 'MODEL_WORKSPACE']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-image-segmentation-3d-unet-fp32-inference.Dockerfile,FROM,1,['${TENSORFLOW_IMAGE}:${TENSORFLOW_TAG}']
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-image-segmentation-3d-unet-fp32-inference.Dockerfile,ENV,5,"['DEBIAN_FRONTEND=noninteractive', 'USER_ID=0', 'USER_NAME=root', 'GROUP_ID=0', 'GROUP_NAME=root']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-image-segmentation-3d-unet-fp32-inference.Dockerfile,RUN,7,"['apt-get update &&     apt-get install --no-install-recommends --fix-missing -y         libsm6         libxext6         python-tk &&     pip install requests', 'umask 002 && mkdir -p ${MODEL_WORKSPACE} && chgrp root ${MODEL_WORKSPACE} && chmod g+s+w,o+s+r ${MODEL_WORKSPACE}', 'chown -R root ${MODEL_WORKSPACE}/${PACKAGE_NAME} && chgrp -R root ${MODEL_WORKSPACE}/${PACKAGE_NAME} && chmod -R g+s+w ${MODEL_WORKSPACE}/${PACKAGE_NAME} && find ${MODEL_WORKSPACE}/${PACKAGE_NAME} -type d | xargs chmod o+r+x', 'pip install         Keras==2.6.0rc3         SimpleITK==1.2.0         nibabel==2.3.3         nilearn==0.6.2         numpy==1.16.3         tables==3.4.4', 'apt-get update &&     apt-get install --no-install-recommends --fix-missing -y gosu', 'echo \'#!/bin/bash\\nUSER_ID=$USER_ID\\nUSER_NAME=$USER_NAME\\nGROUP_ID=$GROUP_ID\\nGROUP_NAME=$GROUP_NAME\\nif [[ $GROUP_NAME != root ]]; then\\n  groupadd -r -g $GROUP_ID $GROUP_NAME\\nfi\\nif [[ $USER_NAME != root ]]; then\\n  useradd --no-log-init -r -u $USER_ID -g $GROUP_NAME -s /bin/bash -M $USER_NAME\\nfi\\nexec /usr/sbin/gosu $USER_NAME:$GROUP_NAME ""$@""\\n \'>> /tmp/entrypoint.sh', 'chmod u+x,g+x /tmp/entrypoint.sh']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-image-segmentation-3d-unet-fp32-inference.Dockerfile,ADD,1,['--chown=0:0 ${PACKAGE_DIR}/${PACKAGE_NAME}.tar.gz ${MODEL_WORKSPACE}']
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-image-segmentation-3d-unet-fp32-inference.Dockerfile,WORKDIR,1,['${MODEL_WORKSPACE}/${PACKAGE_NAME}']
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-image-segmentation-3d-unet-fp32-inference.Dockerfile,ENTRYPOINT,1,"['[""/tmp/entrypoint.sh""]']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-image-recognition-inceptionv3-int8-inference.Dockerfile,ARG,5,"['TENSORFLOW_IMAGE=""intel/intel-optimized-tensorflow""', 'TENSORFLOW_TAG=""latest""', 'PACKAGE_DIR=model_packages', 'PACKAGE_NAME=""inceptionv3-int8-inference""', 'MODEL_WORKSPACE']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-image-recognition-inceptionv3-int8-inference.Dockerfile,FROM,1,['${TENSORFLOW_IMAGE}:${TENSORFLOW_TAG}']
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-image-recognition-inceptionv3-int8-inference.Dockerfile,ENV,5,"['DEBIAN_FRONTEND=noninteractive', 'USER_ID=0', 'USER_NAME=root', 'GROUP_ID=0', 'GROUP_NAME=root']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-image-recognition-inceptionv3-int8-inference.Dockerfile,RUN,6,"['apt-get update &&     apt-get install --no-install-recommends --fix-missing -y         libsm6         libxext6         python-tk &&     pip install requests', 'umask 002 && mkdir -p ${MODEL_WORKSPACE} && chgrp root ${MODEL_WORKSPACE} && chmod g+s+w,o+s+r ${MODEL_WORKSPACE}', 'chown -R root ${MODEL_WORKSPACE}/${PACKAGE_NAME} && chgrp -R root ${MODEL_WORKSPACE}/${PACKAGE_NAME} && chmod -R g+s+w ${MODEL_WORKSPACE}/${PACKAGE_NAME} && find ${MODEL_WORKSPACE}/${PACKAGE_NAME} -type d | xargs chmod o+r+x', 'apt-get update &&     apt-get install --no-install-recommends --fix-missing -y gosu', 'echo \'#!/bin/bash\\nUSER_ID=$USER_ID\\nUSER_NAME=$USER_NAME\\nGROUP_ID=$GROUP_ID\\nGROUP_NAME=$GROUP_NAME\\nif [[ $GROUP_NAME != root ]]; then\\n  groupadd -r -g $GROUP_ID $GROUP_NAME\\nfi\\nif [[ $USER_NAME != root ]]; then\\n  useradd --no-log-init -r -u $USER_ID -g $GROUP_NAME -s /bin/bash -M $USER_NAME\\nfi\\nexec /usr/sbin/gosu $USER_NAME:$GROUP_NAME ""$@""\\n \'>> /tmp/entrypoint.sh', 'chmod u+x,g+x /tmp/entrypoint.sh']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-image-recognition-inceptionv3-int8-inference.Dockerfile,ADD,1,['--chown=0:0 ${PACKAGE_DIR}/${PACKAGE_NAME}.tar.gz ${MODEL_WORKSPACE}']
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-image-recognition-inceptionv3-int8-inference.Dockerfile,WORKDIR,1,['${MODEL_WORKSPACE}/${PACKAGE_NAME}']
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-image-recognition-inceptionv3-int8-inference.Dockerfile,ENTRYPOINT,1,"['[""/tmp/entrypoint.sh""]']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-image-recognition-inceptionv4-fp32-inference.Dockerfile,ARG,5,"['TENSORFLOW_IMAGE=""intel/intel-optimized-tensorflow""', 'TENSORFLOW_TAG=""latest""', 'PACKAGE_DIR=model_packages', 'PACKAGE_NAME=""inceptionv4-fp32-inference""', 'MODEL_WORKSPACE']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-image-recognition-inceptionv4-fp32-inference.Dockerfile,FROM,1,['${TENSORFLOW_IMAGE}:${TENSORFLOW_TAG}']
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-image-recognition-inceptionv4-fp32-inference.Dockerfile,ENV,5,"['DEBIAN_FRONTEND=noninteractive', 'USER_ID=0', 'USER_NAME=root', 'GROUP_ID=0', 'GROUP_NAME=root']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-image-recognition-inceptionv4-fp32-inference.Dockerfile,RUN,6,"['apt-get update &&     apt-get install --no-install-recommends --fix-missing -y         libsm6         libxext6         python-tk &&     pip install requests', 'umask 002 && mkdir -p ${MODEL_WORKSPACE} && chgrp root ${MODEL_WORKSPACE} && chmod g+s+w,o+s+r ${MODEL_WORKSPACE}', 'chown -R root ${MODEL_WORKSPACE}/${PACKAGE_NAME} && chgrp -R root ${MODEL_WORKSPACE}/${PACKAGE_NAME} && chmod -R g+s+w ${MODEL_WORKSPACE}/${PACKAGE_NAME} && find ${MODEL_WORKSPACE}/${PACKAGE_NAME} -type d | xargs chmod o+r+x', 'apt-get update &&     apt-get install --no-install-recommends --fix-missing -y gosu', 'echo \'#!/bin/bash\\nUSER_ID=$USER_ID\\nUSER_NAME=$USER_NAME\\nGROUP_ID=$GROUP_ID\\nGROUP_NAME=$GROUP_NAME\\nif [[ $GROUP_NAME != root ]]; then\\n  groupadd -r -g $GROUP_ID $GROUP_NAME\\nfi\\nif [[ $USER_NAME != root ]]; then\\n  useradd --no-log-init -r -u $USER_ID -g $GROUP_NAME -s /bin/bash -M $USER_NAME\\nfi\\nexec /usr/sbin/gosu $USER_NAME:$GROUP_NAME ""$@""\\n \'>> /tmp/entrypoint.sh', 'chmod u+x,g+x /tmp/entrypoint.sh']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-image-recognition-inceptionv4-fp32-inference.Dockerfile,ADD,1,['--chown=0:0 ${PACKAGE_DIR}/${PACKAGE_NAME}.tar.gz ${MODEL_WORKSPACE}']
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-image-recognition-inceptionv4-fp32-inference.Dockerfile,WORKDIR,1,['${MODEL_WORKSPACE}/${PACKAGE_NAME}']
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-image-recognition-inceptionv4-fp32-inference.Dockerfile,ENTRYPOINT,1,"['[""/tmp/entrypoint.sh""]']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-recommendation-wide-deep-fp32-inference.Dockerfile,ARG,8,"['TENSORFLOW_IMAGE=""intel/intel-optimized-tensorflow""', 'TENSORFLOW_TAG=""latest""', 'TF_MODELS_BRANCH=""wide-deep-tf2""', 'FETCH_PR=""pull/7461/head:wide-deep-tf2""', 'CODE_DIR=/tensorflow/models', 'PACKAGE_DIR=model_packages', 'PACKAGE_NAME=""wide-deep-fp32-inference""', 'MODEL_WORKSPACE']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-recommendation-wide-deep-fp32-inference.Dockerfile,FROM,1,['${TENSORFLOW_IMAGE}:${TENSORFLOW_TAG}']
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-recommendation-wide-deep-fp32-inference.Dockerfile,ENV,6,"['DEBIAN_FRONTEND=noninteractive', 'TF_MODELS_DIR=${CODE_DIR}', 'USER_ID=0', 'USER_NAME=root', 'GROUP_ID=0', 'GROUP_NAME=root']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-recommendation-wide-deep-fp32-inference.Dockerfile,RUN,8,"['apt-get update &&     apt-get install --no-install-recommends --fix-missing -y         libsm6         libxext6         python-tk &&     pip install requests', 'apt-get update &&     apt-get install --no-install-recommends --fix-missing -y git &&     git clone https://github.com/tensorflow/models.git ${CODE_DIR} &&     ( cd ${CODE_DIR} &&     if [ ! -z ""${FETCH_PR}"" ]; then git fetch origin ${FETCH_PR}; fi &&     git checkout ${TF_MODELS_BRANCH} )', 'umask 002 && mkdir -p ${MODEL_WORKSPACE} && chgrp root ${MODEL_WORKSPACE} && chmod g+s+w,o+s+r ${MODEL_WORKSPACE}', 'chown -R root ${MODEL_WORKSPACE}/${PACKAGE_NAME} && chgrp -R root ${MODEL_WORKSPACE}/${PACKAGE_NAME} && chmod -R g+s+w ${MODEL_WORKSPACE}/${PACKAGE_NAME} && find ${MODEL_WORKSPACE}/${PACKAGE_NAME} -type d | xargs chmod o+r+x', 'apt-get install --no-install-recommends --fix-missing -y tar', 'apt-get update &&     apt-get install --no-install-recommends --fix-missing -y gosu', 'echo \'#!/bin/bash\\nUSER_ID=$USER_ID\\nUSER_NAME=$USER_NAME\\nGROUP_ID=$GROUP_ID\\nGROUP_NAME=$GROUP_NAME\\nif [[ $GROUP_NAME != root ]]; then\\n  groupadd -r -g $GROUP_ID $GROUP_NAME\\nfi\\nif [[ $USER_NAME != root ]]; then\\n  useradd --no-log-init -r -u $USER_ID -g $GROUP_NAME -s /bin/bash -M $USER_NAME\\nfi\\nexec /usr/sbin/gosu $USER_NAME:$GROUP_NAME ""$@""\\n \'>> /tmp/entrypoint.sh', 'chmod u+x,g+x /tmp/entrypoint.sh']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-recommendation-wide-deep-fp32-inference.Dockerfile,ADD,1,['--chown=0:0 ${PACKAGE_DIR}/${PACKAGE_NAME}.tar.gz ${MODEL_WORKSPACE}']
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-recommendation-wide-deep-fp32-inference.Dockerfile,WORKDIR,1,['${MODEL_WORKSPACE}/${PACKAGE_NAME}']
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-recommendation-wide-deep-fp32-inference.Dockerfile,ENTRYPOINT,1,"['[""/tmp/entrypoint.sh""]']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-object-detection-faster-rcnn-fp32-inference.Dockerfile,ARG,10,"['TENSORFLOW_IMAGE=""intel/intel-optimized-tensorflow""', 'TENSORFLOW_TAG=""1.15.2""', 'PY_VERSION=""3.8""', 'TF_MODELS_BRANCH=""tags/v1.12.0""', 'FETCH_PR', 'CODE_DIR=/tensorflow/models', 'TF_MODELS_DIR=/tensorflow/models', 'PACKAGE_DIR=model_packages', 'PACKAGE_NAME=""faster-rcnn-fp32-inference""', 'MODEL_WORKSPACE']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-object-detection-faster-rcnn-fp32-inference.Dockerfile,FROM,1,['${TENSORFLOW_IMAGE}:${TENSORFLOW_TAG}']
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-object-detection-faster-rcnn-fp32-inference.Dockerfile,ENV,6,"['DEBIAN_FRONTEND=noninteractive', 'TF_MODELS_DIR=${CODE_DIR}', 'USER_ID=0', 'USER_NAME=root', 'GROUP_ID=0', 'GROUP_NAME=root']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-object-detection-faster-rcnn-fp32-inference.Dockerfile,RUN,10,"['apt-get update &&     apt-get install --no-install-recommends --fix-missing -y         libsm6         libxext6         python-tk &&     pip install requests', 'apt-get update &&     apt-get install -y --no-install-recommends --fix-missing         build-essential         python${PY_VERSION}-dev', 'apt-get update &&     apt-get install --no-install-recommends --fix-missing -y git &&     git clone https://github.com/tensorflow/models.git ${CODE_DIR} &&     ( cd ${CODE_DIR} &&     if [ ! -z ""${FETCH_PR}"" ]; then git fetch origin ${FETCH_PR}; fi &&     git checkout ${TF_MODELS_BRANCH} )', ""pip install         Cython         contextlib2         jupyter         lxml         matplotlib         numpy>=1.17.4         'pillow>=8.1.2' &&     pip install pycocotools"", 'cd ${TF_MODELS_DIR}/research &&     apt-get install --no-install-recommends --fix-missing -y         unzip         wget &&     wget --quiet -O protobuf.zip https://github.com/google/protobuf/releases/download/v3.3.0/protoc-3.3.0-linux-x86_64.zip &&     unzip -o protobuf.zip &&     rm protobuf.zip &&     ./bin/protoc object_detection/protos/*.proto --python_out=. &&     apt-get remove -y         unzip         wget &&     apt-get autoremove -y', 'umask 002 && mkdir -p ${MODEL_WORKSPACE} && chgrp root ${MODEL_WORKSPACE} && chmod g+s+w,o+s+r ${MODEL_WORKSPACE}', 'chown -R root ${MODEL_WORKSPACE}/${PACKAGE_NAME} && chgrp -R root ${MODEL_WORKSPACE}/${PACKAGE_NAME} && chmod -R g+s+w ${MODEL_WORKSPACE}/${PACKAGE_NAME} && find ${MODEL_WORKSPACE}/${PACKAGE_NAME} -type d | xargs chmod o+r+x', 'apt-get update &&     apt-get install --no-install-recommends --fix-missing -y gosu', 'echo \'#!/bin/bash\\nUSER_ID=$USER_ID\\nUSER_NAME=$USER_NAME\\nGROUP_ID=$GROUP_ID\\nGROUP_NAME=$GROUP_NAME\\nif [[ $GROUP_NAME != root ]]; then\\n  groupadd -r -g $GROUP_ID $GROUP_NAME\\nfi\\nif [[ $USER_NAME != root ]]; then\\n  useradd --no-log-init -r -u $USER_ID -g $GROUP_NAME -s /bin/bash -M $USER_NAME\\nfi\\nexec /usr/sbin/gosu $USER_NAME:$GROUP_NAME ""$@""\\n \'>> /tmp/entrypoint.sh', 'chmod u+x,g+x /tmp/entrypoint.sh']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-object-detection-faster-rcnn-fp32-inference.Dockerfile,ADD,1,['--chown=0:0 ${PACKAGE_DIR}/${PACKAGE_NAME}.tar.gz ${MODEL_WORKSPACE}']
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-object-detection-faster-rcnn-fp32-inference.Dockerfile,WORKDIR,1,['${MODEL_WORKSPACE}/${PACKAGE_NAME}']
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-object-detection-faster-rcnn-fp32-inference.Dockerfile,ENTRYPOINT,1,"['[""/tmp/entrypoint.sh""]']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-object-detection-ssd-resnet34-fp32-training.Dockerfile,ARG,11,"['TENSORFLOW_IMAGE=""intel/intel-optimized-tensorflow""', 'TENSORFLOW_TAG=""latest""', 'PY_VERSION=""3.8""', 'TF_MODELS_BRANCH=""8110bb64ca63c48d0caee9d565e5b4274db2220a""', 'FETCH_PR', 'CODE_DIR=/tensorflow/models', 'TF_MODELS_DIR=/tensorflow/models', 'HOROVOD_VERSION=87094a4', 'PACKAGE_DIR=model_packages', 'PACKAGE_NAME=""ssd-resnet34-fp32-training""', 'MODEL_WORKSPACE']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-object-detection-ssd-resnet34-fp32-training.Dockerfile,FROM,1,['${TENSORFLOW_IMAGE}:${TENSORFLOW_TAG}']
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-object-detection-ssd-resnet34-fp32-training.Dockerfile,ENV,7,"['DEBIAN_FRONTEND=noninteractive', 'TF_MODELS_DIR=${CODE_DIR}', 'HOROVOD_WITHOUT_MXNET=1     HOROVOD_WITHOUT_PYTORCH=1     HOROVOD_WITH_TENSORFLOW=1', 'USER_ID=0', 'USER_NAME=root', 'GROUP_ID=0', 'GROUP_NAME=root']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-object-detection-ssd-resnet34-fp32-training.Dockerfile,RUN,17,"['apt-get update &&     apt-get install --no-install-recommends --fix-missing -y         libsm6         libxext6         python-tk &&     pip install requests', 'apt-get update &&     apt-get install -y --no-install-recommends --fix-missing         build-essential         python${PY_VERSION}-dev', 'apt-get update &&     apt-get install --no-install-recommends --fix-missing -y git &&     git clone https://github.com/tensorflow/models.git ${CODE_DIR} &&     ( cd ${CODE_DIR} &&     if [ ! -z ""${FETCH_PR}"" ]; then git fetch origin ${FETCH_PR}; fi &&     git checkout ${TF_MODELS_BRANCH} )', ""pip install         Cython         contextlib2         jupyter         lxml         matplotlib         numpy>=1.17.4         'pillow>=8.1.2' &&     pip install pycocotools"", 'cd ${TF_MODELS_DIR}/research &&     apt-get install --no-install-recommends --fix-missing -y         unzip         wget &&     wget --quiet -O protobuf.zip https://github.com/google/protobuf/releases/download/v3.3.0/protoc-3.3.0-linux-x86_64.zip &&     unzip -o protobuf.zip &&     rm protobuf.zip &&     ./bin/protoc object_detection/protos/*.proto --python_out=. &&     apt-get remove -y         unzip         wget &&     apt-get autoremove -y', 'apt-get update &&     apt-get install -y cpio', 'pip install tensorflow-addons==0.11.0', 'pip install opencv-python', 'apt-get install --no-install-recommends --fix-missing -y     libopenmpi-dev     openmpi-bin     openmpi-common     openssh-client     openssh-server', 'apt-get install --no-install-recommends --fix-missing -y     openssh-client     openssh-server     systemd &&     systemctl enable ssh', 'apt-get update &&     apt-get install -y --no-install-recommends --fix-missing     cmake     git', 'pip install git+https://github.com/horovod/horovod.git@${HOROVOD_VERSION}', 'umask 002 && mkdir -p ${MODEL_WORKSPACE} && chgrp root ${MODEL_WORKSPACE} && chmod g+s+w,o+s+r ${MODEL_WORKSPACE}', 'chown -R root ${MODEL_WORKSPACE}/${PACKAGE_NAME} && chgrp -R root ${MODEL_WORKSPACE}/${PACKAGE_NAME} && chmod -R g+s+w ${MODEL_WORKSPACE}/${PACKAGE_NAME} && find ${MODEL_WORKSPACE}/${PACKAGE_NAME} -type d | xargs chmod o+r+x', 'apt-get update &&     apt-get install --no-install-recommends --fix-missing -y gosu', 'echo \'#!/bin/bash\\nUSER_ID=$USER_ID\\nUSER_NAME=$USER_NAME\\nGROUP_ID=$GROUP_ID\\nGROUP_NAME=$GROUP_NAME\\nif [[ $GROUP_NAME != root ]]; then\\n  groupadd -r -g $GROUP_ID $GROUP_NAME\\nfi\\nif [[ $USER_NAME != root ]]; then\\n  useradd --no-log-init -r -u $USER_ID -g $GROUP_NAME -s /bin/bash -M $USER_NAME\\nfi\\nexec /usr/sbin/gosu $USER_NAME:$GROUP_NAME ""$@""\\n \'>> /tmp/entrypoint.sh', 'chmod u+x,g+x /tmp/entrypoint.sh']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-object-detection-ssd-resnet34-fp32-training.Dockerfile,ADD,1,['--chown=0:0 ${PACKAGE_DIR}/${PACKAGE_NAME}.tar.gz ${MODEL_WORKSPACE}']
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-object-detection-ssd-resnet34-fp32-training.Dockerfile,WORKDIR,1,['${MODEL_WORKSPACE}/${PACKAGE_NAME}']
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-object-detection-ssd-resnet34-fp32-training.Dockerfile,ENTRYPOINT,1,"['[""/tmp/entrypoint.sh""]']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-language-modeling-bert-large-bfloat16-training.Dockerfile,ARG,8,"['TENSORFLOW_IMAGE=""intel/intel-optimized-tensorflow""', 'TENSORFLOW_TAG=""latest""', 'PY_VERSION=""3.8""', 'HOROVOD_VERSION=87094a4', 'PY_VERSION=""3.8""', 'PACKAGE_DIR=model_packages', 'PACKAGE_NAME=""bert-large-bfloat16-training""', 'MODEL_WORKSPACE']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-language-modeling-bert-large-bfloat16-training.Dockerfile,FROM,1,['${TENSORFLOW_IMAGE}:${TENSORFLOW_TAG}']
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-language-modeling-bert-large-bfloat16-training.Dockerfile,ENV,6,"['DEBIAN_FRONTEND=noninteractive', 'HOROVOD_WITHOUT_MXNET=1     HOROVOD_WITHOUT_PYTORCH=1     HOROVOD_WITH_TENSORFLOW=1', 'USER_ID=0', 'USER_NAME=root', 'GROUP_ID=0', 'GROUP_NAME=root']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-language-modeling-bert-large-bfloat16-training.Dockerfile,RUN,16,"['apt-get update &&     apt-get install --no-install-recommends --fix-missing -y         libsm6         libxext6         python-tk &&     pip install requests', 'apt-get update &&     apt-get install -y --no-install-recommends --fix-missing         build-essential         python${PY_VERSION}-dev', 'apt-get update &&     apt-get install --no-install-recommends --fix-missing -y     python3-apt     software-properties-common', 'apt-get update &&     apt-get install --no-install-recommends --fix-missing -y         gcc-8         g++-8 &&   update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 8 &&   update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 8', 'apt-get update &&     apt-get install -y --no-install-recommends --fix-missing curl', 'curl -LO https://storage.googleapis.com/kubernetes-release/release/v1.18.3/bin/linux/amd64/kubectl &&     chmod +x ./kubectl &&     mv kubectl /usr/local/bin', 'apt-get install --no-install-recommends --fix-missing -y     libopenmpi-dev     openmpi-bin     openmpi-common     openssh-client     openssh-server', 'apt-get install --no-install-recommends --fix-missing -y     openssh-client     openssh-server     systemd &&     systemctl enable ssh', 'apt-get update &&     apt-get install -y --no-install-recommends --fix-missing     cmake     git', 'pip install git+https://github.com/horovod/horovod.git@${HOROVOD_VERSION}', 'apt-get update &&     apt-get install -y --no-install-recommends --fix-missing         build-essential         python${PY_VERSION}-dev', 'umask 002 && mkdir -p ${MODEL_WORKSPACE} && chgrp root ${MODEL_WORKSPACE} && chmod g+s+w,o+s+r ${MODEL_WORKSPACE}', 'chown -R root ${MODEL_WORKSPACE}/${PACKAGE_NAME} && chgrp -R root ${MODEL_WORKSPACE}/${PACKAGE_NAME} && chmod -R g+s+w ${MODEL_WORKSPACE}/${PACKAGE_NAME} && find ${MODEL_WORKSPACE}/${PACKAGE_NAME} -type d | xargs chmod o+r+x', 'apt-get update &&     apt-get install --no-install-recommends --fix-missing -y gosu', 'echo \'#!/bin/bash\\nUSER_ID=$USER_ID\\nUSER_NAME=$USER_NAME\\nGROUP_ID=$GROUP_ID\\nGROUP_NAME=$GROUP_NAME\\nif [[ $GROUP_NAME != root ]]; then\\n  groupadd -r -g $GROUP_ID $GROUP_NAME\\nfi\\nif [[ $USER_NAME != root ]]; then\\n  useradd --no-log-init -r -u $USER_ID -g $GROUP_NAME -s /bin/bash -M $USER_NAME\\nfi\\nexec /usr/sbin/gosu $USER_NAME:$GROUP_NAME ""$@""\\n \'>> /tmp/entrypoint.sh', 'chmod u+x,g+x /tmp/entrypoint.sh']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-language-modeling-bert-large-bfloat16-training.Dockerfile,ADD,1,['--chown=0:0 ${PACKAGE_DIR}/${PACKAGE_NAME}.tar.gz ${MODEL_WORKSPACE}']
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-language-modeling-bert-large-bfloat16-training.Dockerfile,WORKDIR,1,['${MODEL_WORKSPACE}/${PACKAGE_NAME}']
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-language-modeling-bert-large-bfloat16-training.Dockerfile,ENTRYPOINT,1,"['[""/tmp/entrypoint.sh""]']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-image-recognition-resnet101-fp32-inference.Dockerfile,ARG,5,"['TENSORFLOW_IMAGE=""intel/intel-optimized-tensorflow""', 'TENSORFLOW_TAG=""latest""', 'PACKAGE_DIR=model_packages', 'PACKAGE_NAME=""resnet101-fp32-inference""', 'MODEL_WORKSPACE']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-image-recognition-resnet101-fp32-inference.Dockerfile,FROM,1,['${TENSORFLOW_IMAGE}:${TENSORFLOW_TAG}']
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-image-recognition-resnet101-fp32-inference.Dockerfile,ENV,5,"['DEBIAN_FRONTEND=noninteractive', 'USER_ID=0', 'USER_NAME=root', 'GROUP_ID=0', 'GROUP_NAME=root']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-image-recognition-resnet101-fp32-inference.Dockerfile,RUN,6,"['apt-get update &&     apt-get install --no-install-recommends --fix-missing -y         libsm6         libxext6         python-tk &&     pip install requests', 'umask 002 && mkdir -p ${MODEL_WORKSPACE} && chgrp root ${MODEL_WORKSPACE} && chmod g+s+w,o+s+r ${MODEL_WORKSPACE}', 'chown -R root ${MODEL_WORKSPACE}/${PACKAGE_NAME} && chgrp -R root ${MODEL_WORKSPACE}/${PACKAGE_NAME} && chmod -R g+s+w ${MODEL_WORKSPACE}/${PACKAGE_NAME} && find ${MODEL_WORKSPACE}/${PACKAGE_NAME} -type d | xargs chmod o+r+x', 'apt-get update &&     apt-get install --no-install-recommends --fix-missing -y gosu', 'echo \'#!/bin/bash\\nUSER_ID=$USER_ID\\nUSER_NAME=$USER_NAME\\nGROUP_ID=$GROUP_ID\\nGROUP_NAME=$GROUP_NAME\\nif [[ $GROUP_NAME != root ]]; then\\n  groupadd -r -g $GROUP_ID $GROUP_NAME\\nfi\\nif [[ $USER_NAME != root ]]; then\\n  useradd --no-log-init -r -u $USER_ID -g $GROUP_NAME -s /bin/bash -M $USER_NAME\\nfi\\nexec /usr/sbin/gosu $USER_NAME:$GROUP_NAME ""$@""\\n \'>> /tmp/entrypoint.sh', 'chmod u+x,g+x /tmp/entrypoint.sh']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-image-recognition-resnet101-fp32-inference.Dockerfile,ADD,1,['--chown=0:0 ${PACKAGE_DIR}/${PACKAGE_NAME}.tar.gz ${MODEL_WORKSPACE}']
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-image-recognition-resnet101-fp32-inference.Dockerfile,WORKDIR,1,['${MODEL_WORKSPACE}/${PACKAGE_NAME}']
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-image-recognition-resnet101-fp32-inference.Dockerfile,ENTRYPOINT,1,"['[""/tmp/entrypoint.sh""]']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-language-modeling-bert-large-fp32-inference.Dockerfile,ARG,5,"['TENSORFLOW_IMAGE=""intel/intel-optimized-tensorflow""', 'TENSORFLOW_TAG=""latest""', 'PACKAGE_DIR=model_packages', 'PACKAGE_NAME=""bert-large-fp32-inference""', 'MODEL_WORKSPACE']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-language-modeling-bert-large-fp32-inference.Dockerfile,FROM,1,['${TENSORFLOW_IMAGE}:${TENSORFLOW_TAG}']
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-language-modeling-bert-large-fp32-inference.Dockerfile,ENV,5,"['DEBIAN_FRONTEND=noninteractive', 'USER_ID=0', 'USER_NAME=root', 'GROUP_ID=0', 'GROUP_NAME=root']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-language-modeling-bert-large-fp32-inference.Dockerfile,RUN,7,"['apt-get update &&     apt-get install --no-install-recommends --fix-missing -y         libsm6         libxext6         python-tk &&     pip install requests', 'umask 002 && mkdir -p ${MODEL_WORKSPACE} && chgrp root ${MODEL_WORKSPACE} && chmod g+s+w,o+s+r ${MODEL_WORKSPACE}', 'chown -R root ${MODEL_WORKSPACE}/${PACKAGE_NAME} && chgrp -R root ${MODEL_WORKSPACE}/${PACKAGE_NAME} && chmod -R g+s+w ${MODEL_WORKSPACE}/${PACKAGE_NAME} && find ${MODEL_WORKSPACE}/${PACKAGE_NAME} -type d | xargs chmod o+r+x', 'apt-get install --no-install-recommends --fix-missing -y unzip', 'apt-get update &&     apt-get install --no-install-recommends --fix-missing -y gosu', 'echo \'#!/bin/bash\\nUSER_ID=$USER_ID\\nUSER_NAME=$USER_NAME\\nGROUP_ID=$GROUP_ID\\nGROUP_NAME=$GROUP_NAME\\nif [[ $GROUP_NAME != root ]]; then\\n  groupadd -r -g $GROUP_ID $GROUP_NAME\\nfi\\nif [[ $USER_NAME != root ]]; then\\n  useradd --no-log-init -r -u $USER_ID -g $GROUP_NAME -s /bin/bash -M $USER_NAME\\nfi\\nexec /usr/sbin/gosu $USER_NAME:$GROUP_NAME ""$@""\\n \'>> /tmp/entrypoint.sh', 'chmod u+x,g+x /tmp/entrypoint.sh']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-language-modeling-bert-large-fp32-inference.Dockerfile,ADD,1,['--chown=0:0 ${PACKAGE_DIR}/${PACKAGE_NAME}.tar.gz ${MODEL_WORKSPACE}']
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-language-modeling-bert-large-fp32-inference.Dockerfile,WORKDIR,1,['${MODEL_WORKSPACE}/${PACKAGE_NAME}']
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-language-modeling-bert-large-fp32-inference.Dockerfile,ENTRYPOINT,1,"['[""/tmp/entrypoint.sh""]']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-image-recognition-resnet101-int8-inference.Dockerfile,ARG,5,"['TENSORFLOW_IMAGE=""intel/intel-optimized-tensorflow""', 'TENSORFLOW_TAG=""latest""', 'PACKAGE_DIR=model_packages', 'PACKAGE_NAME=""resnet101-int8-inference""', 'MODEL_WORKSPACE']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-image-recognition-resnet101-int8-inference.Dockerfile,FROM,1,['${TENSORFLOW_IMAGE}:${TENSORFLOW_TAG}']
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-image-recognition-resnet101-int8-inference.Dockerfile,ENV,5,"['DEBIAN_FRONTEND=noninteractive', 'USER_ID=0', 'USER_NAME=root', 'GROUP_ID=0', 'GROUP_NAME=root']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-image-recognition-resnet101-int8-inference.Dockerfile,RUN,6,"['apt-get update &&     apt-get install --no-install-recommends --fix-missing -y         libsm6         libxext6         python-tk &&     pip install requests', 'umask 002 && mkdir -p ${MODEL_WORKSPACE} && chgrp root ${MODEL_WORKSPACE} && chmod g+s+w,o+s+r ${MODEL_WORKSPACE}', 'chown -R root ${MODEL_WORKSPACE}/${PACKAGE_NAME} && chgrp -R root ${MODEL_WORKSPACE}/${PACKAGE_NAME} && chmod -R g+s+w ${MODEL_WORKSPACE}/${PACKAGE_NAME} && find ${MODEL_WORKSPACE}/${PACKAGE_NAME} -type d | xargs chmod o+r+x', 'apt-get update &&     apt-get install --no-install-recommends --fix-missing -y gosu', 'echo \'#!/bin/bash\\nUSER_ID=$USER_ID\\nUSER_NAME=$USER_NAME\\nGROUP_ID=$GROUP_ID\\nGROUP_NAME=$GROUP_NAME\\nif [[ $GROUP_NAME != root ]]; then\\n  groupadd -r -g $GROUP_ID $GROUP_NAME\\nfi\\nif [[ $USER_NAME != root ]]; then\\n  useradd --no-log-init -r -u $USER_ID -g $GROUP_NAME -s /bin/bash -M $USER_NAME\\nfi\\nexec /usr/sbin/gosu $USER_NAME:$GROUP_NAME ""$@""\\n \'>> /tmp/entrypoint.sh', 'chmod u+x,g+x /tmp/entrypoint.sh']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-image-recognition-resnet101-int8-inference.Dockerfile,ADD,1,['--chown=0:0 ${PACKAGE_DIR}/${PACKAGE_NAME}.tar.gz ${MODEL_WORKSPACE}']
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-image-recognition-resnet101-int8-inference.Dockerfile,WORKDIR,1,['${MODEL_WORKSPACE}/${PACKAGE_NAME}']
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-image-recognition-resnet101-int8-inference.Dockerfile,ENTRYPOINT,1,"['[""/tmp/entrypoint.sh""]']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-object-detection-faster-rcnn-int8-inference.Dockerfile,ARG,10,"['TENSORFLOW_IMAGE=""intel/intel-optimized-tensorflow""', 'TENSORFLOW_TAG=""1.15.2""', 'PY_VERSION=""3.8""', 'TF_MODELS_BRANCH=""tags/v1.12.0""', 'FETCH_PR', 'CODE_DIR=/tensorflow/models', 'TF_MODELS_DIR=/tensorflow/models', 'PACKAGE_DIR=model_packages', 'PACKAGE_NAME=""faster-rcnn-int8-inference""', 'MODEL_WORKSPACE']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-object-detection-faster-rcnn-int8-inference.Dockerfile,FROM,1,['${TENSORFLOW_IMAGE}:${TENSORFLOW_TAG}']
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-object-detection-faster-rcnn-int8-inference.Dockerfile,ENV,6,"['DEBIAN_FRONTEND=noninteractive', 'TF_MODELS_DIR=${CODE_DIR}', 'USER_ID=0', 'USER_NAME=root', 'GROUP_ID=0', 'GROUP_NAME=root']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-object-detection-faster-rcnn-int8-inference.Dockerfile,RUN,10,"['apt-get update &&     apt-get install --no-install-recommends --fix-missing -y         libsm6         libxext6         python-tk &&     pip install requests', 'apt-get update &&     apt-get install -y --no-install-recommends --fix-missing         build-essential         python${PY_VERSION}-dev', 'apt-get update &&     apt-get install --no-install-recommends --fix-missing -y git &&     git clone https://github.com/tensorflow/models.git ${CODE_DIR} &&     ( cd ${CODE_DIR} &&     if [ ! -z ""${FETCH_PR}"" ]; then git fetch origin ${FETCH_PR}; fi &&     git checkout ${TF_MODELS_BRANCH} )', ""pip install         Cython         contextlib2         jupyter         lxml         matplotlib         numpy>=1.17.4         'pillow>=8.1.2' &&     pip install pycocotools"", 'cd ${TF_MODELS_DIR}/research &&     apt-get install --no-install-recommends --fix-missing -y         unzip         wget &&     wget --quiet -O protobuf.zip https://github.com/google/protobuf/releases/download/v3.3.0/protoc-3.3.0-linux-x86_64.zip &&     unzip -o protobuf.zip &&     rm protobuf.zip &&     ./bin/protoc object_detection/protos/*.proto --python_out=. &&     apt-get remove -y         unzip         wget &&     apt-get autoremove -y', 'umask 002 && mkdir -p ${MODEL_WORKSPACE} && chgrp root ${MODEL_WORKSPACE} && chmod g+s+w,o+s+r ${MODEL_WORKSPACE}', 'chown -R root ${MODEL_WORKSPACE}/${PACKAGE_NAME} && chgrp -R root ${MODEL_WORKSPACE}/${PACKAGE_NAME} && chmod -R g+s+w ${MODEL_WORKSPACE}/${PACKAGE_NAME} && find ${MODEL_WORKSPACE}/${PACKAGE_NAME} -type d | xargs chmod o+r+x', 'apt-get update &&     apt-get install --no-install-recommends --fix-missing -y gosu', 'echo \'#!/bin/bash\\nUSER_ID=$USER_ID\\nUSER_NAME=$USER_NAME\\nGROUP_ID=$GROUP_ID\\nGROUP_NAME=$GROUP_NAME\\nif [[ $GROUP_NAME != root ]]; then\\n  groupadd -r -g $GROUP_ID $GROUP_NAME\\nfi\\nif [[ $USER_NAME != root ]]; then\\n  useradd --no-log-init -r -u $USER_ID -g $GROUP_NAME -s /bin/bash -M $USER_NAME\\nfi\\nexec /usr/sbin/gosu $USER_NAME:$GROUP_NAME ""$@""\\n \'>> /tmp/entrypoint.sh', 'chmod u+x,g+x /tmp/entrypoint.sh']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-object-detection-faster-rcnn-int8-inference.Dockerfile,ADD,1,['--chown=0:0 ${PACKAGE_DIR}/${PACKAGE_NAME}.tar.gz ${MODEL_WORKSPACE}']
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-object-detection-faster-rcnn-int8-inference.Dockerfile,WORKDIR,1,['${MODEL_WORKSPACE}/${PACKAGE_NAME}']
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-object-detection-faster-rcnn-int8-inference.Dockerfile,ENTRYPOINT,1,"['[""/tmp/entrypoint.sh""]']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-image-segmentation-maskrcnn-fp32-inference.Dockerfile,ARG,6,"['TENSORFLOW_IMAGE=""intel/intel-optimized-tensorflow""', 'TENSORFLOW_TAG=""1.15.2""', 'PACKAGE_DIR=model_packages', 'PACKAGE_NAME=""maskrcnn-fp32-inference""', 'MODEL_WORKSPACE', 'MASK_RCNN_SOURCE_DIR=/workspace/Mask_RCNN']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-image-segmentation-maskrcnn-fp32-inference.Dockerfile,FROM,1,['${TENSORFLOW_IMAGE}:${TENSORFLOW_TAG}']
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-image-segmentation-maskrcnn-fp32-inference.Dockerfile,ENV,6,"['DEBIAN_FRONTEND=noninteractive', 'MODEL_SRC_DIR=${MASK_RCNN_SOURCE_DIR}', 'USER_ID=0', 'USER_NAME=root', 'GROUP_ID=0', 'GROUP_NAME=root']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-image-segmentation-maskrcnn-fp32-inference.Dockerfile,RUN,8,"['apt-get update &&     apt-get install --no-install-recommends --fix-missing -y         libsm6         libxext6         python-tk &&     pip install requests', 'umask 002 && mkdir -p ${MODEL_WORKSPACE} && chgrp root ${MODEL_WORKSPACE} && chmod g+s+w,o+s+r ${MODEL_WORKSPACE}', 'chown -R root ${MODEL_WORKSPACE}/${PACKAGE_NAME} && chgrp -R root ${MODEL_WORKSPACE}/${PACKAGE_NAME} && chmod -R g+s+w ${MODEL_WORKSPACE}/${PACKAGE_NAME} && find ${MODEL_WORKSPACE}/${PACKAGE_NAME} -type d | xargs chmod o+r+x', ""pip install         IPython[all]         'Pillow>=8.1.2'         cython         h5py         imgaug         keras==2.0.8         matplotlib         numpy==1.16.3         opencv-python         pycocotools         scikit-image         scipy==1.2.0 &&     apt-get update &&     apt-get install --no-install-recommends --fix-missing -y         git         wget"", 'git clone https://github.com/matterport/Mask_RCNN.git ${MODEL_SRC_DIR} &&     ( cd ${MODEL_SRC_DIR} &&     wget https://github.com/matterport/Mask_RCNN/releases/download/v2.0/mask_rcnn_coco.h5 )', 'apt-get update &&     apt-get install --no-install-recommends --fix-missing -y gosu', 'echo \'#!/bin/bash\\nUSER_ID=$USER_ID\\nUSER_NAME=$USER_NAME\\nGROUP_ID=$GROUP_ID\\nGROUP_NAME=$GROUP_NAME\\nif [[ $GROUP_NAME != root ]]; then\\n  groupadd -r -g $GROUP_ID $GROUP_NAME\\nfi\\nif [[ $USER_NAME != root ]]; then\\n  useradd --no-log-init -r -u $USER_ID -g $GROUP_NAME -s /bin/bash -M $USER_NAME\\nfi\\nexec /usr/sbin/gosu $USER_NAME:$GROUP_NAME ""$@""\\n \'>> /tmp/entrypoint.sh', 'chmod u+x,g+x /tmp/entrypoint.sh']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-image-segmentation-maskrcnn-fp32-inference.Dockerfile,ADD,1,['--chown=0:0 ${PACKAGE_DIR}/${PACKAGE_NAME}.tar.gz ${MODEL_WORKSPACE}']
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-image-segmentation-maskrcnn-fp32-inference.Dockerfile,WORKDIR,1,['${MODEL_WORKSPACE}/${PACKAGE_NAME}']
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-image-segmentation-maskrcnn-fp32-inference.Dockerfile,ENTRYPOINT,1,"['[""/tmp/entrypoint.sh""]']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-recommendation-wide-deep-large-ds-fp32-inference.Dockerfile,ARG,5,"['TENSORFLOW_IMAGE=""intel/intel-optimized-tensorflow""', 'TENSORFLOW_TAG=""1.15.2""', 'PACKAGE_DIR=model_packages', 'PACKAGE_NAME=""wide-deep-large-ds-fp32-inference""', 'MODEL_WORKSPACE']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-recommendation-wide-deep-large-ds-fp32-inference.Dockerfile,FROM,1,['${TENSORFLOW_IMAGE}:${TENSORFLOW_TAG}']
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-recommendation-wide-deep-large-ds-fp32-inference.Dockerfile,ENV,6,"['DEBIAN_FRONTEND=noninteractive', 'DEBIAN_FRONTEND=noninteractive', 'USER_ID=0', 'USER_NAME=root', 'GROUP_ID=0', 'GROUP_NAME=root']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-recommendation-wide-deep-large-ds-fp32-inference.Dockerfile,RUN,8,"['apt-get update &&     apt-get install --no-install-recommends --fix-missing -y         libsm6         libxext6         python-tk &&     pip install requests', 'apt-get install --no-install-recommends --fix-missing -y google-perftools', 'umask 002 && mkdir -p ${MODEL_WORKSPACE} && chgrp root ${MODEL_WORKSPACE} && chmod g+s+w,o+s+r ${MODEL_WORKSPACE}', 'chown -R root ${MODEL_WORKSPACE}/${PACKAGE_NAME} && chgrp -R root ${MODEL_WORKSPACE}/${PACKAGE_NAME} && chmod -R g+s+w ${MODEL_WORKSPACE}/${PACKAGE_NAME} && find ${MODEL_WORKSPACE}/${PACKAGE_NAME} -type d | xargs chmod o+r+x', 'apt-get update &&     apt-get install --no-install-recommends --fix-missing -y         python-pandas &&     pip install pandas', 'apt-get update &&     apt-get install --no-install-recommends --fix-missing -y gosu', 'echo \'#!/bin/bash\\nUSER_ID=$USER_ID\\nUSER_NAME=$USER_NAME\\nGROUP_ID=$GROUP_ID\\nGROUP_NAME=$GROUP_NAME\\nif [[ $GROUP_NAME != root ]]; then\\n  groupadd -r -g $GROUP_ID $GROUP_NAME\\nfi\\nif [[ $USER_NAME != root ]]; then\\n  useradd --no-log-init -r -u $USER_ID -g $GROUP_NAME -s /bin/bash -M $USER_NAME\\nfi\\nexec /usr/sbin/gosu $USER_NAME:$GROUP_NAME ""$@""\\n \'>> /tmp/entrypoint.sh', 'chmod u+x,g+x /tmp/entrypoint.sh']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-recommendation-wide-deep-large-ds-fp32-inference.Dockerfile,ADD,1,['--chown=0:0 ${PACKAGE_DIR}/${PACKAGE_NAME}.tar.gz ${MODEL_WORKSPACE}']
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-recommendation-wide-deep-large-ds-fp32-inference.Dockerfile,WORKDIR,1,['${MODEL_WORKSPACE}/${PACKAGE_NAME}']
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-recommendation-wide-deep-large-ds-fp32-inference.Dockerfile,ENTRYPOINT,1,"['[""/tmp/entrypoint.sh""]']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-image-recognition-resnet50-int8-inference.Dockerfile,ARG,5,"['TENSORFLOW_IMAGE=""intel/intel-optimized-tensorflow""', 'TENSORFLOW_TAG=""latest""', 'PACKAGE_DIR=model_packages', 'PACKAGE_NAME=""resnet50-int8-inference""', 'MODEL_WORKSPACE']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-image-recognition-resnet50-int8-inference.Dockerfile,FROM,1,['${TENSORFLOW_IMAGE}:${TENSORFLOW_TAG}']
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-image-recognition-resnet50-int8-inference.Dockerfile,ENV,5,"['DEBIAN_FRONTEND=noninteractive', 'USER_ID=0', 'USER_NAME=root', 'GROUP_ID=0', 'GROUP_NAME=root']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-image-recognition-resnet50-int8-inference.Dockerfile,RUN,6,"['apt-get update &&     apt-get install --no-install-recommends --fix-missing -y         libsm6         libxext6         python-tk &&     pip install requests', 'umask 002 && mkdir -p ${MODEL_WORKSPACE} && chgrp root ${MODEL_WORKSPACE} && chmod g+s+w,o+s+r ${MODEL_WORKSPACE}', 'chown -R root ${MODEL_WORKSPACE}/${PACKAGE_NAME} && chgrp -R root ${MODEL_WORKSPACE}/${PACKAGE_NAME} && chmod -R g+s+w ${MODEL_WORKSPACE}/${PACKAGE_NAME} && find ${MODEL_WORKSPACE}/${PACKAGE_NAME} -type d | xargs chmod o+r+x', 'apt-get update &&     apt-get install --no-install-recommends --fix-missing -y gosu', 'echo \'#!/bin/bash\\nUSER_ID=$USER_ID\\nUSER_NAME=$USER_NAME\\nGROUP_ID=$GROUP_ID\\nGROUP_NAME=$GROUP_NAME\\nif [[ $GROUP_NAME != root ]]; then\\n  groupadd -r -g $GROUP_ID $GROUP_NAME\\nfi\\nif [[ $USER_NAME != root ]]; then\\n  useradd --no-log-init -r -u $USER_ID -g $GROUP_NAME -s /bin/bash -M $USER_NAME\\nfi\\nexec /usr/sbin/gosu $USER_NAME:$GROUP_NAME ""$@""\\n \'>> /tmp/entrypoint.sh', 'chmod u+x,g+x /tmp/entrypoint.sh']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-image-recognition-resnet50-int8-inference.Dockerfile,ADD,1,['--chown=0:0 ${PACKAGE_DIR}/${PACKAGE_NAME}.tar.gz ${MODEL_WORKSPACE}']
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-image-recognition-resnet50-int8-inference.Dockerfile,WORKDIR,1,['${MODEL_WORKSPACE}/${PACKAGE_NAME}']
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-image-recognition-resnet50-int8-inference.Dockerfile,ENTRYPOINT,1,"['[""/tmp/entrypoint.sh""]']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-object-detection-ssd-resnet34-bfloat16-training.Dockerfile,ARG,12,"['TENSORFLOW_IMAGE=""intel/intel-optimized-tensorflow""', 'TENSORFLOW_TAG=""latest""', 'PY_VERSION=""3.8""', 'TF_MODELS_BRANCH=""8110bb64ca63c48d0caee9d565e5b4274db2220a""', 'FETCH_PR', 'CODE_DIR=/tensorflow/models', 'TF_MODELS_DIR=/tensorflow/models', 'PY_VERSION=""3.8""', 'HOROVOD_VERSION=""87094a4""', 'PACKAGE_DIR=model_packages', 'PACKAGE_NAME=""ssd-resnet34-bfloat16-training""', 'MODEL_WORKSPACE']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-object-detection-ssd-resnet34-bfloat16-training.Dockerfile,FROM,1,['${TENSORFLOW_IMAGE}:${TENSORFLOW_TAG}']
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-object-detection-ssd-resnet34-bfloat16-training.Dockerfile,ENV,7,"['DEBIAN_FRONTEND=noninteractive', 'TF_MODELS_DIR=${CODE_DIR}', 'HOROVOD_WITHOUT_MXNET=1     HOROVOD_WITHOUT_PYTORCH=1     HOROVOD_WITH_TENSORFLOW=1', 'USER_ID=0', 'USER_NAME=root', 'GROUP_ID=0', 'GROUP_NAME=root']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-object-detection-ssd-resnet34-bfloat16-training.Dockerfile,RUN,23,"['apt-get update &&     apt-get install --no-install-recommends --fix-missing -y         libsm6         libxext6         python-tk &&     pip install requests', 'apt-get update &&     apt-get install -y --no-install-recommends --fix-missing         build-essential         python${PY_VERSION}-dev', 'apt-get update &&     apt-get install --no-install-recommends --fix-missing -y git &&     git clone https://github.com/tensorflow/models.git ${CODE_DIR} &&     ( cd ${CODE_DIR} &&     if [ ! -z ""${FETCH_PR}"" ]; then git fetch origin ${FETCH_PR}; fi &&     git checkout ${TF_MODELS_BRANCH} )', ""pip install         Cython         contextlib2         jupyter         lxml         matplotlib         numpy>=1.17.4         'pillow>=8.1.2' &&     pip install pycocotools"", 'cd ${TF_MODELS_DIR}/research &&     apt-get install --no-install-recommends --fix-missing -y         unzip         wget &&     wget --quiet -O protobuf.zip https://github.com/google/protobuf/releases/download/v3.3.0/protoc-3.3.0-linux-x86_64.zip &&     unzip -o protobuf.zip &&     rm protobuf.zip &&     ./bin/protoc object_detection/protos/*.proto --python_out=. &&     apt-get remove -y         unzip         wget &&     apt-get autoremove -y', 'apt-get update &&     apt-get install -y --no-install-recommends --fix-missing         build-essential         python${PY_VERSION}-dev', 'apt-get update &&     apt-get install --no-install-recommends --fix-missing -y     python3-apt     software-properties-common', 'apt-get update &&     apt-get install --no-install-recommends --fix-missing -y         gcc-8         g++-8 &&   update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 8 &&   update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 8', 'apt-get update &&     apt-get install -y --no-install-recommends --fix-missing curl', 'curl -LO https://storage.googleapis.com/kubernetes-release/release/v1.18.3/bin/linux/amd64/kubectl &&     chmod +x ./kubectl &&     mv kubectl /usr/local/bin', 'apt-get install --no-install-recommends --fix-missing -y     libopenmpi-dev     openmpi-bin     openmpi-common     openssh-client     openssh-server', 'apt-get install --no-install-recommends --fix-missing -y     openssh-client     openssh-server     systemd &&     systemctl enable ssh', 'apt-get update &&     apt-get install -y --no-install-recommends --fix-missing     cmake     git', 'pip install git+https://github.com/horovod/horovod.git@${HOROVOD_VERSION}', 'apt-get update &&     apt-get install -y cpio', 'pip install tensorflow-addons==0.11.0', 'pip install opencv-python', 'umask 002 && mkdir -p ${MODEL_WORKSPACE} && chgrp root ${MODEL_WORKSPACE} && chmod g+s+w,o+s+r ${MODEL_WORKSPACE}', 'chown -R root ${MODEL_WORKSPACE}/${PACKAGE_NAME} && chgrp -R root ${MODEL_WORKSPACE}/${PACKAGE_NAME} && chmod -R g+s+w ${MODEL_WORKSPACE}/${PACKAGE_NAME} && find ${MODEL_WORKSPACE}/${PACKAGE_NAME} -type d | xargs chmod o+r+x', 'apt-get update &&     apt-get install --no-install-recommends --fix-missing -y gosu', 'echo \'#!/bin/bash\\nUSER_ID=$USER_ID\\nUSER_NAME=$USER_NAME\\nGROUP_ID=$GROUP_ID\\nGROUP_NAME=$GROUP_NAME\\nif [[ $GROUP_NAME != root ]]; then\\n  groupadd -r -g $GROUP_ID $GROUP_NAME\\nfi\\nif [[ $USER_NAME != root ]]; then\\n  useradd --no-log-init -r -u $USER_ID -g $GROUP_NAME -s /bin/bash -M $USER_NAME\\nfi\\nexec /usr/sbin/gosu $USER_NAME:$GROUP_NAME ""$@""\\n \'>> /tmp/entrypoint.sh', 'chmod u+x,g+x /tmp/entrypoint.sh', 'cd ${TF_MODELS_DIR} &&     git apply --ignore-space-change --ignore-whitespace ${MODEL_WORKSPACE}/${PACKAGE_NAME}/models/object_detection/tensorflow/ssd-resnet34/training/bfloat16/tf-2.0.diff']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-object-detection-ssd-resnet34-bfloat16-training.Dockerfile,ADD,1,['--chown=0:0 ${PACKAGE_DIR}/${PACKAGE_NAME}.tar.gz ${MODEL_WORKSPACE}']
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-object-detection-ssd-resnet34-bfloat16-training.Dockerfile,WORKDIR,1,['${MODEL_WORKSPACE}/${PACKAGE_NAME}']
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-object-detection-ssd-resnet34-bfloat16-training.Dockerfile,ENTRYPOINT,1,"['[""/tmp/entrypoint.sh""]']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-language-modeling-bert-large-bfloat16-inference.Dockerfile,ARG,5,"['TENSORFLOW_IMAGE=""intel/intel-optimized-tensorflow""', 'TENSORFLOW_TAG=""latest""', 'PACKAGE_DIR=model_packages', 'PACKAGE_NAME=""bert-large-bfloat16-inference""', 'MODEL_WORKSPACE']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-language-modeling-bert-large-bfloat16-inference.Dockerfile,FROM,1,['${TENSORFLOW_IMAGE}:${TENSORFLOW_TAG}']
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-language-modeling-bert-large-bfloat16-inference.Dockerfile,ENV,5,"['DEBIAN_FRONTEND=noninteractive', 'USER_ID=0', 'USER_NAME=root', 'GROUP_ID=0', 'GROUP_NAME=root']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-language-modeling-bert-large-bfloat16-inference.Dockerfile,RUN,7,"['apt-get update &&     apt-get install --no-install-recommends --fix-missing -y         libsm6         libxext6         python-tk &&     pip install requests', 'umask 002 && mkdir -p ${MODEL_WORKSPACE} && chgrp root ${MODEL_WORKSPACE} && chmod g+s+w,o+s+r ${MODEL_WORKSPACE}', 'chown -R root ${MODEL_WORKSPACE}/${PACKAGE_NAME} && chgrp -R root ${MODEL_WORKSPACE}/${PACKAGE_NAME} && chmod -R g+s+w ${MODEL_WORKSPACE}/${PACKAGE_NAME} && find ${MODEL_WORKSPACE}/${PACKAGE_NAME} -type d | xargs chmod o+r+x', 'apt-get install --no-install-recommends --fix-missing -y unzip', 'apt-get update &&     apt-get install --no-install-recommends --fix-missing -y gosu', 'echo \'#!/bin/bash\\nUSER_ID=$USER_ID\\nUSER_NAME=$USER_NAME\\nGROUP_ID=$GROUP_ID\\nGROUP_NAME=$GROUP_NAME\\nif [[ $GROUP_NAME != root ]]; then\\n  groupadd -r -g $GROUP_ID $GROUP_NAME\\nfi\\nif [[ $USER_NAME != root ]]; then\\n  useradd --no-log-init -r -u $USER_ID -g $GROUP_NAME -s /bin/bash -M $USER_NAME\\nfi\\nexec /usr/sbin/gosu $USER_NAME:$GROUP_NAME ""$@""\\n \'>> /tmp/entrypoint.sh', 'chmod u+x,g+x /tmp/entrypoint.sh']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-language-modeling-bert-large-bfloat16-inference.Dockerfile,ADD,1,['--chown=0:0 ${PACKAGE_DIR}/${PACKAGE_NAME}.tar.gz ${MODEL_WORKSPACE}']
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-language-modeling-bert-large-bfloat16-inference.Dockerfile,WORKDIR,1,['${MODEL_WORKSPACE}/${PACKAGE_NAME}']
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-language-modeling-bert-large-bfloat16-inference.Dockerfile,ENTRYPOINT,1,"['[""/tmp/entrypoint.sh""]']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-recommendation-ncf-fp32-inference.Dockerfile,ARG,8,"['TENSORFLOW_IMAGE=""intel/intel-optimized-tensorflow""', 'TENSORFLOW_TAG=""1.15.2""', 'TF_MODELS_BRANCH=""r1.11""', 'FETCH_PR', 'CODE_DIR=/tensorflow/models', 'PACKAGE_DIR=model_packages', 'PACKAGE_NAME=""ncf-fp32-inference""', 'MODEL_WORKSPACE']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-recommendation-ncf-fp32-inference.Dockerfile,FROM,1,['${TENSORFLOW_IMAGE}:${TENSORFLOW_TAG}']
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-recommendation-ncf-fp32-inference.Dockerfile,ENV,6,"['DEBIAN_FRONTEND=noninteractive', 'TF_MODELS_DIR=${CODE_DIR}', 'USER_ID=0', 'USER_NAME=root', 'GROUP_ID=0', 'GROUP_NAME=root']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-recommendation-ncf-fp32-inference.Dockerfile,RUN,9,"['apt-get update &&     apt-get install --no-install-recommends --fix-missing -y         libsm6         libxext6         python-tk &&     pip install requests', 'apt-get update &&     apt-get install --no-install-recommends --fix-missing -y git &&     git clone https://github.com/tensorflow/models.git ${CODE_DIR} &&     ( cd ${CODE_DIR} &&     if [ ! -z ""${FETCH_PR}"" ]; then git fetch origin ${FETCH_PR}; fi &&     git checkout ${TF_MODELS_BRANCH} )', ""pip install         google-api-python-client==1.6.7         google-cloud-bigquery==0.31.0         kaggle==1.3.9         numpy==1.16.3         oauth2client==4.1.2         pandas         'psutil>=5.6.7'         py-cpuinfo==3.3.0         typing"", 'umask 002 && mkdir -p ${MODEL_WORKSPACE} && chgrp root ${MODEL_WORKSPACE} && chmod g+s+w,o+s+r ${MODEL_WORKSPACE}', 'chown -R root ${MODEL_WORKSPACE}/${PACKAGE_NAME} && chgrp -R root ${MODEL_WORKSPACE}/${PACKAGE_NAME} && chmod -R g+s+w ${MODEL_WORKSPACE}/${PACKAGE_NAME} && find ${MODEL_WORKSPACE}/${PACKAGE_NAME} -type d | xargs chmod o+r+x', 'apt-get install --no-install-recommends --fix-missing -y tar', 'apt-get update &&     apt-get install --no-install-recommends --fix-missing -y gosu', 'echo \'#!/bin/bash\\nUSER_ID=$USER_ID\\nUSER_NAME=$USER_NAME\\nGROUP_ID=$GROUP_ID\\nGROUP_NAME=$GROUP_NAME\\nif [[ $GROUP_NAME != root ]]; then\\n  groupadd -r -g $GROUP_ID $GROUP_NAME\\nfi\\nif [[ $USER_NAME != root ]]; then\\n  useradd --no-log-init -r -u $USER_ID -g $GROUP_NAME -s /bin/bash -M $USER_NAME\\nfi\\nexec /usr/sbin/gosu $USER_NAME:$GROUP_NAME ""$@""\\n \'>> /tmp/entrypoint.sh', 'chmod u+x,g+x /tmp/entrypoint.sh']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-recommendation-ncf-fp32-inference.Dockerfile,ADD,1,['--chown=0:0 ${PACKAGE_DIR}/${PACKAGE_NAME}.tar.gz ${MODEL_WORKSPACE}']
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-recommendation-ncf-fp32-inference.Dockerfile,WORKDIR,1,['${MODEL_WORKSPACE}/${PACKAGE_NAME}']
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-recommendation-ncf-fp32-inference.Dockerfile,ENTRYPOINT,1,"['[""/tmp/entrypoint.sh""]']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-image-recognition-resnet50v1-5-bfloat16-inference.Dockerfile,ARG,5,"['TENSORFLOW_IMAGE=""intel/intel-optimized-tensorflow""', 'TENSORFLOW_TAG=""latest""', 'PACKAGE_DIR=model_packages', 'PACKAGE_NAME=""resnet50v1-5-bfloat16-inference""', 'MODEL_WORKSPACE']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-image-recognition-resnet50v1-5-bfloat16-inference.Dockerfile,FROM,1,['${TENSORFLOW_IMAGE}:${TENSORFLOW_TAG}']
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-image-recognition-resnet50v1-5-bfloat16-inference.Dockerfile,ENV,5,"['DEBIAN_FRONTEND=noninteractive', 'USER_ID=0', 'USER_NAME=root', 'GROUP_ID=0', 'GROUP_NAME=root']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-image-recognition-resnet50v1-5-bfloat16-inference.Dockerfile,RUN,6,"['apt-get update &&     apt-get install --no-install-recommends --fix-missing -y         libsm6         libxext6         python-tk &&     pip install requests', 'umask 002 && mkdir -p ${MODEL_WORKSPACE} && chgrp root ${MODEL_WORKSPACE} && chmod g+s+w,o+s+r ${MODEL_WORKSPACE}', 'chown -R root ${MODEL_WORKSPACE}/${PACKAGE_NAME} && chgrp -R root ${MODEL_WORKSPACE}/${PACKAGE_NAME} && chmod -R g+s+w ${MODEL_WORKSPACE}/${PACKAGE_NAME} && find ${MODEL_WORKSPACE}/${PACKAGE_NAME} -type d | xargs chmod o+r+x', 'apt-get update &&     apt-get install --no-install-recommends --fix-missing -y gosu', 'echo \'#!/bin/bash\\nUSER_ID=$USER_ID\\nUSER_NAME=$USER_NAME\\nGROUP_ID=$GROUP_ID\\nGROUP_NAME=$GROUP_NAME\\nif [[ $GROUP_NAME != root ]]; then\\n  groupadd -r -g $GROUP_ID $GROUP_NAME\\nfi\\nif [[ $USER_NAME != root ]]; then\\n  useradd --no-log-init -r -u $USER_ID -g $GROUP_NAME -s /bin/bash -M $USER_NAME\\nfi\\nexec /usr/sbin/gosu $USER_NAME:$GROUP_NAME ""$@""\\n \'>> /tmp/entrypoint.sh', 'chmod u+x,g+x /tmp/entrypoint.sh']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-image-recognition-resnet50v1-5-bfloat16-inference.Dockerfile,ADD,1,['--chown=0:0 ${PACKAGE_DIR}/${PACKAGE_NAME}.tar.gz ${MODEL_WORKSPACE}']
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-image-recognition-resnet50v1-5-bfloat16-inference.Dockerfile,WORKDIR,1,['${MODEL_WORKSPACE}/${PACKAGE_NAME}']
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-image-recognition-resnet50v1-5-bfloat16-inference.Dockerfile,ENTRYPOINT,1,"['[""/tmp/entrypoint.sh""]']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-image-recognition-resnet50-fp32-inference.Dockerfile,ARG,5,"['TENSORFLOW_IMAGE=""intel/intel-optimized-tensorflow""', 'TENSORFLOW_TAG=""latest""', 'PACKAGE_DIR=model_packages', 'PACKAGE_NAME=""resnet50-fp32-inference""', 'MODEL_WORKSPACE']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-image-recognition-resnet50-fp32-inference.Dockerfile,FROM,1,['${TENSORFLOW_IMAGE}:${TENSORFLOW_TAG}']
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-image-recognition-resnet50-fp32-inference.Dockerfile,ENV,5,"['DEBIAN_FRONTEND=noninteractive', 'USER_ID=0', 'USER_NAME=root', 'GROUP_ID=0', 'GROUP_NAME=root']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-image-recognition-resnet50-fp32-inference.Dockerfile,RUN,6,"['apt-get update &&     apt-get install --no-install-recommends --fix-missing -y         libsm6         libxext6         python-tk &&     pip install requests', 'umask 002 && mkdir -p ${MODEL_WORKSPACE} && chgrp root ${MODEL_WORKSPACE} && chmod g+s+w,o+s+r ${MODEL_WORKSPACE}', 'chown -R root ${MODEL_WORKSPACE}/${PACKAGE_NAME} && chgrp -R root ${MODEL_WORKSPACE}/${PACKAGE_NAME} && chmod -R g+s+w ${MODEL_WORKSPACE}/${PACKAGE_NAME} && find ${MODEL_WORKSPACE}/${PACKAGE_NAME} -type d | xargs chmod o+r+x', 'apt-get update &&     apt-get install --no-install-recommends --fix-missing -y gosu', 'echo \'#!/bin/bash\\nUSER_ID=$USER_ID\\nUSER_NAME=$USER_NAME\\nGROUP_ID=$GROUP_ID\\nGROUP_NAME=$GROUP_NAME\\nif [[ $GROUP_NAME != root ]]; then\\n  groupadd -r -g $GROUP_ID $GROUP_NAME\\nfi\\nif [[ $USER_NAME != root ]]; then\\n  useradd --no-log-init -r -u $USER_ID -g $GROUP_NAME -s /bin/bash -M $USER_NAME\\nfi\\nexec /usr/sbin/gosu $USER_NAME:$GROUP_NAME ""$@""\\n \'>> /tmp/entrypoint.sh', 'chmod u+x,g+x /tmp/entrypoint.sh']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-image-recognition-resnet50-fp32-inference.Dockerfile,ADD,1,['--chown=0:0 ${PACKAGE_DIR}/${PACKAGE_NAME}.tar.gz ${MODEL_WORKSPACE}']
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-image-recognition-resnet50-fp32-inference.Dockerfile,WORKDIR,1,['${MODEL_WORKSPACE}/${PACKAGE_NAME}']
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-image-recognition-resnet50-fp32-inference.Dockerfile,ENTRYPOINT,1,"['[""/tmp/entrypoint.sh""]']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-language-translation-transformer-lt-official-fp32-inference.Dockerfile,ARG,5,"['TENSORFLOW_IMAGE=""intel/intel-optimized-tensorflow""', 'TENSORFLOW_TAG=""latest""', 'PACKAGE_DIR=model_packages', 'PACKAGE_NAME=""transformer-lt-official-fp32-inference""', 'MODEL_WORKSPACE']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-language-translation-transformer-lt-official-fp32-inference.Dockerfile,FROM,1,['${TENSORFLOW_IMAGE}:${TENSORFLOW_TAG}']
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-language-translation-transformer-lt-official-fp32-inference.Dockerfile,ENV,1,['DEBIAN_FRONTEND=noninteractive']
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-language-translation-transformer-lt-official-fp32-inference.Dockerfile,RUN,4,"['apt-get update &&     apt-get install --no-install-recommends --fix-missing -y         libsm6         libxext6         python-tk &&     pip install requests', 'umask 002 && mkdir -p ${MODEL_WORKSPACE} && chgrp root ${MODEL_WORKSPACE} && chmod g+s+w,o+s+r ${MODEL_WORKSPACE}', 'chown -R root ${MODEL_WORKSPACE}/${PACKAGE_NAME} && chgrp -R root ${MODEL_WORKSPACE}/${PACKAGE_NAME} && chmod -R g+s+w ${MODEL_WORKSPACE}/${PACKAGE_NAME} && find ${MODEL_WORKSPACE}/${PACKAGE_NAME} -type d | xargs chmod o+r+x', 'pip install Cython pandas']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-language-translation-transformer-lt-official-fp32-inference.Dockerfile,ADD,1,['--chown=0:0 ${PACKAGE_DIR}/${PACKAGE_NAME}.tar.gz ${MODEL_WORKSPACE}']
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-language-translation-transformer-lt-official-fp32-inference.Dockerfile,WORKDIR,1,['${MODEL_WORKSPACE}/${PACKAGE_NAME}']
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-language-modeling-bert-large-fp32-training.Dockerfile,ARG,8,"['TENSORFLOW_IMAGE=""intel/intel-optimized-tensorflow""', 'TENSORFLOW_TAG=""latest""', 'PY_VERSION=""3.8""', 'HOROVOD_VERSION=87094a4', 'PY_VERSION=""3.8""', 'PACKAGE_DIR=model_packages', 'PACKAGE_NAME=""bert-large-fp32-training""', 'MODEL_WORKSPACE']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-language-modeling-bert-large-fp32-training.Dockerfile,FROM,1,['${TENSORFLOW_IMAGE}:${TENSORFLOW_TAG}']
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-language-modeling-bert-large-fp32-training.Dockerfile,ENV,6,"['DEBIAN_FRONTEND=noninteractive', 'HOROVOD_WITHOUT_MXNET=1     HOROVOD_WITHOUT_PYTORCH=1     HOROVOD_WITH_TENSORFLOW=1', 'USER_ID=0', 'USER_NAME=root', 'GROUP_ID=0', 'GROUP_NAME=root']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-language-modeling-bert-large-fp32-training.Dockerfile,RUN,16,"['apt-get update &&     apt-get install --no-install-recommends --fix-missing -y         libsm6         libxext6         python-tk &&     pip install requests', 'apt-get update &&     apt-get install -y --no-install-recommends --fix-missing         build-essential         python${PY_VERSION}-dev', 'apt-get update &&     apt-get install --no-install-recommends --fix-missing -y     python3-apt     software-properties-common', 'apt-get update &&     apt-get install --no-install-recommends --fix-missing -y         gcc-8         g++-8 &&   update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 8 &&   update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 8', 'apt-get update &&     apt-get install -y --no-install-recommends --fix-missing curl', 'curl -LO https://storage.googleapis.com/kubernetes-release/release/v1.18.3/bin/linux/amd64/kubectl &&     chmod +x ./kubectl &&     mv kubectl /usr/local/bin', 'apt-get install --no-install-recommends --fix-missing -y     libopenmpi-dev     openmpi-bin     openmpi-common     openssh-client     openssh-server', 'apt-get install --no-install-recommends --fix-missing -y     openssh-client     openssh-server     systemd &&     systemctl enable ssh', 'apt-get update &&     apt-get install -y --no-install-recommends --fix-missing     cmake     git', 'pip install git+https://github.com/horovod/horovod.git@${HOROVOD_VERSION}', 'apt-get update &&     apt-get install -y --no-install-recommends --fix-missing         build-essential         python${PY_VERSION}-dev', 'umask 002 && mkdir -p ${MODEL_WORKSPACE} && chgrp root ${MODEL_WORKSPACE} && chmod g+s+w,o+s+r ${MODEL_WORKSPACE}', 'chown -R root ${MODEL_WORKSPACE}/${PACKAGE_NAME} && chgrp -R root ${MODEL_WORKSPACE}/${PACKAGE_NAME} && chmod -R g+s+w ${MODEL_WORKSPACE}/${PACKAGE_NAME} && find ${MODEL_WORKSPACE}/${PACKAGE_NAME} -type d | xargs chmod o+r+x', 'apt-get update &&     apt-get install --no-install-recommends --fix-missing -y gosu', 'echo \'#!/bin/bash\\nUSER_ID=$USER_ID\\nUSER_NAME=$USER_NAME\\nGROUP_ID=$GROUP_ID\\nGROUP_NAME=$GROUP_NAME\\nif [[ $GROUP_NAME != root ]]; then\\n  groupadd -r -g $GROUP_ID $GROUP_NAME\\nfi\\nif [[ $USER_NAME != root ]]; then\\n  useradd --no-log-init -r -u $USER_ID -g $GROUP_NAME -s /bin/bash -M $USER_NAME\\nfi\\nexec /usr/sbin/gosu $USER_NAME:$GROUP_NAME ""$@""\\n \'>> /tmp/entrypoint.sh', 'chmod u+x,g+x /tmp/entrypoint.sh']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-language-modeling-bert-large-fp32-training.Dockerfile,ADD,1,['--chown=0:0 ${PACKAGE_DIR}/${PACKAGE_NAME}.tar.gz ${MODEL_WORKSPACE}']
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-language-modeling-bert-large-fp32-training.Dockerfile,WORKDIR,1,['${MODEL_WORKSPACE}/${PACKAGE_NAME}']
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-language-modeling-bert-large-fp32-training.Dockerfile,ENTRYPOINT,1,"['[""/tmp/entrypoint.sh""]']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-image-recognition-resnet50v1-5-bfloat16-training.Dockerfile,ARG,7,"['TENSORFLOW_IMAGE=""intel/intel-optimized-tensorflow""', 'TENSORFLOW_TAG=""latest""', 'PY_VERSION=""3.8""', 'HOROVOD_VERSION=87094a4', 'PACKAGE_DIR=model_packages', 'PACKAGE_NAME=""resnet50v1-5-bfloat16-training""', 'MODEL_WORKSPACE']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-image-recognition-resnet50v1-5-bfloat16-training.Dockerfile,FROM,1,['${TENSORFLOW_IMAGE}:${TENSORFLOW_TAG}']
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-image-recognition-resnet50v1-5-bfloat16-training.Dockerfile,ENV,6,"['DEBIAN_FRONTEND=noninteractive', 'HOROVOD_WITHOUT_MXNET=1     HOROVOD_WITHOUT_PYTORCH=1     HOROVOD_WITH_TENSORFLOW=1', 'USER_ID=0', 'USER_NAME=root', 'GROUP_ID=0', 'GROUP_NAME=root']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-image-recognition-resnet50v1-5-bfloat16-training.Dockerfile,RUN,15,"['apt-get update &&     apt-get install --no-install-recommends --fix-missing -y         libsm6         libxext6         python-tk &&     pip install requests', 'apt-get update &&     apt-get install -y --no-install-recommends --fix-missing         build-essential         python${PY_VERSION}-dev', 'apt-get update &&     apt-get install --no-install-recommends --fix-missing -y     python3-apt     software-properties-common', 'apt-get update &&     apt-get install --no-install-recommends --fix-missing -y         gcc-8         g++-8 &&   update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 8 &&   update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 8', 'apt-get update &&     apt-get install -y --no-install-recommends --fix-missing curl', 'curl -LO https://storage.googleapis.com/kubernetes-release/release/v1.18.3/bin/linux/amd64/kubectl &&     chmod +x ./kubectl &&     mv kubectl /usr/local/bin', 'apt-get install --no-install-recommends --fix-missing -y     libopenmpi-dev     openmpi-bin     openmpi-common     openssh-client     openssh-server', 'apt-get install --no-install-recommends --fix-missing -y     openssh-client     openssh-server     systemd &&     systemctl enable ssh', 'apt-get update &&     apt-get install -y --no-install-recommends --fix-missing     cmake     git', 'pip install git+https://github.com/horovod/horovod.git@${HOROVOD_VERSION}', 'umask 002 && mkdir -p ${MODEL_WORKSPACE} && chgrp root ${MODEL_WORKSPACE} && chmod g+s+w,o+s+r ${MODEL_WORKSPACE}', 'chown -R root ${MODEL_WORKSPACE}/${PACKAGE_NAME} && chgrp -R root ${MODEL_WORKSPACE}/${PACKAGE_NAME} && chmod -R g+s+w ${MODEL_WORKSPACE}/${PACKAGE_NAME} && find ${MODEL_WORKSPACE}/${PACKAGE_NAME} -type d | xargs chmod o+r+x', 'apt-get update &&     apt-get install --no-install-recommends --fix-missing -y gosu', 'echo \'#!/bin/bash\\nUSER_ID=$USER_ID\\nUSER_NAME=$USER_NAME\\nGROUP_ID=$GROUP_ID\\nGROUP_NAME=$GROUP_NAME\\nif [[ $GROUP_NAME != root ]]; then\\n  groupadd -r -g $GROUP_ID $GROUP_NAME\\nfi\\nif [[ $USER_NAME != root ]]; then\\n  useradd --no-log-init -r -u $USER_ID -g $GROUP_NAME -s /bin/bash -M $USER_NAME\\nfi\\nexec /usr/sbin/gosu $USER_NAME:$GROUP_NAME ""$@""\\n \'>> /tmp/entrypoint.sh', 'chmod u+x,g+x /tmp/entrypoint.sh']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-image-recognition-resnet50v1-5-bfloat16-training.Dockerfile,ADD,1,['--chown=0:0 ${PACKAGE_DIR}/${PACKAGE_NAME}.tar.gz ${MODEL_WORKSPACE}']
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-image-recognition-resnet50v1-5-bfloat16-training.Dockerfile,WORKDIR,1,['${MODEL_WORKSPACE}/${PACKAGE_NAME}']
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-image-recognition-resnet50v1-5-bfloat16-training.Dockerfile,ENTRYPOINT,1,"['[""/tmp/entrypoint.sh""]']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-object-detection-ssd-resnet34-bfloat16-inference.Dockerfile,ARG,12,"['TENSORFLOW_IMAGE=""intel/intel-optimized-tensorflow""', 'TENSORFLOW_TAG=""latest""', 'PY_VERSION=""3.8""', 'TF_MODELS_BRANCH=""f505cecde2d8ebf6fe15f40fb8bc350b2b1ed5dc""', 'FETCH_PR', 'CODE_DIR=""/workspace/tf_models""', 'TF_MODELS_DIR=/tensorflow/models', 'PACKAGE_DIR=model_packages', 'PACKAGE_NAME=""ssd-resnet34-bfloat16-inference""', 'MODEL_WORKSPACE', 'TF_BENCHMARKS_BRANCH=""509b9d288937216ca7069f31cfb22aaa7db6a4a7""', 'TF_BENCHMARKS_DIR=""/workspace/ssd-resnet-benchmarks""']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-object-detection-ssd-resnet34-bfloat16-inference.Dockerfile,FROM,1,['${TENSORFLOW_IMAGE}:${TENSORFLOW_TAG}']
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-object-detection-ssd-resnet34-bfloat16-inference.Dockerfile,ENV,7,"['DEBIAN_FRONTEND=noninteractive', 'TF_MODELS_DIR=${CODE_DIR}', 'USER_ID=0', 'USER_NAME=root', 'GROUP_ID=0', 'GROUP_NAME=root', 'TF_BENCHMARKS_DIR=${TF_BENCHMARKS_DIR}']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-object-detection-ssd-resnet34-bfloat16-inference.Dockerfile,RUN,15,"['apt-get update &&     apt-get install --no-install-recommends --fix-missing -y         libsm6         libxext6         python-tk &&     pip install requests', 'apt-get update &&     apt-get install -y --no-install-recommends --fix-missing         build-essential         python${PY_VERSION}-dev', 'apt-get update &&     apt-get install --no-install-recommends --fix-missing -y git &&     git clone https://github.com/tensorflow/models.git ${CODE_DIR} &&     ( cd ${CODE_DIR} &&     if [ ! -z ""${FETCH_PR}"" ]; then git fetch origin ${FETCH_PR}; fi &&     git checkout ${TF_MODELS_BRANCH} )', ""pip install         Cython         contextlib2         jupyter         lxml         matplotlib         numpy>=1.17.4         'pillow>=8.1.2' &&     pip install pycocotools"", 'cd ${TF_MODELS_DIR}/research &&     apt-get install --no-install-recommends --fix-missing -y         unzip         wget &&     wget --quiet -O protobuf.zip https://github.com/google/protobuf/releases/download/v3.3.0/protoc-3.3.0-linux-x86_64.zip &&     unzip -o protobuf.zip &&     rm protobuf.zip &&     ./bin/protoc object_detection/protos/*.proto --python_out=. &&     apt-get remove -y         unzip         wget &&     apt-get autoremove -y', 'apt-get update &&     apt-get install --no-install-recommends --fix-missing -y         libgl1-mesa-glx         libglib2.0-0', 'pip install opencv-python', 'pip install tensorflow-addons==0.11.0', 'apt-get install --no-install-recommends --fix-missing -y google-perftools', 'umask 002 && mkdir -p ${MODEL_WORKSPACE} && chgrp root ${MODEL_WORKSPACE} && chmod g+s+w,o+s+r ${MODEL_WORKSPACE}', 'chown -R root ${MODEL_WORKSPACE}/${PACKAGE_NAME} && chgrp -R root ${MODEL_WORKSPACE}/${PACKAGE_NAME} && chmod -R g+s+w ${MODEL_WORKSPACE}/${PACKAGE_NAME} && find ${MODEL_WORKSPACE}/${PACKAGE_NAME} -type d | xargs chmod o+r+x', 'apt-get update &&     apt-get install --no-install-recommends --fix-missing -y gosu', 'echo \'#!/bin/bash\\nUSER_ID=$USER_ID\\nUSER_NAME=$USER_NAME\\nGROUP_ID=$GROUP_ID\\nGROUP_NAME=$GROUP_NAME\\nif [[ $GROUP_NAME != root ]]; then\\n  groupadd -r -g $GROUP_ID $GROUP_NAME\\nfi\\nif [[ $USER_NAME != root ]]; then\\n  useradd --no-log-init -r -u $USER_ID -g $GROUP_NAME -s /bin/bash -M $USER_NAME\\nfi\\nexec /usr/sbin/gosu $USER_NAME:$GROUP_NAME ""$@""\\n \'>> /tmp/entrypoint.sh', 'chmod u+x,g+x /tmp/entrypoint.sh', 'apt-get install --no-install-recommends --fix-missing -y git &&     git clone --single-branch https://github.com/tensorflow/benchmarks.git ${TF_BENCHMARKS_DIR} &&     ( cd ${TF_BENCHMARKS_DIR} &&     git checkout ${TF_BENCHMARKS_BRANCH} )']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-object-detection-ssd-resnet34-bfloat16-inference.Dockerfile,ADD,1,['--chown=0:0 ${PACKAGE_DIR}/${PACKAGE_NAME}.tar.gz ${MODEL_WORKSPACE}']
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-object-detection-ssd-resnet34-bfloat16-inference.Dockerfile,WORKDIR,1,['${MODEL_WORKSPACE}/${PACKAGE_NAME}']
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-object-detection-ssd-resnet34-bfloat16-inference.Dockerfile,ENTRYPOINT,1,"['[""/tmp/entrypoint.sh""]']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-recommendation-wide-deep-large-ds-int8-inference.Dockerfile,ARG,5,"['TENSORFLOW_IMAGE=""intel/intel-optimized-tensorflow""', 'TENSORFLOW_TAG=""1.15.2""', 'PACKAGE_DIR=model_packages', 'PACKAGE_NAME=""wide-deep-large-ds-int8-inference""', 'MODEL_WORKSPACE']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-recommendation-wide-deep-large-ds-int8-inference.Dockerfile,FROM,1,['${TENSORFLOW_IMAGE}:${TENSORFLOW_TAG}']
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-recommendation-wide-deep-large-ds-int8-inference.Dockerfile,ENV,6,"['DEBIAN_FRONTEND=noninteractive', 'DEBIAN_FRONTEND=noninteractive', 'USER_ID=0', 'USER_NAME=root', 'GROUP_ID=0', 'GROUP_NAME=root']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-recommendation-wide-deep-large-ds-int8-inference.Dockerfile,RUN,8,"['apt-get update &&     apt-get install --no-install-recommends --fix-missing -y         libsm6         libxext6         python-tk &&     pip install requests', 'apt-get install --no-install-recommends --fix-missing -y google-perftools', 'umask 002 && mkdir -p ${MODEL_WORKSPACE} && chgrp root ${MODEL_WORKSPACE} && chmod g+s+w,o+s+r ${MODEL_WORKSPACE}', 'chown -R root ${MODEL_WORKSPACE}/${PACKAGE_NAME} && chgrp -R root ${MODEL_WORKSPACE}/${PACKAGE_NAME} && chmod -R g+s+w ${MODEL_WORKSPACE}/${PACKAGE_NAME} && find ${MODEL_WORKSPACE}/${PACKAGE_NAME} -type d | xargs chmod o+r+x', 'apt-get update &&     apt-get install --no-install-recommends --fix-missing -y         python-pandas &&     pip install pandas', 'apt-get update &&     apt-get install --no-install-recommends --fix-missing -y gosu', 'echo \'#!/bin/bash\\nUSER_ID=$USER_ID\\nUSER_NAME=$USER_NAME\\nGROUP_ID=$GROUP_ID\\nGROUP_NAME=$GROUP_NAME\\nif [[ $GROUP_NAME != root ]]; then\\n  groupadd -r -g $GROUP_ID $GROUP_NAME\\nfi\\nif [[ $USER_NAME != root ]]; then\\n  useradd --no-log-init -r -u $USER_ID -g $GROUP_NAME -s /bin/bash -M $USER_NAME\\nfi\\nexec /usr/sbin/gosu $USER_NAME:$GROUP_NAME ""$@""\\n \'>> /tmp/entrypoint.sh', 'chmod u+x,g+x /tmp/entrypoint.sh']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-recommendation-wide-deep-large-ds-int8-inference.Dockerfile,ADD,1,['--chown=0:0 ${PACKAGE_DIR}/${PACKAGE_NAME}.tar.gz ${MODEL_WORKSPACE}']
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-recommendation-wide-deep-large-ds-int8-inference.Dockerfile,WORKDIR,1,['${MODEL_WORKSPACE}/${PACKAGE_NAME}']
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-recommendation-wide-deep-large-ds-int8-inference.Dockerfile,ENTRYPOINT,1,"['[""/tmp/entrypoint.sh""]']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-language-translation-transformer-mlperf-bfloat16-training.Dockerfile,ARG,7,"['TENSORFLOW_IMAGE=""intel/intel-optimized-tensorflow""', 'TENSORFLOW_TAG=""latest""', 'PY_VERSION=""3.8""', 'HOROVOD_VERSION=87094a4', 'PACKAGE_DIR=model_packages', 'PACKAGE_NAME=""transformer-mlperf-bfloat16-training""', 'MODEL_WORKSPACE']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-language-translation-transformer-mlperf-bfloat16-training.Dockerfile,FROM,1,['${TENSORFLOW_IMAGE}:${TENSORFLOW_TAG}']
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-language-translation-transformer-mlperf-bfloat16-training.Dockerfile,ENV,6,"['DEBIAN_FRONTEND=noninteractive', 'HOROVOD_WITHOUT_MXNET=1     HOROVOD_WITHOUT_PYTORCH=1     HOROVOD_WITH_TENSORFLOW=1', 'USER_ID=0', 'USER_NAME=root', 'GROUP_ID=0', 'GROUP_NAME=root']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-language-translation-transformer-mlperf-bfloat16-training.Dockerfile,RUN,15,"['apt-get update &&     apt-get install --no-install-recommends --fix-missing -y         libsm6         libxext6         python-tk &&     pip install requests', 'apt-get update &&     apt-get install -y --no-install-recommends --fix-missing         build-essential         python${PY_VERSION}-dev', 'apt-get update &&     apt-get install --no-install-recommends --fix-missing -y     python3-apt     software-properties-common', 'apt-get update &&     apt-get install --no-install-recommends --fix-missing -y         gcc-8         g++-8 &&   update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 8 &&   update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 8', 'apt-get update &&     apt-get install -y --no-install-recommends --fix-missing curl', 'curl -LO https://storage.googleapis.com/kubernetes-release/release/v1.18.3/bin/linux/amd64/kubectl &&     chmod +x ./kubectl &&     mv kubectl /usr/local/bin', 'apt-get install --no-install-recommends --fix-missing -y     libopenmpi-dev     openmpi-bin     openmpi-common     openssh-client     openssh-server', 'apt-get install --no-install-recommends --fix-missing -y     openssh-client     openssh-server     systemd &&     systemctl enable ssh', 'apt-get update &&     apt-get install -y --no-install-recommends --fix-missing     cmake     git', 'pip install git+https://github.com/horovod/horovod.git@${HOROVOD_VERSION}', 'umask 002 && mkdir -p ${MODEL_WORKSPACE} && chgrp root ${MODEL_WORKSPACE} && chmod g+s+w,o+s+r ${MODEL_WORKSPACE}', 'chown -R root ${MODEL_WORKSPACE}/${PACKAGE_NAME} && chgrp -R root ${MODEL_WORKSPACE}/${PACKAGE_NAME} && chmod -R g+s+w ${MODEL_WORKSPACE}/${PACKAGE_NAME} && find ${MODEL_WORKSPACE}/${PACKAGE_NAME} -type d | xargs chmod o+r+x', 'apt-get update &&     apt-get install --no-install-recommends --fix-missing -y gosu', 'echo \'#!/bin/bash\\nUSER_ID=$USER_ID\\nUSER_NAME=$USER_NAME\\nGROUP_ID=$GROUP_ID\\nGROUP_NAME=$GROUP_NAME\\nif [[ $GROUP_NAME != root ]]; then\\n  groupadd -r -g $GROUP_ID $GROUP_NAME\\nfi\\nif [[ $USER_NAME != root ]]; then\\n  useradd --no-log-init -r -u $USER_ID -g $GROUP_NAME -s /bin/bash -M $USER_NAME\\nfi\\nexec /usr/sbin/gosu $USER_NAME:$GROUP_NAME ""$@""\\n \'>> /tmp/entrypoint.sh', 'chmod u+x,g+x /tmp/entrypoint.sh']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-language-translation-transformer-mlperf-bfloat16-training.Dockerfile,ADD,1,['--chown=0:0 ${PACKAGE_DIR}/${PACKAGE_NAME}.tar.gz ${MODEL_WORKSPACE}']
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-language-translation-transformer-mlperf-bfloat16-training.Dockerfile,WORKDIR,1,['${MODEL_WORKSPACE}/${PACKAGE_NAME}']
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-language-translation-transformer-mlperf-bfloat16-training.Dockerfile,ENTRYPOINT,1,"['[""/tmp/entrypoint.sh""]']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-object-detection-rfcn-fp32-inference.Dockerfile,ARG,10,"['TENSORFLOW_IMAGE=""intel/intel-optimized-tensorflow""', 'TENSORFLOW_TAG=""latest""', 'PY_VERSION=""3.8""', 'TF_MODELS_BRANCH=""6c21084503b27a9ab118e1db25f79957d5ef540b""', 'FETCH_PR', 'CODE_DIR=/tensorflow/models', 'TF_MODELS_DIR=/tensorflow/models', 'PACKAGE_DIR=model_packages', 'PACKAGE_NAME=""rfcn-fp32-inference""', 'MODEL_WORKSPACE']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-object-detection-rfcn-fp32-inference.Dockerfile,FROM,1,['${TENSORFLOW_IMAGE}:${TENSORFLOW_TAG}']
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-object-detection-rfcn-fp32-inference.Dockerfile,ENV,6,"['DEBIAN_FRONTEND=noninteractive', 'TF_MODELS_DIR=${CODE_DIR}', 'USER_ID=0', 'USER_NAME=root', 'GROUP_ID=0', 'GROUP_NAME=root']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-object-detection-rfcn-fp32-inference.Dockerfile,RUN,12,"['apt-get update &&     apt-get install --no-install-recommends --fix-missing -y         libsm6         libxext6         python-tk &&     pip install requests', 'apt-get update &&     apt-get install -y --no-install-recommends --fix-missing         build-essential         python${PY_VERSION}-dev', 'apt-get update &&     apt-get install --no-install-recommends --fix-missing -y git &&     git clone https://github.com/tensorflow/models.git ${CODE_DIR} &&     ( cd ${CODE_DIR} &&     if [ ! -z ""${FETCH_PR}"" ]; then git fetch origin ${FETCH_PR}; fi &&     git checkout ${TF_MODELS_BRANCH} )', ""pip install         Cython         contextlib2         jupyter         lxml         matplotlib         numpy>=1.17.4         'pillow>=8.1.2' &&     pip install pycocotools"", 'cd ${TF_MODELS_DIR}/research &&     apt-get install --no-install-recommends --fix-missing -y         unzip         wget &&     wget --quiet -O protobuf.zip https://github.com/google/protobuf/releases/download/v3.3.0/protoc-3.3.0-linux-x86_64.zip &&     unzip -o protobuf.zip &&     rm protobuf.zip &&     ./bin/protoc object_detection/protos/*.proto --python_out=. &&     apt-get remove -y         unzip         wget &&     apt-get autoremove -y', 'umask 002 && mkdir -p ${MODEL_WORKSPACE} && chgrp root ${MODEL_WORKSPACE} && chmod g+s+w,o+s+r ${MODEL_WORKSPACE}', 'chown -R root ${MODEL_WORKSPACE}/${PACKAGE_NAME} && chgrp -R root ${MODEL_WORKSPACE}/${PACKAGE_NAME} && chmod -R g+s+w ${MODEL_WORKSPACE}/${PACKAGE_NAME} && find ${MODEL_WORKSPACE}/${PACKAGE_NAME} -type d | xargs chmod o+r+x', 'cd ${TF_MODELS_DIR} &&     git checkout 6c21084503b27a9ab118e1db25f79957d5ef540b &&     git apply --ignore-space-change --ignore-whitespace ${MODEL_WORKSPACE}/${PACKAGE_NAME}/models/object_detection/tensorflow/rfcn/inference/tf-2.0.patch', 'apt-get install --no-install-recommends --fix-missing -y tar', 'apt-get update &&     apt-get install --no-install-recommends --fix-missing -y gosu', 'echo \'#!/bin/bash\\nUSER_ID=$USER_ID\\nUSER_NAME=$USER_NAME\\nGROUP_ID=$GROUP_ID\\nGROUP_NAME=$GROUP_NAME\\nif [[ $GROUP_NAME != root ]]; then\\n  groupadd -r -g $GROUP_ID $GROUP_NAME\\nfi\\nif [[ $USER_NAME != root ]]; then\\n  useradd --no-log-init -r -u $USER_ID -g $GROUP_NAME -s /bin/bash -M $USER_NAME\\nfi\\nexec /usr/sbin/gosu $USER_NAME:$GROUP_NAME ""$@""\\n \'>> /tmp/entrypoint.sh', 'chmod u+x,g+x /tmp/entrypoint.sh']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-object-detection-rfcn-fp32-inference.Dockerfile,ADD,1,['--chown=0:0 ${PACKAGE_DIR}/${PACKAGE_NAME}.tar.gz ${MODEL_WORKSPACE}']
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-object-detection-rfcn-fp32-inference.Dockerfile,WORKDIR,1,['${MODEL_WORKSPACE}/${PACKAGE_NAME}']
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-object-detection-rfcn-fp32-inference.Dockerfile,ENTRYPOINT,1,"['[""/tmp/entrypoint.sh""]']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-recommendation-wide-deep-large-ds-fp32-training.Dockerfile,ARG,5,"['TENSORFLOW_IMAGE=""intel/intel-optimized-tensorflow""', 'TENSORFLOW_TAG=""latest""', 'PACKAGE_DIR=model_packages', 'PACKAGE_NAME=""wide-deep-large-ds-fp32-training""', 'MODEL_WORKSPACE']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-recommendation-wide-deep-large-ds-fp32-training.Dockerfile,FROM,1,['${TENSORFLOW_IMAGE}:${TENSORFLOW_TAG}']
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-recommendation-wide-deep-large-ds-fp32-training.Dockerfile,ENV,5,"['DEBIAN_FRONTEND=noninteractive', 'USER_ID=0', 'USER_NAME=root', 'GROUP_ID=0', 'GROUP_NAME=root']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-recommendation-wide-deep-large-ds-fp32-training.Dockerfile,RUN,7,"['apt-get update &&     apt-get install --no-install-recommends --fix-missing -y         libsm6         libxext6         python-tk &&     pip install requests', 'apt-get install --no-install-recommends --fix-missing -y google-perftools', 'umask 002 && mkdir -p ${MODEL_WORKSPACE} && chgrp root ${MODEL_WORKSPACE} && chmod g+s+w,o+s+r ${MODEL_WORKSPACE}', 'chown -R root ${MODEL_WORKSPACE}/${PACKAGE_NAME} && chgrp -R root ${MODEL_WORKSPACE}/${PACKAGE_NAME} && chmod -R g+s+w ${MODEL_WORKSPACE}/${PACKAGE_NAME} && find ${MODEL_WORKSPACE}/${PACKAGE_NAME} -type d | xargs chmod o+r+x', 'apt-get update &&     apt-get install --no-install-recommends --fix-missing -y gosu', 'echo \'#!/bin/bash\\nUSER_ID=$USER_ID\\nUSER_NAME=$USER_NAME\\nGROUP_ID=$GROUP_ID\\nGROUP_NAME=$GROUP_NAME\\nif [[ $GROUP_NAME != root ]]; then\\n  groupadd -r -g $GROUP_ID $GROUP_NAME\\nfi\\nif [[ $USER_NAME != root ]]; then\\n  useradd --no-log-init -r -u $USER_ID -g $GROUP_NAME -s /bin/bash -M $USER_NAME\\nfi\\nexec /usr/sbin/gosu $USER_NAME:$GROUP_NAME ""$@""\\n \'>> /tmp/entrypoint.sh', 'chmod u+x,g+x /tmp/entrypoint.sh']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-recommendation-wide-deep-large-ds-fp32-training.Dockerfile,ADD,1,['--chown=0:0 ${PACKAGE_DIR}/${PACKAGE_NAME}.tar.gz ${MODEL_WORKSPACE}']
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-recommendation-wide-deep-large-ds-fp32-training.Dockerfile,WORKDIR,1,['${MODEL_WORKSPACE}/${PACKAGE_NAME}']
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-recommendation-wide-deep-large-ds-fp32-training.Dockerfile,ENTRYPOINT,1,"['[""/tmp/entrypoint.sh""]']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-image-recognition-resnet50v1-5-fp32-training.Dockerfile,ARG,7,"['TENSORFLOW_IMAGE=""intel/intel-optimized-tensorflow""', 'TENSORFLOW_TAG=""latest""', 'PY_VERSION=""3.8""', 'HOROVOD_VERSION=87094a4', 'PACKAGE_DIR=model_packages', 'PACKAGE_NAME=""resnet50v1-5-fp32-training""', 'MODEL_WORKSPACE']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-image-recognition-resnet50v1-5-fp32-training.Dockerfile,FROM,1,['${TENSORFLOW_IMAGE}:${TENSORFLOW_TAG}']
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-image-recognition-resnet50v1-5-fp32-training.Dockerfile,ENV,6,"['DEBIAN_FRONTEND=noninteractive', 'HOROVOD_WITHOUT_MXNET=1     HOROVOD_WITHOUT_PYTORCH=1     HOROVOD_WITH_TENSORFLOW=1', 'USER_ID=0', 'USER_NAME=root', 'GROUP_ID=0', 'GROUP_NAME=root']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-image-recognition-resnet50v1-5-fp32-training.Dockerfile,RUN,16,"['apt-get update &&     apt-get install --no-install-recommends --fix-missing -y         libsm6         libxext6         python-tk &&     pip install requests', 'apt-get update &&     apt-get install -y --no-install-recommends --fix-missing         build-essential         python${PY_VERSION}-dev', 'apt-get update &&     apt-get install --no-install-recommends --fix-missing -y     python3-apt     software-properties-common', 'apt-get update &&     apt-get install --no-install-recommends --fix-missing -y         gcc-8         g++-8 &&   update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 8 &&   update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 8', 'apt-get update &&     apt-get install -y --no-install-recommends --fix-missing curl', 'curl -LO https://storage.googleapis.com/kubernetes-release/release/v1.18.3/bin/linux/amd64/kubectl &&     chmod +x ./kubectl &&     mv kubectl /usr/local/bin', 'apt-get install --no-install-recommends --fix-missing -y     libopenmpi-dev     openmpi-bin     openmpi-common     openssh-client     openssh-server', 'apt-get install --no-install-recommends --fix-missing -y     openssh-client     openssh-server     systemd &&     systemctl enable ssh', 'apt-get update &&     apt-get install -y --no-install-recommends --fix-missing     cmake     git', 'pip install git+https://github.com/horovod/horovod.git@${HOROVOD_VERSION}', 'apt-get update &&     apt-get install -y --no-install-recommends --fix-missing numactl', 'umask 002 && mkdir -p ${MODEL_WORKSPACE} && chgrp root ${MODEL_WORKSPACE} && chmod g+s+w,o+s+r ${MODEL_WORKSPACE}', 'chown -R root ${MODEL_WORKSPACE}/${PACKAGE_NAME} && chgrp -R root ${MODEL_WORKSPACE}/${PACKAGE_NAME} && chmod -R g+s+w ${MODEL_WORKSPACE}/${PACKAGE_NAME} && find ${MODEL_WORKSPACE}/${PACKAGE_NAME} -type d | xargs chmod o+r+x', 'apt-get update &&     apt-get install --no-install-recommends --fix-missing -y gosu', 'echo \'#!/bin/bash\\nUSER_ID=$USER_ID\\nUSER_NAME=$USER_NAME\\nGROUP_ID=$GROUP_ID\\nGROUP_NAME=$GROUP_NAME\\nif [[ $GROUP_NAME != root ]]; then\\n  groupadd -r -g $GROUP_ID $GROUP_NAME\\nfi\\nif [[ $USER_NAME != root ]]; then\\n  useradd --no-log-init -r -u $USER_ID -g $GROUP_NAME -s /bin/bash -M $USER_NAME\\nfi\\nexec /usr/sbin/gosu $USER_NAME:$GROUP_NAME ""$@""\\n \'>> /tmp/entrypoint.sh', 'chmod u+x,g+x /tmp/entrypoint.sh']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-image-recognition-resnet50v1-5-fp32-training.Dockerfile,ADD,1,['--chown=0:0 ${PACKAGE_DIR}/${PACKAGE_NAME}.tar.gz ${MODEL_WORKSPACE}']
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-image-recognition-resnet50v1-5-fp32-training.Dockerfile,WORKDIR,1,['${MODEL_WORKSPACE}/${PACKAGE_NAME}']
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-image-recognition-resnet50v1-5-fp32-training.Dockerfile,ENTRYPOINT,1,"['[""/tmp/entrypoint.sh""]']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-object-detection-ssd-resnet34-fp32-inference.Dockerfile,ARG,12,"['TENSORFLOW_IMAGE=""intel/intel-optimized-tensorflow""', 'TENSORFLOW_TAG=""latest""', 'PY_VERSION=""3.8""', 'TF_MODELS_BRANCH=""f505cecde2d8ebf6fe15f40fb8bc350b2b1ed5dc""', 'FETCH_PR', 'CODE_DIR=/tensorflow/models', 'TF_MODELS_DIR=/tensorflow/models', 'TF_BENCHMARKS_BRANCH=""509b9d288937216ca7069f31cfb22aaa7db6a4a7""', 'TF_BENCHMARKS_DIR=""/tensorflow/ssd-resnet-benchmarks""', 'PACKAGE_DIR=model_packages', 'PACKAGE_NAME=""ssd-resnet34-fp32-inference""', 'MODEL_WORKSPACE']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-object-detection-ssd-resnet34-fp32-inference.Dockerfile,FROM,1,['${TENSORFLOW_IMAGE}:${TENSORFLOW_TAG}']
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-object-detection-ssd-resnet34-fp32-inference.Dockerfile,ENV,7,"['DEBIAN_FRONTEND=noninteractive', 'TF_MODELS_DIR=${CODE_DIR}', 'TF_BENCHMARKS_DIR=${TF_BENCHMARKS_DIR}', 'USER_ID=0', 'USER_NAME=root', 'GROUP_ID=0', 'GROUP_NAME=root']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-object-detection-ssd-resnet34-fp32-inference.Dockerfile,RUN,15,"['apt-get update &&     apt-get install --no-install-recommends --fix-missing -y         libsm6         libxext6         python-tk &&     pip install requests', 'apt-get update &&     apt-get install -y --no-install-recommends --fix-missing         build-essential         python${PY_VERSION}-dev', 'apt-get update &&     apt-get install --no-install-recommends --fix-missing -y git &&     git clone https://github.com/tensorflow/models.git ${CODE_DIR} &&     ( cd ${CODE_DIR} &&     if [ ! -z ""${FETCH_PR}"" ]; then git fetch origin ${FETCH_PR}; fi &&     git checkout ${TF_MODELS_BRANCH} )', ""pip install         Cython         contextlib2         jupyter         lxml         matplotlib         numpy>=1.17.4         'pillow>=8.1.2' &&     pip install pycocotools"", 'cd ${TF_MODELS_DIR}/research &&     apt-get install --no-install-recommends --fix-missing -y         unzip         wget &&     wget --quiet -O protobuf.zip https://github.com/google/protobuf/releases/download/v3.3.0/protoc-3.3.0-linux-x86_64.zip &&     unzip -o protobuf.zip &&     rm protobuf.zip &&     ./bin/protoc object_detection/protos/*.proto --python_out=. &&     apt-get remove -y         unzip         wget &&     apt-get autoremove -y', 'apt-get update &&     apt-get install -y --no-install-recommends --fix-missing numactl', 'apt-get update &&     apt-get install --no-install-recommends --fix-missing -y         libgl1-mesa-glx         libglib2.0-0', 'pip install opencv-python', 'pip install tensorflow-addons==0.11.0', 'apt-get install --no-install-recommends --fix-missing -y git &&     git clone --single-branch https://github.com/tensorflow/benchmarks.git ${TF_BENCHMARKS_DIR} &&     ( cd ${TF_BENCHMARKS_DIR} &&     git checkout ${TF_BENCHMARKS_BRANCH} )', 'umask 002 && mkdir -p ${MODEL_WORKSPACE} && chgrp root ${MODEL_WORKSPACE} && chmod g+s+w,o+s+r ${MODEL_WORKSPACE}', 'chown -R root ${MODEL_WORKSPACE}/${PACKAGE_NAME} && chgrp -R root ${MODEL_WORKSPACE}/${PACKAGE_NAME} && chmod -R g+s+w ${MODEL_WORKSPACE}/${PACKAGE_NAME} && find ${MODEL_WORKSPACE}/${PACKAGE_NAME} -type d | xargs chmod o+r+x', 'apt-get update &&     apt-get install --no-install-recommends --fix-missing -y gosu', 'echo \'#!/bin/bash\\nUSER_ID=$USER_ID\\nUSER_NAME=$USER_NAME\\nGROUP_ID=$GROUP_ID\\nGROUP_NAME=$GROUP_NAME\\nif [[ $GROUP_NAME != root ]]; then\\n  groupadd -r -g $GROUP_ID $GROUP_NAME\\nfi\\nif [[ $USER_NAME != root ]]; then\\n  useradd --no-log-init -r -u $USER_ID -g $GROUP_NAME -s /bin/bash -M $USER_NAME\\nfi\\nexec /usr/sbin/gosu $USER_NAME:$GROUP_NAME ""$@""\\n \'>> /tmp/entrypoint.sh', 'chmod u+x,g+x /tmp/entrypoint.sh']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-object-detection-ssd-resnet34-fp32-inference.Dockerfile,ADD,1,['--chown=0:0 ${PACKAGE_DIR}/${PACKAGE_NAME}.tar.gz ${MODEL_WORKSPACE}']
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-object-detection-ssd-resnet34-fp32-inference.Dockerfile,WORKDIR,1,['${MODEL_WORKSPACE}/${PACKAGE_NAME}']
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-object-detection-ssd-resnet34-fp32-inference.Dockerfile,ENTRYPOINT,1,"['[""/tmp/entrypoint.sh""]']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-text-to-speech-wavenet-fp32-inference.Dockerfile,ARG,8,"['TENSORFLOW_IMAGE=""intel/intel-optimized-tensorflow""', 'TENSORFLOW_TAG=""1.15.2""', 'TF_WAVENET_BRANCH=""cpu_optimized""', 'FETCH_PR=""pull/352/head:cpu_optimized""', 'CODE_DIR=/tensorflow-wavenet', 'PACKAGE_DIR=model_packages', 'PACKAGE_NAME=""wavenet-fp32-inference""', 'MODEL_WORKSPACE']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-text-to-speech-wavenet-fp32-inference.Dockerfile,FROM,1,['${TENSORFLOW_IMAGE}:${TENSORFLOW_TAG}']
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-text-to-speech-wavenet-fp32-inference.Dockerfile,ENV,6,"['DEBIAN_FRONTEND=noninteractive', 'TF_WAVENET_DIR=${CODE_DIR}', 'USER_ID=0', 'USER_NAME=root', 'GROUP_ID=0', 'GROUP_NAME=root']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-text-to-speech-wavenet-fp32-inference.Dockerfile,RUN,9,"['apt-get update &&     apt-get install --no-install-recommends --fix-missing -y         libsm6         libxext6         python-tk &&     pip install requests', 'apt-get update &&     apt-get install --no-install-recommends --fix-missing -y git &&     git clone https://github.com/ibab/tensorflow-wavenet.git ${CODE_DIR} &&     ( cd ${CODE_DIR} &&     if [ ! -z ""$FETCH_PR"" ]; then git fetch origin ${FETCH_PR}; fi &&     git checkout ${TF_WAVENET_BRANCH} )', 'pip install librosa==0.5', 'umask 002 && mkdir -p ${MODEL_WORKSPACE} && chgrp root ${MODEL_WORKSPACE} && chmod g+s+w,o+s+r ${MODEL_WORKSPACE}', 'chown -R root ${MODEL_WORKSPACE}/${PACKAGE_NAME} && chgrp -R root ${MODEL_WORKSPACE}/${PACKAGE_NAME} && chmod -R g+s+w ${MODEL_WORKSPACE}/${PACKAGE_NAME} && find ${MODEL_WORKSPACE}/${PACKAGE_NAME} -type d | xargs chmod o+r+x', 'apt-get install --no-install-recommends --fix-missing -y tar', 'apt-get update &&     apt-get install --no-install-recommends --fix-missing -y gosu', 'echo \'#!/bin/bash\\nUSER_ID=$USER_ID\\nUSER_NAME=$USER_NAME\\nGROUP_ID=$GROUP_ID\\nGROUP_NAME=$GROUP_NAME\\nif [[ $GROUP_NAME != root ]]; then\\n  groupadd -r -g $GROUP_ID $GROUP_NAME\\nfi\\nif [[ $USER_NAME != root ]]; then\\n  useradd --no-log-init -r -u $USER_ID -g $GROUP_NAME -s /bin/bash -M $USER_NAME\\nfi\\nexec /usr/sbin/gosu $USER_NAME:$GROUP_NAME ""$@""\\n \'>> /tmp/entrypoint.sh', 'chmod u+x,g+x /tmp/entrypoint.sh']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-text-to-speech-wavenet-fp32-inference.Dockerfile,ADD,1,['--chown=0:0 ${PACKAGE_DIR}/${PACKAGE_NAME}.tar.gz ${MODEL_WORKSPACE}']
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-text-to-speech-wavenet-fp32-inference.Dockerfile,WORKDIR,1,['${MODEL_WORKSPACE}/${PACKAGE_NAME}']
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-text-to-speech-wavenet-fp32-inference.Dockerfile,ENTRYPOINT,1,"['[""/tmp/entrypoint.sh""]']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-object-detection-ssd-mobilenet-fp32-inference.Dockerfile,ARG,10,"['TENSORFLOW_IMAGE=""intel/intel-optimized-tensorflow""', 'TENSORFLOW_TAG=""latest""', 'PY_VERSION=""3.8""', 'TF_MODELS_BRANCH', 'FETCH_PR', 'CODE_DIR=/tensorflow/models', 'TF_MODELS_DIR=/tensorflow/models', 'PACKAGE_DIR=model_packages', 'PACKAGE_NAME=""ssd-mobilenet-fp32-inference""', 'MODEL_WORKSPACE']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-object-detection-ssd-mobilenet-fp32-inference.Dockerfile,FROM,1,['${TENSORFLOW_IMAGE}:${TENSORFLOW_TAG}']
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-object-detection-ssd-mobilenet-fp32-inference.Dockerfile,ENV,6,"['DEBIAN_FRONTEND=noninteractive', 'TF_MODELS_DIR=${CODE_DIR}', 'USER_ID=0', 'USER_NAME=root', 'GROUP_ID=0', 'GROUP_NAME=root']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-object-detection-ssd-mobilenet-fp32-inference.Dockerfile,RUN,11,"['apt-get update &&     apt-get install --no-install-recommends --fix-missing -y         libsm6         libxext6         python-tk &&     pip install requests', 'apt-get update &&     apt-get install -y --no-install-recommends --fix-missing         build-essential         python${PY_VERSION}-dev', 'apt-get update &&     apt-get install --no-install-recommends --fix-missing -y git &&     git clone https://github.com/tensorflow/models.git ${CODE_DIR} &&     ( cd ${CODE_DIR} &&     if [ ! -z ""${FETCH_PR}"" ]; then git fetch origin ${FETCH_PR}; fi &&     git checkout ${TF_MODELS_BRANCH} )', ""pip install         Cython         contextlib2         jupyter         lxml         matplotlib         numpy>=1.17.4         'pillow>=8.1.2' &&     pip install pycocotools"", 'cd ${TF_MODELS_DIR}/research &&     apt-get install --no-install-recommends --fix-missing -y         unzip         wget &&     wget --quiet -O protobuf.zip https://github.com/google/protobuf/releases/download/v3.3.0/protoc-3.3.0-linux-x86_64.zip &&     unzip -o protobuf.zip &&     rm protobuf.zip &&     ./bin/protoc object_detection/protos/*.proto --python_out=. &&     apt-get remove -y         unzip         wget &&     apt-get autoremove -y', 'apt-get update &&     apt-get install -y --no-install-recommends --fix-missing numactl', 'umask 002 && mkdir -p ${MODEL_WORKSPACE} && chgrp root ${MODEL_WORKSPACE} && chmod g+s+w,o+s+r ${MODEL_WORKSPACE}', 'chown -R root ${MODEL_WORKSPACE}/${PACKAGE_NAME} && chgrp -R root ${MODEL_WORKSPACE}/${PACKAGE_NAME} && chmod -R g+s+w ${MODEL_WORKSPACE}/${PACKAGE_NAME} && find ${MODEL_WORKSPACE}/${PACKAGE_NAME} -type d | xargs chmod o+r+x', 'apt-get update &&     apt-get install --no-install-recommends --fix-missing -y gosu', 'echo \'#!/bin/bash\\nUSER_ID=$USER_ID\\nUSER_NAME=$USER_NAME\\nGROUP_ID=$GROUP_ID\\nGROUP_NAME=$GROUP_NAME\\nif [[ $GROUP_NAME != root ]]; then\\n  groupadd -r -g $GROUP_ID $GROUP_NAME\\nfi\\nif [[ $USER_NAME != root ]]; then\\n  useradd --no-log-init -r -u $USER_ID -g $GROUP_NAME -s /bin/bash -M $USER_NAME\\nfi\\nexec /usr/sbin/gosu $USER_NAME:$GROUP_NAME ""$@""\\n \'>> /tmp/entrypoint.sh', 'chmod u+x,g+x /tmp/entrypoint.sh']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-object-detection-ssd-mobilenet-fp32-inference.Dockerfile,ADD,1,['--chown=0:0 ${PACKAGE_DIR}/${PACKAGE_NAME}.tar.gz ${MODEL_WORKSPACE}']
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-object-detection-ssd-mobilenet-fp32-inference.Dockerfile,WORKDIR,1,['${MODEL_WORKSPACE}/${PACKAGE_NAME}']
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-object-detection-ssd-mobilenet-fp32-inference.Dockerfile,ENTRYPOINT,1,"['[""/tmp/entrypoint.sh""]']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-language-translation-mlperf-gnmt-fp32-inference.Dockerfile,ARG,5,"['TENSORFLOW_IMAGE=""intel/intel-optimized-tensorflow""', 'TENSORFLOW_TAG=""latest""', 'PACKAGE_DIR=model_packages', 'PACKAGE_NAME=""mlperf-gnmt-fp32-inference""', 'MODEL_WORKSPACE']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-language-translation-mlperf-gnmt-fp32-inference.Dockerfile,FROM,1,['${TENSORFLOW_IMAGE}:${TENSORFLOW_TAG}']
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-language-translation-mlperf-gnmt-fp32-inference.Dockerfile,ENV,6,"['DEBIAN_FRONTEND=noninteractive', 'BAZEL_VERSION 3.0.0', 'USER_ID=0', 'USER_NAME=root', 'GROUP_ID=0', 'GROUP_NAME=root']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-language-translation-mlperf-gnmt-fp32-inference.Dockerfile,RUN,9,"['apt-get update &&     apt-get install --no-install-recommends --fix-missing -y         libsm6         libxext6         python-tk &&     pip install requests', 'umask 002 && mkdir -p ${MODEL_WORKSPACE} && chgrp root ${MODEL_WORKSPACE} && chmod g+s+w,o+s+r ${MODEL_WORKSPACE}', 'chown -R root ${MODEL_WORKSPACE}/${PACKAGE_NAME} && chgrp -R root ${MODEL_WORKSPACE}/${PACKAGE_NAME} && chmod -R g+s+w ${MODEL_WORKSPACE}/${PACKAGE_NAME} && find ${MODEL_WORKSPACE}/${PACKAGE_NAME} -type d | xargs chmod o+r+x', 'apt-get update && apt-get install -y --no-install-recommends         build-essential         ca-certificates         curl         unzip         git         rsync         &&     apt-get clean &&     rm -rf /var/lib/apt/lists/*', 'mkdir /bazel &&     cd /bazel &&     curl -H ""User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/57.0.2987.133 Safari/537.36"" -fSsL -O https://github.com/bazelbuild/bazel/releases/download/$BAZEL_VERSION/bazel-$BAZEL_VERSION-installer-linux-x86_64.sh &&     curl -H ""User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/57.0.2987.133 Safari/537.36"" -fSsL -o /bazel/LICENSE.txt https://raw.githubusercontent.com/bazelbuild/bazel/master/LICENSE &&     chmod +x bazel-*.sh &&     ./bazel-$BAZEL_VERSION-installer-linux-x86_64.sh &&     cd / &&     rm -f /bazel/bazel-$BAZEL_VERSION-installer-linux-x86_64.sh', 'git clone --single-branch --branch=r0.5 https://github.com/tensorflow/addons.git &&     (cd addons &&     git apply ${MODEL_WORKSPACE}/${PACKAGE_NAME}/models/language_translation/tensorflow/mlperf_gnmt/gnmt-v0.5.2.patch &&     echo ""y"" | bash configure.sh  &&     bazel build --enable_runfiles build_pip_pkg &&     bazel-bin/build_pip_pkg artifacts &&     pip install artifacts/tensorflow_addons-*.whl --no-deps) &&     rm -rf ./addons', 'apt-get update &&     apt-get install --no-install-recommends --fix-missing -y gosu', 'echo \'#!/bin/bash\\nUSER_ID=$USER_ID\\nUSER_NAME=$USER_NAME\\nGROUP_ID=$GROUP_ID\\nGROUP_NAME=$GROUP_NAME\\nif [[ $GROUP_NAME != root ]]; then\\n  groupadd -r -g $GROUP_ID $GROUP_NAME\\nfi\\nif [[ $USER_NAME != root ]]; then\\n  useradd --no-log-init -r -u $USER_ID -g $GROUP_NAME -s /bin/bash -M $USER_NAME\\nfi\\nexec /usr/sbin/gosu $USER_NAME:$GROUP_NAME ""$@""\\n \'>> /tmp/entrypoint.sh', 'chmod u+x,g+x /tmp/entrypoint.sh']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-language-translation-mlperf-gnmt-fp32-inference.Dockerfile,ADD,1,['--chown=0:0 ${PACKAGE_DIR}/${PACKAGE_NAME}.tar.gz ${MODEL_WORKSPACE}']
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-language-translation-mlperf-gnmt-fp32-inference.Dockerfile,WORKDIR,3,"['${MODEL_WORKSPACE}/${PACKAGE_NAME}', '/', '${MODEL_WORKSPACE}/${PACKAGE_NAME}']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-language-translation-mlperf-gnmt-fp32-inference.Dockerfile,ENTRYPOINT,1,"['[""/tmp/entrypoint.sh""]']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-image-recognition-mobilenet-v1-fp32-inference.Dockerfile,ARG,5,"['TENSORFLOW_IMAGE=""intel/intel-optimized-tensorflow""', 'TENSORFLOW_TAG=""latest""', 'PACKAGE_DIR=model_packages', 'PACKAGE_NAME=""mobilenet-v1-fp32-inference""', 'MODEL_WORKSPACE']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-image-recognition-mobilenet-v1-fp32-inference.Dockerfile,FROM,1,['${TENSORFLOW_IMAGE}:${TENSORFLOW_TAG}']
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-image-recognition-mobilenet-v1-fp32-inference.Dockerfile,ENV,5,"['DEBIAN_FRONTEND=noninteractive', 'USER_ID=0', 'USER_NAME=root', 'GROUP_ID=0', 'GROUP_NAME=root']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-image-recognition-mobilenet-v1-fp32-inference.Dockerfile,RUN,7,"['apt-get update &&     apt-get install --no-install-recommends --fix-missing -y         libsm6         libxext6         python-tk &&     pip install requests', 'apt-get update &&     apt-get install -y --no-install-recommends --fix-missing numactl', 'umask 002 && mkdir -p ${MODEL_WORKSPACE} && chgrp root ${MODEL_WORKSPACE} && chmod g+s+w,o+s+r ${MODEL_WORKSPACE}', 'chown -R root ${MODEL_WORKSPACE}/${PACKAGE_NAME} && chgrp -R root ${MODEL_WORKSPACE}/${PACKAGE_NAME} && chmod -R g+s+w ${MODEL_WORKSPACE}/${PACKAGE_NAME} && find ${MODEL_WORKSPACE}/${PACKAGE_NAME} -type d | xargs chmod o+r+x', 'apt-get update &&     apt-get install --no-install-recommends --fix-missing -y gosu', 'echo \'#!/bin/bash\\nUSER_ID=$USER_ID\\nUSER_NAME=$USER_NAME\\nGROUP_ID=$GROUP_ID\\nGROUP_NAME=$GROUP_NAME\\nif [[ $GROUP_NAME != root ]]; then\\n  groupadd -r -g $GROUP_ID $GROUP_NAME\\nfi\\nif [[ $USER_NAME != root ]]; then\\n  useradd --no-log-init -r -u $USER_ID -g $GROUP_NAME -s /bin/bash -M $USER_NAME\\nfi\\nexec /usr/sbin/gosu $USER_NAME:$GROUP_NAME ""$@""\\n \'>> /tmp/entrypoint.sh', 'chmod u+x,g+x /tmp/entrypoint.sh']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-image-recognition-mobilenet-v1-fp32-inference.Dockerfile,ADD,1,['--chown=0:0 ${PACKAGE_DIR}/${PACKAGE_NAME}.tar.gz ${MODEL_WORKSPACE}']
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-image-recognition-mobilenet-v1-fp32-inference.Dockerfile,WORKDIR,1,['${MODEL_WORKSPACE}/${PACKAGE_NAME}']
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-image-recognition-mobilenet-v1-fp32-inference.Dockerfile,ENTRYPOINT,1,"['[""/tmp/entrypoint.sh""]']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-image-recognition-resnet50v1-5-fp32-inference.Dockerfile,ARG,5,"['TENSORFLOW_IMAGE=""intel/intel-optimized-tensorflow""', 'TENSORFLOW_TAG=""latest""', 'PACKAGE_DIR=model_packages', 'PACKAGE_NAME=""resnet50v1-5-fp32-inference""', 'MODEL_WORKSPACE']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-image-recognition-resnet50v1-5-fp32-inference.Dockerfile,FROM,1,['${TENSORFLOW_IMAGE}:${TENSORFLOW_TAG}']
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-image-recognition-resnet50v1-5-fp32-inference.Dockerfile,ENV,5,"['DEBIAN_FRONTEND=noninteractive', 'USER_ID=0', 'USER_NAME=root', 'GROUP_ID=0', 'GROUP_NAME=root']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-image-recognition-resnet50v1-5-fp32-inference.Dockerfile,RUN,7,"['apt-get update &&     apt-get install --no-install-recommends --fix-missing -y         libsm6         libxext6         python-tk &&     pip install requests', 'apt-get update &&     apt-get install -y --no-install-recommends --fix-missing numactl', 'umask 002 && mkdir -p ${MODEL_WORKSPACE} && chgrp root ${MODEL_WORKSPACE} && chmod g+s+w,o+s+r ${MODEL_WORKSPACE}', 'chown -R root ${MODEL_WORKSPACE}/${PACKAGE_NAME} && chgrp -R root ${MODEL_WORKSPACE}/${PACKAGE_NAME} && chmod -R g+s+w ${MODEL_WORKSPACE}/${PACKAGE_NAME} && find ${MODEL_WORKSPACE}/${PACKAGE_NAME} -type d | xargs chmod o+r+x', 'apt-get update &&     apt-get install --no-install-recommends --fix-missing -y gosu', 'echo \'#!/bin/bash\\nUSER_ID=$USER_ID\\nUSER_NAME=$USER_NAME\\nGROUP_ID=$GROUP_ID\\nGROUP_NAME=$GROUP_NAME\\nif [[ $GROUP_NAME != root ]]; then\\n  groupadd -r -g $GROUP_ID $GROUP_NAME\\nfi\\nif [[ $USER_NAME != root ]]; then\\n  useradd --no-log-init -r -u $USER_ID -g $GROUP_NAME -s /bin/bash -M $USER_NAME\\nfi\\nexec /usr/sbin/gosu $USER_NAME:$GROUP_NAME ""$@""\\n \'>> /tmp/entrypoint.sh', 'chmod u+x,g+x /tmp/entrypoint.sh']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-image-recognition-resnet50v1-5-fp32-inference.Dockerfile,ADD,1,['--chown=0:0 ${PACKAGE_DIR}/${PACKAGE_NAME}.tar.gz ${MODEL_WORKSPACE}']
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-image-recognition-resnet50v1-5-fp32-inference.Dockerfile,WORKDIR,1,['${MODEL_WORKSPACE}/${PACKAGE_NAME}']
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-image-recognition-resnet50v1-5-fp32-inference.Dockerfile,ENTRYPOINT,1,"['[""/tmp/entrypoint.sh""]']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-object-detection-ssd-mobilenet-int8-inference.Dockerfile,ARG,10,"['TENSORFLOW_IMAGE=""intel/intel-optimized-tensorflow""', 'TENSORFLOW_TAG=""latest""', 'PY_VERSION=""3.8""', 'TF_MODELS_BRANCH', 'FETCH_PR', 'CODE_DIR=/tensorflow/models', 'TF_MODELS_DIR=/tensorflow/models', 'PACKAGE_DIR=model_packages', 'PACKAGE_NAME=""ssd-mobilenet-int8-inference""', 'MODEL_WORKSPACE']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-object-detection-ssd-mobilenet-int8-inference.Dockerfile,FROM,1,['${TENSORFLOW_IMAGE}:${TENSORFLOW_TAG}']
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-object-detection-ssd-mobilenet-int8-inference.Dockerfile,ENV,6,"['DEBIAN_FRONTEND=noninteractive', 'TF_MODELS_DIR=${CODE_DIR}', 'USER_ID=0', 'USER_NAME=root', 'GROUP_ID=0', 'GROUP_NAME=root']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-object-detection-ssd-mobilenet-int8-inference.Dockerfile,RUN,11,"['apt-get update &&     apt-get install --no-install-recommends --fix-missing -y         libsm6         libxext6         python-tk &&     pip install requests', 'apt-get update &&     apt-get install -y --no-install-recommends --fix-missing         build-essential         python${PY_VERSION}-dev', 'apt-get update &&     apt-get install --no-install-recommends --fix-missing -y git &&     git clone https://github.com/tensorflow/models.git ${CODE_DIR} &&     ( cd ${CODE_DIR} &&     if [ ! -z ""${FETCH_PR}"" ]; then git fetch origin ${FETCH_PR}; fi &&     git checkout ${TF_MODELS_BRANCH} )', ""pip install         Cython         contextlib2         jupyter         lxml         matplotlib         numpy>=1.17.4         'pillow>=8.1.2' &&     pip install pycocotools"", 'cd ${TF_MODELS_DIR}/research &&     apt-get install --no-install-recommends --fix-missing -y         unzip         wget &&     wget --quiet -O protobuf.zip https://github.com/google/protobuf/releases/download/v3.3.0/protoc-3.3.0-linux-x86_64.zip &&     unzip -o protobuf.zip &&     rm protobuf.zip &&     ./bin/protoc object_detection/protos/*.proto --python_out=. &&     apt-get remove -y         unzip         wget &&     apt-get autoremove -y', 'apt-get update &&     apt-get install -y --no-install-recommends --fix-missing numactl', 'umask 002 && mkdir -p ${MODEL_WORKSPACE} && chgrp root ${MODEL_WORKSPACE} && chmod g+s+w,o+s+r ${MODEL_WORKSPACE}', 'chown -R root ${MODEL_WORKSPACE}/${PACKAGE_NAME} && chgrp -R root ${MODEL_WORKSPACE}/${PACKAGE_NAME} && chmod -R g+s+w ${MODEL_WORKSPACE}/${PACKAGE_NAME} && find ${MODEL_WORKSPACE}/${PACKAGE_NAME} -type d | xargs chmod o+r+x', 'apt-get update &&     apt-get install --no-install-recommends --fix-missing -y gosu', 'echo \'#!/bin/bash\\nUSER_ID=$USER_ID\\nUSER_NAME=$USER_NAME\\nGROUP_ID=$GROUP_ID\\nGROUP_NAME=$GROUP_NAME\\nif [[ $GROUP_NAME != root ]]; then\\n  groupadd -r -g $GROUP_ID $GROUP_NAME\\nfi\\nif [[ $USER_NAME != root ]]; then\\n  useradd --no-log-init -r -u $USER_ID -g $GROUP_NAME -s /bin/bash -M $USER_NAME\\nfi\\nexec /usr/sbin/gosu $USER_NAME:$GROUP_NAME ""$@""\\n \'>> /tmp/entrypoint.sh', 'chmod u+x,g+x /tmp/entrypoint.sh']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-object-detection-ssd-mobilenet-int8-inference.Dockerfile,ADD,1,['--chown=0:0 ${PACKAGE_DIR}/${PACKAGE_NAME}.tar.gz ${MODEL_WORKSPACE}']
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-object-detection-ssd-mobilenet-int8-inference.Dockerfile,WORKDIR,1,['${MODEL_WORKSPACE}/${PACKAGE_NAME}']
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-object-detection-ssd-mobilenet-int8-inference.Dockerfile,ENTRYPOINT,1,"['[""/tmp/entrypoint.sh""]']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-image-recognition-mobilenet-v1-int8-inference.Dockerfile,ARG,5,"['TENSORFLOW_IMAGE=""intel/intel-optimized-tensorflow""', 'TENSORFLOW_TAG=""latest""', 'PACKAGE_DIR=model_packages', 'PACKAGE_NAME=""mobilenet-v1-int8-inference""', 'MODEL_WORKSPACE']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-image-recognition-mobilenet-v1-int8-inference.Dockerfile,FROM,1,['${TENSORFLOW_IMAGE}:${TENSORFLOW_TAG}']
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-image-recognition-mobilenet-v1-int8-inference.Dockerfile,ENV,5,"['DEBIAN_FRONTEND=noninteractive', 'USER_ID=0', 'USER_NAME=root', 'GROUP_ID=0', 'GROUP_NAME=root']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-image-recognition-mobilenet-v1-int8-inference.Dockerfile,RUN,7,"['apt-get update &&     apt-get install --no-install-recommends --fix-missing -y         libsm6         libxext6         python-tk &&     pip install requests', 'apt-get update &&     apt-get install -y --no-install-recommends --fix-missing numactl', 'umask 002 && mkdir -p ${MODEL_WORKSPACE} && chgrp root ${MODEL_WORKSPACE} && chmod g+s+w,o+s+r ${MODEL_WORKSPACE}', 'chown -R root ${MODEL_WORKSPACE}/${PACKAGE_NAME} && chgrp -R root ${MODEL_WORKSPACE}/${PACKAGE_NAME} && chmod -R g+s+w ${MODEL_WORKSPACE}/${PACKAGE_NAME} && find ${MODEL_WORKSPACE}/${PACKAGE_NAME} -type d | xargs chmod o+r+x', 'apt-get update &&     apt-get install --no-install-recommends --fix-missing -y gosu', 'echo \'#!/bin/bash\\nUSER_ID=$USER_ID\\nUSER_NAME=$USER_NAME\\nGROUP_ID=$GROUP_ID\\nGROUP_NAME=$GROUP_NAME\\nif [[ $GROUP_NAME != root ]]; then\\n  groupadd -r -g $GROUP_ID $GROUP_NAME\\nfi\\nif [[ $USER_NAME != root ]]; then\\n  useradd --no-log-init -r -u $USER_ID -g $GROUP_NAME -s /bin/bash -M $USER_NAME\\nfi\\nexec /usr/sbin/gosu $USER_NAME:$GROUP_NAME ""$@""\\n \'>> /tmp/entrypoint.sh', 'chmod u+x,g+x /tmp/entrypoint.sh']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-image-recognition-mobilenet-v1-int8-inference.Dockerfile,ADD,1,['--chown=0:0 ${PACKAGE_DIR}/${PACKAGE_NAME}.tar.gz ${MODEL_WORKSPACE}']
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-image-recognition-mobilenet-v1-int8-inference.Dockerfile,WORKDIR,1,['${MODEL_WORKSPACE}/${PACKAGE_NAME}']
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-image-recognition-mobilenet-v1-int8-inference.Dockerfile,ENTRYPOINT,1,"['[""/tmp/entrypoint.sh""]']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-language-translation-transformer-mlperf-fp32-training.Dockerfile,ARG,7,"['TENSORFLOW_IMAGE=""intel/intel-optimized-tensorflow""', 'TENSORFLOW_TAG=""latest""', 'PY_VERSION=""3.8""', 'HOROVOD_VERSION=87094a4', 'PACKAGE_DIR=model_packages', 'PACKAGE_NAME=""transformer-mlperf-fp32-training""', 'MODEL_WORKSPACE']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-language-translation-transformer-mlperf-fp32-training.Dockerfile,FROM,1,['${TENSORFLOW_IMAGE}:${TENSORFLOW_TAG}']
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-language-translation-transformer-mlperf-fp32-training.Dockerfile,ENV,6,"['DEBIAN_FRONTEND=noninteractive', 'HOROVOD_WITHOUT_MXNET=1     HOROVOD_WITHOUT_PYTORCH=1     HOROVOD_WITH_TENSORFLOW=1', 'USER_ID=0', 'USER_NAME=root', 'GROUP_ID=0', 'GROUP_NAME=root']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-language-translation-transformer-mlperf-fp32-training.Dockerfile,RUN,15,"['apt-get update &&     apt-get install --no-install-recommends --fix-missing -y         libsm6         libxext6         python-tk &&     pip install requests', 'apt-get update &&     apt-get install -y --no-install-recommends --fix-missing         build-essential         python${PY_VERSION}-dev', 'apt-get update &&     apt-get install --no-install-recommends --fix-missing -y     python3-apt     software-properties-common', 'apt-get update &&     apt-get install --no-install-recommends --fix-missing -y         gcc-8         g++-8 &&   update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 8 &&   update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 8', 'apt-get update &&     apt-get install -y --no-install-recommends --fix-missing curl', 'curl -LO https://storage.googleapis.com/kubernetes-release/release/v1.18.3/bin/linux/amd64/kubectl &&     chmod +x ./kubectl &&     mv kubectl /usr/local/bin', 'apt-get install --no-install-recommends --fix-missing -y     libopenmpi-dev     openmpi-bin     openmpi-common     openssh-client     openssh-server', 'apt-get install --no-install-recommends --fix-missing -y     openssh-client     openssh-server     systemd &&     systemctl enable ssh', 'apt-get update &&     apt-get install -y --no-install-recommends --fix-missing     cmake     git', 'pip install git+https://github.com/horovod/horovod.git@${HOROVOD_VERSION}', 'umask 002 && mkdir -p ${MODEL_WORKSPACE} && chgrp root ${MODEL_WORKSPACE} && chmod g+s+w,o+s+r ${MODEL_WORKSPACE}', 'chown -R root ${MODEL_WORKSPACE}/${PACKAGE_NAME} && chgrp -R root ${MODEL_WORKSPACE}/${PACKAGE_NAME} && chmod -R g+s+w ${MODEL_WORKSPACE}/${PACKAGE_NAME} && find ${MODEL_WORKSPACE}/${PACKAGE_NAME} -type d | xargs chmod o+r+x', 'apt-get update &&     apt-get install --no-install-recommends --fix-missing -y gosu', 'echo \'#!/bin/bash\\nUSER_ID=$USER_ID\\nUSER_NAME=$USER_NAME\\nGROUP_ID=$GROUP_ID\\nGROUP_NAME=$GROUP_NAME\\nif [[ $GROUP_NAME != root ]]; then\\n  groupadd -r -g $GROUP_ID $GROUP_NAME\\nfi\\nif [[ $USER_NAME != root ]]; then\\n  useradd --no-log-init -r -u $USER_ID -g $GROUP_NAME -s /bin/bash -M $USER_NAME\\nfi\\nexec /usr/sbin/gosu $USER_NAME:$GROUP_NAME ""$@""\\n \'>> /tmp/entrypoint.sh', 'chmod u+x,g+x /tmp/entrypoint.sh']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-language-translation-transformer-mlperf-fp32-training.Dockerfile,ADD,1,['--chown=0:0 ${PACKAGE_DIR}/${PACKAGE_NAME}.tar.gz ${MODEL_WORKSPACE}']
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-language-translation-transformer-mlperf-fp32-training.Dockerfile,WORKDIR,1,['${MODEL_WORKSPACE}/${PACKAGE_NAME}']
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-language-translation-transformer-mlperf-fp32-training.Dockerfile,ENTRYPOINT,1,"['[""/tmp/entrypoint.sh""]']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-image-recognition-resnet50v1-5-int8-inference.Dockerfile,ARG,5,"['TENSORFLOW_IMAGE=""intel/intel-optimized-tensorflow""', 'TENSORFLOW_TAG=""latest""', 'PACKAGE_DIR=model_packages', 'PACKAGE_NAME=""resnet50v1-5-int8-inference""', 'MODEL_WORKSPACE']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-image-recognition-resnet50v1-5-int8-inference.Dockerfile,FROM,1,['${TENSORFLOW_IMAGE}:${TENSORFLOW_TAG}']
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-image-recognition-resnet50v1-5-int8-inference.Dockerfile,ENV,5,"['DEBIAN_FRONTEND=noninteractive', 'USER_ID=0', 'USER_NAME=root', 'GROUP_ID=0', 'GROUP_NAME=root']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-image-recognition-resnet50v1-5-int8-inference.Dockerfile,RUN,7,"['apt-get update &&     apt-get install --no-install-recommends --fix-missing -y         libsm6         libxext6         python-tk &&     pip install requests', 'apt-get update &&     apt-get install -y --no-install-recommends --fix-missing numactl', 'umask 002 && mkdir -p ${MODEL_WORKSPACE} && chgrp root ${MODEL_WORKSPACE} && chmod g+s+w,o+s+r ${MODEL_WORKSPACE}', 'chown -R root ${MODEL_WORKSPACE}/${PACKAGE_NAME} && chgrp -R root ${MODEL_WORKSPACE}/${PACKAGE_NAME} && chmod -R g+s+w ${MODEL_WORKSPACE}/${PACKAGE_NAME} && find ${MODEL_WORKSPACE}/${PACKAGE_NAME} -type d | xargs chmod o+r+x', 'apt-get update &&     apt-get install --no-install-recommends --fix-missing -y gosu', 'echo \'#!/bin/bash\\nUSER_ID=$USER_ID\\nUSER_NAME=$USER_NAME\\nGROUP_ID=$GROUP_ID\\nGROUP_NAME=$GROUP_NAME\\nif [[ $GROUP_NAME != root ]]; then\\n  groupadd -r -g $GROUP_ID $GROUP_NAME\\nfi\\nif [[ $USER_NAME != root ]]; then\\n  useradd --no-log-init -r -u $USER_ID -g $GROUP_NAME -s /bin/bash -M $USER_NAME\\nfi\\nexec /usr/sbin/gosu $USER_NAME:$GROUP_NAME ""$@""\\n \'>> /tmp/entrypoint.sh', 'chmod u+x,g+x /tmp/entrypoint.sh']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-image-recognition-resnet50v1-5-int8-inference.Dockerfile,ADD,1,['--chown=0:0 ${PACKAGE_DIR}/${PACKAGE_NAME}.tar.gz ${MODEL_WORKSPACE}']
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-image-recognition-resnet50v1-5-int8-inference.Dockerfile,WORKDIR,1,['${MODEL_WORKSPACE}/${PACKAGE_NAME}']
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-image-recognition-resnet50v1-5-int8-inference.Dockerfile,ENTRYPOINT,1,"['[""/tmp/entrypoint.sh""]']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-object-detection-rfcn-int8-inference.Dockerfile,ARG,10,"['TENSORFLOW_IMAGE=""intel/intel-optimized-tensorflow""', 'TENSORFLOW_TAG=""latest""', 'PY_VERSION=""3.8""', 'TF_MODELS_BRANCH=""6c21084503b27a9ab118e1db25f79957d5ef540b""', 'FETCH_PR', 'CODE_DIR=/tensorflow/models', 'TF_MODELS_DIR=/tensorflow/models', 'PACKAGE_DIR=model_packages', 'PACKAGE_NAME=""rfcn-int8-inference""', 'MODEL_WORKSPACE']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-object-detection-rfcn-int8-inference.Dockerfile,FROM,1,['${TENSORFLOW_IMAGE}:${TENSORFLOW_TAG}']
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-object-detection-rfcn-int8-inference.Dockerfile,ENV,6,"['DEBIAN_FRONTEND=noninteractive', 'TF_MODELS_DIR=${CODE_DIR}', 'USER_ID=0', 'USER_NAME=root', 'GROUP_ID=0', 'GROUP_NAME=root']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-object-detection-rfcn-int8-inference.Dockerfile,RUN,12,"['apt-get update &&     apt-get install --no-install-recommends --fix-missing -y         libsm6         libxext6         python-tk &&     pip install requests', 'apt-get update &&     apt-get install -y --no-install-recommends --fix-missing         build-essential         python${PY_VERSION}-dev', 'apt-get update &&     apt-get install --no-install-recommends --fix-missing -y git &&     git clone https://github.com/tensorflow/models.git ${CODE_DIR} &&     ( cd ${CODE_DIR} &&     if [ ! -z ""${FETCH_PR}"" ]; then git fetch origin ${FETCH_PR}; fi &&     git checkout ${TF_MODELS_BRANCH} )', ""pip install         Cython         contextlib2         jupyter         lxml         matplotlib         numpy>=1.17.4         'pillow>=8.1.2' &&     pip install pycocotools"", 'cd ${TF_MODELS_DIR}/research &&     apt-get install --no-install-recommends --fix-missing -y         unzip         wget &&     wget --quiet -O protobuf.zip https://github.com/google/protobuf/releases/download/v3.3.0/protoc-3.3.0-linux-x86_64.zip &&     unzip -o protobuf.zip &&     rm protobuf.zip &&     ./bin/protoc object_detection/protos/*.proto --python_out=. &&     apt-get remove -y         unzip         wget &&     apt-get autoremove -y', 'umask 002 && mkdir -p ${MODEL_WORKSPACE} && chgrp root ${MODEL_WORKSPACE} && chmod g+s+w,o+s+r ${MODEL_WORKSPACE}', 'chown -R root ${MODEL_WORKSPACE}/${PACKAGE_NAME} && chgrp -R root ${MODEL_WORKSPACE}/${PACKAGE_NAME} && chmod -R g+s+w ${MODEL_WORKSPACE}/${PACKAGE_NAME} && find ${MODEL_WORKSPACE}/${PACKAGE_NAME} -type d | xargs chmod o+r+x', 'cd ${TF_MODELS_DIR} &&     git checkout 6c21084503b27a9ab118e1db25f79957d5ef540b &&     git apply --ignore-space-change --ignore-whitespace ${MODEL_WORKSPACE}/${PACKAGE_NAME}/models/object_detection/tensorflow/rfcn/inference/tf-2.0.patch', 'apt-get install --no-install-recommends --fix-missing -y tar', 'apt-get update &&     apt-get install --no-install-recommends --fix-missing -y gosu', 'echo \'#!/bin/bash\\nUSER_ID=$USER_ID\\nUSER_NAME=$USER_NAME\\nGROUP_ID=$GROUP_ID\\nGROUP_NAME=$GROUP_NAME\\nif [[ $GROUP_NAME != root ]]; then\\n  groupadd -r -g $GROUP_ID $GROUP_NAME\\nfi\\nif [[ $USER_NAME != root ]]; then\\n  useradd --no-log-init -r -u $USER_ID -g $GROUP_NAME -s /bin/bash -M $USER_NAME\\nfi\\nexec /usr/sbin/gosu $USER_NAME:$GROUP_NAME ""$@""\\n \'>> /tmp/entrypoint.sh', 'chmod u+x,g+x /tmp/entrypoint.sh']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-object-detection-rfcn-int8-inference.Dockerfile,ADD,1,['--chown=0:0 ${PACKAGE_DIR}/${PACKAGE_NAME}.tar.gz ${MODEL_WORKSPACE}']
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-object-detection-rfcn-int8-inference.Dockerfile,WORKDIR,1,['${MODEL_WORKSPACE}/${PACKAGE_NAME}']
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-object-detection-rfcn-int8-inference.Dockerfile,ENTRYPOINT,1,"['[""/tmp/entrypoint.sh""]']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-object-detection-ssd-resnet34-int8-inference.Dockerfile,ARG,12,"['TENSORFLOW_IMAGE=""intel/intel-optimized-tensorflow""', 'TENSORFLOW_TAG=""latest""', 'PY_VERSION=""3.8""', 'TF_MODELS_BRANCH=""f505cecde2d8ebf6fe15f40fb8bc350b2b1ed5dc""', 'FETCH_PR', 'CODE_DIR=""/workspace/tf_models""', 'TF_MODELS_DIR=/tensorflow/models', 'PACKAGE_DIR=model_packages', 'PACKAGE_NAME=""ssd-resnet34-int8-inference""', 'MODEL_WORKSPACE', 'TF_BENCHMARKS_BRANCH=""509b9d288937216ca7069f31cfb22aaa7db6a4a7""', 'TF_BENCHMARKS_DIR=""/workspace/ssd-resnet-benchmarks""']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-object-detection-ssd-resnet34-int8-inference.Dockerfile,FROM,1,['${TENSORFLOW_IMAGE}:${TENSORFLOW_TAG}']
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-object-detection-ssd-resnet34-int8-inference.Dockerfile,ENV,7,"['DEBIAN_FRONTEND=noninteractive', 'TF_MODELS_DIR=${CODE_DIR}', 'USER_ID=0', 'USER_NAME=root', 'GROUP_ID=0', 'GROUP_NAME=root', 'TF_BENCHMARKS_DIR=${TF_BENCHMARKS_DIR}']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-object-detection-ssd-resnet34-int8-inference.Dockerfile,RUN,15,"['apt-get update &&     apt-get install --no-install-recommends --fix-missing -y         libsm6         libxext6         python-tk &&     pip install requests', 'apt-get update &&     apt-get install -y --no-install-recommends --fix-missing         build-essential         python${PY_VERSION}-dev', 'apt-get update &&     apt-get install --no-install-recommends --fix-missing -y git &&     git clone https://github.com/tensorflow/models.git ${CODE_DIR} &&     ( cd ${CODE_DIR} &&     if [ ! -z ""${FETCH_PR}"" ]; then git fetch origin ${FETCH_PR}; fi &&     git checkout ${TF_MODELS_BRANCH} )', ""pip install         Cython         contextlib2         jupyter         lxml         matplotlib         numpy>=1.17.4         'pillow>=8.1.2' &&     pip install pycocotools"", 'cd ${TF_MODELS_DIR}/research &&     apt-get install --no-install-recommends --fix-missing -y         unzip         wget &&     wget --quiet -O protobuf.zip https://github.com/google/protobuf/releases/download/v3.3.0/protoc-3.3.0-linux-x86_64.zip &&     unzip -o protobuf.zip &&     rm protobuf.zip &&     ./bin/protoc object_detection/protos/*.proto --python_out=. &&     apt-get remove -y         unzip         wget &&     apt-get autoremove -y', 'apt-get update &&     apt-get install --no-install-recommends --fix-missing -y         libgl1-mesa-glx         libglib2.0-0', 'pip install opencv-python', 'pip install tensorflow-addons==0.11.0', 'apt-get install --no-install-recommends --fix-missing -y google-perftools', 'umask 002 && mkdir -p ${MODEL_WORKSPACE} && chgrp root ${MODEL_WORKSPACE} && chmod g+s+w,o+s+r ${MODEL_WORKSPACE}', 'chown -R root ${MODEL_WORKSPACE}/${PACKAGE_NAME} && chgrp -R root ${MODEL_WORKSPACE}/${PACKAGE_NAME} && chmod -R g+s+w ${MODEL_WORKSPACE}/${PACKAGE_NAME} && find ${MODEL_WORKSPACE}/${PACKAGE_NAME} -type d | xargs chmod o+r+x', 'apt-get update &&     apt-get install --no-install-recommends --fix-missing -y gosu', 'echo \'#!/bin/bash\\nUSER_ID=$USER_ID\\nUSER_NAME=$USER_NAME\\nGROUP_ID=$GROUP_ID\\nGROUP_NAME=$GROUP_NAME\\nif [[ $GROUP_NAME != root ]]; then\\n  groupadd -r -g $GROUP_ID $GROUP_NAME\\nfi\\nif [[ $USER_NAME != root ]]; then\\n  useradd --no-log-init -r -u $USER_ID -g $GROUP_NAME -s /bin/bash -M $USER_NAME\\nfi\\nexec /usr/sbin/gosu $USER_NAME:$GROUP_NAME ""$@""\\n \'>> /tmp/entrypoint.sh', 'chmod u+x,g+x /tmp/entrypoint.sh', 'apt-get install --no-install-recommends --fix-missing -y git &&     git clone --single-branch https://github.com/tensorflow/benchmarks.git ${TF_BENCHMARKS_DIR} &&     ( cd ${TF_BENCHMARKS_DIR} &&     git checkout ${TF_BENCHMARKS_BRANCH} )']"
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-object-detection-ssd-resnet34-int8-inference.Dockerfile,ADD,1,['--chown=0:0 ${PACKAGE_DIR}/${PACKAGE_NAME}.tar.gz ${MODEL_WORKSPACE}']
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-object-detection-ssd-resnet34-int8-inference.Dockerfile,WORKDIR,1,['${MODEL_WORKSPACE}/${PACKAGE_NAME}']
IntelAI/models,latest,/dockerfiles/model_containers/intel-tf-object-detection-ssd-resnet34-int8-inference.Dockerfile,ENTRYPOINT,1,"['[""/tmp/entrypoint.sh""]']"
IntelAI/models,latest,/dockerfiles/ml/XGBoost/xgboost.Dockerfile,ARG,5,"['UBUNTU_VERSION=""20.04""', 'CONDA_INSTALL_PATH=/opt/conda', 'MINICONDA_VERSION=""4.7.12""', 'PY_VERSION=""3""', 'INTEL_PY_BUILD=""2021.3.0""']"
IntelAI/models,latest,/dockerfiles/ml/XGBoost/xgboost.Dockerfile,FROM,1,['ubuntu:${UBUNTU_VERSION}']
IntelAI/models,latest,/dockerfiles/ml/XGBoost/xgboost.Dockerfile,RUN,3,"['apt-get update &&     apt-get install --no-install-recommends --fix-missing -y         wget         ca-certificates &&     wget --quiet https://repo.anaconda.com/miniconda/Miniconda3-${MINICONDA_VERSION}-Linux-x86_64.sh -O miniconda.sh &&     bash miniconda.sh -b -p ${CONDA_INSTALL_PATH} &&     rm miniconda.sh &&     ln -s ${CONDA_INSTALL_PATH}/etc/profile.d/conda.sh /etc/profile.d/conda.sh &&     echo "". ${CONDA_INSTALL_PATH}/etc/profile.d/conda.sh"" >> ~/.bashrc &&     echo ""conda activate base"" >> ~/.bashrc', 'conda config --add channels intel &&     conda install  -y -q intelpython${PY_VERSION}_core==${INTEL_PY_BUILD} python=${PY_VERSION}', 'conda config --add channels intel     && conda install  -y -q xgboost     && conda clean --all']"
IntelAI/models,latest,/dockerfiles/ml/XGBoost/xgboost.Dockerfile,ENV,1,"['PATH=""${CONDA_INSTALL_PATH}/bin:${PATH}""']"
IntelAI/models,latest,/dockerfiles/ml/scikit-learn-databricks/scikit-learn-databricks.Dockerfile,ARG,3,"['UBUNTU_VERSION=18.04', 'CONDA_INSTALL_PATH=/databricks/conda', 'MINICONDA_VERSION=4.8.3']"
IntelAI/models,latest,/dockerfiles/ml/scikit-learn-databricks/scikit-learn-databricks.Dockerfile,FROM,1,['ubuntu:${UBUNTU_VERSION}']
IntelAI/models,latest,/dockerfiles/ml/scikit-learn-databricks/scikit-learn-databricks.Dockerfile,RUN,4,"['apt-get update &&     apt-get install --yes --no-install-recommends --fix-missing         bash         ca-certificates         coreutils         iproute2         libc6         openjdk-8-jdk-headless         procps         sudo         wget &&     /var/lib/dpkg/info/ca-certificates-java.postinst configure &&     rm -rf /var/lib/apt/lists/*', 'wget -q https://repo.continuum.io/miniconda/Miniconda3-py37_${MINICONDA_VERSION}-Linux-x86_64.sh -O miniconda.sh &&     bash miniconda.sh -b -p /databricks/conda &&     rm miniconda.sh &&     ln -s ${CONDA_INSTALL_PATH}/etc/profile.d/conda.sh /etc/profile.d/conda.sh &&     echo "". /etc/profile.d/conda.sh"" >> ~/.bashrc &&     conda config --system --set always_yes True &&     conda clean --all', 'conda env create --file /tmp/env.yml &&     rm -f /tmp/env.yml &&     rm -rf $HOME/.cache/pip/*', 'conda install -n intel -c intel scipy=1.5.2 --force-reinstall']"
IntelAI/models,latest,/dockerfiles/ml/scikit-learn-databricks/scikit-learn-databricks.Dockerfile,ENV,3,"['PATH ${CONDA_INSTALL_PATH}/bin:$PATH', 'USE_DAAL4PY_SKLEARN=YES', 'DEFAULT_DATABRICKS_ROOT_CONDA_ENV=intel']"
IntelAI/models,latest,/dockerfiles/ml/scikit-learn-databricks/scikit-learn-databricks.Dockerfile,COPY,1,['intel.yml /tmp/env.yml']
IntelAI/models,latest,/dockerfiles/ml/scikit-learn/scikit-learn.Dockerfile,ARG,5,"['UBUNTU_VERSION=""20.04""', 'CONDA_INSTALL_PATH=/opt/conda', 'MINICONDA_VERSION=""4.7.12""', 'PY_VERSION=""3""', 'INTEL_PY_BUILD=""2021.3.0""']"
IntelAI/models,latest,/dockerfiles/ml/scikit-learn/scikit-learn.Dockerfile,FROM,1,['ubuntu:${UBUNTU_VERSION}']
IntelAI/models,latest,/dockerfiles/ml/scikit-learn/scikit-learn.Dockerfile,RUN,4,"['apt-get update &&     apt-get install --no-install-recommends --fix-missing -y         wget         ca-certificates &&     wget --quiet https://repo.anaconda.com/miniconda/Miniconda3-${MINICONDA_VERSION}-Linux-x86_64.sh -O miniconda.sh &&     bash miniconda.sh -b -p ${CONDA_INSTALL_PATH} &&     rm miniconda.sh &&     ln -s ${CONDA_INSTALL_PATH}/etc/profile.d/conda.sh /etc/profile.d/conda.sh &&     echo "". ${CONDA_INSTALL_PATH}/etc/profile.d/conda.sh"" >> ~/.bashrc &&     echo ""conda activate base"" >> ~/.bashrc', 'conda config --add channels intel &&     conda install  -y -q intelpython${PY_VERSION}_core==${INTEL_PY_BUILD} python=${PY_VERSION}', 'conda install -y -q         daal4py         scikit-learn-intelex         threadpoolctl &&     conda clean -y --all', 'echo \'from sklearnex import patch_sklearn\\nfrom sklearnex import unpatch_sklearn\\npatch_sklearn()\\nprint(""To disable Intel(R) Extension for Scikit-learn*, you can run: unpatch_sklearn()"")\\n\' >> ${PYTHONSTARTUP}']"
IntelAI/models,latest,/dockerfiles/ml/scikit-learn/scikit-learn.Dockerfile,ENV,2,"['PATH=""${CONDA_INSTALL_PATH}/bin:${PATH}""', 'PYTHONSTARTUP=${HOME}/.patch_sklearn.py']"
IntelAI/models,latest,/dockerfiles/pytorch/pytorch-resnet50-bf16-inference.Dockerfile,ARG,5,"['PYTORCH_IMAGE=""intel/intel-optimized-pytorch""', 'PYTORCH_TAG', 'PACKAGE_DIR=model_packages', 'PACKAGE_NAME', 'MODEL_WORKSPACE']"
IntelAI/models,latest,/dockerfiles/pytorch/pytorch-resnet50-bf16-inference.Dockerfile,FROM,1,['${PYTORCH_IMAGE}:${PYTORCH_TAG}']
IntelAI/models,latest,/dockerfiles/pytorch/pytorch-resnet50-bf16-inference.Dockerfile,RUN,5,"['umask 002 && mkdir -p ${MODEL_WORKSPACE} && chgrp root ${MODEL_WORKSPACE} && chmod g+s+w,o+s+r ${MODEL_WORKSPACE}', 'chown -R root ${MODEL_WORKSPACE}/${PACKAGE_NAME} && chgrp -R root ${MODEL_WORKSPACE}/${PACKAGE_NAME} && chmod -R g+s+w ${MODEL_WORKSPACE}/${PACKAGE_NAME} && find ${MODEL_WORKSPACE}/${PACKAGE_NAME} -type d | xargs chmod o+r+x', 'apt-get update &&     apt-get install --no-install-recommends --fix-missing -y gosu', 'echo \'#!/bin/bash\\nUSER_ID=$USER_ID\\nUSER_NAME=$USER_NAME\\nGROUP_ID=$GROUP_ID\\nGROUP_NAME=$GROUP_NAME\\nif [[ $GROUP_NAME != root ]]; then\\n  groupadd -r -g $GROUP_ID $GROUP_NAME\\nfi\\nif [[ $USER_NAME != root ]]; then\\n  useradd --no-log-init -r -u $USER_ID -g $GROUP_NAME -s /bin/bash -M $USER_NAME\\nfi\\nexec /usr/sbin/gosu $USER_NAME:$GROUP_NAME ""$@""\\n \'>> /tmp/entrypoint.sh', 'chmod u+x,g+x /tmp/entrypoint.sh']"
IntelAI/models,latest,/dockerfiles/pytorch/pytorch-resnet50-bf16-inference.Dockerfile,ADD,1,['--chown=0:0 ${PACKAGE_DIR}/${PACKAGE_NAME}.tar.gz ${MODEL_WORKSPACE}']
IntelAI/models,latest,/dockerfiles/pytorch/pytorch-resnet50-bf16-inference.Dockerfile,WORKDIR,1,['${MODEL_WORKSPACE}/${PACKAGE_NAME}']
IntelAI/models,latest,/dockerfiles/pytorch/pytorch-resnet50-bf16-inference.Dockerfile,ENV,4,"['USER_ID=0', 'USER_NAME=root', 'GROUP_ID=0', 'GROUP_NAME=root']"
IntelAI/models,latest,/dockerfiles/pytorch/pytorch-resnet50-bf16-inference.Dockerfile,ENTRYPOINT,1,"['[""/tmp/entrypoint.sh""]']"
IntelAI/models,latest,/dockerfiles/pytorch/ubuntu20.04-pytorch-dlrm-bf16-training.Dockerfile,ARG,9,"['UBUNTU_VERSION', 'CONDA_INSTALL_PATH=/opt/conda', 'MINICONDA_VERSION=4.7.12', 'PY_VERSION', 'INTEL_PY_BUILD', 'PYTHON_VERSION=3.7', 'PACKAGE_DIR=model_packages', 'PACKAGE_NAME', 'MODEL_WORKSPACE']"
IntelAI/models,latest,/dockerfiles/pytorch/ubuntu20.04-pytorch-dlrm-bf16-training.Dockerfile,FROM,1,['ubuntu:${UBUNTU_VERSION}']
IntelAI/models,latest,/dockerfiles/pytorch/ubuntu20.04-pytorch-dlrm-bf16-training.Dockerfile,RUN,11,"['apt-get update &&     apt-get install --no-install-recommends --fix-missing -y         wget         ca-certificates &&     wget --quiet https://repo.anaconda.com/miniconda/Miniconda3-${MINICONDA_VERSION}-Linux-x86_64.sh -O miniconda.sh &&     bash miniconda.sh -b -p ${CONDA_INSTALL_PATH} &&     rm miniconda.sh &&     ln -s ${CONDA_INSTALL_PATH}/etc/profile.d/conda.sh /etc/profile.d/conda.sh &&     echo "". ${CONDA_INSTALL_PATH}/etc/profile.d/conda.sh"" >> ~/.bashrc &&     echo ""conda activate base"" >> ~/.bashrc', 'conda config --add channels intel &&     conda install  -y -q intelpython${PY_VERSION}_core==${INTEL_PY_BUILD} python=${PY_VERSION}', 'conda install -y -c intel/label/oneapibeta pytorch', 'conda install -y -c intel/label/oneapibeta intel-extension-for-pytorch', 'conda install -y -c intel/label/oneapibeta torch_ccl', 'DEBIAN_FRONTEND=noninteractive apt-get install --no-install-recommends --fix-missing -y git &&     python -m pip install onnx &&     python -m pip install -e git+https://github.com/mlperf/logging@0.7.0-rc2#egg=logging &&     conda install -y -c intel scikit-learn &&     conda install -c conda-forge gperftools &&     conda clean -a', 'umask 002 && mkdir -p ${MODEL_WORKSPACE} && chgrp root ${MODEL_WORKSPACE} && chmod g+s+w,o+s+r ${MODEL_WORKSPACE}', 'chown -R root ${MODEL_WORKSPACE}/${PACKAGE_NAME} && chgrp -R root ${MODEL_WORKSPACE}/${PACKAGE_NAME} && chmod -R g+s+w ${MODEL_WORKSPACE}/${PACKAGE_NAME} && find ${MODEL_WORKSPACE}/${PACKAGE_NAME} -type d | xargs chmod o+r+x', 'apt-get update &&     apt-get install --no-install-recommends --fix-missing -y gosu', 'echo \'#!/bin/bash\\nUSER_ID=$USER_ID\\nUSER_NAME=$USER_NAME\\nGROUP_ID=$GROUP_ID\\nGROUP_NAME=$GROUP_NAME\\nif [[ $GROUP_NAME != root ]]; then\\n  groupadd -r -g $GROUP_ID $GROUP_NAME\\nfi\\nif [[ $USER_NAME != root ]]; then\\n  useradd --no-log-init -r -u $USER_ID -g $GROUP_NAME -s /bin/bash -M $USER_NAME\\nfi\\nexec /usr/sbin/gosu $USER_NAME:$GROUP_NAME ""$@""\\n \'>> /tmp/entrypoint.sh', 'chmod u+x,g+x /tmp/entrypoint.sh']"
IntelAI/models,latest,/dockerfiles/pytorch/ubuntu20.04-pytorch-dlrm-bf16-training.Dockerfile,ENV,6,"['PATH=""${CONDA_INSTALL_PATH}/bin:${PATH}""', 'LD_LIBRARY_PATH=""/opt/conda/lib/python${PYTHON_VERSION}/site-packages/ccl/lib/:${LD_LIBRARY_PATH}""', 'USER_ID=0', 'USER_NAME=root', 'GROUP_ID=0', 'GROUP_NAME=root']"
IntelAI/models,latest,/dockerfiles/pytorch/ubuntu20.04-pytorch-dlrm-bf16-training.Dockerfile,ADD,1,['--chown=0:0 ${PACKAGE_DIR}/${PACKAGE_NAME}.tar.gz ${MODEL_WORKSPACE}']
IntelAI/models,latest,/dockerfiles/pytorch/ubuntu20.04-pytorch-dlrm-bf16-training.Dockerfile,WORKDIR,1,['${MODEL_WORKSPACE}/${PACKAGE_NAME}']
IntelAI/models,latest,/dockerfiles/pytorch/ubuntu20.04-pytorch-dlrm-bf16-training.Dockerfile,ENTRYPOINT,1,"['[""/tmp/entrypoint.sh""]']"
IntelAI/models,latest,/dockerfiles/pytorch/ipex-centos-icx-resnet50-fp32.Dockerfile,ARG,4,"['IPEX_CONTAINER_TAG=""intel/image-recognition:pytorch-1.5.0-rc3-icx-a37fb5e8""', 'PACKAGE_DIR=model_packages', 'PACKAGE_NAME=""icx-resnet50-fp32""', 'MODEL_WORKSPACE']"
IntelAI/models,latest,/dockerfiles/pytorch/ipex-centos-icx-resnet50-fp32.Dockerfile,FROM,1,['$IPEX_CONTAINER_TAG']
IntelAI/models,latest,/dockerfiles/pytorch/ipex-centos-icx-resnet50-fp32.Dockerfile,SHELL,1,"['[""/bin/bash"", ""-c""]']"
IntelAI/models,latest,/dockerfiles/pytorch/ipex-centos-icx-resnet50-fp32.Dockerfile,RUN,6,"['echo ""source activate pytorch"" >> ~/.bash_profile', 'umask 002 && mkdir -p ${MODEL_WORKSPACE} && chgrp root ${MODEL_WORKSPACE} && chmod g+s+w,o+s+r ${MODEL_WORKSPACE}', 'chown -R root ${MODEL_WORKSPACE}/${PACKAGE_NAME} && chgrp -R root ${MODEL_WORKSPACE}/${PACKAGE_NAME} && chmod -R g+s+w ${MODEL_WORKSPACE}/${PACKAGE_NAME} && find ${MODEL_WORKSPACE}/${PACKAGE_NAME} -type d | xargs chmod o+r+x', 'gpg --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4     && curl -o /usr/local/bin/gosu -SL ""https://github.com/tianon/gosu/releases/download/${GOSU_VERSION}/gosu-amd64""     && curl -o /usr/local/bin/gosu.asc -SL ""https://github.com/tianon/gosu/releases/download/${GOSU_VERSION}/gosu-amd64.asc""     && gpg --verify /usr/local/bin/gosu.asc     && rm /usr/local/bin/gosu.asc     && rm -r /root/.gnupg/     && chmod +x /usr/local/bin/gosu', 'echo -e \'#!/bin/bash\\nUSER_ID=$USER_ID\\nUSER_NAME=$USER_NAME\\nGROUP_ID=$GROUP_ID\\nGROUP_NAME=$GROUP_NAME\\nif [[ $GROUP_NAME != root ]]; then\\n  groupadd -r -g $GROUP_ID $GROUP_NAME\\nfi\\nif [[ $USER_NAME != root ]]; then\\n  useradd --no-log-init -r -u $USER_ID -g $GROUP_NAME -s /bin/bash -M $USER_NAME\\nfi\\nexec /usr/local/bin/gosu $USER_NAME:$GROUP_NAME ""$@""\\nsource ~/anaconda3/bin/activate pytorch\\n \'>> /tmp/entrypoint.sh', 'chmod u+x,g+x /tmp/entrypoint.sh']"
IntelAI/models,latest,/dockerfiles/pytorch/ipex-centos-icx-resnet50-fp32.Dockerfile,ADD,1,['--chown=0:0 ${PACKAGE_DIR}/${PACKAGE_NAME}.tar.gz ${MODEL_WORKSPACE}']
IntelAI/models,latest,/dockerfiles/pytorch/ipex-centos-icx-resnet50-fp32.Dockerfile,WORKDIR,1,['${MODEL_WORKSPACE}/${PACKAGE_NAME}']
IntelAI/models,latest,/dockerfiles/pytorch/ipex-centos-icx-resnet50-fp32.Dockerfile,ENV,5,"['USER_ID=0', 'USER_NAME=root', 'GROUP_ID=0', 'GROUP_NAME=root', 'GOSU_VERSION=1.11']"
IntelAI/models,latest,/dockerfiles/pytorch/ipex-centos-icx-resnet50-fp32.Dockerfile,ENTRYPOINT,1,"['[""/tmp/entrypoint.sh""]']"
IntelAI/models,latest,/dockerfiles/pytorch/ipex-centos-icx-dlrm-fp32.Dockerfile,ARG,4,"['IPEX_CONTAINER_TAG=""intel/recommendation:pytorch-1.5.0-rc3-icx-a37fb5e8""', 'PACKAGE_DIR=model_packages', 'PACKAGE_NAME=""icx-dlrm-fp32-inference""', 'MODEL_WORKSPACE']"
IntelAI/models,latest,/dockerfiles/pytorch/ipex-centos-icx-dlrm-fp32.Dockerfile,FROM,1,['$IPEX_CONTAINER_TAG']
IntelAI/models,latest,/dockerfiles/pytorch/ipex-centos-icx-dlrm-fp32.Dockerfile,SHELL,1,"['[""/bin/bash"", ""-c""]']"
IntelAI/models,latest,/dockerfiles/pytorch/ipex-centos-icx-dlrm-fp32.Dockerfile,RUN,6,"['echo ""source activate pytorch"" >> ~/.bash_profile', 'umask 002 && mkdir -p ${MODEL_WORKSPACE} && chgrp root ${MODEL_WORKSPACE} && chmod g+s+w,o+s+r ${MODEL_WORKSPACE}', 'chown -R root ${MODEL_WORKSPACE}/${PACKAGE_NAME} && chgrp -R root ${MODEL_WORKSPACE}/${PACKAGE_NAME} && chmod -R g+s+w ${MODEL_WORKSPACE}/${PACKAGE_NAME} && find ${MODEL_WORKSPACE}/${PACKAGE_NAME} -type d | xargs chmod o+r+x', 'gpg --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4     && curl -o /usr/local/bin/gosu -SL ""https://github.com/tianon/gosu/releases/download/${GOSU_VERSION}/gosu-amd64""     && curl -o /usr/local/bin/gosu.asc -SL ""https://github.com/tianon/gosu/releases/download/${GOSU_VERSION}/gosu-amd64.asc""     && gpg --verify /usr/local/bin/gosu.asc     && rm /usr/local/bin/gosu.asc     && rm -r /root/.gnupg/     && chmod +x /usr/local/bin/gosu', 'echo -e \'#!/bin/bash\\nUSER_ID=$USER_ID\\nUSER_NAME=$USER_NAME\\nGROUP_ID=$GROUP_ID\\nGROUP_NAME=$GROUP_NAME\\nif [[ $GROUP_NAME != root ]]; then\\n  groupadd -r -g $GROUP_ID $GROUP_NAME\\nfi\\nif [[ $USER_NAME != root ]]; then\\n  useradd --no-log-init -r -u $USER_ID -g $GROUP_NAME -s /bin/bash -M $USER_NAME\\nfi\\nexec /usr/local/bin/gosu $USER_NAME:$GROUP_NAME ""$@""\\nsource ~/anaconda3/bin/activate pytorch\\n \'>> /tmp/entrypoint.sh', 'chmod u+x,g+x /tmp/entrypoint.sh']"
IntelAI/models,latest,/dockerfiles/pytorch/ipex-centos-icx-dlrm-fp32.Dockerfile,ADD,1,['--chown=0:0 ${PACKAGE_DIR}/${PACKAGE_NAME}.tar.gz ${MODEL_WORKSPACE}']
IntelAI/models,latest,/dockerfiles/pytorch/ipex-centos-icx-dlrm-fp32.Dockerfile,WORKDIR,1,['${MODEL_WORKSPACE}/${PACKAGE_NAME}']
IntelAI/models,latest,/dockerfiles/pytorch/ipex-centos-icx-dlrm-fp32.Dockerfile,ENV,5,"['USER_ID=0', 'USER_NAME=root', 'GROUP_ID=0', 'GROUP_NAME=root', 'GOSU_VERSION=1.11']"
IntelAI/models,latest,/dockerfiles/pytorch/ipex-centos-icx-dlrm-fp32.Dockerfile,ENTRYPOINT,1,"['[""/tmp/entrypoint.sh""]']"
IntelAI/models,latest,/dockerfiles/pytorch/ipex-centos-icx-dlrm-int8.Dockerfile,ARG,4,"['IPEX_CONTAINER_TAG=""intel/recommendation:pytorch-1.5.0-rc3-icx-a37fb5e8""', 'PACKAGE_DIR=model_packages', 'PACKAGE_NAME=""icx-dlrm-int8-inference""', 'MODEL_WORKSPACE']"
IntelAI/models,latest,/dockerfiles/pytorch/ipex-centos-icx-dlrm-int8.Dockerfile,FROM,1,['$IPEX_CONTAINER_TAG']
IntelAI/models,latest,/dockerfiles/pytorch/ipex-centos-icx-dlrm-int8.Dockerfile,SHELL,1,"['[""/bin/bash"", ""-c""]']"
IntelAI/models,latest,/dockerfiles/pytorch/ipex-centos-icx-dlrm-int8.Dockerfile,RUN,6,"['echo ""source activate pytorch"" >> ~/.bash_profile', 'umask 002 && mkdir -p ${MODEL_WORKSPACE} && chgrp root ${MODEL_WORKSPACE} && chmod g+s+w,o+s+r ${MODEL_WORKSPACE}', 'chown -R root ${MODEL_WORKSPACE}/${PACKAGE_NAME} && chgrp -R root ${MODEL_WORKSPACE}/${PACKAGE_NAME} && chmod -R g+s+w ${MODEL_WORKSPACE}/${PACKAGE_NAME} && find ${MODEL_WORKSPACE}/${PACKAGE_NAME} -type d | xargs chmod o+r+x', 'gpg --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4     && curl -o /usr/local/bin/gosu -SL ""https://github.com/tianon/gosu/releases/download/${GOSU_VERSION}/gosu-amd64""     && curl -o /usr/local/bin/gosu.asc -SL ""https://github.com/tianon/gosu/releases/download/${GOSU_VERSION}/gosu-amd64.asc""     && gpg --verify /usr/local/bin/gosu.asc     && rm /usr/local/bin/gosu.asc     && rm -r /root/.gnupg/     && chmod +x /usr/local/bin/gosu', 'echo -e \'#!/bin/bash\\nUSER_ID=$USER_ID\\nUSER_NAME=$USER_NAME\\nGROUP_ID=$GROUP_ID\\nGROUP_NAME=$GROUP_NAME\\nif [[ $GROUP_NAME != root ]]; then\\n  groupadd -r -g $GROUP_ID $GROUP_NAME\\nfi\\nif [[ $USER_NAME != root ]]; then\\n  useradd --no-log-init -r -u $USER_ID -g $GROUP_NAME -s /bin/bash -M $USER_NAME\\nfi\\nexec /usr/local/bin/gosu $USER_NAME:$GROUP_NAME ""$@""\\nsource ~/anaconda3/bin/activate pytorch\\n \'>> /tmp/entrypoint.sh', 'chmod u+x,g+x /tmp/entrypoint.sh']"
IntelAI/models,latest,/dockerfiles/pytorch/ipex-centos-icx-dlrm-int8.Dockerfile,ADD,1,['--chown=0:0 ${PACKAGE_DIR}/${PACKAGE_NAME}.tar.gz ${MODEL_WORKSPACE}']
IntelAI/models,latest,/dockerfiles/pytorch/ipex-centos-icx-dlrm-int8.Dockerfile,WORKDIR,1,['${MODEL_WORKSPACE}/${PACKAGE_NAME}']
IntelAI/models,latest,/dockerfiles/pytorch/ipex-centos-icx-dlrm-int8.Dockerfile,ENV,5,"['USER_ID=0', 'USER_NAME=root', 'GROUP_ID=0', 'GROUP_NAME=root', 'GOSU_VERSION=1.11']"
IntelAI/models,latest,/dockerfiles/pytorch/ipex-centos-icx-dlrm-int8.Dockerfile,ENTRYPOINT,1,"['[""/tmp/entrypoint.sh""]']"
IntelAI/models,latest,/dockerfiles/pytorch/ipex-centos-icx-resnet50-int8.Dockerfile,ARG,4,"['IPEX_CONTAINER_TAG=""intel/image-recognition:pytorch-1.5.0-rc3-icx-a37fb5e8""', 'PACKAGE_DIR=model_packages', 'PACKAGE_NAME=""icx-resnet50-int8""', 'MODEL_WORKSPACE']"
IntelAI/models,latest,/dockerfiles/pytorch/ipex-centos-icx-resnet50-int8.Dockerfile,FROM,1,['$IPEX_CONTAINER_TAG']
IntelAI/models,latest,/dockerfiles/pytorch/ipex-centos-icx-resnet50-int8.Dockerfile,SHELL,1,"['[""/bin/bash"", ""-c""]']"
IntelAI/models,latest,/dockerfiles/pytorch/ipex-centos-icx-resnet50-int8.Dockerfile,RUN,6,"['echo ""source activate pytorch"" >> ~/.bash_profile', 'umask 002 && mkdir -p ${MODEL_WORKSPACE} && chgrp root ${MODEL_WORKSPACE} && chmod g+s+w,o+s+r ${MODEL_WORKSPACE}', 'chown -R root ${MODEL_WORKSPACE}/${PACKAGE_NAME} && chgrp -R root ${MODEL_WORKSPACE}/${PACKAGE_NAME} && chmod -R g+s+w ${MODEL_WORKSPACE}/${PACKAGE_NAME} && find ${MODEL_WORKSPACE}/${PACKAGE_NAME} -type d | xargs chmod o+r+x', 'gpg --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4     && curl -o /usr/local/bin/gosu -SL ""https://github.com/tianon/gosu/releases/download/${GOSU_VERSION}/gosu-amd64""     && curl -o /usr/local/bin/gosu.asc -SL ""https://github.com/tianon/gosu/releases/download/${GOSU_VERSION}/gosu-amd64.asc""     && gpg --verify /usr/local/bin/gosu.asc     && rm /usr/local/bin/gosu.asc     && rm -r /root/.gnupg/     && chmod +x /usr/local/bin/gosu', 'echo -e \'#!/bin/bash\\nUSER_ID=$USER_ID\\nUSER_NAME=$USER_NAME\\nGROUP_ID=$GROUP_ID\\nGROUP_NAME=$GROUP_NAME\\nif [[ $GROUP_NAME != root ]]; then\\n  groupadd -r -g $GROUP_ID $GROUP_NAME\\nfi\\nif [[ $USER_NAME != root ]]; then\\n  useradd --no-log-init -r -u $USER_ID -g $GROUP_NAME -s /bin/bash -M $USER_NAME\\nfi\\nexec /usr/local/bin/gosu $USER_NAME:$GROUP_NAME ""$@""\\nsource ~/anaconda3/bin/activate pytorch\\n \'>> /tmp/entrypoint.sh', 'chmod u+x,g+x /tmp/entrypoint.sh']"
IntelAI/models,latest,/dockerfiles/pytorch/ipex-centos-icx-resnet50-int8.Dockerfile,ADD,1,['--chown=0:0 ${PACKAGE_DIR}/${PACKAGE_NAME}.tar.gz ${MODEL_WORKSPACE}']
IntelAI/models,latest,/dockerfiles/pytorch/ipex-centos-icx-resnet50-int8.Dockerfile,WORKDIR,1,['${MODEL_WORKSPACE}/${PACKAGE_NAME}']
IntelAI/models,latest,/dockerfiles/pytorch/ipex-centos-icx-resnet50-int8.Dockerfile,ENV,5,"['USER_ID=0', 'USER_NAME=root', 'GROUP_ID=0', 'GROUP_NAME=root', 'GOSU_VERSION=1.11']"
IntelAI/models,latest,/dockerfiles/pytorch/ipex-centos-icx-resnet50-int8.Dockerfile,ENTRYPOINT,1,"['[""/tmp/entrypoint.sh""]']"
IntelAI/models,latest,/dockerfiles/pytorch/ipex-centos-icx-dlrm-base.Dockerfile,ARG,1,['BASE_IMAGE=centos:centos7']
IntelAI/models,latest,/dockerfiles/pytorch/ipex-centos-icx-dlrm-base.Dockerfile,FROM,2,"['${BASE_IMAGE} AS dev-base', '${BASE_IMAGE} AS release']"
IntelAI/models,latest,/dockerfiles/pytorch/ipex-centos-icx-dlrm-base.Dockerfile,SHELL,2,"['[""/bin/bash"", ""-c""]', '[ ""/usr/bin/scl"", ""enable"", ""devtoolset-7""]']"
IntelAI/models,latest,/dockerfiles/pytorch/ipex-centos-icx-dlrm-base.Dockerfile,WORKDIR,2,"['/workspace/installs/', '/workspace/']"
IntelAI/models,latest,/dockerfiles/pytorch/ipex-centos-icx-dlrm-base.Dockerfile,RUN,4,"['echo ""http_caching=packages"" >> /etc/yum.conf &&     yum update -y &&     yum --enablerepo=extras install -y epel-release &&     yum install -y     ca-certificates     git     wget     build-essential     cmake3     gcc-c++     gcc     autoconf     bzip2     patch     numactl     file &&     alternatives --install /usr/local/bin/cmake cmake /usr/bin/cmake 10     --slave /usr/local/bin/ctest ctest /usr/bin/ctest     --slave /usr/local/bin/cpack cpack /usr/bin/cpack     --slave /usr/local/bin/ccmake ccmake /usr/bin/ccmake     --family cmake &&     alternatives --install /usr/local/bin/cmake cmake /usr/bin/cmake3 20     --slave /usr/local/bin/ctest ctest /usr/bin/ctest3     --slave /usr/local/bin/cpack cpack /usr/bin/cpack3     --slave /usr/local/bin/ccmake ccmake /usr/bin/ccmake3     --family cmake &&     yum install -y centos-release-scl &&     yum install -y devtoolset-7 &&     source /opt/rh/devtoolset-7/enable &&     wget --quiet https://github.com/google/protobuf/releases/download/v2.6.1/protobuf-2.6.1.tar.gz &&     tar -xzf protobuf-2.6.1.tar.gz &&     cd protobuf-2.6.1 &&     ./configure &&     make &&     make install', 'wget --quiet https://repo.continuum.io/archive/Anaconda3-5.0.0-Linux-x86_64.sh -O anaconda3.sh &&     chmod +x anaconda3.sh &&     ./anaconda3.sh -b -p ~/anaconda3 &&     rm ./anaconda3.sh &&     ~/anaconda3/bin/conda create -yn pytorch &&     export PATH=~/anaconda3/bin/:$PATH &&     source activate pytorch &&     pip install pip==21.0.1 &&     pip install sklearn onnx &&     conda config --add channels intel &&     conda install -y ninja pyyaml setuptools cmake cffi typing intel-openmp &&     conda install -y mkl mkl-include numpy -c intel --no-update-deps', 'source ~/anaconda3/bin/activate pytorch &&     git clone https://github.com/pytorch/pytorch.git &&     cd pytorch &&     git checkout v1.5.0-rc3 &&     git submodule sync &&     git submodule update --init --recursive &&     pip install -r requirements.txt &&     cd .. &&     git clone https://github.com/intel/intel-extension-for-pytorch ipex-cpu-dev &&     cd ipex-cpu-dev &&     git checkout icx &&     git submodule sync &&     git submodule update --init --recursive &&     cd third_party/mkl-dnn &&     patch -p1 < ../../torch_patches/FIFO.diff &&     cd ../.. &&     pip install -r requirements.txt &&     cp torch_patches/dpcpp-v1.5-rc3.patch ../pytorch/ &&     cd ../pytorch &&     git apply dpcpp-v1.5-rc3.patch &&     CMAKE_PREFIX_PATH=${CONDA_PREFIX:-""$(dirname $(which conda))/../""} python setup.py install &&     cd ../ipex-cpu-dev &&     python setup.py install &&     cd .. &&     git clone  https://github.com/jemalloc/jemalloc.git &&     cd jemalloc &&     git checkout c8209150f9d219a137412b06431c9d52839c7272 &&     ./autogen.sh &&     mkdir /workspace/libs &&     ./configure --prefix=/workspace/libs/jemalloc &&     make &&     make install &&     cd /workspace &&     rm -rf installs/ &&     pip install future     numpy     onnx     pydot     torchviz     scikit-learn     tqdm', 'echo ""http_caching=packages"" >> /etc/yum.conf &&     yum update -y --disablerepo=epel\\* &&     yum install -y numactl &&     yum clean all']"
IntelAI/models,latest,/dockerfiles/pytorch/ipex-centos-icx-dlrm-base.Dockerfile,ENV,4,"['PATH ~/anaconda3/bin/:$PATH', 'DNNL_ENABLE_MAX_CPU_ISA=1', 'PATH=""~/anaconda3/bin:${PATH}""', 'LD_PRELOAD=""/workspace/libs/jemalloc/lib/libjemalloc.so:$LD_PRELOAD""']"
IntelAI/models,latest,/dockerfiles/pytorch/ipex-centos-icx-dlrm-base.Dockerfile,COPY,2,"['--from=dev-base /root/anaconda3 /root/anaconda3', '--from=dev-base /workspace/libs/ /workspace/libs/']"
IntelAI/models,latest,/dockerfiles/pytorch/ipex-centos-icx-resnet50-base.Dockerfile,ARG,1,['BASE_IMAGE=centos:centos7']
IntelAI/models,latest,/dockerfiles/pytorch/ipex-centos-icx-resnet50-base.Dockerfile,FROM,2,"['${BASE_IMAGE} AS dev-base', '${BASE_IMAGE} AS release']"
IntelAI/models,latest,/dockerfiles/pytorch/ipex-centos-icx-resnet50-base.Dockerfile,SHELL,2,"['[""/bin/bash"", ""-c""]', '[ ""/usr/bin/scl"", ""enable"", ""devtoolset-7""]']"
IntelAI/models,latest,/dockerfiles/pytorch/ipex-centos-icx-resnet50-base.Dockerfile,WORKDIR,2,"['/workspace/installs/', '/workspace/']"
IntelAI/models,latest,/dockerfiles/pytorch/ipex-centos-icx-resnet50-base.Dockerfile,RUN,5,"['echo ""http_caching=packages"" >> /etc/yum.conf &&     yum update -y &&     yum --enablerepo=extras install -y epel-release &&     yum install -y     ca-certificates     git     wget     build-essential     cmake3     gcc-c++     gcc     autoconf     bzip2     numactl     patch     file &&     alternatives --install /usr/local/bin/cmake cmake /usr/bin/cmake 10     --slave /usr/local/bin/ctest ctest /usr/bin/ctest     --slave /usr/local/bin/cpack cpack /usr/bin/cpack     --slave /usr/local/bin/ccmake ccmake /usr/bin/ccmake     --family cmake &&     alternatives --install /usr/local/bin/cmake cmake /usr/bin/cmake3 20     --slave /usr/local/bin/ctest ctest /usr/bin/ctest3     --slave /usr/local/bin/cpack cpack /usr/bin/cpack3     --slave /usr/local/bin/ccmake ccmake /usr/bin/ccmake3     --family cmake &&     yum install -y centos-release-scl &&     yum install -y devtoolset-7 &&     source /opt/rh/devtoolset-7/enable &&     wget --quiet https://github.com/google/protobuf/releases/download/v2.6.1/protobuf-2.6.1.tar.gz &&     tar -xzf protobuf-2.6.1.tar.gz &&     cd protobuf-2.6.1 &&     ./configure &&     make &&     make install', 'wget --quiet https://repo.continuum.io/archive/Anaconda3-5.0.0-Linux-x86_64.sh -O anaconda3.sh &&     chmod +x anaconda3.sh &&     ./anaconda3.sh -b -p ~/anaconda3 &&     rm ./anaconda3.sh &&     ~/anaconda3/bin/conda create -yn pytorch &&     export PATH=~/anaconda3/bin/:$PATH &&     source activate pytorch &&     pip install pip==21.0.1 &&     pip install sklearn onnx &&     conda config --add channels intel &&     conda install -y ninja pyyaml setuptools cmake cffi typing intel-openmp &&     conda install -y mkl mkl-include numpy -c intel --no-update-deps', 'source ~/anaconda3/bin/activate pytorch &&     git clone https://github.com/pytorch/pytorch.git &&     cd pytorch &&     git checkout v1.5.0-rc3 &&     git submodule sync &&     git submodule update --init --recursive &&     pip install -r requirements.txt &&     cd .. &&     git clone https://github.com/intel/intel-extension-for-pytorch ipex-cpu-dev &&     cd ipex-cpu-dev &&     git checkout icx &&     git submodule sync &&     git submodule update --init --recursive &&     cd third_party/mkl-dnn &&     patch -p1 < ../../torch_patches/FIFO.diff &&     cd ../.. &&     pip install lark-parser hypothesis &&     cp torch_patches/dpcpp-v1.5-rc3.patch ../pytorch/ &&     cd ../pytorch &&     git apply dpcpp-v1.5-rc3.patch &&     python setup.py install &&     cd ../ipex-cpu-dev &&     python setup.py install', 'source ~/anaconda3/bin/activate pytorch &&     git clone  https://github.com/jemalloc/jemalloc.git &&     cd jemalloc &&     git checkout c8209150f9d219a137412b06431c9d52839c7272 &&     ./autogen.sh &&     mkdir /workspace/lib/ &&     ./configure --prefix=/workspace/lib/jemalloc/ &&     make &&     make install &&     cd .. &&     git clone https://github.com/pytorch/vision &&     cd vision &&     git checkout v0.6.0 &&     python setup.py install &&     rm -rf /workspace/installs/ &&     cd /workspace/ &&     git clone https://github.com/XiaobingSuper/examples.git &&     cd examples &&     git checkout int8 &&     rm -rf ./git', 'echo ""http_caching=packages"" >> /etc/yum.conf &&     yum update -y --disablerepo=epel\\* &&     yum install -y numactl &&     yum clean all']"
IntelAI/models,latest,/dockerfiles/pytorch/ipex-centos-icx-resnet50-base.Dockerfile,ENV,5,"['PATH ~/anaconda3/bin/:$PATH', 'LD_PRELOAD=""/workspace/lib/jemalloc/lib/libjemalloc.so:${LD_PRELOAD}""', 'MALLOC_CONF=""oversize_threshold:1,background_thread:true,metadata_thp:auto,dirty_decay_ms:9000000000,muzzy_decay_ms:9000000000""', 'PATH=""~/anaconda3/bin:${PATH}""', 'IMAGENET_REPO_PATH=""/workspace/examples/imagenet""']"
IntelAI/models,latest,/dockerfiles/pytorch/ipex-centos-icx-resnet50-base.Dockerfile,COPY,3,"['--from=dev-base /root/anaconda3 /root/anaconda3', '--from=dev-base /workspace/lib /workspace/lib', '--from=dev-base /workspace/examples /workspace/examples']"
IntelAI/models,latest,/dockerfiles/pytorch/pytorch-resnet50-fp32-inference.Dockerfile,ARG,5,"['PYTORCH_IMAGE=""intel/intel-optimized-pytorch""', 'PYTORCH_TAG=""1.5.0-rc3-ipex-latest""', 'PACKAGE_DIR=model_packages', 'PACKAGE_NAME=""pytorch-resnet50-fp32-inference""', 'MODEL_WORKSPACE']"
IntelAI/models,latest,/dockerfiles/pytorch/pytorch-resnet50-fp32-inference.Dockerfile,FROM,1,['${PYTORCH_IMAGE}:${PYTORCH_TAG} AS intel-optimized-pytorch']
IntelAI/models,latest,/dockerfiles/pytorch/pytorch-resnet50-fp32-inference.Dockerfile,RUN,5,"['umask 002 && mkdir -p ${MODEL_WORKSPACE} && chgrp root ${MODEL_WORKSPACE} && chmod g+s+w,o+s+r ${MODEL_WORKSPACE}', 'chown -R root ${MODEL_WORKSPACE}/${PACKAGE_NAME} && chgrp -R root ${MODEL_WORKSPACE}/${PACKAGE_NAME} && chmod -R g+s+w ${MODEL_WORKSPACE}/${PACKAGE_NAME} && find ${MODEL_WORKSPACE}/${PACKAGE_NAME} -type d | xargs chmod o+r+x', 'apt-get update &&     apt-get install --no-install-recommends --fix-missing -y gosu', 'echo \'#!/bin/bash\\nUSER_ID=$USER_ID\\nUSER_NAME=$USER_NAME\\nGROUP_ID=$GROUP_ID\\nGROUP_NAME=$GROUP_NAME\\nif [[ $GROUP_NAME != root ]]; then\\n  groupadd -r -g $GROUP_ID $GROUP_NAME\\nfi\\nif [[ $USER_NAME != root ]]; then\\n  useradd --no-log-init -r -u $USER_ID -g $GROUP_NAME -s /bin/bash -M $USER_NAME\\nfi\\nexec /usr/sbin/gosu $USER_NAME:$GROUP_NAME ""$@""\\n \'>> /tmp/entrypoint.sh', 'chmod u+x,g+x /tmp/entrypoint.sh']"
IntelAI/models,latest,/dockerfiles/pytorch/pytorch-resnet50-fp32-inference.Dockerfile,ADD,1,['--chown=0:0 ${PACKAGE_DIR}/${PACKAGE_NAME}.tar.gz ${MODEL_WORKSPACE}']
IntelAI/models,latest,/dockerfiles/pytorch/pytorch-resnet50-fp32-inference.Dockerfile,WORKDIR,1,['${MODEL_WORKSPACE}/${PACKAGE_NAME}']
IntelAI/models,latest,/dockerfiles/pytorch/pytorch-resnet50-fp32-inference.Dockerfile,ENV,4,"['USER_ID=0', 'USER_NAME=root', 'GROUP_ID=0', 'GROUP_NAME=root']"
IntelAI/models,latest,/dockerfiles/pytorch/pytorch-resnet50-fp32-inference.Dockerfile,ENTRYPOINT,1,"['[""/tmp/entrypoint.sh""]']"
IntelAI/models,latest,/dockerfiles/pytorch/pytorch-resnet50-bfloat16-inference.Dockerfile,ARG,5,"['PYTORCH_IMAGE=""intel/intel-optimized-pytorch""', 'PYTORCH_TAG=""1.5.0-rc3-ipex-latest""', 'PACKAGE_DIR=model_packages', 'PACKAGE_NAME=""pytorch-resnet50-bfloat16-inference""', 'MODEL_WORKSPACE']"
IntelAI/models,latest,/dockerfiles/pytorch/pytorch-resnet50-bfloat16-inference.Dockerfile,FROM,1,['${PYTORCH_IMAGE}:${PYTORCH_TAG} AS intel-optimized-pytorch']
IntelAI/models,latest,/dockerfiles/pytorch/pytorch-resnet50-bfloat16-inference.Dockerfile,RUN,5,"['umask 002 && mkdir -p ${MODEL_WORKSPACE} && chgrp root ${MODEL_WORKSPACE} && chmod g+s+w,o+s+r ${MODEL_WORKSPACE}', 'chown -R root ${MODEL_WORKSPACE}/${PACKAGE_NAME} && chgrp -R root ${MODEL_WORKSPACE}/${PACKAGE_NAME} && chmod -R g+s+w ${MODEL_WORKSPACE}/${PACKAGE_NAME} && find ${MODEL_WORKSPACE}/${PACKAGE_NAME} -type d | xargs chmod o+r+x', 'apt-get update &&     apt-get install --no-install-recommends --fix-missing -y gosu', 'echo \'#!/bin/bash\\nUSER_ID=$USER_ID\\nUSER_NAME=$USER_NAME\\nGROUP_ID=$GROUP_ID\\nGROUP_NAME=$GROUP_NAME\\nif [[ $GROUP_NAME != root ]]; then\\n  groupadd -r -g $GROUP_ID $GROUP_NAME\\nfi\\nif [[ $USER_NAME != root ]]; then\\n  useradd --no-log-init -r -u $USER_ID -g $GROUP_NAME -s /bin/bash -M $USER_NAME\\nfi\\nexec /usr/sbin/gosu $USER_NAME:$GROUP_NAME ""$@""\\n \'>> /tmp/entrypoint.sh', 'chmod u+x,g+x /tmp/entrypoint.sh']"
IntelAI/models,latest,/dockerfiles/pytorch/pytorch-resnet50-bfloat16-inference.Dockerfile,ADD,1,['--chown=0:0 ${PACKAGE_DIR}/${PACKAGE_NAME}.tar.gz ${MODEL_WORKSPACE}']
IntelAI/models,latest,/dockerfiles/pytorch/pytorch-resnet50-bfloat16-inference.Dockerfile,WORKDIR,1,['${MODEL_WORKSPACE}/${PACKAGE_NAME}']
IntelAI/models,latest,/dockerfiles/pytorch/pytorch-resnet50-bfloat16-inference.Dockerfile,ENV,4,"['USER_ID=0', 'USER_NAME=root', 'GROUP_ID=0', 'GROUP_NAME=root']"
IntelAI/models,latest,/dockerfiles/pytorch/pytorch-resnet50-bfloat16-inference.Dockerfile,ENTRYPOINT,1,"['[""/tmp/entrypoint.sh""]']"
IntelAI/models,latest,/dockerfiles/pytorch/pytorch-dlrm-bfloat16-training.Dockerfile,ARG,9,"['UBUNTU_VERSION=""20.04""', 'CONDA_INSTALL_PATH=/opt/conda', 'MINICONDA_VERSION=4.7.12', 'PY_VERSION=""3""', 'INTEL_PY_BUILD=""2020.2""', 'PYTHON_VERSION=""3.7""', 'PACKAGE_DIR=model_packages', 'PACKAGE_NAME=""dlrm-bfloat16-training""', 'MODEL_WORKSPACE']"
IntelAI/models,latest,/dockerfiles/pytorch/pytorch-dlrm-bfloat16-training.Dockerfile,FROM,1,['ubuntu:${UBUNTU_VERSION}']
IntelAI/models,latest,/dockerfiles/pytorch/pytorch-dlrm-bfloat16-training.Dockerfile,RUN,11,"['apt-get update &&     apt-get install --no-install-recommends --fix-missing -y         wget         ca-certificates &&     wget --quiet https://repo.anaconda.com/miniconda/Miniconda3-${MINICONDA_VERSION}-Linux-x86_64.sh -O miniconda.sh &&     bash miniconda.sh -b -p ${CONDA_INSTALL_PATH} &&     rm miniconda.sh &&     ln -s ${CONDA_INSTALL_PATH}/etc/profile.d/conda.sh /etc/profile.d/conda.sh &&     echo "". ${CONDA_INSTALL_PATH}/etc/profile.d/conda.sh"" >> ~/.bashrc &&     echo ""conda activate base"" >> ~/.bashrc', 'conda config --add channels intel &&     conda install  -y -q intelpython${PY_VERSION}_core==${INTEL_PY_BUILD} python=${PY_VERSION}', 'conda install -y -c intel/label/oneapibeta pytorch', 'conda install -y -c intel/label/oneapibeta intel-extension-for-pytorch', 'conda install -y -c intel/label/oneapibeta torch_ccl', 'apt-get -y update &&     apt-get install --no-install-recommends --fix-missing -y git &&     python -m pip install onnx &&     python -m pip install -e git+https://github.com/mlperf/logging@0.7.0-rc2#egg=logging &&     conda install -y -c intel scikit-learn &&     conda install -c conda-forge gperftools &&     conda clean -a', 'umask 002 && mkdir -p ${MODEL_WORKSPACE} && chgrp root ${MODEL_WORKSPACE} && chmod g+s+w,o+s+r ${MODEL_WORKSPACE}', 'chown -R root ${MODEL_WORKSPACE}/${PACKAGE_NAME} && chgrp -R root ${MODEL_WORKSPACE}/${PACKAGE_NAME} && chmod -R g+s+w ${MODEL_WORKSPACE}/${PACKAGE_NAME} && find ${MODEL_WORKSPACE}/${PACKAGE_NAME} -type d | xargs chmod o+r+x', 'apt-get update &&     apt-get install --no-install-recommends --fix-missing -y gosu', 'echo \'#!/bin/bash\\nUSER_ID=$USER_ID\\nUSER_NAME=$USER_NAME\\nGROUP_ID=$GROUP_ID\\nGROUP_NAME=$GROUP_NAME\\nif [[ $GROUP_NAME != root ]]; then\\n  groupadd -r -g $GROUP_ID $GROUP_NAME\\nfi\\nif [[ $USER_NAME != root ]]; then\\n  useradd --no-log-init -r -u $USER_ID -g $GROUP_NAME -s /bin/bash -M $USER_NAME\\nfi\\nexec /usr/sbin/gosu $USER_NAME:$GROUP_NAME ""$@""\\n \'>> /tmp/entrypoint.sh', 'chmod u+x,g+x /tmp/entrypoint.sh']"
IntelAI/models,latest,/dockerfiles/pytorch/pytorch-dlrm-bfloat16-training.Dockerfile,ENV,7,"['PATH=""${CONDA_INSTALL_PATH}/bin:${PATH}""', 'LD_LIBRARY_PATH=""/opt/conda/lib/python${PYTHON_VERSION}/site-packages/ccl/lib/:${LD_LIBRARY_PATH}""', 'DEBIAN_FRONTEND=noninteractive', 'USER_ID=0', 'USER_NAME=root', 'GROUP_ID=0', 'GROUP_NAME=root']"
IntelAI/models,latest,/dockerfiles/pytorch/pytorch-dlrm-bfloat16-training.Dockerfile,ADD,1,['--chown=0:0 ${PACKAGE_DIR}/${PACKAGE_NAME}.tar.gz ${MODEL_WORKSPACE}']
IntelAI/models,latest,/dockerfiles/pytorch/pytorch-dlrm-bfloat16-training.Dockerfile,WORKDIR,1,['${MODEL_WORKSPACE}/${PACKAGE_NAME}']
IntelAI/models,latest,/dockerfiles/pytorch/pytorch-dlrm-bfloat16-training.Dockerfile,ENTRYPOINT,1,"['[""/tmp/entrypoint.sh""]']"
IntelAI/models,latest,/dockerfiles/pytorch/ubuntu18.04-pytorch-dlrm-bf16-training.Dockerfile,ARG,9,"['UBUNTU_VERSION', 'CONDA_INSTALL_PATH=/opt/conda', 'MINICONDA_VERSION=4.7.12', 'PY_VERSION', 'INTEL_PY_BUILD', 'PYTHON_VERSION=3.7', 'PACKAGE_DIR=model_packages', 'PACKAGE_NAME', 'MODEL_WORKSPACE']"
IntelAI/models,latest,/dockerfiles/pytorch/ubuntu18.04-pytorch-dlrm-bf16-training.Dockerfile,FROM,1,['ubuntu:${UBUNTU_VERSION}']
IntelAI/models,latest,/dockerfiles/pytorch/ubuntu18.04-pytorch-dlrm-bf16-training.Dockerfile,RUN,11,"['apt-get update &&     apt-get install --no-install-recommends --fix-missing -y         wget         ca-certificates &&     wget --quiet https://repo.anaconda.com/miniconda/Miniconda3-${MINICONDA_VERSION}-Linux-x86_64.sh -O miniconda.sh &&     bash miniconda.sh -b -p ${CONDA_INSTALL_PATH} &&     rm miniconda.sh &&     ln -s ${CONDA_INSTALL_PATH}/etc/profile.d/conda.sh /etc/profile.d/conda.sh &&     echo "". ${CONDA_INSTALL_PATH}/etc/profile.d/conda.sh"" >> ~/.bashrc &&     echo ""conda activate base"" >> ~/.bashrc', 'conda config --add channels intel &&     conda install  -y -q intelpython${PY_VERSION}_core==${INTEL_PY_BUILD} python=${PY_VERSION}', 'conda install -y -c intel/label/oneapibeta pytorch', 'conda install -y -c intel/label/oneapibeta intel-extension-for-pytorch', 'conda install -y -c intel/label/oneapibeta torch_ccl', 'apt-get -y update &&     apt-get install --no-install-recommends --fix-missing -y git &&     python -m pip install onnx &&     python -m pip install -e git+https://github.com/mlperf/logging@0.7.0-rc2#egg=logging &&     conda install -y -c intel scikit-learn &&     conda install -c conda-forge gperftools &&     conda clean -a', 'umask 002 && mkdir -p ${MODEL_WORKSPACE} && chgrp root ${MODEL_WORKSPACE} && chmod g+s+w,o+s+r ${MODEL_WORKSPACE}', 'chown -R root ${MODEL_WORKSPACE}/${PACKAGE_NAME} && chgrp -R root ${MODEL_WORKSPACE}/${PACKAGE_NAME} && chmod -R g+s+w ${MODEL_WORKSPACE}/${PACKAGE_NAME} && find ${MODEL_WORKSPACE}/${PACKAGE_NAME} -type d | xargs chmod o+r+x', 'apt-get update &&     apt-get install --no-install-recommends --fix-missing -y gosu', 'echo \'#!/bin/bash\\nUSER_ID=$USER_ID\\nUSER_NAME=$USER_NAME\\nGROUP_ID=$GROUP_ID\\nGROUP_NAME=$GROUP_NAME\\nif [[ $GROUP_NAME != root ]]; then\\n  groupadd -r -g $GROUP_ID $GROUP_NAME\\nfi\\nif [[ $USER_NAME != root ]]; then\\n  useradd --no-log-init -r -u $USER_ID -g $GROUP_NAME -s /bin/bash -M $USER_NAME\\nfi\\nexec /usr/sbin/gosu $USER_NAME:$GROUP_NAME ""$@""\\n \'>> /tmp/entrypoint.sh', 'chmod u+x,g+x /tmp/entrypoint.sh']"
IntelAI/models,latest,/dockerfiles/pytorch/ubuntu18.04-pytorch-dlrm-bf16-training.Dockerfile,ENV,7,"['PATH=""${CONDA_INSTALL_PATH}/bin:${PATH}""', 'LD_LIBRARY_PATH=""/opt/conda/lib/python${PYTHON_VERSION}/site-packages/ccl/lib/:${LD_LIBRARY_PATH}""', 'DEBIAN_FRONTEND=noninteractive', 'USER_ID=0', 'USER_NAME=root', 'GROUP_ID=0', 'GROUP_NAME=root']"
IntelAI/models,latest,/dockerfiles/pytorch/ubuntu18.04-pytorch-dlrm-bf16-training.Dockerfile,ADD,1,['--chown=0:0 ${PACKAGE_DIR}/${PACKAGE_NAME}.tar.gz ${MODEL_WORKSPACE}']
IntelAI/models,latest,/dockerfiles/pytorch/ubuntu18.04-pytorch-dlrm-bf16-training.Dockerfile,WORKDIR,1,['${MODEL_WORKSPACE}/${PACKAGE_NAME}']
IntelAI/models,latest,/dockerfiles/pytorch/ubuntu18.04-pytorch-dlrm-bf16-training.Dockerfile,ENTRYPOINT,1,"['[""/tmp/entrypoint.sh""]']"
IntelAI/models,latest,/dockerfiles/notebook_containers/performance.Dockerfile,ARG,4,"['UBUNTU_VERSION=20.04', 'TF_VERSION=2.6.0', 'MODEL_ZOO_VERSION=v2.4.0', 'RFCN_COMMIT=6c21084503b27a9ab118e1db25f79957d5ef540b']"
IntelAI/models,latest,/dockerfiles/notebook_containers/performance.Dockerfile,FROM,1,['ubuntu:${UBUNTU_VERSION}']
IntelAI/models,latest,/dockerfiles/notebook_containers/performance.Dockerfile,RUN,11,"['apt-get -y update &&     apt-get install -y         python3-dev         python3-pip         git         wget         unzip         numactl', 'pip3 -q install pip --upgrade &&     pip3 install -U virtualenv &&     pip3 install jupyter', 'git config --global user.email ""you@example.com"" &&     git config --global user.name ""Your Name""', 'git clone --single-branch --branch=${MODEL_ZOO_VERSION} https://github.com/IntelAI/models.git', 'virtualenv -p python3 ./venv-stock-tf', "". ./venv-stock-tf/bin/activate &&     pip install         cxxfilt          gitpython         tensorflow==${TF_VERSION}         ipykernel         matplotlib         pandas         'psutil>=5.6.7'         pycocotools &&     deactivate"", 'venv-stock-tf/bin/python -m ipykernel install --user --name=stock-tensorflow', 'virtualenv -p python3 ./venv-intel-tf', "". ./venv-intel-tf/bin/activate &&     pip install         cxxfilt          gitpython         intel-tensorflow==${TF_VERSION}         ipykernel         matplotlib         pandas         'psutil>=5.6.7'         pycocotools &&     deactivate"", 'venv-intel-tf/bin/python -m ipykernel install --user --name=intel-tensorflow', 'git clone https://github.com/tensorflow/models.git tensorflow-models-rfcn &&     cd tensorflow-models-rfcn &&     git reset --hard ${RFCN_COMMIT} &&     git apply /models/models/object_detection/tensorflow/rfcn/inference/tf-2.0.patch &&     git clone https://github.com/cocodataset/cocoapi.git &&     cd research &&     wget --quiet -O protobuf.zip https://github.com/google/protobuf/releases/download/v3.3.0/protoc-3.3.0-linux-x86_64.zip &&     unzip -o protobuf.zip &&     rm protobuf.zip &&     ./bin/protoc object_detection/protos/*.proto --python_out=.']"
IntelAI/models,latest,/dockerfiles/notebook_containers/performance.Dockerfile,WORKDIR,1,['models/docs/notebooks/perf_analysis']
IntelAI/models,latest,/dockerfiles/notebook_containers/performance.Dockerfile,EXPOSE,1,['8888']
IntelAI/models,latest,/dockerfiles/notebook_containers/performance.Dockerfile,ENV,1,['LISTEN_IP=localhost']
IntelAI/models,latest,/dockerfiles/notebook_containers/performance.Dockerfile,CMD,1,['jupyter notebook --port=8888 --no-browser --ip=${LISTEN_IP} --allow-root']
DLR-RM/rl-baselines3-zoo,latest,/docker/Dockerfile,ARG,2,"['PARENT_IMAGE', 'USE_GPU']"
DLR-RM/rl-baselines3-zoo,latest,/docker/Dockerfile,FROM,1,['$PARENT_IMAGE']
DLR-RM/rl-baselines3-zoo,latest,/docker/Dockerfile,RUN,4,"['apt-get -y update     && apt-get -y install     ffmpeg     freeglut3-dev     swig     xvfb     libxrandr2     && apt-get clean     && rm -rf /var/lib/apt/lists/*', 'mkdir -p ${CODE_DIR}/rl_zoo &&     pip uninstall -y stable-baselines3 &&     pip install -r /tmp/requirements.txt &&     pip install git+https://github.com/eleurent/highway-env &&     rm -rf $HOME/.cache/pip', 'pip install gym==0.19.0', 'chmod +x /tmp/entrypoint.sh']"
DLR-RM/rl-baselines3-zoo,latest,/docker/Dockerfile,ENV,3,"['CODE_DIR /root/code', 'VENV /root/venv', 'PATH=$VENV/bin:$PATH']"
DLR-RM/rl-baselines3-zoo,latest,/docker/Dockerfile,COPY,2,"['requirements.txt /tmp/', 'docker/entrypoint.sh /tmp/']"
DLR-RM/rl-baselines3-zoo,latest,/docker/Dockerfile,ENTRYPOINT,1,"['[""/tmp/entrypoint.sh""]']"
DLR-RM/rl-baselines3-zoo,latest,/docker/Dockerfile,CMD,1,['/bin/bash']
intel/dffml,latest,/Dockerfile,FROM,1,['python:3.7-buster']
intel/dffml,latest,/Dockerfile,ENV,3,"['DEBIAN_FRONTEND noninteractive', 'PYTHON_SHORT_VERSION ${PYTHON_SHORT_VERSION}', 'DFFML_RELEASE ${DFFML_RELEASE}']"
intel/dffml,latest,/Dockerfile,ARG,2,"['PYTHON_SHORT_VERSION=py37', 'DFFML_RELEASE=latest']"
intel/dffml,latest,/Dockerfile,WORKDIR,1,['/usr/src/dffml']
intel/dffml,latest,/Dockerfile,RUN,6,"['apt-get update &&   apt-get upgrade -y &&   apt-get clean &&   rm -rf /var/lib/apt/lists/*', 'python -m pip install --upgrade pip setuptools wheel', 'python -m pip install --upgrade twine', 'curl -o /tmp/tokei.tar.gz -L \'https://github.com/XAMPPRocky/tokei/releases/download/v12.0.4/tokei-x86_64-unknown-linux-gnu.tar.gz\' &&   sha384sum /tmp/tokei.tar.gz | grep ""^60ea048eca4d5e9f413400a561c775ccd21ffb63e3d15cc60703156bd634eb4c3ddec3bd8e8b8aabdaf97bb9b8d0ec11"" &&   tar xvzf /tmp/tokei.tar.gz -C ""/usr/bin/"" &&   rm /tmp/tokei.tar.gz &&   apt-get update &&   apt-get install -y     git     subversion     cloc     openssl &&   apt-get clean &&   rm -rf /var/lib/apt/lists/*', 'apt-get update &&   apt-get install -y     build-essential     swig &&   apt-get clean &&   rm -rf /var/lib/apt/lists/* &&   python -m pip install pyrfr cython liac-arff', '/usr/src/dffml/.ci/dffml-install.sh']"
intel/dffml,latest,/Dockerfile,COPY,2,"['. /usr/src/dffml', 'scripts/docker-entrypoint.sh /usr/bin/docker-entrypoint.sh']"
intel/dffml,latest,/Dockerfile,ENTRYPOINT,1,"['[""/usr/bin/docker-entrypoint.sh""]']"
intel/dffml,latest,/operations/deploy/Dockerfile,FROM,1,['ubuntu:20.04']
intel/dffml,latest,/operations/deploy/Dockerfile,RUN,2,"['apt-get update &&   apt-get install -y     gcc     python3-dev     python3-pip     python3     ca-certificates &&   python3 -m pip install -U pip &&   python3 -m pip install dffml-service-http &&   apt-get purge -y     gcc     python3-dev &&   rm -rf /var/lib/apt/lists/*', 'python3 -m pip install -e .[dev]']"
intel/dffml,latest,/operations/deploy/Dockerfile,WORKDIR,1,['/usr/src/app']
intel/dffml,latest,/operations/deploy/Dockerfile,COPY,1,['. /usr/src/app']
intel/dffml,latest,/operations/deploy/Dockerfile,ENTRYPOINT,1,"['[""python3"", ""-m"", ""dffml"", ""service"", ""http"", ""server"", ""-addr"", ""0.0.0.0""]']"
intel/dffml,latest,/operations/deploy/Dockerfile,CMD,1,"['[""-mc-config"", ""deploy/deploy""]']"
intel/dffml,latest,/operations/binsec/Dockerfile,FROM,1,['ubuntu:20.04']
intel/dffml,latest,/operations/binsec/Dockerfile,RUN,2,"['apt-get update &&   apt-get install -y     gcc     python3-dev     python3-pip     python3     ca-certificates &&   python3 -m pip install -U pip &&   python3 -m pip install dffml-service-http &&   apt-get purge -y     gcc     python3-dev &&   rm -rf /var/lib/apt/lists/*', 'python3 -m pip install -e .[dev]']"
intel/dffml,latest,/operations/binsec/Dockerfile,WORKDIR,1,['/usr/src/app']
intel/dffml,latest,/operations/binsec/Dockerfile,COPY,1,['. /usr/src/app']
intel/dffml,latest,/operations/binsec/Dockerfile,ENTRYPOINT,1,"['[""python3"", ""-m"", ""dffml"", ""service"", ""http"", ""server"", ""-addr"", ""0.0.0.0""]']"
intel/dffml,latest,/operations/binsec/Dockerfile,CMD,1,"['[""-mc-config"", ""dffml_operations_binsec/deploy""]']"
intel/dffml,latest,/operations/image/Dockerfile,FROM,1,['ubuntu:20.04']
intel/dffml,latest,/operations/image/Dockerfile,RUN,2,"['apt-get update &&   apt-get install -y     gcc     python3-dev     python3-pip     python3     ca-certificates &&   python3 -m pip install -U pip &&   python3 -m pip install dffml-service-http &&   apt-get purge -y     gcc     python3-dev &&   rm -rf /var/lib/apt/lists/*', 'python3 -m pip install -e .[dev]']"
intel/dffml,latest,/operations/image/Dockerfile,WORKDIR,1,['/usr/src/app']
intel/dffml,latest,/operations/image/Dockerfile,COPY,1,['. /usr/src/app']
intel/dffml,latest,/operations/image/Dockerfile,ENTRYPOINT,1,"['[""python3"", ""-m"", ""dffml"", ""service"", ""http"", ""server"", ""-addr"", ""0.0.0.0""]']"
intel/dffml,latest,/operations/image/Dockerfile,CMD,1,"['[""-mc-config"", ""image/deploy""]']"
intel/dffml,latest,/operations/nlp/Dockerfile,FROM,1,['ubuntu:20.04']
intel/dffml,latest,/operations/nlp/Dockerfile,RUN,2,"['apt-get update &&   apt-get install -y     gcc     python3-dev     python3-pip     python3     ca-certificates &&   python3 -m pip install -U pip &&   python3 -m pip install dffml-service-http &&   apt-get purge -y     gcc     python3-dev &&   rm -rf /var/lib/apt/lists/*', 'python3 -m pip install -e .[dev]']"
intel/dffml,latest,/operations/nlp/Dockerfile,WORKDIR,1,['/usr/src/app']
intel/dffml,latest,/operations/nlp/Dockerfile,COPY,1,['. /usr/src/app']
intel/dffml,latest,/operations/nlp/Dockerfile,ENTRYPOINT,1,"['[""python3"", ""-m"", ""dffml"", ""service"", ""http"", ""server"", ""-addr"", ""0.0.0.0""]']"
intel/dffml,latest,/operations/nlp/Dockerfile,CMD,1,"['[""-mc-config"", ""nlp/deploy""]']"
intel/dffml,latest,/operations/data/Dockerfile,FROM,1,['ubuntu:20.04']
intel/dffml,latest,/operations/data/Dockerfile,RUN,2,"['apt-get update &&   apt-get install -y     gcc     python3-dev     python3-pip     python3     ca-certificates &&   python3 -m pip install -U pip &&   python3 -m pip install dffml-service-http &&   apt-get purge -y     gcc     python3-dev &&   rm -rf /var/lib/apt/lists/*', 'python3 -m pip install -e .']"
intel/dffml,latest,/operations/data/Dockerfile,WORKDIR,1,['/usr/src/app']
intel/dffml,latest,/operations/data/Dockerfile,COPY,1,['. /usr/src/app']
intel/dffml,latest,/operations/data/Dockerfile,ENTRYPOINT,1,"['[""python3"", ""-m"", ""dffml"", ""service"", ""http"", ""server"", ""-addr"", ""0.0.0.0""]']"
intel/dffml,latest,/operations/data/Dockerfile,CMD,1,"['[""-mc-config"", ""dffml_operations_data/deploy""]']"
intel/dffml,latest,/examples/ffmpeg/Dockerfile,FROM,1,['ubuntu:20.04']
intel/dffml,latest,/examples/ffmpeg/Dockerfile,ENV,1,['DEBIAN_FRONTEND=noninteractive']
intel/dffml,latest,/examples/ffmpeg/Dockerfile,RUN,1,['apt-get update &&   apt-get install -y     gcc     python3-dev     python3-pip     python3     ca-certificates     ffmpeg &&   python3 -m pip install -U pip &&   python3 -m pip install dffml-service-http &&   python3 -m pip install dffml-config-yaml &&   apt-get purge -y     gcc     python3-dev &&   rm -rf /var/lib/apt/lists/*']
intel/dffml,latest,/examples/ffmpeg/Dockerfile,WORKDIR,1,['/usr/src/app']
intel/dffml,latest,/examples/ffmpeg/Dockerfile,COPY,1,['. /usr/src/app']
intel/dffml,latest,/examples/ffmpeg/Dockerfile,ENTRYPOINT,1,"['[""python3"", ""-m"", ""dffml"", ""service"", ""http"", ""server"", ""-addr"", ""0.0.0.0""]']"
intel/dffml,latest,/examples/ffmpeg/Dockerfile,CMD,1,"['[""-mc-config"", ""deploy""]']"
intel/dffml,latest,/dffml/skel/operations/Dockerfile,FROM,1,['ubuntu:20.04']
intel/dffml,latest,/dffml/skel/operations/Dockerfile,RUN,2,"['apt-get update &&   apt-get install -y     gcc     python3-dev     python3-pip     python3     ca-certificates &&   python3 -m pip install -U pip &&   python3 -m pip install dffml-service-http &&   apt-get purge -y     gcc     python3-dev &&   rm -rf /var/lib/apt/lists/*', 'python3 -m pip install -e .[dev]']"
intel/dffml,latest,/dffml/skel/operations/Dockerfile,WORKDIR,1,['/usr/src/app']
intel/dffml,latest,/dffml/skel/operations/Dockerfile,COPY,1,['. /usr/src/app']
intel/dffml,latest,/dffml/skel/operations/Dockerfile,ENTRYPOINT,1,"['[""python3"", ""-m"", ""dffml"", ""service"", ""http"", ""server"", ""-addr"", ""0.0.0.0""]']"
intel/dffml,latest,/dffml/skel/operations/Dockerfile,CMD,1,"['[""-mc-config"", ""REPLACE_IMPORT_PACKAGE_NAME/deploy""]']"
intel/dffml,latest,/scripts/gitpod.Dockerfile,FROM,1,['gitpod/workspace-full']
intel/dffml,latest,/scripts/gitpod.Dockerfile,USER,2,"['gitpod', 'root']"
intel/dffml,latest,/scripts/gitpod.Dockerfile,RUN,2,"[""echo 'unset PIP_USER' >> ~/.bashrc"", 'apt-get -q update &&   apt-get install -yq tmux libboost-all-dev build-essential swig &&   rm -rf /var/lib/apt/lists/* &&   pyenv global $(pyenv global | grep 3\\\\.) &&   curl -sSL ""https://github.com/XAMPPRocky/tokei/releases/download/v10.1.1/tokei-v10.1.1-x86_64-unknown-linux-gnu.tar.gz""     | tar -xvz &&   echo \'22699e16e71f07ff805805d26ee86ecb9b1052d7879350f7eb9ed87beb0e6b84fbb512963d01b75cec8e80532e4ea29a  tokei\'     | sha384sum -c - &&   mv tokei /usr/bin/']"
intel/dffml,latest,/service/http/Dockerfile,FROM,1,['intelotc/dffml']
intel/dffml,latest,/service/http/Dockerfile,RUN,2,"['pip install -U coverage codecov sphinx sphinxcontrib-asyncio', 'pip install -e .[dev]']"
intel/dffml,latest,/service/http/Dockerfile,WORKDIR,1,['/usr/src/dffml-service-http']
intel/dffml,latest,/service/http/Dockerfile,COPY,4,"['setup.py .', 'README.md .', 'dffml_service_http/version.py ./dffml_service_http/', '. .']"
intel/dffml,latest,/service/http/Dockerfile,CMD,1,"['[""service"", ""http"", ""server""]']"
IBM/fhe-toolkit-linux,latest,/Dockerfile.ALPINE-s390x.Toolkit,ARG,2,"['HElib_tag', 'HElib_cmake_lists_version']"
IBM/fhe-toolkit-linux,latest,/Dockerfile.ALPINE-s390x.Toolkit,FROM,1,['$HElib_tag']
IBM/fhe-toolkit-linux,latest,/Dockerfile.ALPINE-s390x.Toolkit,ENV,4,"['container docker', 'HELIB_CMAKE_LISTS_VERSON=$HElib_cmake_lists_version', 'HELAYERS_DATA_SETS_DIR=""/opt/IBM/FHE-Workspace/examples/data/""', 'HELAYERS_EXAMPLES_DIR=""/opt/IBM/FHE-Workspace/examples/""']"
IBM/fhe-toolkit-linux,latest,/Dockerfile.ALPINE-s390x.Toolkit,LABEL,1,"['maintainer=""Flavio Bergamaschi <flavio@uk.ibm.com>""']"
IBM/fhe-toolkit-linux,latest,/Dockerfile.ALPINE-s390x.Toolkit,EXPOSE,1,['8443/tcp']
IBM/fhe-toolkit-linux,latest,/Dockerfile.ALPINE-s390x.Toolkit,USER,2,"['root', 'fhe']"
IBM/fhe-toolkit-linux,latest,/Dockerfile.ALPINE-s390x.Toolkit,WORKDIR,2,"['/root', '/home/fhe']"
IBM/fhe-toolkit-linux,latest,/Dockerfile.ALPINE-s390x.Toolkit,RUN,18,"['apk add --no-cache openssl python3 pkgconfig xterm libx11-dev libxkbfile-dev libsecret-dev', 'apk add nodejs yarn', 'yarn global add node-gyp', 'yarn global add node-pty', 'curl -fsSL https://code-server.dev/install.sh | sh -s -- --version 3.9.1', 'mkdir -p /opt/IBM/IDE-Data', 'chown -R fhe:fhe /opt/IBM/IDE-Data', 'mkdir -p /opt/IBM/FHE-Workspace', 'chown -R fhe:fhe /opt/IBM/FHE-Workspace', 'mkdir /opt/IBM/FHE-Workspace/.vscode', 'mkdir -p /opt/IBM/FHE-Workspace/examples', 'cp -rp /opt/IBM/FHE-distro/HElib/examples /opt/IBM/FHE-Workspace', 'code-server --user-data-dir=/opt/IBM/IDE-Data/ --install-extension ms-vscode.cpptools --force', 'code-server --user-data-dir=/opt/IBM/IDE-Data/ --install-extension ms-vscode.cmake-tools --force', 'code-server --user-data-dir=/opt/IBM/IDE-Data/ --install-extension twxs.cmake --force', ""sed -i.bak 's/cert: false/cert: true/' /home/fhe/.config/code-server/config.yaml"", 'echo ""{\\""extensions.autoUpdate\\"": false}"" > /opt/IBM/IDE-Data/User/settings.json', 'echo ""{\\""extensions.autoUpdate\\"": false,\\n\\""workbench.colorTheme\\"": \\""Dark\\""}"" > /opt/IBM/IDE-Data/User/settings.json']"
IBM/fhe-toolkit-linux,latest,/Dockerfile.ALPINE-s390x.Toolkit,COPY,2,"['--chown=fhe:fhe ./IDE_Config /opt/IBM/FHE-Workspace/.vscode', '--chown=fhe:fhe ./samples/ /opt/IBM/FHE-Workspace/examples/']"
IBM/fhe-toolkit-linux,latest,/Dockerfile.ALPINE-s390x.Toolkit,CMD,1,"['[""code-server"",  ""--bind-addr"", ""0.0.0.0:8443"", ""--user-data-dir"", ""/opt/IBM/IDE-Data/"", ""/opt/IBM/FHE-Workspace"", ""--auth"", ""none"", ""--disable-telemetry""]']"
IBM/fhe-toolkit-linux,latest,/Dockerfile.UBUNTU-amd64.Toolkit,ARG,2,"['HElib_tag', 'HElib_cmake_lists_version']"
IBM/fhe-toolkit-linux,latest,/Dockerfile.UBUNTU-amd64.Toolkit,FROM,1,['$HElib_tag']
IBM/fhe-toolkit-linux,latest,/Dockerfile.UBUNTU-amd64.Toolkit,ENV,4,"['container docker', 'HELIB_CMAKE_LISTS_VERSON=$HElib_cmake_lists_version', 'HELAYERS_DATA_SETS_DIR=""/opt/IBM/FHE-Workspace/examples/data/""', 'HELAYERS_EXAMPLES_DIR=""/opt/IBM/FHE-Workspace/examples/""']"
IBM/fhe-toolkit-linux,latest,/Dockerfile.UBUNTU-amd64.Toolkit,LABEL,1,"['maintainer=""Flavio Bergamaschi <flavio@uk.ibm.com>""']"
IBM/fhe-toolkit-linux,latest,/Dockerfile.UBUNTU-amd64.Toolkit,EXPOSE,1,['8443/tcp']
IBM/fhe-toolkit-linux,latest,/Dockerfile.UBUNTU-amd64.Toolkit,USER,2,"['root', 'fhe']"
IBM/fhe-toolkit-linux,latest,/Dockerfile.UBUNTU-amd64.Toolkit,WORKDIR,2,"['/root', '/home/fhe']"
IBM/fhe-toolkit-linux,latest,/Dockerfile.UBUNTU-amd64.Toolkit,RUN,14,"['export DEBIAN_FRONTEND=noninteractive', 'curl -fsSL https://code-server.dev/install.sh | sh -s -- --version 3.9.1', 'mkdir -p /opt/IBM/IDE-Data', 'chown -R fhe:fhe /opt/IBM/IDE-Data', 'mkdir -p /opt/IBM/FHE-Workspace', 'chown -R fhe:fhe /opt/IBM/FHE-Workspace', 'mkdir /opt/IBM/FHE-Workspace/.vscode', 'mkdir -p /opt/IBM/FHE-Workspace/examples', 'cp -rp /opt/IBM/FHE-distro/HElib/examples /opt/IBM/FHE-Workspace', 'code-server --user-data-dir=/opt/IBM/IDE-Data/ --install-extension /opt/IBM/FHE-Workspace/cpptools-linux.vsix --force; exit 0', 'code-server --user-data-dir=/opt/IBM/IDE-Data/ --install-extension ms-vscode.cmake-tools --force', 'code-server --user-data-dir=/opt/IBM/IDE-Data/ --install-extension twxs.cmake --force', ""sed -i.bak 's/cert: false/cert: true/' /home/fhe/.config/code-server/config.yaml"", 'echo ""{\\""extensions.autoUpdate\\"": false,\\n\\""workbench.colorTheme\\"": \\""Dark\\""}"" > /opt/IBM/IDE-Data/User/settings.json']"
IBM/fhe-toolkit-linux,latest,/Dockerfile.UBUNTU-amd64.Toolkit,ADD,1,['https://github.com/microsoft/vscode-cpptools/releases/download/1.4.0/cpptools-linux.vsix /opt/IBM/FHE-Workspace/']
IBM/fhe-toolkit-linux,latest,/Dockerfile.UBUNTU-amd64.Toolkit,COPY,2,"['--chown=fhe:fhe ./IDE_Config /opt/IBM/FHE-Workspace/.vscode', '--chown=fhe:fhe ./samples/ /opt/IBM/FHE-Workspace/examples/']"
IBM/fhe-toolkit-linux,latest,/Dockerfile.UBUNTU-amd64.Toolkit,CMD,1,"['[""code-server"",  ""--bind-addr"", ""0.0.0.0:8443"", ""--user-data-dir"", ""/opt/IBM/IDE-Data/"", ""/opt/IBM/FHE-Workspace"", ""--auth"", ""none"", ""--disable-telemetry""]']"
IBM/fhe-toolkit-linux,latest,/Dockerfile.CENTOS.HElib,ARG,2,"['PlatformRelease', 'USER_ID']"
IBM/fhe-toolkit-linux,latest,/Dockerfile.CENTOS.HElib,FROM,1,['$PlatformRelease']
IBM/fhe-toolkit-linux,latest,/Dockerfile.CENTOS.HElib,ENV,1,['container docker']
IBM/fhe-toolkit-linux,latest,/Dockerfile.CENTOS.HElib,LABEL,1,"['maintainer=""Flavio Bergamaschi <flavio@uk.ibm.com>""']"
IBM/fhe-toolkit-linux,latest,/Dockerfile.CENTOS.HElib,USER,2,"['root', 'fhe']"
IBM/fhe-toolkit-linux,latest,/Dockerfile.CENTOS.HElib,RUN,25,"['yum -y update', 'yum clean packages', 'yum -y install epel-release', 'yum repolist', 'yum -y install autoconf xz curl wget tar git gcc gcc-c++ make diffutils file patchelf vim python3 python2 openssl-devel', 'yum clean packages', 'yum -y install gmp-devel', 'yum clean packages', 'yum -y install curl boost-devel', ""dnf install -y 'dnf-command(config-manager)'"", 'dnf config-manager -y --set-enabled powertools', 'dnf install -y hdf5-devel', 'yum clean packages', 'git clone https://github.com/bats-core/bats-core.git &&     cd bats-core &&     ./install.sh /usr/local', 'wget https://github.com/Kitware/CMake/releases/download/v3.17.3/cmake-3.17.3.tar.gz &&      tar -zxvf cmake-3.17.3.tar.gz &&      cd cmake-3.17.3 &&      ./bootstrap &&      make &&      make install', 'mkdir -p /opt/IBM/FHE-distro', 'mkdir -p /opt/IBM/FHE-distro', 'cd ./src &&     ./configure SHARED=on NTL_GMP_LIP=on NTL_THREADS=on NTL_THREAD_BOOST=on NTL_RANDOM_AES256CTR=on &&     make -j4 &&     make install &&     ldconfig &&     cd ../.. &&     rm -rf NTL', 'mkdir ./build &&     cd ./build &&     cmake -DCMAKE_BUILD_TYPE=RelWithDebInfo -DBUILD_SHARED=ON -DENABLE_THREADS=ON .. &&     make -j4 &&     make install &&     ldconfig', './bootstrap.sh --with-libraries=filesystem,system,thread &&     ./b2 -d0 -j4 install &&     ldconfig &&     cd .. &&     rm -rf boost', '/bin/bash ./install_system_wide.sh &&     ldconfig', 'adduser --uid ${USER_ID}  --comment ""FHE Toolkit User"" fhe', 'usermod -L fhe', 'mkdir -p /home/fhe/FHE_Examples', 'cp -pr /opt/IBM/FHE-distro/HElib/examples/. /home/fhe/FHE_Examples']"
IBM/fhe-toolkit-linux,latest,/Dockerfile.CENTOS.HElib,COPY,5,"['./DEPENDENCIES/NTL                /opt/IBM/FHE-distro/NTL', './DEPENDENCIES/HElib              /opt/IBM/FHE-distro/HElib', './samples/ /opt/IBM/FHE-distro/HElib/examples/', './DEPENDENCIES/boost              /opt/IBM/FHE-distro/boost', './DEPENDENCIES/ML-HElib    /opt/IBM/FHE-distro/ML-HElib']"
IBM/fhe-toolkit-linux,latest,/Dockerfile.CENTOS.HElib,WORKDIR,5,"['/opt/IBM/FHE-distro/NTL', '/opt/IBM/FHE-distro/HElib', '/opt/IBM/FHE-distro/boost', '/opt/IBM/FHE-distro/ML-HElib', '/home/fhe']"
IBM/fhe-toolkit-linux,latest,/Dockerfile.CENTOS.HElib,CMD,1,"['[""/usr/bin/bash""]']"
IBM/fhe-toolkit-linux,latest,/Dockerfile.FEDORA-amd64.Toolkit,ARG,2,"['HElib_tag', 'HElib_cmake_lists_version']"
IBM/fhe-toolkit-linux,latest,/Dockerfile.FEDORA-amd64.Toolkit,FROM,1,['$HElib_tag']
IBM/fhe-toolkit-linux,latest,/Dockerfile.FEDORA-amd64.Toolkit,ENV,4,"['container docker', 'HELIB_CMAKE_LISTS_VERSON=$HElib_cmake_lists_version', 'HELAYERS_DATA_SETS_DIR=""/opt/IBM/FHE-Workspace/examples/data/""', 'HELAYERS_EXAMPLES_DIR=""/opt/IBM/FHE-Workspace/examples/""']"
IBM/fhe-toolkit-linux,latest,/Dockerfile.FEDORA-amd64.Toolkit,LABEL,1,"['maintainer=""Flavio Bergamaschi <flavio@uk.ibm.com>""']"
IBM/fhe-toolkit-linux,latest,/Dockerfile.FEDORA-amd64.Toolkit,EXPOSE,1,['8443/tcp']
IBM/fhe-toolkit-linux,latest,/Dockerfile.FEDORA-amd64.Toolkit,USER,2,"['root', 'fhe']"
IBM/fhe-toolkit-linux,latest,/Dockerfile.FEDORA-amd64.Toolkit,WORKDIR,2,"['/root', '/home/fhe']"
IBM/fhe-toolkit-linux,latest,/Dockerfile.FEDORA-amd64.Toolkit,RUN,13,"['curl -fsSL https://code-server.dev/install.sh | sh -s -- --version 3.9.1 2>&1', 'mkdir -p /opt/IBM/IDE-Data', 'chown -R fhe:fhe /opt/IBM/IDE-Data', 'mkdir -p /opt/IBM/FHE-Workspace', 'chown -R fhe:fhe /opt/IBM/FHE-Workspace', 'mkdir /opt/IBM/FHE-Workspace/.vscode', 'mkdir -p /opt/IBM/FHE-Workspace/examples', 'cp -rp /opt/IBM/FHE-distro/HElib/examples /opt/IBM/FHE-Workspace', 'code-server --user-data-dir=/opt/IBM/IDE-Data/ --install-extension /opt/IBM/FHE-Workspace/cpptools-linux.vsix --force; exit 0', 'code-server --user-data-dir=/opt/IBM/IDE-Data/ --install-extension ms-vscode.cmake-tools --force', 'code-server --user-data-dir=/opt/IBM/IDE-Data/ --install-extension twxs.cmake --force', ""sed -i.bak 's/cert: false/cert: true/' ~/.config/code-server/config.yaml"", 'echo ""{\\""extensions.autoUpdate\\"": false,\\n\\""workbench.colorTheme\\"": \\""Dark\\""}"" > /opt/IBM/IDE-Data/User/settings.json']"
IBM/fhe-toolkit-linux,latest,/Dockerfile.FEDORA-amd64.Toolkit,ADD,1,['https://github.com/microsoft/vscode-cpptools/releases/download/1.4.0/cpptools-linux.vsix /opt/IBM/FHE-Workspace/']
IBM/fhe-toolkit-linux,latest,/Dockerfile.FEDORA-amd64.Toolkit,COPY,2,"['--chown=fhe:fhe ./IDE_Config /opt/IBM/FHE-Workspace/.vscode', '--chown=fhe:fhe ./samples/ /opt/IBM/FHE-Workspace/examples/']"
IBM/fhe-toolkit-linux,latest,/Dockerfile.FEDORA-amd64.Toolkit,CMD,1,"['[""code-server"",  ""--bind-addr"", ""0.0.0.0:8443"", ""--user-data-dir"", ""/opt/IBM/IDE-Data/"", ""/opt/IBM/FHE-Workspace"", ""--auth"", ""none"", ""--disable-telemetry""]']"
IBM/fhe-toolkit-linux,latest,/Dockerfile.ALPINE.HElib,ARG,2,"['PlatformRelease', 'USER_ID']"
IBM/fhe-toolkit-linux,latest,/Dockerfile.ALPINE.HElib,FROM,1,['$PlatformRelease']
IBM/fhe-toolkit-linux,latest,/Dockerfile.ALPINE.HElib,ENV,1,['container docker']
IBM/fhe-toolkit-linux,latest,/Dockerfile.ALPINE.HElib,LABEL,1,"['maintainer=""Gregory Boland <boland@us.ibm.com>""']"
IBM/fhe-toolkit-linux,latest,/Dockerfile.ALPINE.HElib,USER,1,['root']
IBM/fhe-toolkit-linux,latest,/Dockerfile.ALPINE.HElib,RUN,20,"['apk update && apk upgrade', 'apk add --no-cache autoconf bash xz curl wget tar git gcc g++ cmake make diffutils file patchelf vim', 'apk add coreutils ncurses', 'curl -#L https://github.com/bats-core/bats-core/archive/master.zip | unzip -', 'bash bats-core-master/install.sh /usr/local', 'rm -rf ./bats-core-master', 'apk add --no-cache doxygen', 'apk add --no-cache gmp-dev', 'apk add --no-cache --repository http://dl-cdn.alpinelinux.org/alpine/edge/community hdf5-dev', 'mkdir -p /opt/IBM/FHE-distro', 'cd ./src &&     ./configure SHARED=on NTL_GMP_LIP=on NTL_THREADS=on NTL_THREAD_BOOST=on NTL_RANDOM_AES256CTR=on &&     make -j4 &&     make install &&     ldconfig / &&     cd ../.. &&     rm -rf NTL', 'mkdir ./build &&     cd ./build &&     cmake -DCMAKE_BUILD_TYPE=RelWithDebInfo -DBUILD_SHARED=ON -DENABLE_THREADS=ON .. &&     make -j4 &&     make install &&     ldconfig /', 'doxygen Doxyfile', './bootstrap.sh --with-libraries=filesystem,system,thread &&     ./b2 -d0 -j4 install &&     ldconfig / &&     cd .. &&     rm -rf boost', '/bin/bash ./install_system_wide.sh &&     ldconfig /', 'doxygen Doxyfile', 'adduser --uid ${USER_ID} --disabled-password fhe', 'mkdir -p /home/fhe/FHE_Examples', 'cp -pr /opt/IBM/FHE-distro/HElib/examples /home/fhe/FHE_Examples', 'chown -R fhe:fhe /opt/IBM']"
IBM/fhe-toolkit-linux,latest,/Dockerfile.ALPINE.HElib,COPY,4,"['./DEPENDENCIES/NTL                /opt/IBM/FHE-distro/NTL', './DEPENDENCIES/HElib              /opt/IBM/FHE-distro/HElib', './DEPENDENCIES/boost              /opt/IBM/FHE-distro/boost', './DEPENDENCIES/ML-HElib    /opt/IBM/FHE-distro/ML-HElib']"
IBM/fhe-toolkit-linux,latest,/Dockerfile.ALPINE.HElib,WORKDIR,7,"['/opt/IBM/FHE-distro/NTL', '/opt/IBM/FHE-distro/HElib', '/opt/IBM/FHE-distro/HElib/documentation', '/opt/IBM/FHE-distro/boost', '/opt/IBM/FHE-distro/ML-HElib', '/opt/IBM/FHE-distro/ML-HElib/documentation', '/home/fhe']"
IBM/fhe-toolkit-linux,latest,/Dockerfile.ALPINE.HElib,CMD,1,"['[""bash""]']"
IBM/fhe-toolkit-linux,latest,/Dockerfile.FEDORA.HElib,ARG,2,"['PlatformRelease', 'USER_ID']"
IBM/fhe-toolkit-linux,latest,/Dockerfile.FEDORA.HElib,FROM,1,['$PlatformRelease']
IBM/fhe-toolkit-linux,latest,/Dockerfile.FEDORA.HElib,ENV,1,['container docker']
IBM/fhe-toolkit-linux,latest,/Dockerfile.FEDORA.HElib,LABEL,1,"['maintainer=""Flavio Bergamaschi <flavio@uk.ibm.com>""']"
IBM/fhe-toolkit-linux,latest,/Dockerfile.FEDORA.HElib,USER,2,"['root', 'fhe']"
IBM/fhe-toolkit-linux,latest,/Dockerfile.FEDORA.HElib,RUN,21,"['yum -y update', 'yum clean packages', 'yum -y install doxygen', 'yum -y install autoconf xz curl wget tar cmake git gcc gcc-c++ make diffutils file patchelf vim', 'yum clean packages', 'yum -y install gmp-devel', 'yum clean packages', 'yum -y install hdf5-devel', 'yum clean packages', 'git clone https://github.com/bats-core/bats-core.git &&     cd bats-core &&     ./install.sh /usr/local', 'mkdir -p /opt/IBM/FHE-distro', 'cd ./src &&     ./configure SHARED=on NTL_GMP_LIP=on NTL_THREADS=on NTL_THREAD_BOOST=on NTL_RANDOM_AES256CTR=on &&     make -j4 &&     make install &&     ldconfig &&     cd ../.. &&     rm -rf NTL', 'mkdir ./build &&     cd ./build &&     cmake -DCMAKE_BUILD_TYPE=RelWithDebInfo -DBUILD_SHARED=ON -DENABLE_THREADS=ON .. &&     make -j4 &&     make install &&     ldconfig', './bootstrap.sh --with-libraries=filesystem,system,thread &&     ./b2 -d0 -j4 install &&     ldconfig &&     cd .. &&     rm -rf boost', 'doxygen Doxyfile', '/bin/bash ./install_system_wide.sh &&     ldconfig', 'doxygen Doxyfile', 'adduser --uid ${USER_ID}  --comment ""FHE Toolkit User"" fhe', 'usermod -L fhe', 'mkdir -p /home/fhe/FHE_Examples', 'cp -pr /opt/IBM/FHE-distro/HElib/examples/. /home/fhe/FHE_Examples']"
IBM/fhe-toolkit-linux,latest,/Dockerfile.FEDORA.HElib,COPY,4,"['./DEPENDENCIES/NTL                /opt/IBM/FHE-distro/NTL', './DEPENDENCIES/HElib              /opt/IBM/FHE-distro/HElib', './DEPENDENCIES/boost              /opt/IBM/FHE-distro/boost', './DEPENDENCIES/ML-HElib    /opt/IBM/FHE-distro/ML-HElib']"
IBM/fhe-toolkit-linux,latest,/Dockerfile.FEDORA.HElib,WORKDIR,7,"['/opt/IBM/FHE-distro/NTL', '/opt/IBM/FHE-distro/HElib', '/opt/IBM/FHE-distro/boost', '/opt/IBM/FHE-distro/HElib/documentation', '/opt/IBM/FHE-distro/ML-HElib', '/opt/IBM/FHE-distro/ML-HElib/documentation', '/home/fhe']"
IBM/fhe-toolkit-linux,latest,/Dockerfile.FEDORA.HElib,CMD,1,"['[""/usr/bin/bash""]']"
IBM/fhe-toolkit-linux,latest,/Dockerfile.ALPINE-amd64.Toolkit,ARG,2,"['HElib_tag', 'HElib_cmake_lists_version']"
IBM/fhe-toolkit-linux,latest,/Dockerfile.ALPINE-amd64.Toolkit,FROM,1,['$HElib_tag']
IBM/fhe-toolkit-linux,latest,/Dockerfile.ALPINE-amd64.Toolkit,ENV,4,"['container docker', 'HELIB_CMAKE_LISTS_VERSON=$HElib_cmake_lists_version', 'HELAYERS_DATA_SETS_DIR=""/opt/IBM/FHE-Workspace/examples/data/""', 'HELAYERS_EXAMPLES_DIR=""/opt/IBM/FHE-Workspace/examples/""']"
IBM/fhe-toolkit-linux,latest,/Dockerfile.ALPINE-amd64.Toolkit,LABEL,1,"['maintainer=""Gregory Boland <boland@us.ibm.com>""']"
IBM/fhe-toolkit-linux,latest,/Dockerfile.ALPINE-amd64.Toolkit,EXPOSE,1,['8443/tcp']
IBM/fhe-toolkit-linux,latest,/Dockerfile.ALPINE-amd64.Toolkit,USER,2,"['root', 'fhe']"
IBM/fhe-toolkit-linux,latest,/Dockerfile.ALPINE-amd64.Toolkit,WORKDIR,2,"['/root', '/home/fhe']"
IBM/fhe-toolkit-linux,latest,/Dockerfile.ALPINE-amd64.Toolkit,RUN,16,"['apk add --no-cache openssl python3 pkgconfig xterm libx11-dev libxkbfile-dev libsecret-dev nodejs yarn', 'yarn global add node-gyp', 'yarn global add node-pty', 'yarn global add code-server', 'mkdir -p /opt/IBM/IDE-Data', 'chown -R fhe:fhe /opt/IBM/IDE-Data', 'mkdir -p /opt/IBM/FHE-Workspace', 'chown -R fhe:fhe /opt/IBM/FHE-Workspace', 'mkdir /opt/IBM/FHE-Workspace/.vscode', 'mkdir -p /opt/IBM/FHE-Workspace/examples', 'cp -rp /opt/IBM/FHE-distro/HElib/examples /opt/IBM/FHE-Workspace', 'code-server --user-data-dir=/opt/IBM/IDE-Data/ --install-extension /opt/IBM/FHE-Workspace/cpptools-linux.vsix --force; exit 0', 'code-server --user-data-dir=/opt/IBM/IDE-Data/ --install-extension ms-vscode.cmake-tools --force', 'code-server --user-data-dir=/opt/IBM/IDE-Data/ --install-extension twxs.cmake --force', ""sed -i.bak 's/cert: false/cert: true/' /home/fhe/.config/code-server/config.yaml"", 'echo ""{\\""extensions.autoUpdate\\"": false,\\n\\""workbench.colorTheme\\"": \\""Dark\\""}"" > /opt/IBM/IDE-Data/User/settings.json']"
IBM/fhe-toolkit-linux,latest,/Dockerfile.ALPINE-amd64.Toolkit,ADD,1,['https://github.com/microsoft/vscode-cpptools/releases/download/1.3.1/cpptools-linux.vsix /opt/IBM/FHE-Workspace/']
IBM/fhe-toolkit-linux,latest,/Dockerfile.ALPINE-amd64.Toolkit,COPY,2,"['--chown=fhe:fhe ./IDE_Config /opt/IBM/FHE-Workspace/.vscode', '--chown=fhe:fhe ./samples/ /opt/IBM/FHE-Workspace/examples/']"
IBM/fhe-toolkit-linux,latest,/Dockerfile.ALPINE-amd64.Toolkit,CMD,1,"['[""code-server"",  ""--bind-addr"", ""0.0.0.0:8443"", ""--user-data-dir"", ""/opt/IBM/IDE-Data/"", ""/opt/IBM/FHE-Workspace"", ""--auth"", ""none"", ""--disable-telemetry""]']"
IBM/fhe-toolkit-linux,latest,/Dockerfile.UBUNTU.HElib,ARG,2,"['PlatformRelease', 'USER_ID']"
IBM/fhe-toolkit-linux,latest,/Dockerfile.UBUNTU.HElib,FROM,1,['$PlatformRelease']
IBM/fhe-toolkit-linux,latest,/Dockerfile.UBUNTU.HElib,ENV,1,['container docker']
IBM/fhe-toolkit-linux,latest,/Dockerfile.UBUNTU.HElib,LABEL,1,"['maintainer=""Flavio Bergamaschi <flavio@uk.ibm.com>""']"
IBM/fhe-toolkit-linux,latest,/Dockerfile.UBUNTU.HElib,USER,2,"['root', 'fhe']"
IBM/fhe-toolkit-linux,latest,/Dockerfile.UBUNTU.HElib,RUN,24,"['apt update', 'export DEBIAN_FRONTEND=noninteractive', 'DEBIAN_FRONTEND=noninteractive apt update', 'DEBIAN_FRONTEND=noninteractive apt dist-upgrade -y', 'apt-get update  && DEBIAN_FRONTEND=noninteractive apt-get install -y     doxygen', 'DEBIAN_FRONTEND=noninteractive apt install -y tzdata', 'ln -fs /usr/share/zoneinfo/UTC /etc/localtime', 'dpkg-reconfigure --frontend noninteractive tzdata', 'DEBIAN_FRONTEND=noninteractive apt install -y     xz-utils             curl                 wget                 build-essential      git                  cmake                m4                   file                 patchelf             vim', 'git clone https://github.com/bats-core/bats-core.git &&     cd bats-core &&     ./install.sh /usr/local', 'DEBIAN_FRONTEND=noninteractive apt install -y libgmp-dev', 'DEBIAN_FRONTEND=noninteractive apt install -y libhdf5-dev libhdf5-103', 'DEBIAN_FRONTEND=noninteractive apt autoremove -y', 'DEBIAN_FRONTEND=noninteractive apt autoclean -y', 'mkdir -p /opt/IBM/FHE-distro', 'cd ./src &&     ./configure SHARED=on NTL_GMP_LIP=on NTL_THREADS=on NTL_THREAD_BOOST=on NTL_RANDOM_AES256CTR=on &&     make -j4 &&     make install &&     ldconfig &&     cd ../.. &&     rm -rf NTL', 'mkdir ./build &&     cd ./build &&     cmake -DCMAKE_BUILD_TYPE=RelWithDebInfo -DBUILD_SHARED=ON -DENABLE_THREADS=ON .. &&     make -j4 &&     make install &&     ldconfig', 'doxygen Doxyfile', './bootstrap.sh --with-libraries=filesystem,system,thread &&     ./b2 -d0 -j4 install &&     ldconfig &&     cd .. &&     rm -rf boost', '/bin/bash ./install_system_wide.sh &&     ldconfig', 'doxygen Doxyfile', 'adduser --uid ${USER_ID}  --gecos ""FHE Toolkit User"" --disabled-login fhe', 'mkdir -p /home/fhe/FHE_Examples', 'cp -pr /opt/IBM/FHE-distro/HElib/examples/. /home/fhe/FHE_Examples']"
IBM/fhe-toolkit-linux,latest,/Dockerfile.UBUNTU.HElib,COPY,4,"['./DEPENDENCIES/NTL                /opt/IBM/FHE-distro/NTL', './DEPENDENCIES/HElib              /opt/IBM/FHE-distro/HElib', './DEPENDENCIES/boost              /opt/IBM/FHE-distro/boost', './DEPENDENCIES/ML-HElib    /opt/IBM/FHE-distro/ML-HElib']"
IBM/fhe-toolkit-linux,latest,/Dockerfile.UBUNTU.HElib,WORKDIR,7,"['/opt/IBM/FHE-distro/NTL', '/opt/IBM/FHE-distro/HElib', '/opt/IBM/FHE-distro/HElib/documentation', '/opt/IBM/FHE-distro/boost', '/opt/IBM/FHE-distro/ML-HElib', '/opt/IBM/FHE-distro/ML-HElib/documentation', '/home/fhe']"
IBM/fhe-toolkit-linux,latest,/Dockerfile.UBUNTU.HElib,CMD,1,"['[""/usr/bin/bash""]']"
IBM/fhe-toolkit-linux,latest,/Dockerfile.FEDORA-s390x.Toolkit,ARG,2,"['HElib_tag', 'HElib_cmake_lists_version']"
IBM/fhe-toolkit-linux,latest,/Dockerfile.FEDORA-s390x.Toolkit,FROM,1,['$HElib_tag']
IBM/fhe-toolkit-linux,latest,/Dockerfile.FEDORA-s390x.Toolkit,ENV,4,"['container docker', 'HELIB_CMAKE_LISTS_VERSON=$HElib_cmake_lists_version', 'HELAYERS_DATA_SETS_DIR=""/opt/IBM/FHE-Workspace/examples/data/""', 'HELAYERS_EXAMPLES_DIR=""/opt/IBM/FHE-Workspace/examples/""']"
IBM/fhe-toolkit-linux,latest,/Dockerfile.FEDORA-s390x.Toolkit,LABEL,1,"['maintainer=""Flavio Bergamaschi <flavio@uk.ibm.com>""']"
IBM/fhe-toolkit-linux,latest,/Dockerfile.FEDORA-s390x.Toolkit,EXPOSE,1,['8443/tcp']
IBM/fhe-toolkit-linux,latest,/Dockerfile.FEDORA-s390x.Toolkit,USER,2,"['root', 'fhe']"
IBM/fhe-toolkit-linux,latest,/Dockerfile.FEDORA-s390x.Toolkit,WORKDIR,2,"['/root', '/home/fhe']"
IBM/fhe-toolkit-linux,latest,/Dockerfile.FEDORA-s390x.Toolkit,RUN,17,"['yum -y install     python          python3         pkg-config      xterm           libX11-devel          libxkbfile-devel     libsecret-devel', 'yum clean packages', 'curl -fsSL https://nodejs.org/dist/v14.17.3/node-v14.17.3-linux-s390x.tar.xz | tar --no-same-owner -Jxf -', 'cp -pr ./node-v14.17.3-linux-s390x/bin                ./node-v14.17.3-linux-s390x/include            ./node-v14.17.3-linux-s390x/lib                ./node-v14.17.3-linux-s390x/share              /usr/local', 'npm install --global yarn', 'curl -fsSL https://code-server.dev/install.sh | sh -s -- --version 3.9.1', 'mkdir -p /opt/IBM/IDE-Data', 'chown -R fhe:fhe /opt/IBM/IDE-Data', 'mkdir -p /opt/IBM/FHE-Workspace', 'chown -R fhe:fhe /opt/IBM/FHE-Workspace', 'mkdir /opt/IBM/FHE-Workspace/.vscode', 'mkdir -p /opt/IBM/FHE-Workspace/examples', 'cp -rp /opt/IBM/FHE-distro/HElib/examples /opt/IBM/FHE-Workspace', 'code-server --user-data-dir=/opt/IBM/IDE-Data/ --install-extension ms-vscode.cmake-tools --force', 'code-server --user-data-dir=/opt/IBM/IDE-Data/ --install-extension twxs.cmake --force', ""sed -i.bak 's/cert: false/cert: true/' /home/fhe/.config/code-server/config.yaml"", 'echo ""{\\""extensions.autoUpdate\\"": false,\\n\\""workbench.colorTheme\\"": \\""Dark\\""}"" > /opt/IBM/IDE-Data/User/settings.json']"
IBM/fhe-toolkit-linux,latest,/Dockerfile.FEDORA-s390x.Toolkit,COPY,2,"['--chown=fhe:fhe ./IDE_Config /opt/IBM/FHE-Workspace/.vscode', '--chown=fhe:fhe ./samples/ /opt/IBM/FHE-Workspace/examples/']"
IBM/fhe-toolkit-linux,latest,/Dockerfile.FEDORA-s390x.Toolkit,CMD,1,"['[""code-server"",  ""--bind-addr"", ""0.0.0.0:8443"", ""--user-data-dir"", ""/opt/IBM/IDE-Data/"", ""/opt/IBM/FHE-Workspace"", ""--auth"", ""none"", ""--disable-telemetry""]']"
IBM/fhe-toolkit-linux,latest,/Dockerfile.UBUNTU-s390x.Toolkit,ARG,2,"['HElib_tag', 'HElib_cmake_lists_version']"
IBM/fhe-toolkit-linux,latest,/Dockerfile.UBUNTU-s390x.Toolkit,FROM,1,['$HElib_tag']
IBM/fhe-toolkit-linux,latest,/Dockerfile.UBUNTU-s390x.Toolkit,ENV,4,"['container docker', 'HELIB_CMAKE_LISTS_VERSON=$HElib_cmake_lists_version', 'HELAYERS_DATA_SETS_DIR=""/opt/IBM/FHE-Workspace/examples/data/""', 'HELAYERS_EXAMPLES_DIR=""/opt/IBM/FHE-Workspace/examples/""']"
IBM/fhe-toolkit-linux,latest,/Dockerfile.UBUNTU-s390x.Toolkit,LABEL,1,"['maintainer=""Flavio Bergamaschi <flavio@uk.ibm.com>""']"
IBM/fhe-toolkit-linux,latest,/Dockerfile.UBUNTU-s390x.Toolkit,EXPOSE,1,['8443/tcp']
IBM/fhe-toolkit-linux,latest,/Dockerfile.UBUNTU-s390x.Toolkit,USER,2,"['root', 'fhe']"
IBM/fhe-toolkit-linux,latest,/Dockerfile.UBUNTU-s390x.Toolkit,WORKDIR,2,"['/root', '/home/fhe']"
IBM/fhe-toolkit-linux,latest,/Dockerfile.UBUNTU-s390x.Toolkit,RUN,17,"['export DEBIAN_FRONTEND=noninteractive', 'DEBIAN_FRONTEND=noninteractive apt install -y     python          python3         pkg-config      xterm           libx11-dev      libxkbfile-dev     libsecret-1-dev', 'curl -fsSL https://nodejs.org/dist/v14.17.3/node-v14.17.3-linux-s390x.tar.xz | tar --no-same-owner -Jxf -', 'cp -pr ./node-v14.17.3-linux-s390x/bin                ./node-v14.17.3-linux-s390x/include            ./node-v14.17.3-linux-s390x/lib                ./node-v14.17.3-linux-s390x/share              /usr/local', 'npm install --global yarn', 'curl -fsSL https://code-server.dev/install.sh | sh -s -- --version 3.9.1 2>&1', 'mkdir -p /opt/IBM/IDE-Data', 'chown -R fhe:fhe /opt/IBM/IDE-Data', 'mkdir -p /opt/IBM/FHE-Workspace', 'chown -R fhe:fhe /opt/IBM/FHE-Workspace', 'mkdir /opt/IBM/FHE-Workspace/.vscode', 'mkdir -p /opt/IBM/FHE-Workspace/examples', 'cp -rp /opt/IBM/FHE-distro/HElib/examples /opt/IBM/FHE-Workspace', 'code-server --user-data-dir=/opt/IBM/IDE-Data/ --install-extension ms-vscode.cmake-tools --force', 'code-server --user-data-dir=/opt/IBM/IDE-Data/ --install-extension twxs.cmake --force', ""sed -i.bak 's/cert: false/cert: true/' /home/fhe/.config/code-server/config.yaml"", 'echo ""{\\""extensions.autoUpdate\\"": false,\\n\\""workbench.colorTheme\\"": \\""Dark\\""}"" > /opt/IBM/IDE-Data/User/settings.json']"
IBM/fhe-toolkit-linux,latest,/Dockerfile.UBUNTU-s390x.Toolkit,COPY,2,"['--chown=fhe:fhe ./IDE_Config /opt/IBM/FHE-Workspace/.vscode', '--chown=fhe:fhe ./samples/ /opt/IBM/FHE-Workspace/examples/']"
IBM/fhe-toolkit-linux,latest,/Dockerfile.UBUNTU-s390x.Toolkit,CMD,1,"['[""code-server"",  ""--bind-addr"", ""0.0.0.0:8443"", ""--user-data-dir"", ""/opt/IBM/IDE-Data/"", ""/opt/IBM/FHE-Workspace"", ""--auth"", ""none"", ""--disable-telemetry""]']"
IBM/fhe-toolkit-linux,latest,/Dockerfile.CENTOS-amd64.Toolkit,ARG,2,"['HElib_tag', 'HElib_cmake_lists_version']"
IBM/fhe-toolkit-linux,latest,/Dockerfile.CENTOS-amd64.Toolkit,FROM,1,['$HElib_tag']
IBM/fhe-toolkit-linux,latest,/Dockerfile.CENTOS-amd64.Toolkit,ENV,4,"['container docker', 'HELIB_CMAKE_LISTS_VERSON=$HElib_cmake_lists_version', 'HELAYERS_DATA_SETS_DIR=""/opt/IBM/FHE-Workspace/examples/data/""', 'HELAYERS_EXAMPLES_DIR=""/opt/IBM/FHE-Workspace/examples/""']"
IBM/fhe-toolkit-linux,latest,/Dockerfile.CENTOS-amd64.Toolkit,LABEL,1,"['maintainer=""Flavio Bergamaschi <flavio@uk.ibm.com>""']"
IBM/fhe-toolkit-linux,latest,/Dockerfile.CENTOS-amd64.Toolkit,EXPOSE,1,['8443/tcp']
IBM/fhe-toolkit-linux,latest,/Dockerfile.CENTOS-amd64.Toolkit,USER,2,"['root', 'fhe']"
IBM/fhe-toolkit-linux,latest,/Dockerfile.CENTOS-amd64.Toolkit,WORKDIR,2,"['/root', '/home/fhe']"
IBM/fhe-toolkit-linux,latest,/Dockerfile.CENTOS-amd64.Toolkit,RUN,13,"['curl -fsSL https://code-server.dev/install.sh | sh -s -- --version 3.9.1 2>&1', 'mkdir -p /opt/IBM/IDE-Data', 'chown -R fhe:fhe /opt/IBM/IDE-Data', 'mkdir -p /opt/IBM/FHE-Workspace', 'chown -R fhe:fhe /opt/IBM/FHE-Workspace', 'mkdir /opt/IBM/FHE-Workspace/.vscode', 'mkdir -p /opt/IBM/FHE-Workspace/examples', 'cp -rp /opt/IBM/FHE-distro/HElib/examples /opt/IBM/FHE-Workspace', 'code-server --user-data-dir=/opt/IBM/IDE-Data/ --install-extension /opt/IBM/FHE-Workspace/cpptools-linux.vsix --force; exit 0', 'code-server --user-data-dir=/opt/IBM/IDE-Data/ --install-extension ms-vscode.cmake-tools --force', 'code-server --user-data-dir=/opt/IBM/IDE-Data/ --install-extension twxs.cmake --force', ""sed -i.bak 's/cert: false/cert: true/' ~/.config/code-server/config.yaml"", 'echo ""{\\""extensions.autoUpdate\\"": false,\\n\\""workbench.colorTheme\\"": \\""Dark\\""}"" > /opt/IBM/IDE-Data/User/settings.json']"
IBM/fhe-toolkit-linux,latest,/Dockerfile.CENTOS-amd64.Toolkit,ADD,1,['https://github.com/microsoft/vscode-cpptools/releases/download/1.4.0/cpptools-linux.vsix /opt/IBM/FHE-Workspace/']
IBM/fhe-toolkit-linux,latest,/Dockerfile.CENTOS-amd64.Toolkit,COPY,2,"['--chown=fhe:fhe ./IDE_Config /opt/IBM/FHE-Workspace/.vscode', '--chown=fhe:fhe ./samples/ /opt/IBM/FHE-Workspace/examples/']"
IBM/fhe-toolkit-linux,latest,/Dockerfile.CENTOS-amd64.Toolkit,CMD,1,"['[""code-server"",  ""--bind-addr"", ""0.0.0.0:8443"", ""--user-data-dir"", ""/opt/IBM/IDE-Data/"", ""/opt/IBM/FHE-Workspace"", ""--auth"", ""none"", ""--disable-telemetry""]']"
openvinotoolkit/model_server,latest,/DockerfileMakePackage,ARG,3,"['BUILD_IMAGE=ovms-centos:latest', 'BASE_OS=centos', 'ov_use_binary=1']"
openvinotoolkit/model_server,latest,/DockerfileMakePackage,FROM,1,['$BUILD_IMAGE']
openvinotoolkit/model_server,latest,/DockerfileMakePackage,SHELL,1,"['[""/bin/bash"", ""-c""]']"
openvinotoolkit/model_server,latest,/DockerfileMakePackage,RUN,44,"['mkdir /patchelf && cd /patchelf && \twget https://github.com/NixOS/patchelf/archive/0.10.tar.gz && \ttar -xf 0.10.tar.gz && ls -lah && cd */ && \t./bootstrap.sh && ./configure && make && make install', 'mkdir -vp /ovms_release/bin', 'mkdir -vp /ovms_release/deps', 'mkdir -vp /ovms_release/lib', 'mkdir -vp /ovms_release/lib/hddl/config', 'cp /ovms/metadata.json /ovms_release/', 'if [ ""$ov_use_binary"" == ""0"" ] ; then true ; else exit 0 ; fi ; cp -v /openvino/bin/intel64/Release/lib/plugins.xml /ovms_release/lib/', 'if [ ""$ov_use_binary"" == ""1"" ] ; then true ; else exit 0 ; fi ; cp -v /opt/intel/openvino/deployment_tools/inference_engine/external/hddl/config/* /ovms_release/lib/hddl/config/ || true', 'if [ ""$ov_use_binary"" == ""1"" ] ; then true ; else exit 0 ; fi ; cp -vr /opt/intel/openvino/deployment_tools/inference_engine/external/hddl/etc/* /ovms_release/lib/hddl/etc/ || true', 'if [ ""$ov_use_binary"" == ""1"" ] ; then true ; else exit 0 ; fi ; cp -v /opt/intel/openvino/deployment_tools/inference_engine/lib/intel64/plugins.xml /ovms_release/lib/ && cp /opt/intel/openvino/install_dependencies/* /ovms_release/deps/', 'if [ ""$ov_use_binary"" == ""1"" ] ; then true ; else exit 0 ; fi ; rm -vrf /ovms_release/deps/*-devel-*', ""find /ovms/bazel-out/k8-*/bin -iname '*.so*' -exec cp -v {} /ovms_release/lib/ \\;"", 'cd /ovms_release/lib/ ; rm -f libazurestorage.so.* ; ln -s libazurestorage.so libazurestorage.so.7 ;ln -s libazurestorage.so libazurestorage.so.7.5', 'cd /ovms_release/lib/ ; rm -f libcpprest.so.2.10 ; ln -s libcpprest.so libcpprest.so.2.10', 'rm -f /ovms_release/lib/libssl.so', 'rm -f /ovms_release/lib/libsampleloader*', 'rm -f /ovms_release/lib/lib_node*', 'rm -f /ovms_release/lib/libcustom_node*', 'if [ ""$ov_use_binary"" == ""0"" ] ; then true ; else exit 0 ; fi ; find /openvino/ -iname \'*.so*\' -exec cp -v {} /ovms_release/lib/ \\;', 'if [ ""$ov_use_binary"" == ""1"" ] ; then true ; else exit 0 ; fi ; find /opt/intel/openvino/deployment_tools/inference_engine/lib/intel64/ -iname \'*.so*\' -exec cp -v {} /ovms_release/lib/ \\;', 'if [ ""$ov_use_binary"" == ""1"" ] ; then true ; else exit 0 ; fi ; find /opt/intel/openvino/deployment_tools/inference_engine/lib/intel64/ -iname \'*.mvcmd*\' -exec cp -v {} /ovms_release/lib/ \\;', 'if [ ""$ov_use_binary"" == ""1"" ] ; then true ; else exit 0 ; fi ; find /opt/intel/openvino/deployment_tools/inference_engine/external/ -iname \'*.so*\' -exec cp -v {} /ovms_release/lib/ \\;', 'if [ ""$ov_use_binary"" == ""1"" ] ; then true ; else exit 0 ; fi ; find /opt/intel/openvino/deployment_tools/ngraph/lib/ -iname \'*.so*\' -exec cp -v {} /ovms_release/lib/ \\; && cd /ovms_release/lib/ && rm libprotobuf.so && ln -s libprotobuf.so.3.7.1.0 libprotobuf.so', 'if [ ""$ov_use_binary"" == ""1"" ] ; then true ; else exit 0 ; fi ; find /opt/intel/openvino/deployment_tools/inference_engine/external/ -iname \'*.so*\' -exec cp -v {} /ovms_release/lib/ \\;', 'if [ ""$ov_use_binary"" == ""1"" ] ; then true ; else exit 0 ; fi ; find /opt/intel/openvino/opencv/lib/ -iname \'*.so*\' -exec cp -vP {} /ovms_release/lib/ \\; && rm /ovms_release/lib/libopencv_highgui*', 'if [ ""$ov_use_binary"" == ""1"" ] ; then true ; else exit 0 ; fi ; cp /opt/intel/openvino/opencv/etc/licenses/* /ovms/release_files/thirdparty-licenses/;', 'if [ ""$ov_use_binary"" == ""1"" ] ; then true ; else exit 0 ; fi ; if [ -f /opt/intel/openvino/licensing/EULA.txt ] ; then true ; else exit 0 ; fi ; cp /opt/intel/openvino/licensing/EULA.txt /ovms/release_files/thirdparty-licenses/openvino.LICENSE.txt;', 'if [ ""$ov_use_binary"" == ""0"" ] ; then true ; else exit 0 ; fi ; cp /openvino/LICENSE /ovms/release_files/thirdparty-licenses/openvino.LICENSE.txt;', 'if [ -f /ovms_release/lib/libbsl.so.0 ] ; then cd /ovms_release/lib/ ; rm -f libbsl.so.0 ; ln -s libbsl.so libbsl.so.0 ; fi', 'if [ -f /ovms_release/lib/libmvnc-hddl.so.0 ] ; then cd /ovms_release/lib/ ; rm -f libmvnc-hddl.so.0 ; ln -s libmvnc-hddl.so libmvnc-hddl.so.0 ; fi', 'if [ -f /ovms_release/lib/libion.so.0 ] ; then cd /ovms_release/lib/ ; rm -f libion.so.0 ; ln -s libion.so libion.so.0 ; fi', 'if [ -f /ovms_release/lib/libgna.so.2 ] ; then cd /ovms_release/lib/ ; rm -f libgna.so.2 ; ln -s libgna.so libgna.so.2 ; if [ -f /ovms_release/lib/libgna.so.2.0.0.1226 ] ; then cd /ovms_release/lib/ ; rm -f libgna.so.2.0.0.1226 ; ln -s libgna.so.2 libgna.so.2.0.0.1226 ; fi ; fi', 'if [ -f /ovms_release/lib/libgna.so.3.0.0.1377 ] ; then cd /ovms_release/lib/ ; rm -f libgna.so.3.0.0.1377 ; ln -s libgna.so libgna.so.3.0.0.1377 ; fi', ""find /ovms/bazel-bin/src -name 'ovms' -type f -exec cp -v {} /ovms_release/bin \\;"", ""patchelf --remove-rpath ./ovms && patchelf --set-rpath '$ORIGIN/../lib/' ./ovms"", ""find /ovms_release/lib/ -iname '*.so*' -exec patchelf --debug --remove-rpath  {}  \\;"", ""find /ovms_release/lib/ -iname '*.so*' -exec patchelf --debug --set-rpath '$ORIGIN/../lib' {} \\;"", 'cp -v /ovms/release_files/LICENSE /ovms_release/', 'cp -rv /ovms/release_files/thirdparty-licenses /ovms_release/', 'ls -lahR /ovms_release/', ""find /ovms_release/lib/ -iname '*.so*' -type f -exec patchelf --remove-rpath  {}  \\;"", ""find /ovms_release/lib/ -iname '*.so*' -type f -exec patchelf --set-rpath '$ORIGIN/../lib' {} \\;"", ""tar czf ovms.tar.gz --transform 's/ovms_release/ovms/' /ovms_release/ && sha256sum ovms.tar.gz > ovms.tar.gz.sha256 && cp /ovms_release/metadata.json /ovms.tar.gz.metadata.json"", ""tar cJf ovms.tar.xz --transform 's/ovms_release/ovms/' /ovms_release/ && sha256sum ovms.tar.xz > ovms.tar.xz.sha256 && cp /ovms_release/metadata.json /ovms.tar.xz.metadata.json""]"
openvinotoolkit/model_server,latest,/DockerfileMakePackage,WORKDIR,3,"['/ovms_release/bin', '/ovms', '/']"
openvinotoolkit/model_server,latest,/DockerfileMakePackage,ENTRYPOINT,1,['[ ]']
openvinotoolkit/model_server,latest,/Dockerfile.centos,ARG,15,"['BASE_IMAGE=centos:7', 'PROJECT_NAME=""OpenVINO Model Server 2021.4""', 'ov_source_branch=master', 'ovms_metadata_file', 'ov_use_binary=1', 'DLDT_PACKAGE_URL', 'OPENVINO_NAME=${DLDT_PACKAGE_URL}', 'INSTALL_DIR=/opt/intel/openvino', 'TEMP_DIR=/tmp/openvino_installer', 'DL_INSTALL_DIR=/opt/intel/openvino/deployment_tools', 'DL_DIR=/tmp', 'JOBS', 'YUM_OV_PACKAGE=intel-openvino-runtime-centos7', 'build_type=dbg', 'debug_bazel_flags=--strip=never\\ --copt=""-g""\\ -c\\ dbg']"
openvinotoolkit/model_server,latest,/Dockerfile.centos,FROM,1,['$BASE_IMAGE as base_build']
openvinotoolkit/model_server,latest,/Dockerfile.centos,LABEL,2,"['version=""1.0.0""', 'description=${PROJECT_NAME}']"
openvinotoolkit/model_server,latest,/Dockerfile.centos,ENV,7,"['HDDL_INSTALL_DIR=/opt/intel/openvino/deployment_tools/inference_engine/external/hddl', 'TF_SYSTEM_LIBS=""curl""', 'CC=/opt/rh/devtoolset-8/root/bin/gcc', 'CXX=/opt/rh/devtoolset-8/root/bin/g++', 'BAZEL_VERSION 3.7.2', 'BAZEL_LINKLIBS=-l%:libstdc++.a', 'LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:/opt/intel/openvino/deployment_tools/inference_engine/lib/intel64/:/opt/intel/openvino/deployment_tools/ngraph/lib/:/opt/intel/openvino/inference_engine/external/tbb/lib/:/openvino/bin/intel64/Release/lib/:/opt/intel/openvino/opencv/lib/']"
openvinotoolkit/model_server,latest,/Dockerfile.centos,RUN,36,"['yum clean all', 'yum update -d6 -y && yum install -d6 -y epel-release centos-release-scl && yum install -d6 -y             boost-atomic             boost-chrono             boost-filesystem             boost-program-options             boost-thread             boost-system             boost-date-time             cmake3             gcc-c++             devtoolset-8-gcc*             curl             gdb             git             libusb             libusbx-devel             libcurl-devel             libtool             libuuid-devel             libxml2-devel             make             numactl-libs             ocl-icd             openssl-devel             patch             pkg-config             python3             python3-pip             python3-devel             python3-setuptools             python3-virtualenv             python3-numpy             wget             which             libxml2-devel             yum-utils             unzip             xz &&             yum clean all', 'curl -H ""User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/57.0.2987.133 Safari/537.36"" -fSsL -O https://github.com/bazelbuild/bazel/releases/download/$BAZEL_VERSION/bazel-$BAZEL_VERSION-installer-linux-x86_64.sh &&     curl -H ""User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/57.0.2987.133 Safari/537.36"" -fSsL -o /bazel/LICENSE.txt https://raw.githubusercontent.com/bazelbuild/bazel/master/LICENSE &&     chmod +x bazel-*.sh &&     ./bazel-$BAZEL_VERSION-installer-linux-x86_64.sh &&     cd / &&     rm -f /bazel/bazel-$BAZEL_VERSION-installer-linux-x86_64.sh', 'if [ ""$ov_use_binary"" == ""0"" ] ; then true ; else exit 0 ; fi ;  git clone https://github.com/openvinotoolkit/openvino /openvino ; cd /openvino ; git checkout $ov_source_branch; git submodule update --init --recursive ; git config --global user.email ""docker-build@intel.com""', 'if [ ""$ov_use_binary"" == ""0"" ] ; then true ; else exit 0 ; fi ; cmake3 -DCMAKE_BUILD_TYPE=Release -DENABLE_SAMPLES=0 -DNGRAPH_USE_CXX_ABI=1 -DCMAKE_CXX_FLAGS="" -D_GLIBCXX_USE_CXX11_ABI=1 -Wno-error=parentheses ""  ..', 'if [ ""$ov_use_binary"" == ""0"" ] ; then true ; else exit 0 ; fi ; make --jobs=$JOBS', 'if [ ""$ov_use_binary"" == ""0"" ] ; then true ; else exit 0 ; fi ; mkdir -p /opt/intel/openvino/deployment_tools/inference_engine/lib/intel64/ &&     mkdir -p /opt/intel/openvino/deployment_tools/inference_engine &&     ln -s /openvino/bin/intel64/Release/lib/* /opt/intel/openvino/deployment_tools/inference_engine/lib/intel64/ &&     ln -s /openvino/inference-engine/include/ /opt/intel/openvino/deployment_tools/inference_engine/ &&     curl -s https://download.01.org/opencv/master/openvinotoolkit/thirdparty/linux/opencv/opencv_4.5.1-044_centos7.txz | tar --use-compress-program=xz -C /opt/intel/openvino -xvf -', 'if [ ""$ov_use_binary"" == ""1"" ] && [ ""$DLDT_PACKAGE_URL"" != """" ]; then true ; else exit 0 ; fi ; mkdir -p $TEMP_DIR && cd $TEMP_DIR/ &&     wget $DLDT_PACKAGE_URL &&     tar -zxf l_openvino_toolkit*.tgz &&     cd l_openvino_toolkit* &&     sed -i \'s/decline/accept/g\' silent.cfg &&     ./install.sh -s silent.cfg --ignore-signature &&     rm -Rf $TEMP_DIR $INSTALL_DIR/uninstall* /tmp/* $DL_INSTALL_DIR/documentation $DL_INSTALL_DIR/inference_engine/samples', 'if [ ""$ov_use_binary"" == ""1"" ] && [ ""$DLDT_PACKAGE_URL"" == """" ] ; then true ; else exit 0 ; fi ;     yum-config-manager --add-repo https://yum.repos.intel.com/openvino/2021/setup/intel-openvino-2021.repo &&     rpm --import https://yum.repos.intel.com/openvino/2021/setup/RPM-GPG-KEY-INTEL-OPENVINO-2021 &&     yum install -y $YUM_OV_PACKAGE', 'if [ ""$ov_use_binary"" == ""1"" ] ; then true ; else exit 0 ; fi ;     ln -s /opt/intel/openvino_2021 /opt/intel/openvino', 'if [ -f /opt/intel/openvino/deployment_tools/inference_engine/samples/cpp/build_samples.sh ];  then ln -s /usr/bin/cmake3 /usr/bin/cmake && /opt/intel/openvino/deployment_tools/inference_engine/samples/cpp/build_samples.sh ; fi', 'ln -s /usr/lib64 /usr/lib/x86_64-linux-gnu', 'bazel build --jobs=$JOBS ${debug_bazel_flags} @org_tensorflow//tensorflow/core:framework', 'bazel build --jobs=$JOBS ${debug_bazel_flags} @tensorflow_serving//tensorflow_serving/apis:prediction_service_cc_proto', ""wget https://sourceforge.net/projects/boost/files/boost/1.68.0/boost_1_68_0.tar.gz && \ttar xvf boost_1_68_0.tar.gz && cd boost_1_68_0 && ./bootstrap.sh && \t./b2 cxxstd=17 link=static cxxflags='-fPIC' cflags='-fPIC' \t\t--with-chrono --with-date_time --with-filesystem --with-program_options --with-system \t\t--with-random --with-thread --with-atomic --with-regex \t\t--with-log --with-locale \t\tinstall"", 'git clone https://github.com/Microsoft/cpprestsdk.git && cd cpprestsdk && git checkout tags/v2.10.16 -b v2.10.16 && git submodule update --init', 'git clone https://github.com/Azure/azure-storage-cpp.git && cd azure-storage-cpp/Microsoft.WindowsAzure.Storage && git checkout tags/v7.5.0 && mkdir build.release', 'cp -rf /ovms/third_party/cpprest/rest_sdk_v2.10.16.patch /azure/cpprestsdk/', 'cd /azure/cpprestsdk/ && patch -p1 < rest_sdk_v2.10.16.patch', 'cp -rf /ovms/third_party/azure/azure_sdk.patch /azure/azure-storage-cpp/', 'cd /azure/azure-storage-cpp/ && patch -p1 < azure_sdk.patch', 'cd cpprestsdk && mkdir Release/build.release && cd Release/build.release && cmake3 .. -DCMAKE_VERBOSE_MAKEFILE=ON -DCMAKE_CXX_FLAGS=""-fPIC"" -DCMAKE_BUILD_TYPE=Release -DBUILD_SHARED_LIBS=ON -DBoost_USE_STATIC_RUNTIME=ON -DBoost_USE_STATIC_LIBS=ON -DWERROR=OFF -DBUILD_SAMPLES=OFF -DBUILD_TESTS=OFF && make --jobs=$JOBS install', 'cd azure-storage-cpp/Microsoft.WindowsAzure.Storage/build.release && CASABLANCA_DIR=/azure/cpprestsdk cmake3 .. -DCMAKE_CXX_FLAGS=""-fPIC"" -DCMAKE_BUILD_TYPE=Release -DBUILD_SHARED_LIBS=ON -DBoost_USE_STATIC_RUNTIME=ON -DBoost_USE_STATIC_LIBS=ON -DCMAKE_VERBOSE_MAKEFILE=ON && make --jobs=$JOBS && make --jobs=$JOBS install', 'git clone https://github.com/aws/aws-sdk-cpp.git --branch 1.7.129 --single-branch --depth 1 /awssdk', 'cmake3 -DCMAKE_BUILD_TYPE=Release -DBUILD_ONLY=s3 -DENABLE_TESTING=OFF -DBUILD_SHARED_LIBS=OFF -DMINIMIZE_SIZE=ON -DCMAKE_POSITION_INDEPENDENT_CODE=ON -DFORCE_SHARED_CRT=OFF -DSIMPLE_INSTALL=OFF -DCMAKE_CXX_FLAGS="" -D_GLIBCXX_USE_CXX11_ABI=1 "" ..', 'make --jobs=$JOBS', 'mv .deps/install/lib64 .deps/install/lib', 'cp -v /etc/ssl/certs/ca-bundle.crt /etc/ssl/certs/ca-certificates.crt', 'bash -c ""sed -i -e \'s|REPLACE_PROJECT_NAME|${PROJECT_NAME}|g\' /ovms/src/version.hpp""', 'if [ ""$ov_use_binary"" == ""1"" ] ; then true ; else exit 0 ; fi ; sed -i -e ""s#REPLACE_OPENVINO_NAME#`find /opt/intel/ -maxdepth 1 -type d | grep openvino | cut -d\'_\' -f2`#g"" /ovms/src/version.hpp', 'bazel build ${debug_bazel_flags} --jobs $JOBS //src:ovms', 'bazel build ${debug_bazel_flags} --jobs $JOBS //src:libsampleloader.so', 'if [ -f /opt/intel/openvino/bin/setupvars.sh ];  then cd /ovms/src/test/cpu_extension/ && make ; fi', 'bazel test ${debug_bazel_flags} --jobs $JOBS --test_summary=detailed --test_output=all //src:ovms_test', './bazel-bin/src/./ovms --version', './bazel-bin/src/./ovms']"
openvinotoolkit/model_server,latest,/Dockerfile.centos,SHELL,1,"['[ ""/usr/bin/scl"", ""enable"", ""devtoolset-8"" ]']"
openvinotoolkit/model_server,latest,/Dockerfile.centos,WORKDIR,11,"['/bazel', '/openvino/build', '/', '/ovms', '/boost', '/azure', '/', '/azure', '/awssdk/build', '/example_cpp_client', '/ovms']"
openvinotoolkit/model_server,latest,/Dockerfile.centos,COPY,7,"['.bazelrc WORKSPACE /ovms/', 'external /ovms/external/', 'third_party /ovms/third_party/', 'example_client/cpp/ /example_cpp_client/cpp', 'src/ /ovms/src/', 'release_files/ /ovms/release_files/', '${ovms_metadata_file} metadata.json']"
openvinotoolkit/model_server,latest,/Dockerfile.ubuntu,ARG,16,"['BASE_IMAGE=ubuntu:20.04', 'INSTALL_DIR=/opt/intel/openvino', 'INSTALL_DIR=/opt/intel/openvino', 'TEMP_DIR=/tmp/openvino_installer', 'DL_INSTALL_DIR=/opt/intel/openvino/deployment_tools', 'DL_DIR=/tmp', 'JOBS', 'APT_OV_PACKAGE=intel-openvino-runtime-ubuntu20-2021.4.752', 'build_type=dbg', 'debug_bazel_flags=--strip=never\\ --copt=""-g""\\ -c\\ dbg', 'ov_use_binary=1', 'DLDT_PACKAGE_URL', 'OPENVINO_NAME=${DLDT_PACKAGE_URL}', 'ov_source_branch=master', 'PROJECT_NAME=""OpenVINO Model Server 2021.4""', 'ovms_metadata_file']"
openvinotoolkit/model_server,latest,/Dockerfile.ubuntu,FROM,1,['$BASE_IMAGE as base_build']
openvinotoolkit/model_server,latest,/Dockerfile.ubuntu,LABEL,2,"['version=""1.0.0""', 'description=${PROJECT_NAME}']"
openvinotoolkit/model_server,latest,/Dockerfile.ubuntu,ENV,6,"['HDDL_INSTALL_DIR=/opt/intel/openvino/deployment_tools/inference_engine/external/hddl', 'DEBIAN_FRONTEND=noninteractive', 'TF_SYSTEM_LIBS=""curl""', 'BAZEL_VERSION 3.7.2', 'BAZEL_LINKLIBS=-l%:libstdc++.a', 'LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:/opt/intel/openvino/deployment_tools/inference_engine/lib/intel64/:/opt/intel/openvino/deployment_tools/ngraph/lib/:/opt/intel/openvino/inference_engine/external/tbb/lib/:/openvino/bin/intel64/Release/lib/:/opt/intel/openvino/opencv/lib/']"
openvinotoolkit/model_server,latest,/Dockerfile.ubuntu,SHELL,1,"['[""/bin/bash"", ""-c""]']"
openvinotoolkit/model_server,latest,/Dockerfile.ubuntu,RUN,35,"['apt update && apt install -y             libboost-atomic1.71.0             libboost-chrono1.71.0             libboost-filesystem1.71.0             libboost-program-options1.71.0             libboost-thread1.71.0             libboost-system1.71.0             libboost-date-time1.71.0             build-essential             cmake             automake             autoconf             curl             gdb             git             libusb-dev             libcurl4-openssl-dev             libtool             libxml2-dev             libnuma-dev             libssl-dev             patch             pkg-config             python2             python2-dev             python-setuptools             python3             python3-pip             python3-dev             python3-setuptools             python3-virtualenv             python3-numpy             python-is-python3             unzip             wget             unzip             xz-utils &&             apt clean', 'curl -H ""User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/57.0.2987.133 Safari/537.36"" -fSsL -O https://github.com/bazelbuild/bazel/releases/download/$BAZEL_VERSION/bazel-$BAZEL_VERSION-installer-linux-x86_64.sh &&     curl -H ""User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/57.0.2987.133 Safari/537.36"" -fSsL -o /bazel/LICENSE.txt https://raw.githubusercontent.com/bazelbuild/bazel/master/LICENSE &&     chmod +x bazel-*.sh &&     ./bazel-$BAZEL_VERSION-installer-linux-x86_64.sh &&     cd / &&     rm -f /bazel/bazel-$BAZEL_VERSION-installer-linux-x86_64.sh', ""wget https://sourceforge.net/projects/boost/files/boost/1.69.0/boost_1_69_0.tar.gz && tar xvf boost_1_69_0.tar.gz && cd boost_1_69_0 && ./bootstrap.sh && ./b2 cxxstd=17 link=static cxxflags='-fPIC' cflags='-fPIC' --with-chrono --with-date_time --with-filesystem --with-program_options --with-system --with-random --with-thread --with-atomic --with-regex --with-log --with-locale install"", 'apt-get install -y uuid uuid-dev', 'git clone https://github.com/Microsoft/cpprestsdk.git && cd cpprestsdk && git checkout tags/v2.10.18 -b v2.10.18 && git submodule update --init', 'git clone https://github.com/Azure/azure-storage-cpp.git && cd azure-storage-cpp/Microsoft.WindowsAzure.Storage && git checkout tags/v7.5.0 && mkdir build.release', 'cp -rf /ovms/third_party/cpprest/rest_sdk_v2.10.16.patch /azure/cpprestsdk/', 'cd /azure/cpprestsdk/ && patch -p1 < rest_sdk_v2.10.16.patch', 'cp -rf /ovms/third_party/azure/azure_sdk.patch /azure/azure-storage-cpp/', 'cd /azure/azure-storage-cpp/ && patch -p1 < azure_sdk.patch', 'cd cpprestsdk && mkdir Release/build.release && cd Release/build.release && cmake .. -DCMAKE_VERBOSE_MAKEFILE=ON -DCMAKE_CXX_FLAGS=""-fPIC"" -DCMAKE_BUILD_TYPE=Release -DBUILD_SHARED_LIBS=ON -DBoost_USE_STATIC_RUNTIME=ON -DBoost_USE_STATIC_LIBS=ON -DWERROR=OFF -DBUILD_SAMPLES=OFF -DBUILD_TESTS=OFF && make --jobs=$JOBS install', 'cd azure-storage-cpp/Microsoft.WindowsAzure.Storage/build.release && CASABLANCA_DIR=/azure/cpprestsdk cmake .. -DCMAKE_CXX_FLAGS=""-fPIC"" -DCMAKE_BUILD_TYPE=Release -DBUILD_SHARED_LIBS=ON -DBoost_USE_STATIC_RUNTIME=ON -DBoost_USE_STATIC_LIBS=ON -DCMAKE_VERBOSE_MAKEFILE=ON && make --jobs=$JOBS && make --jobs=$JOBS install', 'git clone https://github.com/aws/aws-sdk-cpp.git --branch 1.7.129 --single-branch --depth 1 /awssdk', 'cmake -DCMAKE_BUILD_TYPE=Release -DBUILD_ONLY=s3 -DENABLE_TESTING=OFF -DBUILD_SHARED_LIBS=OFF -DMINIMIZE_SIZE=ON -DCMAKE_POSITION_INDEPENDENT_CODE=ON -DFORCE_SHARED_CRT=OFF -DSIMPLE_INSTALL=OFF -DCMAKE_CXX_FLAGS="" -D_GLIBCXX_USE_CXX11_ABI=1 "" ..', 'make --jobs=$JOBS', 'if [ ""$ov_use_binary"" == ""0"" ] ; then true ; else exit 0 ; fi ;  git clone https://github.com/openvinotoolkit/openvino /openvino ; cd /openvino ; git checkout $ov_source_branch; git submodule update --init --recursive', 'if [ ""$ov_use_binary"" == ""0"" ] ; then true ; else exit 0 ; fi ; cmake3 -DCMAKE_BUILD_TYPE=Release -DENABLE_SAMPLES=0 -DNGRAPH_USE_CXX_ABI=1 -DCMAKE_CXX_FLAGS="" -D_GLIBCXX_USE_CXX11_ABI=1 -Wno-error=parentheses ""  ..', 'if [ ""$ov_use_binary"" == ""0"" ] ; then true ; else exit 0 ; fi ; make --jobs=$JOBS', 'if [ ""$ov_use_binary"" == ""0"" ] ; then true ; else exit 0 ; fi ; mkdir -p /opt/intel/openvino/deployment_tools/inference_engine/lib/intel64/ &&     mkdir -p /opt/intel/openvino/deployment_tools/inference_engine &&     ln -s /openvino/bin/intel64/Release/lib/* /opt/intel/openvino/deployment_tools/inference_engine/lib/intel64/ &&     ln -s /openvino/inference-engine/include/ /opt/intel/openvino/deployment_tools/inference_engine/', 'apt install -y cpio', 'if [ ""$ov_use_binary"" = ""1"" ] && [ ""$DLDT_PACKAGE_URL"" != """" ]; then true ; else exit 0 ; fi ; mkdir -p $TEMP_DIR && cd $TEMP_DIR/ &&     wget $DLDT_PACKAGE_URL &&     tar -zxf l_openvino_toolkit*.tgz &&     cd l_openvino_toolkit*/ &&     sed -i \'s/decline/accept/g\' silent.cfg &&     ./install.sh -s silent.cfg --ignore-signature &&     rm -Rf $TEMP_DIR $INSTALL_DIR/uninstall* /tmp/* $DL_INSTALL_DIR/documentation $DL_INSTALL_DIR/inference_engine/samples', 'if [ ""$ov_use_binary"" = ""1"" ] && [ ""$DLDT_PACKAGE_URL"" = """" ] ; then true ; else exit 0 ; fi ;     echo ""installing apt package"" &&     wget https://apt.repos.intel.com/openvino/2021/GPG-PUB-KEY-INTEL-OPENVINO-2021 &&     apt-key add GPG-PUB-KEY-INTEL-OPENVINO-2021 &&     echo ""deb https://apt.repos.intel.com/openvino/2021 all main"" | tee /etc/apt/sources.list.d/intel-openvino-2021.list &&     apt update &&     apt install -y $APT_OV_PACKAGE', 'if [ ""$ov_use_binary"" = ""1"" ] ; then true ; else exit 0 ; fi ;     ln -s /opt/intel/openvino_2021 /opt/intel/openvino', 'if [ -f /opt/intel/openvino/deployment_tools/inference_engine/samples/cpp/build_samples.sh ];  then /opt/intel/openvino/deployment_tools/inference_engine/samples/cpp/build_samples.sh ; fi', 'apt install -y python-is-python3', 'bazel build --jobs=$JOBS ${debug_bazel_flags} @org_tensorflow//tensorflow/core:framework', 'bazel build --jobs=$JOBS ${debug_bazel_flags} @tensorflow_serving//tensorflow_serving/apis:prediction_service_cc_proto', 'bash -c ""sed -i -e \'s|REPLACE_PROJECT_NAME|${PROJECT_NAME}|g\' /ovms/src/version.hpp""', 'if [ ""$ov_use_binary"" = ""1"" ] ; then true ; else exit 0 ; fi ; sed -i -e ""s#REPLACE_OPENVINO_NAME#`find /opt/intel/ -maxdepth 1 -type d | grep openvino | cut -d\'_\' -f2`#g"" /ovms/src/version.hpp', 'bazel build ${debug_bazel_flags} --jobs $JOBS //src:ovms', 'bazel build ${debug_bazel_flags} --jobs $JOBS //src:libsampleloader.so', 'cd /ovms/src/test/cpu_extension/ && make', 'bazel test ${debug_bazel_flags} --jobs $JOBS --test_summary=detailed --test_output=all //src:ovms_test', './bazel-bin/src/./ovms --version', './bazel-bin/src/./ovms']"
openvinotoolkit/model_server,latest,/Dockerfile.ubuntu,WORKDIR,11,"['/bazel', '/boost', '/azure', '/', '/azure', '/awssdk/build', '/openvino/build', '/', '/ovms', '/example_cpp_client', '/ovms']"
openvinotoolkit/model_server,latest,/Dockerfile.ubuntu,COPY,8,"['third_party /ovms/third_party/', '.bazelrc WORKSPACE /ovms/', 'external /ovms/external/', 'example_client/cpp/ /example_cpp_client/cpp', 'src/ /ovms/src/', '${ovms_metadata_file} metadata.json', 'release_files/thirdparty-licenses/ /ovms/release_files/thirdparty-licenses/', 'release_files/LICENSE /ovms/release_files/LICENSE']"
openvinotoolkit/model_server,latest,/Dockerfile.redhat,ARG,15,"['BASE_IMAGE=registry.access.redhat.com/ubi8/ubi:8.4', 'ov_source_branch=releases/2021/2', 'ovms_metadata_file', 'INSTALL_DIR=/opt/intel/openvino', 'TEMP_DIR=/tmp/openvino_installer', 'DL_INSTALL_DIR=/opt/intel/openvino/deployment_tools', 'DL_DIR=/tmp', 'JOBS', 'YUM_OV_PACKAGE=intel-openvino-runtime-centos7', 'build_type=dbg', 'debug_bazel_flags=--strip=never\\ --copt=""-g""\\ -c\\ dbg', 'ov_use_binary=1', 'DLDT_PACKAGE_URL', 'OPENVINO_NAME=${DLDT_PACKAGE_URL}', 'PROJECT_NAME=""OpenVINO Model Server 2021.4""']"
openvinotoolkit/model_server,latest,/Dockerfile.redhat,FROM,1,['$BASE_IMAGE as base_build']
openvinotoolkit/model_server,latest,/Dockerfile.redhat,LABEL,2,"['version=""1.0.0""', 'description=${PROJECT_NAME}']"
openvinotoolkit/model_server,latest,/Dockerfile.redhat,ENV,3,"['TF_SYSTEM_LIBS=""curl""', 'BAZEL_VERSION 3.7.2', 'LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:/opt/intel/openvino/deployment_tools/inference_engine/lib/intel64/:/opt/intel/openvino/deployment_tools/ngraph/lib/:/opt/intel/openvino/inference_engine/external/tbb/lib/:/openvino/bin/intel64/Release/lib/:/opt/intel/openvino/opencv/lib/']"
openvinotoolkit/model_server,latest,/Dockerfile.redhat,RUN,28,"['dnf install -y https://dl.fedoraproject.org/pub/epel/epel-release-latest-8.noarch.rpm && yum update -d6 -y && yum install -d6 -y             boost169-atomic             boost169-chrono             boost169-filesystem             boost169-program-options             boost169-thread             boost169-system             boost169-date-time             cmake             gcc-c++             curl             gdb             git             libgusb.x86_64             libusbx             libcurl-devel             libtool             libuuid-devel             libxml2-devel             make             openssl-devel             patch             pkg-config             python3             python3-pip             python3-devel             python3-setuptools             python3-virtualenv             python3-numpy             wget             which             yum-utils             unzip             xz &&             yum clean all', 'curl -H ""User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/57.0.2987.133 Safari/537.36"" -fSsL -O https://github.com/bazelbuild/bazel/releases/download/$BAZEL_VERSION/bazel-$BAZEL_VERSION-installer-linux-x86_64.sh &&     curl -H ""User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/57.0.2987.133 Safari/537.36"" -fSsL -o /bazel/LICENSE.txt https://raw.githubusercontent.com/bazelbuild/bazel/master/LICENSE &&     chmod +x bazel-*.sh &&     ./bazel-$BAZEL_VERSION-installer-linux-x86_64.sh &&     cd / &&     rm -f /bazel/bazel-$BAZEL_VERSION-installer-linux-x86_64.sh', ""wget https://sourceforge.net/projects/boost/files/boost/1.68.0/boost_1_68_0.tar.gz && \ttar xvf boost_1_68_0.tar.gz && cd boost_1_68_0 && ./bootstrap.sh && \t./b2 cxxstd=17 link=static cxxflags='-fPIC' cflags='-fPIC' \t\t--with-chrono --with-date_time --with-filesystem --with-program_options --with-system \t\t--with-random --with-thread --with-atomic --with-regex \t\t--with-log --with-locale \t\tinstall"", 'git clone https://github.com/Microsoft/cpprestsdk.git && cd cpprestsdk && git checkout tags/v2.10.16 -b v2.10.16 && git submodule update --init', 'git clone https://github.com/Azure/azure-storage-cpp.git && cd azure-storage-cpp/Microsoft.WindowsAzure.Storage && git checkout tags/v7.5.0 && mkdir build.release', 'cp -rf /ovms/third_party/cpprest/rest_sdk_v2.10.16.patch /azure/cpprestsdk/', 'cd /azure/cpprestsdk/ && patch -p1 < rest_sdk_v2.10.16.patch', 'cp -rf /ovms/third_party/azure/azure_sdk.patch /azure/azure-storage-cpp/', 'cd /azure/azure-storage-cpp/ && patch -p1 < azure_sdk.patch', 'cd cpprestsdk && mkdir Release/build.release && cd Release/build.release && cmake .. -DCMAKE_VERBOSE_MAKEFILE=ON -DCMAKE_CXX_FLAGS=""-fPIC"" -DCMAKE_BUILD_TYPE=Release -DBUILD_SHARED_LIBS=ON -DBoost_USE_STATIC_RUNTIME=ON -DBoost_USE_STATIC_LIBS=ON -DWERROR=OFF -DBUILD_SAMPLES=OFF -DBUILD_TESTS=OFF && make --jobs=$JOBS install', 'cd azure-storage-cpp/Microsoft.WindowsAzure.Storage/build.release && CASABLANCA_DIR=/azure/cpprestsdk cmake .. -DCMAKE_CXX_FLAGS=""-fPIC"" -DCMAKE_BUILD_TYPE=Release -DBUILD_SHARED_LIBS=ON -DBoost_USE_STATIC_RUNTIME=ON -DBoost_USE_STATIC_LIBS=ON -DCMAKE_VERBOSE_MAKEFILE=ON && make --jobs=$JOBS && make --jobs=$JOBS install', 'git clone https://github.com/aws/aws-sdk-cpp.git --branch 1.7.129 --single-branch --depth 1 /awssdk', 'cmake -DCMAKE_BUILD_TYPE=Release -DBUILD_ONLY=s3 -DENABLE_TESTING=OFF -DBUILD_SHARED_LIBS=OFF -DMINIMIZE_SIZE=ON -DCMAKE_POSITION_INDEPENDENT_CODE=ON -DFORCE_SHARED_CRT=OFF -DSIMPLE_INSTALL=OFF -DCMAKE_CXX_FLAGS="" -D_GLIBCXX_USE_CXX11_ABI=1 "" ..', 'make --jobs=$JOBS', 'mv .deps/install/lib64 .deps/install/lib', 'if [ ""$ov_use_binary"" == ""1"" ] && [ ""$DLDT_PACKAGE_URL"" != """" ]; then true ; else exit 0 ; fi ; mkdir -p $TEMP_DIR && cd $TEMP_DIR/ &&     wget $DLDT_PACKAGE_URL &&     mkdir /opt/intel &&     tar -zxf l_openvino_toolkit*.tgz -C /opt/intel &&     ln -s /opt/intel/l_openvino_toolkit_runtime* /opt/intel/openvino', 'ln -s /usr/lib64 /usr/lib/x86_64-linux-gnu', 'alternatives --set python /usr/bin/python3', 'bazel build --jobs=$JOBS ${debug_bazel_flags} @org_tensorflow//tensorflow/core:framework', 'bazel build --jobs=$JOBS ${debug_bazel_flags} @tensorflow_serving//tensorflow_serving/apis:prediction_service_cc_proto', 'cp -v /etc/ssl/certs/ca-bundle.crt /etc/ssl/certs/ca-certificates.crt', 'bash -c ""sed -i -e \'s|REPLACE_PROJECT_NAME|${PROJECT_NAME}|g\' /ovms/src/version.hpp""', 'if [ ""$ov_use_binary"" == ""1"" ] ; then true ; else exit 0 ; fi ; sed -i -e ""s#REPLACE_OPENVINO_NAME#`find /opt/intel/ -maxdepth 1 -mindepth 1 -type d | grep openvino | cut -d\'_\' -f7`#g"" /ovms/src/version.hpp', 'bazel build ${debug_bazel_flags} --jobs $JOBS //src:ovms', 'bazel build ${debug_bazel_flags} --jobs $JOBS //src:libsampleloader.so', 'cd /ovms/src/test/cpu_extension/ && make', 'bazel test ${debug_bazel_flags} --jobs $JOBS --test_summary=detailed --test_output=all //src:ovms_test', './bazel-bin/src/./ovms']"
openvinotoolkit/model_server,latest,/Dockerfile.redhat,WORKDIR,10,"['/bazel', '/boost', '/azure', '/', '/azure', '/awssdk/build', '/', '/ovms', '/example_cpp_client', '/ovms']"
openvinotoolkit/model_server,latest,/Dockerfile.redhat,COPY,9,"['third_party /ovms/third_party/', '.bazelrc WORKSPACE /ovms/', 'external /ovms/external/', 'third_party /ovms/third_party/', 'example_client/cpp/ /example_cpp_client/cpp', 'src/ /ovms/src/', '${ovms_metadata_file} metadata.json', 'release_files/thirdparty-licenses/ /ovms/release_files/thirdparty-licenses/', 'release_files/LICENSE /ovms/release_files/LICENSE']"
openvinotoolkit/model_server,latest,/release_files/Dockerfile.centos,ARG,4,"['BASE_IMAGE=centos:7', 'INSTALL_RPMS_FROM_URL=', 'INSTALL_DRIVER_VERSION=""20.35.17767""', 'GPU=1']"
openvinotoolkit/model_server,latest,/release_files/Dockerfile.centos,FROM,2,"['$BASE_IMAGE as base_build', '$BASE_IMAGE as release']"
openvinotoolkit/model_server,latest,/release_files/Dockerfile.centos,WORKDIR,2,"['/', '/']"
openvinotoolkit/model_server,latest,/release_files/Dockerfile.centos,COPY,2,"['ovms.tar.xz /', '--from=base_build /ovms /ovms']"
openvinotoolkit/model_server,latest,/release_files/Dockerfile.centos,RUN,4,"['env', 'tar -xf ovms.tar.xz', 'groupadd --gid 5000 ovms && useradd --home-dir /home/ovms --create-home --uid 5000              --gid 5000 --shell /bin/bash --skel /dev/null ovms &&     chown -R ovms:ovms /ovms', 'set -e ; \tset -x ; \tif [ ""$GPU"" == ""1"" ] ; then \t        case $INSTALL_DRIVER_VERSION in                 ""19.41.14441"")                         mkdir /tmp/gpu_deps ;                         curl -L --output /tmp/gpu_deps/intel-igc-core-1.0.2597-1.el7.x86_64.rpm https://sourceforge.net/projects/intel-compute-runtime/files/19.41.14441/centos-7/intel-igc-core-1.0.2597-1.el7.x86_64.rpm/download ;                         curl -L --output /tmp/gpu_deps/intel-opencl-19.41.14441-1.el7.x86_64.rpm https://sourceforge.net/projects/intel-compute-runtime/files/19.41.14441/centos-7/intel-opencl-19.41.14441-1.el7.x86_64.rpm/download ;                         curl -L --output /tmp/gpu_deps/intel-igc-opencl-devel-1.0.2597-1.el7.x86_64.rpm https://sourceforge.net/projects/intel-compute-runtime/files/19.41.14441/centos-7/intel-igc-opencl-devel-1.0.2597-1.el7.x86_64.rpm/download ;                         curl -L --output /tmp/gpu_deps/intel-igc-opencl-1.0.2597-1.el7.x86_64.rpm https://sourceforge.net/projects/intel-compute-runtime/files/19.41.14441/centos-7/intel-igc-opencl-1.0.2597-1.el7.x86_64.rpm/download ;                         curl -L --output /tmp/gpu_deps/intel-gmmlib-19.3.2-1.el7.x86_64.rpm https://sourceforge.net/projects/intel-compute-runtime/files/19.41.14441/centos-7/intel-gmmlib-19.3.2-1.el7.x86_64.rpm/download ;                         curl -L --output /tmp/gpu_deps/intel-gmmlib-devel-19.3.2-1.el7.x86_64.rpm https://sourceforge.net/projects/intel-compute-runtime/files/19.41.14441/centos-7/intel-gmmlib-devel-19.3.2-1.el7.x86_64.rpm/download ;                         cd /tmp/gpu_deps && rpm -iv *.rpm && rm -Rf /tmp/gpu_deps ;                 ;;                 ""20.35.17767"")                         mkdir /tmp/gpu_deps ;                         curl -L --output /tmp/gpu_deps/intel-opencl-20.35.17767-1.el7.x86_64.rpm https://sourceforge.net/projects/intel-compute-runtime/files/20.35.17767/centos-7/intel-opencl-20.35.17767-1.el7.x86_64.rpm/download ;                         curl -L --output /tmp/gpu_deps/level-zero-1.0.0-1.el7.x86_64.rpm https://sourceforge.net/projects/intel-compute-runtime/files/20.35.17767/centos-7/level-zero-1.0.0-1.el7.x86_64.rpm/download ;                         curl -L --output /tmp/gpu_deps/level-zero-devel-1.0.0-1.el7.x86_64.rpm https://sourceforge.net/projects/intel-compute-runtime/files/20.35.17767/centos-7/level-zero-devel-1.0.0-1.el7.x86_64.rpm/download ;                         curl -L --output /tmp/gpu_deps/intel-igc-opencl-1.0.4756-1.el7.x86_64.rpm https://sourceforge.net/projects/intel-compute-runtime/files/20.35.17767/centos-7/intel-igc-opencl-1.0.4756-1.el7.x86_64.rpm/download ;                         curl -L --output /tmp/gpu_deps/intel-igc-opencl-devel-1.0.4756-1.el7.x86_64.rpm https://sourceforge.net/projects/intel-compute-runtime/files/20.35.17767/centos-7/intel-igc-opencl-devel-1.0.4756-1.el7.x86_64.rpm/download ;                         curl -L --output /tmp/gpu_deps/intel-igc-core-1.0.4756-1.el7.x86_64.rpm https://sourceforge.net/projects/intel-compute-runtime/files/20.35.17767/centos-7/intel-igc-core-1.0.4756-1.el7.x86_64.rpm/download ;                         curl -L --output /tmp/gpu_deps/intel-gmmlib-20.2.4-1.el7.x86_64.rpm https://sourceforge.net/projects/intel-compute-runtime/files/20.35.17767/centos-7/intel-gmmlib-20.2.4-1.el7.x86_64.rpm/download ;                         curl -L --output /tmp/gpu_deps/intel-gmmlib-devel-20.2.4-1.el7.x86_64.rpm https://sourceforge.net/projects/intel-compute-runtime/files/20.35.17767/centos-7/intel-gmmlib-devel-20.2.4-1.el7.x86_64.rpm/download ;                         cd /tmp/gpu_deps && rpm -iv *.rpm && rm -Rf /tmp/gpu_deps ;                 ;;                         *)                         echo ""ERROR: Unrecognized driver ${INSTALL_DRIVER_VERSION}."" ;                         exit 1 ;                 esac ; \tfi ; \tif [ ""$INSTALL_RPMS_FROM_URL"" == """" ] ; then \t    yum update -y ; \t\tyum install -y epel-release ; \t\tyum install -y \t                libusb numactl-libs ocl-icd \t                boost-thread boost-system boost-filesystem \t                boost-program-options boost-chrono boost-date-time boost-atomic ; \t    yum clean all ; \telse  \t\tmkdir /tmp_ovms /src ; \t\tcd /tmp_ovms ; \t\tcurl -L --fail -o deps.tar.xz ""$INSTALL_RPMS_FROM_URL"" ; \t\ttar -xf deps.tar.xz ; \t\tls -Rahl . ; \t\tmv -v pkg/src/*.src.rpm /src/ ; \t\trpm -vi pkg/bin/*.rpm ; \t\tcd / ; \t\trm -rf /tmp_ovms ; \tfi ;         cp -v /etc/ssl/certs/ca-bundle.crt /etc/ssl/certs/ca-certificates.crt ;         groupadd --gid 5000 ovms && groupadd --gid 44 video1 &&         useradd --home-dir /home/ovms --create-home --uid 5000 --gid 5000 --groups 39,44 --shell /bin/bash --skel /dev/null ovms']"
openvinotoolkit/model_server,latest,/release_files/Dockerfile.centos,ENV,5,"['INSTALL_RPMS_FROM_URL=$INSTALL_RPMS_FROM_URL', 'HDDL_INSTALL_DIR=/ovms/lib/hddl', 'INSTALL_DRIVER_VERSION=$INSTALL_DRIVER_VERSION', 'GPU=$GPU', 'LD_LIBRARY_PATH=/ovms/lib']"
openvinotoolkit/model_server,latest,/release_files/Dockerfile.centos,USER,1,['ovms']
openvinotoolkit/model_server,latest,/release_files/Dockerfile.centos,ENTRYPOINT,1,"['[""/ovms/bin/ovms""]']"
openvinotoolkit/model_server,latest,/release_files/Dockerfile.ubuntu,ARG,5,"['BASE_IMAGE=ubuntu:20.04', 'BUILD_DEPENDENCIES=""autoconf                         automake                         build-essential                         libtool                         unzip""', 'INSTALL_RPMS_FROM_URL=', 'INSTALL_DRIVER_VERSION=""20.35.17767""', 'GPU=1']"
openvinotoolkit/model_server,latest,/release_files/Dockerfile.ubuntu,FROM,2,"['$BASE_IMAGE as base_build', '$BASE_IMAGE as release']"
openvinotoolkit/model_server,latest,/release_files/Dockerfile.ubuntu,SHELL,2,"['[""/bin/bash"", ""-xo"", ""pipefail"", ""-c""]', '[""/bin/bash"", ""-c""]']"
openvinotoolkit/model_server,latest,/release_files/Dockerfile.ubuntu,ENV,6,"['DEBIAN_FRONTEND=noninteractive', 'INSTALL_RPMS_FROM_URL=$INSTALL_RPMS_FROM_URL', 'HDDL_INSTALL_DIR=/ovms/lib/hddl', 'INSTALL_DRIVER_VERSION=$INSTALL_DRIVER_VERSION', 'GPU=$GPU', 'DEBIAN_FRONTEND=noninteractive']"
openvinotoolkit/model_server,latest,/release_files/Dockerfile.ubuntu,RUN,12,"['apt-get update &&     apt-get install -y --no-install-recommends curl tzdata ca-certificates &&     rm -rf /var/lib/apt/lists/*', 'apt-get update &&     apt-get install -y --no-install-recommends ${BUILD_DEPENDENCIES} &&     rm -rf /var/lib/apt/lists/*', 'curl -L https://github.com/libusb/libusb/archive/v1.0.22.zip --output v1.0.22.zip &&     unzip v1.0.22.zip && rm -rf v1.0.22.zip', './bootstrap.sh &&     ./configure --disable-udev --enable-shared &&     make -j4', ""/bin/mkdir -p '/usr/local/lib' &&     /bin/bash ../libtool   --mode=install /usr/bin/install -c   libusb-1.0.la '/usr/local/lib' &&     /bin/mkdir -p '/usr/local/include/libusb-1.0' &&     /usr/bin/install -c -m 644 libusb.h '/usr/local/include/libusb-1.0' &&     /bin/mkdir -p '/usr/local/lib/pkgconfig' &&     cd /opt/libusb-1.0.22/ && /usr/bin/install -c -m 644 libusb-1.0.pc '/usr/local/lib/pkgconfig' &&     rm -Rf /usr/local/lib/*a"", 'tar -xf ovms.tar.xz', 'groupadd --gid 5000 ovms && useradd --home-dir /home/ovms --create-home --uid 5000              --gid 5000 --shell /bin/bash --skel /dev/null ovms &&     chown -R ovms:ovms /ovms', 'set -e ; \tset -x ;         apt update -y ;         apt install -y curl; \tif [ ""$GPU"" == ""1"" ] ; then                 apt install -y libnuma1 ocl-icd-libopencl1; \t        case $INSTALL_DRIVER_VERSION in                 ""19.41.14441"")                         mkdir /tmp/gpu_deps && cd /tmp/gpu_deps ;                         curl -L -O https://github.com/intel/compute-runtime/releases/download/19.41.14441/intel-gmmlib_19.3.2_amd64.deb ;                         curl -L -O https://github.com/intel/compute-runtime/releases/download/19.41.14441/intel-igc-core_1.0.2597_amd64.deb ;                         curl -L -O https://github.com/intel/compute-runtime/releases/download/19.41.14441/intel-igc-opencl_1.0.2597_amd64.deb ;                         curl -L -O https://github.com/intel/compute-runtime/releases/download/19.41.14441/intel-opencl_19.41.14441_amd64.deb ;                         curl -L -O https://github.com/intel/compute-runtime/releases/download/19.41.14441/intel-ocloc_19.41.14441_amd64.deb ;                         dpkg -i intel*.deb && rm -Rf /tmp/gpu_deps ;                 ;;                 ""20.35.17767"")                         mkdir /tmp/gpu_deps && cd /tmp/gpu_deps ;                         curl -L -O https://github.com/intel/compute-runtime/releases/download/20.35.17767/intel-gmmlib_20.2.4_amd64.deb ;                         curl -L -O https://github.com/intel/compute-runtime/releases/download/20.35.17767/intel-igc-core_1.0.4756_amd64.deb ;                         curl -L -O https://github.com/intel/compute-runtime/releases/download/20.35.17767/intel-igc-opencl_1.0.4756_amd64.deb ;                         curl -L -O https://github.com/intel/compute-runtime/releases/download/20.35.17767/intel-opencl_20.35.17767_amd64.deb ;                         curl -L -O https://github.com/intel/compute-runtime/releases/download/20.35.17767/intel-ocloc_20.35.17767_amd64.deb ;                         curl -L -O https://github.com/intel/compute-runtime/releases/download/20.35.17767/intel-level-zero-gpu_1.0.17767_amd64.deb ;                         dpkg -i intel*.deb && rm -Rf /tmp/gpu_deps ;                 ;;                         *)                         echo ""ERROR: Unrecognized driver ${INSTALL_DRIVER_VERSION}."" ;                         exit 1 ;                 esac ; \tfi ; \tapt clean ;         rm -rf /var/lib/apt/lists/* && rm -rf /tmp/* ;         groupadd --gid 5000 ovms ;         useradd --home-dir /home/ovms --create-home --uid 5000 --gid 5000 --groups 39,44 --shell /bin/bash --skel /dev/null ovms', 'apt-get update && apt-get install -y --no-install-recommends libxml2 && rm -rf /var/lib/apt/lists/* && rm -rf /tmp/*', 'apt-get update &&     apt-get install -y --no-install-recommends         libboost-filesystem1.71.0         libboost-thread1.71.0         libboost-thread1.71.0         libboost-program-options1.71.0         libboost-chrono1.71.0         libboost-date-time1.71.0         libboost-atomic1.71.0         libjson-c4 &&     rm -rf /var/lib/apt/lists/* && rm -rf /tmp/*', 'mkdir -p /etc/udev/rules.d/ && cp /ovms/lib/hddl/etc/rules.d/97-myriad-usbboot.rules /etc/udev/rules.d/ && ldconfig', 'echo ""The source code of added GPL components is stored in https://storage.openvinotoolkit.org/repositories/openvino/ci_dependencies/container_gpl_sources/ubuntu20/"" > /ovms/thirdparty-licenses/GPL.txt']"
openvinotoolkit/model_server,latest,/release_files/Dockerfile.ubuntu,WORKDIR,5,"['/opt', '/opt/libusb-1.0.22', '/opt/libusb-1.0.22/libusb', '/', '/']"
openvinotoolkit/model_server,latest,/release_files/Dockerfile.ubuntu,COPY,3,"['ovms.tar.xz /', '--from=base_build /usr/local/lib/ /ovms/lib/', '--from=base_build /ovms /ovms']"
openvinotoolkit/model_server,latest,/release_files/Dockerfile.ubuntu,USER,1,['ovms']
openvinotoolkit/model_server,latest,/release_files/Dockerfile.ubuntu,ENTRYPOINT,1,"['[""/ovms/bin/ovms""]']"
openvinotoolkit/model_server,latest,/release_files/Dockerfile.redhat,ARG,4,"['BASE_IMAGE=registry.access.redhat.com/ubi8/ubi:8.4', 'INSTALL_RPMS_FROM_URL=', 'INSTALL_DRIVER_VERSION=""20.35.17767""', 'GPU=1']"
openvinotoolkit/model_server,latest,/release_files/Dockerfile.redhat,FROM,2,"['$BASE_IMAGE as base_build', 'registry.access.redhat.com/ubi8/ubi-minimal:8.4 as release']"
openvinotoolkit/model_server,latest,/release_files/Dockerfile.redhat,RUN,6,"['yum install -y xz', 'env', 'tar -xf ovms.tar.xz', 'groupadd --gid 5000 ovms &&     useradd --home-dir /home/ovms --create-home --uid 5000 --gid 5000 --shell /bin/bash --skel /dev/null ovms &&     chown -R ovms:ovms /ovms', 'mkdir /licenses && ln -s /ovms/LICENSE /licenses && ln -s /ovms/thirdparty-licenses /licenses/thirdparty-licenses', 'set -e ;         set -x ;         microdnf install pkg-config;         if [ ""$GPU"" == ""1"" ] ; then                 case $INSTALL_DRIVER_VERSION in                 ""19.41.14441"")                         mkdir /tmp/gpu_deps ;                         curl -L --output /tmp/gpu_deps/intel-igc-core-1.0.2597-1.el7.x86_64.rpm https://sourceforge.net/projects/intel-compute-runtime/files/19.41.14441/centos-7/intel-igc-core-1.0.2597-1.el7.x86_64.rpm/download ;                         curl -L --output /tmp/gpu_deps/intel-opencl-19.41.14441-1.el7.x86_64.rpm https://sourceforge.net/projects/intel-compute-runtime/files/19.41.14441/centos-7/intel-opencl-19.41.14441-1.el7.x86_64.rpm/download ;                         curl -L --output /tmp/gpu_deps/intel-igc-opencl-devel-1.0.2597-1.el7.x86_64.rpm https://sourceforge.net/projects/intel-compute-runtime/files/19.41.14441/centos-7/intel-igc-opencl-devel-1.0.2597-1.el7.x86_64.rpm/download ;                         curl -L --output /tmp/gpu_deps/intel-igc-opencl-1.0.2597-1.el7.x86_64.rpm https://sourceforge.net/projects/intel-compute-runtime/files/19.41.14441/centos-7/intel-igc-opencl-1.0.2597-1.el7.x86_64.rpm/download ;                         curl -L --output /tmp/gpu_deps/intel-gmmlib-19.3.2-1.el7.x86_64.rpm https://sourceforge.net/projects/intel-compute-runtime/files/19.41.14441/centos-7/intel-gmmlib-19.3.2-1.el7.x86_64.rpm/download ;                         curl -L --output /tmp/gpu_deps/intel-gmmlib-devel-19.3.2-1.el7.x86_64.rpm https://sourceforge.net/projects/intel-compute-runtime/files/19.41.14441/centos-7/intel-gmmlib-devel-19.3.2-1.el7.x86_64.rpm/download ;                         cd /tmp/gpu_deps && rpm -iv *.rpm && rm -Rf /tmp/gpu_deps ;                 ;;                 ""20.35.17767"")                         mkdir /tmp/gpu_deps ;                         curl -L --output /tmp/gpu_deps/intel-opencl-20.35.17767-1.el7.x86_64.rpm https://sourceforge.net/projects/intel-compute-runtime/files/20.35.17767/centos-7/intel-opencl-20.35.17767-1.el7.x86_64.rpm/download ;                         curl -L --output /tmp/gpu_deps/level-zero-1.0.0-1.el7.x86_64.rpm https://sourceforge.net/projects/intel-compute-runtime/files/20.35.17767/centos-7/level-zero-1.0.0-1.el7.x86_64.rpm/download ;                         curl -L --output /tmp/gpu_deps/level-zero-devel-1.0.0-1.el7.x86_64.rpm https://sourceforge.net/projects/intel-compute-runtime/files/20.35.17767/centos-7/level-zero-devel-1.0.0-1.el7.x86_64.rpm/download ;                         curl -L --output /tmp/gpu_deps/intel-igc-opencl-1.0.4756-1.el7.x86_64.rpm https://sourceforge.net/projects/intel-compute-runtime/files/20.35.17767/centos-7/intel-igc-opencl-1.0.4756-1.el7.x86_64.rpm/download ;                         curl -L --output /tmp/gpu_deps/intel-igc-opencl-devel-1.0.4756-1.el7.x86_64.rpm https://sourceforge.net/projects/intel-compute-runtime/files/20.35.17767/centos-7/intel-igc-opencl-devel-1.0.4756-1.el7.x86_64.rpm/download ;                         curl -L --output /tmp/gpu_deps/intel-igc-core-1.0.4756-1.el7.x86_64.rpm https://sourceforge.net/projects/intel-compute-runtime/files/20.35.17767/centos-7/intel-igc-core-1.0.4756-1.el7.x86_64.rpm/download ;                         curl -L --output /tmp/gpu_deps/intel-gmmlib-20.2.4-1.el7.x86_64.rpm https://sourceforge.net/projects/intel-compute-runtime/files/20.35.17767/centos-7/intel-gmmlib-20.2.4-1.el7.x86_64.rpm/download ;                         curl -L --output /tmp/gpu_deps/intel-gmmlib-devel-20.2.4-1.el7.x86_64.rpm https://sourceforge.net/projects/intel-compute-runtime/files/20.35.17767/centos-7/intel-gmmlib-devel-20.2.4-1.el7.x86_64.rpm/download ;                         cd /tmp/gpu_deps && rpm -iv *.rpm && rm -Rf /tmp/gpu_deps ;                 ;;                         *)                         echo ""ERROR: Unrecognized driver ${INSTALL_DRIVER_VERSION}."" ;                         exit 1 ;                 esac ;         fi ;         if [ ""$INSTALL_RPMS_FROM_URL"" == """" ] ; then                 rpm -ivh http://mirror.centos.org/centos/8-stream/BaseOS/x86_64/os/Packages/numactl-libs-2.0.12-11.el8.x86_64.rpm;                 rpm -ivh http://mirror.centos.org/centos/8/BaseOS/x86_64/os/Packages/numactl-2.0.12-11.el8.x86_64.rpm;                 rpm -ivh http://mirror.centos.org/centos/8/AppStream/x86_64/os/Packages/ocl-icd-2.2.12-1.el8.x86_64.rpm;         else                  microdnf install tar gzip;                 mkdir /tmp_ovms ;                 cd /tmp_ovms ;                 curl -L --fail -o deps.tar.xz ""$INSTALL_RPMS_FROM_URL"" ;                 tar -xf deps.tar.xz ;                 ls -Rahl . ;                 rpm -vi pkg/bin/*.rpm ;                 cd / ;                 rm -rf /tmp_ovms ;         fi ;         microdnf install shadow-utils;         cp -v /etc/ssl/certs/ca-bundle.crt /etc/ssl/certs/ca-certificates.crt ;         groupadd --gid 5000 ovms && groupadd --gid 44 video1 &&         useradd --home-dir /home/ovms --create-home --uid 5000 --gid 5000 --groups 39,44 --shell /bin/bash --skel /dev/null ovms']"
openvinotoolkit/model_server,latest,/release_files/Dockerfile.redhat,WORKDIR,2,"['/', '/']"
openvinotoolkit/model_server,latest,/release_files/Dockerfile.redhat,COPY,3,"['ovms.tar.xz /', '--from=base_build /ovms /ovms', '--from=base_build /licenses /licenses']"
openvinotoolkit/model_server,latest,/release_files/Dockerfile.redhat,LABEL,6,"['""name""=""OVMS""', '""vendor""=""Intel Corporation""', '""version""=""2021.4""', '""release""=""2021""', '""summary""=""OpenVINO(TM) Model Server""', '""description""=""OpenVINO(TM) Model Server is a solution for serving AI models""']"
openvinotoolkit/model_server,latest,/release_files/Dockerfile.redhat,ENV,3,"['INSTALL_RPMS_FROM_URL=$INSTALL_RPMS_FROM_URL', 'INSTALL_DRIVER_VERSION=$INSTALL_DRIVER_VERSION', 'GPU=$GPU']"
openvinotoolkit/model_server,latest,/release_files/Dockerfile.redhat,USER,1,['ovms']
openvinotoolkit/model_server,latest,/release_files/Dockerfile.redhat,ENTRYPOINT,1,"['[""/ovms/bin/ovms""]']"
openvinotoolkit/model_server,latest,/tools/deps/centos/Dockerfile,FROM,2,"['centos:7.8.2003 as rpmbuild', 'centos:7.8.2003']"
openvinotoolkit/model_server,latest,/tools/deps/centos/Dockerfile,WORKDIR,1,['/root']
openvinotoolkit/model_server,latest,/tools/deps/centos/Dockerfile,COPY,3,"['rpmbuild.sh /root/', '--from=rpmbuild /ovms-rpmbuild-deps.tar.xz /rpmbuild/', 'get.sh /']"
openvinotoolkit/model_server,latest,/tools/deps/centos/Dockerfile,RUN,3,"['/root/rpmbuild.sh', 'mkdir /rpmbuild/', '/get.sh']"
openvinotoolkit/model_server,latest,/tools/deps/centos/Dockerfile,ENTRYPOINT,1,"['[ ""sleep"", ""360"" ]']"
openvinotoolkit/model_server,latest,/tools/deps/redhat/Dockerfile,FROM,2,"['registry.access.redhat.com/ubi8/ubi:8.2 as rpmbuild', 'registry.access.redhat.com/ubi8/ubi:8.2']"
openvinotoolkit/model_server,latest,/tools/deps/redhat/Dockerfile,WORKDIR,1,['/root']
openvinotoolkit/model_server,latest,/tools/deps/redhat/Dockerfile,COPY,3,"['rpmbuild.sh /root/', '--from=rpmbuild /ovms-rpmbuild-deps.tar.xz /rpmbuild/', 'get.sh /']"
openvinotoolkit/model_server,latest,/tools/deps/redhat/Dockerfile,RUN,3,"['/root/rpmbuild.sh', 'mkdir /rpmbuild/', '/get.sh']"
openvinotoolkit/model_server,latest,/tools/deps/redhat/Dockerfile,ENTRYPOINT,1,"['[ ""sleep"", ""360"" ]']"
openvinotoolkit/model_server,latest,/example_client/go/Dockerfile,FROM,1,['golang:latest']
openvinotoolkit/model_server,latest,/example_client/go/Dockerfile,ARG,1,['http_proxy']
openvinotoolkit/model_server,latest,/example_client/go/Dockerfile,RUN,13,"['echo ""Acquire::http::Proxy \\""$http_proxy\\"";"" > /etc/apt/apt.conf.d/proxy.conf', 'apt-get update &&     apt-get -y install git unzip build-essential autoconf libtool protobuf-compiler libprotobuf-dev', 'go get google.golang.org/grpc', 'go get github.com/golang/protobuf/protoc-gen-go', 'apt-get install -y sudo &&     git clone https://github.com/hybridgroup/gocv.git &&     cd gocv &&     make install', 'mkdir /app', 'protoc -I apis/ apis/tensorflow_serving/apis/*.proto --go_out=plugins=grpc:.', 'protoc -I apis/ apis/tensorflow/core/framework/*.proto --go_out=plugins=grpc:.', 'mv tensorflow /usr/local/go/src/', 'mv tensorflow_serving /usr/local/go/src/', 'go mod init ovmsclient', 'go mod tidy', 'go build .']"
openvinotoolkit/model_server,latest,/example_client/go/Dockerfile,COPY,1,['. /app']
openvinotoolkit/model_server,latest,/example_client/go/Dockerfile,WORKDIR,1,['/app']
openvinotoolkit/model_server,latest,/example_client/go/Dockerfile,ENTRYPOINT,1,"['[""/app/ovmsclient""]']"
openvinotoolkit/model_server,latest,/example_client/bert/Dockerfile,FROM,1,['ubuntu:20.04']
openvinotoolkit/model_server,latest,/example_client/bert/Dockerfile,RUN,2,"['apt update && apt install -y python3-pip && apt-get clean && rm -rf /var/lib/apt/lists/*', 'pip3 install --upgrade pip && pip3 install --no-cache-dir tensorflow-serving-api']"
openvinotoolkit/model_server,latest,/example_client/bert/Dockerfile,WORKDIR,1,['/bert']
openvinotoolkit/model_server,latest,/example_client/bert/Dockerfile,COPY,1,['bert_question_answering_demo_ovms.py tokens_bert.py html_reader.py ./']
openvinotoolkit/model_server,latest,/example_client/bert/Dockerfile,ADD,1,['https://raw.githubusercontent.com/openvinotoolkit/open_model_zoo/master/models/intel/bert-small-uncased-whole-word-masking-squad-int8-0002/vocab.txt .']
openvinotoolkit/model_server,latest,/example_client/bert/Dockerfile,ENTRYPOINT,1,"['[""python3"", ""bert_question_answering_demo_ovms.py"", ""-v"", ""vocab.txt"", ""-i"", ""https://en.wikipedia.org/wiki/BERT_(language_model)"", ""--question"", ""what is bert"", ""--grpc_port"", ""9000"", ""--input_names"", ""attention_mask,input_ids,position_ids,token_type_ids""]']"
openvinotoolkit/model_server,latest,/example_client/cpp/Dockerfile,FROM,2,"['ubuntu:20.04 as base_build', 'ubuntu:20.04 as release']"
openvinotoolkit/model_server,latest,/example_client/cpp/Dockerfile,ENV,4,"['DEBIAN_FRONTEND=noninteractive', 'BAZEL_VERSION 3.7.2', 'DEBIAN_FRONTEND=noninteractive', 'LD_LIBRARY_PATH=/usr/lib/x86_64-linux-gnu:/clients/libs']"
openvinotoolkit/model_server,latest,/example_client/cpp/Dockerfile,RUN,12,"['apt update && apt install -y --no-install-recommends         automake         build-essential         ca-certificates         curl         cmake         git         libcurl3-dev         libfreetype6-dev         libpng-dev         libtool         libzmq3-dev         mlocate         ninja-build         openjdk-8-jdk        openjdk-8-jre-headless         pkg-config         python-dev         software-properties-common         swig         unzip         wget         zip         zlib1g-dev         python3-distutils         &&     apt-get clean &&     rm -rf /var/lib/apt/lists/*', 'curl -fSsL -O https://bootstrap.pypa.io/get-pip.py &&     python3 get-pip.py &&     rm get-pip.py', 'pip3 --no-cache-dir install     future>=0.17.1     grpcio     h5py     keras_applications>=1.0.8     keras_preprocessing>=1.1.0     mock     numpy     requests     --ignore-installed setuptools     --ignore-installed six', 'apt update && apt install -y --no-install-recommends         libopencv-dev         libtbb-dev', 'mkdir /bazel &&     cd /bazel &&     curl -H ""User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/57.0.2987.133 Safari/537.36"" -fSsL -O https://github.com/bazelbuild/bazel/releases/download/$BAZEL_VERSION/bazel-$BAZEL_VERSION-installer-linux-x86_64.sh &&     curl -H ""User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/57.0.2987.133 Safari/537.36"" -fSsL -o /bazel/LICENSE.txt https://raw.githubusercontent.com/bazelbuild/bazel/master/LICENSE &&     chmod +x bazel-*.sh &&     ./bazel-$BAZEL_VERSION-installer-linux-x86_64.sh &&     cd / &&     rm -f /bazel/bazel-$BAZEL_VERSION-installer-linux-x86_64.sh', 'cd /input/ && wget https://raw.githubusercontent.com/openvinotoolkit/model_server/v2021.4.1/example_client/input_images.txt &&     cd /input/images && curl -sS https://github.com/openvinotoolkit/model_server/tree/v2021.4.1/example_client/images |     grep -oh ""\\/images.*jpeg"" | cut -c 9- | cut -f1 -d""\\"""" |     xargs -I %s wget https://raw.githubusercontent.com/openvinotoolkit/model_server/v2021.4.1/example_client/images/%s', 'mkdir -p /opt/intel/openvino/opencv/ && ln -sf /usr/lib/x86_64-linux-gnu /opt/intel/openvino/opencv/lib', 'mkdir -p /opt/intel/openvino/opencv/include && ln -sf /usr/include/opencv4/opencv2 /opt/intel/openvino/opencv/include', 'bazel build     @tensorflow_serving//tensorflow_serving/apis:prediction_service_cc_proto     @com_github_grpc_grpc//:grpc++     @com_google_protobuf//:protobuf_lite     @org_tensorflow//tensorflow/core:framework     @org_tensorflow//tensorflow/core:lib     @opencv//:opencv', 'bazel build //src:all', 'apt update && apt install -y --no-install-recommends libopencv-core4.2 libopencv-imgcodecs4.2 libtbb-dev &&     apt clean && rm -rf /var/lib/apt/lists/* && rm -rf /tmp/*', 'mkdir -p /clients/libs/ && mkdir -p /clients/images']"
openvinotoolkit/model_server,latest,/example_client/cpp/Dockerfile,WORKDIR,4,"['/', '/input/images', '/build', '/clients/']"
openvinotoolkit/model_server,latest,/example_client/cpp/Dockerfile,COPY,7,"['.bazelrc WORKSPACE /build/', 'external /build/external/', 'third_party /build/third_party/', 'src/ /build/src/', '--from=base_build     /build/bazel-bin/src/classification_client_sync     /build/bazel-bin/src/classification_client_async_benchmark     /build/bazel-bin/src/synthetic_client_async_benchmark     /clients/', '--from=base_build /input/images/*.jpeg /clients/images/', '--from=base_build /input/input_images.txt /clients/']"
openvinotoolkit/model_server,latest,/ci/Dockerfile,ARG,5,"['BUILD_IMAGE=openvino/model_server-build:latest', 'ENV_KLOCWORK_PROJECT', 'ENV_KLOCWORK_URL', 'ENV_KLOCWORK_TOKEN', 'KLOCWORK_LTOKEN=/ovms/ltoken']"
openvinotoolkit/model_server,latest,/ci/Dockerfile,FROM,1,['$BUILD_IMAGE']
openvinotoolkit/model_server,latest,/ci/Dockerfile,RUN,6,"['http_proxy=${HTTP_PROXY} yum install -y glibc.i686 libgcc.x86_64 libgcc.i686 redhat-lsb-core.i686', '/tmp/kwbuildtools/bin/kwinject --output /tmp/out.out bazel build //src:all', '/tmp/kwbuildtools/bin/kwinject --output /tmp/out.out bazel build //src:static_analysis', 'echo $ENV_KLOCWORK_TOKEN > /ovms/ltoken', '/tmp/kwbuildtools/bin/kwbuildproject --force --url ${ENV_KLOCWORK_URL}""${ENV_KLOCWORK_PROJECT}"" --tables-directory kwtables /tmp/out.out ; exit 0', '/tmp/kwbuildtools/bin/kwadmin --url ${ENV_KLOCWORK_URL} load ""${ENV_KLOCWORK_PROJECT}"" kwtables']"
openvinotoolkit/model_server,latest,/ci/Dockerfile,ADD,1,['./kwbuildtools /tmp/kwbuildtools']
openvinotoolkit/model_server,latest,/ci/Dockerfile,WORKDIR,2,"['/example_cpp_client/cpp', '/ovms/src']"
openvinotoolkit/model_server,latest,/client/python/Dockerfile.ubuntu,ARG,2,"['BASE_IMAGE=ubuntu:20.04', 'FINAL_IMAGE=ubuntu:20.04']"
openvinotoolkit/model_server,latest,/client/python/Dockerfile.ubuntu,FROM,2,"['$BASE_IMAGE as base_build', '$FINAL_IMAGE as final_build']"
openvinotoolkit/model_server,latest,/client/python/Dockerfile.ubuntu,RUN,6,"['apt-get update && apt-get install -y unzip curl git &&     curl -LO https://github.com/protocolbuffers/protobuf/releases/download/v3.18.0/protoc-3.18.0-linux-x86_64.zip &&     unzip protoc-3.18.0-linux-x86_64.zip -d /opt/protoc', 'apt-get install -y python3-pip python3-venv make &&     cd /ovmsclient/lib && make build', 'cd /ovmsclient/lib && python3 -m venv .client_venv && . .client_venv/bin/activate &&     pip3 install dist/ovmsclient-0.2-py3-none-any.whl &&     cd .client_venv/lib && ln -s python3* python3', 'groupadd --gid 5001 ovmsclient &&     useradd --home-dir /home/ovmsclient --create-home --uid 5001 --gid 5001 --shell /bin/bash --skel /dev/null ovmsclient', 'apt-get update && apt-get install -y --no-install-recommends ca-certificates wget python3 &&     apt-get clean && rm -rf /var/lib/apt/lists/* && rm -rf /tmp/*', 'rm ${OVMSCLIENT_DIR}/samples/vehicle_detection_predict_binary.py ${OVMSCLIENT_DIR}/samples/requirements.txt &&     wget https://github.com/openvinotoolkit/model_server/raw/v2021.4.1/example_client/imgs.npy -O ${OVMSCLIENT_DIR}/samples/imgs.npy']"
openvinotoolkit/model_server,latest,/client/python/Dockerfile.ubuntu,ENV,4,"['PATH=$PATH:/opt/protoc/bin', 'OVMSCLIENT_DIR=""/ovmsclient""', 'PYTHONPATH=${OVMSCLIENT_DIR}/.client_venv/lib/python3/site-packages', 'DEBIAN_FRONTEND=noninteractive']"
openvinotoolkit/model_server,latest,/client/python/Dockerfile.ubuntu,COPY,3,"['lib /ovmsclient/lib', '--from=base_build /ovmsclient/lib/.client_venv ${OVMSCLIENT_DIR}/.client_venv', 'samples ${OVMSCLIENT_DIR}/samples']"
openvinotoolkit/model_server,latest,/client/python/Dockerfile.ubuntu,USER,1,['ovmsclient']
openvinotoolkit/model_server,latest,/client/python/Dockerfile.ubuntu,WORKDIR,1,['${OVMSCLIENT_DIR}']
openvinotoolkit/model_server,latest,/client/python/Dockerfile.redhat,ARG,2,"['BASE_IMAGE=registry.access.redhat.com/ubi8/ubi:8.4', 'FINAL_IMAGE=registry.access.redhat.com/ubi8/ubi-minimal:8.4']"
openvinotoolkit/model_server,latest,/client/python/Dockerfile.redhat,FROM,2,"['$BASE_IMAGE as base_build', '$FINAL_IMAGE as final_build']"
openvinotoolkit/model_server,latest,/client/python/Dockerfile.redhat,RUN,5,"['dnf install -y unzip git &&     curl -LO https://github.com/protocolbuffers/protobuf/releases/download/v3.18.0/protoc-3.18.0-linux-x86_64.zip &&     unzip protoc-3.18.0-linux-x86_64.zip -d /opt/protoc', 'dnf install -y python38 make &&     cd /ovmsclient/lib && make build', 'microdnf install shadow-utils wget python38 &&     groupadd --gid 5001 ovmsclient &&     useradd --home-dir /home/ovmsclient --create-home --uid 5001 --gid 5001 --shell /bin/bash --skel /dev/null ovmsclient &&     microdnf remove shadow-utils && microdnf clean all', 'rm ${OVMSCLIENT_DIR}/samples/vehicle_detection_predict_binary.py ${OVMSCLIENT_DIR}/samples/requirements.txt &&     wget https://github.com/openvinotoolkit/model_server/raw/v2021.4.1/example_client/imgs.npy -O ${OVMSCLIENT_DIR}/samples/imgs.npy', 'pip3 install ${OVMSCLIENT_DIR}/ovmsclient-0.2-py3-none-any.whl &&     rm  ${OVMSCLIENT_DIR}/ovmsclient-0.2-py3-none-any.whl']"
openvinotoolkit/model_server,latest,/client/python/Dockerfile.redhat,ENV,2,"['PATH=$PATH:/opt/protoc/bin', 'OVMSCLIENT_DIR=""/ovmsclient""']"
openvinotoolkit/model_server,latest,/client/python/Dockerfile.redhat,COPY,3,"['lib /ovmsclient/lib', '--from=base_build /ovmsclient/lib/dist/ovmsclient-0.2-py3-none-any.whl ${OVMSCLIENT_DIR}/ovmsclient-0.2-py3-none-any.whl', 'samples ${OVMSCLIENT_DIR}/samples']"
openvinotoolkit/model_server,latest,/client/python/Dockerfile.redhat,USER,1,['ovmsclient']
openvinotoolkit/model_server,latest,/client/python/Dockerfile.redhat,WORKDIR,1,['${OVMSCLIENT_DIR}']
openvinotoolkit/model_server,latest,/src/custom_nodes/model_zoo_intel_object_detection/Dockerfile.centos,FROM,1,['centos:7']
openvinotoolkit/model_server,latest,/src/custom_nodes/model_zoo_intel_object_detection/Dockerfile.centos,RUN,5,"['yum update -y && yum install centos-release-scl -y && yum install -y devtoolset-8-gcc*', 'curl -s https://download.01.org/opencv/master/openvinotoolkit/thirdparty/linux/opencv/opencv_4.5.1-044_centos7.txz | tar --use-compress-program=xz -xvf -', 'mkdir -p /custom_nodes/lib', '/opt/rh/devtoolset-8/root/bin/g++ -c -std=c++17 ${NODE_NAME}.cpp -fpic  -I/opencv/include/ -Wall -Wno-unknown-pragmas -Werror -fno-strict-overflow -fno-delete-null-pointer-checks -fwrapv -fstack-protector', '/opt/rh/devtoolset-8/root/bin/g++ -shared -o /custom_nodes/lib/libcustom_node_${NODE_NAME}.so ${NODE_NAME}.o -L/opencv/lib/ -I/opencv/include/ -lopencv_core -lopencv_imgproc -lopencv_imgcodecs']"
openvinotoolkit/model_server,latest,/src/custom_nodes/model_zoo_intel_object_detection/Dockerfile.centos,ARG,1,['NODE_NAME=model_zoo_intel_object_detection']
openvinotoolkit/model_server,latest,/src/custom_nodes/model_zoo_intel_object_detection/Dockerfile.centos,COPY,2,"['. /custom_nodes/${NODE_NAME}/', 'custom_node_interface.h /']"
openvinotoolkit/model_server,latest,/src/custom_nodes/model_zoo_intel_object_detection/Dockerfile.centos,WORKDIR,1,['/custom_nodes/${NODE_NAME}/']
openvinotoolkit/model_server,latest,/src/custom_nodes/model_zoo_intel_object_detection/Dockerfile.ubuntu,FROM,1,['ubuntu:20.04']
openvinotoolkit/model_server,latest,/src/custom_nodes/model_zoo_intel_object_detection/Dockerfile.ubuntu,RUN,5,"['apt update && apt install -y build-essential curl', 'curl -s https://download.01.org/opencv/master/openvinotoolkit/thirdparty/linux/opencv/opencv_4.5.2-076_ubuntu20.txz | tar --use-compress-program=xz -xvf -', 'mkdir -p /custom_nodes/lib', 'g++ -c -std=c++17 ${NODE_NAME}.cpp -fpic  -I/opencv/include/ -Wall -Wno-unknown-pragmas -Werror -Wno-error=sign-compare  -fno-strict-overflow -fno-delete-null-pointer-checks -fwrapv -fstack-protector', 'g++ -shared -o /custom_nodes/lib/libcustom_node_${NODE_NAME}.so ${NODE_NAME}.o -L/opencv/lib/ -I/opencv/include/ -lopencv_core -lopencv_imgproc -lopencv_imgcodecs']"
openvinotoolkit/model_server,latest,/src/custom_nodes/model_zoo_intel_object_detection/Dockerfile.ubuntu,ARG,1,['NODE_NAME=model_zoo_intel_object_detection']
openvinotoolkit/model_server,latest,/src/custom_nodes/model_zoo_intel_object_detection/Dockerfile.ubuntu,COPY,2,"['. /custom_nodes/${NODE_NAME}/', 'custom_node_interface.h /']"
openvinotoolkit/model_server,latest,/src/custom_nodes/model_zoo_intel_object_detection/Dockerfile.ubuntu,WORKDIR,1,['/custom_nodes/${NODE_NAME}/']
openvinotoolkit/model_server,latest,/src/custom_nodes/model_zoo_intel_object_detection/Dockerfile.redhat,FROM,1,['registry.access.redhat.com/ubi8/ubi:8.4']
openvinotoolkit/model_server,latest,/src/custom_nodes/model_zoo_intel_object_detection/Dockerfile.redhat,RUN,5,"['dnf install -y https://dl.fedoraproject.org/pub/epel/epel-release-latest-8.noarch.rpm && yum update -d6 -y && yum install -d6 -y gcc-c++ curl xz', 'curl -s https://download.01.org/opencv/master/openvinotoolkit/thirdparty/linux/opencv/opencv_4.5.1-044_centos7.txz | tar --use-compress-program=xz -xvf -', 'mkdir -p /custom_nodes/lib', 'g++ -c -std=c++17 ${NODE_NAME}.cpp -fpic  -I/opencv/include/ -Wall -Wno-unknown-pragmas -Werror -fno-strict-overflow -fno-delete-null-pointer-checks -fwrapv -fstack-protector', 'g++ -shared -o /custom_nodes/lib/libcustom_node_${NODE_NAME}.so ${NODE_NAME}.o -L/opencv/lib/ -I/opencv/include/ -lopencv_core -lopencv_imgproc -lopencv_imgcodecs']"
openvinotoolkit/model_server,latest,/src/custom_nodes/model_zoo_intel_object_detection/Dockerfile.redhat,ARG,1,['NODE_NAME=model_zoo_intel_object_detection']
openvinotoolkit/model_server,latest,/src/custom_nodes/model_zoo_intel_object_detection/Dockerfile.redhat,COPY,2,"['. /custom_nodes/${NODE_NAME}/', 'custom_node_interface.h /']"
openvinotoolkit/model_server,latest,/src/custom_nodes/model_zoo_intel_object_detection/Dockerfile.redhat,WORKDIR,1,['/custom_nodes/${NODE_NAME}/']
openvinotoolkit/model_server,latest,/src/custom_nodes/east_ocr/Dockerfile.centos,FROM,1,['centos:7']
openvinotoolkit/model_server,latest,/src/custom_nodes/east_ocr/Dockerfile.centos,RUN,5,"['yum update -y && yum install centos-release-scl -y && yum install -y devtoolset-8-gcc*', 'curl -s https://download.01.org/opencv/master/openvinotoolkit/thirdparty/linux/opencv/opencv_4.5.1-044_centos7.txz | tar --use-compress-program=xz -xvf -', 'mkdir -p /custom_nodes/lib', '/opt/rh/devtoolset-8/root/bin/g++ -c -std=c++17 ${NODE_NAME}.cpp -fpic  -I/opencv/include/ -Wall -Wno-unknown-pragmas -Werror -fno-strict-overflow -fno-delete-null-pointer-checks -fwrapv -fstack-protector', '/opt/rh/devtoolset-8/root/bin/g++ -shared -o /custom_nodes/lib/libcustom_node_${NODE_NAME}.so ${NODE_NAME}.o -L/opencv/lib/ -I/opencv/include/ -lopencv_core -lopencv_imgproc -lopencv_imgcodecs']"
openvinotoolkit/model_server,latest,/src/custom_nodes/east_ocr/Dockerfile.centos,ARG,1,['NODE_NAME=east_ocr']
openvinotoolkit/model_server,latest,/src/custom_nodes/east_ocr/Dockerfile.centos,COPY,2,"['. /custom_nodes/${NODE_NAME}/', 'custom_node_interface.h /']"
openvinotoolkit/model_server,latest,/src/custom_nodes/east_ocr/Dockerfile.centos,WORKDIR,1,['/custom_nodes/${NODE_NAME}/']
openvinotoolkit/model_server,latest,/src/custom_nodes/east_ocr/Dockerfile.ubuntu,FROM,1,['ubuntu:20.04']
openvinotoolkit/model_server,latest,/src/custom_nodes/east_ocr/Dockerfile.ubuntu,RUN,5,"['apt update && apt install -y build-essential curl', 'curl -s https://download.01.org/opencv/master/openvinotoolkit/thirdparty/linux/opencv/opencv_4.5.2-076_ubuntu20.txz | tar --use-compress-program=xz -xvf -', 'mkdir -p /custom_nodes/lib', 'g++ -c -std=c++17 ${NODE_NAME}.cpp -fpic  -I/opencv/include/ -Wall -Wno-unknown-pragmas -Werror -Wno-error=sign-compare -fno-strict-overflow -fno-delete-null-pointer-checks -fwrapv -fstack-protector', 'g++ -shared -o /custom_nodes/lib/libcustom_node_${NODE_NAME}.so ${NODE_NAME}.o -L/opencv/lib/ -I/opencv/include/ -lopencv_core -lopencv_imgproc -lopencv_imgcodecs']"
openvinotoolkit/model_server,latest,/src/custom_nodes/east_ocr/Dockerfile.ubuntu,ARG,1,['NODE_NAME=east_ocr']
openvinotoolkit/model_server,latest,/src/custom_nodes/east_ocr/Dockerfile.ubuntu,COPY,2,"['. /custom_nodes/${NODE_NAME}/', 'custom_node_interface.h /']"
openvinotoolkit/model_server,latest,/src/custom_nodes/east_ocr/Dockerfile.ubuntu,WORKDIR,1,['/custom_nodes/${NODE_NAME}/']
openvinotoolkit/model_server,latest,/src/custom_nodes/east_ocr/Dockerfile.redhat,FROM,1,['registry.access.redhat.com/ubi8/ubi:8.4']
openvinotoolkit/model_server,latest,/src/custom_nodes/east_ocr/Dockerfile.redhat,RUN,5,"['dnf install -y https://dl.fedoraproject.org/pub/epel/epel-release-latest-8.noarch.rpm && yum update -d6 -y && yum install -d6 -y gcc-c++ curl xz', 'curl -s https://download.01.org/opencv/master/openvinotoolkit/thirdparty/linux/opencv/opencv_4.5.1-044_centos7.txz | tar --use-compress-program=xz -xvf -', 'mkdir -p /custom_nodes/lib', 'g++ -c -std=c++17 ${NODE_NAME}.cpp -fpic  -I/opencv/include/ -Wall -Wno-unknown-pragmas -Werror -fno-strict-overflow -fno-delete-null-pointer-checks -fwrapv -fstack-protector', 'g++ -shared -o /custom_nodes/lib/libcustom_node_${NODE_NAME}.so ${NODE_NAME}.o -L/opencv/lib/ -I/opencv/include/ -lopencv_core -lopencv_imgproc -lopencv_imgcodecs']"
openvinotoolkit/model_server,latest,/src/custom_nodes/east_ocr/Dockerfile.redhat,ARG,1,['NODE_NAME=east_ocr']
openvinotoolkit/model_server,latest,/src/custom_nodes/east_ocr/Dockerfile.redhat,COPY,2,"['. /custom_nodes/${NODE_NAME}/', 'custom_node_interface.h /']"
openvinotoolkit/model_server,latest,/src/custom_nodes/east_ocr/Dockerfile.redhat,WORKDIR,1,['/custom_nodes/${NODE_NAME}/']
openvinotoolkit/model_server,latest,/src/custom_nodes/image_transformation/Dockerfile.centos,FROM,1,['centos:7']
openvinotoolkit/model_server,latest,/src/custom_nodes/image_transformation/Dockerfile.centos,RUN,5,"['yum update -y && yum install centos-release-scl -y && yum install -y devtoolset-8-gcc*', 'curl -s https://download.01.org/opencv/master/openvinotoolkit/thirdparty/linux/opencv/opencv_4.5.1-044_centos7.txz | tar --use-compress-program=xz -xvf -', 'mkdir -p /custom_nodes/lib', '/opt/rh/devtoolset-8/root/bin/g++ -c -std=c++17 ${NODE_NAME}.cpp -fpic  -I/opencv/include/ -Wall -Wno-unknown-pragmas -Werror -fno-strict-overflow -fno-delete-null-pointer-checks -fwrapv -fstack-protector', '/opt/rh/devtoolset-8/root/bin/g++ -shared -o /custom_nodes/lib/libcustom_node_${NODE_NAME}.so ${NODE_NAME}.o -L/opencv/lib/ -I/opencv/include/ -lopencv_core -lopencv_imgproc -lopencv_imgcodecs']"
openvinotoolkit/model_server,latest,/src/custom_nodes/image_transformation/Dockerfile.centos,ARG,1,['NODE_NAME=image_transformation']
openvinotoolkit/model_server,latest,/src/custom_nodes/image_transformation/Dockerfile.centos,COPY,2,"['. /custom_nodes/${NODE_NAME}/', 'custom_node_interface.h /']"
openvinotoolkit/model_server,latest,/src/custom_nodes/image_transformation/Dockerfile.centos,WORKDIR,1,['/custom_nodes/${NODE_NAME}/']
openvinotoolkit/model_server,latest,/src/custom_nodes/image_transformation/Dockerfile.ubuntu,FROM,1,['ubuntu:20.04']
openvinotoolkit/model_server,latest,/src/custom_nodes/image_transformation/Dockerfile.ubuntu,RUN,5,"['apt update && apt install -y build-essential curl', 'curl -s https://download.01.org/opencv/master/openvinotoolkit/thirdparty/linux/opencv/opencv_4.5.2-076_ubuntu20.txz | tar --use-compress-program=xz -xvf -', 'mkdir -p /custom_nodes/lib', 'g++ -c -std=c++17 ${NODE_NAME}.cpp -fpic  -I/opencv/include/ -Wall -Wno-unknown-pragmas -Werror -fno-strict-overflow -fno-delete-null-pointer-checks -fwrapv -fstack-protector', 'g++ -shared -o /custom_nodes/lib/libcustom_node_${NODE_NAME}.so ${NODE_NAME}.o -L/opencv/lib/ -I/opencv/include/ -lopencv_core -lopencv_imgproc -lopencv_imgcodecs']"
openvinotoolkit/model_server,latest,/src/custom_nodes/image_transformation/Dockerfile.ubuntu,ARG,1,['NODE_NAME=image_transformation']
openvinotoolkit/model_server,latest,/src/custom_nodes/image_transformation/Dockerfile.ubuntu,COPY,2,"['. /custom_nodes/${NODE_NAME}/', 'custom_node_interface.h /']"
openvinotoolkit/model_server,latest,/src/custom_nodes/image_transformation/Dockerfile.ubuntu,WORKDIR,1,['/custom_nodes/${NODE_NAME}/']
openvinotoolkit/model_server,latest,/src/custom_nodes/image_transformation/Dockerfile.redhat,FROM,1,['registry.access.redhat.com/ubi8/ubi:8.4']
openvinotoolkit/model_server,latest,/src/custom_nodes/image_transformation/Dockerfile.redhat,RUN,5,"['dnf install -y https://dl.fedoraproject.org/pub/epel/epel-release-latest-8.noarch.rpm && yum update -d6 -y && yum install -d6 -y gcc-c++ curl xz', 'curl -s https://download.01.org/opencv/master/openvinotoolkit/thirdparty/linux/opencv/opencv_4.5.1-044_centos7.txz | tar --use-compress-program=xz -xvf -', 'mkdir -p /custom_nodes/lib', 'g++ -c -std=c++17 ${NODE_NAME}.cpp -fpic  -I/opencv/include/ -Wall -Wno-unknown-pragmas -Werror -fno-strict-overflow -fno-delete-null-pointer-checks -fwrapv -fstack-protector', 'g++ -shared -o /custom_nodes/lib/libcustom_node_${NODE_NAME}.so ${NODE_NAME}.o -L/opencv/lib/ -I/opencv/include/ -lopencv_core -lopencv_imgproc -lopencv_imgcodecs']"
openvinotoolkit/model_server,latest,/src/custom_nodes/image_transformation/Dockerfile.redhat,ARG,1,['NODE_NAME=image_transformation']
openvinotoolkit/model_server,latest,/src/custom_nodes/image_transformation/Dockerfile.redhat,COPY,2,"['. /custom_nodes/${NODE_NAME}/', 'custom_node_interface.h /']"
openvinotoolkit/model_server,latest,/src/custom_nodes/image_transformation/Dockerfile.redhat,WORKDIR,1,['/custom_nodes/${NODE_NAME}/']
openvinotoolkit/model_server,latest,/extras/ovms-operator/Dockerfile,FROM,1,['quay.io/operator-framework/helm-operator:v1.15.0']
openvinotoolkit/model_server,latest,/extras/ovms-operator/Dockerfile,LABEL,2,"['""Description""=""OpenVINO(TM) Model Server Operator""', '""Vendor""=""Intel Corporation""']"
openvinotoolkit/model_server,latest,/extras/ovms-operator/Dockerfile,ENV,1,['HOME=/opt/helm']
openvinotoolkit/model_server,latest,/extras/ovms-operator/Dockerfile,COPY,3,"['watches.yaml ${HOME}/watches.yaml', 'helm-charts  ${HOME}/helm-charts', 'LICENSE LICENSE']"
openvinotoolkit/model_server,latest,/extras/ovms-operator/Dockerfile,WORKDIR,1,['${HOME}']
openvinotoolkit/model_server,latest,/extras/ovms-operator/bundles/0.1.0/Dockerfile,FROM,1,['scratch']
openvinotoolkit/model_server,latest,/extras/ovms-operator/bundles/0.1.0/Dockerfile,LABEL,11,"['operators.operatorframework.io.bundle.mediatype.v1=registry+v1', 'operators.operatorframework.io.bundle.manifests.v1=manifests/', 'operators.operatorframework.io.bundle.metadata.v1=metadata/', 'operators.operatorframework.io.bundle.package.v1=ovms-operator', 'operators.operatorframework.io.bundle.channels.v1=alpha', 'operators.operatorframework.io.metrics.builder=operator-sdk-v1.4.0', 'operators.operatorframework.io.metrics.mediatype.v1=metrics+v1', 'operators.operatorframework.io.metrics.project_layout=helm.sdk.operatorframework.io/v1', 'operators.operatorframework.io.test.config.v1=tests/scorecard/', 'operators.operatorframework.io.test.mediatype.v1=scorecard+v1', 'operators.operatorframework.io.bundle.channel.default.v1=alpha']"
openvinotoolkit/model_server,latest,/extras/ovms-operator/bundles/0.1.0/Dockerfile,COPY,3,"['manifests /manifests/', 'metadata /metadata/', 'tests/scorecard /tests/scorecard/']"
openvinotoolkit/model_server,latest,/extras/ovms-operator/bundles/0.2.0/Dockerfile,FROM,1,['scratch']
openvinotoolkit/model_server,latest,/extras/ovms-operator/bundles/0.2.0/Dockerfile,LABEL,11,"['operators.operatorframework.io.bundle.mediatype.v1=registry+v1', 'operators.operatorframework.io.bundle.manifests.v1=manifests/', 'operators.operatorframework.io.bundle.metadata.v1=metadata/', 'operators.operatorframework.io.bundle.package.v1=ovms-operator', 'operators.operatorframework.io.bundle.channels.v1=alpha', 'operators.operatorframework.io.metrics.builder=operator-sdk-v1.4.0', 'operators.operatorframework.io.metrics.mediatype.v1=metrics+v1', 'operators.operatorframework.io.metrics.project_layout=helm.sdk.operatorframework.io/v1', 'operators.operatorframework.io.test.config.v1=tests/scorecard/', 'operators.operatorframework.io.test.mediatype.v1=scorecard+v1', 'operators.operatorframework.io.bundle.channel.default.v1=alpha']"
openvinotoolkit/model_server,latest,/extras/ovms-operator/bundles/0.2.0/Dockerfile,COPY,3,"['manifests /manifests/', 'metadata /metadata/', 'tests/scorecard /tests/scorecard/']"
openvinotoolkit/model_server,latest,/extras/openvino-operator-openshift/Dockerfile,FROM,1,['quay.io/operator-framework/helm-operator:v1.8.0']
openvinotoolkit/model_server,latest,/extras/openvino-operator-openshift/Dockerfile,LABEL,6,"['""name""=""openvino-operator""', '""vendor""=""Intel Corporation""', '""version""=""0.2.0""', '""release""=""0.2""', '""summary""=""OpenVINO(TM) Operator""', '""description""=""An Operator for managing OpenVINO Toolkit in OpenShift""']"
openvinotoolkit/model_server,latest,/extras/openvino-operator-openshift/Dockerfile,ENV,1,['HOME=/opt/helm']
openvinotoolkit/model_server,latest,/extras/openvino-operator-openshift/Dockerfile,COPY,3,"['watches.yaml ${HOME}/watches.yaml', 'helm-charts  ${HOME}/helm-charts', 'LICENSE /licenses/LICENSE']"
openvinotoolkit/model_server,latest,/extras/openvino-operator-openshift/Dockerfile,WORKDIR,1,['${HOME}']
openvinotoolkit/model_server,latest,/extras/openvino-operator-openshift/openshift-bundle/0.2.0/Dockerfile,FROM,1,['scratch']
openvinotoolkit/model_server,latest,/extras/openvino-operator-openshift/openshift-bundle/0.2.0/Dockerfile,LABEL,12,"['operators.operatorframework.io.bundle.mediatype.v1=registry+v1', 'operators.operatorframework.io.bundle.manifests.v1=manifests/', 'operators.operatorframework.io.bundle.metadata.v1=metadata/', 'operators.operatorframework.io.bundle.package.v1=ovms-operator', 'operators.operatorframework.io.bundle.channels.v1=alpha', 'operators.operatorframework.io.metrics.builder=operator-sdk-v1.7.1+git', 'operators.operatorframework.io.metrics.mediatype.v1=metrics+v1', 'operators.operatorframework.io.metrics.project_layout=helm.sdk.operatorframework.io/v1', 'operators.operatorframework.io.test.mediatype.v1=scorecard+v1', 'operators.operatorframework.io.test.config.v1=tests/scorecard/', 'operators.operatorframework.io.bundle.channel.default.v1=alpha', 'com.redhat.openshift.versions=""v4.6""']"
openvinotoolkit/model_server,latest,/extras/openvino-operator-openshift/openshift-bundle/0.2.0/Dockerfile,COPY,3,"['manifests /manifests/', 'metadata /metadata/', 'tests/scorecard /tests/scorecard/']"
openvinotoolkit/model_server,latest,/extras/nginx-mtls-auth/Dockerfile.centos,ARG,1,['BASE_IMAGE=openvino/model_server:latest']
openvinotoolkit/model_server,latest,/extras/nginx-mtls-auth/Dockerfile.centos,FROM,1,['$BASE_IMAGE']
openvinotoolkit/model_server,latest,/extras/nginx-mtls-auth/Dockerfile.centos,USER,2,"['root', 'ovms']"
openvinotoolkit/model_server,latest,/extras/nginx-mtls-auth/Dockerfile.centos,RUN,1,"[""set -e ;     set -x ;     mkdir /certs ;     yum install -y epel-release ;    yum install -y nginx wget ;     yum clean all ;     wget -O /usr/bin/dumb-init https://github.com/Yelp/dumb-init/releases/download/v1.2.2/dumb-init_1.2.2_amd64 ;     chmod +x /usr/bin/dumb-init ;     touch /run/nginx.pid ;     chmod -R 777 /etc/nginx/conf.d/ /var/log/nginx/ /certs/ /var/lib/nginx/ /var/lib/nginx/tmp/ ;     sed -i 's,listen       80;,listen       unix:/tmp/nginx-default.sock;,' /etc/nginx/nginx.conf ;     sed -i 's,listen       \\[::\\]:80;,,' /etc/nginx/nginx.conf ;     sed -i 's,pid /run/nginx.pid;,pid /tmp/nginx.pid;,' /etc/nginx/nginx.conf ;     sed -i 's,user nginx;,,' /etc/nginx/nginx.conf ;""]"
openvinotoolkit/model_server,latest,/extras/nginx-mtls-auth/Dockerfile.centos,COPY,2,"['ovms_wrapper /', 'model_server.conf.template /']"
openvinotoolkit/model_server,latest,/extras/nginx-mtls-auth/Dockerfile.centos,ENTRYPOINT,1,"['[""/usr/bin/dumb-init"", ""--"", ""/ovms_wrapper""]']"
openvinotoolkit/model_server,latest,/extras/nginx-mtls-auth/Dockerfile.ubuntu,ARG,1,['BASE_IMAGE=openvino/model_server:latest']
openvinotoolkit/model_server,latest,/extras/nginx-mtls-auth/Dockerfile.ubuntu,FROM,1,['$BASE_IMAGE']
openvinotoolkit/model_server,latest,/extras/nginx-mtls-auth/Dockerfile.ubuntu,USER,2,"['root', 'ovms']"
openvinotoolkit/model_server,latest,/extras/nginx-mtls-auth/Dockerfile.ubuntu,ENV,1,['DEBIAN_FRONTEND=noninteractive']
openvinotoolkit/model_server,latest,/extras/nginx-mtls-auth/Dockerfile.ubuntu,SHELL,1,"['[""/bin/bash"", ""-c""]']"
openvinotoolkit/model_server,latest,/extras/nginx-mtls-auth/Dockerfile.ubuntu,RUN,1,"[""set -e ;     set -x ;     mkdir /certs ;     apt update -y;     apt install -y nginx dumb-init ;     apt clean ;     touch /run/nginx.pid ; mkdir -p /var/lib/nginx/tmp/ ;     chmod -R 777 /etc/nginx/conf.d/ /var/log/nginx/ /certs/ /var/lib/nginx/ /var/lib/nginx/tmp/ ;     sed -i 's,pid /run/nginx.pid;,pid /tmp/nginx.pid;,' /etc/nginx/nginx.conf ;     sed -i 's,user www-data;,,' /etc/nginx/nginx.conf ;""]"
openvinotoolkit/model_server,latest,/extras/nginx-mtls-auth/Dockerfile.ubuntu,COPY,2,"['ovms_wrapper /', 'model_server.conf.template /']"
openvinotoolkit/model_server,latest,/extras/nginx-mtls-auth/Dockerfile.ubuntu,ENTRYPOINT,1,"['[""/usr/bin/dumb-init"", ""--"", ""/ovms_wrapper""]']"
openvinotoolkit/model_server,latest,/extras/nginx-mtls-auth/Dockerfile.redhat,ARG,1,['BASE_IMAGE=openvino/model_server:latest']
openvinotoolkit/model_server,latest,/extras/nginx-mtls-auth/Dockerfile.redhat,FROM,1,['$BASE_IMAGE']
openvinotoolkit/model_server,latest,/extras/nginx-mtls-auth/Dockerfile.redhat,USER,2,"['root', 'ovms']"
openvinotoolkit/model_server,latest,/extras/nginx-mtls-auth/Dockerfile.redhat,RUN,1,"[""set -e ;     set -x ;     mkdir /certs ;     unset LD_LIBRARY_PATH ;     microdnf install systemd wget findutils;     rpm -Uv http://nginx.org/packages/mainline/centos/8/x86_64/RPMS/nginx-1.19.7-1.el8.ngx.x86_64.rpm ;     wget -O /usr/bin/dumb-init https://github.com/Yelp/dumb-init/releases/download/v1.2.2/dumb-init_1.2.2_amd64 ;     chmod +x /usr/bin/dumb-init ;     touch /run/nginx.pid ; mkdir -p /var/lib/nginx/tmp/ ; mkdir -p /var/cache/nginx/;     chmod -R 777 /etc/nginx/conf.d/ /var/log/nginx/ /certs/ /var/lib/nginx/ /var/lib/nginx/tmp/ /var/cache/nginx/;     sed -i 's,listen       80 default_server;,listen       unix:/tmp/nginx-default.sock;,' /etc/nginx/nginx.conf ;     sed -i 's,listen       \\[::\\]:80 default_server;,,' /etc/nginx/nginx.conf ;     sed -i 's,/var/run/nginx.pid;,/tmp/nginx.pid;,' /etc/nginx/nginx.conf ;     sed -i 's,user  nginx;,,' /etc/nginx/nginx.conf ;""]"
openvinotoolkit/model_server,latest,/extras/nginx-mtls-auth/Dockerfile.redhat,COPY,2,"['ovms_wrapper /', 'model_server.conf.template /']"
openvinotoolkit/model_server,latest,/extras/nginx-mtls-auth/Dockerfile.redhat,ENTRYPOINT,1,"['[""/usr/bin/dumb-init"", ""--"", ""/ovms_wrapper""]']"
openml/openml-python,latest,/docker/Dockerfile,FROM,1,['python:3']
openml/openml-python,latest,/docker/Dockerfile,RUN,6,"['git clone  https://github.com/openml/openml-python.git omlp', 'python -m venv venv', 'venv/bin/pip install wheel setuptools', 'venv/bin/pip install -e .[test,examples,docs,examples_unix]', 'mkdir scripts', ""sed -i 's/\\r//g' scripts/startup.sh""]"
openml/openml-python,latest,/docker/Dockerfile,WORKDIR,2,"['omlp', '/']"
openml/openml-python,latest,/docker/Dockerfile,ADD,1,['startup.sh scripts/']
openml/openml-python,latest,/docker/Dockerfile,ENTRYPOINT,1,"['[""/bin/bash"", ""/scripts/startup.sh""]']"
reiinakano/xcessiv,latest,/docker/Dockerfile,FROM,1,['python:2']
reiinakano/xcessiv,latest,/docker/Dockerfile,MAINTAINER,1,['Reiichiro Nakano <reiichiro.s.nakano@gmail.com>']
reiinakano/xcessiv,latest,/docker/Dockerfile,RUN,3,"['pip --no-cache-dir install         numpy         scipy         sklearn         pandas         SQLAlchemy         Flask         gevent         redis         rq         six', 'pip --no-cache-dir install xcessiv', 'mkdir /XcessivProjects']"
reiinakano/xcessiv,latest,/docker/Dockerfile,EXPOSE,1,['1994']
reiinakano/xcessiv,latest,/docker/Dockerfile,WORKDIR,1,"['""/XcessivProjects""']"
reiinakano/xcessiv,latest,/docker/Dockerfile,CMD,1,"['[""xcessiv""]']"
orchest/orchest,latest,/services/jupyter-enterprise-gateway/Dockerfile,FROM,1,['elyra/enterprise-gateway:2.5.2']
orchest/orchest,latest,/services/jupyter-enterprise-gateway/Dockerfile,LABEL,1,"['maintainer=""Orchest B.V. https://www.orchest.io""']"
orchest/orchest,latest,/services/jupyter-enterprise-gateway/Dockerfile,COPY,2,"['./kernel-override/ /opt/conda/share/jupyter/kernels/python3/', './lib/python /orchest/lib/python']"
orchest/orchest,latest,/services/jupyter-enterprise-gateway/Dockerfile,USER,2,"['root', '$NB_UID']"
orchest/orchest,latest,/services/jupyter-enterprise-gateway/Dockerfile,RUN,1,['pip3 install --upgrade pip && pip3 install -e /orchest/lib/python/orchest-internals']
orchest/orchest,latest,/services/jupyter-enterprise-gateway/Dockerfile,ARG,1,['ORCHEST_VERSION']
orchest/orchest,latest,/services/jupyter-enterprise-gateway/Dockerfile,ENV,1,['ORCHEST_VERSION=${ORCHEST_VERSION}']
orchest/orchest,latest,/services/session-sidecar/Dockerfile,FROM,1,['python:3.8-slim']
orchest/orchest,latest,/services/session-sidecar/Dockerfile,LABEL,1,"['maintainer=""Orchest B.V. https://www.orchest.io""']"
orchest/orchest,latest,/services/session-sidecar/Dockerfile,RUN,2,"['apt-get update && apt-get install -y net-tools', 'pip3 install -r requirements.txt']"
orchest/orchest,latest,/services/session-sidecar/Dockerfile,COPY,3,"['./requirements.txt /orchest/services/session-sidecar/', './lib/python /orchest/lib/python', './app ./app']"
orchest/orchest,latest,/services/session-sidecar/Dockerfile,WORKDIR,1,['/orchest/services/session-sidecar']
orchest/orchest,latest,/services/session-sidecar/Dockerfile,ARG,1,['ORCHEST_VERSION']
orchest/orchest,latest,/services/session-sidecar/Dockerfile,ENV,1,['ORCHEST_VERSION=${ORCHEST_VERSION}']
orchest/orchest,latest,/services/session-sidecar/Dockerfile,ENTRYPOINT,1,"['[""/bin/sh"", ""-c"", ""umask 002 && python -u app/main.py""]']"
orchest/orchest,latest,/services/base-images/base-kernel-py/Dockerfile,FROM,1,['elyra/kernel-py:2.5.2']
orchest/orchest,latest,/services/base-images/base-kernel-py/Dockerfile,LABEL,1,"['maintainer=""Orchest B.V. https://www.orchest.io""']"
orchest/orchest,latest,/services/base-images/base-kernel-py/Dockerfile,USER,2,"['root', '$NB_USER']"
orchest/orchest,latest,/services/base-images/base-kernel-py/Dockerfile,RUN,5,"['apt-get update     && apt-get install default-libmysqlclient-dev sudo -y', 'passwd -d $NB_USER && echo ""$NB_USER   ALL=(ALL)   NOPASSWD:ALL"" | tee /etc/sudoers.d/$NB_USER', 'chown $NB_USER -R /orchest/orchest-sdk     && chown $NB_USER -R /orchest/lib', 'pip install -r requirements-user.txt', 'conda create -y python=$(python --version | tr -d ""Python "") -n orchestdependencies     && eval ""$(conda shell.bash hook)""     && conda activate orchestdependencies     && pip install -r requirements.txt     && conda deactivate']"
orchest/orchest,latest,/services/base-images/base-kernel-py/Dockerfile,COPY,5,"['./runnable-shared/runner/requirements* /orchest/services/base-images/runnable-shared/runner/', './lib/python /orchest/lib/python', './orchest-sdk /orchest/orchest-sdk', './runnable-shared/runner /orchest/services/base-images/runnable-shared/runner', './runnable-shared/bootscript.sh /orchest/bootscript.sh']"
orchest/orchest,latest,/services/base-images/base-kernel-py/Dockerfile,WORKDIR,1,['/orchest/services/base-images/runnable-shared/runner']
orchest/orchest,latest,/services/base-images/base-kernel-py/Dockerfile,ENV,4,"['JUPYTER_PATH=/opt/conda/share/jupyter', 'HOME=/home/$NB_USER', 'CONDA_ENV=""base""', 'ORCHEST_VERSION=${ORCHEST_VERSION}']"
orchest/orchest,latest,/services/base-images/base-kernel-py/Dockerfile,ARG,1,['ORCHEST_VERSION']
orchest/orchest,latest,/services/base-images/base-kernel-py/Dockerfile,CMD,1,"['[ ""/orchest/bootscript.sh"" ]']"
orchest/orchest,latest,/services/base-images/base-kernel-py-gpu/Dockerfile,FROM,1,['orchest/kernel-py:2.5.2-gpu']
orchest/orchest,latest,/services/base-images/base-kernel-py-gpu/Dockerfile,USER,2,"['root', '$NB_USER']"
orchest/orchest,latest,/services/base-images/base-kernel-py-gpu/Dockerfile,RUN,5,"['apt-get update     && apt-get install default-libmysqlclient-dev sudo -y', 'passwd -d $NB_USER && echo ""$NB_USER   ALL=(ALL)   NOPASSWD:ALL"" | tee /etc/sudoers.d/$NB_USER', 'chown $NB_USER -R /orchest/orchest-sdk     && chown $NB_USER -R /orchest/lib', 'pip install -r requirements-user.txt', 'conda create -y python=$(python --version | tr -d ""Python "") -n orchestdependencies     && eval ""$(conda shell.bash hook)""     && conda activate orchestdependencies     && pip install -r requirements.txt     && conda deactivate']"
orchest/orchest,latest,/services/base-images/base-kernel-py-gpu/Dockerfile,COPY,5,"['./runnable-shared/runner/requirements* /orchest/services/base-images/runnable-shared/runner/', './lib/python /orchest/lib/python', './orchest-sdk /orchest/orchest-sdk', './runnable-shared/runner /orchest/services/base-images/runnable-shared/runner', './runnable-shared/bootscript.sh /orchest/bootscript.sh']"
orchest/orchest,latest,/services/base-images/base-kernel-py-gpu/Dockerfile,WORKDIR,1,['/orchest/services/base-images/runnable-shared/runner']
orchest/orchest,latest,/services/base-images/base-kernel-py-gpu/Dockerfile,ENV,4,"['JUPYTER_PATH=/opt/conda/share/jupyter', 'HOME=/home/$NB_USER', 'CONDA_ENV=""base""', 'ORCHEST_VERSION=${ORCHEST_VERSION}']"
orchest/orchest,latest,/services/base-images/base-kernel-py-gpu/Dockerfile,ARG,1,['ORCHEST_VERSION']
orchest/orchest,latest,/services/base-images/base-kernel-py-gpu/Dockerfile,CMD,1,"['[ ""/orchest/bootscript.sh"" ]']"
orchest/orchest,latest,/services/base-images/base-kernel-julia/Dockerfile,FROM,1,['orchest/kernel-julia:2.5.2']
orchest/orchest,latest,/services/base-images/base-kernel-julia/Dockerfile,LABEL,1,"['maintainer=""Orchest B.V. https://www.orchest.io""']"
orchest/orchest,latest,/services/base-images/base-kernel-julia/Dockerfile,USER,2,"['root', '$NB_USER']"
orchest/orchest,latest,/services/base-images/base-kernel-julia/Dockerfile,RUN,5,"['apt-get update     && apt-get install default-libmysqlclient-dev sudo -y', 'passwd -d $NB_USER && echo ""$NB_USER   ALL=(ALL)   NOPASSWD:ALL"" | tee /etc/sudoers.d/$NB_USER', 'chown $NB_USER -R /orchest/orchest-sdk     && chown $NB_USER -R /orchest/lib', 'pip install -r requirements-user.txt', 'conda create -y python=$(python --version | tr -d ""Python "") -n orchestdependencies     && eval ""$(conda shell.bash hook)""     && conda activate orchestdependencies     && pip install -r requirements.txt     && conda deactivate']"
orchest/orchest,latest,/services/base-images/base-kernel-julia/Dockerfile,COPY,5,"['./runnable-shared/runner/requirements* /orchest/services/base-images/runnable-shared/runner/', './lib/python /orchest/lib/python', './orchest-sdk /orchest/orchest-sdk', './runnable-shared/runner /orchest/services/base-images/runnable-shared/runner', './runnable-shared/bootscript.sh /orchest/bootscript.sh']"
orchest/orchest,latest,/services/base-images/base-kernel-julia/Dockerfile,WORKDIR,1,['/orchest/services/base-images/runnable-shared/runner']
orchest/orchest,latest,/services/base-images/base-kernel-julia/Dockerfile,ENV,4,"['JUPYTER_PATH=/opt/conda/share/jupyter', 'HOME=/home/$NB_USER', 'CONDA_ENV=""base""', 'ORCHEST_VERSION=${ORCHEST_VERSION}']"
orchest/orchest,latest,/services/base-images/base-kernel-julia/Dockerfile,ARG,1,['ORCHEST_VERSION']
orchest/orchest,latest,/services/base-images/base-kernel-julia/Dockerfile,CMD,1,"['[ ""/orchest/bootscript.sh"" ]']"
orchest/orchest,latest,/services/base-images/base-kernel-r/Dockerfile,FROM,1,['elyra/kernel-r:2.5.2']
orchest/orchest,latest,/services/base-images/base-kernel-r/Dockerfile,LABEL,1,"['maintainer=""Orchest B.V. https://www.orchest.io""']"
orchest/orchest,latest,/services/base-images/base-kernel-r/Dockerfile,USER,2,"['root', '$NB_USER']"
orchest/orchest,latest,/services/base-images/base-kernel-r/Dockerfile,RUN,5,"['apt-get update     && apt-get install default-libmysqlclient-dev sudo -y', 'passwd -d $NB_USER && echo ""$NB_USER   ALL=(ALL)   NOPASSWD:ALL"" | tee /etc/sudoers.d/$NB_USER', 'chown $NB_USER -R /orchest/orchest-sdk     && chown $NB_USER -R /orchest/lib', 'pip install -r requirements-user.txt', 'conda create -y python=$(python --version | tr -d ""Python "") -n orchestdependencies     && eval ""$(conda shell.bash hook)""     && conda activate orchestdependencies     && pip install -r requirements.txt     && conda deactivate']"
orchest/orchest,latest,/services/base-images/base-kernel-r/Dockerfile,COPY,5,"['./runnable-shared/runner/requirements* /orchest/services/base-images/runnable-shared/runner/', './lib/python /orchest/lib/python', './orchest-sdk /orchest/orchest-sdk', './runnable-shared/runner /orchest/services/base-images/runnable-shared/runner', './runnable-shared/bootscript.sh /orchest/bootscript.sh']"
orchest/orchest,latest,/services/base-images/base-kernel-r/Dockerfile,WORKDIR,1,['/orchest/services/base-images/runnable-shared/runner']
orchest/orchest,latest,/services/base-images/base-kernel-r/Dockerfile,ENV,4,"['JUPYTER_PATH=/opt/conda/share/jupyter', 'HOME=/home/$NB_USER', 'CONDA_ENV=""base""', 'ORCHEST_VERSION=${ORCHEST_VERSION}']"
orchest/orchest,latest,/services/base-images/base-kernel-r/Dockerfile,ARG,1,['ORCHEST_VERSION']
orchest/orchest,latest,/services/base-images/base-kernel-r/Dockerfile,CMD,1,"['[ ""/orchest/bootscript.sh"" ]']"
orchest/orchest,latest,/services/update-server/Dockerfile,FROM,1,['tiangolo/meinheld-gunicorn-flask:python3.8']
orchest/orchest,latest,/services/update-server/Dockerfile,LABEL,1,"['maintainer=""Orchest B.V. https://www.orchest.io""']"
orchest/orchest,latest,/services/update-server/Dockerfile,COPY,3,"['./requirements.txt /orchest/services/update-server/', './lib/python /orchest/lib/python', './app ./app']"
orchest/orchest,latest,/services/update-server/Dockerfile,WORKDIR,2,"['/orchest/services/update-server', '/orchest/services/update-server/app']"
orchest/orchest,latest,/services/update-server/Dockerfile,RUN,1,['pip3 install -r requirements.txt']
orchest/orchest,latest,/services/update-server/Dockerfile,ARG,1,['ORCHEST_VERSION']
orchest/orchest,latest,/services/update-server/Dockerfile,ENV,2,"['ORCHEST_VERSION=${ORCHEST_VERSION}', 'GUNICORN_CONF /orchest/services/update-server/app/gunicorn_conf.py']"
orchest/orchest,latest,/services/jupyter-server/Dockerfile,FROM,1,['python:3.8-slim']
orchest/orchest,latest,/services/jupyter-server/Dockerfile,LABEL,1,"['maintainer=""Orchest B.V. https://www.orchest.io""']"
orchest/orchest,latest,/services/jupyter-server/Dockerfile,RUN,6,"['apt-get update && apt-get install -y git curl jq ca-certificates && update-ca-certificates --fresh', 'curl -sL https://deb.nodesource.com/setup_14.x | bash - && apt-get install -y nodejs', 'rm /bin/sh && ln -s /bin/bash /bin/sh', 'pip3 install pip --upgrade &&     pip3 install -r requirements.txt', 'git clone https://github.com/orchest/visual-tags.git /jupyter-extensions/visual-tags     && git clone https://github.com/orchest/orchest-integration.git /jupyter-extensions/orchest-integration     && jupyter labextension install /jupyter-extensions/visual-tags         --no-build         --BaseExtensionApp.app_dir=$extension_dir     && jupyter labextension install /jupyter-extensions/orchest-integration         --no-build         --BaseExtensionApp.app_dir=$extension_dir     && pip3 install jupyterlab-git==0.30.1     && cp -rfT $pip_jupyter_extension_dir $extension_dir/extensions     && jupyter lab build --dev-build=False --LabBuildApp.app_dir=$extension_dir     && jupyter lab clean --LabCleanApp.app_dir=$extension_dir', 'bash /patch-pip.sh']"
orchest/orchest,latest,/services/jupyter-server/Dockerfile,COPY,4,"['./requirements.txt .', './jupyter_server_config.py /root/.jupyter/jupyter_server_config.py', 'patch-pip.sh pip-warning.py /', 'start.sh /']"
orchest/orchest,latest,/services/jupyter-server/Dockerfile,ARG,3,"['extension_dir=/jupyterlab-orchest-build', 'pip_jupyter_extension_dir=/usr/local/share/jupyter/lab/extensions', 'ORCHEST_VERSION']"
orchest/orchest,latest,/services/jupyter-server/Dockerfile,WORKDIR,1,['/project-dir']
orchest/orchest,latest,/services/jupyter-server/Dockerfile,ENV,1,['ORCHEST_VERSION=${ORCHEST_VERSION}']
orchest/orchest,latest,/services/jupyter-server/Dockerfile,ENTRYPOINT,1,"['[ ""/start.sh"" ]']"
orchest/orchest,latest,/services/auth-server/Dockerfile,FROM,1,['tiangolo/meinheld-gunicorn-flask:python3.8']
orchest/orchest,latest,/services/auth-server/Dockerfile,LABEL,1,"['maintainer=""Orchest B.V. https://www.orchest.io""']"
orchest/orchest,latest,/services/auth-server/Dockerfile,RUN,5,"['apt-get update && apt-get install -y ca-certificates && update-ca-certificates --fresh', 'curl -sL https://deb.nodesource.com/setup_14.x | bash - && apt-get install -y nodejs', 'pip3 install -r requirements.txt', 'npm run setup', 'pnpm i &&   pnpm run build --stream --filter ""@orchest/client-auth"" &&   find . -name \'node_modules\' -type d -prune -exec rm -rf \'{}\' +']"
orchest/orchest,latest,/services/auth-server/Dockerfile,COPY,7,"['./requirements.txt /orchest/services/auth-server/', './lib/python /orchest/lib/python', './client ./client', './lib/javascript /orchest/lib/javascript', './lib/design-system /orchest/lib/design-system', './pnpm_files/* /orchest/', './app ./app']"
orchest/orchest,latest,/services/auth-server/Dockerfile,WORKDIR,4,"['/orchest/services/auth-server', '/orchest', '/orchest/services/auth-server', '/orchest/services/auth-server/app']"
orchest/orchest,latest,/services/auth-server/Dockerfile,ENV,2,"['GUNICORN_CONF /orchest/services/auth-server/app/gunicorn_conf.py', 'ORCHEST_VERSION=${ORCHEST_VERSION}']"
orchest/orchest,latest,/services/auth-server/Dockerfile,ARG,1,['ORCHEST_VERSION']
orchest/orchest,latest,/services/nginx-proxy/Dockerfile,FROM,1,['openresty/openresty:1.19.3.1-3-buster']
orchest/orchest,latest,/services/nginx-proxy/Dockerfile,LABEL,1,"['maintainer=""Orchest B.V. https://www.orchest.io""']"
orchest/orchest,latest,/services/nginx-proxy/Dockerfile,RUN,4,"['mv /etc/nginx/conf.d/default.conf /etc/nginx/conf.d/default.conf.disabled', 'echo ""\\nenv ENABLE_SSL;"" >> /usr/local/openresty/nginx/conf/nginx.conf', 'cd /etc/ssl/certs/ &&     ./generate-dummy-certs.sh', 'nginx -t']"
orchest/orchest,latest,/services/nginx-proxy/Dockerfile,COPY,4,"['./orchest.conf /etc/nginx/conf.d/', './*.conf /usr/local/openresty/nginx/conf/', './certs/* /etc/ssl/certs/', './generate-dummy-certs.sh /etc/ssl/certs/']"
orchest/orchest,latest,/services/nginx-proxy/Dockerfile,ARG,1,['ORCHEST_VERSION']
orchest/orchest,latest,/services/nginx-proxy/Dockerfile,ENV,1,['ORCHEST_VERSION=${ORCHEST_VERSION}']
orchest/orchest,latest,/services/orchest-api/Dockerfile_celery,FROM,1,['python:3.8-slim']
orchest/orchest,latest,/services/orchest-api/Dockerfile_celery,LABEL,1,"['maintainer=""Orchest B.V. https://www.orchest.io""']"
orchest/orchest,latest,/services/orchest-api/Dockerfile_celery,RUN,2,"['apt-get update && apt-get install -y supervisor && mkdir -p /var/log/supervisor', 'pip3 install -r requirements.txt']"
orchest/orchest,latest,/services/orchest-api/Dockerfile_celery,COPY,5,"['./requirements.txt /orchest/services/orchest-api/', './lib/python /orchest/lib/python', './app ./app', 'celery_daemon_configs/supervisord.conf /etc/supervisor/supervisord.conf', 'celery_daemon_configs/worker_builds.conf      celery_daemon_configs/worker_interactive.conf      celery_daemon_configs/worker_jobs.conf      /etc/supervisor/conf.d/']"
orchest/orchest,latest,/services/orchest-api/Dockerfile_celery,WORKDIR,2,"['/orchest/services/orchest-api/', '/orchest/services/orchest-api/app/']"
orchest/orchest,latest,/services/orchest-api/Dockerfile_celery,ARG,1,['ORCHEST_VERSION']
orchest/orchest,latest,/services/orchest-api/Dockerfile_celery,ENV,1,['ORCHEST_VERSION=${ORCHEST_VERSION}']
orchest/orchest,latest,/services/orchest-api/Dockerfile_celery,ENTRYPOINT,1,"['[""/usr/bin/supervisord"", ""-n"", ""-m 002"", ""-u 0""]']"
orchest/orchest,latest,/services/orchest-api/Dockerfile,FROM,1,['tiangolo/meinheld-gunicorn-flask:python3.8']
orchest/orchest,latest,/services/orchest-api/Dockerfile,LABEL,1,"['maintainer=""Orchest B.V. https://www.orchest.io""']"
orchest/orchest,latest,/services/orchest-api/Dockerfile,COPY,4,"['./requirements.txt /orchest/services/orchest-api/', './lib /orchest/lib', './app ./app', './start.sh /']"
orchest/orchest,latest,/services/orchest-api/Dockerfile,WORKDIR,2,"['/orchest/services/orchest-api/', '/orchest/services/orchest-api/app']"
orchest/orchest,latest,/services/orchest-api/Dockerfile,RUN,1,['pip3 install -r requirements.txt']
orchest/orchest,latest,/services/orchest-api/Dockerfile,ENV,3,"['GUNICORN_CONF /orchest/services/orchest-api/app/gunicorn_conf.py', 'APP_MODULE ""main:app""', 'ORCHEST_VERSION=${ORCHEST_VERSION}']"
orchest/orchest,latest,/services/orchest-api/Dockerfile,ARG,1,['ORCHEST_VERSION']
orchest/orchest,latest,/services/orchest-webserver/Dockerfile,FROM,1,['tiangolo/meinheld-gunicorn-flask:python3.8']
orchest/orchest,latest,/services/orchest-webserver/Dockerfile,LABEL,1,"['maintainer=""Orchest B.V. https://www.orchest.io""']"
orchest/orchest,latest,/services/orchest-webserver/Dockerfile,RUN,5,"['apt-get update && apt-get install -y ca-certificates git && update-ca-certificates --fresh', 'curl -sL https://deb.nodesource.com/setup_14.x | bash - && apt-get install -y nodejs', 'pip3 install --upgrade pip && pip3 install -r requirements.txt', 'npm run setup', 'pnpm i &&   pnpm run build --stream --filter ""@orchest/client-orchest"" &&   find . -name \'node_modules\' -type d -prune -exec rm -rf \'{}\' +']"
orchest/orchest,latest,/services/orchest-webserver/Dockerfile,COPY,8,"['./requirements.txt /orchest/services/orchest-webserver/', './lib/python /orchest/lib/python', './client ./client', './lib/javascript /orchest/lib/javascript', './lib/design-system /orchest/lib/design-system', './pnpm_files/* /orchest/', './app ./app', './start.sh /']"
orchest/orchest,latest,/services/orchest-webserver/Dockerfile,WORKDIR,4,"['/orchest/services/orchest-webserver', '/orchest', '/orchest/services/orchest-webserver/', '/orchest/services/orchest-webserver/app']"
orchest/orchest,latest,/services/orchest-webserver/Dockerfile,ENV,3,"['GUNICORN_CONF /orchest/services/orchest-webserver/app/gunicorn_conf.py', 'APP_MODULE ""main:app""', 'ORCHEST_VERSION=${ORCHEST_VERSION}']"
orchest/orchest,latest,/services/orchest-webserver/Dockerfile,ARG,1,['ORCHEST_VERSION']
orchest/orchest,latest,/services/file-manager/Dockerfile,FROM,1,['filebrowser/filebrowser:v2.8.0-alpine']
orchest/orchest,latest,/services/file-manager/Dockerfile,LABEL,1,"['maintainer=""Orchest B.V. https://www.orchest.io""']"
orchest/orchest,latest,/services/file-manager/Dockerfile,COPY,1,['./ /']
orchest/orchest,latest,/services/file-manager/Dockerfile,RUN,1,"['/filebrowser config init --branding.name ""File Manager"" --auth.method noauth --branding.files /static &&     /filebrowser users add --perm.admin admin admin &&     chmod o+rw /database.db']"
orchest/orchest,latest,/services/file-manager/Dockerfile,ARG,1,['ORCHEST_VERSION']
orchest/orchest,latest,/services/file-manager/Dockerfile,ENV,1,['ORCHEST_VERSION=${ORCHEST_VERSION}']
orchest/orchest,latest,/services/file-manager/Dockerfile,ENTRYPOINT,1,"['[""/bin/sh"", ""-c"", ""umask 002 && /filebrowser""]']"
orchest/orchest,latest,/services/orchest-ctl/Dockerfile,FROM,1,['python:3.8-slim']
orchest/orchest,latest,/services/orchest-ctl/Dockerfile,LABEL,1,"['maintainer=""Orchest B.V. https://www.orchest.io""']"
orchest/orchest,latest,/services/orchest-ctl/Dockerfile,RUN,2,"['apt-get update &&     apt-get install -y git &&     git config --global user.name ""orchest"" &&     git config --global user.email ""system@orchest.io""', 'pip install .']"
orchest/orchest,latest,/services/orchest-ctl/Dockerfile,COPY,2,"['./ /orchest/services/orchest-ctl/', './lib /orchest/lib']"
orchest/orchest,latest,/services/orchest-ctl/Dockerfile,WORKDIR,1,['/orchest/services/orchest-ctl']
orchest/orchest,latest,/services/orchest-ctl/Dockerfile,ARG,1,['ORCHEST_VERSION']
orchest/orchest,latest,/services/orchest-ctl/Dockerfile,ENV,1,['ORCHEST_VERSION=${ORCHEST_VERSION}']
orchest/orchest,latest,/services/orchest-ctl/Dockerfile,ENTRYPOINT,1,"['[""orchest""]']"
orchest/orchest,latest,/services/memory-server/Dockerfile,FROM,1,['python:3.8-slim']
orchest/orchest,latest,/services/memory-server/Dockerfile,LABEL,1,"['maintainer=""Orchest B.V. https://www.orchest.io""']"
orchest/orchest,latest,/services/memory-server/Dockerfile,COPY,3,"['./requirements.txt /orchest/services/memory-server/', './lib/python /orchest/lib/python', './app ./app']"
orchest/orchest,latest,/services/memory-server/Dockerfile,WORKDIR,1,['/orchest/services/memory-server']
orchest/orchest,latest,/services/memory-server/Dockerfile,RUN,1,['pip3 install -r requirements.txt']
orchest/orchest,latest,/services/memory-server/Dockerfile,ARG,1,['ORCHEST_VERSION']
orchest/orchest,latest,/services/memory-server/Dockerfile,ENV,1,['ORCHEST_VERSION=${ORCHEST_VERSION}']
orchest/orchest,latest,/services/memory-server/Dockerfile,CMD,1,"['[""python"", ""app/main.py""]']"
ml-tooling/opyrator,latest,/playground/Dockerfile,FROM,1,['ubuntu:18.04']
ml-tooling/opyrator,latest,/playground/Dockerfile,USER,1,['root']
ml-tooling/opyrator,latest,/playground/Dockerfile,ENV,7,"['USER_GID=0     RESOURCES_PATH=""/resources""     DEBIAN_FRONTEND=""noninteractive""     SHELL=""/bin/bash""     HOME=""/root""', 'LC_ALL=""en_US.UTF-8""     LANG=""en_US.UTF-8""     LANGUAGE=""en_US:en""', 'PATH=/usr/local/openresty/nginx/sbin:$PATH', 'CONDA_DIR=/opt/conda     CONDA_ROOT=/opt/conda     PYTHON_VERSION=""3.8.5""     CONDA_PYTHON_DIR=/opt/conda/lib/python3.8     MINICONDA_VERSION=4.9.2     MINICONDA_MD5=122c8c9beb51e124ab32a0fa6426c656     CONDA_VERSION=4.9.2', 'PATH=$CONDA_ROOT/bin:$PATH', 'LD_LIBRARY_PATH=$CONDA_ROOT/lib', 'PATH=$HOME/.local/bin:$PATH']"
ml-tooling/opyrator,latest,/playground/Dockerfile,WORKDIR,1,['$HOME']
ml-tooling/opyrator,latest,/playground/Dockerfile,RUN,13,"['mkdir $RESOURCES_PATH && chmod a+rwx $RESOURCES_PATH', 'chmod a+rwx /usr/bin/clean-layer.sh &&     chmod a+rwx /usr/bin/fix-permissions.sh', ""apt-get update &&     apt-get install -y locales &&     sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen &&     locale-gen &&     dpkg-reconfigure --frontend=noninteractive locales &&     update-locale LANG=en_US.UTF-8 &&     clean-layer.sh"", 'apt-get update --fix-missing &&     apt-get install -y sudo apt-utils &&     apt-get upgrade -y &&     apt-get update &&     apt-get install -y --no-install-recommends         apt-transport-https         gnupg-agent         gpg-agent         gnupg2         ca-certificates         build-essential         pkg-config         software-properties-common         libcurl4         curl         wget         zlib1g-dev         git &&     chmod -R a+rwx /usr/local/bin/ &&     ldconfig &&     fix-permissions.sh $HOME &&     clean-layer.sh', 'wget --no-verbose https://github.com/krallin/tini/releases/download/v0.19.0/tini -O /tini &&     chmod +x /tini', 'OPEN_RESTY_VERSION=""1.19.3.1"" &&     mkdir $RESOURCES_PATH""/openresty"" &&     cd $RESOURCES_PATH""/openresty"" &&     apt-get update &&     apt-get purge -y nginx nginx-common &&     apt-get install -y libssl-dev libpcre3 libpcre3-dev apache2-utils zlib1g-dev &&     wget --no-verbose https://openresty.org/download/openresty-$OPEN_RESTY_VERSION.tar.gz  -O ./openresty.tar.gz &&     tar xfz ./openresty.tar.gz &&     rm ./openresty.tar.gz &&     cd ./openresty-$OPEN_RESTY_VERSION/ &&     ./configure --with-http_stub_status_module --with-http_sub_module > /dev/null &&     make -j2 > /dev/null &&     make install > /dev/null &&     mkdir -p /var/log/nginx/ &&     touch /var/log/nginx/upstream.log &&     cd $RESOURCES_PATH &&     rm -r $RESOURCES_PATH""/openresty"" &&     chmod -R a+rwx $RESOURCES_PATH &&     clean-layer.sh', 'wget --no-verbose https://repo.anaconda.com/miniconda/Miniconda3-py38_${CONDA_VERSION}-Linux-x86_64.sh -O ~/miniconda.sh &&     echo ""${MINICONDA_MD5} *miniconda.sh"" | md5sum -c - &&     /bin/bash ~/miniconda.sh -b -p $CONDA_ROOT &&     export PATH=$CONDA_ROOT/bin:$PATH &&     rm ~/miniconda.sh &&     $CONDA_ROOT/bin/conda config --system --add channels conda-forge &&     $CONDA_ROOT/bin/conda config --system --set auto_update_conda False &&     $CONDA_ROOT/bin/conda config --system --set show_channel_urls True &&     $CONDA_ROOT/bin/conda config --system --set channel_priority strict &&     $CONDA_ROOT/bin/conda config --system --set pip_interop_enabled false &&     $CONDA_ROOT/bin/conda update -y -n base -c defaults conda &&     $CONDA_ROOT/bin/conda update -y setuptools &&     $CONDA_ROOT/bin/conda install -y conda-build &&     $CONDA_ROOT/bin/conda install -y --update-all python=$PYTHON_VERSION &&     ln -s $CONDA_ROOT/bin/python /usr/local/bin/python &&     ln -s $CONDA_ROOT/bin/conda /usr/bin/conda &&     $CONDA_ROOT/bin/conda install -y pip &&     $CONDA_ROOT/bin/pip install --upgrade pip &&     chmod -R a+rwx /usr/local/bin/ &&     $CONDA_ROOT/bin/conda clean -y --packages &&     $CONDA_ROOT/bin/conda clean -y -a -f  &&     $CONDA_ROOT/bin/conda build purge-all &&     fix-permissions.sh $CONDA_ROOT &&     clean-layer.sh', 'pip install pipx &&     python -m pipx ensurepath &&     clean-layer.sh', 'apt-get update &&     mkdir -p /var/run/sshd && chmod 400 /var/run/sshd &&     apt-get install -y --no-install-recommends rsyslog &&     pipx install supervisor &&     pipx inject supervisor supervisor-stdout &&     mkdir -p /var/log/supervisor/ &&     clean-layer.sh', 'ln -s -f $CONDA_ROOT/bin/python /usr/bin/python &&     apt-get update &&     pip install --no-cache-dir --upgrade pip &&     pip install --no-cache-dir streamlit &&     pip install --no-cache-dir bokeh &&     pip install torch==1.8.1+cpu -f https://download.pytorch.org/whl/torch_stable.html &&     clean-layer.sh', 'pip install $RESOURCES_PATH/opyrator.tar.gz', 'apt-get update &&     apt-get -y --no-install-recommends install ffmpeg &&     clean-layer.sh', 'python $RESOURCES_PATH/scripts/install-demos.py']"
ml-tooling/opyrator,latest,/playground/Dockerfile,COPY,11,"['resources/scripts/clean-layer.sh  /usr/bin/clean-layer.sh', 'resources/scripts/fix-permissions.sh  /usr/bin/fix-permissions.sh', './resources/opyrator.tar.gz $RESOURCES_PATH/opyrator.tar.gz', 'resources/playground_app.py  $RESOURCES_PATH/demos/', 'resources/demos/  $RESOURCES_PATH/demos/', './resources/scripts/install-demos.py $RESOURCES_PATH/scripts/install-demos.py', 'resources/scripts/docker-entrypoint.py     resources/5xx.html     $RESOURCES_PATH/', 'resources/scripts/activate-analytics.py $RESOURCES_PATH/scripts/', 'resources/nginx/nginx.conf /etc/nginx/nginx.conf', 'resources/supervisor/supervisord.conf /etc/supervisor/supervisord.conf', 'resources/supervisor/programs/ /etc/supervisor/conf.d/']"
ml-tooling/opyrator,latest,/playground/Dockerfile,ENTRYPOINT,1,"['[""/tini"", ""-g"", ""--""]']"
ml-tooling/opyrator,latest,/playground/Dockerfile,CMD,1,"['[""python"", ""/resources/docker-entrypoint.py""]']"
ml-tooling/opyrator,latest,/playground/Dockerfile,EXPOSE,1,['8080']
ml-tooling/opyrator,latest,/.github/actions/build-environment/Dockerfile,FROM,1,['mltooling/build-environment:0.6.14']
huseinzol05/malaya,latest,/misc/deployment/gunicorn-flask/Dockerfile,FROM,1,['python:3.7.5-stretch AS base']
huseinzol05/malaya,latest,/misc/deployment/gunicorn-flask/Dockerfile,RUN,2,"['pip install Flask gunicorn eventlet gevent', 'pip install malaya tqdm tensorflow==1.15']"
huseinzol05/malaya,latest,/misc/deployment/gunicorn-flask/Dockerfile,WORKDIR,1,['/app']
huseinzol05/malaya,latest,/misc/deployment/gunicorn-flask/Dockerfile,COPY,1,['. /app']
huseinzol05/malaya,latest,/misc/deployment/uwsgi-flask-cheaper/Dockerfile,FROM,1,['python:3.7.5-stretch AS base']
huseinzol05/malaya,latest,/misc/deployment/uwsgi-flask-cheaper/Dockerfile,RUN,3,"['pip install Flask gunicorn eventlet gevent', 'pip install malaya tqdm tensorflow==1.15', 'pip install uwsgi']"
huseinzol05/malaya,latest,/misc/deployment/uwsgi-flask-cheaper/Dockerfile,WORKDIR,1,['/app']
huseinzol05/malaya,latest,/misc/deployment/uwsgi-flask-cheaper/Dockerfile,COPY,1,['. /app']
huseinzol05/malaya,latest,/misc/deployment/fast-api/Dockerfile,FROM,1,['tiangolo/uvicorn-gunicorn-fastapi:python3.7']
huseinzol05/malaya,latest,/misc/deployment/fast-api/Dockerfile,RUN,1,['pip install malaya tqdm tensorflow==1.15']
huseinzol05/malaya,latest,/misc/deployment/fast-api/Dockerfile,COPY,3,"['./app /app', './start.sh /app', './load_model.py /app']"
huseinzol05/malaya,latest,/misc/deployment/uwsgi-flask-fork/Dockerfile,FROM,1,['python:3.7.5-stretch AS base']
huseinzol05/malaya,latest,/misc/deployment/uwsgi-flask-fork/Dockerfile,RUN,3,"['pip install Flask gunicorn eventlet gevent', 'pip install malaya tqdm tensorflow==1.15', 'pip install uwsgi']"
huseinzol05/malaya,latest,/misc/deployment/uwsgi-flask-fork/Dockerfile,WORKDIR,1,['/app']
huseinzol05/malaya,latest,/misc/deployment/uwsgi-flask-fork/Dockerfile,COPY,1,['. /app']
hughperkins/tf-coriander,latest,/docker/Dockerfile,FROM,1,['ubuntu:16.04']
hughperkins/tf-coriander,latest,/docker/Dockerfile,ARG,1,['GIT_BRANCH=master']
hughperkins/tf-coriander,latest,/docker/Dockerfile,RUN,7,"['echo building branch ${GIT_BRANCH}', 'apt-get update && apt-get install -y git', 'git clone --recursive https://github.com/hughperkins/tf-coriander -b ${GIT_BRANCH}', 'cd tf-coriander && git status && git log -n 3 &&     ./install_deps.sh', 'cd tf-coriander &&     LOCALRESOURCES="" --local_resources 4000,2,1.0"" ./build.sh', 'cd tf-coriander &&     . env3/bin/activate &&     pip install soft/tensorflowpkg/tensorflow-0.11.0rc0-py3-none-any.whl', ""cd tf-coriander &&     . env3/bin/activate &&     cd &&     python -c 'import tensorflow'""]"
hughperkins/tf-coriander,latest,/tensorflow/tools/docker/Dockerfile.gpu,FROM,1,['nvidia/cuda:7.5-cudnn5-devel']
hughperkins/tf-coriander,latest,/tensorflow/tools/docker/Dockerfile.gpu,MAINTAINER,1,['Craig Citro <craigcitro@google.com>']
hughperkins/tf-coriander,latest,/tensorflow/tools/docker/Dockerfile.gpu,RUN,4,"['apt-get update && apt-get install -y --no-install-recommends         build-essential         curl         libfreetype6-dev         libpng12-dev         libzmq3-dev         pkg-config         python         python-dev         rsync         software-properties-common         unzip         &&     apt-get clean &&     rm -rf /var/lib/apt/lists/*', 'curl -O https://bootstrap.pypa.io/get-pip.py &&     python get-pip.py &&     rm get-pip.py', 'pip --no-cache-dir install         ipykernel         jupyter         matplotlib         numpy         scipy         &&     python -m ipykernel.kernelspec', 'pip --no-cache-dir install     http://storage.googleapis.com/tensorflow/linux/gpu/tensorflow-${TENSORFLOW_VERSION}-cp27-none-linux_x86_64.whl']"
hughperkins/tf-coriander,latest,/tensorflow/tools/docker/Dockerfile.gpu,ENV,1,['TENSORFLOW_VERSION 0.11.0rc0']
hughperkins/tf-coriander,latest,/tensorflow/tools/docker/Dockerfile.gpu,COPY,3,"['jupyter_notebook_config.py /root/.jupyter/', 'notebooks /notebooks', 'run_jupyter.sh /']"
hughperkins/tf-coriander,latest,/tensorflow/tools/docker/Dockerfile.gpu,EXPOSE,2,"['6006', '8888']"
hughperkins/tf-coriander,latest,/tensorflow/tools/docker/Dockerfile.gpu,WORKDIR,1,"['""/notebooks""']"
hughperkins/tf-coriander,latest,/tensorflow/tools/docker/Dockerfile.gpu,CMD,1,"['[""/run_jupyter.sh""]']"
hughperkins/tf-coriander,latest,/tensorflow/tools/docker/Dockerfile.devel,FROM,1,['ubuntu:14.04']
hughperkins/tf-coriander,latest,/tensorflow/tools/docker/Dockerfile.devel,MAINTAINER,1,['Craig Citro <craigcitro@google.com>']
hughperkins/tf-coriander,latest,/tensorflow/tools/docker/Dockerfile.devel,RUN,9,"['apt-get update && apt-get install -y --no-install-recommends         build-essential         curl         git         libfreetype6-dev         libpng12-dev         libzmq3-dev         pkg-config         python-dev         rsync         software-properties-common         swig         unzip         zip         zlib1g-dev         &&     apt-get clean &&     rm -rf /var/lib/apt/lists/*', 'curl -fSsL -O https://bootstrap.pypa.io/get-pip.py &&     python get-pip.py &&     rm get-pip.py', 'pip --no-cache-dir install         ipykernel         jupyter         matplotlib         numpy         &&     python -m ipykernel.kernelspec', 'add-apt-repository -y ppa:openjdk-r/ppa &&     apt-get update &&     apt-get install -y --no-install-recommends openjdk-8-jdk openjdk-8-jre-headless &&     apt-get clean &&     rm -rf /var/lib/apt/lists/*', 'echo ""startup --batch"" >>/root/.bazelrc', 'echo ""build --spawn_strategy=standalone --genrule_strategy=standalone""     >>/root/.bazelrc', 'mkdir /bazel &&     cd /bazel &&     curl -fSsL -O https://github.com/bazelbuild/bazel/releases/download/$BAZEL_VERSION/bazel-$BAZEL_VERSION-installer-linux-x86_64.sh &&     curl -fSsL -o /bazel/LICENSE.txt https://raw.githubusercontent.com/bazelbuild/bazel/master/LICENSE.txt &&     chmod +x bazel-*.sh &&     ./bazel-$BAZEL_VERSION-installer-linux-x86_64.sh &&     cd / &&     rm -f /bazel/bazel-$BAZEL_VERSION-installer-linux-x86_64.sh', 'git clone --recursive https://github.com/tensorflow/tensorflow.git &&     cd tensorflow &&     git checkout r0.11', './configure &&     bazel build -c opt tensorflow/tools/pip_package:build_pip_package &&     bazel-bin/tensorflow/tools/pip_package/build_pip_package /tmp/pip &&     pip install --upgrade /tmp/pip/tensorflow-*.whl']"
hughperkins/tf-coriander,latest,/tensorflow/tools/docker/Dockerfile.devel,COPY,2,"['jupyter_notebook_config.py /root/.jupyter/', 'run_jupyter.sh /']"
hughperkins/tf-coriander,latest,/tensorflow/tools/docker/Dockerfile.devel,ENV,2,"['BAZELRC /root/.bazelrc', 'BAZEL_VERSION 0.3.1']"
hughperkins/tf-coriander,latest,/tensorflow/tools/docker/Dockerfile.devel,WORKDIR,3,"['/', '/tensorflow', '/root']"
hughperkins/tf-coriander,latest,/tensorflow/tools/docker/Dockerfile.devel,EXPOSE,2,"['6006', '8888']"
hughperkins/tf-coriander,latest,/tensorflow/tools/docker/Dockerfile.devel,CMD,1,"['[""/bin/bash""]']"
hughperkins/tf-coriander,latest,/tensorflow/tools/docker/Dockerfile,FROM,1,['ubuntu:14.04']
hughperkins/tf-coriander,latest,/tensorflow/tools/docker/Dockerfile,MAINTAINER,1,['Craig Citro <craigcitro@google.com>']
hughperkins/tf-coriander,latest,/tensorflow/tools/docker/Dockerfile,RUN,4,"['apt-get update && apt-get install -y --no-install-recommends         build-essential         curl         libfreetype6-dev         libpng12-dev         libzmq3-dev         pkg-config         python         python-dev         rsync         software-properties-common         unzip         &&     apt-get clean &&     rm -rf /var/lib/apt/lists/*', 'curl -O https://bootstrap.pypa.io/get-pip.py &&     python get-pip.py &&     rm get-pip.py', 'pip --no-cache-dir install         ipykernel         jupyter         matplotlib         numpy         scipy         &&     python -m ipykernel.kernelspec', 'pip --no-cache-dir install     http://storage.googleapis.com/tensorflow/linux/cpu/tensorflow-${TENSORFLOW_VERSION}-cp27-none-linux_x86_64.whl']"
hughperkins/tf-coriander,latest,/tensorflow/tools/docker/Dockerfile,ENV,1,['TENSORFLOW_VERSION 0.11.0rc0']
hughperkins/tf-coriander,latest,/tensorflow/tools/docker/Dockerfile,COPY,3,"['jupyter_notebook_config.py /root/.jupyter/', 'notebooks /notebooks', 'run_jupyter.sh /']"
hughperkins/tf-coriander,latest,/tensorflow/tools/docker/Dockerfile,EXPOSE,2,"['6006', '8888']"
hughperkins/tf-coriander,latest,/tensorflow/tools/docker/Dockerfile,WORKDIR,1,"['""/notebooks""']"
hughperkins/tf-coriander,latest,/tensorflow/tools/docker/Dockerfile,CMD,1,"['[""/run_jupyter.sh""]']"
hughperkins/tf-coriander,latest,/tensorflow/tools/docker/Dockerfile.devel-gpu,FROM,1,['nvidia/cuda:7.5-cudnn5-devel']
hughperkins/tf-coriander,latest,/tensorflow/tools/docker/Dockerfile.devel-gpu,MAINTAINER,1,['Craig Citro <craigcitro@google.com>']
hughperkins/tf-coriander,latest,/tensorflow/tools/docker/Dockerfile.devel-gpu,RUN,10,"['apt-get update && apt-get install -y --no-install-recommends         build-essential         curl         git         libfreetype6-dev         libpng12-dev         libzmq3-dev         pkg-config         python         python-dev         rsync         software-properties-common         swig         unzip         zip         zlib1g-dev         &&     apt-get clean &&     rm -rf /var/lib/apt/lists/*', 'curl -fSsL -O https://bootstrap.pypa.io/get-pip.py &&     python get-pip.py &&     rm get-pip.py', 'pip --no-cache-dir install         ipykernel         jupyter         matplotlib         numpy         &&     python -m ipykernel.kernelspec', 'add-apt-repository -y ppa:openjdk-r/ppa &&     apt-get update &&     apt-get install -y --no-install-recommends openjdk-8-jdk openjdk-8-jre-headless &&     apt-get clean &&     rm -rf /var/lib/apt/lists/*', 'echo ""startup --batch"" >>/root/.bazelrc', 'echo ""build --spawn_strategy=standalone --genrule_strategy=standalone""     >>/root/.bazelrc', 'mkdir /bazel &&     cd /bazel &&     curl -fSsL -O https://github.com/bazelbuild/bazel/releases/download/$BAZEL_VERSION/bazel-$BAZEL_VERSION-installer-linux-x86_64.sh &&     curl -fSsL -o /bazel/LICENSE.txt https://raw.githubusercontent.com/bazelbuild/bazel/master/LICENSE.txt &&     chmod +x bazel-*.sh &&     ./bazel-$BAZEL_VERSION-installer-linux-x86_64.sh &&     cd / &&     rm -f /bazel/bazel-$BAZEL_VERSION-installer-linux-x86_64.sh', 'git clone -b r0.11 --recursive --recurse-submodules https://github.com/tensorflow/tensorflow.git &&     cd tensorflow &&     git checkout r0.11', './configure &&     bazel build -c opt --config=cuda tensorflow/tools/pip_package:build_pip_package &&     bazel-bin/tensorflow/tools/pip_package/build_pip_package /tmp/pip &&     pip install --upgrade /tmp/pip/tensorflow-*.whl', '[""/bin/bash""]']"
hughperkins/tf-coriander,latest,/tensorflow/tools/docker/Dockerfile.devel-gpu,COPY,2,"['jupyter_notebook_config.py /root/.jupyter/', 'run_jupyter.sh /']"
hughperkins/tf-coriander,latest,/tensorflow/tools/docker/Dockerfile.devel-gpu,ENV,8,"['BAZELRC /root/.bazelrc', 'BAZEL_VERSION 0.3.1', 'CUDA_PATH /usr/local/cuda', 'CUDA_TOOLKIT_PATH /usr/local/cuda', 'CUDNN_INSTALL_PATH /usr/lib/x86_64-linux-gnu', 'LD_LIBRARY_PATH /usr/local/cuda/lib64:/usr/local/cuda/extras/CUPTI/lib64', 'TF_NEED_CUDA 1', 'TF_CUDA_COMPUTE_CAPABILITIES=3.0,3.5,5.2']"
hughperkins/tf-coriander,latest,/tensorflow/tools/docker/Dockerfile.devel-gpu,WORKDIR,3,"['/', '/tensorflow', '/root']"
hughperkins/tf-coriander,latest,/tensorflow/tools/docker/Dockerfile.devel-gpu,EXPOSE,2,"['6006', '8888']"
hughperkins/tf-coriander,latest,/tensorflow/tools/ci_build/Dockerfile.cmake,FROM,1,['ubuntu:16.04']
hughperkins/tf-coriander,latest,/tensorflow/tools/ci_build/Dockerfile.cmake,MAINTAINER,1,['Shanqing Cai <cais@google.com>']
hughperkins/tf-coriander,latest,/tensorflow/tools/ci_build/Dockerfile.cmake,COPY,1,['install/*.sh /install/']
hughperkins/tf-coriander,latest,/tensorflow/tools/ci_build/Dockerfile.cmake,RUN,6,"['/install/install_bootstrap_deb_packages.sh', '/install/install_deb_packages.sh', 'pip install --upgrade numpy', 'add-apt-repository -y ppa:ubuntu-lxc/lxd-stable', 'apt-get update', 'apt-get install -y golang']"
hughperkins/tf-coriander,latest,/tensorflow/tools/ci_build/Dockerfile.cpu,FROM,1,['ubuntu:14.04']
hughperkins/tf-coriander,latest,/tensorflow/tools/ci_build/Dockerfile.cpu,MAINTAINER,1,['Jan Prach <jendap@google.com>']
hughperkins/tf-coriander,latest,/tensorflow/tools/ci_build/Dockerfile.cpu,COPY,2,"['install/*.sh /install/', 'install/.bazelrc /root/.bazelrc']"
hughperkins/tf-coriander,latest,/tensorflow/tools/ci_build/Dockerfile.cpu,RUN,7,"['/install/install_bootstrap_deb_packages.sh', 'add-apt-repository -y ppa:openjdk-r/ppa &&     add-apt-repository -y ppa:mc3man/trusty-media &&     add-apt-repository -y ppa:george-edison55/cmake-3.x', '/install/install_deb_packages.sh', '/install/install_pip_packages.sh', '/install/install_bazel.sh', '/install/install_proto3.sh', '/install/install_buildifier.sh']"
hughperkins/tf-coriander,latest,/tensorflow/tools/ci_build/Dockerfile.cpu,ENV,1,['BAZELRC /root/.bazelrc']
hughperkins/tf-coriander,latest,/tensorflow/tools/ci_build/Dockerfile.debian.jessie.cpu,FROM,1,['debian:jessie']
hughperkins/tf-coriander,latest,/tensorflow/tools/ci_build/Dockerfile.debian.jessie.cpu,MAINTAINER,1,['Jan Prach <jendap@google.com>']
hughperkins/tf-coriander,latest,/tensorflow/tools/ci_build/Dockerfile.debian.jessie.cpu,COPY,2,"['install/*.sh /install/', 'install/.bazelrc /root/.bazelrc']"
hughperkins/tf-coriander,latest,/tensorflow/tools/ci_build/Dockerfile.debian.jessie.cpu,RUN,6,"['/install/install_bootstrap_deb_packages.sh', 'echo ""deb http://http.debian.net/debian jessie-backports main"" | tee -a /etc/apt/sources.list', '/install/install_deb_packages.sh', '/install/install_pip_packages.sh', '/install/install_bazel.sh', 'pip install --upgrade virtualenv']"
hughperkins/tf-coriander,latest,/tensorflow/tools/ci_build/Dockerfile.debian.jessie.cpu,ENV,1,['BAZELRC /root/.bazelrc']
hughperkins/tf-coriander,latest,/tensorflow/tools/ci_build/Dockerfile.gpu,FROM,1,['nvidia/cuda:7.5-cudnn5-devel']
hughperkins/tf-coriander,latest,/tensorflow/tools/ci_build/Dockerfile.gpu,MAINTAINER,1,['Jan Prach <jendap@google.com>']
hughperkins/tf-coriander,latest,/tensorflow/tools/ci_build/Dockerfile.gpu,COPY,2,"['install/*.sh /install/', 'install/.bazelrc /root/.bazelrc']"
hughperkins/tf-coriander,latest,/tensorflow/tools/ci_build/Dockerfile.gpu,RUN,5,"['/install/install_bootstrap_deb_packages.sh', 'add-apt-repository -y ppa:openjdk-r/ppa &&     add-apt-repository -y ppa:mc3man/trusty-media &&     add-apt-repository -y ppa:george-edison55/cmake-3.x', '/install/install_deb_packages.sh', '/install/install_pip_packages.sh', '/install/install_bazel.sh']"
hughperkins/tf-coriander,latest,/tensorflow/tools/ci_build/Dockerfile.gpu,ENV,7,"['BAZELRC /root/.bazelrc', 'CUDA_PATH /usr/local/cuda', 'LD_LIBRARY_PATH /usr/local/cuda/lib64:/usr/local/cuda/extras/CUPTI/lib64', 'CUDA_TOOLKIT_PATH /usr/local/cuda', 'CUDNN_INSTALL_PATH /usr/lib/x86_64-linux-gnu', 'TF_NEED_CUDA 1', 'TF_CUDA_COMPUTE_CAPABILITIES 3.0,5.2']"
hughperkins/tf-coriander,latest,/tensorflow/tools/ci_build/Dockerfile.hadoop,FROM,1,['ubuntu:14.04']
hughperkins/tf-coriander,latest,/tensorflow/tools/ci_build/Dockerfile.hadoop,MAINTAINER,1,['Jonathan Hseu <jhseu@google.com>']
hughperkins/tf-coriander,latest,/tensorflow/tools/ci_build/Dockerfile.hadoop,COPY,2,"['install/*.sh /install/', 'install/.bazelrc /root/.bazelrc']"
hughperkins/tf-coriander,latest,/tensorflow/tools/ci_build/Dockerfile.hadoop,RUN,8,"['/install/install_bootstrap_deb_packages.sh', 'add-apt-repository -y ppa:openjdk-r/ppa &&     add-apt-repository -y ppa:mc3man/trusty-media &&     add-apt-repository -y ppa:george-edison55/cmake-3.x', '/install/install_deb_packages.sh', '/install/install_pip_packages.sh', '/install/install_bazel.sh', '/install/install_proto3.sh', '/install/install_buildifier.sh', '/install/install_hadoop.sh']"
hughperkins/tf-coriander,latest,/tensorflow/tools/ci_build/Dockerfile.hadoop,ENV,1,['BAZELRC /root/.bazelrc']
hughperkins/tf-coriander,latest,/tensorflow/tools/ci_build/Dockerfile.android,FROM,1,['ubuntu:14.04']
hughperkins/tf-coriander,latest,/tensorflow/tools/ci_build/Dockerfile.android,MAINTAINER,1,['Jan Prach <jendap@google.com>']
hughperkins/tf-coriander,latest,/tensorflow/tools/ci_build/Dockerfile.android,COPY,2,"['install/*.sh /install/', 'install/.bazelrc /root/.bazelrc']"
hughperkins/tf-coriander,latest,/tensorflow/tools/ci_build/Dockerfile.android,RUN,9,"['/install/install_bootstrap_deb_packages.sh', 'add-apt-repository -y ppa:openjdk-r/ppa &&     add-apt-repository -y ppa:mc3man/trusty-media &&     add-apt-repository -y ppa:george-edison55/cmake-3.x', '/install/install_deb_packages.sh', '/install/install_bazel.sh', 'apt-get update && apt-get install -y         python-numpy         lib32stdc++6         lib32z1         &&     apt-get clean &&     rm -rf /var/lib/apt/lists/*', 'mkdir -p ${ANDROID_DEV_HOME}', 'cd ${ANDROID_DEV_HOME} &&     wget -q ${ANDROID_SDK_URL} &&     tar -xzf ${ANDROID_SDK_FILENAME} &&     rm ${ANDROID_SDK_FILENAME} &&     bash -c ""ln -s ${ANDROID_DEV_HOME}/android-sdk-* ${ANDROID_SDK_HOME}"" &&     echo y | android update sdk --no-ui -a --filter tools,platform-tools,android-${ANDROID_API_LEVEL},build-tools-${ANDROID_BUILD_TOOLS_VERSION}', 'cd ${ANDROID_DEV_HOME} &&     wget -q ${ANDROID_NDK_URL} &&     chmod +x ${ANDROID_NDK_FILENAME} &&     ./${ANDROID_NDK_FILENAME} -o${ANDROID_DEV_HOME} &&     rm ${ANDROID_NDK_FILENAME} &&     bash -c ""ln -s ${ANDROID_DEV_HOME}/android-ndk-* ${ANDROID_NDK_HOME}""', 'chmod -R go=u ${ANDROID_DEV_HOME}']"
hughperkins/tf-coriander,latest,/tensorflow/tools/ci_build/Dockerfile.android,ENV,12,"['BAZELRC /root/.bazelrc', 'ANDROID_DEV_HOME /android', 'ANDROID_SDK_FILENAME android-sdk_r24.4.1-linux.tgz', 'ANDROID_SDK_URL http://dl.google.com/android/${ANDROID_SDK_FILENAME}', 'ANDROID_API_LEVEL 23', 'ANDROID_BUILD_TOOLS_VERSION 23.0.2', 'ANDROID_SDK_HOME ${ANDROID_DEV_HOME}/sdk', 'PATH ${PATH}:${ANDROID_SDK_HOME}/tools:${ANDROID_SDK_HOME}/platform-tools', 'ANDROID_NDK_FILENAME android-ndk-r10e-linux-x86_64.bin', 'ANDROID_NDK_URL http://dl.google.com/android/ndk/${ANDROID_NDK_FILENAME}', 'ANDROID_NDK_HOME ${ANDROID_DEV_HOME}/ndk', 'PATH ${PATH}:${ANDROID_NDK_HOME}']"
hughperkins/tf-coriander,latest,/tensorflow/tools/ci_build/Dockerfile.tensorboard,FROM,1,['ubuntu:14.04']
hughperkins/tf-coriander,latest,/tensorflow/tools/ci_build/Dockerfile.tensorboard,MAINTAINER,1,['Jan Prach <jendap@google.com>']
hughperkins/tf-coriander,latest,/tensorflow/tools/ci_build/Dockerfile.tensorboard,COPY,1,['install/*.sh /install/']
hughperkins/tf-coriander,latest,/tensorflow/tools/ci_build/Dockerfile.tensorboard,RUN,4,"['/install/install_bootstrap_deb_packages.sh', 'add-apt-repository -y ppa:openjdk-r/ppa &&     add-apt-repository -y ppa:mc3man/trusty-media &&     add-apt-repository -y ppa:george-edison55/cmake-3.x', '/install/install_deb_packages.sh', '/install/install_tensorboard_packages.sh']"
hughperkins/tf-coriander,latest,/tensorflow/tools/dist_test/Dockerfile,FROM,1,['ubuntu:16.04']
hughperkins/tf-coriander,latest,/tensorflow/tools/dist_test/Dockerfile,MAINTAINER,1,['Shanqing Cai <cais@google.com>']
hughperkins/tf-coriander,latest,/tensorflow/tools/dist_test/Dockerfile,RUN,8,"['apt-get update', 'apt-get install -y --no-install-recommends     python     python-numpy     python-pip     &&     apt-get clean &&     rm -rf /var/lib/apt/lists/*', 'curl -O https://dl.google.com/dl/cloudsdk/channels/rapid/install_google_cloud_sdk.bash', 'chmod +x install_google_cloud_sdk.bash', './install_google_cloud_sdk.bash --disable-prompts --install-dir=/var/gcloud', '/var/gcloud/google-cloud-sdk/bin/gcloud components install kubectl', 'pip install /tensorflow-*.whl', 'rm -f /tensorflow-*.whl']"
hughperkins/tf-coriander,latest,/tensorflow/tools/dist_test/Dockerfile,COPY,3,"['tensorflow-*.whl /', 'scripts /var/tf-dist-test/scripts', 'python /var/tf-dist-test/python']"
hughperkins/tf-coriander,latest,/tensorflow/tools/dist_test/Dockerfile.local,FROM,1,['ubuntu:16.04']
hughperkins/tf-coriander,latest,/tensorflow/tools/dist_test/Dockerfile.local,MAINTAINER,1,['Shanqing Cai <cais@google.com>']
hughperkins/tf-coriander,latest,/tensorflow/tools/dist_test/Dockerfile.local,RUN,3,"['apt-get update && apt-get install -y         python-numpy         python-pip         &&     apt-get clean &&     rm -rf /var/lib/apt/lists/*', 'pip install /tensorflow-*.whl', 'rm -f /tensorflow-*.whl']"
hughperkins/tf-coriander,latest,/tensorflow/tools/dist_test/Dockerfile.local,COPY,1,['tensorflow-*.whl /']
hughperkins/tf-coriander,latest,/tensorflow/tools/dist_test/Dockerfile.local,ADD,1,['. /var/tf_dist_test']
hughperkins/tf-coriander,latest,/tensorflow/tools/dist_test/server/Dockerfile.test,FROM,1,['ubuntu:14.04']
hughperkins/tf-coriander,latest,/tensorflow/tools/dist_test/server/Dockerfile.test,MAINTAINER,1,['Shanqing Cai <cais@google.com>']
hughperkins/tf-coriander,latest,/tensorflow/tools/dist_test/server/Dockerfile.test,RUN,12,"['apt-get update && apt-get install -y         curl         dnsutils         python         python-dev         python-numpy         python-pip         &&     apt-get clean &&     rm -rf /var/lib/apt/lists/*', 'curl -O https://bootstrap.pypa.io/get-pip.py &&     python get-pip.py &&     rm get-pip.py', 'pip install --upgrade pandas==0.18.1', 'pip --no-cache-dir install     https://ci.tensorflow.org/view/Nightly/job/nightly-matrix-cpu/TF_BUILD_IS_OPT=OPT,TF_BUILD_IS_PIP=PIP,TF_BUILD_PYTHON_VERSION=PYTHON2,label=cpu-slave/lastSuccessfulBuild/artifact/pip_test/whl/tensorflow-0.11.0rc0-cp27-none-linux_x86_64.whl', 'mkdir -p /tmp/mnist-data', 'curl -o /tmp/mnist-data/train-labels-idx1-ubyte.gz     http://yann.lecun.com/exdb/mnist/train-labels-idx1-ubyte.gz', 'curl -o /tmp/mnist-data/train-images-idx3-ubyte.gz     http://yann.lecun.com/exdb/mnist/train-images-idx3-ubyte.gz', 'curl -o /tmp/mnist-data/t10k-labels-idx1-ubyte.gz     http://yann.lecun.com/exdb/mnist/t10k-labels-idx1-ubyte.gz', 'curl -o /tmp/mnist-data/t10k-images-idx3-ubyte.gz     http://yann.lecun.com/exdb/mnist/t10k-images-idx3-ubyte.gz', 'mkdir -p /tmp/census-data', 'curl -o /tmp/census-data/adult.data     https://archive.ics.uci.edu/ml/machine-learning-databases/adult/adult.data', 'curl -o /tmp/census-data/adult.test     https://archive.ics.uci.edu/ml/machine-learning-databases/adult/adult.test']"
hughperkins/tf-coriander,latest,/tensorflow/tools/dist_test/server/Dockerfile.test,ADD,1,['. /var/tf-k8s']
hughperkins/tf-coriander,latest,/tensorflow/tools/dist_test/server/Dockerfile.test,ENTRYPOINT,1,"['[""/var/tf-k8s/server/grpc_tensorflow_server_wrapper.sh""]']"
hughperkins/tf-coriander,latest,/tensorflow/tools/dist_test/server/Dockerfile,FROM,1,['ubuntu:14.04']
hughperkins/tf-coriander,latest,/tensorflow/tools/dist_test/server/Dockerfile,MAINTAINER,1,['Shanqing Cai <cais@google.com>']
hughperkins/tf-coriander,latest,/tensorflow/tools/dist_test/server/Dockerfile,RUN,3,"['apt-get update && apt-get install -y         curl         python-numpy         python-pip         &&     apt-get clean &&     rm -rf /var/lib/apt/lists/*', 'curl -O https://bootstrap.pypa.io/get-pip.py &&     python get-pip.py &&     rm get-pip.py', 'pip --no-cache-dir install     https://ci.tensorflow.org/view/Nightly/job/nightly-matrix-cpu/TF_BUILD_IS_OPT=OPT,TF_BUILD_IS_PIP=PIP,TF_BUILD_PYTHON_VERSION=PYTHON2,label=cpu-slave/lastSuccessfulBuild/artifact/pip_test/whl/tensorflow-0.11.0rc0-cp27-none-linux_x86_64.whl']"
hughperkins/tf-coriander,latest,/tensorflow/tools/dist_test/server/Dockerfile,ADD,1,['. /var/tf-k8s']
hughperkins/tf-coriander,latest,/tensorflow/tools/dist_test/server/Dockerfile,ENTRYPOINT,1,"['[""/var/tf-k8s/server/grpc_tensorflow_server.py""]']"
hughperkins/tf-coriander,latest,/tensorflow/tools/dist_test/local/Dockerfile,FROM,1,['jpetazzo/dind']
hughperkins/tf-coriander,latest,/tensorflow/tools/dist_test/local/Dockerfile,MAINTAINER,1,['Shanqing Cai <cais@google.com>']
hughperkins/tf-coriander,latest,/tensorflow/tools/dist_test/local/Dockerfile,RUN,6,"['apt-get update', 'apt-get install -y --no-install-recommends     build-essential     git     software-properties-common', 'wget https://storage.googleapis.com/golang/go1.4.2.linux-amd64.tar.gz', 'tar -C /usr/local -xzf go1.4.2.linux-amd64.tar.gz', 'rm -f go1.4.2.linux-amd64.tar.gz', ""echo 'PATH=/usr/local/go/bin:${PATH}' >> /root/.bashrc""]"
hughperkins/tf-coriander,latest,/tensorflow/tools/dist_test/local/Dockerfile,ADD,3,"['start_local_k8s_cluster.sh /var/k8s/start_local_k8s_cluster.sh', '../scripts /var/k8s/dist_test/scripts', '../python /var/k8s/dist_test/python']"
hughperkins/tf-coriander,latest,/tensorflow/tools/gcs_test/Dockerfile,FROM,1,['ubuntu:16.04']
hughperkins/tf-coriander,latest,/tensorflow/tools/gcs_test/Dockerfile,MAINTAINER,1,['Shanqing Cai <cais@google.com>']
hughperkins/tf-coriander,latest,/tensorflow/tools/gcs_test/Dockerfile,RUN,7,"['apt-get update', 'apt-get install -y --no-install-recommends     curl     libcurl4-openssl-dev     python     python-numpy     python-pip', 'curl -O https://dl.google.com/dl/cloudsdk/channels/rapid/install_google_cloud_sdk.bash', 'chmod +x install_google_cloud_sdk.bash', './install_google_cloud_sdk.bash --disable-prompts --install-dir=/var/gcloud', 'pip install    https://ci.tensorflow.org/view/Nightly/job/nightly-matrix-cpu/TF_BUILD_IS_OPT=OPT,TF_BUILD_IS_PIP=PIP,TF_BUILD_PYTHON_VERSION=PYTHON2,label=cpu-slave/lastSuccessfulBuild/artifact/pip_test/whl/tensorflow-0.11.0rc0-cp27-none-linux_x86_64.whl', 'mkdir -p /gcs-smoke/python']"
hughperkins/tf-coriander,latest,/tensorflow/tools/gcs_test/Dockerfile,COPY,2,"['gcs_smoke_wrapper.sh /gcs-smoke/', 'python/gcs_smoke.py /gcs-smoke/python/']"
hughperkins/tf-coriander,latest,/tensorflow/contrib/makefile/Dockerfile,FROM,1,['ubuntu:16.04']
hughperkins/tf-coriander,latest,/tensorflow/contrib/makefile/Dockerfile,MAINTAINER,1,['Gunhan Gulsoy <gunan@google.com>']
hughperkins/tf-coriander,latest,/tensorflow/contrib/makefile/Dockerfile,RUN,2,"['apt-get update', 'apt-get install -y     autoconf     automake     curl     g++     git     libtool     make     python     unzip     zlib1g-dev']"
hughperkins/tf-coriander,latest,/tensorflow/examples/udacity/Dockerfile,FROM,1,['gcr.io/tensorflow/tensorflow:latest']
hughperkins/tf-coriander,latest,/tensorflow/examples/udacity/Dockerfile,MAINTAINER,1,['Vincent Vanhoucke <vanhoucke@google.com>']
hughperkins/tf-coriander,latest,/tensorflow/examples/udacity/Dockerfile,RUN,2,"['pip install scikit-learn pyreadline Pillow', 'rm -rf /notebooks/*']"
hughperkins/tf-coriander,latest,/tensorflow/examples/udacity/Dockerfile,ADD,1,['*.ipynb /notebooks/']
hughperkins/tf-coriander,latest,/tensorflow/examples/udacity/Dockerfile,WORKDIR,1,['/notebooks']
hughperkins/tf-coriander,latest,/tensorflow/examples/udacity/Dockerfile,CMD,1,"['[""/run_jupyter.sh""]']"
eaplatanios/tensorflow_scala,latest,/.circleci/images/Dockerfile.linux-cpu-x86_64,FROM,1,['ubuntu:18.04']
eaplatanios/tensorflow_scala,latest,/.circleci/images/Dockerfile.linux-cpu-x86_64,COPY,1,['.circleci/images/install.sh /install.sh']
eaplatanios/tensorflow_scala,latest,/.circleci/images/Dockerfile.linux-cpu-x86_64,ARG,1,['DEBIAN_FRONTEND=noninteractive']
eaplatanios/tensorflow_scala,latest,/.circleci/images/Dockerfile.linux-cpu-x86_64,RUN,1,['/install.sh']
eaplatanios/tensorflow_scala,latest,/.circleci/images/Dockerfile.linux-cpu-x86_64,ENV,2,"['TF_NEED_MPI 1', 'JAVA_HOME=/usr/lib/jvm/java-11-openjdk-amd64']"
eaplatanios/tensorflow_scala,latest,/.circleci/images/Dockerfile.linux-gpu-x86_64,FROM,1,['nvidia/cuda:11.0.3-cudnn8-devel-ubuntu18.04']
eaplatanios/tensorflow_scala,latest,/.circleci/images/Dockerfile.linux-gpu-x86_64,RUN,3,"['cp -P /usr/include/cudnn.h /usr/local/cuda/include', 'cp -P /usr/lib/x86_64-linux-gnu/libcudnn* /usr/local/cuda/lib64', '/install.sh']"
eaplatanios/tensorflow_scala,latest,/.circleci/images/Dockerfile.linux-gpu-x86_64,COPY,1,['.circleci/images/install.sh /install.sh']
eaplatanios/tensorflow_scala,latest,/.circleci/images/Dockerfile.linux-gpu-x86_64,ARG,1,['DEBIAN_FRONTEND=noninteractive']
eaplatanios/tensorflow_scala,latest,/.circleci/images/Dockerfile.linux-gpu-x86_64,ENV,5,"['TF_NEED_MPI 1', 'LD_LIBRARY_PATH /usr/local/cuda/extras/CUPTI/lib64:$LD_LIBRARY_PATH', 'TF_NEED_CUDA 1', 'TF_CUDA_COMPUTE_CAPABILITIES 3.0', 'JAVA_HOME=/usr/lib/jvm/java-11-openjdk-amd64']"
nipreps/mriqc,latest,/Dockerfile,FROM,1,['ubuntu:focal-20210416']
nipreps/mriqc,latest,/Dockerfile,COPY,2,"['docker/files/neurodebian.gpg /usr/local/etc/neurodebian.gpg', '. /src/mriqc']"
nipreps/mriqc,latest,/Dockerfile,ENV,10,"['DEBIAN_FRONTEND=""noninteractive""     LANG=""C.UTF-8""     LC_ALL=""C.UTF-8""', 'FSLDIR=""/opt/fsl-5.0.11""     PATH=""/opt/fsl-5.0.11/bin:$PATH""     FSLOUTPUTTYPE=""NIFTI_GZ""     FSLMULTIFILEQUIT=""TRUE""     FSLTCLSH=""/opt/fsl-5.0.11/bin/fsltclsh""     FSLWISH=""/opt/fsl-5.0.11/bin/fslwish""     FSLLOCKDIR=""""     FSLMACHINELIST=""""     FSLREMOTECALL=""""     FSLGECUDAQ=""cuda.q""     POSSUMDIR=""/opt/fsl-5.0.11""     LD_LIBRARY_PATH=""/opt/fsl-5.0.11:$LD_LIBRARY_PATH""', 'AFNI_DIR=""/opt/afni""', 'PATH=""${AFNI_DIR}:$PATH""     AFNI_IMSAVE_WARNINGS=""NO""     AFNI_MODELPATH=""${AFNI_DIR}/models""     AFNI_TTATLAS_DATASET=""${AFNI_DIR}/atlases""     AFNI_PLUGINPATH=""${AFNI_DIR}/plugins""', 'ANTSPATH=""/opt/ants""', 'PATH=""$ANTSPATH:$PATH""', 'CONDA_PATH=""/opt/conda""', 'PATH=""${CONDA_PATH}/bin:$PATH""     CPATH=""${CONDA_PATH}/include:$CPATH""     PYTHONNOUSERSITE=1', 'MKL_NUM_THREADS=1     OMP_NUM_THREADS=1', 'HOME=""/home/mriqc""']"
nipreps/mriqc,latest,/Dockerfile,RUN,17,"['apt-get update &&     apt-get install -y --no-install-recommends                     apt-utils                     autoconf                     build-essential                     bzip2                     ca-certificates                     curl                     gnupg2                     libtool                     lsb-release                     pkg-config                     tcsh                     xfonts-base                     xvfb &&     apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*', 'curl -sSL ""http://neuro.debian.net/lists/$( lsb_release -c | cut -f2 ).us-ca.full"" >> /etc/apt/sources.list.d/neurodebian.sources.list &&     apt-key add /usr/local/etc/neurodebian.gpg &&     (apt-key adv --refresh-keys --keyserver hkp://ha.pool.sks-keyservers.net 0xA5D32F012649A5A9 || true)', 'apt-get update &&     apt-get install -y -q --no-install-recommends                     bc                     dc                     ed                     file                     gsl-bin                     libfontconfig1                     libfreetype6                     libgl1-mesa-dev                     libgl1-mesa-dri                     libglib2.0-0                     libglu1-mesa-dev                     libglw1-mesa                     libgomp1                     libice6                     libjpeg62                     libtool                     libxcursor1                     libxft2                     libxinerama1                     libxm4                     libxrandr2                     libxrender1                     libxt6                     netpbm                     wget     && apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*     && apt-get clean     && rm -rf /var/lib/apt/lists/*     && curl -sSL --retry 5 -o /tmp/multiarch.deb http://archive.ubuntu.com/ubuntu/pool/main/g/glibc/multiarch-support_2.27-3ubuntu1.2_amd64.deb     && dpkg -i /tmp/multiarch.deb     && rm /tmp/multiarch.deb     && curl -sSL --retry 5 -o /tmp/libxp6.deb http://mirrors.kernel.org/debian/pool/main/libx/libxp/libxp6_1.0.2-2_amd64.deb     && dpkg -i /tmp/libxp6.deb     && rm /tmp/libxp6.deb     && curl -sSL --retry 5 -o /tmp/libpng.deb http://snapshot.debian.org/archive/debian-security/20160113T213056Z/pool/updates/main/libp/libpng/libpng12-0_1.2.49-1%2Bdeb7u2_amd64.deb     && dpkg -i /tmp/libpng.deb     && rm /tmp/libpng.deb     && apt-get install -f     && apt-get clean     && rm -rf /var/lib/apt/lists/*     && gsl2_path=""$(find / -name \'libgsl.so.23\' || printf \'\')""     && if [ -n ""$gsl2_path"" ]; then          ln -sfv ""$gsl2_path"" ""$(dirname $gsl2_path)/libgsl.so.0"";     fi     && ldconfig', 'echo ""Downloading FSL ...""     && mkdir -p /opt/fsl-5.0.11     && curl -fsSL --retry 5 https://fsl.fmrib.ox.ac.uk/fsldownloads/fsl-5.0.11-centos6_64.tar.gz     | tar -xz -C /opt/fsl-5.0.11 --strip-components 1     && echo ""Installing FSL conda environment ...""     && bash /opt/fsl-5.0.11/etc/fslconf/fslpython_install.sh -f /opt/fsl-5.0.11', 'echo ""Downloading AFNI ...""     && mkdir -p ${AFNI_DIR}     && curl -fsSL --retry 5 https://afni.nimh.nih.gov/pub/dist/tgz/linux_openmp_64.tgz     | tar -xz -C ${AFNI_DIR} --strip-components 1', 'curl -sSL ""https://dl.dropbox.com/s/gwf51ykkk5bifyj/ants-Linux-centos6_x86_64-v2.3.4.tar.gz""     | tar -xzC $ANTSPATH --strip-components 1', 'curl -sSLO https://repo.continuum.io/miniconda/Miniconda3-py38_4.9.2-Linux-x86_64.sh &&     bash Miniconda3-py38_4.9.2-Linux-x86_64.sh -b -p ${CONDA_PATH} &&     rm Miniconda3-py38_4.9.2-Linux-x86_64.sh', 'conda install -y -c conda-forge -c anaconda                      python=3.8                      git                      git-annex                      graphviz                      libxml2                      libxslt                      matplotlib=3                      mkl                      mkl-service                      nodejs                      numpy=1.20                      pandas=1.2                      pandoc=2.11                      pip=21                      scikit-image=0.18                      scikit-learn=0.24                      scipy=1.6                      setuptools                      setuptools_scm                      toml                      traits=6.2                      zlib                      zstd;                      sync &&     chmod -R a+rX ${CONDA_PATH}; sync &&     chmod +x ${CONDA_PATH}/bin/*; sync &&     conda clean -y --all && sync &&     rm -rf ~/.conda ~/.cache/pip/*; sync', 'python -c ""from matplotlib import font_manager"" &&     sed -i \'s/\\(backend *: \\).*$/\\1Agg/g\' $( python -c ""import matplotlib; print(matplotlib.matplotlib_fname())"" )', 'npm install -g svgo@^2.3 bids-validator@1.8.0   && rm -rf ~/.npm ~/.empty /root/.npm', 'pip install --no-cache-dir templateflow', 'useradd -m -s /bin/bash -G users mriqc', 'ldconfig', 'python -c ""from templateflow import api as tfapi;                tfapi.get(\'MNI152NLin2009cAsym\', resolution=[1, 2], suffix=[\'T1w\', \'T2w\'], desc=None);                tfapi.get(\'MNI152NLin2009cAsym\', resolution=[1, 2], suffix=\'mask\',                         desc=[\'brain\', \'head\']);                tfapi.get(\'MNI152NLin2009cAsym\', resolution=1, suffix=\'dseg\', desc=\'carpet\');                tfapi.get(\'MNI152NLin2009cAsym\', resolution=1, suffix=\'probseg\',                         label=[\'CSF\', \'GM\', \'WM\']);               tfapi.get(\'MNI152NLin2009cAsym\', resolution=[1, 2], suffix=\'boldref\')""', 'echo ""${VERSION}"" > /src/mriqc/mriqc/VERSION &&     echo ""include mriqc/VERSION"" >> /src/mriqc/MANIFEST.in &&     pip install --no-cache-dir ""/src/mriqc[all]""', 'find $HOME -type d -exec chmod go=u {} + &&     find $HOME -type f -exec chmod go=u {} + &&     rm -rf $HOME/.npm $HOME/.conda $HOME/.empty', 'ldconfig']"
nipreps/mriqc,latest,/Dockerfile,WORKDIR,4,"['$ANTSPATH', '/home/mriqc', '/src/', '/tmp/']"
nipreps/mriqc,latest,/Dockerfile,ARG,3,"['VERSION', 'BUILD_DATE', 'VCS_REF']"
nipreps/mriqc,latest,/Dockerfile,ENTRYPOINT,1,"['[""/opt/conda/bin/mriqc""]']"
nipreps/mriqc,latest,/Dockerfile,LABEL,1,"['org.label-schema.build-date=$BUILD_DATE       org.label-schema.name=""MRIQC""       org.label-schema.description=""MRIQC - Automated Quality Control and visual reports for Quality Assesment of structural (T1w, T2w) and functional MRI of the brain""       org.label-schema.url=""http://mriqc.readthedocs.io""       org.label-schema.vcs-ref=$VCS_REF       org.label-schema.vcs-url=""https://github.com/nipreps/mriqc""       org.label-schema.version=$VERSION       org.label-schema.schema-version=""1.0""']"
MrPowerScripts/reddit-karma-farming-bot,latest,/Dockerfile,FROM,1,['python:3.8']
MrPowerScripts/reddit-karma-farming-bot,latest,/Dockerfile,COPY,1,['. /app']
MrPowerScripts/reddit-karma-farming-bot,latest,/Dockerfile,WORKDIR,1,['/app']
MrPowerScripts/reddit-karma-farming-bot,latest,/Dockerfile,RUN,4,"['apt update && apt install -yqq g++ gcc libc6-dev make pkg-config libffi-dev python3-dev git', 'pip3 install pipenv', 'pipenv install --system --deploy --ignore-pipfile', 'chmod +x /app/run_linux.sh']"
MrPowerScripts/reddit-karma-farming-bot,latest,/Dockerfile,ENTRYPOINT,1,['/app/run_linux.sh']
gnina/gnina,latest,/docker/compat/Dockerfile,FROM,1,['nvidia/cuda:10.0-cudnn7-devel-centos7']
gnina/gnina,latest,/docker/compat/Dockerfile,RUN,36,"['yum update -y', 'yum -y install openssl-devel bzip2-devel wget make xz git epel-release     bzip2 glibc-static dh-autoreconf curl-devel expat-devel gettext-devel     perl-devel zlib-devel hdf5-devel atlas-devel atlas-static     lapack-devel lapack-static   python3', 'yum -y install boost169-devel boost169-test boost169-regex     boost169-python3-devel hdf5-devel  dh-autoreconf hdf5-static boost169-static zlib-static openblas-static', 'yum -y install cuda-11-2', 'wget --no-verbose         http://ftpmirror.gnu.org/gcc/gcc-${gcc_version}/gcc-${gcc_version}.tar.bz2 &&     tar xf gcc-${gcc_version}.tar.bz2', 'wget --no-verbose         https://gmplib.org/download/gmp/gmp-6.1.0.tar.xz &&     tar xf gmp-6.1.0.tar.xz &&     mv gmp-6.1.0 gcc-${gcc_version}/gmp', 'wget --no-verbose         ftp://ftp.gnu.org/gnu/mpc/mpc-1.0.3.tar.gz &&     tar xf mpc-1.0.3.tar.gz &&     mv mpc-1.0.3 gcc-${gcc_version}/mpc', 'wget --no-verbose \t\t\t\thttps://ftp.gnu.org/gnu/mpfr/mpfr-3.1.4.tar.xz &&     tar xf mpfr-3.1.4.tar.xz &&     mv mpfr-3.1.4 gcc-${gcc_version}/mpfr', 'mkdir gcc-${gcc_version}_build &&     cd gcc-${gcc_version}_build &&     ../gcc-${gcc_version}/configure         --prefix=/usr         --disable-multilib         --enable-languages=c,c++         --enable-libstdcxx-threads         --enable-libstdcxx-time         --enable-shared         --enable-__cxa_atexit         --disable-libunwind-exceptions         --disable-libada         --host x86_64-redhat-linux-gnu         --build x86_64-redhat-linux-gnu         --with-default-libstdcxx-abi=gcc4-compatible', 'cd gcc-${gcc_version}_build && make -j8', 'cd gcc-${gcc_version}_build && make install', 'echo ""/usr/local/lib64"" > usrLocalLib64.conf &&     mv usrLocalLib64.conf /etc/ld.so.conf.d/ &&     ldconfig', 'rm -rf ~/${gcc_release} ~/{gcc_release}_build', 'ln -s /usr/bin/gcc /usr/local/cuda/bin/gcc', 'ln -s /usr/bin/g++ /usr/local/cuda/bin/g++', 'wget https://github.com/Kitware/CMake/releases/download/v3.18.6/cmake-3.18.6-Linux-x86_64.tar.gz', 'tar xzf cmake-3.18.6-Linux-x86_64.tar.gz', 'cp cmake-3.18.6-Linux-x86_64/bin/* /usr/local/bin', 'cp -r cmake-3.18.6-Linux-x86_64/share/cmake-3.18 /usr/local/share/', 'wget https://gitlab.com/libeigen/eigen/-/archive/3.3.7/eigen-3.3.7.tar.gz', 'tar xzf eigen-3.3.7.tar.gz', 'cd eigen-3.3.7; mkdir build; cd build; cmake ..; make install', 'git clone https://github.com/openbabel/openbabel.git;     cd openbabel;     git checkout openbabel-3-1-1;     mkdir build; cd build;      cmake -DPTHREAD_LIBRARY=/lib64/libpthread.a  -DBUILD_SHARED=OFF -DPYTHON_BINDINGS=OFF  -DWITH_COORDGEN=0 -DWITH_MAEPARSER=0 -DRUN_SWIG=OFF -DCMAKE_CXX_FLAGS=""-std=c++14 -fPIC"" -DCMAKE_CXX_COMPILER=/usr/bin/g++ -DCMAKE_C_COMPILER=/usr/bin/gcc ..;      make -j8; make install', 'git clone https://github.com/git/git.git;     cd git; git checkout v2.25.4;     make prefix=/usr all; make prefix=/usr install', 'yum install -y python3-devel', 'python3 -m pip install --upgrade pip', 'python3 -m pip install numpy pytest pyquaternion -U', 'python3.6 -m pip install --upgrade pip', 'python3.6 -m pip install numpy pytest pyquaternion auditwheel twine', 'git clone https://github.com/gnina/libmolgrid.git;     cd libmolgrid;     mkdir build; cd build;     cmake -DBoost_INCLUDE_DIR=/usr/include/boost169/ -DBOOST_LIBRARYDIR=/usr/lib64/boost169/ ..;     make -j8; make install;     cmake -DBoost_INCLUDE_DIR=/usr/include/boost169/ -DBOOST_LIBRARYDIR=/usr/lib64/boost169/ -DBUILD_STATIC=ON -DBoost_USE_STATIC_LIBS=ON -DBUILD_SHARED=OFF ..;     make -j8 libmolgrid_static; cp lib64/libmolgrid.a /usr/local/lib/libmolgrid.a', 'git clone https://github.com/gflags/gflags.git;     cd gflags; git checkout v2.2.2;     mkdir build; cd build;     cmake ..; make -j8;     make install', 'git clone https://github.com/google/glog.git;     cd glog; git checkout v0.4.0;     mkdir build; cd build;     cmake ..  -DHAVE_PWD_H=0 ; make -j8;     make install', 'git clone https://github.com/protocolbuffers/protobuf.git;     cd protobuf; git checkout v3.6.1.3;     git submodule update --init --recursive;     ./autogen.sh; ./configure;     make -j8;     make install', 'git clone  https://github.com/erget/libaec.git;     cd libaec; git checkout v0.3.4;     mkdir build; cd build;     cmake -DBUILD_SHARED_LIBS=OFF ..; make -j8;     make install', 'git clone https://github.com/gnina/gnina.git;     cd gnina;     git checkout v1.0.1;      mkdir build; cd build;     cmake .. -DAtlas_CBLAS_LIBRARY=/usr/lib64/libopenblas.a  -DBUILD_SHARED_LIBS=OFF -DBoost_INCLUDE_DIR=/usr/include/boost169/     -DPYTHON_EXECUTABLE=/usr/bin/python3 -DBOOST_LIBRARYDIR=/usr/lib64/boost169/ -DHAVE_PYTHON=0 -DBUILD_python=OFF     -DLIBMOLGRID_LIBRARY=/usr/local/lib/libmolgrid.a -DCUDA_ARCH_NAME=All -DCUDA_TOOLKIT_ROOT_DIR=/usr/local/cuda-11;     make -j8 gnina;', 'cd gnina/build/gninasrc; /usr/bin/c++  -Wno-deprecated-declarations -Wno-unknown-pragmas -O3 -DNDEBUG   CMakeFiles/gnina.dir/main/main.cpp.o CMakeFiles/gnina.dir/version.cpp.o CMakeFiles/gnina.dir/lib/atom_constants.cpp.o CMakeFiles/gnina.dir/lib/bfgs.cu.o CMakeFiles/gnina.dir/lib/box.cpp.o CMakeFiles/gnina.dir/lib/builtinscoring.cpp.o CMakeFiles/gnina.dir/lib/cache.cpp.o CMakeFiles/gnina.dir/lib/cache_gpu.cpp.o CMakeFiles/gnina.dir/lib/cnn_scorer.cpp.o CMakeFiles/gnina.dir/lib/cnn_data.cpp.o CMakeFiles/gnina.dir/lib/coords.cpp.o CMakeFiles/gnina.dir/lib/custom_terms.cpp.o CMakeFiles/gnina.dir/lib/device_buffer.cpp.o CMakeFiles/gnina.dir/lib/everything.cpp.o CMakeFiles/gnina.dir/lib/flexinfo.cpp.o CMakeFiles/gnina.dir/lib/GninaConverter.cpp.o CMakeFiles/gnina.dir/lib/grid.cpp.o CMakeFiles/gnina.dir/lib/grid_gpu.cu.o CMakeFiles/gnina.dir/lib/model.cpp.o CMakeFiles/gnina.dir/lib/molgetter.cpp.o CMakeFiles/gnina.dir/lib/monte_carlo.cpp.o CMakeFiles/gnina.dir/lib/mutate.cpp.o CMakeFiles/gnina.dir/lib/my_pid.cpp.o CMakeFiles/gnina.dir/lib/naive_non_cache.cpp.o CMakeFiles/gnina.dir/lib/non_cache.cpp.o CMakeFiles/gnina.dir/lib/non_cache_cnn.cpp.o CMakeFiles/gnina.dir/lib/obmolopener.cpp.o CMakeFiles/gnina.dir/lib/parallel_mc.cpp.o CMakeFiles/gnina.dir/lib/parallel_progress.cpp.o CMakeFiles/gnina.dir/lib/parse_pdbqt.cpp.o CMakeFiles/gnina.dir/lib/pdb.cpp.o CMakeFiles/gnina.dir/lib/PDBQTUtilities.cpp.o CMakeFiles/gnina.dir/lib/quasi_newton.cpp.o CMakeFiles/gnina.dir/lib/quaternion.cu.o CMakeFiles/gnina.dir/lib/random.cpp.o CMakeFiles/gnina.dir/lib/result_info.cpp.o CMakeFiles/gnina.dir/lib/ssd.cpp.o CMakeFiles/gnina.dir/lib/szv_grid.cpp.o CMakeFiles/gnina.dir/lib/terms.cpp.o CMakeFiles/gnina.dir/lib/weighted_terms.cpp.o CMakeFiles/gnina.dir/lib/conf.cpp.o CMakeFiles/gnina.dir/lib/conf_gpu.cu.o CMakeFiles/gnina.dir/lib/gpucode.cu.o CMakeFiles/gnina.dir/lib/model.cu.o CMakeFiles/gnina.dir/lib/non_cache_gpu.cu.o CMakeFiles/gnina.dir/lib/precalculate_gpu.cu.o CMakeFiles/gnina.dir/lib/tree_gpu.cu.o CMakeFiles/gnina.dir/lib/user_opts.cpp.o CMakeFiles/gnina.dir/cmake_device_link.o  -o ../bin/gnina   -L/usr/local/cuda/targets/x86_64-linux/lib  -Wl,-rpath,/usr/lib64/boost169:/usr/local/lib:/usr/local/cuda/lib64:/usr/lib64/atlas:    -Wl,--whole-archive ../caffe/lib/libcaffe.a -Wl,--no-whole-archive    /usr/lib64/boost169/libboost_program_options.a   /usr/lib64/boost169/libboost_system.a   /usr/lib64/boost169/libboost_iostreams.a   /usr/lib64/boost169/libboost_timer.a   /usr/lib64/boost169/libboost_thread.a   /usr/lib64/boost169/libboost_serialization.a   /usr/lib64/boost169/libboost_filesystem.a   /usr/lib64/boost169/libboost_date_time.a   /usr/lib64/boost169/libboost_regex.a   /usr/lib64/boost169/libboost_unit_test_framework.a   /usr/lib64/boost169/libboost_chrono.a   /usr/lib64/boost169/libboost_atomic.a   /usr/local/lib/libopenbabel.a   /usr/local/lib/libmolgrid.a   ../caffe/lib/libcaffeproto.a   /usr/local/lib64/libglog.a   /usr/local/lib/libgflags.a   /usr/local/lib/libprotobuf.a   /usr/lib64/libdl.a   /usr/lib64/libhdf5_hl_cpp.a   /usr/lib64/libhdf5_hl.a    /usr/lib64/libhdf5_cpp.a   /usr/lib64/libhdf5.a   /usr/lib64/libz.a   /usr/local/cuda/lib64/libcurand_static.a    /usr/lib64/libcudnn_static.a   /usr/local/cuda/lib64/libcublas_static.a   /usr/local/cuda/lib64/libculibos.a   /usr/lib64/liblapack.a   /usr/lib64/libopenblas64.a    /usr/lib64/atlas/libatlas.a   /usr/local/lib/libsz.a   /usr/local/lib/libaec.a   /usr/local/cuda/lib64/libcudart_static.a     /usr/local/cuda/targets/x86_64-linux/lib/libcudadevrt.a    /usr/local/cuda/lib64/libcublasLt_static.a      -lm -lpthread -ldl -lrt']"
gnina/gnina,latest,/docker/compat/Dockerfile,WORKDIR,1,['/root']
gnina/gnina,latest,/docker/compat/Dockerfile,ENV,1,"['gcc_version ""6.2.0""']"
gnina/gnina,latest,/docker/ubuntu/Dockerfile,FROM,1,['nvidia/cuda:10.2-cudnn7-devel-ubuntu18.04']
gnina/gnina,latest,/docker/ubuntu/Dockerfile,WORKDIR,1,['/root']
gnina/gnina,latest,/docker/ubuntu/Dockerfile,RUN,4,"['apt update ; apt upgrade -y ; apt-get -y install build-essential git wget libboost-all-dev libeigen3-dev libgoogle-glog-dev libprotobuf-dev protobuf-compiler libhdf5-dev libatlas-base-dev python3-dev librdkit-dev python3-numpy python3-pip python3-pytest', 'wget https://github.com/Kitware/CMake/releases/download/v3.18.6/cmake-3.18.6-Linux-x86_64.tar.gz;     tar xzf cmake-3.18.6-Linux-x86_64.tar.gz;     cp cmake-3.18.6-Linux-x86_64/bin/* /usr/local/bin;     cp -r cmake-3.18.6-Linux-x86_64/share/cmake-3.18 /usr/local/share/', 'git clone https://github.com/openbabel/openbabel.git;     cd openbabel; git checkout openbabel-3-1-1; mkdir build; cd build;      cmake -DWITH_MAEPARSER=OFF -DWITH_COORDGEN=OFF ..;      make -j4; make install', 'git clone https://github.com/gnina/gnina.git;     cd gnina; mkdir build; cd build;     cmake .. ;    make -j4 ; make install']"
gnina/gnina,latest,/caffe/docker/gpu/Dockerfile,FROM,1,['nvidia/cuda:8.0-cudnn6-devel-ubuntu16.04']
gnina/gnina,latest,/caffe/docker/gpu/Dockerfile,LABEL,1,['maintainer caffe-maint@googlegroups.com']
gnina/gnina,latest,/caffe/docker/gpu/Dockerfile,RUN,3,"['apt-get update && apt-get install -y --no-install-recommends         build-essential         cmake         git         wget         libatlas-base-dev         libboost-all-dev         libgflags-dev         libgoogle-glog-dev         libhdf5-serial-dev         libleveldb-dev         liblmdb-dev         libopencv-dev         libprotobuf-dev         libsnappy-dev         protobuf-compiler         python-dev         python-numpy         python-pip         python-setuptools         python-scipy &&     rm -rf /var/lib/apt/lists/*', 'git clone -b ${CLONE_TAG} --depth 1 https://github.com/BVLC/caffe.git . &&     pip install --upgrade pip &&     cd python && for req in $(cat requirements.txt) pydot; do pip install $req; done && cd .. &&     git clone https://github.com/NVIDIA/nccl.git && cd nccl && make -j install && cd .. && rm -rf nccl &&     mkdir build && cd build &&     cmake -DUSE_CUDNN=1 -DUSE_NCCL=1 .. &&     make -j""$(nproc)""', 'echo ""$CAFFE_ROOT/build/lib"" >> /etc/ld.so.conf.d/caffe.conf && ldconfig']"
gnina/gnina,latest,/caffe/docker/gpu/Dockerfile,ENV,5,"['CAFFE_ROOT=/opt/caffe', 'CLONE_TAG=1.0', 'PYCAFFE_ROOT $CAFFE_ROOT/python', 'PYTHONPATH $PYCAFFE_ROOT:$PYTHONPATH', 'PATH $CAFFE_ROOT/build/tools:$PYCAFFE_ROOT:$PATH']"
gnina/gnina,latest,/caffe/docker/gpu/Dockerfile,WORKDIR,2,"['$CAFFE_ROOT', '/workspace']"
gnina/gnina,latest,/caffe/docker/cpu/Dockerfile,FROM,1,['ubuntu:16.04']
gnina/gnina,latest,/caffe/docker/cpu/Dockerfile,LABEL,1,['maintainer caffe-maint@googlegroups.com']
gnina/gnina,latest,/caffe/docker/cpu/Dockerfile,RUN,3,"['apt-get update && apt-get install -y --no-install-recommends         build-essential         cmake         git         wget         libatlas-base-dev         libboost-all-dev         libgflags-dev         libgoogle-glog-dev         libhdf5-serial-dev         libleveldb-dev         liblmdb-dev         libopencv-dev         libprotobuf-dev         libsnappy-dev         protobuf-compiler         python-dev         python-numpy         python-pip         python-setuptools         python-scipy &&     rm -rf /var/lib/apt/lists/*', 'git clone -b ${CLONE_TAG} --depth 1 https://github.com/BVLC/caffe.git . &&     pip install --upgrade pip &&     cd python && for req in $(cat requirements.txt) pydot; do pip install $req; done && cd .. &&     mkdir build && cd build &&     cmake -DCPU_ONLY=1 .. &&     make -j""$(nproc)""', 'echo ""$CAFFE_ROOT/build/lib"" >> /etc/ld.so.conf.d/caffe.conf && ldconfig']"
gnina/gnina,latest,/caffe/docker/cpu/Dockerfile,ENV,5,"['CAFFE_ROOT=/opt/caffe', 'CLONE_TAG=1.0', 'PYCAFFE_ROOT $CAFFE_ROOT/python', 'PYTHONPATH $PYCAFFE_ROOT:$PYTHONPATH', 'PATH $CAFFE_ROOT/build/tools:$PYCAFFE_ROOT:$PATH']"
gnina/gnina,latest,/caffe/docker/cpu/Dockerfile,WORKDIR,2,"['$CAFFE_ROOT', '/workspace']"
semi-technologies/weaviate,latest,/Dockerfile,FROM,4,"['golang:1.16-alpine AS build_base', 'build_base AS server_builder', 'build_base AS telemetry_mock_api', 'alpine AS weaviate']"
semi-technologies/weaviate,latest,/Dockerfile,RUN,4,"['apk add bash ca-certificates git gcc g++ libc-dev', 'go mod download', 'GOOS=linux GOARCH=$TARGETARCH go build  -ldflags \'-w -extldflags ""-static""\' -o /weaviate-server ./cmd/weaviate-server', 'mkdir ./modules']"
semi-technologies/weaviate,latest,/Dockerfile,WORKDIR,1,['/go/src/github.com/semi-technologies/weaviate']
semi-technologies/weaviate,latest,/Dockerfile,ENV,1,['GO111MODULE=on']
semi-technologies/weaviate,latest,/Dockerfile,COPY,6,"['go.mod .', 'go.sum .', '. .', '. .', '--from=server_builder /weaviate-server /bin/weaviate', '--from=build_base /etc/ssl/certs /etc/ssl/certs']"
semi-technologies/weaviate,latest,/Dockerfile,ARG,1,['TARGETARCH']
semi-technologies/weaviate,latest,/Dockerfile,ENTRYPOINT,2,"['[""./tools/dev/telemetry_mock_api.sh""]', '[""/bin/weaviate""]']"
semi-technologies/weaviate,latest,/Dockerfile,CMD,1,"['[ ""--host"", ""0.0.0.0"", ""--port"", ""8080"", ""--scheme"", ""http""]']"
jeff1evesque/machine-learning,latest,/frontend.dockerfile,FROM,1,['ml-default']
jeff1evesque/machine-learning,latest,/frontend.dockerfile,ENV,3,"['ROOT_PROJECT /var/machine-learning', 'ENVIRONMENT docker', 'ENVIRONMENT_DIR $ROOT_PROJECT/puppet/environment/$ENVIRONMENT']"
jeff1evesque/machine-learning,latest,/frontend.dockerfile,COPY,4,"['src /var/machine-learning/src', 'test /var/machine-learning/test', 'hiera /var/machine-learning/hiera', 'interface /var/machine-learning/interface']"
jeff1evesque/machine-learning,latest,/frontend.dockerfile,RUN,1,['/opt/puppetlabs/bin/puppet apply $ENVIRONMENT_DIR/modules/compiler/manifests/init.pp --modulepath=$ENVIRONMENT_DIR/modules_contrib:$ENVIRONMENT_DIR/modules --confdir=$ROOT_PROJECT/hiera/test']
jeff1evesque/machine-learning,latest,/frontend.dockerfile,WORKDIR,1,['/var/machine-learning/test/jest']
jeff1evesque/machine-learning,latest,/frontend.dockerfile,ENTRYPOINT,1,"['[""jest"", ""--config"", ""jest.config.js""]']"
jeff1evesque/machine-learning,latest,/dockerfile/browserify.dockerfile,FROM,1,['node:9']
jeff1evesque/machine-learning,latest,/dockerfile/browserify.dockerfile,ENV,1,['ROOT_PROJECT /var/machine-learning']
jeff1evesque/machine-learning,latest,/dockerfile/browserify.dockerfile,RUN,4,"['mkdir -p $ROOT_PROJECT/src/jsx $ROOT_PROJECT/interface/static/js', 'npm install', 'printf ""#!/bin/bash\\n\\nnpm run prebuild:dos2unix\\nnpm run build:browserify\\nnpm run watch:jsx\\n"" > $ROOT_PROJECT/src/jsx/entrypoint', 'chmod 710 $ROOT_PROJECT/src/jsx/entrypoint']"
jeff1evesque/machine-learning,latest,/dockerfile/browserify.dockerfile,COPY,1,['src/jsx $ROOT_PROJECT/src/jsx/']
jeff1evesque/machine-learning,latest,/dockerfile/browserify.dockerfile,WORKDIR,1,['$ROOT_PROJECT/src/jsx/']
jeff1evesque/machine-learning,latest,/dockerfile/browserify.dockerfile,ENTRYPOINT,1,"['[""/bin/bash"", ""-c"", ""./entrypoint""]']"
jeff1evesque/machine-learning,latest,/dockerfile/base.dockerfile,FROM,1,['ubuntu:16.04']
jeff1evesque/machine-learning,latest,/dockerfile/base.dockerfile,ENV,7,"['ENVIRONMENT docker', 'PUPPET /opt/puppetlabs/bin/puppet', 'ROOT_PROJECT /var/machine-learning', 'ROOT_PUPPET /etc/puppetlabs', 'MODULES $ROOT_PUPPET/code/modules', 'CONTRIB_MODULES $ROOT_PUPPET/code/modules_contrib', 'ENVPATH $ROOT_PUPPET/code/environment/$ENVIRONMENT']"
jeff1evesque/machine-learning,latest,/dockerfile/base.dockerfile,RUN,13,"['mkdir -p $ROOT_PROJECT/log $ROOT_PUPPET/code/environment/$ENVIRONMENT $ROOT_PUPPET/puppet/hiera $ROOT_PUPPET/code/modules_contrib', 'apt-get -y update', 'apt-get -y install git=1:1.9.1* wget=1.16*', 'wget https://apt.puppetlabs.com/puppetlabs-release-pc1-trusty.deb', 'dpkg -i puppetlabs-release-pc1-trusty.deb', 'apt-get -y update', 'apt-get -y install puppet-agent', 'apt-get -y install rubygems-integration=1.5', 'gem install semantic_puppet -v 0.1.0', 'gem install puppet_forge -v 2.2.5', 'gem install r10k -v 2.5.5', 'PUPPETFILE=$ENVPATH/Puppetfile PUPPETFILE_DIR=$CONTRIB_MODULES r10k puppetfile install', ""$PUPPET apply apply -e 'class { system: }' --modulepath=$CONTRIB_MODULES:$MODULES --confdir=$ROOT_PUPPET/puppet""]"
jeff1evesque/machine-learning,latest,/dockerfile/base.dockerfile,COPY,4,"['puppet/environment/$ENVIRONMENT/Puppetfile $ENVPATH', 'puppet/environment/$ENVIRONMENT/modules $ROOT_PUPPET/code/modules', 'hiera $ROOT_PUPPET/puppet/hiera', 'hiera.yaml $ROOT_PUPPET/puppet']"
jeff1evesque/machine-learning,latest,/dockerfile/sass.dockerfile,FROM,1,['node:9']
jeff1evesque/machine-learning,latest,/dockerfile/sass.dockerfile,ENV,1,['ROOT_PROJECT /var/machine-learning']
jeff1evesque/machine-learning,latest,/dockerfile/sass.dockerfile,RUN,4,"['mkdir -p $ROOT_PROJECT/src/scss $ROOT_PROJECT/interface/static/css', 'npm install', ""printf '#!/bin/bash\\n\\nnpm run build:css\\nnpm run watch:scss\\n' > $ROOT_PROJECT/src/entrypoint"", 'chmod 710 $ROOT_PROJECT/src/entrypoint']"
jeff1evesque/machine-learning,latest,/dockerfile/sass.dockerfile,COPY,2,"['src/scss/package.json $ROOT_PROJECT/src', 'src/scss $ROOT_PROJECT/src/scss']"
jeff1evesque/machine-learning,latest,/dockerfile/sass.dockerfile,WORKDIR,1,['$ROOT_PROJECT/src/']
jeff1evesque/machine-learning,latest,/dockerfile/sass.dockerfile,ENTRYPOINT,1,"['[""/bin/bash"", ""-c"", ""./entrypoint""]']"
jeff1evesque/machine-learning,latest,/dockerfile/nginx.dockerfile,FROM,1,['jeff1evesque/ml-base:0.7']
jeff1evesque/machine-learning,latest,/dockerfile/nginx.dockerfile,ENV,6,"['ENVIRONMENT docker', 'ROOT_PROJECT /var/machine-learning', 'PUPPET /opt/puppetlabs/bin/puppet', 'ROOT_PUPPET /etc/puppetlabs', 'MODULES $ROOT_PUPPET/code/modules', 'CONTRIB_MODULES $ROOT_PUPPET/code/modules_contrib']"
jeff1evesque/machine-learning,latest,/dockerfile/nginx.dockerfile,ARG,5,"['TYPE', 'VHOST', 'HOST_PORT', 'LISTEN_PORT', 'MEMBERS']"
jeff1evesque/machine-learning,latest,/dockerfile/nginx.dockerfile,COPY,3,"['hiera.yaml $ROOT_PUPPET/puppet/hiera.yaml', 'hiera/reverse-proxy/nginx-$TYPE.yaml $ROOT_PUPPET/puppet/hiera/reverse-proxy/nginx.yaml', 'puppet/environment/$ENVIRONMENT/modules/reverse_proxy $ROOT_PUPPET/code/modules/reverse_proxy']"
jeff1evesque/machine-learning,latest,/dockerfile/nginx.dockerfile,RUN,1,"['$PUPPET apply -e ""class { reverse_proxy:     run => \'false\', } "" --modulepath=$CONTRIB_MODULES:$MODULES --confdir=$ROOT_PUPPET/puppet']"
jeff1evesque/machine-learning,latest,/dockerfile/nginx.dockerfile,CMD,1,"['[""nginx"", ""-g"", ""daemon off;""]']"
jeff1evesque/machine-learning,latest,/dockerfile/redis.dockerfile,FROM,1,['jeff1evesque/ml-base:0.7']
jeff1evesque/machine-learning,latest,/dockerfile/redis.dockerfile,ENV,5,"['ENVIRONMENT docker', 'PUPPET /opt/puppetlabs/bin/puppet', 'ROOT_PUPPET /etc/puppetlabs', 'MODULES $ROOT_PUPPET/code/modules', 'CONTRIB_MODULES $ROOT_PUPPET/code/modules_contrib']"
jeff1evesque/machine-learning,latest,/dockerfile/redis.dockerfile,COPY,2,"['hiera $ROOT_PUPPET/puppet/hiera', 'puppet/environment/$ENVIRONMENT/modules/redis $ROOT_PUPPET/code/modules/redis']"
jeff1evesque/machine-learning,latest,/dockerfile/redis.dockerfile,RUN,1,"[""$PUPPET apply -e 'class { redis: run => false }' --modulepath=$CONTRIB_MODULES:$MODULES --confdir=$ROOT_PUPPET/puppet""]"
jeff1evesque/machine-learning,latest,/dockerfile/redis.dockerfile,ENTRYPOINT,1,"['[""/bin/bash"", ""-c"", ""redis-server""]']"
jeff1evesque/machine-learning,latest,/dockerfile/mariadb.dockerfile,FROM,1,['jeff1evesque/ml-base:0.7']
jeff1evesque/machine-learning,latest,/dockerfile/mariadb.dockerfile,ENV,1,['ENVIRONMENT=docker    PUPPET=/opt/puppetlabs/bin/puppet    ROOT_PUPPET=/etc/puppetlabs    MODULES=$ROOT_PUPPET/code/modules    CONTRIB_MODULES=$ROOT_PUPPET/code/modules_contrib']
jeff1evesque/machine-learning,latest,/dockerfile/mariadb.dockerfile,COPY,2,"['puppet/environment/$ENVIRONMENT/modules/mariadb $MODULES/mariadb', 'hiera $ROOT_PUPPET/puppet/hiera']"
jeff1evesque/machine-learning,latest,/dockerfile/mariadb.dockerfile,RUN,3,"[""apt-get update && $PUPPET apply -e 'class { mariadb: }'    --modulepath=$CONTRIB_MODULES:$MODULES    --confdir=$ROOT_PUPPET/puppet"", ""printf '#!/bin/bash\\n\\ncd $MODULES/mariadb/scripts\\nservice mysql start\\npython setup_tables.py $ROOT_PUPPET/puppet\\nservice mysql stop\\nmysqld\\n' > entrypoint"", 'chmod 710 entrypoint']"
jeff1evesque/machine-learning,latest,/dockerfile/mariadb.dockerfile,ENTRYPOINT,1,"['[""/bin/bash"", ""-c"", ""./entrypoint""]']"
jeff1evesque/machine-learning,latest,/dockerfile/sklearn.dockerfile,FROM,1,['jeff1evesque/ml-base:0.7']
jeff1evesque/machine-learning,latest,/dockerfile/sklearn.dockerfile,ENV,6,"['ENVIRONMENT docker', 'PUPPET /opt/puppetlabs/bin/puppet', 'ROOT_PROJECT /var/machine-learning', 'ROOT_PUPPET /etc/puppetlabs', 'MODULES $ROOT_PUPPET/code/modules', 'CONTRIB_MODULES $ROOT_PUPPET/code/modules_contrib']"
jeff1evesque/machine-learning,latest,/dockerfile/sklearn.dockerfile,COPY,2,"['hiera $ROOT_PROJECT/hiera', 'puppet/environment/$ENVIRONMENT/modules/sklearn $ROOT_PUPPET/code/modules/sklearn']"
jeff1evesque/machine-learning,latest,/dockerfile/sklearn.dockerfile,RUN,1,"[""$PUPPET apply -e 'class { sklearn: }' --modulepath=$CONTRIB_MODULES:$MODULES --confdir=$ROOT_PUPPET/puppet""]"
jeff1evesque/machine-learning,latest,/dockerfile/mongodb.dockerfile,FROM,1,['jeff1evesque/ml-base:0.7']
jeff1evesque/machine-learning,latest,/dockerfile/mongodb.dockerfile,ENV,5,"['ENVIRONMENT docker', 'PUPPET /opt/puppetlabs/bin/puppet', 'ROOT_PUPPET /etc/puppetlabs', 'MODULES $ROOT_PUPPET/code/modules', 'CONTRIB_MODULES $ROOT_PUPPET/code/modules_contrib']"
jeff1evesque/machine-learning,latest,/dockerfile/mongodb.dockerfile,COPY,2,"['hiera $ROOT_PUPPET/puppet/hiera', 'puppet/environment/$ENVIRONMENT/modules/mongodb $ROOT_PUPPET/code/modules/mongodb']"
jeff1evesque/machine-learning,latest,/dockerfile/mongodb.dockerfile,RUN,3,"['$PUPPET apply -e \'class { mongodb:     run                    => true,     bindIp                 => ""0.0.0.0"",     security_authorization => false }\' --modulepath=$CONTRIB_MODULES:$MODULES --confdir=$ROOT_PUPPET/', 'printf \'#!/bin/bash\\n\\n/usr/bin/mongod --fork --config /etc/mongod.conf\\ncd /root/build && ./create-mongodb-users\\nsed -i ""/#[[:space:]]*security:/s/^#//g"" /etc/mongod.conf\\nsed -i ""/#[[:space:]]*authorization:[[:space:]]*enabled/s/^#//g"" /etc/mongod.conf\\n/usr/bin/mongod --shutdown\\n/usr/bin/mongod --config /etc/mongod.conf\\n\' > entrypoint', 'chmod 710 entrypoint']"
jeff1evesque/machine-learning,latest,/dockerfile/mongodb.dockerfile,ENTRYPOINT,1,"['[""/bin/bash"", ""-c"", ""./entrypoint""]']"
jeff1evesque/machine-learning,latest,/dockerfile/webserver.dockerfile,FROM,1,['jeff1evesque/ml-sklearn:0.7']
jeff1evesque/machine-learning,latest,/dockerfile/webserver.dockerfile,ENV,6,"['ENVIRONMENT docker', 'PUPPET /opt/puppetlabs/bin/puppet', 'ROOT_PROJECT /var/machine-learning', 'ROOT_PUPPET /etc/puppetlabs', 'MODULES $ROOT_PUPPET/code/modules', 'CONTRIB_MODULES $ROOT_PUPPET/code/modules_contrib']"
jeff1evesque/machine-learning,latest,/dockerfile/webserver.dockerfile,RUN,2,"['mkdir -p $ROOT_PROJECT/interface $ROOT_PROJECT/hiera $ROOT_PUPPET/brain $ROOT_PUPPET/test', 'apt-get update && $PUPPET apply -e ""class { webserver:     run      => false,     platform => \'development\', } "" --modulepath=$CONTRIB_MODULES:$MODULES --confdir=$ROOT_PUPPET/puppet']"
jeff1evesque/machine-learning,latest,/dockerfile/webserver.dockerfile,COPY,8,"['app.py factory.py __init__.py $ROOT_PROJECT/', 'log $ROOT_PROJECT/log', 'interface $ROOT_PROJECT/interface', 'hiera $ROOT_PROJECT/hiera', 'brain $ROOT_PROJECT/brain', 'test/backend $ROOT_PROJECT/test/backend', 'test/live_server $ROOT_PROJECT/test/live_server', 'puppet/environment/$ENVIRONMENT/modules/webserver $ROOT_PUPPET/code/modules/webserver']"
jeff1evesque/machine-learning,latest,/dockerfile/webserver.dockerfile,WORKDIR,1,['$ROOT_PROJECT']
jeff1evesque/machine-learning,latest,/dockerfile/webserver.dockerfile,ENTRYPOINT,1,"['[""/bin/bash"", ""./entrypoint""]']"
blue-oil/blueoil,latest,/docker/Dockerfile,FROM,3,"['nvidia/cuda:10.0-cudnn7-devel-ubuntu18.04 AS base', 'base AS blueoil-base', 'blueoil-base AS blueoil-dev']"
blue-oil/blueoil,latest,/docker/Dockerfile,LABEL,1,"['maintainer=""admin@blueoil.org""']"
blue-oil/blueoil,latest,/docker/Dockerfile,EXPOSE,1,['6006']
blue-oil/blueoil,latest,/docker/Dockerfile,ENV,3,"['LD_LIBRARY_PATH=/usr/local/cuda/extras/CUPTI/lib64:${LD_LIBRARY_PATH}     CUDA_HOME=/usr/local/cuda-10.0     DEBIAN_FRONTEND=noninteractive', 'LANG=en_US.UTF-8     LANGUAGE=en_US:en     LC_ALL=en_US.UTF-8', 'HOROVOD_GPU_ALLREDUCE=NCCL     HOROVOD_WITH_TENSORFLOW=1']"
blue-oil/blueoil,latest,/docker/Dockerfile,RUN,14,"['apt-get update && apt-get install -y     cmake     fonts-dejavu     locales    python3     python3-dev     python3-pip     python3-wheel     python3-pil     libjpeg8-dev     libpng-dev     zlib1g-dev     liblapack-dev     git     make     build-essential     wget     g++-8     g++-8-aarch64-linux-gnu     g++-8-arm-linux-gnueabihf     openssh-client     openssh-server     &&     apt-get clean &&     rm -rf /var/lib/apt/lists/*', 'update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 80 --slave /usr/bin/g++ g++ /usr/bin/g++-8 --slave /usr/bin/gcov gcov /usr/bin/gcov-8', 'ln -s /usr/bin/arm-linux-gnueabihf-g++-8 /usr/bin/arm-linux-gnueabihf-g++', 'ln -s /usr/bin/aarch64-linux-gnu-g++-8 /usr/bin/aarch64-linux-gnu-g++', 'mkdir -p /var/run/sshd', 'locale-gen en_US.UTF-8', 'mkdir /tmp/openmpi &&     cd /tmp/openmpi &&     wget https://www.open-mpi.org/software/ompi/v4.0/downloads/openmpi-4.0.1.tar.gz &&     tar zxf openmpi-4.0.1.tar.gz &&     cd openmpi-4.0.1 &&     ./configure --enable-orterun-prefix-by-default &&     make -j $(nproc) all &&     make install &&     ldconfig &&     rm -rf /tmp/openmpi', 'echo ""hwloc_base_binding_policy = none"" >> /usr/local/etc/openmpi-mca-params.conf &&     echo ""rmaps_base_mapping_policy = slot"" >> /usr/local/etc/openmpi-mca-params.conf &&     echo ""btl_tcp_if_exclude = lo,docker0"" >> /usr/local/etc/openmpi-mca-params.conf', 'pip3 install -U pip setuptools', 'ldconfig /usr/local/cuda-10.0/targets/x86_64-linux/lib/stubs &&     pip install -e .[gpu,test,docs] &&     pip install -e .[dist] &&     ldconfig', 'pip install pycocotools==2.0.0', 'mkdir /.horovod && chmod 777 /.horovod', 'chmod 777 /home/blueoil', 'chmod 777 /home/blueoil/tests']"
blue-oil/blueoil,latest,/docker/Dockerfile,WORKDIR,2,"['/home/blueoil', '/home/blueoil']"
blue-oil/blueoil,latest,/docker/Dockerfile,COPY,5,"['setup.* /home/blueoil/', 'blueoil /home/blueoil/blueoil', 'output_template /home/blueoil/output_template', 'tests /home/blueoil/tests', 'docker/docker-entrypoint.sh /']"
blue-oil/blueoil,latest,/docker/Dockerfile,ENTRYPOINT,1,"['[""/docker-entrypoint.sh""]']"
blue-oil/blueoil,latest,/docker/Dockerfile-inference,FROM,3,"['ubuntu:18.04 AS base', 'base AS blueoil-inference', 'blueoil-inference AS blueoil-inference-dev']"
blue-oil/blueoil,latest,/docker/Dockerfile-inference,LABEL,1,"['maintainer=""admin@blueoil.org""']"
blue-oil/blueoil,latest,/docker/Dockerfile-inference,RUN,5,"['apt-get update && apt-get install --no-install-recommends -y     locales    python3     python3-pip     libjpeg8-dev     zlib1g-dev     libfreetype6-dev     python3-opencv     &&     apt-get clean &&     rm -rf /var/lib/apt/lists/*', 'locale-gen en_US.UTF-8', 'pip3 install -U pip setuptools', 'pip install -r /home/blueoil/output_template/python/requirements.txt', 'chmod 777 /home/blueoil/output_template/python/']"
blue-oil/blueoil,latest,/docker/Dockerfile-inference,ENV,2,"['LANG=en_US.UTF-8     LANGUAGE=en_US:en     LC_ALL=en_US.UTF-8', 'PYTHONPATH=/home/blueoil/output_template/python']"
blue-oil/blueoil,latest,/docker/Dockerfile-inference,WORKDIR,2,"['/home/blueoil', '/home/blueoil/output_template/python']"
blue-oil/blueoil,latest,/docker/Dockerfile-inference,COPY,4,"['output_template/python/requirements.txt /home/blueoil/output_template/python/requirements.txt', 'blueoil /home/blueoil/blueoil', 'output_template /home/blueoil/output_template', 'tests tests']"
DigitalSlideArchive/HistomicsTK,latest,/Dockerfile,FROM,1,['nvidia/cuda:9.2-cudnn7-devel-ubuntu18.04']
DigitalSlideArchive/HistomicsTK,latest,/Dockerfile,LABEL,1,"['maintainer=""Kitware, Inc. <kitware@kitware.com>""']"
DigitalSlideArchive/HistomicsTK,latest,/Dockerfile,RUN,8,"['apt-get update &&     apt-get install --yes --no-install-recommends software-properties-common &&     add-apt-repository ppa:deadsnakes/ppa &&     apt-get update &&     apt-get install --yes --no-install-recommends     python3.8-dev     python3.8-distutils     curl     ca-certificates     git     wget     build-essential     libcupti-dev     memcached &&     apt-get autoremove &&     rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*', 'rm -f /usr/bin/python &&     rm -f /usr/bin/python3 &&     ln `which python3.8` /usr/bin/python &&     ln `which python3.8` /usr/bin/python3 &&     curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py &&     python get-pip.py &&     rm get-pip.py &&     ln `which pip3` /usr/bin/pip &&     python --version', 'mkdir -p $htk_path', ""pip install --no-cache-dir --upgrade pip setuptools &&     pip install --no-cache-dir 'bokeh>=0.12.14' &&     pip install --no-cache-dir 'numpy==1.17.5' &&     pip install --no-cache-dir --pre 'large-image[memcached]' --find-links https://girder.github.io/large_image_wheels &&     pip install --no-cache-dir girder-client &&     pip install --no-cache-dir --pre . --find-links https://girder.github.io/large_image_wheels &&     pip install --no-cache-dir virtualenv &&     virtualenv --system-site-packages /venv-gpu &&     chmod +x /venv-gpu/bin/activate &&     /venv-gpu/bin/pip install --no-cache-dir 'tensorflow-gpu>=1.3.0' &&     rm -rf /root/.cache/pip/*"", 'pip freeze &&     /venv-gpu/bin/pip freeze', 'python -c ""from matplotlib import pylab""', 'python -m slicer_cli_web.cli_list_entrypoint --list_cli', 'python -m slicer_cli_web.cli_list_entrypoint ColorDeconvolution --help']"
DigitalSlideArchive/HistomicsTK,latest,/Dockerfile,ENV,1,['htk_path=$PWD/HistomicsTK']
DigitalSlideArchive/HistomicsTK,latest,/Dockerfile,COPY,1,['. $htk_path/']
DigitalSlideArchive/HistomicsTK,latest,/Dockerfile,WORKDIR,2,"['$htk_path', '$htk_path/histomicstk/cli']"
DigitalSlideArchive/HistomicsTK,latest,/Dockerfile,ENTRYPOINT,1,"['[""/bin/bash"", ""docker-entrypoint.sh""]']"
DigitalSlideArchive/HistomicsTK,latest,/Dockerfile-wheels,FROM,1,['dockcross/manylinux2014-x64']
DigitalSlideArchive/HistomicsTK,latest,/Dockerfile-wheels,RUN,11,"['rm -rf /opt/python/cp27*', 'rm -rf /opt/python/cp34*', 'rm -rf /opt/python/cp35*', 'rm -rf /opt/python/cp310*', 'rm -rf /opt/python/pp*', 'for PYBIN in /opt/python/*/bin; do         ${PYBIN}/pip install --no-cache-dir --upgrade pip;     done', 'for PYBIN in /opt/python/*/bin; do       if [[ ""${PYBIN}"" =~ ""39"" ]]; then         export VERSIONS=""numpy==1.19.*"";       elif [[ ""${PYBIN}"" =~ ""38"" ]]; then         export VERSIONS=""numpy==1.17.*"";       elif [[ ""${PYBIN}"" =~ ""37"" ]]; then         export VERSIONS=""numpy==1.14.*"";       else         export VERSIONS=""numpy==1.12.*"";       fi &&       ${PYBIN}/pip install setuptools-scm \'Cython>=0.25.2\' \'scikit-build>=0.8.1\' \'cmake>=0.6.0\' ""${VERSIONS}"";     done', ""for PYBIN in /opt/python/*/bin; do         ${PYBIN}/pip install --no-cache-dir -f https://girder.github.io/large_image_wheels 'large_image[sources]' pyvips;     done"", 'mkdir -p $htk_path', 'for PYBIN in /opt/python/*/bin; do         ${PYBIN}/pip install -r ""$htk_path/requirements-dev.txt"";     done', 'cd $htk_path &&     strip --strip-unneeded /usr/local/lib{,64}/*.{so,a} || true &&     for PYBIN in /opt/python/*/bin; do         ${PYBIN}/pip install \'opencv-python-headless<4.3\' &&         ${PYBIN}/pip install --no-cache-dir . &&         git clean -fxd &&         ${PYBIN}/pip wheel . --no-deps -w /io/wheelhouse/ &&         rm -rf build;     done &&     for WHL in /io/wheelhouse/histomicstk*.whl; do       auditwheel repair ""${WHL}"" -w /io/wheelhouse/;     done &&     ls -l /io/wheelhouse &&     mkdir /io/wheels &&     cp /io/wheelhouse/histomicstk*many*2014* /io/wheels/.']"
DigitalSlideArchive/HistomicsTK,latest,/Dockerfile-wheels,ENV,2,"['htk_path=/HistomicsTK', 'CIRCLE_BRANCH=$CIRCLE_BRANCH']"
DigitalSlideArchive/HistomicsTK,latest,/Dockerfile-wheels,COPY,1,['. $htk_path/']
DigitalSlideArchive/HistomicsTK,latest,/Dockerfile-wheels,ARG,1,['CIRCLE_BRANCH']
DigitalSlideArchive/HistomicsTK,latest,/tests/Dockerfile-gc-tests,FROM,1,['python:3.7-slim']
DigitalSlideArchive/HistomicsTK,latest,/tests/Dockerfile-gc-tests,LABEL,1,['HISTOMICSTK_GC_TEST=TRUE']
DigitalSlideArchive/HistomicsTK,latest,/tests/Dockerfile-gc-tests,ENV,2,"['PYTHONUNBUFFERED 1', 'PYTHONDONTWRITEBYTECODE 1']"
DigitalSlideArchive/HistomicsTK,latest,/tests/Dockerfile-gc-tests,RUN,2,"['pip install --no-cache-dir -U pip', ""pip install --pre --find-links https://girder.github.io/large_image_wheels     'celery<5'     histomicsui[analysis]     large-image-source-openslide     pooch     pytest""]"
DigitalSlideArchive/HistomicsTK,latest,/tests/Dockerfile-gc-tests,COPY,1,['. /tests']
DigitalSlideArchive/HistomicsTK,latest,/tests/Dockerfile-gc-tests,CMD,1,"[""bash -c 'python /tests/docker_setup.py && girder serve -d mongodb://mongodb:27017/girder --host 0.0.0.0'""]"
microsoft/nnfusion,latest,/maint/dockerfile/nnfusion_cuda-10.2.dockerfile,FROM,1,['nvidia/cuda:10.2-cudnn7-devel-ubuntu18.04']
microsoft/nnfusion,latest,/maint/dockerfile/nnfusion_cuda-10.2.dockerfile,RUN,7,"['apt update && apt install -y git', 'git clone https://github.com/microsoft/nnfusion.git /root/nnfusion --branch master --single-branch', 'bash /root/nnfusion/maint/script/install_dependency.sh', 'cd /root/nnfusion/ && mkdir build && cd build && cmake .. && make -j6 && make install', 'LD_LIBRARY_PATH=/usr/local/lib nnfusion /root/nnfusion/test/models/tensorflow/frozen_op_graph/frozen_abs_graph.pb', 'apt install -y python3 python3-pip', 'pip3 install numpy']"
microsoft/nnfusion,latest,/maint/dockerfile/nnfusion_ubuntu_16.04.dockerfile,FROM,1,['ubuntu:16.04']
microsoft/nnfusion,latest,/maint/dockerfile/nnfusion_ubuntu_16.04.dockerfile,RUN,5,"['apt update && apt install -y git', 'git clone https://github.com/microsoft/nnfusion.git /root/nnfusion --branch master --single-branch', 'bash /root/nnfusion/maint/script/install_dependency.sh', 'cd /root/nnfusion/ && mkdir build && cd build && cmake .. && make -j6 && make install', 'LD_LIBRARY_PATH=/usr/local/lib nnfusion /root/nnfusion/test/models/tensorflow/frozen_op_graph/frozen_abs_graph.pb']"
microsoft/nnfusion,latest,/maint/dockerfile/nnfusion_rocm-3.5.dockerfile,FROM,1,['rocm/dev-ubuntu-18.04:3.5']
microsoft/nnfusion,latest,/maint/dockerfile/nnfusion_rocm-3.5.dockerfile,RUN,13,"['rm /etc/apt/sources.list.d/rocm.list', 'apt update && apt install -y git', 'git clone https://github.com/microsoft/nnfusion.git /root/nnfusion --branch master --single-branch', 'bash /root/nnfusion/maint/script/install_dependency.sh', 'cd /root/nnfusion/ && mkdir build && cd build && cmake .. && make -j6 && make install', 'LD_LIBRARY_PATH=/usr/local/lib nnfusion /root/nnfusion/test/models/tensorflow/frozen_op_graph/frozen_abs_graph.pb', 'apt install -y python3 python3-pip', 'pip3 install numpy', 'chmod +x /usr/local/bin/templates/rocm_adapter/hipify-nnfusion', 'ln -s /opt/rocm/bin/hipcc /opt/rocm/bin/hcc', 'wget https://repo.radeon.com/rocm/apt/3.5/pool/main/r/rocblas/rocblas_2.22.0.2367-b2cceba_amd64.deb -P /tmp && dpkg -i /tmp/rocblas_2.22.0.2367-b2cceba_amd64.deb && rm /tmp/rocblas_2.22.0.2367-b2cceba_amd64.deb', 'wget https://repo.radeon.com/rocm/apt/3.5/pool/main/m/miopen-hip/miopen-hip_2.4.0.8035-rocm-rel-3.5-30-bd4a330_amd64.deb -P /tmp && dpkg -i /tmp/miopen-hip_2.4.0.8035-rocm-rel-3.5-30-bd4a330_amd64.deb && rm /tmp/miopen-hip_2.4.0.8035-rocm-rel-3.5-30-bd4a330_amd64.deb', 'apt install -y kmod']"
microsoft/nnfusion,latest,/maint/dockerfile/nnfusion_ubuntu_18.04.dockerfile,FROM,1,['ubuntu:18.04']
microsoft/nnfusion,latest,/maint/dockerfile/nnfusion_ubuntu_18.04.dockerfile,RUN,5,"['apt update && apt install -y git', 'git clone https://github.com/microsoft/nnfusion.git /root/nnfusion --branch master --single-branch', 'bash /root/nnfusion/maint/script/install_dependency.sh', 'cd /root/nnfusion/ && mkdir build && cd build && cmake .. && make -j6 && make install', 'LD_LIBRARY_PATH=/usr/local/lib nnfusion /root/nnfusion/test/models/tensorflow/frozen_op_graph/frozen_abs_graph.pb']"
microsoft/nnfusion,latest,/maint/dockerfile/nnfusion_ubuntu_20.04.dockerfile,FROM,1,['ubuntu:20.04']
microsoft/nnfusion,latest,/maint/dockerfile/nnfusion_ubuntu_20.04.dockerfile,RUN,5,"['apt update && apt install -y git', 'git clone https://github.com/microsoft/nnfusion.git /root/nnfusion --branch master --single-branch', 'DEBIAN_FRONTEND=""noninteractive"" bash /root/nnfusion/maint/script/install_dependency.sh', 'cd /root/nnfusion/ && mkdir build && cd build && cmake .. && make -j6 && make install', 'LD_LIBRARY_PATH=/usr/local/lib nnfusion /root/nnfusion/test/models/tensorflow/frozen_op_graph/frozen_abs_graph.pb']"
microsoft/nnfusion,latest,/maint/dockerfile/antares/nnfusion_cuda-10.2_antares.dockerfile,FROM,1,['nvidia/cuda:10.2-cudnn7-devel-ubuntu18.04']
microsoft/nnfusion,latest,/maint/dockerfile/antares/nnfusion_cuda-10.2_antares.dockerfile,RUN,21,"['apt update && apt install -y git', 'git clone https://github.com/microsoft/nnfusion.git /root/nnfusion --branch master --single-branch', 'bash /root/nnfusion/maint/script/install_dependency.sh', 'cd /root/nnfusion/ && mkdir build && cd build && cmake .. && make -j6 && make install', 'LD_LIBRARY_PATH=/usr/local/lib nnfusion /root/nnfusion/test/models/tensorflow/frozen_op_graph/frozen_abs_graph.pb', 'apt install -y python3 python3-pip', 'pip3 install numpy', 'rm -rf /nnfusion_rt', 'apt-get update && apt install -y --no-install-recommends git ca-certificates     python3-pip python3-wheel python3-setuptools python3-dev python3-pytest     vim less netcat-openbsd inetutils-ping curl patch iproute2     g++ libpci3 libnuma-dev make file openssh-server kmod gdb libopenmpi-dev openmpi-bin         autoconf automake autotools-dev libtool llvm-dev screen', '[ -e /usr/lib/x86_64-linux-gnu/libcuda.so.1 ] || ln -s /host/usr/lib/x86_64-linux-gnu/libcuda.so.1 /usr/lib/x86_64-linux-gnu', 'ln -sf libcudart.so /usr/local/cuda/targets/x86_64-linux/lib/libcudart_static.a', 'git clone https://github.com/microsoft/antares /antares', '/antares/engine/install_antares_host.sh && rm -rf /var/lib/apt/lists/* ~/.cache', 'echo """" >> /antares/Makefile', 'echo ""host-rest-server:"" >> /antares/Makefile', 'echo ""\\tbash -c \'trap ctrl_c INT; ctrl_c() { exit 1; }; while true; do BACKEND=\\$(BACKEND) HTTP_SERVICE=1 HTTP_PORT=\\$(HTTP_PORT) \\$(INNER_CMD); done\'"" >> /antares/Makefile', 'echo ""#!/bin/sh"" > /antares/persistant_service.sh', 'echo ""screen -dm bash -c \\""cd /antares && BACKEND=c-cuda make host-rest-server\\"""" >> /antares/persistant_service.sh', 'echo ""screen -dm bash -c \\""cd /antares && BACKEND=c-mcpu HTTP_PORT=8881 make host-rest-server\\"""" >> /antares/persistant_service.sh', 'echo ""exec bash"" >> /antares/persistant_service.sh', 'chmod +x /antares/persistant_service.sh']"
microsoft/nnfusion,latest,/maint/dockerfile/antares/nnfusion_cuda-10.2_antares.dockerfile,ENTRYPOINT,1,"['[""/antares/persistant_service.sh""]']"
microsoft/nnfusion,latest,/maint/dockerfile/antares/nnfusion_rocm-3.8_antares.dockerfile,FROM,1,['rocm/dev-ubuntu-18.04:3.8']
microsoft/nnfusion,latest,/maint/dockerfile/antares/nnfusion_rocm-3.8_antares.dockerfile,RUN,27,"['rm /etc/apt/sources.list.d/rocm.list', 'apt update && apt install -y git', 'git clone https://github.com/microsoft/nnfusion.git /root/nnfusion --branch master --single-branch', 'bash /root/nnfusion/maint/script/install_dependency.sh', 'cd /root/nnfusion/ && mkdir build && cd build && cmake .. && make -j6 && make install', 'LD_LIBRARY_PATH=/usr/local/lib nnfusion /root/nnfusion/test/models/tensorflow/frozen_op_graph/frozen_abs_graph.pb', 'apt install -y python3 python3-pip', 'pip3 install numpy', 'chmod +x /usr/local/bin/templates/rocm_adapter/hipify-nnfusion', 'ln -s /opt/rocm/bin/hipcc /opt/rocm/bin/hcc', 'wget https://repo.radeon.com/rocm/apt/3.5/pool/main/r/rocblas/rocblas_2.22.0.2367-b2cceba_amd64.deb -P /tmp && dpkg -i /tmp/rocblas_2.22.0.2367-b2cceba_amd64.deb && rm /tmp/rocblas_2.22.0.2367-b2cceba_amd64.deb', 'wget https://repo.radeon.com/rocm/apt/3.5/pool/main/m/miopen-hip/miopen-hip_2.4.0.8035-rocm-rel-3.5-30-bd4a330_amd64.deb -P /tmp && dpkg -i /tmp/miopen-hip_2.4.0.8035-rocm-rel-3.5-30-bd4a330_amd64.deb && rm /tmp/miopen-hip_2.4.0.8035-rocm-rel-3.5-30-bd4a330_amd64.deb', 'apt install -y kmod', 'rm -rf /nnfusion_rt', 'env > /etc/environmen', 'apt-get update && apt install -y --no-install-recommends git ca-certificates     python3-pip python3-wheel python3-setuptools python3-dev python3-pytest     vim less netcat-openbsd inetutils-ping curl patch iproute2     g++ libpci3 libnuma-dev make file openssh-server kmod gdb libopenmpi-dev openmpi-bin         autoconf automake autotools-dev libtool llvm-dev screen', 'curl -sL http://repo.radeon.com/rocm/apt/debian/rocm.gpg.key | apt-key add - &&     printf ""deb [arch=amd64] http://repo.radeon.com/rocm/apt/3.8/ xenial main"" | tee /etc/apt/sources.list.d/rocm_hip.list &&     apt update && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends     rocm-dev zlib1g-dev unzip librdmacm-dev rocblas hipsparse rccl rocfft rocrand miopen-hip && apt-get clean && rm -rf /var/lib/apt/lists/*', 'git clone https://github.com/microsoft/antares /antares', '/antares/engine/install_antares_host.sh && rm -rf /var/lib/apt/lists/* ~/.cache', 'echo """" >> /antares/Makefile', 'echo ""host-rest-server:"" >> /antares/Makefile', 'echo ""\\tbash -c \'trap ctrl_c INT; ctrl_c() { exit 1; }; while true; do BACKEND=\\$(BACKEND) HTTP_SERVICE=1 HTTP_PORT=\\$(HTTP_PORT) \\$(INNER_CMD); done\'"" >> /antares/Makefile', 'echo ""#!/bin/sh"" > /antares/persistant_service.sh', 'echo ""screen -dm bash -c \\""cd /antares && BACKEND=c-rocm make host-rest-server\\"""" >> /antares/persistant_service.sh', 'echo ""screen -dm bash -c \\""cd /antares && BACKEND=c-mcpu HTTP_PORT=8881 make host-rest-server\\"""" >> /antares/persistant_service.sh', 'echo ""exec bash"" >> /antares/persistant_service.sh', 'chmod +x /antares/persistant_service.sh']"
microsoft/nnfusion,latest,/maint/dockerfile/antares/nnfusion_rocm-3.8_antares.dockerfile,ENV,5,"['HIP_PLATFORM hcc', 'PATH $PATH:/opt/rocm/bin:/usr/local/nvidia/lib64/bin', 'HSA_USERPTR_FOR_PAGED_MEM=0', 'TF_ROCM_FUSION_ENABLE 1', 'HIP_IGNORE_HCC_VERSION=1']"
microsoft/nnfusion,latest,/maint/dockerfile/antares/nnfusion_rocm-3.8_antares.dockerfile,ENTRYPOINT,1,"['[""/antares/persistant_service.sh""]']"
zenml-io/zenml,latest,/docker/base-dev.Dockerfile,FROM,1,['ubuntu:18.04']
zenml-io/zenml,latest,/docker/base-dev.Dockerfile,WORKDIR,1,['/zenml']
zenml-io/zenml,latest,/docker/base-dev.Dockerfile,ENV,4,"['PYTHONFAULTHANDLER=1     PYTHONUNBUFFERED=1     PYTHONHASHSEED=random     PIP_NO_CACHE_DIR=off     PIP_DISABLE_PIP_VERSION_CHECK=on     POETRY_HOME=/root/.local', 'ZENML_DEBUG=true', 'ZENML_ANALYTICS_OPT_IN=false', 'PATH=""$POETRY_HOME/bin:$PATH""']"
zenml-io/zenml,latest,/docker/base-dev.Dockerfile,RUN,5,"['apt-get update &&   apt-get install --no-install-recommends -q -y software-properties-common &&   add-apt-repository ppa:deadsnakes/ppa &&   add-apt-repository ppa:maarten-fonville/protobuf &&   apt-get update &&   apt-get install --no-install-recommends -q -y   build-essential   ca-certificates   libsnappy-dev   protobuf-compiler   libprotobuf-dev   python3.7-dev   python3.7-venv   wget   unzip   git &&   add-apt-repository -r ppa:deadsnakes/ppa &&   add-apt-repository -r ppa:maarten-fonville/protobuf &&   update-alternatives --install /usr/bin/python python /usr/bin/python3.7 1 &&   update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.7 1 &&   update-alternatives --install /usr/bin/python-config python-config /usr/bin/python3.7-config 1 &&   apt-get autoclean &&   apt-get autoremove --purge &&   wget https://bootstrap.pypa.io/get-pip.py && python3 get-pip.py &&   pip install --no-cache-dir --upgrade --pre pip &&   wget https://raw.githubusercontent.com/python-poetry/poetry/master/install-poetry.py &&   python install-poetry.py', 'poetry config virtualenvs.create false', 'poetry install --no-root', 'echo \'alias zenml=""poetry run zenml""\' >> ~/.bashrc', 'poetry update && poetry install']"
zenml-io/zenml,latest,/docker/base-dev.Dockerfile,COPY,2,"['pyproject.toml /zenml', '. /zenml']"
zenml-io/zenml,latest,/docker/base.Dockerfile,FROM,1,['ubuntu:18.04']
zenml-io/zenml,latest,/docker/base.Dockerfile,ENV,1,['PYTHONFAULTHANDLER=1     PYTHONUNBUFFERED=1     PYTHONHASHSEED=random     PIP_NO_CACHE_DIR=off     PIP_DISABLE_PIP_VERSION_CHECK=on']
zenml-io/zenml,latest,/docker/base.Dockerfile,RUN,2,"['apt-get update &&   apt-get install --no-install-recommends -q -y software-properties-common &&   add-apt-repository ppa:deadsnakes/ppa &&   add-apt-repository ppa:maarten-fonville/protobuf &&   apt-get update &&   apt-get install --no-install-recommends -q -y   build-essential   ca-certificates   libsnappy-dev   protobuf-compiler   libprotobuf-dev   python3.7-dev   wget   unzip   git &&   add-apt-repository -r ppa:deadsnakes/ppa &&   add-apt-repository -r ppa:maarten-fonville/protobuf &&   update-alternatives --install /usr/bin/python python /usr/bin/python3.7 1 &&   update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.7 1 &&   update-alternatives --install /usr/bin/python-config python-config /usr/bin/python3.7-config 1 &&   apt-get autoclean &&   apt-get autoremove --purge &&   wget https://bootstrap.pypa.io/get-pip.py && python3 get-pip.py &&   pip install --no-cache-dir --upgrade --pre pip', 'pip install --no-cache-dir zenml${ZENML_VERSION:+==$ZENML_VERSION}']"
zenml-io/zenml,latest,/docker/base.Dockerfile,ARG,1,['ZENML_VERSION']
zenml-io/zenml,latest,/docker/cuda.Dockerfile,ARG,2,"['TENSORFLOW_VERSION=2.6.0', 'ZENML_VERSION']"
zenml-io/zenml,latest,/docker/cuda.Dockerfile,FROM,1,['tensorflow/tensorflow:${TENSORFLOW_VERSION}-gpu']
zenml-io/zenml,latest,/docker/cuda.Dockerfile,ENV,1,['PYTHONFAULTHANDLER=1     PYTHONUNBUFFERED=1     PYTHONHASHSEED=random     PIP_NO_CACHE_DIR=off     PIP_DISABLE_PIP_VERSION_CHECK=on']
zenml-io/zenml,latest,/docker/cuda.Dockerfile,RUN,2,"['apt-get update &&   apt-get install --no-install-recommends -q -y software-properties-common &&   add-apt-repository ppa:deadsnakes/ppa &&   add-apt-repository ppa:maarten-fonville/protobuf &&   apt-get update &&   apt-get install --no-install-recommends -q -y   build-essential   ca-certificates   libsnappy-dev   protobuf-compiler   libprotobuf-dev   python3.7-dev   wget   unzip   git &&   add-apt-repository -r ppa:deadsnakes/ppa &&   add-apt-repository -r ppa:maarten-fonville/protobuf &&   apt-get autoclean &&   apt-get autoremove --purge &&   wget https://bootstrap.pypa.io/get-pip.py && python3 get-pip.py &&   pip install --no-cache-dir --upgrade --pre pip', 'pip install --no-cache-dir zenml${ZENML_VERSION:+==$ZENML_VERSION}']"
zenml-io/zenml,latest,/docker/cuda-dev.Dockerfile,ARG,2,"['TENSORFLOW_VERSION=2.6.0', 'TENSORFLOW_VERSION']"
zenml-io/zenml,latest,/docker/cuda-dev.Dockerfile,FROM,1,['tensorflow/tensorflow:${TENSORFLOW_VERSION}-gpu']
zenml-io/zenml,latest,/docker/cuda-dev.Dockerfile,WORKDIR,1,['/zenml']
zenml-io/zenml,latest,/docker/cuda-dev.Dockerfile,ENV,5,"['PYTHONFAULTHANDLER=1     PYTHONUNBUFFERED=1     PYTHONHASHSEED=random     PIP_NO_CACHE_DIR=off     PIP_DISABLE_PIP_VERSION_CHECK=on', 'ZENML_DEBUG=true', 'ZENML_ANALYTICS_OPT_IN=false', 'POETRY_HOME=""/usr/local/poetry""', 'PATH=""$POETRY_HOME/bin:$PATH""']"
zenml-io/zenml,latest,/docker/cuda-dev.Dockerfile,RUN,5,"['apt-get update &&   apt-get install --no-install-recommends -q -y software-properties-common &&   add-apt-repository ppa:deadsnakes/ppa &&   add-apt-repository ppa:maarten-fonville/protobuf &&   apt-get update &&   apt-get install --no-install-recommends -q -y   build-essential   ca-certificates   libsnappy-dev   protobuf-compiler   libprotobuf-dev   python3.6-venv   wget   unzip   git &&   add-apt-repository -r ppa:deadsnakes/ppa &&   add-apt-repository -r ppa:maarten-fonville/protobuf &&   apt-get autoclean &&   apt-get autoremove --purge &&   wget https://bootstrap.pypa.io/get-pip.py && python3 get-pip.py &&   pip install --no-cache-dir --upgrade --pre pip &&   wget https://raw.githubusercontent.com/python-poetry/poetry/master/install-poetry.py &&   python3 install-poetry.py', 'poetry config virtualenvs.create false', 'poetry install --no-root', 'echo \'alias zenml=""poetry run zenml""\' >> ~/.bashrc', 'poetry update && poetry install']"
zenml-io/zenml,latest,/docker/cuda-dev.Dockerfile,COPY,2,"['pyproject.toml /zenml', '. /zenml']"
photonixapp/photonix,latest,/docker/Dockerfile.dev,FROM,1,['python:3.8.9-slim-buster']
photonixapp/photonix,latest,/docker/Dockerfile.dev,RUN,8,"['apt-get update &&     apt-get install -y --no-install-recommends         build-essential         cron         curl         dcraw         file         git         gnupg         libatlas-base-dev         libatlas3-base         libblas-dev         libblas3         libfreetype6         libfreetype6-dev         libgl1         libglib2.0-dev         libhdf5-dev         libheif-examples         libimage-exiftool-perl         libjpeg-dev         liblapack-dev         liblapack3         libpq-dev         libtiff5-dev         netcat         nginx-light         supervisor     &&         apt-get clean &&             rm -rf /var/lib/apt/lists/*                    /tmp/*                    /var/tmp/*', 'curl -sL https://deb.nodesource.com/setup_14.x | bash - &&     apt-get update &&     apt-get install -y nodejs &&          apt-get clean &&             rm -rf /var/lib/apt/lists/*                    /tmp/*                    /var/tmp/*', 'npm install --global --unsafe-perm yarn', 'pip install --upgrade pip', 'pip install --no-cache-dir pypi-uploader==1.1.0', 'if [ ""${PYPI_UPLOAD_USERNAME}"" = """" ] ;      then python /root/install_and_upload_python_packages.py ;      else python /root/install_and_upload_python_packages.py -u ${PYPI_UPLOAD_USERNAME} -p ${PYPI_UPLOAD_PASSWORD} ;     fi', 'cd /srv/ui && yarn install', 'chmod 0644 /etc/cron.d/*']"
photonixapp/photonix,latest,/docker/Dockerfile.dev,WORKDIR,1,['/srv']
photonixapp/photonix,latest,/docker/Dockerfile.dev,COPY,15,"['docker/pip.conf /etc/pip.conf', 'docker/.pypirc /root/.pypirc', 'requirements.txt /srv/requirements.txt', 'docker/install_and_upload_python_packages.py /root/install_and_upload_python_packages.py', 'ui/package.json /srv/ui/package.json', 'ui/yarn.lock /srv/ui/yarn.lock', 'photonix /srv/photonix', 'test.py /srv/test.py', 'manage.py /srv/manage.py', 'tests /srv/tests', 'ui/public /srv/ui/public', 'ui/src /srv/ui/src', 'system /srv/system', 'system/supervisord.conf /etc/supervisord.conf', 'system/cron.d /etc/cron.d/']"
photonixapp/photonix,latest,/docker/Dockerfile.dev,ENV,3,"['PYTHONUNBUFFERED=1', 'NODE_ENV=development', 'PYTHONPATH /srv']"
photonixapp/photonix,latest,/docker/Dockerfile.dev,ARG,2,"['PYPI_UPLOAD_USERNAME', 'PYPI_UPLOAD_PASSWORD']"
photonixapp/photonix,latest,/docker/Dockerfile.dev,CMD,1,['./system/run.sh']
photonixapp/photonix,latest,/docker/Dockerfile.dev,EXPOSE,1,['80']
photonixapp/photonix,latest,/docker/Dockerfile.prd,ARG,3,"['ARCH=', 'PYPI_UPLOAD_USERNAME', 'PYPI_UPLOAD_PASSWORD']"
photonixapp/photonix,latest,/docker/Dockerfile.prd,FROM,2,"['${ARCH}python:3.8.9-slim-buster as builder', '${ARCH}python:3.8.9-slim-buster']"
photonixapp/photonix,latest,/docker/Dockerfile.prd,RUN,13,"['apt-get update &&     apt-get install -y         build-essential         cmake         curl         gfortran         gnupg         libatlas-base-dev         libblas-dev         libblas3         libfreetype6         libfreetype6-dev         libjpeg-dev         liblapack-dev         liblapack3         libpq-dev         libssl-dev         libtiff5-dev     &&         apt-get clean &&             rm -rf /var/lib/apt/lists/*                    /tmp/*                    /var/tmp/*', 'curl -sL https://deb.nodesource.com/setup_14.x | bash - &&     apt-get update &&     apt-get install -y nodejs &&          apt-get clean &&             rm -rf /var/lib/apt/lists/*                    /tmp/*                    /var/tmp/*', 'npm install --global --unsafe-perm yarn', 'pip install --upgrade pip', 'pip install --no-cache-dir pypi-uploader==1.1.0', 'if [ ""${PYPI_UPLOAD_USERNAME}"" = """" ] ;      then python /root/install_and_upload_python_packages.py ;      else python /root/install_and_upload_python_packages.py -u ${PYPI_UPLOAD_USERNAME} -p ${PYPI_UPLOAD_PASSWORD} ;     fi', 'yarn install --no-cache --network-timeout 1000000', 'NODE_OPTIONS=--max-old-space-size=768 yarn build', 'find /usr/local/lib/python3.8 -type d -name  ""__pycache__"" -exec rm -r {} + &&     find /usr/local/lib/python3.8/site-packages -type d -name  ""tests"" -exec rm -r {} +', 'rm -rf     /usr/local/lib/python3.8/site-packages/tensorflow/include     /usr/local/lib/python3.8/site-packages/scipy     /usr/local/lib/python3.8/site-packages/django/contrib/gis     /usr/local/lib/python3.8/site-packages/django/contrib/humanize     /usr/local/lib/python3.8/site-packages/django/contrib/admindocs     /usr/local/lib/python3.8/site-packages/django/contrib/redirects     /usr/local/lib/python3.8/site-packages/django/contrib/flatpages     /usr/local/lib/python3.8/site-packages/django/contrib/sitemaps     /usr/local/lib/python3.8/site-packages/django/contrib/syndication     /usr/local/lib/python3.8/site-packages/matplotlib/backends     /usr/local/lib/python3.8/site-packages/matplotlib/tests     /usr/local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts     /usr/local/lib/python3.8/site-packages/matplotlib/mpl-data/sample_data     /usr/local/lib/python3.8/site-packages/matplotlib/mpl-data/images     /usr/local/lib/python3.8/site-packages/matplotlib/mpl-data/stylelib     /usr/local/lib/python3.8/site-packages/tensorboard     /usr/local/lib/python3.8/site-packages/tensorboard_plugin_wit', 'apt-get update &&     apt-get install -y --no-install-recommends         cron         dcraw         file         libatlas3-base         libfreetype6         libfreetype6-dev         libgl1         libglib2.0-dev         libhdf5-dev         libheif-examples         libimage-exiftool-perl         libpq-dev         libtiff5-dev         netcat         nginx-light         supervisor         xz-utils     &&         apt-get clean &&             rm -rf /var/lib/apt/lists/*                    /tmp/*                    /var/tmp/*', 'chmod 0644 /etc/cron.d/*', 'DJANGO_SECRET_KEY=test python photonix/manage.py collectstatic --noinput --link']"
photonixapp/photonix,latest,/docker/Dockerfile.prd,WORKDIR,3,"['/srv', '/srv/ui', '/srv']"
photonixapp/photonix,latest,/docker/Dockerfile.prd,COPY,19,"['docker/pip.conf /etc/pip.conf', 'docker/.pypirc /root/.pypirc', 'requirements.txt /srv/requirements.txt', 'docker/install_and_upload_python_packages.py /root/install_and_upload_python_packages.py', 'ui/package.json /srv/ui/package.json', 'ui/yarn.lock /srv/ui/yarn.lock', 'ui/public /srv/ui/public', 'ui/src /srv/ui/src', '--from=builder /usr/local/lib/python3.8/site-packages /usr/local/lib/python3.8/site-packages', '--from=builder /usr/local/bin /usr/local/bin', '--from=builder /srv/ui/build /srv/ui/build', 'photonix /srv/photonix', 'manage.py /srv/manage.py', 'test.py /srv/test.py', 'tests /srv/tests', 'ui/public /srv/ui/public', 'system /srv/system', 'system/supervisord.conf /etc/supervisord.conf', 'system/cron.d /etc/cron.d/']"
photonixapp/photonix,latest,/docker/Dockerfile.prd,ENV,4,"['PYTHONUNBUFFERED=1', 'NODE_ENV=production', 'PYTHONPATH /srv', 'TF_CPP_MIN_LOG_LEVEL 3']"
photonixapp/photonix,latest,/docker/Dockerfile.prd,CMD,1,['./system/run.sh']
photonixapp/photonix,latest,/docker/Dockerfile.prd,EXPOSE,1,['80']
aws/aws-neuron-sdk,latest,/neuron-guide/neuron-frameworks/tensorflow-neuron/tutorials/k8s_bert_demo/Dockerfile.tfserving_example,FROM,1,['ubuntu:16.04']
aws/aws-neuron-sdk,latest,/neuron-guide/neuron-frameworks/tensorflow-neuron/tutorials/k8s_bert_demo/Dockerfile.tfserving_example,RUN,6,"['apt-get update', 'apt-get install -y wget apt-transport-https ca-certificates awscli', 'echo ""deb https://apt.repos.neuron.amazonaws.com xenial main"" > /etc/apt/sources.list.d/neuron.list', 'wget -qO - https://apt.repos.neuron.amazonaws.com/GPG-PUB-KEY-AMAZON-AWS-NEURON.PUB | apt-key add -', 'apt-get update', 'apt-get install -y tensorflow-model-server-neuron']"
aws/aws-neuron-sdk,latest,/neuron-deploy/docker-example/Dockerfile.mxnet-serving,FROM,1,['amazonlinux:2']
aws/aws-neuron-sdk,latest,/neuron-deploy/docker-example/Dockerfile.mxnet-serving,ENV,2,"['PYTHONUNBUFFERED TRUE', 'TEMP=/home/model-server/tmp']"
aws/aws-neuron-sdk,latest,/neuron-deploy/docker-example/Dockerfile.mxnet-serving,RUN,12,"['yum install -y gcc-c++', 'yum install -y python3-devel', 'yum install -y java-1.8.0-openjdk', 'yum install -y curl', 'cd /tmp     && curl -O https://bootstrap.pypa.io/get-pip.py     && python3 get-pip.py', 'update-alternatives --install /usr/bin/python python /usr/bin/python3 1', 'update-alternatives --install /usr/local/bin/pip pip /usr/local/bin/pip3 1', 'pip install mxnet-neuron --extra-index-url=https://pip.repos.neuron.amazonaws.com', 'pip install multi-model-server', 'useradd -m model-server     && mkdir -p /home/model-server/tmp', 'mkdir -p /home/model-server/tmp/models/', 'chmod +x /usr/local/bin/dockerd-entrypoint.sh     && chown -R model-server /home/model-server']"
aws/aws-neuron-sdk,latest,/neuron-deploy/docker-example/Dockerfile.mxnet-serving,COPY,2,"['dockerd-entrypoint.sh /usr/local/bin/dockerd-entrypoint.sh', 'mxnet_model/resnet-50_compiled.mar  /home/model-server/tmp/models/']"
aws/aws-neuron-sdk,latest,/neuron-deploy/docker-example/Dockerfile.mxnet-serving,EXPOSE,1,['8080 8081']
aws/aws-neuron-sdk,latest,/neuron-deploy/docker-example/Dockerfile.mxnet-serving,USER,1,['model-server']
aws/aws-neuron-sdk,latest,/neuron-deploy/docker-example/Dockerfile.mxnet-serving,WORKDIR,1,['/home/model-server']
aws/aws-neuron-sdk,latest,/neuron-deploy/docker-example/Dockerfile.mxnet-serving,ENTRYPOINT,1,"['[""/usr/local/bin/dockerd-entrypoint.sh""]']"
aws/aws-neuron-sdk,latest,/neuron-deploy/docker-example/Dockerfile.mxnet-serving,CMD,1,"['[""serve""]']"
aws/aws-neuron-sdk,latest,/neuron-deploy/docker-example/Dockerfile.tf-serving,FROM,1,['amazonlinux:2']
aws/aws-neuron-sdk,latest,/neuron-deploy/docker-example/Dockerfile.tf-serving,EXPOSE,1,['8500 8501']
aws/aws-neuron-sdk,latest,/neuron-deploy/docker-example/Dockerfile.tf-serving,ENV,1,['MODEL_BASE_PATH=/models     MODEL_NAME=model']
aws/aws-neuron-sdk,latest,/neuron-deploy/docker-example/Dockerfile.tf-serving,RUN,5,"[""echo $'[neuron] \\nname=Neuron YUM Repository \\nbaseurl=https://yum.repos.neuron.amazonaws.com \\nenabled=1' > /etc/yum.repos.d/neuron.repo"", 'rpm --import https://yum.repos.neuron.amazonaws.com/GPG-PUB-KEY-AMAZON-AWS-NEURON.PUB', 'yum install -y tensorflow-model-server-neuron', 'mkdir -p /root/models/', 'ls -la /root/models/*']"
aws/aws-neuron-sdk,latest,/neuron-deploy/docker-example/Dockerfile.tf-serving,COPY,1,['tf_model/  /root/models/']
aws/aws-neuron-sdk,latest,/neuron-deploy/docker-example/Dockerfile.tf-serving,CMD,1,"['[""/bin/sh"", ""-c"", ""/usr/local/bin/tensorflow_model_server_neuron --port=8500 --rest_api_port=8501 --model_name=${MODEL_NAME} --model_base_path=/root/models/${MODEL_NAME}""]']"
aws/aws-neuron-sdk,latest,/neuron-deploy/docker-example/Dockerfile-libmode,FROM,1,['ubuntu:18.04']
aws/aws-neuron-sdk,latest,/neuron-deploy/docker-example/Dockerfile-libmode,LABEL,1,"['maintainer="" ""']"
aws/aws-neuron-sdk,latest,/neuron-deploy/docker-example/Dockerfile-libmode,RUN,5,"['apt-get update -y  && apt-get install -y --no-install-recommends     gnupg2     wget     python3-pip     python3-setuptools     && cd /usr/local/bin     && pip3 --no-cache-dir install --upgrade pip     && rm -rf /var/lib/apt/lists/*     && apt-get clean', 'echo ""deb https://apt.repos.neuron.amazonaws.com bionic main"" > /etc/apt/sources.list.d/neuron.list', 'wget -qO - https://apt.repos.neuron.amazonaws.com/GPG-PUB-KEY-AMAZON-AWS-NEURON.PUB | apt-key add -', 'apt-get update -y && apt-get install -y     aws-neuron-tools', 'pip3 install     torch-neuron     --extra-index-url=https://pip.repos.neuron.amazonaws.com']"
aws/aws-neuron-sdk,latest,/neuron-deploy/docker-example/Dockerfile-libmode,ENV,1,"['PATH=""/opt/bin/:/opt/aws/neuron/bin:${PATH}""']"
aws/aws-neuron-sdk,latest,/neuron-deploy/docker-example/Dockerfile-libmode,CMD,1,"['[""neuron-top""]']"
aws/aws-neuron-sdk,latest,/neuron-deploy/docker-example/Dockerfile.device-plugin,FROM,1,['amazonlinux:2']
aws/aws-neuron-sdk,latest,/neuron-deploy/docker-example/Dockerfile.device-plugin,ENV,3,"['AWS_MLA_VISIBLE_DEVICES=all', 'AWS_NEURON_VISIBLE_DEVICES=all', 'PATH=""/opt/aws/neuron/bin/k8s-neuron-device-plugin:${PATH}""']"
aws/aws-neuron-sdk,latest,/neuron-deploy/docker-example/Dockerfile.device-plugin,RUN,4,"[""echo $'[neuron] \\nname=Neuron YUM Repository \\nbaseurl=https://yum.repos.neuron.amazonaws.com \\nenabled=1' > /etc/yum.repos.d/neuron.repo"", 'rpm --import https://yum.repos.neuron.amazonaws.com/GPG-PUB-KEY-AMAZON-AWS-NEURON.PUB', 'yum install -y aws-neuron-k8-plugin', 'yum install -y tar gzip']"
aws/aws-neuron-sdk,latest,/neuron-deploy/docker-example/Dockerfile.device-plugin,CMD,1,['k8s-neuron-device-plugin']
aws/aws-neuron-sdk,latest,/neuron-deploy/docker-example/Dockerfile-tf-serving.rst,..,2,"['_tensorflow-model-server-neuron-dockerfile:', 'literalinclude:: Dockerfile.tf-serving']"
aws/aws-neuron-sdk,latest,/neuron-deploy/docker-example/Dockerfile-tf-serving.rst,TENSORFLOW-MODEL-SERVER-NEURON,1,['Dockerfile']
aws/aws-neuron-sdk,latest,/neuron-deploy/docker-example/Dockerfile-tf-serving.rst,=========================================,1,['']
aws/aws-neuron-sdk,latest,/neuron-deploy/docker-example/Dockerfile-tf-serving.rst,:LINENOS:,1,['']
aws/aws-neuron-sdk,latest,/neuron-deploy/docker-example/Dockerfile-libmode.rst,..,2,"['_libmode-dockerfile:', 'literalinclude:: Dockerfile-libmode']"
aws/aws-neuron-sdk,latest,/neuron-deploy/docker-example/Dockerfile-libmode.rst,DOCKERFILE,1,['for Application Container']
aws/aws-neuron-sdk,latest,/neuron-deploy/docker-example/Dockerfile-libmode.rst,====================================,1,['']
aws/aws-neuron-sdk,latest,/neuron-deploy/docker-example/Dockerfile-libmode.rst,:LINENOS:,1,['']
aws/aws-neuron-sdk,latest,/neuron-deploy/docker-example/v1/Dockerfile-torch-neuron.rst,..,2,"['_torch-neuron-dockerfile:', 'literalinclude:: Dockerfile.torch-neuron']"
aws/aws-neuron-sdk,latest,/neuron-deploy/docker-example/v1/Dockerfile-torch-neuron.rst,TORCH-NEURON,1,['Dockerfile']
aws/aws-neuron-sdk,latest,/neuron-deploy/docker-example/v1/Dockerfile-torch-neuron.rst,=======================,1,['']
aws/aws-neuron-sdk,latest,/neuron-deploy/docker-example/v1/Dockerfile-torch-neuron.rst,:LINENOS:,1,['']
aws/aws-neuron-sdk,latest,/neuron-deploy/docker-example/v1/Dockerfile-app-rt-same.rst,..,2,"['_app-rt-same-dockerfile:', 'literalinclude:: Dockerfile.torch-neuron']"
aws/aws-neuron-sdk,latest,/neuron-deploy/docker-example/v1/Dockerfile-app-rt-same.rst,DOCKERFILE,1,['with Application and Runtime in same Container']
aws/aws-neuron-sdk,latest,/neuron-deploy/docker-example/v1/Dockerfile-app-rt-same.rst,=========================================================,1,['']
aws/aws-neuron-sdk,latest,/neuron-deploy/docker-example/v1/Dockerfile-app-rt-same.rst,:LINENOS:,1,['']
aws/aws-neuron-sdk,latest,/neuron-deploy/docker-example/v1/Dockerfile-app-rt-diff.rst,..,2,"['_app-rt-diff-dockerfile:', 'literalinclude:: Dockerfile.app-rt-diff']"
aws/aws-neuron-sdk,latest,/neuron-deploy/docker-example/v1/Dockerfile-app-rt-diff.rst,DOCKERFILE,1,['with Application and Runtime in different Container']
aws/aws-neuron-sdk,latest,/neuron-deploy/docker-example/v1/Dockerfile-app-rt-diff.rst,==============================================================,1,['']
aws/aws-neuron-sdk,latest,/neuron-deploy/docker-example/v1/Dockerfile-app-rt-diff.rst,:LINENOS:,1,['']
aws/aws-neuron-sdk,latest,/neuron-deploy/docker-example/v1/Dockerfile.app-rt-diff,FROM,1,['ubuntu:18.04']
aws/aws-neuron-sdk,latest,/neuron-deploy/docker-example/v1/Dockerfile.app-rt-diff,LABEL,1,"['maintainer="" ""']"
aws/aws-neuron-sdk,latest,/neuron-deploy/docker-example/v1/Dockerfile.app-rt-diff,RUN,4,"['apt-get update -y  && apt-get install -y --no-install-recommends  wget  gnupg2  python3-pip  python3-setuptools  && cd /usr/local/bin  && pip3 --no-cache-dir install --upgrade pip  && rm -rf /var/lib/apt/lists/*  && apt-get clean', 'echo ""deb https://apt.repos.neuron.amazonaws.com bionic main"" > /etc/apt/sources.list.d/neuron.list', 'wget -qO - https://apt.repos.neuron.amazonaws.com/GPG-PUB-KEY-AMAZON-AWS-NEURON.PUB | apt-key add -', 'pip3 install     torch-neuron     --extra-index-url=https://pip.repos.neuron.amazonaws.com']"
aws/aws-neuron-sdk,latest,/neuron-deploy/docker-example/v1/Dockerfile.torch-neuron,FROM,1,['ubuntu:18.04']
aws/aws-neuron-sdk,latest,/neuron-deploy/docker-example/v1/Dockerfile.torch-neuron,LABEL,1,"['maintainer="" ""']"
aws/aws-neuron-sdk,latest,/neuron-deploy/docker-example/v1/Dockerfile.torch-neuron,RUN,6,"['apt-get update -y  && apt-get install -y --no-install-recommends     gnupg2     wget     python3-pip     python3-setuptools     libcap-dev     && cd /usr/local/bin     && pip3 --no-cache-dir install --upgrade pip     && rm -rf /var/lib/apt/lists/*     && apt-get clean', 'echo ""deb https://apt.repos.neuron.amazonaws.com bionic main"" > /etc/apt/sources.list.d/neuron.list', 'wget -qO - https://apt.repos.neuron.amazonaws.com/GPG-PUB-KEY-AMAZON-AWS-NEURON.PUB | apt-key add -', 'apt-get update -y && apt-get install -y     aws-neuron-runtime     aws-neuron-tools', 'pip3 install     torch-neuron     --extra-index-url=https://pip.repos.neuron.amazonaws.com', 'chmod +x /opt/bin/dockerd-entrypoint.sh']"
aws/aws-neuron-sdk,latest,/neuron-deploy/docker-example/v1/Dockerfile.torch-neuron,ENV,1,"['PATH=""/opt/bin/:/opt/aws/neuron/bin:${PATH}""']"
aws/aws-neuron-sdk,latest,/neuron-deploy/docker-example/v1/Dockerfile.torch-neuron,COPY,1,['dockerd-entrypoint.sh /opt/bin/dockerd-entrypoint.sh']
aws/aws-neuron-sdk,latest,/neuron-deploy/docker-example/v1/Dockerfile.torch-neuron,ENTRYPOINT,1,"['[""/opt/bin/dockerd-entrypoint.sh""]']"
aws/aws-neuron-sdk,latest,/neuron-deploy/docker-example/v1/Dockerfile.torch-neuron,CMD,1,"['[""neuron-top""]']"
aws/aws-neuron-sdk,latest,/neuron-deploy/docker-example/v1/Dockerfile.neuron-rtd,FROM,1,['amazonlinux:2']
aws/aws-neuron-sdk,latest,/neuron-deploy/docker-example/v1/Dockerfile.neuron-rtd,RUN,5,"[""echo $'[neuron] \\nname=Neuron YUM Repository \\nbaseurl=https://yum.repos.neuron.amazonaws.com \\nenabled=1' > /etc/yum.repos.d/neuron.repo"", 'rpm --import https://yum.repos.neuron.amazonaws.com/GPG-PUB-KEY-AMAZON-AWS-NEURON.PUB', 'yum install -y aws-neuron-tools', 'yum install -y aws-neuron-runtime', 'yum install -y tar gzip']"
aws/aws-neuron-sdk,latest,/neuron-deploy/docker-example/v1/Dockerfile.neuron-rtd,ENV,1,"['PATH=""/opt/aws/neuron/bin:${PATH}""']"
aws/aws-neuron-sdk,latest,/neuron-deploy/docker-example/v1/Dockerfile.neuron-rtd,CMD,1,['neuron-rtd -g unix:/sock/neuron.sock --log-console']
aws/aws-neuron-sdk,latest,/neuron-deploy/docker-example/v1/Dockerfile-neuron-rtd.rst,..,2,"['_neuron-runtime-dockerfile:', 'literalinclude:: Dockerfile.neuron-rtd']"
aws/aws-neuron-sdk,latest,/neuron-deploy/docker-example/v1/Dockerfile-neuron-rtd.rst,NEURON,1,['Runtime Dockerfile']
aws/aws-neuron-sdk,latest,/neuron-deploy/docker-example/v1/Dockerfile-neuron-rtd.rst,=========================,1,['']
aws/aws-neuron-sdk,latest,/neuron-deploy/docker-example/v1/Dockerfile-neuron-rtd.rst,:LINENOS:,1,['']
aws/aws-neuron-sdk,latest,/src/examples/tensorflow/k8s_bert_demo/Dockerfile.tfserving_example,FROM,1,['ubuntu:16.04']
aws/aws-neuron-sdk,latest,/src/examples/tensorflow/k8s_bert_demo/Dockerfile.tfserving_example,RUN,6,"['apt-get update', 'apt-get install -y wget apt-transport-https ca-certificates awscli', 'echo ""deb https://apt.repos.neuron.amazonaws.com xenial main"" > /etc/apt/sources.list.d/neuron.list', 'wget -qO - https://apt.repos.neuron.amazonaws.com/GPG-PUB-KEY-AMAZON-AWS-NEURON.PUB | apt-key add -', 'apt-get update', 'apt-get install -y tensorflow-model-server-neuron']"
aws/aws-neuron-sdk,latest,/src/examples/pytorch/byoc_sm_bert_tutorial/container/Dockerfile,FROM,1,['763104351884.dkr.ecr.us-east-1.amazonaws.com/pytorch-inference-neuron:1.7.1-neuron-py36-ubuntu18.04']
aws/aws-neuron-sdk,latest,/src/examples/pytorch/byoc_sm_bert_tutorial/container/Dockerfile,RUN,1,"['pip install ""transformers==4.7.0""']"
dpressel/mead-baseline,latest,/docker/Dockerfile.tf2-cuda10,FROM,1,['tensorflow/tensorflow:2.2.0-gpu']
dpressel/mead-baseline,latest,/docker/Dockerfile.tf2-cuda10,COPY,1,['. /usr/mead/mead-baseline']
dpressel/mead-baseline,latest,/docker/Dockerfile.tf2-cuda10,WORKDIR,1,['/usr/mead']
dpressel/mead-baseline,latest,/docker/Dockerfile.tf2-cuda10,RUN,3,"['cd mead-baseline/layers && pip install .', 'cd mead-baseline && pip install .[tf2,test,yaml]', 'python -m pip install tensorflow_addons &&     python -m pip install tensorflow-hub &&     python -m pip install Cython &&     python -m pip install fastBPE &&     python -m pip install mead-xpctl-client']"
dpressel/mead-baseline,latest,/docker/Dockerfile.tf2-cuda10,ENV,5,"['TIMING_LOG_LEVEL=DEBUG', 'LC_ALL=C.UTF-8', 'LANG=C.UTF-8', 'PATH=/usr/local/cuda/bin:$PATH', 'LD_LIBRARY_PATH=/usr/local/cuda/lib64:$LD_LIBRARY_PATH']"
dpressel/mead-baseline,latest,/docker/Dockerfile.tf2-cuda10,ENTRYPOINT,1,"['[""mead-train"", ""--config"", ""config/sst2.json""]']"
dpressel/mead-baseline,latest,/docker/Dockerfile.tf2-cuda11,FROM,1,['tensorflow/tensorflow:2.4.1-gpu']
dpressel/mead-baseline,latest,/docker/Dockerfile.tf2-cuda11,COPY,1,['. /usr/mead/mead-baseline']
dpressel/mead-baseline,latest,/docker/Dockerfile.tf2-cuda11,WORKDIR,1,['/usr/mead']
dpressel/mead-baseline,latest,/docker/Dockerfile.tf2-cuda11,RUN,3,"['cd mead-baseline/layers && pip install .', 'cd mead-baseline && pip install .[tf2,test,yaml]', 'python -m pip install tensorflow_addons &&     python -m pip install tensorflow-hub &&     python -m pip install Cython &&     python -m pip install fastBPE &&     python -m pip install mead-xpctl-client']"
dpressel/mead-baseline,latest,/docker/Dockerfile.tf2-cuda11,ENV,5,"['TIMING_LOG_LEVEL=DEBUG', 'LC_ALL=C.UTF-8', 'LANG=C.UTF-8', 'PATH=/usr/local/cuda/bin:$PATH', 'LD_LIBRARY_PATH=/usr/local/cuda/lib64:$LD_LIBRARY_PATH']"
dpressel/mead-baseline,latest,/docker/Dockerfile.tf2-cuda11,ENTRYPOINT,1,"['[""mead-train"", ""--config"", ""config/sst2.json""]']"
dpressel/mead-baseline,latest,/docker/Dockerfile.pytorch-cuda10,FROM,1,['meadml/cuda10.1-cudnn7-devel-ubuntu18.04-python3.6']
dpressel/mead-baseline,latest,/docker/Dockerfile.pytorch-cuda10,COPY,1,['. /usr/mead/mead-baseline']
dpressel/mead-baseline,latest,/docker/Dockerfile.pytorch-cuda10,WORKDIR,1,['/usr/mead']
dpressel/mead-baseline,latest,/docker/Dockerfile.pytorch-cuda10,RUN,3,"['cd mead-baseline/layers && pip install .', 'cd mead-baseline && pip install .[test,yaml]', 'python3.6 -m pip install torch==1.7.0+cu101 -f https://download.pytorch.org/whl/torch_stable.html &&     python3.6 -m pip install torchelastic &&     python3.6 -m pip install Cython &&     python3.6 -m pip install fastBPE &&     python3.6 -m pip install tfrecord &&     python3.6 -m pip install tensorboard &&     python3.6 -m pip install mead-xpctl-client']"
dpressel/mead-baseline,latest,/docker/Dockerfile.pytorch-cuda10,ENV,5,"['TIMING_LOG_LEVEL=DEBUG', 'LC_ALL=C.UTF-8', 'LANG=C.UTF-8', 'PATH=/usr/local/cuda/bin:$PATH', 'LD_LIBRARY_PATH=/usr/local/cuda/lib64:$LD_LIBRARY_PATH']"
dpressel/mead-baseline,latest,/docker/Dockerfile.pytorch-cuda10,ENTRYPOINT,1,"['[""mead-train"", ""--config"", ""config/conll.json""]']"
dpressel/mead-baseline,latest,/docker/Dockerfile.pytorch-cuda11,FROM,1,['meadml/cuda11.0-cudnn8-devel-ubuntu18.04-python3.8']
dpressel/mead-baseline,latest,/docker/Dockerfile.pytorch-cuda11,COPY,2,"['. /usr/mead/mead-baseline', '. /usr/mead']"
dpressel/mead-baseline,latest,/docker/Dockerfile.pytorch-cuda11,WORKDIR,1,['/usr/mead']
dpressel/mead-baseline,latest,/docker/Dockerfile.pytorch-cuda11,RUN,3,"['cd mead-baseline/layers && pip install .', 'cd mead-baseline && pip install .[test,yaml]', 'python3.8 -m pip --no-cache-dir install torch==1.7.1+cu110 -f https://download.pytorch.org/whl/torch_stable.html &&     python3.8 -m pip install torchelastic &&     python3.8 -m pip install Cython &&     python3.8 -m pip install fastBPE &&     python3.8 -m pip install tfrecord &&     python3.8 -m pip install tensorboard &&     python3.8 -m pip install mead-xpctl-client']"
dpressel/mead-baseline,latest,/docker/Dockerfile.pytorch-cuda11,ENV,5,"['TIMING_LOG_LEVEL=DEBUG', 'LC_ALL=C.UTF-8', 'LANG=C.UTF-8', 'PATH=/usr/local/cuda/bin:$PATH', 'LD_LIBRARY_PATH=/usr/local/cuda/lib64:$LD_LIBRARY_PATH']"
dpressel/mead-baseline,latest,/docker/Dockerfile.pytorch-cuda11,ENTRYPOINT,1,"['[""mead-train"", ""--config"", ""config/conll.json""]']"
tlkh/ai-lab,latest,/src/base.Dockerfile,FROM,1,['nvidia/cuda:10.2-cudnn7-runtime-ubuntu18.04']
tlkh/ai-lab,latest,/src/base.Dockerfile,LABEL,1,"['maintainer=""Timothy Liu <timothy_liu@mymail.sutd.edu.sg>""']"
tlkh/ai-lab,latest,/src/base.Dockerfile,USER,6,"['root', '$NB_UID', 'root', '$NB_UID', 'root', '$NB_UID']"
tlkh/ai-lab,latest,/src/base.Dockerfile,ENV,5,"['DEBIAN_FRONTEND=noninteractive', 'CONDA_DIR=/opt/conda     SHELL=/bin/bash     NB_USER=jovyan     NB_UID=1000     NB_GID=100     LC_ALL=en_US.UTF-8     LANG=en_US.UTF-8     LANGUAGE=en_US.UTF-8', 'PATH=$CONDA_DIR/bin:$PATH     HOME=/home/$NB_USER', 'MINICONDA_VERSION latest', 'NB_PASSWD=""""     SUDO_PASSWD=volta']"
tlkh/ai-lab,latest,/src/base.Dockerfile,RUN,7,"['apt-get update &&     apt-get install -yq --no-install-recommends --no-upgrade     apt-utils &&     apt-get install -yq --no-install-recommends --no-upgrade     curl     wget     bzip2     ca-certificates     locales     fonts-liberation     tmux     build-essential     cmake     jed     libsm6     libxext-dev     libxrender1     lmodern     netcat     pandoc     texlive-fonts-recommended     texlive-generic-recommended     texlive-latex-base     texlive-latex-extra     texlive-xetex     libjpeg-dev     libpng-dev      ffmpeg     graphviz    git     nano     htop     zip     unzip     libncurses5-dev     libncursesw5-dev     libopenblas-base     libopenblas-dev     libboost-all-dev     libsdl2-dev     swig     pkg-config     g++     zlib1g-dev     patchelf     sudo     && apt-get purge jed -y     && apt-get autoremove -y     && apt-get clean &&     rm -rf /tmp/* &&     rm -rf /var/lib/apt/lists/* /var/cache/apt/*', 'echo ""en_US.UTF-8 UTF-8"" > /etc/locale.gen &&     locale-gen &&     groupadd wheel -g 11 &&     echo ""auth sufficient pam_wheel.so use_uid"" >> /etc/pam.d/su &&     useradd -m -s /bin/bash -N -u $NB_UID $NB_USER &&     usermod -aG sudo $NB_USER &&     mkdir -p $CONDA_DIR &&     chown $NB_USER:$NB_GID $CONDA_DIR &&     chmod g+w /etc/passwd &&     rm -rf /tmp/* &&     fix-permissions $HOME &&     fix-permissions $CONDA_DIR', 'fix-permissions $HOME', 'cd /tmp/ &&     wget --quiet https://repo.continuum.io/miniconda/Miniconda3-${MINICONDA_VERSION}-Linux-x86_64.sh &&     /bin/bash Miniconda3-${MINICONDA_VERSION}-Linux-x86_64.sh -f -b -p $CONDA_DIR &&     rm Miniconda3-${MINICONDA_VERSION}-Linux-x86_64.sh &&     $CONDA_DIR/bin/conda config --system --prepend channels conda-forge &&     $CONDA_DIR/bin/conda config --system --set auto_update_conda false &&     $CONDA_DIR/bin/conda config --system --set show_channel_urls true &&     $CONDA_DIR/bin/conda update --all --quiet --yes &&     echo ""Installing packages"" &&     conda install --quiet --yes       \'conda-build\'       \'python=3.7\'       \'numpy\'       \'pandas\'       \'tk\'       \'tini\'       \'notebook=6.0.*\'       \'jupyterhub=1.0.*\'       \'jupyterlab=1.*\'       \'widgetsnbextension\'       \'jupyter_contrib_nbextensions\'       \'ipywidgets=7.5.*\' &&     pip install --no-cache-dir -r $HOME/requirements.txt &&     rm $HOME/requirements.txt &&     git clone --depth 1 https://github.com/huggingface/neuralcoref &&     cd neuralcoref &&     pip install --no-cache-dir -r requirements.txt &&     pip install --no-cache-dir . &&     cd $HOME &&     pip uninstall opencv-python opencv-contrib-python -y &&     pip install --no-cache-dir opencv-contrib-python &&     pip uninstall pillow -y &&       CC=""cc -mavx2"" pip install -U --force-reinstall --no-cache-dir pillow-simd &&     jupyter notebook --generate-config &&     jupyter nbextension enable --py widgetsnbextension --sys-prefix &&     jupyter contrib nbextension install --sys-prefix &&     echo ""Installing System Monitor"" &&      pip --no-cache-dir install nbresuse &&      jupyter labextension install jupyterlab-topbar-extension jupyterlab-system-monitor &&     echo ""Installing @jupyter-widgets/jupyterlab-manager"" &&      jupyter labextension install @jupyter-widgets/jupyterlab-manager &&     echo ""Installing @jupyterlab/toc"" &&      jupyter labextension install @jupyterlab/toc &&     echo ""Installing @jupyterlab/git"" &&      jupyter labextension install @jupyterlab/git &&      pip install --no-cache-dir --upgrade jupyterlab-git &&      jupyter serverextension enable --py --sys-prefix jupyterlab_git &&     echo ""Installing jupyterlab-server-proxy"" &&      pip install --no-cache-dir jupyter-tensorboard &&      cd /tmp/ &&      git clone --depth 1 https://github.com/jupyterhub/jupyter-server-proxy &&      cd /tmp/jupyter-server-proxy/jupyterlab-server-proxy &&      npm install && npm run build && jupyter labextension link . &&      npm run build && jupyter lab build &&     jupyter labextension install jupyterlab_tensorboard &&     jupyter lab clean &&     conda list tini | grep tini | tr -s \' \' | cut -d \' \' -f 1,2 >> $CONDA_DIR/conda-meta/pinned &&     conda clean -tipsy &&     conda build purge-all &&     find $CONDA_DIR -type f,l -name \'*.a\' -delete &&     find $CONDA_DIR -type f,l -name \'*.pyc\' -delete &&     find $CONDA_DIR -type f,l -name \'*.js.map\' -delete &&     find $CONDA_DIR/lib/python*/site-packages/bokeh/server/static -type f,l -name \'*.js\' -not -name \'*.min.js\' -delete &&     rm -rf $CONDA_DIR/pkgs &&     npm cache clean --force &&     cd /tmp/ &&     rm -rf $CONDA_DIR/share/jupyter/lab/staging &&     rm -rf /tmp/* &&     rm -rf $HOME/.cache &&     rm -rf $HOME/.node-gyp &&     fix-permissions $CONDA_DIR &&     fix-permissions $HOME', 'cd /tmp/ &&     git clone --depth 1 https://github.com/Syllo/nvtop.git &&     mkdir -p nvtop/build && cd nvtop/build &&     cmake .. -DNVML_RETRIEVE_HEADER_ONLINE=True &&     make && make install &&     cd &&     rm -rf /tmp/* &&     rm -rf $HOME/.cache &&     rm -rf $HOME/.node-gyp &&     fix-permissions $CONDA_DIR &&     fix-permissions $HOME', 'fix-permissions /etc/jupyter/ &&     usermod -s /bin/bash $NB_USER', 'ldconfig &&     mkdir /results/ &&     chmod -R 777 /results/ &&     echo ""${SUDO_PASSWD}\\n${SUDO_PASSWD}\\n"" | (passwd $NB_USER)']"
tlkh/ai-lab,latest,/src/base.Dockerfile,ADD,2,"['fix-permissions /usr/local/bin/fix-permissions', 'requirements.txt requirements.txt']"
tlkh/ai-lab,latest,/src/base.Dockerfile,WORKDIR,2,"['$HOME', '$HOME']"
tlkh/ai-lab,latest,/src/base.Dockerfile,EXPOSE,1,['8888']
tlkh/ai-lab,latest,/src/base.Dockerfile,ENTRYPOINT,1,"['[""tini"", ""-g"", ""--""]']"
tlkh/ai-lab,latest,/src/base.Dockerfile,CMD,1,"['[""start-notebook.sh""]']"
tlkh/ai-lab,latest,/src/base.Dockerfile,COPY,6,"['start.sh /usr/local/bin/', 'start-notebook.sh /usr/local/bin/', 'start-singleuser.sh /usr/local/bin/', 'jupyter_notebook_config.py /etc/jupyter/', 'README.ipynb /home/$NB_USER/', 'ld.so.conf /etc/']"
tlkh/ai-lab,latest,/src/full.Dockerfile,FROM,1,['tlkh/ai-lab:20.12-base']
tlkh/ai-lab,latest,/src/full.Dockerfile,LABEL,1,"['maintainer=""Timothy Liu <timothy_liu@mymail.sutd.edu.sg>""']"
tlkh/ai-lab,latest,/src/full.Dockerfile,USER,6,"['root', '$NB_UID', 'root', '$NB_UID', 'root', '$NB_UID']"
tlkh/ai-lab,latest,/src/full.Dockerfile,ENV,2,"['DEBIAN_FRONTEND=noninteractive     TF_FORCE_GPU_ALLOW_GROWTH=true', 'HOROVOD_GPU_ALLREDUCE=NCCL     HOROVOD_WITH_TENSORFLOW=1     HOROVOD_WITH_PYTORCH=1']"
tlkh/ai-lab,latest,/src/full.Dockerfile,RUN,4,"['conda install -c anaconda -c pytorch --quiet --yes       \'python=3.7\'       pytorch torchvision torchaudio       tensorflow-gpu       tensorflow-hub       tensorflow-datasets       \'cudatoolkit=10.2\' &&     pip install --no-cache-dir torchtext pytorch-lightning[\'extra\'] &&     pip uninstall pillow -y &&       CC=""cc -mavx2"" pip install -U --force-reinstall --no-cache-dir pillow-simd &&     conda clean -tipsy &&     conda build purge-all &&     find $CONDA_DIR -type f,l -name \'*.a\' -delete &&     find $CONDA_DIR -type f,l -name \'*.pyc\' -delete &&     find $CONDA_DIR -type f,l -name \'*.js.map\' -delete &&     rm -rf $CONDA_DIR/pkgs &&     rm -rf /tmp/* &&     rm -rf $HOME/.cache &&     rm -rf $HOME/.node-gyp &&     fix-permissions $CONDA_DIR &&     fix-permissions $HOME', 'apt-get update &&     apt-get install -yq --no-upgrade     cuda-nvml-dev-$CUDA_PKG_VERSION     cuda-command-line-tools-$CUDA_PKG_VERSION     cuda-libraries-dev-$CUDA_PKG_VERSION     cuda-minimal-build-$CUDA_PKG_VERSION     libnccl-dev=$NCCL_VERSION-1+cuda10.2 &&     cd /tmp/ &&     git clone --depth 1 https://github.com/NVIDIA/apex &&     cd apex &&     pip install -v --no-cache-dir      --global-option=""--cpp_ext"" --global-option=""--cuda_ext""      . &&     cd .. && rm -rf apex &&     apt-get remove -yq       cuda-nvml-dev-$CUDA_PKG_VERSION       cuda-command-line-tools-$CUDA_PKG_VERSION       cuda-libraries-dev-$CUDA_PKG_VERSION       libnccl-dev=$NCCL_VERSION-1+cuda10.2 &&     apt-get autoremove -y &&     apt-get clean &&     rm -rf /var/lib/apt/lists/* /var/cache/apt/* &&     rm -rf /tmp/* &&     rm -rf $HOME/.cache &&     rm -rf $HOME/.node-gyp &&     fix-permissions $CONDA_DIR &&     fix-permissions $HOME', ""conda install       -c nvidia       -c rapidsai       -c numba -c conda-forge -c defaults       'python=3.7'       'rapids-blazing=0.17'       'cudatoolkit=10.2' &&     conda install       -c rapidsai/label/xgboost       'xgboost'       'dask-xgboost' &&     pip install --no-cache-dir       dask_labextension &&     jupyter labextension install dask-labextension && jupyter lab clean &&     conda clean -tipsy &&     conda build purge-all &&     find $CONDA_DIR -type f,l -name '*.a' -delete &&     find $CONDA_DIR -type f,l -name '*.pyc' -delete &&     find $CONDA_DIR -type f,l -name '*.js.map' -delete &&     rm -rf $CONDA_DIR/pkgs &&     npm cache clean --force &&     rm -rf $CONDA_DIR/share/jupyter/lab/staging &&     rm -rf /tmp/* &&     rm -rf $HOME/.cache &&     rm -rf $HOME/.node-gyp &&     fix-permissions $CONDA_DIR &&     fix-permissions $HOME"", 'apt-get update &&     apt-get install -yq --no-upgrade       cuda-nvml-dev-$CUDA_PKG_VERSION       cuda-command-line-tools-$CUDA_PKG_VERSION       cuda-libraries-dev-$CUDA_PKG_VERSION       cuda-minimal-build-$CUDA_PKG_VERSION       libnccl-dev=$NCCL_VERSION-1+cuda10.2 &&     pip uninstall horovod -y &&     pip install --no-cache-dir horovod &&     apt-get remove -yq       cuda-nvml-dev-$CUDA_PKG_VERSION       cuda-command-line-tools-$CUDA_PKG_VERSION       cuda-libraries-dev-$CUDA_PKG_VERSION       libnccl-dev=$NCCL_VERSION-1+cuda10.2 &&     apt-get autoremove -y &&     apt-get clean &&     rm -rf /var/lib/apt/lists/* /var/cache/apt/* &&     rm -rf /tmp/* &&     rm -rf $HOME/.cache &&     rm -rf $HOME/.node-gyp &&     fix-permissions $CONDA_DIR &&     fix-permissions $HOME']"
tlkh/ai-lab,latest,/src/vnc.Dockerfile,FROM,1,['tlkh/ai-lab:20.12']
tlkh/ai-lab,latest,/src/vnc.Dockerfile,LABEL,1,"['maintainer=""Timothy Liu <timothy_liu@mymail.sutd.edu.sg>""']"
tlkh/ai-lab,latest,/src/vnc.Dockerfile,ENV,8,"['NVIDIA_DRIVER_CAPABILITIES ${NVIDIA_DRIVER_CAPABILITIES},display', 'DEBIAN_FRONTEND noninteractive', 'CONDA_DIR=/opt/conda     SHELL=/bin/bash     NB_USER=jovyan     NB_UID=1000     NB_GID=100     LC_ALL=en_US.UTF-8     LANG=en_US.UTF-8     LANGUAGE=en_US.UTF-8', 'PATH=$CONDA_DIR/bin:$PATH     HOME=/home/$NB_USER     TURBOVNC_VERSION=2.2.5     VIRTUALGL_VERSION=2.6.4     LIBJPEG_VERSION=2.0.6     WEBSOCKIFY_VERSION=0.9.0     LIBGLVND_VERSION=master', 'PATH /opt/nvidia/nsight-compute:{${PATH}', 'LD_LIBRARY_PATH /usr/local/lib/x86_64-linux-gnu:/usr/local/lib/i386-linux-gnu${LD_LIBRARY_PATH:+:${LD_LIBRARY_PATH}}', 'CODESERVER_URL=""https://github.com/cdr/code-server/releases/download/1.1156-vsc1.33.1/code-server1.1156-vsc1.33.1-linux-x64.tar.gz""     CODESERVER=""code-server1.1156-vsc1.33.1-linux-x64""', 'JUPYTER_ENABLE_LAB=yes']"
tlkh/ai-lab,latest,/src/vnc.Dockerfile,USER,6,"['root', '$NB_USER', 'root', '$NB_USER', 'root', '$NB_UID']"
tlkh/ai-lab,latest,/src/vnc.Dockerfile,COPY,4,"['xorg.conf.nvidia-headless /etc/X11/xorg.conf', '10_nvidia.json /usr/local/share/glvnd/egl_vendor.d/10_nvidia.json', 'Xvnc-session /etc/X11/', 'nbnovnc /opt/nbnovnc']"
tlkh/ai-lab,latest,/src/vnc.Dockerfile,RUN,12,"['apt-get update &&     apt-get install --no-upgrade -yq --no-install-recommends     git     ca-certificates     make     automake     autoconf     libtool     pkg-config     python     libxext-dev     libx11-dev     libc6-dev     libglu1     libsm6     libxv1     x11-xkb-utils     xauth     xfonts-base     xkb-data     x11proto-gl-dev     libqt5x11extras5     openjdk-8-jre     cuda-visual-tools-10-1     cuda-nsight-systems-10-1     cuda-nsight-compute-10-1     cuda-cupti-10-1     cuda-nvprof-10-1 &&     echo 2 | update-alternatives --config java &&     apt-get autoremove -y &&     apt-get clean &&     cd &&     rm -rf /tmp/* &&     rm -rf /var/lib/apt/lists/* /var/cache/apt/*', 'cd /opt/ &&     git clone --depth 1 --branch=""${LIBGLVND_VERSION}"" https://github.com/NVIDIA/libglvnd.git &&     cd libglvnd && ./autogen.sh &&     ./configure --prefix=/usr/local --libdir=/usr/local/lib/x86_64-linux-gnu &&     make -j install-strip &&     find /usr/local/lib/x86_64-linux-gnu -type f -name \'lib*.la\' -delete &&     echo \'/usr/local/lib/x86_64-linux-gnu\' >> /etc/ld.so.conf.d/glvnd.conf &&     ldconfig &&     rm -rf /opt/libglvnd &&     rm -rf /tmp/* &&     rm -rf $HOME/.cache &&     rm -rf $HOME/.node-gyp &&     fix-permissions $CONDA_DIR &&     fix-permissions $HOME', ""apt-get update &&     apt-get install software-properties-common -yq &&     add-apt-repository ppa:ubuntu-desktop/ubuntu-make -y &&     apt-get update &&     apt-get install --no-upgrade -yq     xvfb libosmesa6-dev mesa-utils libgles2-mesa     mesa-common-dev libgl1-mesa-dev freeglut3-dev libglu1-mesa-dev     novnc supervisor xinit ubuntu-make     xubuntu-desktop idle3 &&     apt-get purge -yq     libreoffice* thunderbird* pidgin* sgt-puzzles* xscreensaver     gnome* blueman* bluez* unity* cups* totem* xfce4-dict*     empathy* evolution* rhythmbox* shotwell* xfburn*     account-plugin-* example-content* duplicity*     ttf-arabeyes ttf-arphic-uming ttf-indic-fonts-core     ttf-malayalam-fonts ttf-thai-tlwg ttf-unfonts-core     ppp* wvdial* transmission*     &&     curl -fsSL -O https://udomain.dl.sourceforge.net/project/turbovnc/${TURBOVNC_VERSION}/turbovnc_${TURBOVNC_VERSION}_amd64.deb         -O https://udomain.dl.sourceforge.net/project/libjpeg-turbo/${LIBJPEG_VERSION}/libjpeg-turbo-official_${LIBJPEG_VERSION}_amd64.deb         -O https://udomain.dl.sourceforge.net/project/virtualgl/${VIRTUALGL_VERSION}/virtualgl_${VIRTUALGL_VERSION}_amd64.deb &&     dpkg -i *.deb &&     sed -i 's/$host:/unix:/g' /opt/TurboVNC/bin/vncserver &&     apt-get autoremove -y &&     apt-get clean &&     cd &&     rm -rf /var/lib/apt/lists/* /var/cache/apt/* &&     rm -rf /tmp/* &&     rm -rf $HOME/.cache &&     rm -rf $HOME/.node-gyp &&     fix-permissions $CONDA_DIR &&     fix-permissions $HOME"", '/opt/VirtualGL/bin/vglserver_config -config +s +f +t', 'cd /opt/ &&     git clone --depth 1 https://github.com/novnc/noVNC &&     cd noVNC/utils && git clone --depth 1 https://github.com/novnc/websockify websockify', 'pip install --no-cache-dir     pyopengl gym[atari]     jupyter-vscode-server jedi pysc2     python-language-server[yapf] &&     pip uninstall opencv-python opencv-python-headless opencv-contrib-python -y &&     pip install --no-cache-dir opencv-contrib-python -U &&     cd /tmp/ &&     git clone --depth 1 https://github.com/tlkh/keras-rl2.git &&     cd keras-rl2 &&     pip install --no-cache-dir . &&     rm -rf /tmp/* && cd &&     rm -rf $HOME/.cache &&     rm -rf $HOME/.node-gyp &&     fix-permissions $CONDA_DIR &&     fix-permissions $HOME', 'cd /home/$NB_USER &&     git clone --depth 1 https://github.com/novnc/websockify &&     git clone --depth 1 https://github.com/tlkh/nbnovnc &&     cd websockify &&     python setup.py install &&     cd /home/$NB_USER &&     cd nbnovnc &&     python setup.py sdist bdist_wheel &&     cd dist &&     pip install --no-cache-dir *.whl &&     rm -rf /home/$NB_USER/.cache *.whl &&     cd /home/$NB_USER &&     rm -rf websockify nbnovnc &&     rm -rf /tmp/* &&     rm -rf $HOME/.cache &&     rm -rf $HOME/.node-gyp &&     fix-permissions $CONDA_DIR &&     fix-permissions $HOME', 'jupyter serverextension enable  --py --sys-prefix nbnovnc &&     jupyter nbextension     install --py --sys-prefix nbnovnc &&     jupyter nbextension     enable  --py --sys-prefix nbnovnc &&     rm -rf /tmp/* &&     rm -rf $HOME/.cache &&     rm -rf $HOME/.node-gyp &&     fix-permissions $CONDA_DIR &&     fix-permissions $HOME', 'wget ${CODESERVER_URL} &&     tar xvf ${CODESERVER}.tar.gz &&     mv ${CODESERVER}/code-server /usr/local/bin/ &&     rm -rf code-server* &&     rm -rf /tmp/* &&     rm -rf $HOME/.cache &&     rm -rf $HOME/.node-gyp &&     fix-permissions $CONDA_DIR &&     fix-permissions $HOME', 'chmod 777 /etc/X11/Xvnc-session', 'cd /opt/ &&     pip install --no-cache-dir jupyter jupyterlab --upgrade &&     git clone --depth 1 https://github.com/novnc/websockify &&     git clone --depth 1 https://github.com/jupyterhub/jupyter-server-proxy &&     cd /opt/jupyter-server-proxy &&     pip install --no-cache-dir -e . &&     jupyter serverextension enable --sys-prefix jupyter_server_proxy &&     jupyter labextension install @jupyterlab/server-proxy &&     cd /opt/websockify &&     python setup.py install &&     cd /opt/nbnovnc &&     pip install --no-cache-dir . &&     cd /opt/nbnovnc/jupyterlab-plugin &&     npm install &&     npm run build &&     jupyter labextension link . &&     jupyter lab build &&     cd /opt/ &&     rm -rf /opt/.cache *.whl &&     rm -rf websockify &&     rm -rf /tmp/* &&     rm -rf $HOME/.cache &&     rm -rf $HOME/.node-gyp', 'jupyter serverextension enable  --py --sys-prefix nbnovnc &&     jupyter nbextension     install --py --sys-prefix nbnovnc &&     jupyter nbextension     enable  --py --sys-prefix nbnovnc &&     jupyter serverextension enable jupyterlab']"
tlkh/ai-lab,latest,/src/vnc.Dockerfile,WORKDIR,2,"['/opt/', '/home/$NB_USER']"
tlkh/ai-lab,latest,/src/nbnovnc/jupyterlab-plugin/docker/Dockerfile,FROM,1,['renku/singleuser:0.3.2']
tlkh/ai-lab,latest,/src/nbnovnc/jupyterlab-plugin/docker/Dockerfile,RUN,3,"['sudo apt update     && sudo DEBIAN_FRONTEND=noninteractive apt install -y             ca-certificates             openssl             xvfb             x11vnc             openbox             supervisor     && sudo apt autoremove --purge     && sudo apt clean     && sudo rm -rf /var/lib/apt/lists/*     && sudo rm -rf /tmp/*     && sudo find /var/log -type f -exec cp /dev/null \\{\\} \\;', 'sudo git clone https://github.com/novnc/noVNC.git /opt/novnc     && sudo git clone https://github.com/novnc/websockify.git /opt/novnc/utils/websockify     && sudo rm -rf /opt/novnc/.git     && sudo rm -rf /opt/novnc/utils/websockify.git     && sudo rm -rf /tmp/*', 'pip install nbserverproxy     && jupyter serverextension enable --py nbserverproxy     && jupyter labextension install @tlkh/jupyterlab-vnc']"
tlkh/ai-lab,latest,/src/nbnovnc/jupyterlab-plugin/docker/Dockerfile,ENV,1,['DISPLAY :1']
tlkh/ai-lab,latest,/src/nbnovnc/jupyterlab-plugin/docker/Dockerfile,COPY,2,"['--chown=root:root desktop.conf /etc/supervisor/conf.d/', '--chown=root:root start-supervisord.sh /usr/local/bin/start-notebook.d/start-supervisord.sh']"
tlkh/ai-lab,latest,/src/nbnovnc/jupyterlab-plugin/docker/Dockerfile,EXPOSE,1,['8888']
tlkh/ai-lab,latest,/src/nbnovnc/jupyterlab-plugin/docker/Dockerfile,ENTRYPOINT,1,"['[ ""tini"", ""-g"", ""--"", ""/usr/local/bin/start.sh"" ]']"
scikit-hep/pyhf,latest,/docker/Dockerfile,ARG,1,['BASE_IMAGE=python:3.9-slim-bullseye']
scikit-hep/pyhf,latest,/docker/Dockerfile,FROM,3,"['${BASE_IMAGE} as base', 'base as builder', 'base']"
scikit-hep/pyhf,latest,/docker/Dockerfile,ENV,2,"['PATH=/usr/local/venv/bin:""${PATH}""', 'PATH=/usr/local/venv/bin:""${PATH}""']"
scikit-hep/pyhf,latest,/docker/Dockerfile,COPY,2,"['. /code', '--from=builder /usr/local/venv /usr/local/venv']"
scikit-hep/pyhf,latest,/docker/Dockerfile,RUN,2,"['apt-get -qq -y update &&     apt-get -qq -y install --no-install-recommends         git &&     apt-get -y autoclean &&     apt-get -y autoremove &&     rm -rf /var/lib/apt/lists/* &&     python -m venv /usr/local/venv &&     cd /code &&     python -m pip --no-cache-dir install --upgrade pip setuptools wheel &&     python -m pip --no-cache-dir install .[xmlio,contrib] &&     python -m pip list', 'apt-get -qq -y update &&     apt-get -qq -y install --no-install-recommends         curl &&     apt-get -y autoclean &&     apt-get -y autoremove &&     rm -rf /var/lib/apt/lists/*']"
scikit-hep/pyhf,latest,/docker/Dockerfile,ENTRYPOINT,1,"['[""/usr/local/venv/bin/pyhf""]']"
scikit-hep/pyhf,latest,/docker/gpu/Dockerfile,FROM,3,"['nvidia/cuda:10.1-cudnn7-runtime-ubuntu18.04 as base', 'base as builder', 'base']"
scikit-hep/pyhf,latest,/docker/gpu/Dockerfile,RUN,2,"['apt-get update -y &&     apt-get install -y       git       python3       python3-pip &&     apt-get -y autoclean &&     apt-get -y autoremove &&     rm -rf /var/lib/apt/lists/*', 'python3 -m pip --no-cache-dir install --upgrade pip setuptools wheel &&     /bin/bash install_backend.sh ${BACKEND} &&     python3 -m pip list']"
scikit-hep/pyhf,latest,/docker/gpu/Dockerfile,COPY,10,"['. /code', './docker/gpu/install_backend.sh /code/install_backend.sh', '--from=builder /lib/x86_64-linux-gnu /lib/x86_64-linux-gnu', '--from=builder /usr/local /usr/local', '--from=builder /usr/bin/python3 /usr/bin/python3', '--from=builder /usr/bin/python3.6 /usr/bin/python3.6', '--from=builder /usr/bin/pip3 /usr/bin/pip3', '--from=builder /usr/lib/python3 /usr/lib/python3', '--from=builder /usr/lib/python3.6 /usr/lib/python3.6', '--from=builder /usr/lib/x86_64-linux-gnu /usr/lib/x86_64-linux-gnu']"
scikit-hep/pyhf,latest,/docker/gpu/Dockerfile,WORKDIR,1,['/code']
scikit-hep/pyhf,latest,/docker/gpu/Dockerfile,ARG,1,['BACKEND=tensorflow']
scikit-hep/pyhf,latest,/docker/gpu/Dockerfile,ENV,2,"['LC_ALL=C.UTF-8', 'LANG=C.UTF-8']"
scikit-hep/pyhf,latest,/docker/gpu/Dockerfile,ENTRYPOINT,1,"['[""/usr/local/bin/pyhf""]']"
rte-france/Grid2Op,latest,/Dockerfile,FROM,1,['python:3.8-buster']
rte-france/Grid2Op,latest,/Dockerfile,MAINTAINER,1,['Benjamin DONNOT <benjamin.donnot@rte-france.com>']
rte-france/Grid2Op,latest,/Dockerfile,ENV,1,['DEBIAN_FRONTEND noninteractive']
rte-france/Grid2Op,latest,/Dockerfile,ARG,1,['ls_version']
rte-france/Grid2Op,latest,/Dockerfile,RUN,7,"['apt-get update &&     apt-get install -y     less     apt-transport-https     build-essential     git     ssh     tar     gzip', 'git clone https://github.com/rte-france/Grid2Op', 'git pull', 'git remote update', 'git fetch --all --tags', 'git checkout ""tags/v1.6.4"" -b ""v1.6.4-branch""', 'pip3 install .[optional,challenge]']"
rte-france/Grid2Op,latest,/Dockerfile,WORKDIR,2,"['/Grid2Op', '/']"
rte-france/Grid2Op,latest,/Dockerfile,EXPOSE,1,['80']
rte-france/Grid2Op,latest,/utils/templateDockerFile_light,FROM,1,['python:3.8-buster']
rte-france/Grid2Op,latest,/utils/templateDockerFile_light,MAINTAINER,1,['Benjamin DONNOT <benjamin.donnot@rte-france.com>']
rte-france/Grid2Op,latest,/utils/templateDockerFile_light,ENV,1,['DEBIAN_FRONTEND noninteractive']
rte-france/Grid2Op,latest,/utils/templateDockerFile_light,ARG,1,['ls_version']
rte-france/Grid2Op,latest,/utils/templateDockerFile_light,RUN,7,"['apt-get update &&     apt-get install -y     less     apt-transport-https     build-essential     git     ssh     tar     gzip', 'git clone https://github.com/rte-france/Grid2Op', 'git pull', 'git remote update', 'git fetch --all --tags', 'git checkout ""tags/__VERSION__"" -b ""__VERSION__-branch""', 'pip3 install .']"
rte-france/Grid2Op,latest,/utils/templateDockerFile_light,WORKDIR,2,"['/Grid2Op', '/']"
rte-france/Grid2Op,latest,/utils/templateDockerFile_light,EXPOSE,1,['80']
rte-france/Grid2Op,latest,/utils/templateDockerFile,FROM,1,['python:3.8-buster']
rte-france/Grid2Op,latest,/utils/templateDockerFile,MAINTAINER,1,['Benjamin DONNOT <benjamin.donnot@rte-france.com>']
rte-france/Grid2Op,latest,/utils/templateDockerFile,ENV,1,['DEBIAN_FRONTEND noninteractive']
rte-france/Grid2Op,latest,/utils/templateDockerFile,ARG,1,['ls_version']
rte-france/Grid2Op,latest,/utils/templateDockerFile,RUN,7,"['apt-get update &&     apt-get install -y     less     apt-transport-https     build-essential     git     ssh     tar     gzip', 'git clone https://github.com/rte-france/Grid2Op', 'git pull', 'git remote update', 'git fetch --all --tags', 'git checkout ""tags/__VERSION__"" -b ""__VERSION__-branch""', 'pip3 install .[optional,challenge]']"
rte-france/Grid2Op,latest,/utils/templateDockerFile,WORKDIR,2,"['/Grid2Op', '/']"
rte-france/Grid2Op,latest,/utils/templateDockerFile,EXPOSE,1,['80']
rte-france/Grid2Op,latest,/utils/templateDockerFile_test,FROM,1,['python:3.8-buster']
rte-france/Grid2Op,latest,/utils/templateDockerFile_test,MAINTAINER,1,['Benjamin DONNOT <benjamin.donnot@rte-france.com>']
rte-france/Grid2Op,latest,/utils/templateDockerFile_test,ENV,1,['DEBIAN_FRONTEND noninteractive']
rte-france/Grid2Op,latest,/utils/templateDockerFile_test,ARG,1,['ls_version']
rte-france/Grid2Op,latest,/utils/templateDockerFile_test,RUN,4,"['apt-get update &&     apt-get install -y     less     apt-transport-https     build-essential     git     ssh     tar     gzip', 'git clone https://github.com/BDonnot/Grid2Op', 'git pull', 'pip3 install -e .[optional]']"
rte-france/Grid2Op,latest,/utils/templateDockerFile_test,WORKDIR,2,"['/Grid2Op', '/']"
rte-france/Grid2Op,latest,/utils/templateDockerFile_test,EXPOSE,1,['80']
metabrainz/acousticbrainz-server,latest,/Dockerfile,FROM,4,"['metabrainz/python:2.7-20210115 AS acousticbrainz-base', 'acousticbrainz-base AS acousticbrainz-dev', 'acousticbrainz-dev AS acousticbrainz-test', 'acousticbrainz-base AS acousticbrainz-prod']"
metabrainz/acousticbrainz-server,latest,/Dockerfile,RUN,25,"['apt-get update     && apt-get install -y --no-install-recommends ca-certificates     && rm -rf /usr/share/ca-certificates/mozilla/DST_Root_CA_X3.crt     && update-ca-certificates     && rm -rf /var/lib/apt/lists/*', 'wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz     && tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz', 'wget -q -O - https://deb.nodesource.com/setup_12.x | bash - && apt-get update     && apt-get install -y --no-install-recommends                        build-essential                        ca-certificates                        git                        ipython                        libavcodec-dev                        libavformat-dev                        libavutil-dev                        libavresample-dev                        libffi-dev                        libfftw3-dev                        libpq-dev                        libsamplerate0-dev                        libqt4-dev                        libssl-dev                        libtag1-dev                        libxml2-dev                        libxslt1-dev                        libyaml-dev                        nodejs                        pkg-config                        pxz                        python-dev                        python-numpy-dev                        python-numpy                        swig2.0     && rm -rf /var/lib/apt/lists/*', 'mkdir /code', 'mkdir /data', 'git clone https://github.com/MTG/gaia /tmp/gaia     && cd /tmp/gaia     && git checkout v2.4.5     && ./waf configure --with-python-bindings     && ./waf     && ./waf install     && cd / && rm -r /tmp/gaia', 'git clone https://github.com/MTG/essentia /tmp/essentia     && cd /tmp/essentia     && git checkout v2.1_beta4     && ./waf configure --mode=release --with-gaia --with-example=streaming_extractor_music_svm     && ./waf     && ./waf install     && ldconfig     && cp /tmp/essentia/build/src/examples/essentia_streaming_extractor_music_svm /usr/local/bin     && cd / && rm -r /tmp/essentia', 'mkdir /tmp/models     && cd /tmp/models     && curl -L --silent -o models.tar.gz https://essentia.upf.edu/documentation/svm_models/essentia-extractor-svm_models-v2.1_beta1.tar.gz     && tar -xvzf models.tar.gz     && mv /tmp/models/v2.1_beta1/svm_models /data/     && cd / && rm -r /tmp/models', 'groupadd --gid 901 acousticbrainz', 'useradd --create-home --shell /bin/bash --uid 901 --gid 901 acousticbrainz', 'chown acousticbrainz:acousticbrainz /code', 'pip install pip==20.3.4', 'mkdir /code/docs/ && chown acousticbrainz:acousticbrainz /code/docs/', 'pip install --no-cache-dir -r requirements.txt', 'pip install --no-cache-dir -r requirements_development.txt', 'pip install --no-cache-dir uWSGI==2.0.17.1', 'mkdir /cache_namespaces && chown -R acousticbrainz:acousticbrainz /cache_namespaces', 'touch /etc/service/uwsgi/down', 'touch /etc/service/hl_extractor/down', 'touch /etc/service/dataset_eval/down', 'chmod 0644 /etc/cron.d/acousticbrainz', 'touch /etc/service/cron/down', 'touch /etc/service/cron-config/down', 'npm install', 'npm run build:prod']"
metabrainz/acousticbrainz-server,latest,/Dockerfile,ENV,3,"['DOCKERIZE_VERSION v0.6.1', 'ANNOY_COMPILER_ARGS=-D_CRT_SECURE_NO_WARNINGS,-DANNOYLIB_MULTITHREADED_BUILD,-march=haswell,-mno-rdrnd,-O3,-ffast-math,-fno-associative-math,-std=c++14', 'GIT_SHA ${GIT_COMMIT_SHA}']"
metabrainz/acousticbrainz-server,latest,/Dockerfile,SHELL,1,"['[""/bin/bash"", ""-o"", ""pipefail"", ""-c""]']"
metabrainz/acousticbrainz-server,latest,/Dockerfile,WORKDIR,1,['/code']
metabrainz/acousticbrainz-server,latest,/Dockerfile,COPY,18,"['--chown=acousticbrainz:acousticbrainz docs/requirements.txt /code/docs/requirements.txt', '--chown=acousticbrainz:acousticbrainz requirements.txt /code/requirements.txt', '--chown=acousticbrainz:acousticbrainz requirements_development.txt /code/requirements_development.txt', '. /code', './docker/uwsgi/uwsgi.service /etc/service/uwsgi/run', './docker/uwsgi/uwsgi.ini /etc/uwsgi/uwsgi.ini', './docker/uwsgi/consul-template-uwsgi.conf /etc/consul-template-uwsgi.conf', './docker/hl_extractor/hl_extractor.service /etc/service/hl_extractor/run', 'docker/hl_extractor/consul-template-hl-extractor.conf /etc/consul-template-hl-extractor.conf', './docker/dataset_eval/dataset_eval.service /etc/service/dataset_eval/run', './docker/dataset_eval/consul-template-dataset-eval.conf /etc/consul-template-dataset-eval.conf', './docker/cron/crontab /etc/cron.d/acousticbrainz', './docker/cron/cron-config.service /etc/service/cron-config/run', 'docker/cron/consul-template-cron-config.conf /etc/consul-template-cron-config.conf', './docker/rc.local /etc/rc.local', './docker/run-ab-command /usr/bin/run-ab-command', '--chown=acousticbrainz:acousticbrainz package.json /code', '--chown=acousticbrainz:acousticbrainz . /code']"
metabrainz/acousticbrainz-server,latest,/Dockerfile,USER,3,"['root', 'acousticbrainz', 'root']"
metabrainz/acousticbrainz-server,latest,/Dockerfile,ARG,1,['GIT_COMMIT_SHA']
erdos-project/pylot,latest,/docker/Dockerfile,FROM,1,['nvidia/cudagl:11.4.2-devel-ubuntu20.04']
erdos-project/pylot,latest,/docker/Dockerfile,MAINTAINER,1,['Sukrit Kalra (sukrit.kalra@berkeley.edu)']
erdos-project/pylot,latest,/docker/Dockerfile,RUN,35,"['apt-get -y update && apt-get -y install sudo', 'mkdir -p /home/erdos', 'groupadd erdos -g ${gid}', 'useradd -r -u ${uid} -g erdos erdos', 'echo ""erdos ALL=(ALL) NOPASSWD: ALL"" > /etc/sudoers.d/erdos', 'chmod 0440 /etc/sudoers.d/erdos', 'chown ${uid}:${gid} -R /home/erdos', 'usermod --shell /bin/bash erdos', 'mkdir -p /home/erdos/workspace', 'cd /home/erdos/workspace', 'sudo apt-get -y update && sudo apt-get -y install --reinstall locales && sudo locale-gen en_US.UTF-8', 'sudo apt-get -y --fix-missing update', 'sudo DEBIAN_FRONTEND=noninteractive sudo DEBIAN_FRONTEND=noninteractive apt-get install -y tzdata', 'sudo apt-get -y install apt-utils git curl clang python-is-python3 python3-pip', 'python3 -m pip install --upgrade pip', 'python3 -m pip install setuptools setuptools-rust numpy==1.19.5', ""curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y"", 'echo ""export PATH=/home/erdos/.cargo/bin:${PATH}"" >> ~/.bashrc', 'rustup default nightly', 'mkdir -p /home/erdos/workspace', 'cd /home/erdos/workspace && git clone https://github.com/erdos-project/erdos.git && cd erdos && python3 python/setup.py install --user', 'sudo apt-get install -y libcudnn8 cuda-toolkit-11-4 ssh libqt5core5a libeigen3-dev cmake qtbase5-dev libpng16-16 libtiff5 python3-tk python3-pygame libgeos-dev', 'cd /home/erdos/workspace && git clone https://github.com/erdos-project/pylot.git', 'cd /home/erdos/workspace/pylot/ && python3 -m pip install -e ./', 'cd /home/erdos/workspace/pylot/ && ./install.sh', 'cd /home/erdos/workspace && git clone https://github.com/erdos-project/scenario_runner.git', 'python3 -m pip install py-trees==0.8.3 networkx==2.2 Shapely==1.6.4 psutil==5.7.0 xmlschema==1.0.18 ephem==3.7.6.0 tabulate==0.8.7 six==1.14.0', 'cd /home/erdos/workspace && git clone https://github.com/erdos-project/leaderboard.git', 'python3 -m pip install dictor requests', 'echo ""export PYTHONPATH=/home/erdos/workspace/pylot/dependencies/:/home/erdos/workspace/pylot/dependencies/lanenet:/home/erdos/workspace/pylot/dependencies/CARLA_0.9.10.1/PythonAPI/carla/dist/carla-0.9.10-py3.7-linux-x86_64.egg:/home/erdos/workspace/pylot/dependencies/CARLA_0.9.10.1/PythonAPI/carla/:/home/erdos/workspace/pylot/dependencies/CARLA_0.9.10.1/PythonAPI/carla/agents/:/home/erdos/workspace/pylot/dependencies/CARLA_0.9.10.1/PythonAPI/:/home/erdos/workspace/scenario_runner"" >> ~/.bashrc', 'echo ""export PYLOT_HOME=/home/erdos/workspace/pylot/"" >> ~/.bashrc', 'echo ""export CARLA_HOME=/home/erdos/workspace/pylot/dependencies/CARLA_0.9.10.1"" >> ~/.bashrc', 'echo ""if [ -f ~/.bashrc ]; then . ~/.bashrc ; fi"" >> ~/.bash_profile', ""cd ~/ && ssh-keygen -q -t rsa -N '' -f ~/.ssh/id_rsa <<<y 2>&1 >/dev/null"", ""sudo sed -i 's/#X11UseLocalhost yes/X11UseLocalhost no/g' /etc/ssh/sshd_config""]"
erdos-project/pylot,latest,/docker/Dockerfile,ENV,11,"['uid 1000', 'gid 1000', 'HOME /home/erdos', 'SHELL /bin/bash', 'LANG en_US.UTF-8', 'LANGUAGE en_US', 'LC_ALL en_US.UTF-8', 'DEBIAN_FRONTEND=noninteractive', 'PATH=""/home/erdos/.cargo/bin:${PATH}""', 'PYLOT_HOME /home/erdos/workspace/pylot/', 'CARLA_HOME /home/erdos/workspace/pylot/dependencies/CARLA_0.9.10.1']"
erdos-project/pylot,latest,/docker/Dockerfile,USER,1,['erdos']
erdos-project/pylot,latest,/docker/Dockerfile,WORKDIR,2,"['/home/erdos', '/home/erdos/workspace/pylot/']"
erdos-project/pylot,latest,/docker/Dockerfile,SHELL,1,"['[""/bin/bash"", ""--login"", ""-c""]']"
erdos-project/pylot,latest,/docker/Dockerfile-challenge.master,FROM,1,['nvidia/cudagl:11.4.2-devel-ubuntu20.04']
erdos-project/pylot,latest,/docker/Dockerfile-challenge.master,ARG,3,"['HTTP_PROXY', 'HTTPS_PROXY', 'http_proxy']"
erdos-project/pylot,latest,/docker/Dockerfile-challenge.master,RUN,18,"['apt-get update && apt-get install --reinstall -y locales && locale-gen en_US.UTF-8', 'apt-get -y update', 'DEBIAN_FRONTEND=noninteractive ; apt-get install -y tzdata', 'apt-get update && apt-get install -y --no-install-recommends          build-essential          cmake          git          curl          vim          ca-certificates          libjpeg-dev          libpng16-16          libtiff5          libpng-dev          python-dev          python3          python3-dev          python-networkx          python-setuptools          python3-setuptools          python-pip          python3-pip &&          pip install --upgrade pip &&          pip3 install --upgrade pip &&          rm -rf /var/lib/apt/lists/*', 'curl -o ~/miniconda.sh -LO https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh  &&      chmod +x ~/miniconda.sh &&      ~/miniconda.sh -b -p /opt/conda &&      rm ~/miniconda.sh &&      /opt/conda/bin/conda clean -ya &&      /opt/conda/bin/conda create -n python37 python=3.7 numpy networkx scipy six requests', ""packages='py_trees==0.8.3 shapely six dictor requests ephem tabulate' \t&& pip3 install ${packages}"", 'pip install --user setuptools py_trees==0.8.3 psutil shapely six dictor requests ephem tabulate', 'mkdir -p /workspace/results', 'chmod +x /workspace/leaderboard/scripts/run_evaluation.sh', 'apt-get update && apt-get install -y clang libgeos-dev python-opencv libqt5core5a libeigen3-dev cmake qtbase5-dev python3-tk libcudnn8 cuda-toolkit-11-4 ssh python3-pygame', ""curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y"", 'rustup default nightly', ""packages='wheel setuptools setuptools-rust fire' && pip install ${packages}"", 'git clone https://github.com/erdos-project/erdos.git && cd erdos && python3 python/setup.py install --user', ""packages='absl-py cvxpy gdown lapsolver matplotlib==3.4.3 motmetrics numpy==1.19.5 open3d==0.13.0 opencv-python>=4.1.0.25 opencv-contrib-python>=4.1.0.25 pillow>=6.2.2 pytest scikit-image==0.18.3 scipy==1.7.1 shapely==1.6.4 tensorflow-gpu==2.5.1 torch==1.4.0 torchvision==0.5.0 filterpy==1.4.1 scikit-learn==1.0 imgaug==0.2.8 nonechucks==0.3.1 Cython progress pyquaternion nuscenes-devkit' \t&& pip install ${packages}"", 'cd ${TEAM_CODE_ROOT}/dependencies/frenet_optimal_trajectory_planner && rm -r build && ./build.sh', 'cd ${TEAM_CODE_ROOT}/dependencies/hybrid_astar_planner && rm -r build && ./build.sh', 'cd ${TEAM_CODE_ROOT}/dependencies/rrt_star_planner && rm -r build && ./build.sh']"
erdos-project/pylot,latest,/docker/Dockerfile-challenge.master,ENV,25,"['LANG en_US.UTF-8', 'LANGUAGE en_US', 'LC_ALL en_US.UTF-8', 'DEBIAN_FRONTEND=noninteractive', 'CARLA_ROOT /workspace/CARLA', 'PATH ""/workspace/CARLA/PythonAPI/carla/dist/carla-leaderboard-py3x.egg"":/opt/conda/envs/python37/bin:/opt/conda/envs/bin:$PATH', 'SCENARIO_RUNNER_ROOT ""/workspace/scenario_runner""', 'LEADERBOARD_ROOT ""/workspace/leaderboard""', 'TEAM_CODE_ROOT ""/workspace/team_code""', 'PYTHONPATH ""/workspace/CARLA/PythonAPI/carla/dist/carla-leaderboard-py3x.egg"":""${SCENARIO_RUNNER_ROOT}"":""${CARLA_ROOT}/PythonAPI/carla"":""${LEADERBOARD_ROOT}"":${PYTHONPATH}', 'PATH=""/root/.cargo/bin/:${PATH}""', 'PYTHONPATH ${TEAM_CODE_ROOT}/:${TEAM_CODE_ROOT}/dependencies/:${PYTHONPATH}', 'TEAM_AGENT ${TEAM_CODE_ROOT}/pylot/simulation/challenge/ERDOSAgent.py', 'TEAM_CONFIG ${TEAM_CODE_ROOT}/pylot/simulation/challenge/challenge.conf', 'CHALLENGE_TRACK_CODENAME MAP', 'PYLOT_HOME ${TEAM_CODE_ROOT}/', 'SCENARIOS ${LEADERBOARD_ROOT}/data/all_towns_traffic_scenarios_public.json', 'ROUTES ${LEADERBOARD_ROOT}/data/routes_training.xml', 'REPETITIONS 1', 'CHECKPOINT_ENDPOINT /workspace/results/results.json', 'DEBUG_CHALLENGE 0', 'HTTP_PROXY """"', 'HTTPS_PROXY """"', 'http_proxy """"', 'https_proxy """"']"
erdos-project/pylot,latest,/docker/Dockerfile-challenge.master,WORKDIR,1,['/workspace']
erdos-project/pylot,latest,/docker/Dockerfile-challenge.master,COPY,4,"['.tmp/PythonAPI /workspace/CARLA/PythonAPI', '.tmp/scenario_runner ${SCENARIO_RUNNER_ROOT}', '.tmp/leaderboard ${LEADERBOARD_ROOT}', '.tmp/team_code ${TEAM_CODE_ROOT}']"
erdos-project/pylot,latest,/docker/Dockerfile-challenge.master,CMD,1,"['[""/bin/bash""]']"
modernmt/modernmt,latest,/docker/Dockerfile,FROM,3,"['nvidia/cuda:10.1-cudnn7-runtime-ubuntu18.04 AS modernmt-base', 'modernmt-base AS release-builder', 'modernmt-base']"
modernmt/modernmt,latest,/docker/Dockerfile,ARG,2,"['MMT_VERSION', 'MMT_VERSION']"
modernmt/modernmt,latest,/docker/Dockerfile,RUN,5,"[': ""${MMT_VERSION:?Build argument needs to be set and non-empty.}""', 'apt-get update && apt-get install -y --no-install-recommends locales gcc g++ python3 python3-dev python3-setuptools python3-wheel python3-pip openjdk-8-jdk curl &&     curl https://raw.githubusercontent.com/modernmt/modernmt/$MMT_VERSION/requirements.txt > /tmp/requirements.txt && pip3 install -r /tmp/requirements.txt &&     locale-gen --purge en_US.UTF-8 && update-locale LANG=en_US.UTF-8 && echo ""LANG=en_US.UTF-8"" >> /etc/environment &&     apt-get clean && rm -rf /root/.cache/pip/ /tmp/* /var/lib/apt/lists/* /var/tmp/*', 'apt-get update && apt-get install -y --no-install-recommends git libboost-all-dev cmake maven &&     git clone https://github.com/modernmt/modernmt.git /tmp/mmt && cd /tmp/mmt && git checkout $MMT_VERSION', 'python3 setup.py --skip-pip && cd /tmp/mmt/src && mvn clean install && cd /tmp/mmt &&     git log -1 --pretty=oneline > build/modernmt-commit.log', 'find . -name "".?*"" | xargs rm -rf &> /dev/null && rm -rf src test build/include &&     mkdir vendor2 && mv vendor/kafka-* vendor/cassandra-* vendor2/ && rm -rf vendor && mv vendor2 vendor &&     ldd build/bin/* build/lib/* | grep libboost_ | awk \'{print $3}\' | sort -u | xargs cp -t build/lib/']"
modernmt/modernmt,latest,/docker/Dockerfile,ENV,6,"['LD_LIBRARY_PATH /usr/local/cuda/lib64', 'LANG en_US.UTF-8', 'LANGUAGE en_US.UTF-8', 'LC_ALL en_US.UTF-8', 'LD_LIBRARY_PATH ${LD_LIBRARY_PATH}:/opt/mmt/build/lib', 'MMT_HOME /opt/mmt']"
modernmt/modernmt,latest,/docker/Dockerfile,WORKDIR,2,"['/tmp/mmt', '/opt/mmt']"
modernmt/modernmt,latest,/docker/Dockerfile,MAINTAINER,1,['Davide Caroselli <davide@modernmt.eu>']
modernmt/modernmt,latest,/docker/Dockerfile,COPY,1,['--from=release-builder /tmp/mmt /opt/mmt']
modernmt/modernmt,latest,/docker/Dockerfile,EXPOSE,1,['8045']
OpenMined/TenSEAL,latest,/docker-images/Dockerfile-py37,FROM,1,['python:3.7-slim-buster']
OpenMined/TenSEAL,latest,/docker-images/Dockerfile-py37,ARG,1,['DEBIAN_FRONTEND=noninteractive']
OpenMined/TenSEAL,latest,/docker-images/Dockerfile-py37,COPY,1,['./ ./TenSEAL']
OpenMined/TenSEAL,latest,/docker-images/Dockerfile-py37,WORKDIR,1,['/TenSEAL']
OpenMined/TenSEAL,latest,/docker-images/Dockerfile-py37,RUN,2,"['.github/workflows/scripts/install_req_docker.sh', 'pip3 install .']"
OpenMined/TenSEAL,latest,/docker-images/Dockerfile-py37,ENV,1,['CC=clang     CXX=clang++']
OpenMined/TenSEAL,latest,/docker-images/Dockerfile-py37,ENTRYPOINT,1,"['[ ""/bin/bash"" ]']"
OpenMined/TenSEAL,latest,/docker-images/Dockerfile-py39,FROM,1,['python:3.9-slim-buster']
OpenMined/TenSEAL,latest,/docker-images/Dockerfile-py39,ARG,1,['DEBIAN_FRONTEND=noninteractive']
OpenMined/TenSEAL,latest,/docker-images/Dockerfile-py39,COPY,1,['./ ./TenSEAL']
OpenMined/TenSEAL,latest,/docker-images/Dockerfile-py39,WORKDIR,1,['/TenSEAL']
OpenMined/TenSEAL,latest,/docker-images/Dockerfile-py39,RUN,2,"['.github/workflows/scripts/install_req_docker.sh', 'pip3 install .']"
OpenMined/TenSEAL,latest,/docker-images/Dockerfile-py39,ENV,1,['CC=clang     CXX=clang++']
OpenMined/TenSEAL,latest,/docker-images/Dockerfile-py39,ENTRYPOINT,1,"['[ ""/bin/bash"" ]']"
OpenMined/TenSEAL,latest,/docker-images/Dockerfile-py38,FROM,1,['python:3.8-slim-buster']
OpenMined/TenSEAL,latest,/docker-images/Dockerfile-py38,ARG,1,['DEBIAN_FRONTEND=noninteractive']
OpenMined/TenSEAL,latest,/docker-images/Dockerfile-py38,COPY,1,['./ ./TenSEAL']
OpenMined/TenSEAL,latest,/docker-images/Dockerfile-py38,WORKDIR,1,['/TenSEAL']
OpenMined/TenSEAL,latest,/docker-images/Dockerfile-py38,RUN,2,"['.github/workflows/scripts/install_req_docker.sh', 'pip3 install .']"
OpenMined/TenSEAL,latest,/docker-images/Dockerfile-py38,ENV,1,['CC=clang     CXX=clang++']
OpenMined/TenSEAL,latest,/docker-images/Dockerfile-py38,ENTRYPOINT,1,"['[ ""/bin/bash"" ]']"
OpenMined/TenSEAL,latest,/docker-images/Dockerfile-py36,FROM,1,['python:3.6-slim-buster']
OpenMined/TenSEAL,latest,/docker-images/Dockerfile-py36,ARG,1,['DEBIAN_FRONTEND=noninteractive']
OpenMined/TenSEAL,latest,/docker-images/Dockerfile-py36,COPY,1,['./ ./TenSEAL']
OpenMined/TenSEAL,latest,/docker-images/Dockerfile-py36,WORKDIR,1,['/TenSEAL']
OpenMined/TenSEAL,latest,/docker-images/Dockerfile-py36,RUN,2,"['.github/workflows/scripts/install_req_docker.sh', 'pip3 install .']"
OpenMined/TenSEAL,latest,/docker-images/Dockerfile-py36,ENV,1,['CC=clang     CXX=clang++']
OpenMined/TenSEAL,latest,/docker-images/Dockerfile-py36,ENTRYPOINT,1,"['[ ""/bin/bash"" ]']"
takuseno/d3rlpy,latest,/docker/Dockerfile,FROM,1,['pytorch/pytorch:1.8.0-cuda11.1-cudnn8-devel']
takuseno/d3rlpy,latest,/docker/Dockerfile,ENV,1,['DEBIAN_FRONTEND=noninteractive']
takuseno/d3rlpy,latest,/docker/Dockerfile,RUN,1,['apt-get update &&     apt-get install -y --no-install-recommends       build-essential       software-properties-common       cmake       git       wget       unzip       python3-dev       zlib1g       zlib1g-dev       libgl1-mesa-dri       libgl1-mesa-glx       libglu1-mesa-dev       libasio-dev       pkg-config       python3-tk       libsm6       libxext6       libxrender1       libpcre3-dev &&     pip install --no-cache-dir       Cython       git+https://github.com/takuseno/d4rl-pybullet       git+https://github.com/takuseno/d4rl-atari &&     rm -rf /var/lib/apt/lists/* &&     rm -rf /tmp/* &&     wget https://github.com/takuseno/d3rlpy/archive/master.zip &&     unzip master.zip &&     cd d3rlpy-master &&     pip install --no-cache-dir . &&     cd .. &&     rm -rf d3rlpy-master master.zip']
takuseno/d3rlpy,latest,/docker/Dockerfile,EXPOSE,1,['6006']
takuseno/d3rlpy,latest,/docker/Dockerfile,CMD,1,"['[""tail"", ""-f"", ""/dev/null""]']"
vanvalenlab/deepcell-tf,latest,/Dockerfile,ARG,1,['TF_VERSION=2.5.1-gpu']
vanvalenlab/deepcell-tf,latest,/Dockerfile,FROM,1,['tensorflow/tensorflow:${TF_VERSION}']
vanvalenlab/deepcell-tf,latest,/Dockerfile,RUN,3,"['apt-get update && apt-get install -y      graphviz &&     rm -rf /var/lib/apt/lists/* &&     /usr/bin/python3 -m pip install --no-cache-dir --upgrade pip', 'sed -i ""/tensorflow>/d"" /opt/deepcell-tf/requirements.txt &&     pip install --no-cache-dir -r /opt/deepcell-tf/requirements.txt', 'pip install /opt/deepcell-tf']"
vanvalenlab/deepcell-tf,latest,/Dockerfile,WORKDIR,1,['/notebooks']
vanvalenlab/deepcell-tf,latest,/Dockerfile,COPY,3,"['setup.py README.md requirements.txt /opt/deepcell-tf/', 'deepcell /opt/deepcell-tf/deepcell', 'notebooks/ /notebooks/']"
vanvalenlab/deepcell-tf,latest,/Dockerfile,CMD,1,"['[""jupyter"", ""notebook"", ""--ip=0.0.0.0"", ""--allow-root""]']"
johnolafenwa/DeepStack,latest,/Dockerfile.cpu,FROM,1,['deepquestai/deepstack-base:cpu-1647248158 as cpu']
johnolafenwa/DeepStack,latest,/Dockerfile.cpu,ENV,9,"['SLEEP_TIME 0.01', 'TIMEOUT 60', 'SEND_LOGS True', 'CUDA_MODE False', 'APPDIR /app', 'DATA_DIR /datastore', 'TEMP_PATH /deeptemp/', 'PROFILE desktop_cpu', 'PATH=$PATH:/usr/local/go/bin']"
johnolafenwa/DeepStack,latest,/Dockerfile.cpu,RUN,22,"['mkdir /deeptemp', 'mkdir /datastore', 'wget https://go.dev/dl/go1.17.6.linux-amd64.tar.gz', 'rm -rf /usr/local/go && tar -C /usr/local -xzf go1.17.6.linux-amd64.tar.gz', 'rm go1.17.6.linux-amd64.tar.gz', 'pip install onnxruntime==0.4.0', 'pip3 install redis', 'pip3 install opencv-python', 'pip3 install Cython', 'pip3 install pillow', 'pip3 install scipy', 'pip3 install tqdm', 'pip3 install tensorboard', 'pip3 install PyYAML', 'pip3 install Matplotlib', 'pip3 install easydict', 'pip3 install future', 'pip3 install numpy', 'mkdir /app/sharedfiles', 'mkdir /app/server', 'go build', 'mkdir /app/intelligencelayer']"
johnolafenwa/DeepStack,latest,/Dockerfile.cpu,WORKDIR,4,"['/app', '/app/server', '/app', '/app/server']"
johnolafenwa/DeepStack,latest,/Dockerfile.cpu,COPY,9,"['./sharedfiles/yolov5m.pt /app/sharedfiles/yolov5m.pt', './sharedfiles/face.pt /app/sharedfiles/face.pt', './sharedfiles/facerec-high.model /app/sharedfiles/facerec-high.model', './sharedfiles/scene.pt /app/sharedfiles/scene.pt', './sharedfiles/categories_places365.txt /app/sharedfiles/categories_places365.txt', './sharedfiles/bebygan_x4.pth /app/sharedfiles/bebygan_x4.pth', './server /app/server', './intelligencelayer /app/intelligencelayer', './init.py /app']"
johnolafenwa/DeepStack,latest,/Dockerfile.cpu,EXPOSE,1,['5000']
johnolafenwa/DeepStack,latest,/Dockerfile.cpu,CMD,1,"['[""/app/server/server""]']"
johnolafenwa/DeepStack,latest,/Dockerfile.gpu,FROM,1,['deepquestai/deepstack-base:gpu-1647248158 as gpu']
johnolafenwa/DeepStack,latest,/Dockerfile.gpu,ENV,9,"['SLEEP_TIME 0.01', 'TIMEOUT 60', 'SEND_LOGS True', 'CUDA_MODE True', 'APPDIR /app', 'DATA_DIR /datastore', 'TEMP_PATH /deeptemp/', 'PROFILE desktop_gpu', 'PATH=$PATH:/usr/local/go/bin']"
johnolafenwa/DeepStack,latest,/Dockerfile.gpu,RUN,23,"['mkdir /deeptemp', 'mkdir /datastore', 'apt-get install wget -y', 'wget https://go.dev/dl/go1.17.6.linux-amd64.tar.gz', 'rm -rf /usr/local/go && tar -C /usr/local -xzf go1.17.6.linux-amd64.tar.gz', 'rm go1.17.6.linux-amd64.tar.gz', 'pip install onnxruntime==0.5.0', 'pip3 install redis', 'pip3 install opencv-python', 'pip3 install Cython', 'pip3 install pillow', 'pip3 install scipy', 'pip3 install tqdm', 'pip3 install tensorboard', 'pip3 install PyYAML', 'pip3 install Matplotlib', 'pip3 install easydict', 'pip3 install future', 'pip3 install numpy', 'mkdir /app/sharedfiles', 'mkdir /app/server', 'go build', 'mkdir /app/intelligencelayer']"
johnolafenwa/DeepStack,latest,/Dockerfile.gpu,WORKDIR,4,"['/app', '/app/server', '/app', '/app/server']"
johnolafenwa/DeepStack,latest,/Dockerfile.gpu,COPY,9,"['./sharedfiles/yolov5m.pt /app/sharedfiles/yolov5m.pt', './sharedfiles/face.pt /app/sharedfiles/face.pt', './sharedfiles/facerec-high.model /app/sharedfiles/facerec-high.model', './sharedfiles/scene.pt /app/sharedfiles/scene.pt', './sharedfiles/categories_places365.txt /app/sharedfiles/categories_places365.txt', './sharedfiles/bebygan_x4.pth /app/sharedfiles/bebygan_x4.pth', './server /app/server', './intelligencelayer /app/intelligencelayer', './init.py /app']"
johnolafenwa/DeepStack,latest,/Dockerfile.gpu,EXPOSE,1,['5000']
johnolafenwa/DeepStack,latest,/Dockerfile.gpu,CMD,1,"['[""/app/server/server""]']"
johnolafenwa/DeepStack,latest,/Dockerfile.gpu-jetpack,FROM,1,['deepquestai/deepstack-base:gpu-jetpack as jetpack']
johnolafenwa/DeepStack,latest,/Dockerfile.gpu-jetpack,ENV,9,"['SLEEP_TIME 0.01', 'TIMEOUT 60', 'SEND_LOGS True', 'CUDA_MODE True', 'APPDIR /app', 'DATA_DIR /datastore', 'TEMP_PATH /deeptemp/', 'PROFILE jetson', 'PATH=$PATH:/usr/local/go/bin']"
johnolafenwa/DeepStack,latest,/Dockerfile.gpu-jetpack,RUN,20,"['mkdir /deeptemp', 'mkdir /datastore', 'wget https://go.dev/dl/go1.17.6.linux-arm64.tar.gz', 'rm -rf /usr/local/go && tar -C /usr/local -xzf go1.17.6.linux-arm64.tar.gz', 'rm go1.17.6.linux-arm64.tar.gz', 'pip3 install redis', 'pip3 install Cython', 'pip3 install pillow', 'pip3 install scipy', 'pip3 install tqdm', 'pip3 install PyYAML', 'pip3 install easydict', 'pip3 install future', 'pip3 install numpy', 'wget https://nvidia.box.com/shared/static/6lxbakd8zaf2p5nkgcn7ih116iqm1wzm.whl -O onnxruntime_gpu-1.5.2-cp36-cp36m-linux_aarch64.whl', 'pip3 install onnxruntime_gpu-1.5.2-cp36-cp36m-linux_aarch64.whl', 'mkdir /app/sharedfiles', 'mkdir /app/server', 'go build', 'mkdir /app/intelligencelayer']"
johnolafenwa/DeepStack,latest,/Dockerfile.gpu-jetpack,WORKDIR,4,"['/app', '/app/server', '/app', '/app/server']"
johnolafenwa/DeepStack,latest,/Dockerfile.gpu-jetpack,COPY,9,"['./sharedfiles/yolov5s.pt /app/sharedfiles/yolov5s.pt', './sharedfiles/face_lite.pt /app/sharedfiles/face_lite.pt', './sharedfiles/facerec-high.model /app/sharedfiles/facerec-high.model', './sharedfiles/scene.pt /app/sharedfiles/scene.pt', './sharedfiles/categories_places365.txt /app/sharedfiles/categories_places365.txt', './sharedfiles/bebygan_x4.pth /app/sharedfiles/bebygan_x4.pth', './server /app/server', './intelligencelayer /app/intelligencelayer', './init.py /app']"
johnolafenwa/DeepStack,latest,/Dockerfile.gpu-jetpack,EXPOSE,1,['5000']
johnolafenwa/DeepStack,latest,/Dockerfile.gpu-jetpack,CMD,1,"['[""/app/server/server""]']"
johnolafenwa/DeepStack,latest,/Dockerfile.arm64-rpi,FROM,1,['deepquestai/deepstack-base:arm64 as arm']
johnolafenwa/DeepStack,latest,/Dockerfile.arm64-rpi,ENV,9,"['SLEEP_TIME 0.01', 'TIMEOUT 60', 'SEND_LOGS True', 'CUDA_MODE False', 'APPDIR /app', 'DATA_DIR /datastore', 'TEMP_PATH /deeptemp/', 'PROFILE arm64_rpi', 'PATH=$PATH:/usr/local/go/bin']"
johnolafenwa/DeepStack,latest,/Dockerfile.arm64-rpi,RUN,18,"['mkdir /deeptemp', 'mkdir /datastore', 'wget https://go.dev/dl/go1.17.6.linux-arm64.tar.gz', 'rm -rf /usr/local/go && tar -C /usr/local -xzf go1.17.6.linux-arm64.tar.gz', 'rm go1.17.6.linux-arm64.tar.gz', 'pip3 install redis', 'pip3 install Cython', 'pip3 install pillow', 'pip3 install scipy', 'pip3 install tqdm', 'pip3 install PyYAML', 'pip3 install easydict', 'pip3 install future', 'pip3 install numpy', 'mkdir /app/sharedfiles', 'mkdir /app/server', 'go build', 'mkdir /app/intelligencelayer']"
johnolafenwa/DeepStack,latest,/Dockerfile.arm64-rpi,WORKDIR,4,"['/app', '/app/server', '/app', '/app/server']"
johnolafenwa/DeepStack,latest,/Dockerfile.arm64-rpi,COPY,9,"['./sharedfiles/yolov5s.pt /app/sharedfiles/yolov5s.pt', './sharedfiles/face_lite.pt /app/sharedfiles/face_lite.pt', './sharedfiles/facerec-high.model /app/sharedfiles/facerec-high.model', './sharedfiles/scene.pt /app/sharedfiles/scene.pt', './sharedfiles/categories_places365.txt /app/sharedfiles/categories_places365.txt', './sharedfiles/bebygan_x4.pth /app/sharedfiles/bebygan_x4.pth', './server /app/server', './intelligencelayer /app/intelligencelayer', './init.py /app']"
johnolafenwa/DeepStack,latest,/Dockerfile.arm64-rpi,EXPOSE,1,['5000']
johnolafenwa/DeepStack,latest,/Dockerfile.arm64-rpi,CMD,1,"['[""/app/server/server""]']"
johnolafenwa/DeepStack,latest,/Dockerfile.arm64-cpu,FROM,1,['deepquestai/deepstack-base:arm64 as arm']
johnolafenwa/DeepStack,latest,/Dockerfile.arm64-cpu,ENV,9,"['SLEEP_TIME 0.01', 'TIMEOUT 60', 'SEND_LOGS True', 'CUDA_MODE False', 'APPDIR /app', 'DATA_DIR /datastore', 'TEMP_PATH /deeptemp/', 'PROFILE arm64_cpu', 'PATH=$PATH:/usr/local/go/bin']"
johnolafenwa/DeepStack,latest,/Dockerfile.arm64-cpu,RUN,18,"['mkdir /deeptemp', 'mkdir /datastore', 'wget https://go.dev/dl/go1.17.6.linux-arm64.tar.gz', 'rm -rf /usr/local/go && tar -C /usr/local -xzf go1.17.6.linux-arm64.tar.gz', 'rm go1.17.6.linux-arm64.tar.gz', 'pip3 install redis', 'pip3 install Cython', 'pip3 install pillow', 'pip3 install scipy', 'pip3 install tqdm', 'pip3 install PyYAML', 'pip3 install easydict', 'pip3 install future', 'pip3 install numpy', 'mkdir /app/sharedfiles', 'mkdir /app/server', 'go build', 'mkdir /app/intelligencelayer']"
johnolafenwa/DeepStack,latest,/Dockerfile.arm64-cpu,WORKDIR,4,"['/app', '/app/server', '/app', '/app/server']"
johnolafenwa/DeepStack,latest,/Dockerfile.arm64-cpu,COPY,9,"['./sharedfiles/yolov5m.pt /app/sharedfiles/yolov5m.pt', './sharedfiles/face.pt /app/sharedfiles/face.pt', './sharedfiles/facerec-high.model /app/sharedfiles/facerec-high.model', './sharedfiles/scene.pt /app/sharedfiles/scene.pt', './sharedfiles/categories_places365.txt /app/sharedfiles/categories_places365.txt', './sharedfiles/bebygan_x4.pth /app/sharedfiles/bebygan_x4.pth', './server /app/server', './intelligencelayer /app/intelligencelayer', './init.py /app']"
johnolafenwa/DeepStack,latest,/Dockerfile.arm64-cpu,EXPOSE,1,['5000']
johnolafenwa/DeepStack,latest,/Dockerfile.arm64-cpu,CMD,1,"['[""/app/server/server""]']"
johnolafenwa/DeepStack,latest,/rpi/Dockerfile.rpi,FROM,1,['deepquestai/deepstack:cpu-arm64']
johnolafenwa/DeepStack,latest,/rpi/Dockerfile.rpi,WORKDIR,1,['/app']
johnolafenwa/DeepStack,latest,/rpi/Dockerfile.rpi,COPY,2,"['torch-1.7.0a0-cp37-cp37m-linux_aarch64.whl /app/torch-1.7.0a0-cp37-cp37m-linux_aarch64.whl', 'torchvision-0.8.0a0+45f960c-cp37-cp37m-linux_aarch64.whl /app/torchvision-0.8.0a0+45f960c-cp37-cp37m-linux_aarch64.whl']"
johnolafenwa/DeepStack,latest,/base/Dockerfile.cpu,FROM,1,['python:3.7']
johnolafenwa/DeepStack,latest,/base/Dockerfile.cpu,RUN,4,"['apt-get update -y', 'apt-get install redis-server -y', 'pip3 install --upgrade setuptools pip', 'apt-get install libsm6 libxext6 libxrender1 libglib2.0-0 ffmpeg -y']"
johnolafenwa/DeepStack,latest,/base/Dockerfile.gpu,FROM,1,['deepquestai/deepstack-base:cuda']
johnolafenwa/DeepStack,latest,/base/Dockerfile.gpu,RUN,1,['apt-get install libsm6 libxext6 libxrender1 libglib2.0-0 ffmpeg -y']
johnolafenwa/DeepStack,latest,/base/Dockerfile.cuda,FROM,1,['nvidia/cuda:10.1-cudnn7-runtime-ubuntu16.04']
johnolafenwa/DeepStack,latest,/base/Dockerfile.cuda,RUN,10,"['apt-get update -y', 'apt install software-properties-common -y', 'add-apt-repository ppa:deadsnakes/ppa -y', 'apt update -y', 'apt-get install python3.7 -y', 'update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.7 0', 'apt-get install python3-pip -y', 'apt-get install redis-server -y', 'pip3 install --upgrade setuptools pip', 'apt-get install libsm6 libxext6 libxrender1 libglib2.0-0 ffmpeg -y']"
learning-at-home/hivemind,latest,/Dockerfile,FROM,1,['nvcr.io/nvidia/cuda:10.2-cudnn8-devel-ubuntu18.04']
learning-at-home/hivemind,latest,/Dockerfile,LABEL,2,"['maintainer=""Learning@home""', 'repository=""hivemind""']"
learning-at-home/hivemind,latest,/Dockerfile,WORKDIR,1,['/home']
learning-at-home/hivemind,latest,/Dockerfile,RUN,6,"['echo ""LC_ALL=en_US.UTF-8"" >> /etc/environment', 'apt-get update && apt-get install -y --no-install-recommends --force-yes   build-essential   wget   git   vim   && apt-get clean autoclean && rm -rf /var/lib/apt/lists/{apt,dpkg,cache,log} /tmp/* /var/tmp/*', 'wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O install_miniconda.sh &&   bash install_miniconda.sh -b -p /opt/conda && rm install_miniconda.sh', 'conda install python~=3.8 pip &&     pip install --no-cache-dir torch torchvision torchaudio &&     conda clean --all', 'pip install --no-cache-dir -r hivemind/requirements.txt &&     pip install --no-cache-dir -r hivemind/requirements-dev.txt &&     pip install --no-cache-dir -r hivemind/examples/albert/requirements.txt &&     rm -rf ~/.cache/pip', 'cd hivemind &&     pip install --no-cache-dir .[dev] &&     conda clean --all && rm -rf ~/.cache/pip']"
learning-at-home/hivemind,latest,/Dockerfile,ENV,1,"['PATH=""/opt/conda/bin:${PATH}""']"
learning-at-home/hivemind,latest,/Dockerfile,COPY,4,"['requirements.txt hivemind/requirements.txt', 'requirements-dev.txt hivemind/requirements-dev.txt', 'examples/albert/requirements.txt hivemind/examples/albert/requirements.txt', '. hivemind/']"
learning-at-home/hivemind,latest,/Dockerfile,CMD,1,['bash']
obsei/obsei,latest,/Dockerfile,FROM,1,['python:3.9-slim-buster']
obsei/obsei,latest,/Dockerfile,RUN,8,"['useradd --create-home user', 'mkdir -p /usr/share/man/man1', 'apt-get update && apt-get upgrade -y && apt-get install -y curl git pkg-config cmake libncurses5', 'apt-get clean autoclean && apt-get autoremove -y', 'rm -rf /var/lib/{apt,dpkg,cache,log}/', 'pip install --upgrade pip', 'pip install --no-cache-dir -r requirements.txt', 'pip install -e .']"
obsei/obsei,latest,/Dockerfile,WORKDIR,1,['/home/user']
obsei/obsei,latest,/Dockerfile,ENV,5,"['PIP_DISABLE_PIP_VERSION_CHECK 1', 'PIP_NO_CACHE_DIR 1', ""WORKFLOW_SCRIPT '/home/user/obsei/process_workflow.py'"", 'OBSEI_CONFIG_PATH """"', 'OBSEI_CONFIG_FILENAME """"']"
obsei/obsei,latest,/Dockerfile,COPY,3,"['setup.py requirements.txt README.md /home/user/', 'README.md /home/user/', 'obsei /home/user/obsei']"
obsei/obsei,latest,/Dockerfile,USER,1,['user']
obsei/obsei,latest,/Dockerfile,CMD,1,"['[""sh"", ""-c"", ""python ${WORKFLOW_SCRIPT}""]']"
obsei/obsei,latest,/sample-ui/Dockerfile,FROM,1,['python:3.8-slim-buster']
obsei/obsei,latest,/sample-ui/Dockerfile,WORKDIR,1,['/home/user']
obsei/obsei,latest,/sample-ui/Dockerfile,RUN,5,"['apt-get update && apt-get install -y curl pkg-config cmake git', 'apt-get clean autoclean && apt-get autoremove -y', 'rm -rf /var/lib/{apt,dpkg,cache,log}/', 'pip install --upgrade pip', 'pip install --no-cache-dir -r requirements.txt']"
obsei/obsei,latest,/sample-ui/Dockerfile,COPY,4,"['ui.py /home/user/', 'utils.py /home/user/', 'config.yaml /home/user/', 'requirements.txt /home/user/']"
obsei/obsei,latest,/sample-ui/Dockerfile,EXPOSE,1,['8501']
obsei/obsei,latest,/sample-ui/Dockerfile,CMD,1,"['[""streamlit"", ""run"", ""ui.py""]']"
kubedl-io/kubedl,latest,/Dockerfile,FROM,2,"['golang:1.16.9 as builder', 'gcr.io/distroless/static:nonroot']"
kubedl-io/kubedl,latest,/Dockerfile,WORKDIR,2,"['/workspace', '/']"
kubedl-io/kubedl,latest,/Dockerfile,COPY,4,"['go.mod go.mod', 'go.sum go.sum', '. .', '--from=builder /workspace/manager .']"
kubedl-io/kubedl,latest,/Dockerfile,RUN,2,"['go mod download', 'CGO_ENABLED=0 GOOS=linux GOARCH=amd64 GO111MODULE=on go build -a -o manager main.go']"
kubedl-io/kubedl,latest,/Dockerfile,USER,1,['nonroot:nonroot']
kubedl-io/kubedl,latest,/Dockerfile,ENTRYPOINT,1,"['[""/manager""]']"
kubedl-io/kubedl,latest,/Dockerfile.dashboard,FROM,3,"['node:13.12.0 as frontend-builder', 'golang:1.13.6 as backend-builder', 'gcr.io/distroless/static:nonroot']"
kubedl-io/kubedl,latest,/Dockerfile.dashboard,WORKDIR,3,"['/workspace', '/workspace', '/']"
kubedl-io/kubedl,latest,/Dockerfile.dashboard,COPY,4,"['console/frontend/ .', '. .', '--from=frontend-builder /workspace/dist ./dist', '--from=backend-builder /workspace/backend-server ./backend-server']"
kubedl-io/kubedl,latest,/Dockerfile.dashboard,RUN,4,"['rm -rf ./dist && rm -rf ./node_modules && rm -f ./package-lock.json', 'npm install', 'npm run build', 'CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build  -o backend-server console/backend/cmd/backend-server/main.go']"
kubedl-io/kubedl,latest,/Dockerfile.dashboard,USER,1,['nonroot:nonroot']
kubedl-io/kubedl,latest,/Dockerfile.dashboard,ENTRYPOINT,1,"['[""/backend-server""]']"
kubedl-io/kubedl,latest,/config/samples/model/dockerfile_configmap.yaml,APIVERSION:,1,['v1']
kubedl-io/kubedl,latest,/config/samples/model/dockerfile_configmap.yaml,KIND:,1,['ConfigMap']
kubedl-io/kubedl,latest,/config/samples/model/dockerfile_configmap.yaml,METADATA:,1,['']
kubedl-io/kubedl,latest,/config/samples/model/dockerfile_configmap.yaml,NAME:,1,['dockerfile']
kubedl-io/kubedl,latest,/config/samples/model/dockerfile_configmap.yaml,NAMESPACE:,1,['default']
kubedl-io/kubedl,latest,/config/samples/model/dockerfile_configmap.yaml,DATA:,1,['']
kubedl-io/kubedl,latest,/config/samples/model/dockerfile_configmap.yaml,DOCKERFILE:,1,['|']
kubedl-io/kubedl,latest,/config/samples/model/dockerfile_configmap.yaml,FROM,1,['busybox']
kubedl-io/kubedl,latest,/config/samples/model/dockerfile_configmap.yaml,COPY,1,['build/ /kubedl-model']
kubedl-io/kubedl,latest,/example/tf/Dockerfile,FROM,1,['tensorflow/tensorflow:1.11.0']
kubedl-io/kubedl,latest,/example/tf/Dockerfile,COPY,1,['keras_model_to_estimator.py /']
kubedl-io/kubedl,latest,/example/tf/Dockerfile,ENTRYPOINT,1,"['[""python"", ""/keras_model_to_estimator.py"", ""/tmp/tfkeras_example/"", ""/model""]']"
nlpodyssey/spago,latest,/Dockerfile,FROM,2,"['golang:1.15.6-alpine3.12 as Builder', 'scratch']"
nlpodyssey/spago,latest,/Dockerfile,RUN,6,"['set -eux; \tapk add --no-cache --virtual .build-deps \t\tca-certificates \t\tgcc \t\tmusl-dev \t\topenssl         ;', 'adduser -S spago', 'mkdir /build', 'go mod download', 'GOOS=linux GOARCH=amd64 CGO_ENABLED=0 go build -ldflags=""-extldflags=-static"" -o docker-entrypoint docker-entrypoint.go', 'mkdir /etc/ssl/certs/spago \t&& openssl req \t\t-x509 \t\t-nodes \t\t-newkey rsa:2048 \t\t-keyout /etc/ssl/certs/spago/server.key \t\t-out /etc/ssl/certs/spago/server.crt \t\t-days 3650 \t\t-subj ""/C=IT/ST=Piedmont/L=Torino/O=NLP Odyssey/OU=spaGo/emailAddress=matteogrella@gmail.com/CN=*"" \t&& chmod +r /etc/ssl/certs/spago/server.key \t;']"
nlpodyssey/spago,latest,/Dockerfile,ADD,1,['. /build/']
nlpodyssey/spago,latest,/Dockerfile,WORKDIR,1,['/build']
nlpodyssey/spago,latest,/Dockerfile,COPY,5,"['--from=Builder /etc/passwd /etc/passwd', '--from=Builder /etc/ssl/certs/ca-certificates.crt /etc/ssl/certs/ca-certificates.crt', '--from=Builder /etc/ssl/certs/spago/server.crt /etc/ssl/certs/spago/server.crt', '--from=Builder /etc/ssl/certs/spago/server.key /etc/ssl/certs/spago/server.key', '--from=Builder /build/docker-entrypoint /docker-entrypoint']"
nlpodyssey/spago,latest,/Dockerfile,USER,1,['spago']
nlpodyssey/spago,latest,/Dockerfile,ENV,2,"['GOOS linux', 'GOARCH amd64']"
nlpodyssey/spago,latest,/Dockerfile,ENTRYPOINT,1,"['[""/docker-entrypoint""]']"
nlpodyssey/spago,latest,/Dockerfile,CMD,1,"['[""help""]']"
sony/nnabla-examples,latest,/Dockerfile,ARG,9,"['CUDA_VER=11.0', 'CUDNN_VER=8', 'PIP_INS_OPTS', 'PYTHONWARNINGS', 'CURL_OPTS', 'WGET_OPTS', 'APT_OPTS', 'PYTHON_VER=3.8', 'CUDA_VER=11.0']"
sony/nnabla-examples,latest,/Dockerfile,FROM,1,['nvidia/cuda:${CUDA_VER}-cudnn${CUDNN_VER}-runtime-ubuntu18.04']
sony/nnabla-examples,latest,/Dockerfile,ENV,2,"['PATH /opt/miniconda3/bin:$PATH', 'OMP_NUM_THREADS 1']"
sony/nnabla-examples,latest,/Dockerfile,RUN,9,"['eval ${APT_OPTS} && apt-get update && apt-get install -y --no-install-recommends     wget     bzip2     curl     libopenmpi-dev     openmpi-bin     ssh     libglib2.0-0     libgl1-mesa-glx     python${PYTHON_VER}     python3-pip     && rm -rf /var/lib/apt/lists/*', 'update-alternatives --install /usr/bin/python3 python3 /usr/bin/python${PYTHON_VER} 0', 'pip3 install ${PIP_INS_OPTS} --upgrade pip', 'pip install ${PIP_INS_OPTS} wheel setuptools', 'pip install ${PIP_INS_OPTS} opencv-python || true', 'pip install ${PIP_INS_OPTS} jupyter', ""umask 0     && CUDA_VER_NDOT=`echo $CUDA_VER | sed 's/\\.//g'`     && pip install ${PIP_INS_OPTS} nnabla-ext-cuda${CUDA_VER_NDOT}-nccl2-mpi2-1-1"", ""umask 0     && CUDA_VER_NDOT=`echo $CUDA_VER | sed 's/\\.//g'`     && pip install ${PIP_INS_OPTS} --extra-index-url https://developer.download.nvidia.com/compute/redist --upgrade nvidia-dali-cuda${CUDA_VER_NDOT}"", 'update-alternatives --install /usr/bin/python python /usr/bin/python${PYTHON_VER} 0']"
sony/nnabla-examples,latest,/imagenet-classification/reference_weight_converter/Dockerfile.caffe-senet,FROM,1,['ubuntu:16.04']
sony/nnabla-examples,latest,/imagenet-classification/reference_weight_converter/Dockerfile.caffe-senet,ARG,4,"['PIP_INS_OPTS', 'PYTHONWARNINGS', 'CURL_OPTS', 'WGET_OPTS']"
sony/nnabla-examples,latest,/imagenet-classification/reference_weight_converter/Dockerfile.caffe-senet,RUN,5,"['apt-get update && apt-get install -y --no-install-recommends         build-essential         cmake         git         wget         libatlas-base-dev         libboost-all-dev         libgflags-dev         libgoogle-glog-dev         libhdf5-serial-dev         libleveldb-dev         liblmdb-dev         libopencv-dev         libprotobuf-dev         libsnappy-dev         protobuf-compiler         python-dev         python-numpy         python-pip         python-setuptools         python-scipy \tpython-opencv &&     rm -rf /var/lib/apt/lists/*', 'git clone -b ${CLONE_TAG} --depth 1 https://github.com/BVLC/caffe.git . &&     wget ${WGET_OPTS} https://raw.githubusercontent.com/hujie-frank/SENet/master/include/caffe/layers/axpy_layer.hpp &&     wget ${WGET_OPTS} https://raw.githubusercontent.com/hujie-frank/SENet/master/src/caffe/layers/axpy_layer.cpp &&     mv axpy_layer.hpp include/caffe/layers &&     mv axpy_layer.cpp src/caffe/layers &&     pip install ${PIP_INS_OPTS} --upgrade pip &&     cd python && for req in $(cat requirements.txt) pydot; do pip install ${PIP_INS_OPTS} $req; done && cd .. &&     mkdir build && cd build &&     cmake -DCPU_ONLY=1 .. &&     make -j""$(nproc)""', 'echo ""$CAFFE_ROOT/build/lib"" >> /etc/ld.so.conf.d/caffe.conf && ldconfig', 'pip install ${PIP_INS_OPTS} jupyter', 'pip install ${PIP_INS_OPTS} nnabla']"
sony/nnabla-examples,latest,/imagenet-classification/reference_weight_converter/Dockerfile.caffe-senet,ENV,5,"['CAFFE_ROOT=/opt/caffe', 'CLONE_TAG=1.0', 'PYCAFFE_ROOT $CAFFE_ROOT/python', 'PYTHONPATH $PYCAFFE_ROOT:$PYTHONPATH', 'PATH $CAFFE_ROOT/build/tools:$PYCAFFE_ROOT:$PATH']"
sony/nnabla-examples,latest,/imagenet-classification/reference_weight_converter/Dockerfile.caffe-senet,WORKDIR,2,"['$CAFFE_ROOT', '/workspace']"
sony/nnabla-examples,latest,/shape-reconstruction/implicit-differentiable-renderer/Dockerfile,FROM,2,"['ubuntu:18.04 as openmpi', 'nvidia/cuda:11.0-cudnn8-devel-ubuntu18.04']"
sony/nnabla-examples,latest,/shape-reconstruction/implicit-differentiable-renderer/Dockerfile,RUN,21,"['apt-get update', 'apt-get install -y --no-install-recommends         build-essential         curl         gfortran         libibverbs-dev', 'apt-get install -y --no-install-recommends ca-certificates', 'mkdir /tmp/openmpi', 'curl https://download.open-mpi.org/release/open-mpi/v3.1/openmpi-3.1.6.tar.bz2 -o /tmp/openmpi/openmpi-3.1.6.tar.bz2', 'tar Cxvf /tmp/openmpi /tmp/openmpi/openmpi-3.1.6.tar.bz2', 'cd tmp/openmpi/openmpi-3.1.6     && ./configure         --prefix=/opt/openmpi --enable-orterun-prefix-by-default --with-sge         CC=gcc         CXX=g++         F77=gfortran         FC=gfortran     && make -j8     && make install', 'apt-get update     && apt-get install -y --no-install-recommends        bzip2        ca-certificates        curl        libglib2.0-0        libgl1-mesa-glx        python3.8        python3-pip        openssh-client     && rm -rf /var/lib/apt/lists/*', 'update-alternatives --install /usr/bin/python python /usr/bin/python3.8 0', 'update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.8 0', 'pip3 install --upgrade pip', 'pip install wheel setuptools', 'pip install opencv-python || true', 'pip install --extra-index-url https://developer.download.nvidia.com/compute/redist nvidia-dali-cuda110     || echo ""Skip DALI installation (CUDA=11.0)""', 'pip install nnabla-ext-cuda110-nccl2-mpi3.1.6==${NNABLA_VER}', 'echo NCCL_SHM_DISABLE=1 >> /etc/nccl.conf', 'echo NCCL_P2P_LEVEL=SYS >> /etc/nccl.conf', 'useradd -m nnabla', 'chown -R nnabla:nnabla /home/nnabla', 'pip install -r /tmp/requirements.txt', 'apt-get update && apt-get install -y libusb-1.0-0']"
sony/nnabla-examples,latest,/shape-reconstruction/implicit-differentiable-renderer/Dockerfile,COPY,2,"['--from=openmpi /opt/openmpi /opt/openmpi', 'requirements.txt /tmp/requirements.txt']"
sony/nnabla-examples,latest,/shape-reconstruction/implicit-differentiable-renderer/Dockerfile,ENV,3,"['PATH /opt/openmpi/bin:$PATH', 'LD_LIBRARY_PATH /opt/openmpi/lib:$LD_LIBRARY_PATH', 'PYTHONPATH /opt/lib:$PYTHONPATH']"
sony/nnabla-examples,latest,/shape-reconstruction/implicit-differentiable-renderer/Dockerfile,ARG,1,['NNABLA_VER']
sony/nnabla-examples,latest,/shape-reconstruction/implicit-differentiable-renderer/Dockerfile,USER,1,['nnabla']
sony/nnabla-examples,latest,/shape-reconstruction/implicit-differentiable-renderer/Dockerfile,WORKDIR,1,['/home/nnabla']
sony/nnabla-examples,latest,/shape-reconstruction/implicit-differentiable-renderer/Dockerfile,CMD,1,"['[ ""/bin/bash"" ]']"
sony/nnabla-examples,latest,/shape-reconstruction/implicit-geometric-regularization/docker/Dockerfile,FROM,1,['nnabla/nnabla-ext-cuda-multi-gpu:py38-cuda100-multi-gpu-ubuntu18-v1.8.0']
sony/nnabla-examples,latest,/shape-reconstruction/implicit-geometric-regularization/docker/Dockerfile,ARG,4,"['PIP_INS_OPTS', 'PYTHONWARNINGS', 'CURL_OPTS', 'WGET_OPTS']"
sony/nnabla-examples,latest,/shape-reconstruction/implicit-geometric-regularization/docker/Dockerfile,LABEL,1,"['maintainer=""Kauki.Yoshiyama@sony.com""']"
sony/nnabla-examples,latest,/shape-reconstruction/implicit-geometric-regularization/docker/Dockerfile,RUN,3,"['apt-get update', 'apt-get install -y   less   libgl1-mesa-glx   libgomp1', 'pip install ${PIP_INS_OPTS} --proxy ${HTTP_PROXY} open3d scikit-image scipy tqdm']"
sony/nnabla-examples,latest,/shape-reconstruction/implicit-geometric-regularization/docker/Dockerfile,ENV,1,['HTTP_PROXY ${http_proxy}']
sony/nnabla-examples,latest,/speech-synthesis/HiFiGAN/docker/Dockerfile,FROM,1,['nnabla/nnabla-ext-cuda-multi-gpu:py38-cuda110-mpi3.1.6-v1.20.1']
sony/nnabla-examples,latest,/speech-synthesis/HiFiGAN/docker/Dockerfile,ENV,2,"['HTTP_PROXY ${http_proxy}', 'HTTPS_PROXY ${https_proxy}']"
sony/nnabla-examples,latest,/speech-synthesis/HiFiGAN/docker/Dockerfile,USER,1,['root']
sony/nnabla-examples,latest,/speech-synthesis/HiFiGAN/docker/Dockerfile,RUN,5,"['apt-get update', 'apt-get install -y libsndfile1', 'pip install --upgrade pip', 'pip install tqdm librosa numba==0.48.0 matplotlib', 'pip install tensorboard tensorboardX']"
intel/openfl,latest,/openfl-docker/Dockerfile.workspace,ARG,4,"['BASE_IMAGE=openfl:latest', 'USER_ID=10001', 'GROUP_ID=1001', 'WORKSPACE_NAME']"
intel/openfl,latest,/openfl-docker/Dockerfile.workspace,FROM,1,['${BASE_IMAGE}']
intel/openfl,latest,/openfl-docker/Dockerfile.workspace,ENV,1,['username=user']
intel/openfl,latest,/openfl-docker/Dockerfile.workspace,RUN,7,"['addgroup --gid $GROUP_ID $username', ""adduser --disabled-password --gecos '' --uid $USER_ID --gid $GROUP_ID $username"", 'chmod -R a+rw .', 'chmod -R a+rwx /usr/local', 'fx workspace import --archive ${WORKSPACE_NAME}.zip', 'mv ${WORKSPACE_NAME} workspace', 'pip install -r requirements.txt']"
intel/openfl,latest,/openfl-docker/Dockerfile.workspace,WORKDIR,2,"['/home/user', '/home/user/workspace']"
intel/openfl,latest,/openfl-docker/Dockerfile.workspace,USER,1,['user']
intel/openfl,latest,/openfl-docker/Dockerfile.workspace,COPY,1,['${WORKSPACE_NAME}.zip .']
intel/openfl,latest,/openfl-docker/Dockerfile.base,FROM,1,['ubuntu:18.04']
intel/openfl,latest,/openfl-docker/Dockerfile.base,SHELL,1,"['[""/bin/bash"", ""-o"", ""pipefail"", ""-c""]']"
intel/openfl,latest,/openfl-docker/Dockerfile.base,WORKDIR,2,"['/tmp', '/openfl']"
intel/openfl,latest,/openfl-docker/Dockerfile.base,RUN,5,"[""dpkg --get-selections | grep -v deinstall | awk '{print $1}' > base_packages.txt  &&     rm -rf /var/lib/apt/lists/*"", 'apt-get update &&     apt-get install -y --no-install-recommends         openssh-server=\\*         python3.8=\\*         python3-distutils=\\*         curl=\\*         ca-certificates=\\* &&     dpkg --get-selections | grep -v deinstall | awk \'{print $1}\' > all_packages.txt &&     sed -Ei \'s/# deb-src /deb-src /\' /etc/apt/sources.list &&     apt-get update &&     grep -v -f base_packages.txt all_packages.txt | while read -r line; do         package=$line;         name=(""${package//:/ }"");         grep -l GPL /usr/share/doc/""${name[0]}""/copyright;         exit_status=$?;         if [ $exit_status -eq 0 ]; then             apt-get source -q --download-only ""$package"";          fi     done && rm -rf ./*.txt &&     curl -L https://files.pythonhosted.org/packages/06/a9/cd1fd8ee13f73a4d4f491ee219deeeae20afefa914dfb4c130cfc9dc397a/certifi-2020.12.5.tar.gz --output certifi-2020.12.5.tar.gz &&     curl -L https://files.pythonhosted.org/packages/ee/2d/9cdc2b527e127b4c9db64b86647d567985940ac3698eeabc7ffaccb4ea61/chardet-4.0.0.tar.gz --output chardet-4.0.0.tar.gz &&     curl -L https://files.pythonhosted.org/packages/a3/7a/561526861908d366ddc2764933a6090078654b0f2ff20c3c180dd5851554/pyzmq-22.0.3.tar.gz --output pyzmq-22.0.3.tar.gz &&     echo ""Download source for $(find . | wc -l) third-party packages: $(du -sh)"" &&     rm -rf /var/lib/apt/lists/*', 'update-alternatives --install /usr/bin/python python /usr/bin/python3.8 1', 'curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py && python get-pip.py && rm -rf get-pip.py', 'pip install --no-cache-dir  .']"
intel/openfl,latest,/openfl-docker/Dockerfile.base,COPY,1,['. .']
intel/openfl,latest,/openfl-docker/Dockerfile.base,HEALTHCHECK,1,"['--interval=30m --timeout=3s   CMD echo ""Container works"" || exit 1']"
intel/openfl,latest,/openfl-docker/Dockerfile.base,CMD,1,"['[ ""/bin/bash"" ]']"
autogoal/autogoal,latest,/dockerfile,FROM,1,['tensorflow/tensorflow:latest-gpu-py3']
autogoal/autogoal,latest,/dockerfile,RUN,12,"['pip install -U pip', 'pip install tensorflow_addons==0.9.1', 'pip install torch torchvision', 'apt-get update  && apt-get install -y     curl     dumb-init     htop     locales     man     nano     git     procps     ssh     sudo     vim     graphviz   && rm -rf /var/lib/apt/lists/*', 'sed -i ""s/# en_US.UTF-8/en_US.UTF-8/"" /etc/locale.gen   && locale-gen', 'chsh -s /bin/bash', 'adduser --gecos \'\' --disabled-password coder &&   echo ""coder ALL=(ALL) NOPASSWD:ALL"" >> /etc/sudoers.d/nopasswd', 'chmod +x /etc/bash.bashrc', 'make env', 'poetry install -E dev -E contrib', 'mkdir -p /home/coder/.autogoal/data && chown coder:coder /home/coder/.autogoal', 'sudo ln -s /home/coder/autogoal/autogoal /usr/lib/python3/dist-packages/autogoal']"
autogoal/autogoal,latest,/dockerfile,ENV,4,"['LANG=en_US.UTF-8', 'SHELL=/bin/bash', 'BUILD_ENVIRONMENT=""development""', 'XDG_CACHE_HOME=""/opt/dev/cache""']"
autogoal/autogoal,latest,/dockerfile,COPY,3,"['bash.bashrc /etc', 'pyproject.toml poetry.lock makefile /home/coder/autogoal/', './ /home/coder/autogoal']"
autogoal/autogoal,latest,/dockerfile,WORKDIR,1,['/home/coder/autogoal']
autogoal/autogoal,latest,/dockerfile,EXPOSE,2,"['8501', '8000']"
autogoal/autogoal,latest,/dockerfile,USER,1,['coder']
autogoal/autogoal,latest,/dockerfile,VOLUME,1,['/home/coder/.autogoal']
autogoal/autogoal,latest,/dockerfile,CMD,1,"['[ ""python"", ""-m"", ""autogoal"", ""demo"" ]']"
autogoal/autogoal,latest,/tests/tests.dockerfile,FROM,1,['tensorflow/tensorflow:latest-gpu-py3']
autogoal/autogoal,latest,/tests/tests.dockerfile,RUN,10,"['pip install -U pip', 'pip install tensorflow_addons==0.9.1', 'pip install torch torchvision', 'chmod +x /etc/bash.bashrc', 'make env', 'poetry install -E dev -E contrib', 'python -m autogoal contrib download nltk', 'python -m autogoal contrib download transformers', 'python -m autogoal data download all', 'make test-full']"
autogoal/autogoal,latest,/tests/tests.dockerfile,COPY,3,"['bash.bashrc /etc', 'pyproject.toml poetry.lock makefile /autogoal/', './ /autogoal']"
autogoal/autogoal,latest,/tests/tests.dockerfile,ENV,1,"['BUILD_ENVIRONMENT=""development""']"
autogoal/autogoal,latest,/tests/tests.dockerfile,WORKDIR,1,['/autogoal']
autogoal/autogoal,latest,/tests/basic.dockerfile,FROM,1,['python:3.6']
autogoal/autogoal,latest,/tests/basic.dockerfile,ENV,1,"['BUILD_ENVIRONMENT=""development""']"
autogoal/autogoal,latest,/tests/basic.dockerfile,WORKDIR,1,['/home/coder/autogoal']
autogoal/autogoal,latest,/tests/basic.dockerfile,COPY,2,"['pyproject.toml poetry.lock makefile /home/coder/autogoal/', '. /home/coder/autogoal/']"
autogoal/autogoal,latest,/tests/basic.dockerfile,RUN,3,"['make env', 'poetry install --extras dev', 'make test-core']"
yoshida-lab/XenonPy,latest,/Dockerfile,FROM,1,['yoshidalab/base:cuda11']
yoshida-lab/XenonPy,latest,/Dockerfile,ARG,1,['key']
yoshida-lab/XenonPy,latest,/Dockerfile,ENV,1,['api_key=$key']
yoshida-lab/XenonPy,latest,/Dockerfile,WORKDIR,2,"['/opt/xenonpy', '/workspace']"
yoshida-lab/XenonPy,latest,/Dockerfile,COPY,1,['. .']
yoshida-lab/XenonPy,latest,/Dockerfile,RUN,1,"['sudo chown -R user:user /opt && find . | grep -E ""(__pycache__|\\.pyc|\\.pyo$)"" | xargs rm -rf &&     pip install --user -v .  && pytest tests -v && export api_key=""""']"
yoshida-lab/XenonPy,latest,/Dockerfile,EXPOSE,1,['8888']
yoshida-lab/XenonPy,latest,/Dockerfile,CMD,1,"['[ ""jupyter"" , ""lab"", ""--ip=0.0.0.0"", ""--no-browser"", ""--port=8888"", ""--allow-root""]']"
yoshida-lab/XenonPy,latest,/docker/cpu/Dockerfile,FROM,1,['yoshidalab/base:cpu']
yoshida-lab/XenonPy,latest,/docker/cpu/Dockerfile,WORKDIR,2,"['/opt/xenonpy', '/workspace']"
yoshida-lab/XenonPy,latest,/docker/cpu/Dockerfile,COPY,1,['. .']
yoshida-lab/XenonPy,latest,/docker/cpu/Dockerfile,RUN,1,"['sudo chown -R user:user /opt && find . | grep -E ""(__pycache__|\\.pyc|\\.pyo$)"" | xargs rm -rf &&     pip install --user -v .']"
yoshida-lab/XenonPy,latest,/docker/cpu/Dockerfile,EXPOSE,1,['8888']
yoshida-lab/XenonPy,latest,/docker/cpu/Dockerfile,CMD,1,"['[ ""jupyter"" , ""lab"", ""--ip=0.0.0.0"", ""--no-browser"", ""--port=8888"", ""--allow-root""]']"
yoshida-lab/XenonPy,latest,/docker/cuda9/Dockerfile,FROM,1,['yoshidalab/base:cuda9']
yoshida-lab/XenonPy,latest,/docker/cuda9/Dockerfile,WORKDIR,2,"['/opt/xenonpy', '/workspace']"
yoshida-lab/XenonPy,latest,/docker/cuda9/Dockerfile,COPY,1,['. .']
yoshida-lab/XenonPy,latest,/docker/cuda9/Dockerfile,RUN,1,"['sudo chown -R user:user /opt && find . | grep -E ""(__pycache__|\\.pyc|\\.pyo$)"" | xargs rm -rf &&     pip install --user -v .']"
yoshida-lab/XenonPy,latest,/docker/cuda9/Dockerfile,EXPOSE,1,['8888']
yoshida-lab/XenonPy,latest,/docker/cuda9/Dockerfile,CMD,1,"['[ ""jupyter"" , ""lab"", ""--ip=0.0.0.0"", ""--no-browser"", ""--port=8888"", ""--allow-root""]']"
yoshida-lab/XenonPy,latest,/docker/cuda10/Dockerfile,FROM,1,['yoshidalab/base:cuda10']
yoshida-lab/XenonPy,latest,/docker/cuda10/Dockerfile,WORKDIR,2,"['/opt/xenonpy', '/workspace']"
yoshida-lab/XenonPy,latest,/docker/cuda10/Dockerfile,COPY,1,['. .']
yoshida-lab/XenonPy,latest,/docker/cuda10/Dockerfile,RUN,1,"['sudo chown -R user:user /opt && find . | grep -E ""(__pycache__|\\.pyc|\\.pyo$)"" | xargs rm -rf &&     pip install --user -v .']"
yoshida-lab/XenonPy,latest,/docker/cuda10/Dockerfile,EXPOSE,1,['8888']
yoshida-lab/XenonPy,latest,/docker/cuda10/Dockerfile,CMD,1,"['[ ""jupyter"" , ""lab"", ""--ip=0.0.0.0"", ""--no-browser"", ""--port=8888"", ""--allow-root""]']"
yoshida-lab/XenonPy,latest,/docker/cuda11/Dockerfile,FROM,1,['yoshidalab/base:cuda11']
yoshida-lab/XenonPy,latest,/docker/cuda11/Dockerfile,WORKDIR,2,"['/opt/xenonpy', '/workspace']"
yoshida-lab/XenonPy,latest,/docker/cuda11/Dockerfile,COPY,1,['. .']
yoshida-lab/XenonPy,latest,/docker/cuda11/Dockerfile,RUN,1,"['sudo chown -R user:user /opt && find . | grep -E ""(__pycache__|\\.pyc|\\.pyo$)"" | xargs rm -rf &&     pip install --user -v .']"
yoshida-lab/XenonPy,latest,/docker/cuda11/Dockerfile,EXPOSE,1,['8888']
yoshida-lab/XenonPy,latest,/docker/cuda11/Dockerfile,CMD,1,"['[ ""jupyter"" , ""lab"", ""--ip=0.0.0.0"", ""--no-browser"", ""--port=8888"", ""--allow-root""]']"
bioinform/neusomatic,latest,/docker/Dockerfile,FROM,1,['ubuntu:16.04']
bioinform/neusomatic,latest,/docker/Dockerfile,ENV,19,"['NEUSOMATIC_VERSION 0.2.1', 'ZLIB_VERSION 1.2.11', 'NUMPY_VERSION 1.15.4', 'SCIPY_VERSION 1.2.0', 'IMAGEIO_VERSION 2.5.0', 'PYTORCH_VERSION 1.1.0', 'TORCHVISION_VERSION 0.3.0', 'CUDATOOLKIT_VERSION 9.0', 'CMAKE_VERSION 3.13.2', 'PYBEDTOOLS_VERSION 0.8.0', 'PYSAM_VERSION 0.15.2', 'SAMTOOLS_VERSION 1.9', 'TABIX_VERSION 0.2.6', 'BEDTOOLS_VERSION 2.27.1', 'BIOPYTHON_VERSION 1.72', 'GCC_VERSION 5', 'PATH=/miniconda/bin:${PATH}', 'LD_LIBRARY_PATH=/miniconda/lib:${LD_LIBRARY_PATH}', 'PATH=/opt/neusomatic/neusomatic/bin:/opt/neusomatic/neusomatic/python/:${PATH}']"
bioinform/neusomatic,latest,/docker/Dockerfile,RUN,13,"['apt-get update && apt-get install -y --fix-missing \t\t\t\tbuild-essential zlib1g-dev curl less vim bzip2', 'apt-get install -y --fix-missing git wget', 'curl -LO http://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh', 'bash Miniconda3-latest-Linux-x86_64.sh -p /miniconda -b', 'rm Miniconda3-latest-Linux-x86_64.sh', 'conda update -y conda', 'conda install -y zlib=${ZLIB_VERSION} numpy=${NUMPY_VERSION} scipy=${SCIPY_VERSION} \t\t\t\t\t imageio=${IMAGEIO_VERSION} && conda clean -a', 'conda install -y cmake=${CMAKE_VERSION} -c conda-forge && conda clean -a', 'conda install -y pysam=${PYSAM_VERSION} pybedtools=${PYBEDTOOLS_VERSION} \t\t\t\t\t samtools=${SAMTOOLS_VERSION} tabix=${TABIX_VERSION} \t\t\t\t\t bedtools=${BEDTOOLS_VERSION} \t\t\t\t\t biopython=${BIOPYTHON_VERSION} -c bioconda && conda clean -a', 'conda install -y pytorch=${PYTORCH_VERSION} \t\t\t\t\t torchvision=${TORCHVISION_VERSION} \t\t\t\t\t cudatoolkit=${CUDATOOLKIT_VERSION} -c pytorch && conda clean -a', 'apt-get install -y --fix-missing gcc-${GCC_VERSION} g++-${GCC_VERSION}', 'cd /opt/ && tar -xzvf v${NEUSOMATIC_VERSION}.tar.gz && mv neusomatic-${NEUSOMATIC_VERSION} neusomatic && rm /opt/v${NEUSOMATIC_VERSION}.tar.gz', 'cd /opt/neusomatic/ && ./build.sh']"
bioinform/neusomatic,latest,/docker/Dockerfile,ADD,1,['https://github.com/bioinform/neusomatic/archive/v${NEUSOMATIC_VERSION}.tar.gz /opt/v${NEUSOMATIC_VERSION}.tar.gz']
ml-tooling/ml-hub,latest,/Dockerfile,FROM,1,['mltooling/ssh-proxy:0.1.11']
ml-tooling/ml-hub,latest,/Dockerfile,WORKDIR,1,['/']
ml-tooling/ml-hub,latest,/Dockerfile,ENV,4,"['DEBIAN_FRONTEND=""noninteractive""    _SSL_RESOURCES_PATH=$_RESOURCES_PATH/ssl', 'PATH=/usr/local/openresty/nginx/sbin:$PATH', 'HUB_VERSION=$ARG_HUB_VERSION', 'DEFAULT_WORKSPACE_PORT=8080    SSH_PERMIT_TARGET_PORT=8080    SSH_PERMIT_TARGET_HOST=""ws-*""    START_NGINX=true    START_SSH=true    START_JHUB=true    START_CHP=false    EXECUTION_MODE=""local""    HUB_NAME=""mlhub""    CLEANUP_INTERVAL_SECONDS=3600    DYNAMIC_WHITELIST_ENABLED=""false""    IS_CLEANUP_SERVICE_ENABLED=""true""']"
ml-tooling/ml-hub,latest,/Dockerfile,RUN,12,"['apt-get update &&    apt-get install -y --no-install-recommends       build-essential libssl-dev zlib1g-dev       git       python3-dev       python3-setuptools       python3-wheel       libssl-dev       libcurl4-openssl-dev       build-essential       sqlite3       curl       dnsutils       $(bash -c \'if [[ $JUPYTERHUB_VERSION == ""git""* ]]; then         echo nodejs=8.10.0~dfsg-2ubuntu0.2 nodejs-dev=8.10.0~dfsg-2ubuntu0.2 npm;       fi\')       &&    clean-layer.sh', 'wget --quiet https://github.com/krallin/tini/releases/download/v0.18.0/tini -O /tini &&     chmod +x /tini', 'apt-get update &&     apt-get purge -y nginx nginx-common &&     apt-get install -y libssl-dev libpcre3 libpcre3-dev apache2-utils &&     mkdir $_RESOURCES_PATH""/openresty"" &&     cd $_RESOURCES_PATH""/openresty"" &&     wget --quiet https://openresty.org/download/openresty-1.15.8.1.tar.gz  -O ./openresty.tar.gz &&     tar xfz ./openresty.tar.gz &&     rm ./openresty.tar.gz &&     cd ./openresty-1.15.8.1/ &&     ./configure --with-http_stub_status_module --with-http_sub_module > /dev/null &&     make -j2 > /dev/null &&     make install > /dev/null &&     mkdir -p /var/log/nginx/ &&     touch /var/log/nginx/upstream.log &&     cd $_RESOURCES_PATH &&     rm -r $_RESOURCES_PATH""/openresty"" &&     chmod -R a+rwx $_RESOURCES_PATH &&     clean-layer.sh', 'apt-get update &&    curl -sL https://deb.nodesource.com/setup_10.x | bash - &&    apt-get install -y nodejs &&    clean-layer.sh', 'npm install -g configurable-http-proxy &&    python3 -m pip install --no-cache jupyterhub &&    clean-layer.sh', 'pip install --no-cache git+https://github.com/jupyterhub/dockerspawner@d1f27e2855d2cefbdb25b29cc069b9ca69d564e3 &&    pip install --no-cache git+https://github.com/ml-tooling/nativeauthenticator@9859a69dcc9d2ae8d827f192a1580d86f897e9f1 &&    pip install --no-cache git+https://github.com/jupyterhub/ldapauthenticator@b32a5ea23449edc0519ba4cd86dd0cc0c36896d5 &&    pip install --no-cache git+https://github.com/ryanlovett/imagespawner &&    pip install --no-cache /mlhubspawner &&    rm -r /mlhubspawner &&    pip install tornado==5.1.1 &&    clean-layer.sh', 'chmod u+rx /usr/local/bin/cull_idle_servers.py', 'pip3 install oauthenticator psutil yamlreader pyjwt          jupyterhub-kubespawner==0.11.*          kubernetes==10.0.*          pycurl==7.43.0.*', 'apt-get update && apt-get install -y pcregrep && clean-layer.sh', 'touch $_RESOURCES_PATH/jupyterhub_user_config.py &&    mkdir $_SSL_RESOURCES_PATH && chmod ug+rwx $_SSL_RESOURCES_PATH &&    chmod -R ug+rxw $_RESOURCES_PATH/scripts &&    chmod ug+rwx $_RESOURCES_PATH/docker-entrypoint.sh', 'sed -i ""s/\\$HUB_VERSION/$HUB_VERSION/g"" /usr/local/share/jupyterhub/templates/version-number-snippet.html', 'rm /usr/bin/python &&    ln -s /usr/bin/python3 /usr/bin/python']"
ml-tooling/ml-hub,latest,/Dockerfile,COPY,13,"['resources/mlhubspawner /mlhubspawner', 'resources/nginx.conf /etc/nginx/nginx.conf', 'resources/scripts $_RESOURCES_PATH/scripts', 'resources/docker-entrypoint.sh $_RESOURCES_PATH/docker-entrypoint.sh', 'resources/logo.png /usr/local/share/jupyterhub/static/images/jupyter.png', 'resources/jupyterhub_config.py $_RESOURCES_PATH/jupyterhub_config.py', 'resources/jupyterhub-mod/template-home.html /usr/local/share/jupyterhub/templates/home.html', 'resources/jupyterhub-mod/template-admin.html /usr/local/share/jupyterhub/templates/admin.html', 'resources/jupyterhub-mod/ssh-dialog-snippet.html /usr/local/share/jupyterhub/templates/ssh-dialog-snippet.html', 'resources/jupyterhub-mod/info-dialog-snippet.html /usr/local/share/jupyterhub/templates/info-dialog-snippet.html', 'resources/jupyterhub-mod/version-number-snippet.html /usr/local/share/jupyterhub/templates/version-number-snippet.html', 'resources/jupyterhub-mod/jsonpresenter /usr/local/share/jupyterhub/static/components/jsonpresenter/', 'resources/jupyterhub-mod/cleanup-service.py /resources/cleanup-service.py']"
ml-tooling/ml-hub,latest,/Dockerfile,ADD,2,"['https://raw.githubusercontent.com/ml-tooling/zero-to-mlhub-k8s/master/images/hub/cull_idle_servers.py /usr/local/bin/cull_idle_servers.py', 'resources/kubernetes/jupyterhub_chart_config.py $_RESOURCES_PATH/jupyterhub_chart_config.py']"
ml-tooling/ml-hub,latest,/Dockerfile,ARG,3,"['ARG_HUB_VERSION=""unknown""', 'ARG_BUILD_DATE=""unknown""', 'ARG_VCS_REF=""unknown""']"
ml-tooling/ml-hub,latest,/Dockerfile,LABEL,1,"['""maintainer""=""mltooling.team@gmail.com""     ""io.k8s.description""=""Multi-user hub which spawns and manages workspace instances.""     ""io.k8s.display-name""=""Machine Learning Hub""     ""io.openshift.expose-services""=""8080:http, 5901:xvnc""     ""io.openshift.non-scalable""=""true""     ""io.openshift.tags""=""workspace, machine learning, vnc, ubuntu, xfce""     ""io.openshift.min-memory""=""1Gi""     ""org.opencontainers.image.title""=""Machine Learning Hub""     ""org.opencontainers.image.description""=""Multi-user hub which spawns and manages workspace instances.""     ""org.opencontainers.image.documentation""=""https://github.com/ml-tooling/ml-hub""     ""org.opencontainers.image.url""=""https://github.com/ml-tooling/ml-hub""     ""org.opencontainers.image.source""=""https://github.com/ml-tooling/ml-hub""     ""org.opencontainers.image.licenses""=""Apache-2.0""     ""org.opencontainers.image.version""=$HUB_VERSION     ""org.opencontainers.image.vendor""=""ML Tooling""     ""org.opencontainers.image.authors""=""Benjamin Raehtlein & Lukas Masuch""     ""org.opencontainers.image.revision""=$ARG_VCS_REF     ""org.opencontainers.image.created""=$ARG_BUILD_DATE     ""org.label-schema.name""=""Machine Learning Hub""     ""org.label-schema.description""=""Multi-user hub which spawns and manages workspace instances.""     ""org.label-schema.usage""=""https://github.com/ml-tooling/ml-hub""     ""org.label-schema.url""=""https://github.com/ml-tooling/ml-hub""     ""org.label-schema.vcs-url""=""https://github.com/ml-tooling/ml-hub""     ""org.label-schema.vendor""=""ML Tooling""     ""org.label-schema.version""=$HUB_VERSION     ""org.label-schema.schema-version""=""1.0""     ""org.label-schema.vcs-ref""=$ARG_VCS_REF     ""org.label-schema.build-date""=$ARG_BUILD_DATE']"
ml-tooling/ml-hub,latest,/Dockerfile,ENTRYPOINT,1,"['[""/tini"", ""-g"", ""--""]']"
ml-tooling/ml-hub,latest,/Dockerfile,CMD,1,"['[""/bin/bash"", ""/resources/docker-entrypoint.sh""]']"
ml-tooling/ml-hub,latest,/Dockerfile,EXPOSE,1,['8080']
qdrant/qdrant,latest,/Dockerfile,FROM,2,"['rust:1.56.1 as builder', 'debian:bullseye-slim']"
qdrant/qdrant,latest,/Dockerfile,COPY,3,"['. ./qdrant', '--from=builder /qdrant/target/release/qdrant ${APP}/qdrant', '--from=builder /qdrant/config ${APP}/config']"
qdrant/qdrant,latest,/Dockerfile,WORKDIR,2,"['./qdrant', '${APP}']"
qdrant/qdrant,latest,/Dockerfile,ENV,2,"['OPENBLAS_DYNAMIC_ARCH=""1""', 'TZ=Etc/UTC     RUN_MODE=production     OPENBLAS_NUM_THREADS=1']"
qdrant/qdrant,latest,/Dockerfile,RUN,4,"['apt-get update ; apt-get install -y clang libopenblas-dev libgfortran-10-dev gfortran', 'cargo build --release --bin qdrant', 'apt-get update     && apt-get install -y ca-certificates tzdata     && rm -rf /var/lib/apt/lists/*', 'mkdir -p ${APP}']"
qdrant/qdrant,latest,/Dockerfile,ARG,1,['APP=/qdrant']
qdrant/qdrant,latest,/Dockerfile,EXPOSE,2,"['6333', '6334']"
qdrant/qdrant,latest,/Dockerfile,CMD,1,"['[""./qdrant""]']"
qdrant/qdrant,latest,/tools/schema2openapi/Dockerfile,FROM,1,['node:lts-alpine']
qdrant/qdrant,latest,/tools/schema2openapi/Dockerfile,WORKDIR,1,['/app']
qdrant/qdrant,latest,/tools/schema2openapi/Dockerfile,COPY,1,['. .']
qdrant/qdrant,latest,/tools/schema2openapi/Dockerfile,RUN,1,['npm install']
qdrant/qdrant,latest,/tools/schema2openapi/Dockerfile,CMD,1,"['[""node"", ""convert.js""]']"
NervanaSystems/he-transformer,latest,/contrib/docker/Dockerfile.he_transformer.ubuntu1604,FROM,1,['ubuntu:16.04']
NervanaSystems/he-transformer,latest,/contrib/docker/Dockerfile.he_transformer.ubuntu1604,RUN,23,"['apt-get update && apt-get install -y         python3-pip virtualenv         python3-numpy python3-dev python3-wheel         git         unzip wget         sudo         bash-completion         build-essential cmake         software-properties-common         git         wget patch diffutils libtinfo-dev         autoconf libtool         doxygen graphviz', 'wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | sudo apt-key add -', 'apt-add-repository ""deb http://apt.llvm.org/xenial/ llvm-toolchain-xenial-6.0 main""', 'apt-get update', 'apt-get install -y clang-6.0', 'apt-get clean autoclean &&         apt-get autoremove -y', 'pip3 install --upgrade pip setuptools virtualenv==16.1.0', 'pip3 install cmake --upgrade', 'add-apt-repository ppa:ubuntu-toolchain-r/test         && apt update         && apt install g++-7 -y', 'update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-7 50', 'update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-7 50', 'update-alternatives --set g++ /usr/bin/g++-7', 'update-alternatives --set gcc /usr/bin/gcc-7', 'cmake --version', 'make --version', 'gcc --version', 'c++ --version', 'clang++-6.0 --version', 'python3 --version', 'virtualenv --version', 'wget https://github.com/bazelbuild/bazel/releases/download/0.25.2/bazel-0.25.2-installer-linux-x86_64.sh', 'chmod +x ./bazel-0.25.2-installer-linux-x86_64.sh', 'bash ./bazel-0.25.2-installer-linux-x86_64.sh']"
NervanaSystems/he-transformer,latest,/contrib/docker/Dockerfile.he_transformer.ubuntu1604,WORKDIR,1,['/home']
NervanaSystems/he-transformer,latest,/contrib/docker/Dockerfile.he_transformer.ubuntu1804,FROM,1,['ubuntu:18.04']
NervanaSystems/he-transformer,latest,/contrib/docker/Dockerfile.he_transformer.ubuntu1804,RUN,17,"['apt-get update && apt-get install -y         python3-pip virtualenv         python3-numpy python3-dev python3-wheel         git         unzip wget         sudo         bash-completion         build-essential cmake         software-properties-common         git         wget patch diffutils libtinfo-dev         autoconf libtool         doxygen graphviz', 'wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | sudo apt-key add -', 'apt-add-repository ""deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-9 main""', 'apt-get update && apt install -y clang-9 clang-tidy-9 clang-format-9', 'apt-get clean autoclean &&         apt-get autoremove -y', 'pip3 install --upgrade pip setuptools virtualenv==16.1.0', 'pip3 install cmake --upgrade', 'cmake --version', 'make --version', 'gcc --version', 'clang++-9 --version', 'c++ --version', 'python3 --version', 'virtualenv --version', 'wget https://github.com/bazelbuild/bazel/releases/download/0.25.2/bazel-0.25.2-installer-linux-x86_64.sh', 'chmod +x ./bazel-0.25.2-installer-linux-x86_64.sh', 'bash ./bazel-0.25.2-installer-linux-x86_64.sh']"
NervanaSystems/he-transformer,latest,/contrib/docker/Dockerfile.he_transformer.ubuntu1804,WORKDIR,1,['/home']
NervanaSystems/he-transformer,latest,/contrib/docker/Dockerfile.he_transformer.centos74,FROM,1,['centos:7']
NervanaSystems/he-transformer,latest,/contrib/docker/Dockerfile.he_transformer.centos74,RUN,16,"['yum -y update &&     yum -y --enablerepo=extras install epel-release &&     yum -y install     gcc gcc-c++     cmake3 make     git     wget patch diffutils zlib-devel ncurses-devel libtinfo-dev     python python-devel python-setuptools     python3 python36-devel python3-setuptools     which unzip', 'yum -y install centos-release-scl &&     yum install -y devtoolset-7 llvm-toolset-7', 'easy_install pip', 'pip install --upgrade pip setuptools virtualenv==16.0.0', 'ln -s /usr/bin/cmake3 /usr/bin/cmake', 'cmake --version', 'make --version', 'gcc --version', 'c++ --version', 'clang --version', 'clang++ --version', 'python3 --version', 'virtualenv --version', 'wget https://github.com/bazelbuild/bazel/releases/download/0.25.2/bazel-0.25.2-installer-linux-x86_64.sh', 'chmod +x ./bazel-0.25.2-installer-linux-x86_64.sh', 'bash ./bazel-0.25.2-installer-linux-x86_64.sh']"
NervanaSystems/he-transformer,latest,/contrib/docker/Dockerfile.he_transformer.centos74,SHELL,1,"['[ ""/usr/bin/scl"", ""enable"", ""devtoolset-7"", ""llvm-toolset-7""]']"
NervanaSystems/he-transformer,latest,/contrib/docker/Dockerfile.he_transformer.centos74,WORKDIR,1,['/home']
NervanaSystems/he-transformer,latest,/contrib/docker/Dockerfile.he_transformer.fedora28,FROM,1,['fedora:28']
NervanaSystems/he-transformer,latest,/contrib/docker/Dockerfile.he_transformer.fedora28,RUN,15,"['dnf -y update &&         dnf -y install         gcc gcc-c++         cmake3 make         git python3 python3-pip         python-setuptools         wget unzip         which redhat-rpm-config         python3-devel         patch', 'pip install virtualenv', 'pip3 install --upgrade pip setuptools virtualenv==16.0.0', 'dnf install -y clang', 'cmake --version', 'make --version', 'gcc --version', 'c++ --version', 'clang --version', 'python3 --version', 'virtualenv --version', 'wget https://github.com/bazelbuild/bazel/releases/download/0.25.2/bazel-0.25.2-installer-linux-x86_64.sh', 'chmod +x ./bazel-0.25.2-installer-linux-x86_64.sh', 'bash ./bazel-0.25.2-installer-linux-x86_64.sh', 'pip install python-config']"
NervanaSystems/he-transformer,latest,/contrib/docker/Dockerfile.he_transformer.fedora28,WORKDIR,1,['/home']
IQTLabs/NetworkML,latest,/Dockerfile.test,FROM,1,['networkml']
IQTLabs/NetworkML,latest,/Dockerfile.test,LABEL,1,"['maintainer=""Charlie Lewis <clewis@iqt.org>""']"
IQTLabs/NetworkML,latest,/Dockerfile.test,RUN,2,"['apt-get update && apt-get install -y gcc rabbitmq-server &&     rm -rf /var/cache &&     pip3 install --no-cache-dir -r test-requirements.txt', 'jupyter nbconvert --ExecutePreprocessor.timeout=300 --to notebook --execute notebooks/networkml_exploration.ipynb --Application.log_level=DEBUG']"
IQTLabs/NetworkML,latest,/Dockerfile.test,ENTRYPOINT,1,"['[""pytest""]']"
IQTLabs/NetworkML,latest,/Dockerfile.test,CMD,1,"['[""-l"", ""-s"", ""-v"", ""-nauto"", ""--cov=tests/"", ""--cov=networkml/"", ""--cov-report"", ""term-missing"", ""-c"", "".coveragerc"", ""--rabbitmq-port=5672""]']"
IQTLabs/NetworkML,latest,/Dockerfile,FROM,1,['iqtlabs/rbqwrapper:v0.11.31']
IQTLabs/NetworkML,latest,/Dockerfile,LABEL,1,"['maintainer=""Charlie Lewis <clewis@iqt.org>""']"
IQTLabs/NetworkML,latest,/Dockerfile,ENV,2,"['DEBIAN_FRONTEND ""noninteractive""', 'PYTHONUNBUFFERED 1']"
IQTLabs/NetworkML,latest,/Dockerfile,COPY,2,"['requirements.txt requirements.txt', '. /networkml']"
IQTLabs/NetworkML,latest,/Dockerfile,RUN,2,"['apt-get update && apt-get install -y git python3-numpy python3-scipy gfortran libblas-dev liblapack-dev libxslt-dev libxml2-dev flex bison zlib1g-dev tshark &&     pip3 install --no-cache-dir --upgrade -r requirements.txt &&     apt-get remove -y libblas-dev liblapack-dev libxslt-dev libxml2-dev gfortran flex bison zlib1g-dev &&     apt-get autoremove -y &&     rm -rf /var/cache/* &&     rm -rf /root/.cache/*', 'pip3 install .']"
IQTLabs/NetworkML,latest,/Dockerfile,WORKDIR,1,['/networkml']
IQTLabs/NetworkML,latest,/Dockerfile,ENTRYPOINT,1,"['[""/rbqwrapper.py"", ""networkml""]']"
ambianic/ambianic-edge,latest,/.gitpod.Dockerfile,FROM,1,['gitpod/workspace-full']
ambianic/ambianic-edge,latest,/.gitpod.Dockerfile,COPY,1,"['[""./build/*"", ""./""]']"
ambianic/ambianic-edge,latest,/.gitpod.Dockerfile,RUN,1,['arch && ls -al && sudo /bin/bash ./install_requirements.sh #']
ambianic/ambianic-edge,latest,/build/Dev.Dockerfile,FROM,1,['debian:buster-slim']
ambianic/ambianic-edge,latest,/build/Dev.Dockerfile,LABEL,1,"['maintainer=""Ivelin Ivanov <ivelin@ambianic.ai>""']"
ambianic/ambianic-edge,latest,/build/Dev.Dockerfile,VOLUME,1,['/workspace']
ambianic/ambianic-edge,latest,/build/Dev.Dockerfile,WORKDIR,1,['/opt/ambianic-edge']
ambianic/ambianic-edge,latest,/build/Dev.Dockerfile,COPY,1,"['[""install_requirements.sh"", ""requirements.txt"", ""install-edgetpu.sh"",   ""raspberrypi.pip.conf"", ""./""]']"
ambianic/ambianic-edge,latest,/build/Dev.Dockerfile,RUN,1,['/bin/bash ./install_requirements.sh']
ambianic/ambianic-edge,latest,/build/Dev.Dockerfile,ENTRYPOINT,1,"['[""bash""]']"
ambianic/ambianic-edge,latest,/build/Prod.Dockerfile,FROM,1,['ambianic/ambianic-edge:dev']
ambianic/ambianic-edge,latest,/build/Prod.Dockerfile,LABEL,1,"['maintainer=""Ivelin Ivanov <ivelin@ambianic.ai>""']"
ambianic/ambianic-edge,latest,/build/Prod.Dockerfile,VOLUME,1,['/workspace']
ambianic/ambianic-edge,latest,/build/Prod.Dockerfile,WORKDIR,2,"['/opt/ambianic-edge', '/workspace']"
ambianic/ambianic-edge,latest,/build/Prod.Dockerfile,RUN,2,"['pwd && ls -al', 'ls -al ./src/* && pip3 install -e src']"
ambianic/ambianic-edge,latest,/build/Prod.Dockerfile,COPY,5,"['[""./src"", ""README.md"", ""./src/""]', '[""./ai_models"", ""./ai_models/""]', '[""./build/ambianic-docker-entrypoint.sh"", ""./""]', '[""./config.defaults.yaml"", ""./""]', '[""./peerjs-config.yaml"", ""./""]']"
ambianic/ambianic-edge,latest,/build/Prod.Dockerfile,ENTRYPOINT,1,"['[""bash""]']"
ambianic/ambianic-edge,latest,/build/Prod.Dockerfile,CMD,1,"['[""/opt/ambianic-edge/ambianic-docker-entrypoint.sh""]']"
opendilab/DI-engine,latest,/Dockerfile.env,FROM,3,"['opendilab/ding:nightly as atari', 'opendilab/ding:nightly as mujoco', 'opendilab/di-star:latest as smac']"
opendilab/DI-engine,latest,/Dockerfile.env,WORKDIR,3,"['/ding', '/ding', '/ding']"
opendilab/DI-engine,latest,/Dockerfile.env,RUN,3,"['python3 -m pip install --upgrade pip     && python3 -m pip install --no-cache-dir .[common_env]     && pip install autorom     && AutoROM --accept-license', 'python3 -m pip install --upgrade pip     && curl https://www.roboti.us/file/mjkey.txt -o mjkey.txt && curl https://www.roboti.us/download/mujoco200_linux.zip -o mujoco200_linux.zip     && apt-get install unzip libgl1-mesa-dev libosmesa6-dev -y && unzip mujoco200_linux.zip && mv mujoco200_linux mujoco200     && echo ""export MUJOCO_PY_MJKEY_PATH=/ding/mjkey.txt && export MUJOCO_PY_MUJOCO_PATH=/ding/mujoco200 && export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/ding/mujoco200/bin"" >> /root/.bashrc     && . /root/.bashrc     && pip3 install \'numpy==1.20.0\'     && pip3 install -U \'mujoco-py<2.1,>=2.0\' --user', 'python3 -m pip install --upgrade pip     && python3 -m pip install --no-cache-dir .[fast]']"
opendilab/DI-engine,latest,/Dockerfile.env,ENV,4,"['MUJOCO_PY_MJKEY_PATH=/ding/mjkey.txt', 'MUJOCO_PY_MUJOCO_PATH=/ding/mujoco200', 'LD_LIBRARY_PATH ""$LD_LIBRARY_PATH:/ding/mujoco200/bin""', 'SC2PATH=/root/StarCraftII_4.10.0']"
opendilab/DI-engine,latest,/Dockerfile.env,ADD,3,"['setup.py setup.py', 'dizoo dizoo', 'ding ding']"
opendilab/DI-engine,latest,/Dockerfile.base,FROM,1,['pytorch/pytorch:1.7.1-cuda11.0-cudnn8-runtime']
opendilab/DI-engine,latest,/Dockerfile.base,WORKDIR,1,['/ding']
opendilab/DI-engine,latest,/Dockerfile.base,RUN,2,"[""apt update     && apt install libgl1-mesa-glx libglib2.0-0 libsm6 libxext6 libxrender-dev swig curl git vim gcc \\g++ make locales -y     && apt clean     && rm -rf /var/cache/apt/*     && sed -i '/en_US.UTF-8/s/^# //g' /etc/locale.gen     && locale-gen"", ""python3 -m pip install --upgrade pip     && python3 -m pip install --ignore-installed 'PyYAML<6.0'     && python3 -m pip install --no-cache-dir .[fast]     && python3 -m pip uninstall dataclasses -y""]"
opendilab/DI-engine,latest,/Dockerfile.base,ENV,3,"['LANG        en_US.UTF-8', 'LANGUAGE    en_US:UTF-8', 'LC_ALL      en_US.UTF-8']"
opendilab/DI-engine,latest,/Dockerfile.base,ADD,3,"['setup.py setup.py', 'dizoo dizoo', 'ding ding']"
recognai/rubrix,latest,/dev.Dockerfile,FROM,2,"['node:14 as frontend', 'tiangolo/uvicorn-gunicorn-fastapi:python3.7']"
recognai/rubrix,latest,/dev.Dockerfile,COPY,3,"['. /build', '.git/ /build/.git/', '--from=frontend /build /build']"
recognai/rubrix,latest,/dev.Dockerfile,WORKDIR,3,"['/build', '/build', '/app']"
recognai/rubrix,latest,/dev.Dockerfile,RUN,3,"['scripts/build_frontend.sh', 'git log --oneline  && pip install -U build  && python -m build  && find dist/*.whl -exec pip install {}[server] \\;', 'rm -rf /build  && wget -O /wait-for-it.sh https://raw.githubusercontent.com/vishnubob/wait-for-it/master/wait-for-it.sh  && chmod +x /wait-for-it.sh']"
recognai/rubrix,latest,/dev.Dockerfile,ENV,3,"['USERS_DB=/config/.users.yml', 'MODULE_NAME=""rubrix.server.server""', 'VARIABLE_NAME=""app""']"
recognai/rubrix,latest,/dev.Dockerfile,CMD,1,['/wait-for-it.sh $ELASTICSEARCH -- /start.sh']
recognai/rubrix,latest,/release.Dockerfile,FROM,1,['tiangolo/uvicorn-gunicorn-fastapi:python3.7']
recognai/rubrix,latest,/release.Dockerfile,COPY,1,['dist/*.whl /packages/']
recognai/rubrix,latest,/release.Dockerfile,ENV,3,"['USERS_DB=/config/.users.yml', 'MODULE_NAME=""rubrix.server.server""', 'VARIABLE_NAME=""app""']"
recognai/rubrix,latest,/release.Dockerfile,RUN,1,"['wget -O /wait-for-it.sh https://raw.githubusercontent.com/vishnubob/wait-for-it/master/wait-for-it.sh  && chmod +x /wait-for-it.sh  && pip install ""elasticsearch==7.13.0""  && find /packages/*.whl -exec pip install {}[server] \\;']"
recognai/rubrix,latest,/release.Dockerfile,CMD,1,['/wait-for-it.sh $ELASTICSEARCH -- /start.sh']
open-metadata/OpenMetadata,latest,/ingestion/Dockerfile,FROM,1,['python:3.9-slim']
open-metadata/OpenMetadata,latest,/ingestion/Dockerfile,ENV,3,"['AIRFLOW_HOME=/airflow', 'AIRFLOW_VERSION=2.2.1', 'CONSTRAINT_URL=""https://raw.githubusercontent.com/apache/airflow/constraints-${AIRFLOW_VERSION}/constraints-3.9.txt""']"
open-metadata/OpenMetadata,latest,/ingestion/Dockerfile,WORKDIR,1,['/ingestion']
open-metadata/OpenMetadata,latest,/ingestion/Dockerfile,RUN,14,"['apt-get update &&     apt-get install -y gcc libsasl2-dev curl build-essential libssl-dev libffi-dev librdkafka-dev unixodbc-dev python3.9-dev libevent-dev wget --no-install-recommends &&     rm -rf /var/lib/apt/lists/*', 'wget https://github.com/open-metadata/openmetadata-airflow-apis/releases/download/0.1/openmetadata-airflow-apis-plugin.tar.gz', 'tar zxvf openmetadata-airflow-apis-plugin.tar.gz', 'mkdir /om-airflow', 'mv plugins /om-airflow', 'pip install ""apache-airflow[docker]==${AIRFLOW_VERSION}"" --constraint ""${CONSTRAINT_URL}""', 'pip install "".[all]"" openmetadata-airflow-managed-apis', 'airflow db init', 'cp -r /ingestion/examples/airflow/airflow.cfg /airflow/airflow.cfg', 'cp -r /om-airflow/plugins /airflow/plugins', 'cp -r /om-airflow/plugins/dag_templates /airflow/', 'mkdir -p /airflow/dag_generated_configs', 'cp -r /om-airflow/plugins/dag_managed_operators /airflow/', 'chmod 755 ingestion_dependency.sh']"
open-metadata/OpenMetadata,latest,/ingestion/Dockerfile,COPY,1,['ingestion /ingestion']
open-metadata/OpenMetadata,latest,/ingestion/Dockerfile,EXPOSE,1,['8080']
open-metadata/OpenMetadata,latest,/ingestion/Dockerfile,CMD,1,"['[ ""./ingestion_dependency.sh"" ]']"
open-metadata/OpenMetadata,latest,/ingestion/connectors/Dockerfile-base,FROM,1,['python:3.9-slim']
open-metadata/OpenMetadata,latest,/ingestion/connectors/Dockerfile-base,MAINTAINER,1,['OpenMetadata Committers']
open-metadata/OpenMetadata,latest,/ingestion/connectors/Dockerfile-base,WORKDIR,1,['/ingestion']
open-metadata/OpenMetadata,latest,/ingestion/connectors/Dockerfile-base,RUN,2,"['apt-get update &&     apt-get install -y gcc libsasl2-dev curl build-essential libssl-dev libffi-dev librdkafka-dev unixodbc-dev python3.9-dev libevent-dev wget --no-install-recommends &&     rm -rf /var/lib/apt/lists/*', 'pip install .']"
open-metadata/OpenMetadata,latest,/ingestion/connectors/Dockerfile-base,COPY,4,"['src/ src/', 'setup.* ./', 'README.md .', 'connectors/main.py .']"
open-metadata/OpenMetadata,latest,/ingestion/tests/integration/source/mlflow/Dockerfile,FROM,1,['python:3.8']
open-metadata/OpenMetadata,latest,/ingestion/tests/integration/source/mlflow/Dockerfile,RUN,2,"['python -m pip install --upgrade pip', 'pip install cryptography mlflow boto3 pymysql']"
open-metadata/OpenMetadata,latest,/ingestion/tests/integration/source/mlflow/Dockerfile,EXPOSE,1,['5000']
open-metadata/OpenMetadata,latest,/docker/local-metadata/Dockerfile_mysql,FROM,1,['mysql/mysql-server:latest']
open-metadata/OpenMetadata,latest,/docker/local-metadata/Dockerfile_mysql,WORKDIR,1,['/docker-entrypoint-initdb.d']
open-metadata/OpenMetadata,latest,/docker/local-metadata/Dockerfile_mysql,COPY,1,['docker/local-metadata/mysql-script.sql .']
open-metadata/OpenMetadata,latest,/docker/local-metadata/Dockerfile_mysql,RUN,1,['chmod -R 775 /docker-entrypoint-initdb.d']
open-metadata/OpenMetadata,latest,/docker/local-metadata/Dockerfile,FROM,1,['alpine:3.15']
open-metadata/OpenMetadata,latest,/docker/local-metadata/Dockerfile,EXPOSE,1,['8585']
open-metadata/OpenMetadata,latest,/docker/local-metadata/Dockerfile,RUN,3,"['apk update   && apk upgrade   && apk add --update wget curl bash openjdk11   && rm -rf /var/cache/apk/*', 'tar zxvf openmetadata-*.tar.gz &&     rm openmetadata-*.tar.gz', 'chmod 777 openmetadata-start.sh']"
open-metadata/OpenMetadata,latest,/docker/local-metadata/Dockerfile,COPY,2,"['docker/metadata/openmetadata-start.sh docker/metadata/openmetadata.yaml ./', 'openmetadata-dist/target/openmetadata-*.tar.gz /']"
open-metadata/OpenMetadata,latest,/docker/local-metadata/Dockerfile,CMD,1,"['[""./openmetadata-start.sh""]']"
open-metadata/OpenMetadata,latest,/docker/images/minimal-ubuntu/Dockerfile,FROM,1,['ubuntu:16.04']
open-metadata/OpenMetadata,latest,/docker/images/minimal-ubuntu/Dockerfile,ENV,1,['DEBIAN_FRONTEND noninteractive']
open-metadata/OpenMetadata,latest,/docker/images/minimal-ubuntu/Dockerfile,RUN,5,"['apt update -y &&     apt install -y vim nano &&     apt install -y man sudo sshpass less jq ntp bc &&     apt install -y net-tools iputils-ping dnsutils lsof curl wget telnet', 'apt install -y python-dev &&     curl ""https://bootstrap.pypa.io/get-pip.py"" -o /tmp/get-pip.py &&     python /tmp/get-pip.py', 'apt install -y openjdk-8-jdk', 'pip install supervisor==3.3.3 &&     mkdir -p /var/log/supervisord/', 'update-alternatives --install /bin/sh sh /bin/bash 100 &&     update-alternatives --install /bin/sh sh /bin/dash 200 &&     echo 1 | update-alternatives --config sh']"
open-metadata/OpenMetadata,latest,/docker/metadata/Dockerfile,FROM,1,['alpine:3.15']
open-metadata/OpenMetadata,latest,/docker/metadata/Dockerfile,EXPOSE,1,['8585']
open-metadata/OpenMetadata,latest,/docker/metadata/Dockerfile,RUN,3,"['apk update   && apk upgrade   && apk add --update wget curl bash openjdk11   && rm -rf /var/cache/apk/*', 'wget https://github.com/open-metadata/OpenMetadata/releases/download/0.7.0-release/openmetadata-0.7.0.tar.gz &&     tar zxvf openmetadata-*.tar.gz &&     rm openmetadata-*.tar.gz', 'chmod 777 openmetadata-start.sh']"
open-metadata/OpenMetadata,latest,/docker/metadata/Dockerfile,COPY,1,['openmetadata-start.sh openmetadata.yaml ./']
open-metadata/OpenMetadata,latest,/docker/metadata/Dockerfile,CMD,1,"['[""./openmetadata-start.sh""]']"
Novetta/adaptnlp,latest,/docker/Dockerfile,FROM,1,['nvcr.io/nvidia/cuda:10.2-runtime-ubuntu18.04']
Novetta/adaptnlp,latest,/docker/Dockerfile,ARG,1,['BUILD=dev']
Novetta/adaptnlp,latest,/docker/Dockerfile,ENV,3,"['PYTHONUNBUFFERED=1     PYTHONDONTWRITEBYTECODE=1     PIP_NO_CACHE_DIR=off     PIP_DISABLE_PIP_VERSION_CHECK=on     PIP_DEFAULT_TIMEOUT=100', 'VIRTUAL_ENV=/opt/venv', 'PATH=""$VIRTUAL_ENV/bin:$PATH""']"
Novetta/adaptnlp,latest,/docker/Dockerfile,RUN,10,"['apt-get update &&     apt-get install -y software-properties-common', 'add-apt-repository ppa:deadsnakes/ppa', 'apt-get install -y --no-install-recommends     build-essential     python3.8     python3.8-dev     python3.8-venv    python3-pip     curl     git', 'python3.8 -m venv $VIRTUAL_ENV', 'pip install pip -U', 'pip install jupyter', 'git clone https://github.com/novetta/adaptnlp.git --depth 1', '/bin/bash -c ""if [[ $BUILD == \'prod\' ]] ; then echo \\""Production Build\\"" && cd adaptnlp && pip install .; fi""', '/bin/bash -c ""if [[ $BUILD == \'dev\' ]] ; then echo \\""Development Build\\"" && cd adaptnlp && pip install -e \\"".[dev]\\"" ; fi""', 'pip install jupyterlab==3.0.16 jupyter_server==1.6.4 xeus-python']"
Novetta/adaptnlp,latest,/docker/Dockerfile,CMD,1,"['[""sh"",""-c"", ""jupyter notebook --ip=0.0.0.0 --no-browser --allow-root --port=8888 --NotebookApp.token=\'\' --NotebookApp.password=\'\' --NotebookApp.allow_origin=\'*\' --NotebookApp.base_url=${NB_PREFIX}""]']"
Novetta/adaptnlp,latest,/docker/devel/Dockerfile.cuda11.0-devel-ubuntu18.04-py3.7,FROM,1,['nvcr.io/nvidia/cuda:10.2-devel-ubuntu18.04']
Novetta/adaptnlp,latest,/docker/devel/Dockerfile.cuda11.0-devel-ubuntu18.04-py3.7,ENV,5,"['LC_ALL C.UTF-8', 'LANG C.UTF-8', 'PYTHONUNBUFFERED=1     PYTHONDONTWRITEBYTECODE=1     PIP_NO_CACHE_DIR=off     PIP_DISABLE_PIP_VERSION_CHECK=on     PIP_DEFAULT_TIMEOUT=100', 'VIRTUAL_ENV=/opt/venv', 'PATH=""$VIRTUAL_ENV/bin:$PATH""']"
Novetta/adaptnlp,latest,/docker/devel/Dockerfile.cuda11.0-devel-ubuntu18.04-py3.7,RUN,4,"['apt-get update && apt-get install -y --no-install-recommends     build-essential     python3.8     python3.8-dev     python3.8-venv    python3-pip     curl', 'python3.8 -m venv $VIRTUAL_ENV', 'pip install --upgrade pip', 'pip --no-cache-dir install -e .']"
Novetta/adaptnlp,latest,/docker/devel/Dockerfile.cuda11.0-devel-ubuntu18.04-py3.7,WORKDIR,1,['/adaptnlp']
Novetta/adaptnlp,latest,/docker/devel/Dockerfile.cuda11.0-devel-ubuntu18.04-py3.7,COPY,1,['. /adaptnlp']
Novetta/adaptnlp,latest,/docker/devel/Dockerfile.cuda11.0-devel-ubuntu18.04-py3.7,CMD,1,"['[""sh"",""-c"", ""jupyter notebook --ip=0.0.0.0 --no-browser --allow-root --port=8888 --NotebookApp.token=\'\' --NotebookApp.password=\'\' --NotebookApp.allow_origin=\'*\' --NotebookApp.base_url=${NB_PREFIX}""]']"
Novetta/adaptnlp,latest,/docker/devel/Dockerfile.cuda11.0-devel-ubuntu18.04-py3.8,FROM,1,['nvcr.io/nvidia/cuda:11.0-devel-ubuntu18.04']
Novetta/adaptnlp,latest,/docker/devel/Dockerfile.cuda11.0-devel-ubuntu18.04-py3.8,ENV,5,"['LC_ALL C.UTF-8', 'LANG C.UTF-8', 'PYTHONUNBUFFERED=1     PYTHONDONTWRITEBYTECODE=1     PIP_NO_CACHE_DIR=off     PIP_DISABLE_PIP_VERSION_CHECK=on     PIP_DEFAULT_TIMEOUT=100', 'VIRTUAL_ENV=/opt/venv', 'PATH=""$VIRTUAL_ENV/bin:$PATH""']"
Novetta/adaptnlp,latest,/docker/devel/Dockerfile.cuda11.0-devel-ubuntu18.04-py3.8,RUN,6,"['apt-get update &&     apt-get install -y software-properties-common', 'add-apt-repository ppa:deadsnakes/ppa', 'apt-get install -y --no-install-recommends     build-essential     python3.8     python3.8-dev     python3.8-venv    python3-pip     curl', 'python3.8 -m venv $VIRTUAL_ENV', 'pip install --upgrade pip', 'pip --no-cache-dir install -e .']"
Novetta/adaptnlp,latest,/docker/devel/Dockerfile.cuda11.0-devel-ubuntu18.04-py3.8,WORKDIR,1,['/adaptnlp']
Novetta/adaptnlp,latest,/docker/devel/Dockerfile.cuda11.0-devel-ubuntu18.04-py3.8,COPY,1,['. /adaptnlp']
Novetta/adaptnlp,latest,/docker/devel/Dockerfile.cuda11.0-devel-ubuntu18.04-py3.8,CMD,1,"['[""sh"",""-c"", ""jupyter notebook --ip=0.0.0.0 --no-browser --allow-root --port=8888 --NotebookApp.token=\'\' --NotebookApp.password=\'\' --NotebookApp.allow_origin=\'*\' --NotebookApp.base_url=${NB_PREFIX}""]']"
Novetta/adaptnlp,latest,/docker/devel/Dockerfile.cuda10.2-devel-ubuntu18.04-py3.8,FROM,1,['nvcr.io/nvidia/cuda:10.2-devel-ubuntu18.04']
Novetta/adaptnlp,latest,/docker/devel/Dockerfile.cuda10.2-devel-ubuntu18.04-py3.8,ENV,5,"['LC_ALL C.UTF-8', 'LANG C.UTF-8', 'PYTHONUNBUFFERED=1     PYTHONDONTWRITEBYTECODE=1     PIP_NO_CACHE_DIR=off     PIP_DISABLE_PIP_VERSION_CHECK=on     PIP_DEFAULT_TIMEOUT=100', 'VIRTUAL_ENV=/opt/venv', 'PATH=""$VIRTUAL_ENV/bin:$PATH""']"
Novetta/adaptnlp,latest,/docker/devel/Dockerfile.cuda10.2-devel-ubuntu18.04-py3.8,RUN,6,"['apt-get update &&     apt-get install -y software-properties-common', 'add-apt-repository ppa:deadsnakes/ppa', 'apt-get install -y --no-install-recommends     build-essential     python3.8     python3.8-dev     python3.8-venv    python3-pip     curl', 'python3.8 -m venv $VIRTUAL_ENV', 'pip install --upgrade pip', 'pip --no-cache-dir install -e .']"
Novetta/adaptnlp,latest,/docker/devel/Dockerfile.cuda10.2-devel-ubuntu18.04-py3.8,WORKDIR,1,['/adaptnlp']
Novetta/adaptnlp,latest,/docker/devel/Dockerfile.cuda10.2-devel-ubuntu18.04-py3.8,COPY,1,['. /adaptnlp']
Novetta/adaptnlp,latest,/docker/devel/Dockerfile.cuda10.2-devel-ubuntu18.04-py3.8,CMD,1,"['[""sh"",""-c"", ""jupyter notebook --ip=0.0.0.0 --no-browser --allow-root --port=8888 --NotebookApp.token=\'\' --NotebookApp.password=\'\' --NotebookApp.allow_origin=\'*\' --NotebookApp.base_url=${NB_PREFIX}""]']"
Novetta/adaptnlp,latest,/docker/devel/Dockerfile.cuda10.2-devel-ubuntu18.04-py3.7,FROM,1,['nvcr.io/nvidia/cuda:10.2-devel-ubuntu18.04']
Novetta/adaptnlp,latest,/docker/devel/Dockerfile.cuda10.2-devel-ubuntu18.04-py3.7,ENV,5,"['LC_ALL C.UTF-8', 'LANG C.UTF-8', 'PYTHONUNBUFFERED=1     PYTHONDONTWRITEBYTECODE=1     PIP_NO_CACHE_DIR=off     PIP_DISABLE_PIP_VERSION_CHECK=on     PIP_DEFAULT_TIMEOUT=100', 'VIRTUAL_ENV=/opt/venv', 'PATH=""$VIRTUAL_ENV/bin:$PATH""']"
Novetta/adaptnlp,latest,/docker/devel/Dockerfile.cuda10.2-devel-ubuntu18.04-py3.7,RUN,4,"['apt-get update && apt-get install -y --no-install-recommends     build-essential     python3.7     python3.7-dev     python3.7-venv    python3-pip     curl', 'python3.7 -m venv $VIRTUAL_ENV', 'pip install --upgrade pip', 'pip --no-cache-dir install -e .']"
Novetta/adaptnlp,latest,/docker/devel/Dockerfile.cuda10.2-devel-ubuntu18.04-py3.7,WORKDIR,1,['/adaptnlp']
Novetta/adaptnlp,latest,/docker/devel/Dockerfile.cuda10.2-devel-ubuntu18.04-py3.7,COPY,1,['. /adaptnlp']
Novetta/adaptnlp,latest,/docker/devel/Dockerfile.cuda10.2-devel-ubuntu18.04-py3.7,CMD,1,"['[""sh"",""-c"", ""jupyter notebook --ip=0.0.0.0 --no-browser --allow-root --port=8888 --NotebookApp.token=\'\' --NotebookApp.password=\'\' --NotebookApp.allow_origin=\'*\' --NotebookApp.base_url=${NB_PREFIX}""]']"
Novetta/adaptnlp,latest,/docker/runtime/Dockerfile.cuda10.2-runtime-ubuntu18.04-py3.7,FROM,1,['nvcr.io/nvidia/cuda:10.2-runtime-ubuntu18.04']
Novetta/adaptnlp,latest,/docker/runtime/Dockerfile.cuda10.2-runtime-ubuntu18.04-py3.7,ENV,5,"['LC_ALL C.UTF-8', 'LANG C.UTF-8', 'PYTHONUNBUFFERED=1     PYTHONDONTWRITEBYTECODE=1     PIP_NO_CACHE_DIR=off     PIP_DISABLE_PIP_VERSION_CHECK=on     PIP_DEFAULT_TIMEOUT=100', 'VIRTUAL_ENV=/opt/venv', 'PATH=""$VIRTUAL_ENV/bin:$PATH""']"
Novetta/adaptnlp,latest,/docker/runtime/Dockerfile.cuda10.2-runtime-ubuntu18.04-py3.7,RUN,4,"['apt-get update && apt-get install -y --no-install-recommends     build-essential     python3.7     python3.7-dev     python3.7-venv    python3-pip     curl', 'python3.7 -m venv $VIRTUAL_ENV', 'pip install --upgrade pip', 'pip --no-cache-dir install -e .']"
Novetta/adaptnlp,latest,/docker/runtime/Dockerfile.cuda10.2-runtime-ubuntu18.04-py3.7,WORKDIR,1,['/adaptnlp']
Novetta/adaptnlp,latest,/docker/runtime/Dockerfile.cuda10.2-runtime-ubuntu18.04-py3.7,COPY,1,['. /adaptnlp']
Novetta/adaptnlp,latest,/docker/runtime/Dockerfile.cuda10.2-runtime-ubuntu18.04-py3.7,CMD,1,"['[""sh"",""-c"", ""jupyter notebook --ip=0.0.0.0 --no-browser --allow-root --port=8888 --NotebookApp.token=\'\' --NotebookApp.password=\'\' --NotebookApp.allow_origin=\'*\' --NotebookApp.base_url=${NB_PREFIX}""]']"
Novetta/adaptnlp,latest,/docker/runtime/Dockerfile.cuda11.0-runtime-ubuntu18.04-py3.8,FROM,1,['nvcr.io/nvidia/cuda:11.0-runtime-ubuntu18.04']
Novetta/adaptnlp,latest,/docker/runtime/Dockerfile.cuda11.0-runtime-ubuntu18.04-py3.8,ENV,5,"['LC_ALL C.UTF-8', 'LANG C.UTF-8', 'PYTHONUNBUFFERED=1     PYTHONDONTWRITEBYTECODE=1     PIP_NO_CACHE_DIR=off     PIP_DISABLE_PIP_VERSION_CHECK=on     PIP_DEFAULT_TIMEOUT=100', 'VIRTUAL_ENV=/opt/venv', 'PATH=""$VIRTUAL_ENV/bin:$PATH""']"
Novetta/adaptnlp,latest,/docker/runtime/Dockerfile.cuda11.0-runtime-ubuntu18.04-py3.8,RUN,6,"['apt-get update &&     apt-get install -y software-properties-common', 'add-apt-repository ppa:deadsnakes/ppa', 'apt-get install -y --no-install-recommends     build-essential     python3.8     python3.8-dev     python3.8-venv    python3-pip     curl', 'python3.8 -m venv $VIRTUAL_ENV', 'pip install --upgrade pip', 'pip --no-cache-dir install -e .']"
Novetta/adaptnlp,latest,/docker/runtime/Dockerfile.cuda11.0-runtime-ubuntu18.04-py3.8,WORKDIR,1,['/adaptnlp']
Novetta/adaptnlp,latest,/docker/runtime/Dockerfile.cuda11.0-runtime-ubuntu18.04-py3.8,COPY,1,['. /adaptnlp']
Novetta/adaptnlp,latest,/docker/runtime/Dockerfile.cuda11.0-runtime-ubuntu18.04-py3.8,CMD,1,"['[""sh"",""-c"", ""jupyter notebook --ip=0.0.0.0 --no-browser --allow-root --port=8888 --NotebookApp.token=\'\' --NotebookApp.password=\'\' --NotebookApp.allow_origin=\'*\' --NotebookApp.base_url=${NB_PREFIX}""]']"
Novetta/adaptnlp,latest,/docker/runtime/Dockerfile.cuda11.0-runtime-ubuntu18.04-py3.7,FROM,1,['nvcr.io/nvidia/cuda:10.2-runtime-ubuntu18.04']
Novetta/adaptnlp,latest,/docker/runtime/Dockerfile.cuda11.0-runtime-ubuntu18.04-py3.7,ENV,5,"['LC_ALL C.UTF-8', 'LANG C.UTF-8', 'PYTHONUNBUFFERED=1     PYTHONDONTWRITEBYTECODE=1     PIP_NO_CACHE_DIR=off     PIP_DISABLE_PIP_VERSION_CHECK=on     PIP_DEFAULT_TIMEOUT=100', 'VIRTUAL_ENV=/opt/venv', 'PATH=""$VIRTUAL_ENV/bin:$PATH""']"
Novetta/adaptnlp,latest,/docker/runtime/Dockerfile.cuda11.0-runtime-ubuntu18.04-py3.7,RUN,4,"['apt-get update && apt-get install -y --no-install-recommends     build-essential     python3.8     python3.8-dev     python3.8-venv    python3-pip     curl', 'python3.8 -m venv $VIRTUAL_ENV', 'pip install --upgrade pip', 'pip --no-cache-dir install -e .']"
Novetta/adaptnlp,latest,/docker/runtime/Dockerfile.cuda11.0-runtime-ubuntu18.04-py3.7,WORKDIR,1,['/adaptnlp']
Novetta/adaptnlp,latest,/docker/runtime/Dockerfile.cuda11.0-runtime-ubuntu18.04-py3.7,COPY,1,['. /adaptnlp']
Novetta/adaptnlp,latest,/docker/runtime/Dockerfile.cuda11.0-runtime-ubuntu18.04-py3.7,CMD,1,"['[""sh"",""-c"", ""jupyter notebook --ip=0.0.0.0 --no-browser --allow-root --port=8888 --NotebookApp.token=\'\' --NotebookApp.password=\'\' --NotebookApp.allow_origin=\'*\' --NotebookApp.base_url=${NB_PREFIX}""]']"
Novetta/adaptnlp,latest,/docker/runtime/Dockerfile.cuda10.2-runtime-ubuntu18.04-py3.8,FROM,1,['nvcr.io/nvidia/cuda:10.2-runtime-ubuntu18.04']
Novetta/adaptnlp,latest,/docker/runtime/Dockerfile.cuda10.2-runtime-ubuntu18.04-py3.8,ENV,5,"['LC_ALL C.UTF-8', 'LANG C.UTF-8', 'PYTHONUNBUFFERED=1     PYTHONDONTWRITEBYTECODE=1     PIP_NO_CACHE_DIR=off     PIP_DISABLE_PIP_VERSION_CHECK=on     PIP_DEFAULT_TIMEOUT=100', 'VIRTUAL_ENV=/opt/venv', 'PATH=""$VIRTUAL_ENV/bin:$PATH""']"
Novetta/adaptnlp,latest,/docker/runtime/Dockerfile.cuda10.2-runtime-ubuntu18.04-py3.8,RUN,6,"['apt-get update &&     apt-get install -y software-properties-common', 'add-apt-repository ppa:deadsnakes/ppa', 'apt-get install -y --no-install-recommends     build-essential     python3.8     python3.8-dev     python3.8-venv    python3-pip     curl     git', 'python3.8 -m venv $VIRTUAL_ENV', 'pip install --upgrade pip', 'pip --no-cache-dir install -e .']"
Novetta/adaptnlp,latest,/docker/runtime/Dockerfile.cuda10.2-runtime-ubuntu18.04-py3.8,WORKDIR,1,['/adaptnlp']
Novetta/adaptnlp,latest,/docker/runtime/Dockerfile.cuda10.2-runtime-ubuntu18.04-py3.8,COPY,1,['. /adaptnlp']
Novetta/adaptnlp,latest,/docker/runtime/Dockerfile.cuda10.2-runtime-ubuntu18.04-py3.8,CMD,1,"['[""sh"",""-c"", ""jupyter notebook --ip=0.0.0.0 --no-browser --allow-root --port=8888 --NotebookApp.token=\'\' --NotebookApp.password=\'\' --NotebookApp.allow_origin=\'*\' --NotebookApp.base_url=${NB_PREFIX}""]']"
Novetta/adaptnlp,latest,/rest/question-answering/Dockerfile,FROM,1,['novetta/adaptnlp:latest']
Novetta/adaptnlp,latest,/rest/question-answering/Dockerfile,ENV,5,"['REQUESTS_CA_BUNDLE /etc/ssl/certs/ca-certificates.crt', 'SERVER_PORT 5000', 'SERVER_HOST 0.0.0.0', 'PYTHONUNBUFFERED True', 'QUESTION_ANSWERING_MODEL ${QUESTION_ANSWERING_MODEL}']"
Novetta/adaptnlp,latest,/rest/question-answering/Dockerfile,ARG,1,['QUESTION_ANSWERING_MODEL=distilbert-base-uncased-distilled-squad']
Novetta/adaptnlp,latest,/rest/question-answering/Dockerfile,EXPOSE,2,"['8888', '5000']"
Novetta/adaptnlp,latest,/rest/question-answering/Dockerfile,WORKDIR,1,['/adaptnlp-rest']
Novetta/adaptnlp,latest,/rest/question-answering/Dockerfile,COPY,1,['. /adaptnlp-rest']
Novetta/adaptnlp,latest,/rest/question-answering/Dockerfile,RUN,2,"['pip3 install -r requirements.txt', 'chmod +x ./entrypoint.sh']"
Novetta/adaptnlp,latest,/rest/question-answering/Dockerfile,ENTRYPOINT,1,"['[""./entrypoint.sh""]']"
Novetta/adaptnlp,latest,/rest/text-generation/Dockerfile,FROM,1,['novetta/adaptnlp:latest']
Novetta/adaptnlp,latest,/rest/text-generation/Dockerfile,ENV,5,"['REQUESTS_CA_BUNDLE /etc/ssl/certs/ca-certificates.crt', 'SERVER_PORT 5000', 'SERVER_HOST 0.0.0.0', 'PYTHONUNBUFFERED True', 'TEXT_GENERATION_MODEL=${TEXT_GENERATION_MODEL}']"
Novetta/adaptnlp,latest,/rest/text-generation/Dockerfile,ARG,1,['TEXT_GENERATION_MODEL=gpt2']
Novetta/adaptnlp,latest,/rest/text-generation/Dockerfile,EXPOSE,2,"['8888', '5000']"
Novetta/adaptnlp,latest,/rest/text-generation/Dockerfile,WORKDIR,1,['/adaptnlp-rest']
Novetta/adaptnlp,latest,/rest/text-generation/Dockerfile,COPY,1,['. /adaptnlp-rest']
Novetta/adaptnlp,latest,/rest/text-generation/Dockerfile,RUN,2,"['pip3 install -r requirements.txt', 'chmod +x ./entrypoint.sh']"
Novetta/adaptnlp,latest,/rest/text-generation/Dockerfile,ENTRYPOINT,1,"['[""./entrypoint.sh""]']"
Novetta/adaptnlp,latest,/rest/translation/Dockerfile,FROM,1,['novetta/adaptnlp:latest']
Novetta/adaptnlp,latest,/rest/translation/Dockerfile,ENV,5,"['REQUESTS_CA_BUNDLE /etc/ssl/certs/ca-certificates.crt', 'SERVER_PORT 5000', 'SERVER_HOST 0.0.0.0', 'PYTHONUNBUFFERED True', 'TRANSLATION_MODEL=${TRANSLATION_MODEL}']"
Novetta/adaptnlp,latest,/rest/translation/Dockerfile,ARG,1,['TRANSLATION_MODEL=Helsinki-NLP/opus-mt-ar-en']
Novetta/adaptnlp,latest,/rest/translation/Dockerfile,EXPOSE,2,"['8888', '5000']"
Novetta/adaptnlp,latest,/rest/translation/Dockerfile,WORKDIR,1,['/adaptnlp-rest']
Novetta/adaptnlp,latest,/rest/translation/Dockerfile,COPY,1,['. /adaptnlp-rest']
Novetta/adaptnlp,latest,/rest/translation/Dockerfile,RUN,2,"['pip3 install -r requirements.txt', 'chmod +x ./entrypoint.sh']"
Novetta/adaptnlp,latest,/rest/translation/Dockerfile,ENTRYPOINT,1,"['[""./entrypoint.sh""]']"
Novetta/adaptnlp,latest,/rest/summarization/Dockerfile,FROM,1,['novetta/adaptnlp:latest']
Novetta/adaptnlp,latest,/rest/summarization/Dockerfile,ENV,5,"['REQUESTS_CA_BUNDLE /etc/ssl/certs/ca-certificates.crt', 'SERVER_PORT 5000', 'SERVER_HOST 0.0.0.0', 'PYTHONUNBUFFERED True', 'SUMMARIZATION_MODEL=${SUMMARIZATION_MODEL}']"
Novetta/adaptnlp,latest,/rest/summarization/Dockerfile,ARG,1,['SUMMARIZATION_MODEL=facebook/bart-large-cnn']
Novetta/adaptnlp,latest,/rest/summarization/Dockerfile,EXPOSE,2,"['8888', '5000']"
Novetta/adaptnlp,latest,/rest/summarization/Dockerfile,WORKDIR,1,['/adaptnlp-rest']
Novetta/adaptnlp,latest,/rest/summarization/Dockerfile,COPY,1,['. /adaptnlp-rest']
Novetta/adaptnlp,latest,/rest/summarization/Dockerfile,RUN,2,"['pip3 install -r requirements.txt', 'chmod +x ./entrypoint.sh']"
Novetta/adaptnlp,latest,/rest/summarization/Dockerfile,ENTRYPOINT,1,"['[""./entrypoint.sh""]']"
Novetta/adaptnlp,latest,/rest/sequence-classification/Dockerfile,FROM,1,['novetta/adaptnlp:latest']
Novetta/adaptnlp,latest,/rest/sequence-classification/Dockerfile,ENV,5,"['REQUESTS_CA_BUNDLE /etc/ssl/certs/ca-certificates.crt', 'SERVER_PORT 5000', 'SERVER_HOST 0.0.0.0', 'PYTHONUNBUFFERED True', 'SEQUENCE_CLASSIFICATION_MODEL ${SEQUENCE_CLASSIFICATION_MODEL}']"
Novetta/adaptnlp,latest,/rest/sequence-classification/Dockerfile,ARG,1,['SEQUENCE_CLASSIFICATION_MODEL=nlptown/bert-base-multilingual-uncased-sentiment']
Novetta/adaptnlp,latest,/rest/sequence-classification/Dockerfile,EXPOSE,2,"['8888', '5000']"
Novetta/adaptnlp,latest,/rest/sequence-classification/Dockerfile,WORKDIR,1,['/adaptnlp-rest']
Novetta/adaptnlp,latest,/rest/sequence-classification/Dockerfile,COPY,1,['. /adaptnlp-rest']
Novetta/adaptnlp,latest,/rest/sequence-classification/Dockerfile,RUN,2,"['pip3 install -r requirements.txt', 'chmod +x ./entrypoint.sh']"
Novetta/adaptnlp,latest,/rest/sequence-classification/Dockerfile,ENTRYPOINT,1,"['[""./entrypoint.sh""]']"
Novetta/adaptnlp,latest,/rest/token-tagging/Dockerfile,FROM,1,['novetta/adaptnlp:latest']
Novetta/adaptnlp,latest,/rest/token-tagging/Dockerfile,ENV,6,"['REQUESTS_CA_BUNDLE /etc/ssl/certs/ca-certificates.crt', 'SERVER_PORT 5000', 'SERVER_HOST 0.0.0.0', 'PYTHONUNBUFFERED True', 'TOKEN_TAGGING_MODE ${TOKEN_TAGGING_MODE}', 'TOKEN_TAGGING_MODEL ${TOKEN_TAGGING_MODEL}']"
Novetta/adaptnlp,latest,/rest/token-tagging/Dockerfile,ARG,2,"['TOKEN_TAGGING_MODE=ner', 'TOKEN_TAGGING_MODEL=ner-ontonotes-fast']"
Novetta/adaptnlp,latest,/rest/token-tagging/Dockerfile,EXPOSE,2,"['8888', '5000']"
Novetta/adaptnlp,latest,/rest/token-tagging/Dockerfile,WORKDIR,1,['/adaptnlp-rest']
Novetta/adaptnlp,latest,/rest/token-tagging/Dockerfile,COPY,1,['. /adaptnlp-rest']
Novetta/adaptnlp,latest,/rest/token-tagging/Dockerfile,RUN,2,"['pip3 install -r requirements.txt', 'chmod +x ./entrypoint.sh']"
Novetta/adaptnlp,latest,/rest/token-tagging/Dockerfile,ENTRYPOINT,1,"['[""./entrypoint.sh""]']"
SAP/credential-digger,latest,/ui/Dockerfile,FROM,1,['python:3.9-bullseye as builder']
SAP/credential-digger,latest,/ui/Dockerfile,RUN,9,"['pip install flask_jwt_extended Flask python-dotenv', 'apt-get update && apt-get install -y libhyperscan5 libpq-dev gunicorn3', 'apt-get install -y dos2unix', 'git config --global http.sslverify false', 'git config --global core.autocrlf false', 'pip install credentialdigger', 'pip install gunicorn', 'find . -type f -print0 | xargs -0 dos2unix', 'chmod +x run.sh']"
SAP/credential-digger,latest,/ui/Dockerfile,ARG,2,"['SSL_certificate', 'SSL_private_key']"
SAP/credential-digger,latest,/ui/Dockerfile,COPY,1,['. /credential-digger-ui']
SAP/credential-digger,latest,/ui/Dockerfile,WORKDIR,1,['/credential-digger-ui/']
SAP/credential-digger,latest,/ui/Dockerfile,CMD,1,"['[ ""./run.sh"" ]']"
locationtech/rasterframes,latest,/rf-notebook/src/main/docker/Dockerfile,FROM,1,['jupyter/scipy-notebook:python-3.8.8']
locationtech/rasterframes,latest,/rf-notebook/src/main/docker/Dockerfile,LABEL,1,"['maintainer=""Astraea, Inc. <info@astraea.earth>""']"
locationtech/rasterframes,latest,/rf-notebook/src/main/docker/Dockerfile,USER,2,"['root', '$NB_UID']"
locationtech/rasterframes,latest,/rf-notebook/src/main/docker/Dockerfile,RUN,9,"['apt-get -y update &&     apt-get install --no-install-recommends -y openjdk-11-jdk ca-certificates-java &&     apt-get clean &&     rm -rf /var/lib/apt/lists/*', 'cd /tmp &&     wget --quiet https://archive.apache.org/dist/spark/${APACHE_SPARK_REMOTE_PATH} &&     echo ""${APACHE_SPARK_CHECKSUM} *${APACHE_SPARK_FILENAME}"" | sha512sum -c -', 'cd /tmp &&     tar xzf ${APACHE_SPARK_FILENAME} -C /usr/local --owner root --group root --no-same-owner &&     rm ${APACHE_SPARK_FILENAME}', 'cd /usr/local && ln -s spark-${APACHE_SPARK_VERSION}-bin-hadoop${HADOOP_VERSION} spark', 'chmod u+x $RF_LIB_LOC/conda_cleanup.sh', 'conda config --set unsatisfiable_hints True &&     conda --debug update --channel conda-forge --all --yes --quiet &&     conda install --yes --channel conda-forge --file $RF_LIB_LOC/requirements-nb.txt &&     $RF_LIB_LOC/conda_cleanup.sh $NB_USER $CONDA_DIR', 'conda list --export', 'ls -1 $RF_LIB_LOC/*.whl | xargs pip install --no-cache-dir', 'chmod -R +w $HOME/examples && chown -R $NB_UID:$NB_GID $HOME']"
locationtech/rasterframes,latest,/rf-notebook/src/main/docker/Dockerfile,ENV,7,"['APACHE_SPARK_VERSION 3.1.2', 'HADOOP_VERSION 3.2', 'SPARK_HOME /usr/local/spark', 'PYTHONPATH $SPARK_HOME/python:$SPARK_HOME/python/lib/py4j-0.10.9-src.zip', 'SPARK_OPTS --driver-java-options=-Xms1024M --driver-java-options=-Xmx4096M --driver-java-options=-Dlog4j.logLevel=info', 'RF_LIB_LOC=/usr/local/rasterframes', 'LD_LIBRARY_PATH=""$LD_LIBRARY_PATH:/opt/conda/lib""']"
locationtech/rasterframes,latest,/rf-notebook/src/main/docker/Dockerfile,ARG,3,"['APACHE_SPARK_CHECKSUM=""2385cb772f21b014ce2abd6b8f5e815721580d6e8bc42a26d70bbcdda8d303d886a6f12b36d40f6971b5547b70fae62b5a96146f0421cb93d4e51491308ef5d5""', 'APACHE_SPARK_FILENAME=""spark-${APACHE_SPARK_VERSION}-bin-hadoop${HADOOP_VERSION}.tgz""', 'APACHE_SPARK_REMOTE_PATH=""spark-${APACHE_SPARK_VERSION}/${APACHE_SPARK_FILENAME}""']"
locationtech/rasterframes,latest,/rf-notebook/src/main/docker/Dockerfile,COPY,4,"['conda_cleanup.sh requirements-nb.txt $RF_LIB_LOC/', '*.whl $RF_LIB_LOC/', 'jupyter_notebook_config.py $HOME/.jupyter/', 'examples $HOME/examples']"
locationtech/rasterframes,latest,/rf-notebook/src/main/docker/Dockerfile,EXPOSE,1,['4040 4041 4042 4043 4044']
locationtech/rasterframes,latest,/.circleci/Dockerfile,FROM,1,['circleci/openjdk:11-jdk']
locationtech/rasterframes,latest,/.circleci/Dockerfile,USER,2,"['root', '3434']"
locationtech/rasterframes,latest,/.circleci/Dockerfile,RUN,3,"['curl -s https://repo.anaconda.com/pkgs/misc/gpgkeys/anaconda.asc | gpg --dearmor > conda.gpg  &&   install -o root -g root -m 644 conda.gpg /usr/share/keyrings/conda-archive-keyring.gpg &&   gpg --keyring /usr/share/keyrings/conda-archive-keyring.gpg --no-default-keyring --fingerprint 34161F5BF5EB1D4BFBBB8F0A8AEB4F8B29D82806 &&   echo ""deb [arch=amd64 signed-by=/usr/share/keyrings/conda-archive-keyring.gpg] https://repo.anaconda.com/pkgs/misc/debrepo/conda stable main"" > /etc/apt/sources.list.d/conda.list', 'apt-get update &&   apt-get install -yq --no-install-recommends conda &&   apt-get clean &&   rm -rf /var/lib/apt/lists/*', 'conda install --quiet --yes --channel=conda-forge --file=/tmp/requirements-conda.txt &&     echo ""$CONDA_DIR/lib"" > /etc/ld.so.conf.d/conda.conf &&     ldconfig &&     conda clean --all --force-pkgs-dirs --yes --quiet &&     sh /tmp/fix-permissions $CONDA_DIR']"
locationtech/rasterframes,latest,/.circleci/Dockerfile,ENV,3,"['CONDA_DIR=/opt/conda', 'PATH=$CONDA_DIR/bin:$PATH', 'PROJ_LIB=/opt/conda/share/proj']"
locationtech/rasterframes,latest,/.circleci/Dockerfile,COPY,1,['requirements-conda.txt fix-permissions /tmp']
locationtech/rasterframes,latest,/.circleci/Dockerfile,WORKDIR,1,['/home/circleci']
roflcoopter/viseron,latest,/docker/Dockerfile.python,FROM,2,"['balenalib/raspberrypi3-debian:buster-build as build', 'balenalib/raspberrypi3-debian:buster-build']"
roflcoopter/viseron,latest,/docker/Dockerfile.python,RUN,9,"['[ ""cross-build-start"" ]', 'apt-get -yqq update && apt-get install -yq --no-install-recommends   ca-certificates   dirmngr   dpkg-dev   gcc   gnupg   libbz2-dev   libc6-dev   libexpat1-dev   libffi-dev   liblzma-dev   libsqlite3-dev   libssl-dev   make   netbase   uuid-dev   wget   xz-utils   zlib1g-dev', 'wget --no-verbose --output-document=python.tar.xz ""https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz""   && wget --no-verbose --output-document=python.tar.xz.asc ""https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc""   && export GNUPGHOME=""$(mktemp -d)""   && gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys ""$GPG_KEY""   && gpg --batch --verify python.tar.xz.asc python.tar.xz   && { command -v gpgconf > /dev/null && gpgconf --kill all || :; }   && rm -rf ""$GNUPGHOME"" python.tar.xz.asc   && mkdir -p /usr/src/python   && tar -xJC /usr/src/python --strip-components=1 -f python.tar.xz   && rm python.tar.xz', 'cd /usr/src/python   && gnuArch=""$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)""   && ./configure --help   && ./configure   --build=""$gnuArch""   --prefix=""/python""   --enable-loadable-sqlite-extensions   --enable-optimizations   --enable-ipv6   --disable-shared   --with-system-expat   --without-ensurepip   && make   && make install', 'strip /python/bin/python3.8 &&   strip --strip-unneeded /python/lib/python3.8/config-3.8-arm-linux-gnueabihf/libpython3.8.a &&   strip --strip-unneeded /python/lib/python3.8/lib-dynload/*.so &&   rm /python/lib/libpython3.8.a &&   ln /python/lib/python3.8/config-3.8-arm-linux-gnueabihf/libpython3.8.a /python/lib/libpython3.8.a', 'wget --no-verbose --output-document=get-pip.py ""$PIP_URL"";     /python/bin/python3 get-pip.py   --disable-pip-version-check   --no-cache-dir   ""pip==$PYTHON_PIP_VERSION"" ""wheel""', 'find /python/lib -type d -a \\(   -name test -o   -name tests -o   -name idlelib -o   -name turtledemo -o   -name pydoc_data -o   -name tkinter \\) -exec rm -rf {} +', '[ ""cross-build-end"" ]', 'ln -s /python/bin/python3-config /usr/local/bin/python-config &&   ln -s /python/bin/python3 /usr/local/bin/python3 &&   ln -s /python/bin/pip3 /usr/local/bin/pip3 &&     apt-get update && apt-get install -y --no-install-recommends   ca-certificates   libexpat1   libsqlite3-0   libssl1.1     && apt-get autoremove -y   && apt-get clean -y   && rm -rf /var/lib/apt/lists/*']"
roflcoopter/viseron,latest,/docker/Dockerfile.python,ARG,3,"['PYTHON_VERSION=3.8.6', 'PYTHON_PIP_VERSION=20.2.4', 'MAKEFLAGS=""-j2""']"
roflcoopter/viseron,latest,/docker/Dockerfile.python,ENV,5,"['GPG_KEY E3FF2839C048B25C084DEBE9B26995E310250568', 'LANG=C.UTF-8', 'DEBIAN_FRONTEND=noninteractive', 'PIP_URL=https://bootstrap.pypa.io/get-pip.py', 'PIP_SHA256=b3153ec0cf7b7bbf9556932aa37e4981c35dc2a2c501d70d91d2795aa532be79']"
roflcoopter/viseron,latest,/docker/Dockerfile.python,COPY,1,['--from=build /python /python']
roflcoopter/viseron,latest,/docker/Dockerfile.python,CMD,1,"['[""python3""]']"
roflcoopter/viseron,latest,/docker/Dockerfile,ARG,7,"['ARCH', 'BASE_VERSION', 'OPENCV_VERSION', 'FFMPEG_VERSION', 'WHEELS_VERSION', 'S6_OVERLAY_ARCH', 'S6_OVERLAY_VERSION']"
roflcoopter/viseron,latest,/docker/Dockerfile,FROM,4,"['roflcoopter/${ARCH}-opencv:${OPENCV_VERSION} as opencv', 'roflcoopter/${ARCH}-ffmpeg:${FFMPEG_VERSION} as ffmpeg', 'roflcoopter/${ARCH}-wheels:${WHEELS_VERSION} as wheels', 'roflcoopter/${ARCH}-base:${BASE_VERSION}']"
roflcoopter/viseron,latest,/docker/Dockerfile,WORKDIR,1,['/src']
roflcoopter/viseron,latest,/docker/Dockerfile,COPY,5,"['--from=opencv /opt/opencv /usr/local/', '--from=ffmpeg /usr/local /usr/local/', '--from=wheels /wheels /wheels', 'rootfs/ /', 'viseron /src/viseron/']"
roflcoopter/viseron,latest,/docker/Dockerfile,ENV,1,['DEBIAN_FRONTEND=noninteractive   S6_KEEP_ENV=1   S6_SERVICES_GRACETIME=10000   PATH=$PATH:/home/abc/bin   OPENCV_OPENCL_CACHE_ENABLE=false']
roflcoopter/viseron,latest,/docker/Dockerfile,ADD,1,['https://github.com/just-containers/s6-overlay/releases/download/v${S6_OVERLAY_VERSION}/s6-overlay-${S6_OVERLAY_ARCH}-installer /tmp/s6-overlay-installer']
roflcoopter/viseron,latest,/docker/Dockerfile,RUN,1,"['apt-get update && apt-get install -y --no-install-recommends   curl   gnupg   tzdata   python3   python3-pip   python3-sklearn   usbutils   libgomp1   libopenblas-base   && rm -rf /var/lib/apt/lists/*     && pip3 install /wheels/*.whl   && rm -r /wheels     && echo ""deb https://packages.cloud.google.com/apt coral-edgetpu-stable main"" | tee /etc/apt/sources.list.d/coral-edgetpu.list   && curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -   && echo ""libedgetpu1-max libedgetpu/accepted-eula select true"" | debconf-set-selections   && apt-get -qq update && apt-get -qq install --no-install-recommends -y   libedgetpu1-max   python3-pycoral     && chmod +x /tmp/s6-overlay-installer && /tmp/s6-overlay-installer /   && apt-get autoremove -y   && apt-get clean -y   && rm -rf /var/lib/apt/lists/*   && rm -rf /wheels   && rm -r /tmp/s6-overlay-installer   && useradd --uid 911 --user-group --create-home abc   && mkdir -p /home/abc/bin /segments']"
roflcoopter/viseron,latest,/docker/Dockerfile,VOLUME,2,"['/config', '/recordings']"
roflcoopter/viseron,latest,/docker/Dockerfile,ENTRYPOINT,1,"['[""/init""]']"
roflcoopter/viseron,latest,/docker/Dockerfile.models,ARG,1,['UBUNTU_VERSION']
roflcoopter/viseron,latest,/docker/Dockerfile.models,FROM,2,"['ubuntu:${UBUNTU_VERSION} as base', 'scratch']"
roflcoopter/viseron,latest,/docker/Dockerfile.models,RUN,6,"['apt-get update && apt-get install -y --no-install-recommends   ca-certificates   wget', 'mkdir -p /detectors/models/edgetpu/classification &&   wget https://github.com/google-coral/test_data/raw/master/ssd_mobilenet_v2_coco_quant_postprocess_edgetpu.tflite -O /detectors/models/edgetpu/model.tflite --progress=bar:force:noscroll &&   wget https://github.com/google-coral/test_data/raw/master/ssd_mobilenet_v2_coco_quant_postprocess.tflite         -O /detectors/models/edgetpu/cpu_model.tflite --progress=bar:force:noscroll &&   wget https://github.com/google-coral/test_data/raw/master/ssdlite_mobiledet_coco_qat_postprocess_edgetpu.tflite  -O /detectors/models/edgetpu/mobiledet_model.tflite --progress=bar:force:noscroll &&   wget https://github.com/google-coral/test_data/raw/master/ssdlite_mobiledet_coco_qat_postprocess.tflite          -O /detectors/models/edgetpu/mobiledet_cpu_model.tflite --progress=bar:force:noscroll &&   wget https://github.com/google-coral/test_data/raw/master/coco_labels.txt -O /detectors/models/edgetpu/labels.txt --progress=bar:force:noscroll', 'mkdir -p /detectors/models/darknet &&   wget https://github.com/AlexeyAB/darknet/releases/download/darknet_yolo_v3_optimal/yolov4.weights -O /detectors/models/darknet/yolov4.weights --progress=bar:force:noscroll &&   wget https://raw.githubusercontent.com/AlexeyAB/darknet/master/cfg/coco.names -O /detectors/models/darknet/coco.names --progress=bar:force:noscroll', 'wget https://github.com/AlexeyAB/darknet/releases/download/darknet_yolo_v4_pre/yolov4-tiny.weights -O /detectors/models/darknet/yolov4-tiny.weights --progress=bar:force:noscroll', 'wget https://github.com/AlexeyAB/darknet/releases/download/darknet_yolo_v3_optimal/yolov3.weights -O /detectors/models/darknet/yolov3.weights --progress=bar:force:noscroll &&   wget https://raw.githubusercontent.com/AlexeyAB/darknet/master/cfg/yolov3.cfg -O /detectors/models/darknet/yolov3.cfg --progress=bar:force:noscroll', 'wget https://pjreddie.com/media/files/yolov3-tiny.weights -O /detectors/models/darknet/yolov3-tiny.weights --progress=bar:force:noscroll &&   wget https://raw.githubusercontent.com/pjreddie/darknet/master/cfg/yolov3-tiny.cfg -O /detectors/models/darknet/yolov3-tiny.cfg --progress=bar:force:noscroll']"
roflcoopter/viseron,latest,/docker/Dockerfile.models,ADD,2,"['./docker/yolov4.cfg /detectors/models/darknet/yolov4.cfg', './docker/yolov4-tiny.cfg /detectors/models/darknet/yolov4-tiny.cfg']"
roflcoopter/viseron,latest,/docker/Dockerfile.models,COPY,1,['--from=base /detectors /detectors']
roflcoopter/viseron,latest,/docker/Dockerfile.tests,ARG,2,"['ARCH', 'VISERON_VERSION']"
roflcoopter/viseron,latest,/docker/Dockerfile.tests,FROM,1,['roflcoopter/${ARCH}-viseron:${VISERON_VERSION}']
roflcoopter/viseron,latest,/docker/Dockerfile.tests,WORKDIR,1,['/src']
roflcoopter/viseron,latest,/docker/Dockerfile.tests,ENV,1,['VISERON_TESTS=true']
roflcoopter/viseron,latest,/docker/Dockerfile.tests,ADD,1,['requirements_test.txt requirements_test.txt']
roflcoopter/viseron,latest,/docker/Dockerfile.tests,RUN,1,['pip3 install -r requirements_test.txt']
roflcoopter/viseron,latest,/docker/Dockerfile.tests,COPY,2,"['viseron /src/viseron/', 'tests /src/tests/']"
roflcoopter/viseron,latest,/docker/Dockerfile.wheels,ARG,5,"['UBUNTU_VERSION', 'ARCH', 'DLIB_VERSION', 'BUILD_FROM', 'ARCH']"
roflcoopter/viseron,latest,/docker/Dockerfile.wheels,FROM,3,"['roflcoopter/${ARCH}-dlib:${DLIB_VERSION} as dlib', '${BUILD_FROM} as build', 'scratch']"
roflcoopter/viseron,latest,/docker/Dockerfile.wheels,COPY,2,"['--from=dlib /wheels /wheels', '--from=build /wheels /wheels']"
roflcoopter/viseron,latest,/docker/Dockerfile.wheels,ENV,1,['DEBIAN_FRONTEND=noninteractive   PIP_IGNORE_INSTALLED=0']
roflcoopter/viseron,latest,/docker/Dockerfile.wheels,RUN,3,"['if [ ""$ARCH"" = ""armhf"" ] ||   [ ""$ARCH"" = ""rpi3"" ] ||   [ ""$ARCH"" = ""aarch64"" ] ; then echo ""Crossbuilding!"" && cross-build-start; fi', 'apt-get -yqq update && apt-get install -yq --no-install-recommends   curl   python3   python3-dev   python3-pip   python3-setuptools   python3-wheel   && apt-get autoremove -y && apt-get clean -y', 'mkdir -p /wheels   && if [ ""$ARCH"" = ""amd64"" ] || [ ""$ARCH"" = ""amd64-cuda"" ]; then export PLATFORM=""x86_64"";   elif [ ""$ARCH"" = ""armhf"" ] || [ ""$ARCH"" = ""rpi3"" ]; then export PLATFORM=""armv7l"";   else export PLATFORM=""$ARCH""; fi     && pip3 wheel --wheel-dir=/wheels --find-links=/wheels -r /requirements.txt     && ls -al /wheels/']"
roflcoopter/viseron,latest,/docker/Dockerfile.wheels,ADD,1,['requirements.txt requirements.txt']
roflcoopter/viseron,latest,/docker/amd64/Dockerfile.ffmpeg,ARG,44,"['UBUNTU_VERSION', 'MAKEFLAGS=""-j2""', 'OPENCOREAMR_VERSION', 'X264_VERSION', 'X265_VERSION', 'OGG_VERSION', 'OGG_SHA256SUM', 'OPUS_VERSION', 'OPUS_SHA256SUM', 'VORBIS_VERSION', 'VORBIS_SHA256SUM', 'THEORA_VERSION', 'THEORA_SHA256SUM', 'VPX_VERSION', 'WEBP_VERSION', 'LAME_VERSION', 'XVID_VERSION', 'XVID_SHA256SUM', 'FDKAAC_VERSION', 'OPENJPEG_VERSION', 'FREETYPE_VERSION', 'FREETYPE_SHA256SUM', 'LIBVIDSTAB_VERSION', 'LIBVIDSTAB_SHA256SUM', 'FRIBIDI_VERSION', 'FRIBIDI_SHA256SUM', 'FONTCONFIG_VERSION', 'LIBASS_VERSION', 'LIBASS_SHA256SUM', 'KVAZAAR_VERSION', 'AOM_VERSION', 'XORG_MACROS_VERSION', 'XPROTO_VERSION', 'XAU_VERSION', 'LIBPTHREAD_STUBS_VERSION', 'XCBPROTO_VERSION', 'LIBXCB_VERSION', 'LIBXML2_VERSION', 'LIBXML2_SHA256SUM', 'LIBBLURAY_VERSION', 'LIBBLURAY_SHA256SUM', 'LIBZMQ_VERSION', 'LIBZMQ_SHA256SUM', 'FFMPEG_VERSION']"
roflcoopter/viseron,latest,/docker/amd64/Dockerfile.ffmpeg,FROM,2,"['ubuntu:${UBUNTU_VERSION} AS build', 'scratch']"
roflcoopter/viseron,latest,/docker/amd64/Dockerfile.ffmpeg,WORKDIR,1,['/tmp/workdir']
roflcoopter/viseron,latest,/docker/amd64/Dockerfile.ffmpeg,ENV,1,"['DEBIAN_FRONTEND=noninteractive   SRC=/usr/local   PATH=/usr/custom_cmake/bin:$PATH   PKG_CONFIG_PATH=""/opt/ffmpeg/share/pkgconfig:/opt/ffmpeg/lib/pkgconfig:/opt/ffmpeg/lib64/pkgconfig""   PREFIX=/opt/ffmpeg   LD_LIBRARY_PATH=""/opt/ffmpeg/lib:/opt/ffmpeg/lib64:/usr/lib64:/usr/lib:/lib64:/lib""']"
roflcoopter/viseron,latest,/docker/amd64/Dockerfile.ffmpeg,RUN,32,"['buildDeps=""autoconf   automake   ca-certificates   cmake   curl   bzip2   libexpat1-dev   g++   gcc   git   gperf   libtool   make   nasm   perl   pkg-config   python   libssl-dev   yasm   libgomp1   libnuma-dev   zlib1g-dev   libva-dev"" &&   apt-get -yqq update &&   apt-get install -yq --no-install-recommends ${buildDeps}', 'DIR=/tmp/opencore-amr &&   mkdir -p ${DIR} &&   cd ${DIR} &&   curl -sL https://versaweb.dl.sourceforge.net/project/opencore-amr/opencore-amr/opencore-amr-${OPENCOREAMR_VERSION}.tar.gz |   tar -zx --strip-components=1 &&   ./configure --prefix=""${PREFIX}"" --enable-shared  &&   make &&   make install &&   rm -rf ${DIR}', 'DIR=/tmp/x264 &&   mkdir -p ${DIR} &&   cd ${DIR} &&   curl -sL https://download.videolan.org/pub/videolan/x264/snapshots/x264-snapshot-${X264_VERSION}.tar.bz2 |   tar -jx --strip-components=1 &&   ./configure --prefix=""${PREFIX}"" --enable-shared --enable-pic --disable-cli &&   make &&   make install &&   rm -rf ${DIR}', 'DIR=/tmp/x265 &&   mkdir -p ${DIR} &&   cd ${DIR} &&   curl -sL https://download.videolan.org/pub/videolan/x265/x265_${X265_VERSION}.tar.gz  |   tar -zx &&   cd x265_${X265_VERSION}/build/linux &&   sed -i ""/-DEXTRA_LIB/ s/$/ -DCMAKE_INSTALL_PREFIX=\\${PREFIX}/"" multilib.sh &&   sed -i ""/^cmake/ s/$/ -DENABLE_CLI=OFF/"" multilib.sh &&   ./multilib.sh &&   make -C 8bit install &&   rm -rf ${DIR}', 'DIR=/tmp/ogg &&   mkdir -p ${DIR} &&   cd ${DIR} &&   curl -sLO http://downloads.xiph.org/releases/ogg/libogg-${OGG_VERSION}.tar.gz &&   echo ${OGG_SHA256SUM} | sha256sum --check &&   tar -zx --strip-components=1 -f libogg-${OGG_VERSION}.tar.gz &&   ./configure --prefix=""${PREFIX}"" --enable-shared  &&   make &&   make install &&   rm -rf ${DIR}', 'DIR=/tmp/opus &&   mkdir -p ${DIR} &&   cd ${DIR} &&   curl -sLO https://archive.mozilla.org/pub/opus/opus-${OPUS_VERSION}.tar.gz &&   echo ${OPUS_SHA256SUM} | sha256sum --check &&   tar -zx --strip-components=1 -f opus-${OPUS_VERSION}.tar.gz &&   autoreconf -fiv &&   ./configure --prefix=""${PREFIX}"" --enable-shared &&   make &&   make install &&   rm -rf ${DIR}', 'DIR=/tmp/vorbis &&   mkdir -p ${DIR} &&   cd ${DIR} &&   curl -sLO http://downloads.xiph.org/releases/vorbis/libvorbis-${VORBIS_VERSION}.tar.gz &&   echo ${VORBIS_SHA256SUM} | sha256sum --check &&   tar -zx --strip-components=1 -f libvorbis-${VORBIS_VERSION}.tar.gz &&   ./configure --prefix=""${PREFIX}"" --with-ogg=""${PREFIX}"" --enable-shared &&   make &&   make install &&   rm -rf ${DIR}', 'DIR=/tmp/theora &&   mkdir -p ${DIR} &&   cd ${DIR} &&   curl -sLO http://downloads.xiph.org/releases/theora/libtheora-${THEORA_VERSION}.tar.gz &&   echo ${THEORA_SHA256SUM} | sha256sum --check &&   tar -zx --strip-components=1 -f libtheora-${THEORA_VERSION}.tar.gz &&   ./configure --prefix=""${PREFIX}"" --with-ogg=""${PREFIX}"" --enable-shared --disable-examples &&   make &&   make install &&   rm -rf ${DIR}', 'DIR=/tmp/vpx &&   mkdir -p ${DIR} &&   cd ${DIR} &&   curl -sL https://codeload.github.com/webmproject/libvpx/tar.gz/v${VPX_VERSION} |   tar -zx --strip-components=1 &&   ./configure --prefix=""${PREFIX}"" --enable-vp8 --enable-vp9 --enable-vp9-highbitdepth --enable-pic --enable-shared   --disable-debug --disable-examples --disable-docs --disable-install-bins  &&   make &&   make install &&   rm -rf ${DIR}', 'DIR=/tmp/vebp &&   mkdir -p ${DIR} &&   cd ${DIR} &&   curl -sL https://storage.googleapis.com/downloads.webmproject.org/releases/webp/libwebp-${WEBP_VERSION}.tar.gz |   tar -zx --strip-components=1 &&   ./configure --prefix=""${PREFIX}"" --enable-shared  &&   make &&   make install &&   rm -rf ${DIR}', 'DIR=/tmp/lame &&   mkdir -p ${DIR} &&   cd ${DIR} &&   curl -sL https://versaweb.dl.sourceforge.net/project/lame/lame/$(echo ${LAME_VERSION} | sed -e \'s/[^0-9]*\\([0-9]*\\)[.]\\([0-9]*\\)[.]\\([0-9]*\\)\\([0-9A-Za-z-]*\\)/\\1.\\2/\')/lame-${LAME_VERSION}.tar.gz |   tar -zx --strip-components=1 &&   ./configure --prefix=""${PREFIX}"" --bindir=""${PREFIX}/bin"" --enable-shared --enable-nasm --disable-frontend &&   make &&   make install &&   rm -rf ${DIR}', 'DIR=/tmp/xvid &&   mkdir -p ${DIR} &&   cd ${DIR} &&   curl -sLO http://downloads.xvid.org/downloads/xvidcore-${XVID_VERSION}.tar.gz &&   echo ${XVID_SHA256SUM} | sha256sum --check &&   tar -zx -f xvidcore-${XVID_VERSION}.tar.gz &&   cd xvidcore/build/generic &&   ./configure --prefix=""${PREFIX}"" --bindir=""${PREFIX}/bin"" &&   make &&   make install &&   rm -rf ${DIR}', 'DIR=/tmp/fdk-aac &&   mkdir -p ${DIR} &&   cd ${DIR} &&   curl -sL https://github.com/mstorsjo/fdk-aac/archive/v${FDKAAC_VERSION}.tar.gz |   tar -zx --strip-components=1 &&   autoreconf -fiv &&   ./configure --prefix=""${PREFIX}"" --enable-shared --datadir=""${DIR}"" &&   make &&   make install &&   rm -rf ${DIR}', 'DIR=/tmp/openjpeg &&   mkdir -p ${DIR} &&   cd ${DIR} &&   curl -sL https://github.com/uclouvain/openjpeg/archive/v${OPENJPEG_VERSION}.tar.gz |   tar -zx --strip-components=1 &&   cmake -DBUILD_THIRDPARTY:BOOL=ON -DCMAKE_INSTALL_PREFIX=""${PREFIX}"" . &&   make &&   make install &&   rm -rf ${DIR}', 'DIR=/tmp/freetype &&   mkdir -p ${DIR} &&   cd ${DIR} &&   curl -sLO https://download.savannah.gnu.org/releases/freetype/freetype-${FREETYPE_VERSION}.tar.gz &&   echo ${FREETYPE_SHA256SUM} | sha256sum --check &&   tar -zx --strip-components=1 -f freetype-${FREETYPE_VERSION}.tar.gz &&   ./configure --prefix=""${PREFIX}"" --disable-static --enable-shared &&   make &&   make install &&   rm -rf ${DIR}', 'DIR=/tmp/vid.stab &&   mkdir -p ${DIR} &&   cd ${DIR} &&   curl -sLO https://github.com/georgmartius/vid.stab/archive/${LIBVIDSTAB_VERSION}.tar.gz &&   echo ${LIBVIDSTAB_SHA256SUM} | sha256sum --check &&    tar -zx --strip-components=1 -f ${LIBVIDSTAB_VERSION}.tar.gz &&   cmake -DCMAKE_INSTALL_PREFIX=""${PREFIX}"" . &&   make &&   make install &&   rm -rf ${DIR}', 'DIR=/tmp/fribidi &&   mkdir -p ${DIR} &&   cd ${DIR} &&   curl -sLO https://github.com/fribidi/fribidi/archive/${FRIBIDI_VERSION}.tar.gz &&   echo ${FRIBIDI_SHA256SUM} | sha256sum --check &&   tar -zx --strip-components=1 -f ${FRIBIDI_VERSION}.tar.gz &&   ./autogen.sh &&   ./configure --prefix=""${PREFIX}"" --disable-static --enable-shared &&   make -j1 &&   make install &&   rm -rf ${DIR}', 'DIR=/tmp/fontconfig &&   mkdir -p ${DIR} &&   cd ${DIR} &&   curl -sLO https://www.freedesktop.org/software/fontconfig/release/fontconfig-${FONTCONFIG_VERSION}.tar.bz2 &&   tar -jx --strip-components=1 -f fontconfig-${FONTCONFIG_VERSION}.tar.bz2 &&   ./configure --prefix=""${PREFIX}"" --disable-static --enable-shared &&   make &&   make install &&   rm -rf ${DIR}', 'DIR=/tmp/libass &&   mkdir -p ${DIR} &&   cd ${DIR} &&   curl -sLO https://github.com/libass/libass/archive/${LIBASS_VERSION}.tar.gz &&   echo ${LIBASS_SHA256SUM} | sha256sum --check &&   tar -zx --strip-components=1 -f ${LIBASS_VERSION}.tar.gz &&   ./autogen.sh &&   ./configure --prefix=""${PREFIX}"" --disable-static --enable-shared &&   make &&   make install &&   rm -rf ${DIR}', 'DIR=/tmp/kvazaar &&   mkdir -p ${DIR} &&   cd ${DIR} &&   curl -sLO https://github.com/ultravideo/kvazaar/archive/v${KVAZAAR_VERSION}.tar.gz &&   tar -zx --strip-components=1 -f v${KVAZAAR_VERSION}.tar.gz &&   ./autogen.sh &&   ./configure --prefix=""${PREFIX}"" --disable-static --enable-shared &&   make &&   make install &&   rm -rf ${DIR}', 'DIR=/tmp/aom &&   git clone --branch v${AOM_VERSION} --depth 1 https://aomedia.googlesource.com/aom ${DIR} &&   cd ${DIR} &&   rm -rf CMakeCache.txt CMakeFiles &&   mkdir -p ./aom_build &&   cd ./aom_build &&   cmake -DCMAKE_INSTALL_PREFIX=""${PREFIX}"" -DENABLE_TESTS=0 .. &&   make &&   make install &&   rm -rf ${DIR}', 'DIR=/tmp/xorg-macros &&   mkdir -p ${DIR} &&   cd ${DIR} &&   curl -sLO https://www.x.org/archive//individual/util/util-macros-${XORG_MACROS_VERSION}.tar.gz &&   tar -zx --strip-components=1 -f util-macros-${XORG_MACROS_VERSION}.tar.gz &&   ./configure --srcdir=${DIR} --prefix=""${PREFIX}"" &&   make &&   make install &&   rm -rf ${DIR}', 'DIR=/tmp/xproto &&   mkdir -p ${DIR} &&   cd ${DIR} &&   curl -sLO https://www.x.org/archive/individual/proto/xproto-${XPROTO_VERSION}.tar.gz &&   tar -zx --strip-components=1 -f xproto-${XPROTO_VERSION}.tar.gz &&   ./configure --srcdir=${DIR} --prefix=""${PREFIX}"" &&   make &&   make install &&   rm -rf ${DIR}', 'DIR=/tmp/libXau &&   mkdir -p ${DIR} &&   cd ${DIR} &&   curl -sLO https://www.x.org/archive/individual/lib/libXau-${XAU_VERSION}.tar.gz &&   tar -zx --strip-components=1 -f libXau-${XAU_VERSION}.tar.gz &&   ./configure --srcdir=${DIR} --prefix=""${PREFIX}"" &&   make &&   make install &&   rm -rf ${DIR}', 'DIR=/tmp/libpthread-stubs &&   mkdir -p ${DIR} &&   cd ${DIR} &&   curl -sLO https://xcb.freedesktop.org/dist/libpthread-stubs-${LIBPTHREAD_STUBS_VERSION}.tar.gz &&   tar -zx --strip-components=1 -f libpthread-stubs-${LIBPTHREAD_STUBS_VERSION}.tar.gz &&   ./configure --prefix=""${PREFIX}"" &&   make &&   make install &&   rm -rf ${DIR}', 'DIR=/tmp/libxcb-proto &&   mkdir -p ${DIR} &&   cd ${DIR} &&   curl -sLO https://xcb.freedesktop.org/dist/xcb-proto-${XCBPROTO_VERSION}.tar.gz &&   tar -zx --strip-components=1 -f xcb-proto-${XCBPROTO_VERSION}.tar.gz &&   ACLOCAL_PATH=""${PREFIX}/share/aclocal"" ./autogen.sh &&   ./configure --prefix=""${PREFIX}"" &&   make &&   make install &&   rm -rf ${DIR}', 'DIR=/tmp/libxcb &&   mkdir -p ${DIR} &&   cd ${DIR} &&   curl -sLO https://xcb.freedesktop.org/dist/libxcb-${LIBXCB_VERSION}.tar.gz &&   tar -zx --strip-components=1 -f libxcb-${LIBXCB_VERSION}.tar.gz &&   ACLOCAL_PATH=""${PREFIX}/share/aclocal"" ./autogen.sh &&   ./configure --prefix=""${PREFIX}"" --disable-static --enable-shared &&   make &&   make install &&   rm -rf ${DIR}', 'DIR=/tmp/libxml2 &&   mkdir -p ${DIR} &&   cd ${DIR} &&   curl -sLO https://gitlab.gnome.org/GNOME/libxml2/-/archive/v${LIBXML2_VERSION}/libxml2-v${LIBXML2_VERSION}.tar.gz &&   echo ${LIBXML2_SHA256SUM} | sha256sum --check &&   tar -xz --strip-components=1 -f libxml2-v${LIBXML2_VERSION}.tar.gz &&   ./autogen.sh --prefix=""${PREFIX}"" --with-ftp=no --with-http=no --with-python=no &&   make &&   make install &&   rm -rf ${DIR}', 'DIR=/tmp/libbluray &&   mkdir -p ${DIR} &&   cd ${DIR} &&   curl -sLO https://download.videolan.org/pub/videolan/libbluray/${LIBBLURAY_VERSION}/libbluray-${LIBBLURAY_VERSION}.tar.bz2 &&   echo ${LIBBLURAY_SHA256SUM} | sha256sum --check &&   tar -jx --strip-components=1 -f libbluray-${LIBBLURAY_VERSION}.tar.bz2 &&   ./configure --prefix=""${PREFIX}"" --disable-examples --disable-bdjava-jar --disable-static --enable-shared &&   make &&   make install &&   rm -rf ${DIR}', 'DIR=/tmp/libzmq &&   mkdir -p ${DIR} &&   cd ${DIR} &&   curl -sLO https://github.com/zeromq/libzmq/archive/v${LIBZMQ_VERSION}.tar.gz &&   echo ${LIBZMQ_SHA256SUM} | sha256sum --check &&   tar -xz --strip-components=1 -f v${LIBZMQ_VERSION}.tar.gz &&   ./autogen.sh &&   ./configure --prefix=""${PREFIX}"" &&   make &&   make install &&   rm -rf ${DIR}', 'DIR=/tmp/ffmpeg && mkdir -p ${DIR} && cd ${DIR} &&   curl -sLO https://ffmpeg.org/releases/ffmpeg-${FFMPEG_VERSION}.tar.bz2 &&   tar -jx --strip-components=1 -f ffmpeg-${FFMPEG_VERSION}.tar.bz2 &&   DIR=/tmp/ffmpeg && mkdir -p ${DIR} && cd ${DIR} &&   ./configure   --disable-debug   --disable-doc   --disable-ffplay   --enable-shared   --enable-avresample   --enable-libopencore-amrnb   --enable-libopencore-amrwb   --enable-gpl   --enable-libass   --enable-fontconfig   --enable-libfreetype   --enable-libvidstab   --enable-libmp3lame   --enable-libopus   --enable-libtheora   --enable-libvorbis   --enable-libvpx   --enable-libwebp   --enable-libxcb   --enable-libx265   --enable-libxvid   --enable-libx264   --enable-nonfree   --enable-openssl   --enable-libfdk_aac   --enable-postproc   --enable-small   --enable-version3   --enable-libbluray   --enable-libzmq   --extra-libs=-ldl   --prefix=""${PREFIX}""   --enable-libopenjpeg   --enable-libkvazaar   --enable-libaom   --extra-libs=-lpthread   --enable-vaapi   --extra-cflags=""-I${PREFIX}/include""   --extra-ldflags=""-L${PREFIX}/lib"" &&   make &&   make install &&   make tools/zmqsend && cp tools/zmqsend ${PREFIX}/bin/ &&   make distclean &&   hash -r &&   cd tools &&   make qt-faststart && cp qt-faststart ${PREFIX}/bin/', 'ldd ${PREFIX}/bin/ffmpeg | grep opt/ffmpeg | cut -d \' \' -f 3 | xargs -i cp {} /usr/local/lib/ &&   for lib in /usr/local/lib/*.so.*; do ln -s ""${lib##*/}"" ""${lib%%.so.*}"".so; done &&   cp ${PREFIX}/bin/* /usr/local/bin/ &&   cp -r ${PREFIX}/share/ffmpeg /usr/local/share/ &&   LD_LIBRARY_PATH=/usr/local/lib ffmpeg -buildconf &&   cp -r ${PREFIX}/include/libav* ${PREFIX}/include/libpostproc ${PREFIX}/include/libsw* /usr/local/include &&   mkdir -p /usr/local/lib/pkgconfig &&   for pc in ${PREFIX}/lib/pkgconfig/libav*.pc ${PREFIX}/lib/pkgconfig/libpostproc.pc ${PREFIX}/lib/pkgconfig/libsw*.pc; do   sed ""s:${PREFIX}:/usr/local:g"" <""$pc"" >/usr/local/lib/pkgconfig/""${pc##*/}"";   done']"
roflcoopter/viseron,latest,/docker/amd64/Dockerfile.ffmpeg,COPY,1,['--from=build /usr/local /usr/local/']
roflcoopter/viseron,latest,/docker/amd64/Dockerfile.dlib,ARG,3,"['UBUNTU_VERSION', 'DLIB_VERSION', 'MAKEFLAGS=""-j2""']"
roflcoopter/viseron,latest,/docker/amd64/Dockerfile.dlib,FROM,2,"['ubuntu:${UBUNTU_VERSION} AS build', 'scratch as scratch']"
roflcoopter/viseron,latest,/docker/amd64/Dockerfile.dlib,ENV,1,['DEBIAN_FRONTEND=noninteractive   PIP_IGNORE_INSTALLED=0']
roflcoopter/viseron,latest,/docker/amd64/Dockerfile.dlib,RUN,3,"['buildDeps=""autoconf   automake   ca-certificates   cmake   g++   gcc   git   libopenblas-dev   liblapack-dev   make   python3-dev   python3-pip   python3-setuptools   python3-wheel"" &&   apt-get -yqq update &&   apt-get install -yq --no-install-recommends ${buildDeps}', 'DIR=/tmp && mkdir -p ${DIR} && cd ${DIR} &&   git clone --branch v${DLIB_VERSION} --depth 1 https://github.com/davisking/dlib.git &&   cd dlib; python3 setup.py bdist_wheel --dist-dir=/wheels', 'pip3 wheel face_recognition dlib==${DLIB_VERSION} --wheel-dir=/wheels/ --find-links=/wheels/']"
roflcoopter/viseron,latest,/docker/amd64/Dockerfile.dlib,COPY,1,['--from=build /wheels /wheels/']
roflcoopter/viseron,latest,/docker/amd64/Dockerfile.opencv,ARG,4,"['UBUNTU_VERSION', 'FFMPEG_VERSION', 'OPENCV_VERSION', 'MAKEFLAGS=""-j2""']"
roflcoopter/viseron,latest,/docker/amd64/Dockerfile.opencv,FROM,3,"['roflcoopter/amd64-ffmpeg:${FFMPEG_VERSION} as ffmpeg', 'ubuntu:${UBUNTU_VERSION} AS build', 'scratch']"
roflcoopter/viseron,latest,/docker/amd64/Dockerfile.opencv,COPY,2,"['--from=ffmpeg /usr/local /usr/local/', '--from=build /opt/opencv /opt/opencv/']"
roflcoopter/viseron,latest,/docker/amd64/Dockerfile.opencv,WORKDIR,1,['/tmp/workdir']
roflcoopter/viseron,latest,/docker/amd64/Dockerfile.opencv,ENV,1,"['DEBIAN_FRONTEND=noninteractive   PKG_CONFIG_PATH=""/opt/opencv/share/pkgconfig:/opt/opencv/lib/pkgconfig:/opt/opencv/lib64/pkgconfig""   PREFIX=/opt/opencv   LD_LIBRARY_PATH=""/opt/opencv/lib:/opt/opencv/lib64:/usr/lib64:/usr/lib:/lib64:/lib:/usr/local/lib""']"
roflcoopter/viseron,latest,/docker/amd64/Dockerfile.opencv,RUN,4,"['buildDeps=""autoconf   automake   ca-certificates   cmake   curl   clinfo   bzip2   expat   libexpat1-dev   g++   gcc   git   gperf   libtool   make   nasm   perl   pkg-config   python3   python3-dev   python3-numpy   libssl-dev   yasm   libgomp1   libnuma-dev   zlib1g-dev"" &&   apt-get -yqq update &&   apt-get install -yq --no-install-recommends ${buildDeps}', 'DIR=/tmp/opencv && mkdir -p ${DIR} && cd ${DIR} &&   curl -sL -o opencv-${OPENCV_VERSION}.tar.gz https://github.com/opencv/opencv/archive/${OPENCV_VERSION}.tar.gz &&   tar -x --strip-components=1 -f opencv-${OPENCV_VERSION}.tar.gz', 'DIR=/tmp/opencv_contrib && mkdir -p ${DIR} && cd ${DIR} &&   curl -sL -o opencv_contrib-${OPENCV_VERSION}.tar.gz https://github.com/opencv/opencv_contrib/archive/${OPENCV_VERSION}.tar.gz &&   tar -x --strip-components=1 -f opencv_contrib-${OPENCV_VERSION}.tar.gz', 'DIR=/tmp/opencv/build && mkdir -p ${DIR} && cd ${DIR} &&   cmake -D CMAKE_BUILD_TYPE=RELEASE   -DBUILD_TIFF=ON   -DBUILD_opencv_java=OFF   -D BUILD_SHARED_LIBS=ON   -D WITH_OPENGL=ON   -D WITH_OPENCL=ON   -D WITH_OPENMP=ON   -D WITH_IPP=ON   -D WITH_TBB=ON   -D WITH_EIGEN=ON   -D WITH_V4L=ON   -D WITH_GTK=OFF   -D WITH_GTK_2_X=OFF   -D WITH_FFMPEG=ON   -D WITH_GSTREAMER=ON   -D WITH_GSTREAMER_0_10=OFF   -D WITH_LIBV4L=ON   -D WITH_CSTRIPES=ON   -D BUILD_TESTS=OFF   -D BUILD_PERF_TESTS=OFF   -D BUILD_opencv_python2=OFF   -D BUILD_opencv_python3=ON   -D CMAKE_INSTALL_PREFIX=${PREFIX}   -D INSTALL_PYTHON_EXAMPLES=OFF   -D INSTALL_C_EXAMPLES=OFF   -D OPENCV_EXTRA_MODULES_PATH=/tmp/opencv_contrib/modules   -D BUILD_DOCS=OFF   -D BUILD_EXAMPLES=OFF   -D BUILD_opencv_face=OFF   -D HIGHGUI_ENABLE_PLUGINS=OFF   -D WITH_WIN32UI=OFF   -D WITH_GTK=OFF   -D WITH_QT=OFF   /tmp/opencv &&   make &&   make install']"
roflcoopter/viseron,latest,/docker/amd64/Dockerfile.base,ARG,5,"['UBUNTU_VERSION', 'OPENCL_VERSION', 'GMMLIB_VERSION', 'IGC_VERSION', 'LEVEL_ZERO_GPU']"
roflcoopter/viseron,latest,/docker/amd64/Dockerfile.base,FROM,2,"['roflcoopter/viseron-models:latest as models', 'ubuntu:${UBUNTU_VERSION} as base']"
roflcoopter/viseron,latest,/docker/amd64/Dockerfile.base,COPY,2,"['--from=models /detectors/models/darknet /detectors/models/darknet', '--from=models /detectors/models/edgetpu /detectors/models/edgetpu']"
roflcoopter/viseron,latest,/docker/amd64/Dockerfile.base,ENV,1,['LIBVA_DRIVER_NAME=i965']
roflcoopter/viseron,latest,/docker/amd64/Dockerfile.base,RUN,1,['apt-get update && apt-get install -y --no-install-recommends   ca-certificates   wget   vainfo   libva-drm2   libva2   i965-va-driver   clinfo   libnuma1 &&   mkdir /opencl &&  cd /opencl &&   wget https://github.com/intel/compute-runtime/releases/download/${OPENCL_VERSION}/intel-gmmlib_${GMMLIB_VERSION}_amd64.deb --progress=bar:force:noscroll &&   wget https://github.com/intel/intel-graphics-compiler/releases/download/igc-${IGC_VERSION}/intel-igc-core_${IGC_VERSION}_amd64.deb --progress=bar:force:noscroll &&   wget https://github.com/intel/intel-graphics-compiler/releases/download/igc-${IGC_VERSION}/intel-igc-opencl_${IGC_VERSION}_amd64.deb --progress=bar:force:noscroll &&   wget https://github.com/intel/compute-runtime/releases/download/${OPENCL_VERSION}/intel-opencl_${OPENCL_VERSION}_amd64.deb --progress=bar:force:noscroll &&   wget https://github.com/intel/compute-runtime/releases/download/${OPENCL_VERSION}/intel-ocloc_${OPENCL_VERSION}_amd64.deb --progress=bar:force:noscroll &&   wget https://github.com/intel/compute-runtime/releases/download/${OPENCL_VERSION}/intel-level-zero-gpu_${LEVEL_ZERO_GPU}_amd64.deb --progress=bar:force:noscroll &&   wget https://github.com/intel/compute-runtime/releases/download/${OPENCL_VERSION}/ww15.sum &&   sha256sum -c ww15.sum &&   dpkg -i *.deb &&   rm -R /opencl &&   ln -s /detectors/models/darknet/yolov3.weights /detectors/models/darknet/default.weights &&   ln -s /detectors/models/darknet/yolov3.cfg /detectors/models/darknet/default.cfg']
roflcoopter/viseron,latest,/docker/jetson-nano/Dockerfile.python,ARG,3,"['UBUNTU_VERSION', 'PYTHON_VERSION', 'PYTHON_PIP_VERSION']"
roflcoopter/viseron,latest,/docker/jetson-nano/Dockerfile.python,FROM,2,"['balenalib/aarch64-ubuntu:${UBUNTU_VERSION}-build as build', 'scratch']"
roflcoopter/viseron,latest,/docker/jetson-nano/Dockerfile.python,RUN,8,"['[ ""cross-build-start"" ]', 'apt-get -yqq update && apt-get install -yq --no-install-recommends   ca-certificates   dirmngr   dpkg-dev   gcc   gnupg   libbz2-dev   libc6-dev   libexpat1-dev   libffi-dev   liblzma-dev   libsqlite3-dev   libssl-dev   make   netbase   uuid-dev   wget   xz-utils   zlib1g-dev', 'wget --no-verbose --output-document=python.tar.xz ""https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz""   && wget --no-verbose --output-document=python.tar.xz.asc ""https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc""   && export GNUPGHOME=""$(mktemp -d)""   && gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys ""$GPG_KEY""   && gpg --batch --verify python.tar.xz.asc python.tar.xz   && { command -v gpgconf > /dev/null && gpgconf --kill all || :; }   && rm -rf ""$GNUPGHOME"" python.tar.xz.asc   && mkdir -p /usr/src/python   && tar -xJC /usr/src/python --strip-components=1 -f python.tar.xz   && rm python.tar.xz', 'cd /usr/src/python   && gnuArch=""$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)""   && ./configure --help   && ./configure   --build=""$gnuArch""   --prefix=""/usr/local""   --enable-loadable-sqlite-extensions   --enable-optimizations   --disable-shared   --with-system-expat   --without-ensurepip   && make   && make install', 'strip /usr/local/bin/python3.8', 'wget --no-verbose --output-document=get-pip.py ""$PIP_URL"";     /usr/local/bin/python3 get-pip.py   --disable-pip-version-check   --no-cache-dir   ""pip==$PYTHON_PIP_VERSION"" ""wheel""', 'find /usr/local/lib -type d -a \\(   -name test -o   -name tests -o   -name idlelib -o   -name turtledemo -o   -name pydoc_data -o   -name tkinter \\) -exec rm -rf {} +', '[ ""cross-build-end"" ]']"
roflcoopter/viseron,latest,/docker/jetson-nano/Dockerfile.python,ENV,5,"['GPG_KEY E3FF2839C048B25C084DEBE9B26995E310250568', 'LANG=C.UTF-8', 'DEBIAN_FRONTEND=noninteractive', 'PIP_URL=https://bootstrap.pypa.io/get-pip.py', 'PIP_SHA256=b3153ec0cf7b7bbf9556932aa37e4981c35dc2a2c501d70d91d2795aa532be79']"
roflcoopter/viseron,latest,/docker/jetson-nano/Dockerfile.python,COPY,1,['--from=build /usr/local /usr/local']
roflcoopter/viseron,latest,/docker/jetson-nano/Dockerfile.ffmpeg,ARG,44,"['UBUNTU_VERSION', 'JETPACK_VERSION', 'OPUS_VERSION', 'OPUS_SHA256SUM', 'FDKAAC_VERSION', 'FRIBIDI_VERSION', 'FRIBIDI_SHA256SUM', 'LIBASS_VERSION', 'LIBASS_SHA256SUM', 'KVAZAAR_VERSION', 'XORG_MACROS_VERSION', 'LIBXCB_VERSION', 'LIBXML2_VERSION', 'LIBXML2_SHA256SUM', 'LIBZMQ_VERSION', 'LIBZMQ_SHA256SUM', 'MAKEFLAGS=""-j2""', 'OPENCOREAMR_VERSION', 'X264_VERSION', 'X265_VERSION', 'OGG_VERSION', 'OGG_SHA256SUM', 'VORBIS_VERSION', 'VORBIS_SHA256SUM', 'THEORA_VERSION', 'THEORA_SHA256SUM', 'VPX_VERSION', 'WEBP_VERSION', 'LAME_VERSION', 'XVID_VERSION', 'XVID_SHA256SUM', 'OPENJPEG_VERSION', 'LIBVIDSTAB_VERSION', 'LIBVIDSTAB_SHA256SUM', 'FONTCONFIG_VERSION', 'AOM_VERSION', 'XORG_MACROS_VERSION', 'XPROTO_VERSION', 'XAU_VERSION', 'LIBPTHREAD_STUBS_VERSION', 'XCBPROTO_VERSION', 'LIBBLURAY_VERSION', 'LIBBLURAY_SHA256SUM', 'FFMPEG_VERSION']"
roflcoopter/viseron,latest,/docker/jetson-nano/Dockerfile.ffmpeg,FROM,12,"['ubuntu:${UBUNTU_VERSION} as amd64-build', 'amd64-build as opus', 'amd64-build as fdk-aac', 'amd64-build as fribidi', 'amd64-build as libass', 'amd64-build as kvazaar', 'amd64-build as libxcb', 'amd64-build as libxml2', 'amd64-build as libzmq', 'balenalib/jetson-nano-ubuntu:${UBUNTU_VERSION}-build as qemu', 'nvcr.io/nvidia/l4t-base:${JETPACK_VERSION} as build', 'scratch']"
roflcoopter/viseron,latest,/docker/jetson-nano/Dockerfile.ffmpeg,ENV,3,"['DEBIAN_FRONTEND=noninteractive', 'PREFIX=/opt/ffmpeg', 'DEBIAN_FRONTEND=noninteractive   SRC=/usr/local   PATH=/usr/custom_cmake/bin:$PATH   PKG_CONFIG_PATH=""/opt/ffmpeg/share/pkgconfig:/opt/ffmpeg/lib/pkgconfig:/opt/ffmpeg/lib64/pkgconfig""   PREFIX=/opt/ffmpeg   LD_LIBRARY_PATH=""/opt/ffmpeg/lib:/opt/ffmpeg/lib64:/usr/lib64:/usr/lib:/usr/lib/aarch64-linux-gnu/tegra:/usr/lib/aarch64-linux-gnu/tegra-egl""']"
roflcoopter/viseron,latest,/docker/jetson-nano/Dockerfile.ffmpeg,RUN,44,"['apt-get update && apt-get install -y --no-install-recommends   autoconf   automake   ca-certificates   curl   libtool   pkg-config', 'DIR=/tmp/opus &&   mkdir -p ${DIR} &&   cd ${DIR} &&   curl -sLO https://archive.mozilla.org/pub/opus/opus-${OPUS_VERSION}.tar.gz &&   echo ${OPUS_SHA256SUM} | sha256sum --check &&   tar -zx --strip-components=1 -f opus-${OPUS_VERSION}.tar.gz &&   autoreconf -fiv', 'DIR=/tmp/fdk-aac &&   mkdir -p ${DIR} &&   cd ${DIR} &&   curl -sL https://github.com/mstorsjo/fdk-aac/archive/v${FDKAAC_VERSION}.tar.gz |   tar -zx --strip-components=1 &&   autoreconf -fiv', 'DIR=/tmp/fribidi &&   mkdir -p ${DIR} &&   cd ${DIR} &&   curl -sLO https://github.com/fribidi/fribidi/archive/${FRIBIDI_VERSION}.tar.gz &&   echo ${FRIBIDI_SHA256SUM} | sha256sum --check &&   tar -zx --strip-components=1 -f ${FRIBIDI_VERSION}.tar.gz &&   export NOCONFIGURE=1 &&   DIR=/tmp/fribidi &&   cd ${DIR} &&   ./autogen.sh', 'DIR=/tmp/libass &&   mkdir -p ${DIR} &&   cd ${DIR} &&   curl -sLO https://github.com/libass/libass/archive/${LIBASS_VERSION}.tar.gz &&   echo ${LIBASS_SHA256SUM} | sha256sum --check &&   tar -zx --strip-components=1 -f ${LIBASS_VERSION}.tar.gz &&   DIR=/tmp/libass &&   cd ${DIR} &&   ./autogen.sh', 'DIR=/tmp/kvazaar &&   mkdir -p ${DIR} &&   cd ${DIR} &&   curl -sLO https://github.com/ultravideo/kvazaar/archive/v${KVAZAAR_VERSION}.tar.gz &&   tar -zx --strip-components=1 -f v${KVAZAAR_VERSION}.tar.gz &&   DIR=/tmp/kvazaar &&   cd ${DIR} &&   ./autogen.sh', 'DIR=/tmp/xorg-macros &&   mkdir -p ${DIR} &&   cd ${DIR} &&   curl -sLO https://www.x.org/archive//individual/util/util-macros-${XORG_MACROS_VERSION}.tar.gz &&   tar -zx --strip-components=1 -f util-macros-${XORG_MACROS_VERSION}.tar.gz &&   ./configure --srcdir=${DIR} --prefix=""${PREFIX}"" &&   make &&   make install &&   rm -rf ${DIR}', 'DIR=/tmp/libxcb &&   mkdir -p ${DIR} &&   cd ${DIR} &&   curl -sLO https://xcb.freedesktop.org/dist/libxcb-${LIBXCB_VERSION}.tar.gz &&   tar -zx --strip-components=1 -f libxcb-${LIBXCB_VERSION}.tar.gz &&   export NOCONFIGURE=1 &&   DIR=/tmp/libxcb &&   cd ${DIR} &&   ACLOCAL_PATH=""${PREFIX}/share/aclocal"" ./autogen.sh', 'DIR=/tmp/libxml2 &&   mkdir -p ${DIR} &&   cd ${DIR} &&   curl -sLO https://gitlab.gnome.org/GNOME/libxml2/-/archive/v${LIBXML2_VERSION}/libxml2-v${LIBXML2_VERSION}.tar.gz &&   echo ${LIBXML2_SHA256SUM} | sha256sum --check &&   tar -xz --strip-components=1 -f libxml2-v${LIBXML2_VERSION}.tar.gz &&   DIR=/tmp/libxml2 &&   cd ${DIR} &&   ./autogen.sh --prefix=""${PREFIX}"" --with-ftp=no --with-http=no --with-python=no', 'DIR=/tmp/libzmq &&   mkdir -p ${DIR} &&   cd ${DIR} &&   curl -sLO https://github.com/zeromq/libzmq/archive/v${LIBZMQ_VERSION}.tar.gz &&   echo ${LIBZMQ_SHA256SUM} | sha256sum --check &&   tar -xz --strip-components=1 -f v${LIBZMQ_VERSION}.tar.gz &&   DIR=/tmp/libzmq &&   cd ${DIR} &&   ./autogen.sh', '[ ""cross-build-start"" ]', 'apt-get update && apt-get install -y --no-install-recommends   ca-certificates   gnupg &&   echo ""deb https://repo.download.nvidia.com/jetson/common r32.5 main"" >>  /etc/apt/sources.list.d/nvidia.list &&   echo ""deb https://repo.download.nvidia.com/jetson/t210 r32.5 main"" >>  /etc/apt/sources.list.d/nvidia.list &&   apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc &&   mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall &&   rm -r /etc/ld.so.conf.d/nvidia-tegra.conf &&     apt-get update && apt-get install -y --no-install-recommends &&   buildDeps=""autoconf   automake   ca-certificates   cmake   curl   bzip2   libexpat1-dev   g++   gcc   git   gperf   libtool   make   nasm   perl   pkg-config   python   libssl-dev   yasm   libgomp1   zlib1g-dev   libfreetype6-dev   libv4l-dev   nvidia-l4t-jetson-multimedia-api"" &&   apt-get -yqq update &&   apt-get install -yq --no-install-recommends ${buildDeps}', 'DIR=/tmp/opencore-amr &&   mkdir -p ${DIR} &&   cd ${DIR} &&   curl -sL https://versaweb.dl.sourceforge.net/project/opencore-amr/opencore-amr/opencore-amr-${OPENCOREAMR_VERSION}.tar.gz |   tar -zx --strip-components=1 &&   ./configure --prefix=""${PREFIX}"" --enable-shared  &&   make &&   make install &&   rm -rf ${DIR}', 'DIR=/tmp/x264 &&   mkdir -p ${DIR} &&   cd ${DIR} &&   curl -sL https://download.videolan.org/pub/videolan/x264/snapshots/x264-snapshot-${X264_VERSION}.tar.bz2 |   tar -jx --strip-components=1 &&   ./configure --prefix=""${PREFIX}"" --enable-shared --enable-pic --disable-cli &&   make &&   make install &&   rm -rf ${DIR}', 'DIR=/tmp/x265 &&   mkdir -p ${DIR} &&   cd ${DIR} &&   curl -sL https://download.videolan.org/pub/videolan/x265/x265_${X265_VERSION}.tar.gz  |   tar -zx &&   cd x265_${X265_VERSION}/build/linux &&   sed -i ""/-DEXTRA_LIB/ s/$/ -DCMAKE_INSTALL_PREFIX=\\${PREFIX}/"" multilib.sh &&   sed -i ""/^cmake/ s/$/ -DENABLE_CLI=OFF/"" multilib.sh &&   export CXXFLAGS=""${CXXFLAGS} -fPIC"" &&   ./multilib.sh &&   make -C 8bit install &&   rm -rf ${DIR}', 'DIR=/tmp/ogg &&   mkdir -p ${DIR} &&   cd ${DIR} &&   curl -sLO http://downloads.xiph.org/releases/ogg/libogg-${OGG_VERSION}.tar.gz &&   echo ${OGG_SHA256SUM} | sha256sum --check &&   tar -zx --strip-components=1 -f libogg-${OGG_VERSION}.tar.gz &&   ./configure --prefix=""${PREFIX}"" --enable-shared  &&   make &&   make install &&   rm -rf ${DIR}', 'DIR=/tmp/opus &&   mkdir -p ${DIR} &&   cd ${DIR} &&   ./configure --prefix=""${PREFIX}"" --enable-shared &&   make &&   make install &&   rm -rf ${DIR}', 'DIR=/tmp/vorbis &&   mkdir -p ${DIR} &&   cd ${DIR} &&   curl -sLO http://downloads.xiph.org/releases/vorbis/libvorbis-${VORBIS_VERSION}.tar.gz &&   echo ${VORBIS_SHA256SUM} | sha256sum --check &&   tar -zx --strip-components=1 -f libvorbis-${VORBIS_VERSION}.tar.gz &&   ./configure --prefix=""${PREFIX}"" --with-ogg=""${PREFIX}"" --enable-shared &&   make &&   make install &&   rm -rf ${DIR}', 'DIR=/tmp/theora &&   mkdir -p ${DIR} &&   cd ${DIR} &&   curl -sLO http://downloads.xiph.org/releases/theora/libtheora-${THEORA_VERSION}.tar.gz &&   echo ${THEORA_SHA256SUM} | sha256sum --check &&   tar -zx --strip-components=1 -f libtheora-${THEORA_VERSION}.tar.gz &&   curl -SLo config.guess ""http://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=config.guess;hb=HEAD"" &&   curl -SLo config.sub ""http://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=config.sub;hb=HEAD"" &&   ./configure --prefix=""${PREFIX}"" --with-ogg=""${PREFIX}"" --enable-shared --disable-examples &&   make &&   make install &&   rm -rf ${DIR}', 'DIR=/tmp/vpx &&   mkdir -p ${DIR} &&   cd ${DIR} &&   curl -sL https://codeload.github.com/webmproject/libvpx/tar.gz/v${VPX_VERSION} |   tar -zx --strip-components=1 &&   ./configure --prefix=""${PREFIX}"" --enable-vp8 --enable-vp9 --enable-vp9-highbitdepth --enable-pic --enable-shared   --disable-debug --disable-examples --disable-docs --disable-install-bins  &&   make &&   make install &&   rm -rf ${DIR}', 'DIR=/tmp/vebp &&   mkdir -p ${DIR} &&   cd ${DIR} &&   curl -sL https://storage.googleapis.com/downloads.webmproject.org/releases/webp/libwebp-${WEBP_VERSION}.tar.gz |   tar -zx --strip-components=1 &&   ./configure --prefix=""${PREFIX}"" --enable-shared  &&   make &&   make install &&   rm -rf ${DIR}', 'DIR=/tmp/lame &&   mkdir -p ${DIR} &&   cd ${DIR} &&   curl -sL https://versaweb.dl.sourceforge.net/project/lame/lame/$(echo ${LAME_VERSION} | sed -e \'s/[^0-9]*\\([0-9]*\\)[.]\\([0-9]*\\)[.]\\([0-9]*\\)\\([0-9A-Za-z-]*\\)/\\1.\\2/\')/lame-${LAME_VERSION}.tar.gz |   tar -zx --strip-components=1 &&   ./configure --prefix=""${PREFIX}"" --bindir=""${PREFIX}/bin"" --enable-shared --enable-nasm --disable-frontend &&   make &&   make install &&   rm -rf ${DIR}', 'DIR=/tmp/xvid &&   mkdir -p ${DIR} &&   cd ${DIR} &&   curl -sLO http://downloads.xvid.org/downloads/xvidcore-${XVID_VERSION}.tar.gz &&   echo ${XVID_SHA256SUM} | sha256sum --check &&   tar -zx -f xvidcore-${XVID_VERSION}.tar.gz &&   cd xvidcore/build/generic &&   ./configure --prefix=""${PREFIX}"" --bindir=""${PREFIX}/bin"" &&   make &&   make install &&   rm -rf ${DIR}', 'DIR=/tmp/fdk-aac &&   cd ${DIR} &&   ./configure --prefix=""${PREFIX}"" --enable-shared --datadir=""${DIR}"" &&   make &&   make install &&   rm -rf ${DIR}', 'DIR=/tmp/openjpeg &&   mkdir -p ${DIR} &&   cd ${DIR} &&   curl -sL https://github.com/uclouvain/openjpeg/archive/v${OPENJPEG_VERSION}.tar.gz |   tar -zx --strip-components=1 &&   export CFLAGS=""${CFLAGS} -DPNG_ARM_NEON_OPT=0"" &&   cmake -DBUILD_THIRDPARTY:BOOL=ON -DCMAKE_INSTALL_PREFIX=""${PREFIX}"" . &&   make &&   make install &&   rm -rf ${DIR}', 'DIR=/tmp/vid.stab &&   mkdir -p ${DIR} &&   cd ${DIR} &&   curl -sLO https://github.com/georgmartius/vid.stab/archive/${LIBVIDSTAB_VERSION}.tar.gz &&   echo ${LIBVIDSTAB_SHA256SUM} | sha256sum --check &&    tar -zx --strip-components=1 -f ${LIBVIDSTAB_VERSION}.tar.gz &&   cmake -DCMAKE_INSTALL_PREFIX=""${PREFIX}"" -DSSE2_FOUND=OFF . &&   make &&   make install &&   rm -rf ${DIR}', 'DIR=/tmp/fribidi &&   cd ${DIR} &&   ./configure --prefix=""${PREFIX}"" --disable-static --enable-shared &&   make -j1 &&   make install &&   rm -rf ${DIR}', 'DIR=/tmp/fontconfig &&   mkdir -p ${DIR} &&   cd ${DIR} &&   curl -sLO https://www.freedesktop.org/software/fontconfig/release/fontconfig-${FONTCONFIG_VERSION}.tar.bz2 &&   tar -jx --strip-components=1 -f fontconfig-${FONTCONFIG_VERSION}.tar.bz2 &&   ./configure --prefix=""${PREFIX}"" --disable-static --enable-shared &&   make &&   make install &&   rm -rf ${DIR}', 'DIR=/tmp/libass &&   cd ${DIR} &&   ./configure --prefix=""${PREFIX}"" --disable-static --enable-shared &&   make &&   make install &&   rm -rf ${DIR}', 'DIR=/tmp/kvazaar &&   cd ${DIR} &&   ./configure --prefix=""${PREFIX}"" --disable-static --enable-shared &&   make &&   make install &&   rm -rf ${DIR}', 'DIR=/tmp/aom &&   git clone --branch v${AOM_VERSION} --depth 1 https://aomedia.googlesource.com/aom ${DIR} &&   cd ${DIR} &&   rm -rf CMakeCache.txt CMakeFiles &&   mkdir -p ./aom_build &&   cd ./aom_build &&   cmake -DCMAKE_INSTALL_PREFIX=""${PREFIX}"" -DENABLE_TESTS=0 .. &&   make &&   make install &&   rm -rf ${DIR}', 'DIR=/tmp/xorg-macros &&   mkdir -p ${DIR} &&   cd ${DIR} &&   curl -sLO https://www.x.org/archive//individual/util/util-macros-${XORG_MACROS_VERSION}.tar.gz &&   tar -zx --strip-components=1 -f util-macros-${XORG_MACROS_VERSION}.tar.gz &&   ./configure --srcdir=${DIR} --prefix=""${PREFIX}"" &&   make &&   make install &&   rm -rf ${DIR}', 'DIR=/tmp/xproto &&   mkdir -p ${DIR} &&   cd ${DIR} &&   curl -sLO https://www.x.org/archive/individual/proto/xproto-${XPROTO_VERSION}.tar.gz &&   tar -zx --strip-components=1 -f xproto-${XPROTO_VERSION}.tar.gz &&   curl -SLo config.guess ""http://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=config.guess;hb=HEAD"" &&   curl -SLo config.sub ""http://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=config.sub;hb=HEAD"" &&   ./configure --srcdir=${DIR} --prefix=""${PREFIX}"" &&   make &&   make install &&   rm -rf ${DIR}', 'DIR=/tmp/libXau &&   mkdir -p ${DIR} &&   cd ${DIR} &&   curl -sLO https://www.x.org/archive/individual/lib/libXau-${XAU_VERSION}.tar.gz &&   tar -zx --strip-components=1 -f libXau-${XAU_VERSION}.tar.gz &&   ./configure --srcdir=${DIR} --prefix=""${PREFIX}"" &&   make &&   make install &&   rm -rf ${DIR}', 'DIR=/tmp/libpthread-stubs &&   mkdir -p ${DIR} &&   cd ${DIR} &&   curl -sLO https://xcb.freedesktop.org/dist/libpthread-stubs-${LIBPTHREAD_STUBS_VERSION}.tar.gz &&   tar -zx --strip-components=1 -f libpthread-stubs-${LIBPTHREAD_STUBS_VERSION}.tar.gz &&   ./configure --prefix=""${PREFIX}"" &&   make &&   make install &&   rm -rf ${DIR}', 'DIR=/tmp/libxcb-proto &&   mkdir -p ${DIR} &&   cd ${DIR} &&   curl -sLO https://xcb.freedesktop.org/dist/xcb-proto-${XCBPROTO_VERSION}.tar.gz &&   tar -zx --strip-components=1 -f xcb-proto-${XCBPROTO_VERSION}.tar.gz &&   ACLOCAL_PATH=""${PREFIX}/share/aclocal"" ./autogen.sh &&   ./configure --prefix=""${PREFIX}"" &&   make &&   make install &&   rm -rf ${DIR}', 'DIR=/tmp/libxcb &&   cd ${DIR} &&   ./configure --prefix=""${PREFIX}"" --disable-static --enable-shared &&   make &&   make install &&   rm -rf ${DIR}', 'DIR=/tmp/libxml2 &&   cd ${DIR} &&   make &&   make install &&   rm -rf ${DIR}', 'DIR=/tmp/libbluray &&   mkdir -p ${DIR} &&   cd ${DIR} &&   curl -sLO https://download.videolan.org/pub/videolan/libbluray/${LIBBLURAY_VERSION}/libbluray-${LIBBLURAY_VERSION}.tar.bz2 &&   echo ${LIBBLURAY_SHA256SUM} | sha256sum --check &&   tar -jx --strip-components=1 -f libbluray-${LIBBLURAY_VERSION}.tar.bz2 &&   ./configure --prefix=""${PREFIX}"" --disable-examples --disable-bdjava-jar --disable-static --enable-shared &&   make &&   make install &&   rm -rf ${DIR}', 'DIR=/tmp/libzmq &&   cd ${DIR} &&   ./configure --prefix=""${PREFIX}"" &&   make &&   make install &&   rm -rf ${DIR}', 'git clone https://github.com/jocover/jetson-ffmpeg &&   cd jetson-ffmpeg &&   mkdir build &&   cd build &&   cmake -DCMAKE_INSTALL_PREFIX=${PREFIX} .. &&   make &&   make install &&   ldconfig', 'DIR=/tmp/ffmpeg && mkdir -p ${DIR} && cd ${DIR} &&   curl -sLO https://ffmpeg.org/releases/ffmpeg-${FFMPEG_VERSION}.tar.bz2 &&   tar -jx --strip-components=1 -f ffmpeg-${FFMPEG_VERSION}.tar.bz2 &&   wget https://github.com/jocover/jetson-ffmpeg/raw/master/ffmpeg_nvmpi.patch &&   git apply ffmpeg_nvmpi.patch &&   DIR=/tmp/ffmpeg && mkdir -p ${DIR} && cd ${DIR} &&   ./configure   --disable-debug   --disable-doc   --disable-ffplay   --enable-shared   --enable-avresample   --enable-libopencore-amrnb   --enable-libopencore-amrwb   --enable-gpl   --enable-libass   --enable-fontconfig   --enable-libfreetype   --enable-libvidstab   --enable-libmp3lame   --enable-libopus   --enable-libtheora   --enable-libvorbis   --enable-libvpx   --enable-libwebp   --enable-libxcb   --enable-libx265   --enable-libxvid   --enable-libx264   --enable-nonfree   --enable-openssl   --enable-libfdk_aac   --enable-postproc   --enable-small   --enable-version3   --enable-libbluray   --enable-libzmq   --extra-libs=-ldl   --prefix=""${PREFIX}""   --enable-libopenjpeg   --enable-libkvazaar   --enable-libaom   --extra-libs=-lpthread   --enable-neon   --enable-v4l2_m2m   --enable-nvmpi   --extra-cflags=""-I${PREFIX}/include""   --extra-ldflags=""-L${PREFIX}/lib"" &&   make &&   make install &&   make tools/zmqsend && cp tools/zmqsend ${PREFIX}/bin/ &&   make distclean &&   hash -r &&   cd tools &&   make qt-faststart && cp qt-faststart ${PREFIX}/bin/', 'ldd ${PREFIX}/bin/ffmpeg | grep opt/ffmpeg | cut -d \' \' -f 3 | xargs -i cp {} /usr/local/lib/ &&   for lib in /usr/local/lib/*.so.*; do ln -s ""${lib##*/}"" ""${lib%%.so.*}"".so; done &&   cp ${PREFIX}/bin/* /usr/local/bin/ &&   cp -r ${PREFIX}/share/ffmpeg /usr/local/share/ &&   cp -r ${PREFIX}/include/libav* ${PREFIX}/include/libpostproc ${PREFIX}/include/libsw* /usr/local/include &&   mkdir -p /usr/local/lib/pkgconfig &&   for pc in ${PREFIX}/lib/pkgconfig/libav*.pc ${PREFIX}/lib/pkgconfig/libpostproc.pc ${PREFIX}/lib/pkgconfig/libsw*.pc; do   sed ""s:${PREFIX}:/usr/local:g"" <""$pc"" >/usr/local/lib/pkgconfig/""${pc##*/}"";   done', '[ ""cross-build-end"" ]']"
roflcoopter/viseron,latest,/docker/jetson-nano/Dockerfile.ffmpeg,COPY,15,"['--from=qemu /usr/bin/qemu-aarch64-static /usr/bin/qemu-aarch64-static', '--from=qemu /bin/sh /bin/sh', '--from=qemu /bin/sh.real /bin/sh.real', '--from=qemu /usr/bin/cross-build-start /bin/cross-build-start', '--from=qemu /usr/bin/cross-build-end /bin/cross-build-end', '--from=qemu /usr/bin/resin-xbuild /usr/bin/resin-xbuild', '--from=opus /tmp/opus /tmp/opus', '--from=fdk-aac /tmp /tmp', '--from=fribidi /tmp /tmp', '--from=libass /tmp /tmp', '--from=kvazaar /tmp /tmp', '--from=libxcb /tmp /tmp', '--from=libxml2 /tmp /tmp', '--from=libzmq /tmp /tmp', '--from=build /usr/local /usr/local/']"
roflcoopter/viseron,latest,/docker/jetson-nano/Dockerfile.ffmpeg,WORKDIR,1,['/tmp/workdir']
roflcoopter/viseron,latest,/docker/jetson-nano/Dockerfile.wheels,ARG,5,"['UBUNTU_VERSION', 'PYTHON_VERSION', 'ARCH', 'DLIB_VERSION', 'ARCH']"
roflcoopter/viseron,latest,/docker/jetson-nano/Dockerfile.wheels,FROM,4,"['roflcoopter/${ARCH}-dlib:${DLIB_VERSION} as dlib', 'roflcoopter/jetson-nano-python:${PYTHON_VERSION} as python', 'balenalib/jetson-nano-ubuntu:${UBUNTU_VERSION}-build as build', 'scratch']"
roflcoopter/viseron,latest,/docker/jetson-nano/Dockerfile.wheels,COPY,3,"['--from=dlib /wheels /wheels', '--from=python /usr/local /usr/local/', '--from=build /wheels /wheels']"
roflcoopter/viseron,latest,/docker/jetson-nano/Dockerfile.wheels,RUN,4,"['cd /usr/local/bin &&   ln -s idle3 idle &&   ln -s pydoc3 pydoc &&   ln -s python3 python', 'if [ ""$ARCH"" = ""armhf"" ] ||   [ ""$ARCH"" = ""rpi3"" ] ||   [ ""$ARCH"" = ""aarch64"" ] ||   [ ""$ARCH"" = ""jetson-nano"" ]; then echo ""Crossbuilding!"" && cross-build-start; fi', 'apt-get -yqq update && apt-get install -yq --no-install-recommends   curl   python3   python3-dev   python3-pip   python3-setuptools   python3-wheel   && apt-get autoremove -y && apt-get clean -y', 'mkdir -p /wheels   && if [ ""$ARCH"" = ""amd64"" ] || [ ""$ARCH"" = ""amd64-cuda"" ]; then export PLATFORM=""x86_64"";   elif [ ""$ARCH"" = ""armhf"" ] || [ ""$ARCH"" = ""rpi3"" ]; then export PLATFORM=""armv7l"";   elif [ ""$ARCH"" = ""jetson-nano"" ] ; then export PLATFORM=""aarch64"";   else export PLATFORM=""$ARCH""; fi     && echo ""Downloading tflite runtime https://github.com/google-coral/pycoral/releases/download/release-frogfish/tflite_runtime-2.5.0-cp38-cp38-linux_$PLATFORM.whl""   && cd /wheels   && curl -sOL https://github.com/google-coral/pycoral/releases/download/release-frogfish/tflite_runtime-2.5.0-cp38-cp38-linux_$PLATFORM.whl     && echo ""Downloading pycoral https://github.com/google-coral/pycoral/releases/download/release-frogfish/pycoral-1.0.0-cp38-cp38-linux_$PLATFORM.whl""   && cd /wheels   && curl -sOL https://github.com/google-coral/pycoral/releases/download/release-frogfish/pycoral-1.0.0-cp38-cp38-linux_$PLATFORM.whl     && pip3 wheel --wheel-dir=/wheels --find-links=/wheels -r /requirements.txt   && pip3 wheel --wheel-dir=/wheels --find-links=/wheels sklearn     && ls -al /wheels/']"
roflcoopter/viseron,latest,/docker/jetson-nano/Dockerfile.wheels,ENV,1,['DEBIAN_FRONTEND=noninteractive   PIP_IGNORE_INSTALLED=0']
roflcoopter/viseron,latest,/docker/jetson-nano/Dockerfile.wheels,ADD,1,['requirements.txt requirements.txt']
roflcoopter/viseron,latest,/docker/jetson-nano/Dockerfile.dlib,ARG,5,"['PYTHON_VERSION', 'UBUNTU_VERSION', 'JETPACK_VERSION', 'DLIB_VERSION', 'MAKEFLAGS=""-j2""']"
roflcoopter/viseron,latest,/docker/jetson-nano/Dockerfile.dlib,FROM,4,"['roflcoopter/jetson-nano-python:${PYTHON_VERSION} as python', 'balenalib/jetson-nano-ubuntu:${UBUNTU_VERSION}-build as qemu', 'nvcr.io/nvidia/l4t-base:${JETPACK_VERSION} as build', 'scratch as scratch']"
roflcoopter/viseron,latest,/docker/jetson-nano/Dockerfile.dlib,COPY,8,"['--from=qemu /usr/bin/qemu-aarch64-static /usr/bin/qemu-aarch64-static', '--from=qemu /bin/sh /bin/sh', '--from=qemu /bin/sh.real /bin/sh.real', '--from=qemu /usr/bin/cross-build-start /bin/cross-build-start', '--from=qemu /usr/bin/cross-build-end /bin/cross-build-end', '--from=qemu /usr/bin/resin-xbuild /usr/bin/resin-xbuild', '--from=python /usr/local /usr/local/', '--from=build /wheels /wheels/']"
roflcoopter/viseron,latest,/docker/jetson-nano/Dockerfile.dlib,RUN,8,"['cd /usr/local/bin &&   ln -s idle3 idle &&   ln -s pydoc3 pydoc &&   ln -s python3 python', '[ ""cross-build-start"" ]', 'apt-get update && apt-get install -y --no-install-recommends   ca-certificates   gnupg &&   echo ""deb https://repo.download.nvidia.com/jetson/common r32.5 main"" >>  /etc/apt/sources.list.d/nvidia.list   && echo ""deb https://repo.download.nvidia.com/jetson/t210 r32.5 main"" >>  /etc/apt/sources.list.d/nvidia.list   && apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc   && mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall', 'buildDeps=""autoconf   automake   ca-certificates   cmake   g++   gcc   git   libopenblas-dev   liblapack-dev   make   python3-dev   python3-pip   python3-setuptools   python3-wheel   libcudnn8-dev   libcublas-dev   cuda-libraries-dev-10-2"" &&   apt-get -yqq update &&   apt-get install -yq --no-install-recommends ${buildDeps}', 'ln -s /usr/local/cuda-10.2 /usr/local/cuda', ""DIR=/tmp && mkdir -p ${DIR} && cd ${DIR} &&   git clone --branch v${DLIB_VERSION} --depth 1 https://github.com/davisking/dlib.git &&   sed -i -e 's/forward_algo = forward_best_algo;/\\/\\/forward_algo = forward_best_algo;/' dlib/dlib/cuda/cudnn_dlibapi.cpp &&   cd dlib; python3 setup.py bdist_wheel --dist-dir=/wheels"", 'pip3 wheel face_recognition dlib==${DLIB_VERSION} --wheel-dir=/wheels/ --find-links=/wheels/', '[ ""cross-build-end"" ]']"
roflcoopter/viseron,latest,/docker/jetson-nano/Dockerfile.dlib,ENV,1,['DEBIAN_FRONTEND=noninteractive   PIP_IGNORE_INSTALLED=0']
roflcoopter/viseron,latest,/docker/jetson-nano/Dockerfile.opencv,ARG,6,"['PYTHON_VERSION', 'UBUNTU_VERSION', 'FFMPEG_VERSION', 'JETPACK_VERSION', 'OPENCV_VERSION', 'MAKEFLAGS=""-j2""']"
roflcoopter/viseron,latest,/docker/jetson-nano/Dockerfile.opencv,FROM,5,"['roflcoopter/jetson-nano-ffmpeg:${FFMPEG_VERSION} as ffmpeg', 'roflcoopter/jetson-nano-python:${PYTHON_VERSION} as python', 'balenalib/jetson-nano-ubuntu:${UBUNTU_VERSION}-build as qemu', 'nvcr.io/nvidia/l4t-base:${JETPACK_VERSION} as build', 'scratch as opencv']"
roflcoopter/viseron,latest,/docker/jetson-nano/Dockerfile.opencv,COPY,9,"['--from=qemu /usr/bin/qemu-aarch64-static /usr/bin/qemu-aarch64-static', '--from=qemu /bin/sh /bin/sh', '--from=qemu /bin/sh.real /bin/sh.real', '--from=qemu /usr/bin/cross-build-start /bin/cross-build-start', '--from=qemu /usr/bin/cross-build-end /bin/cross-build-end', '--from=qemu /usr/bin/resin-xbuild /usr/bin/resin-xbuild', '--from=ffmpeg /usr/local /usr/local/', '--from=python /usr/local /usr/local/', '--from=build /opt/opencv /opt/opencv/']"
roflcoopter/viseron,latest,/docker/jetson-nano/Dockerfile.opencv,RUN,8,"['cd /usr/local/bin &&   ln -s idle3 idle &&   ln -s pydoc3 pydoc &&   ln -s python3 python', '[ ""cross-build-start"" ]', 'apt-get update && apt-get install -y --no-install-recommends   ca-certificates   gnupg &&   echo ""deb https://repo.download.nvidia.com/jetson/common r32.5 main"" >>  /etc/apt/sources.list.d/nvidia.list   && echo ""deb https://repo.download.nvidia.com/jetson/t210 r32.5 main"" >>  /etc/apt/sources.list.d/nvidia.list   && apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc   && mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall', 'buildDeps=""autoconf   automake   ca-certificates   cmake   curl   clinfo   bzip2   expat   libexpat1-dev   g++   gcc   git   gperf   libtool   make   nasm   perl   pkg-config   python3   python3-dev   libssl-dev   yasm   libgomp1   libnuma-dev   zlib1g-dev   libcudnn8-dev   libcublas-dev"" &&   apt-get -yqq update &&   apt-get install -yq --no-install-recommends ${buildDeps} &&   pip3 install numpy', 'ln -s /usr/local/cuda-10.2 /usr/local/cuda', 'DIR=/tmp/opencv && mkdir -p ${DIR} && cd ${DIR} &&   curl -sL -o opencv-${OPENCV_VERSION}.tar.gz https://github.com/opencv/opencv/archive/${OPENCV_VERSION}.tar.gz &&   tar -x --strip-components=1 -f opencv-${OPENCV_VERSION}.tar.gz', 'DIR=/tmp/opencv_contrib && mkdir -p ${DIR} && cd ${DIR} &&   curl -sL -o opencv_contrib-${OPENCV_VERSION}.tar.gz https://github.com/opencv/opencv_contrib/archive/${OPENCV_VERSION}.tar.gz &&   tar -x --strip-components=1 -f opencv_contrib-${OPENCV_VERSION}.tar.gz', 'DIR=/tmp/opencv/build && mkdir -p ${DIR} && cd ${DIR} &&   cmake -D CMAKE_BUILD_TYPE=RELEASE   -DBUILD_TIFF=ON   -DBUILD_opencv_java=OFF   -D BUILD_SHARED_LIBS=ON   -D WITH_OPENGL=ON   -D WITH_OPENCL=ON   -D WITH_OPENMP=ON   -D WITH_TBB=ON   -D WITH_EIGEN=ON   -D WITH_V4L=ON   -D WITH_GTK=OFF   -D WITH_GTK_2_X=OFF   -D WITH_FFMPEG=ON   -D WITH_GSTREAMER=ON   -D WITH_GSTREAMER_0_10=OFF   -D WITH_LIBV4L=ON   -D WITH_CSTRIPES=ON   -D BUILD_TESTS=OFF   -D BUILD_PERF_TESTS=OFF   -D BUILD_opencv_python2=OFF   -D BUILD_opencv_python3=ON   -D PYTHON3_INCLUDE_DIR=$(python3 -c ""from distutils.sysconfig import get_python_inc; print(get_python_inc())"")    -D PYTHON3_LIBRARY=$(python3 -c ""import distutils.sysconfig as sysconfig; print(sysconfig.get_config_var(\'LIBDIR\'))"")   -D CMAKE_INSTALL_PREFIX=${PREFIX}   -D INSTALL_PYTHON_EXAMPLES=OFF   -D INSTALL_C_EXAMPLES=OFF   -D OPENCV_EXTRA_MODULES_PATH=/tmp/opencv_contrib/modules   -D BUILD_DOCS=OFF   -D BUILD_EXAMPLES=OFF   -D WITH_CUDA=ON   -D WITH_CUDNN=ON   -D CUDA_ARCH_BIN=""${CUDA_ARCH_BIN}""   -D CUDA_ARCH_PTX=""${CUDA_ARCH_PTX}""   -D CUDA_FAST_MATH=1   -D WITH_CUBLAS=1   -D CMAKE_LIBRARY_PATH=/usr/local/cuda/lib64/stubs   -D WITH_MKL=ON   -D MKL_USE_MULTITHREAD=ON   -D MKL_WITH_TBB=ON   -D OPENCV_DNN_CUDA=ON   -D ENABLE_NEON=ON   -D BUILD_opencv_face=OFF   -D HIGHGUI_ENABLE_PLUGINS=OFF   -D WITH_WIN32UI=OFF   -D WITH_GTK=OFF   -D WITH_QT=OFF   /tmp/opencv &&   make &&   make install']"
roflcoopter/viseron,latest,/docker/jetson-nano/Dockerfile.opencv,WORKDIR,1,['/tmp/workdir']
roflcoopter/viseron,latest,/docker/jetson-nano/Dockerfile.opencv,ENV,1,"['DEBIAN_FRONTEND=noninteractive   PKG_CONFIG_PATH=""/opt/opencv/share/pkgconfig:/opt/opencv/lib/pkgconfig:/opt/opencv/lib64/pkgconfig""   PREFIX=/opt/opencv   CUDA_ARCH_BIN=""53""   CUDA_ARCH_PTX=""70""']"
roflcoopter/viseron,latest,/docker/jetson-nano/Dockerfile.base,ARG,3,"['PYTHON_VERSION', 'UBUNTU_VERSION', 'JETPACK_VERSION']"
roflcoopter/viseron,latest,/docker/jetson-nano/Dockerfile.base,FROM,3,"['roflcoopter/viseron-models:latest as models', 'roflcoopter/jetson-nano-python:${PYTHON_VERSION} as python', 'nvcr.io/nvidia/l4t-base:${JETPACK_VERSION} as build']"
roflcoopter/viseron,latest,/docker/jetson-nano/Dockerfile.base,COPY,3,"['--from=models /detectors/models/darknet /detectors/models/darknet', '--from=models /detectors/models/edgetpu /detectors/models/edgetpu', '--from=python /usr/local /usr/local/']"
roflcoopter/viseron,latest,/docker/jetson-nano/Dockerfile.base,ENV,1,"['LD_LIBRARY_PATH=""/usr/lib/aarch64-linux-gnu/tegra:/usr/lib/aarch64-linux-gnu/tegra-egl""']"
roflcoopter/viseron,latest,/docker/jetson-nano/Dockerfile.base,RUN,2,"['cd /usr/local/bin &&   ln -s idle3 idle &&   ln -s pydoc3 pydoc &&   ln -s python3 python &&     apt-get update && apt-get install -y --no-install-recommends   ca-certificates   gnupg &&   echo ""deb https://repo.download.nvidia.com/jetson/common r32.5 main"" >>  /etc/apt/sources.list.d/nvidia.list &&   echo ""deb https://repo.download.nvidia.com/jetson/t210 r32.5 main"" >>  /etc/apt/sources.list.d/nvidia.list &&   apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc &&   mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall &&   rm -r /etc/ld.so.conf.d/nvidia-tegra.conf &&     apt-get update && apt-get install -y --no-install-recommends   libtiff5   libjpeg62   libxcb1   libx11-6   libxext6   libsm6   libatlas3-base   libhdf5-100   liblapacke   libopenexr22   libpng16-16   libatomic1   nvidia-l4t-multimedia-utils   libcudnn8   libcublas10   cuda-libraries-10-2   libv4l-dev   libharfbuzz-bin   libegl1   libfreetype6 &&   ln -s /detectors/models/darknet/yolov4-tiny.weights /detectors/models/darknet/default.weights &&   ln -s /detectors/models/darknet/yolov4-tiny.cfg /detectors/models/darknet/default.cfg &&   ln -s /usr/local/cuda-10.2 /usr/local/cuda &&   echo ""/usr/lib/aarch64-linux-gnu/tegra"" >> /etc/ld.so.conf.d/nvidia-tegra.conf &&   echo ""/usr/lib/aarch64-linux-gnu/tegra-egl"" >> /etc/ld.so.conf.d/nvidia-tegra.conf', 'ldconfig']"
roflcoopter/viseron,latest,/docker/rpi3/Dockerfile.cmake,ARG,3,"['UBUNTU_VERSION', 'MAKEFLAGS=""-j2""', 'CMAKE_VERSION']"
roflcoopter/viseron,latest,/docker/rpi3/Dockerfile.cmake,FROM,2,"['balenalib/raspberrypi3-ubuntu:${UBUNTU_VERSION}-build as build', 'scratch as scratch']"
roflcoopter/viseron,latest,/docker/rpi3/Dockerfile.cmake,RUN,3,"['[ ""cross-build-start"" ]', 'DIR=/tmp/cmake &&   mkdir -p ${DIR} &&   cd ${DIR} &&   git clone --depth 1 --single-branch --branch v${CMAKE_VERSION} https://gitlab.kitware.com/cmake/cmake.git/ . &&   ./bootstrap -- -DCMAKE_BUILD_TYPE:STRING=Release &&   make &&   make install &&   rm -rf ${DIR}', '[ ""cross-build-end"" ]']"
roflcoopter/viseron,latest,/docker/rpi3/Dockerfile.cmake,ENV,2,"['DEBIAN_FRONTEND=noninteractive', 'PATH=/usr/local/bin:$PATH   CFLAGS=""-D_FILE_OFFSET_BITS=64""   CXXFLAGS=""-D_FILE_OFFSET_BITS=64""']"
roflcoopter/viseron,latest,/docker/rpi3/Dockerfile.cmake,COPY,2,"['--from=build /usr/local/bin /usr/custom_cmake/bin/', '--from=build /usr/local/share /usr/custom_cmake/share/']"
roflcoopter/viseron,latest,/docker/rpi3/Dockerfile.ffmpeg,ARG,52,"['CMAKE_VERSION', 'UBUNTU_VERSION', 'PREFIX=/opt/ffmpeg', 'MAKEFLAGS=""-j2""', 'PREFIX', 'OPENCOREAMR_VERSION', 'X264_VERSION', 'OGG_VERSION', 'OGG_SHA256SUM', 'OPUS_VERSION', 'OPUS_SHA256SUM', 'VORBIS_VERSION', 'VORBIS_SHA256SUM', 'THEORA_VERSION', 'THEORA_SHA256SUM', 'PREFIX', 'VPX_VERSION', 'PREFIX', 'WEBP_VERSION', 'LAME_VERSION', 'XVID_VERSION', 'XVID_SHA256SUM', 'PREFIX', 'FDKAAC_VERSION', 'OPENJPEG_VERSION', 'FREETYPE_VERSION', 'FREETYPE_SHA256SUM', 'LIBVIDSTAB_VERSION', 'LIBVIDSTAB_SHA256SUM', 'FRIBIDI_VERSION', 'FRIBIDI_SHA256SUM', 'FONTCONFIG_VERSION', 'LIBASS_VERSION', 'LIBASS_SHA256SUM', 'KVAZAAR_VERSION', 'PREFIX', 'AOM_VERSION', 'XORG_MACROS_VERSION', 'XPROTO_VERSION', 'XAU_VERSION', 'LIBPTHREAD_STUBS_VERSION', 'XCBPROTO_VERSION', 'LIBXCB_VERSION', 'LIBXML2_VERSION', 'LIBXML2_SHA256SUM', 'LIBBLURAY_VERSION', 'LIBBLURAY_SHA256SUM', 'PREFIX', 'LIBZMQ_VERSION', 'LIBZMQ_SHA256SUM', 'PREFIX', 'FFMPEG_VERSION']"
roflcoopter/viseron,latest,/docker/rpi3/Dockerfile.ffmpeg,FROM,10,"['roflcoopter/rpi3-cmake:${CMAKE_VERSION} as cmake', 'balenalib/raspberrypi3-ubuntu:${UBUNTU_VERSION}-build as build', 'build as opencoreamr', 'build as vpx', 'build as webp', 'build as fdkaac', 'build as aom', 'build as zmq', 'build as ffmpeg', 'scratch']"
roflcoopter/viseron,latest,/docker/rpi3/Dockerfile.ffmpeg,RUN,66,"['[ ""cross-build-start"" ]', 'buildDeps=""autoconf   automake   ca-certificates   curl   bzip2   libexpat1-dev   g++   gcc   git   gperf   libtool   make   nasm   perl   pkg-config   python   libssl-dev   yasm   libgomp1   zlib1g-dev   libx265-dev   libomxil-bellagio-dev"" &&   apt-get -yqq update &&   apt-get install -yq --no-install-recommends ${buildDeps}', 'DIR=/tmp/opencore-amr &&   mkdir -p ${DIR} &&   cd ${DIR} &&   curl -sL https://versaweb.dl.sourceforge.net/project/opencore-amr/opencore-amr/opencore-amr-${OPENCOREAMR_VERSION}.tar.gz |   tar -zx --strip-components=1 &&   ./configure --prefix=""${PREFIX}"" --enable-shared  &&   make &&   make install &&   rm -rf ${DIR}', 'DIR=/tmp/x264 &&   mkdir -p ${DIR} &&   cd ${DIR} &&   curl -sL https://download.videolan.org/pub/videolan/x264/snapshots/x264-snapshot-${X264_VERSION}.tar.bz2 |   tar -jx --strip-components=1 &&   ./configure --prefix=""${PREFIX}"" --enable-shared --enable-pic --disable-cli &&   make &&   make install &&   rm -rf ${DIR}', 'DIR=/tmp/ogg &&   mkdir -p ${DIR} &&   cd ${DIR} &&   curl -sLO http://downloads.xiph.org/releases/ogg/libogg-${OGG_VERSION}.tar.gz &&   echo ${OGG_SHA256SUM} | sha256sum --check &&   tar -zx --strip-components=1 -f libogg-${OGG_VERSION}.tar.gz &&   ./configure --prefix=""${PREFIX}"" --enable-shared  &&   make &&   make install &&   rm -rf ${DIR}', 'DIR=/tmp/opus &&   mkdir -p ${DIR} &&   cd ${DIR} &&   curl -sLO https://archive.mozilla.org/pub/opus/opus-${OPUS_VERSION}.tar.gz &&   echo ${OPUS_SHA256SUM} | sha256sum --check &&   tar -zx --strip-components=1 -f opus-${OPUS_VERSION}.tar.gz', '[""cross-build-end""]', 'DIR=/tmp/opus &&   cd ${DIR} &&   autoreconf -fiv', '[""cross-build-start""]', 'DIR=/tmp/opus &&   cd ${DIR} &&   ./configure --prefix=""${PREFIX}"" --enable-shared &&   make &&   make install &&   rm -rf ${DIR}', 'DIR=/tmp/vorbis &&   mkdir -p ${DIR} &&   cd ${DIR} &&   curl -sLO http://downloads.xiph.org/releases/vorbis/libvorbis-${VORBIS_VERSION}.tar.gz &&   echo ${VORBIS_SHA256SUM} | sha256sum --check &&   tar -zx --strip-components=1 -f libvorbis-${VORBIS_VERSION}.tar.gz &&   ./configure --prefix=""${PREFIX}"" --with-ogg=""${PREFIX}"" --enable-shared &&   make &&   make install &&   rm -rf ${DIR}', 'DIR=/tmp/theora &&   mkdir -p ${DIR} &&   cd ${DIR} &&   curl -sLO http://downloads.xiph.org/releases/theora/libtheora-${THEORA_VERSION}.tar.gz &&   echo ${THEORA_SHA256SUM} | sha256sum --check &&   tar -zx --strip-components=1 -f libtheora-${THEORA_VERSION}.tar.gz &&   curl -SLo config.guess ""http://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=config.guess;hb=HEAD"" &&   curl -SLo config.sub ""http://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=config.sub;hb=HEAD"" &&   ./configure --prefix=""${PREFIX}"" --with-ogg=""${PREFIX}"" --enable-shared --disable-examples &&   make &&   make install &&   rm -rf ${DIR}', 'DIR=/tmp/vpx &&   mkdir -p ${DIR} &&   cd ${DIR} &&   curl -sL https://codeload.github.com/webmproject/libvpx/tar.gz/v${VPX_VERSION} |   tar -zx --strip-components=1 &&   ./configure --prefix=""${PREFIX}"" --enable-vp8 --enable-vp9 --enable-vp9-highbitdepth --enable-pic --enable-shared   --disable-debug --disable-examples --disable-docs --disable-install-bins  &&   make &&   make install &&   rm -rf ${DIR}', 'DIR=/tmp/webp &&   mkdir -p ${DIR} &&   cd ${DIR} &&   curl -sL https://storage.googleapis.com/downloads.webmproject.org/releases/webp/libwebp-${WEBP_VERSION}.tar.gz |   tar -zx --strip-components=1 &&   ./configure --prefix=""${PREFIX}"" --enable-shared  &&   make &&   make install &&   rm -rf ${DIR}', 'DIR=/tmp/lame &&   mkdir -p ${DIR} &&   cd ${DIR} &&   curl -sL https://versaweb.dl.sourceforge.net/project/lame/lame/$(echo ${LAME_VERSION} | sed -e \'s/[^0-9]*\\([0-9]*\\)[.]\\([0-9]*\\)[.]\\([0-9]*\\)\\([0-9A-Za-z-]*\\)/\\1.\\2/\')/lame-${LAME_VERSION}.tar.gz |   tar -zx --strip-components=1 &&   ./configure --prefix=""${PREFIX}"" --bindir=""${PREFIX}/bin"" --enable-shared --enable-nasm --disable-frontend &&   make &&   make install &&   rm -rf ${DIR}', 'DIR=/tmp/xvid &&   mkdir -p ${DIR} &&   cd ${DIR} &&   curl -sLO http://downloads.xvid.org/downloads/xvidcore-${XVID_VERSION}.tar.gz &&   echo ${XVID_SHA256SUM} | sha256sum --check &&   tar -zx -f xvidcore-${XVID_VERSION}.tar.gz &&   cd xvidcore/build/generic &&   ./configure --prefix=""${PREFIX}"" --bindir=""${PREFIX}/bin"" &&   make &&   make install &&   rm -rf ${DIR}', 'DIR=/tmp/fdk-aac &&   mkdir -p ${DIR} &&   cd ${DIR} &&   curl -sL https://github.com/mstorsjo/fdk-aac/archive/v${FDKAAC_VERSION}.tar.gz |   tar -zx --strip-components=1', '[""cross-build-end""]', 'DIR=/tmp/fdk-aac &&   cd ${DIR} &&   autoreconf -fiv', '[""cross-build-start""]', 'DIR=/tmp/fdk-aac &&   cd ${DIR} &&   ./configure --prefix=""${PREFIX}"" --enable-shared --datadir=""${DIR}"" &&   make &&   make install &&   rm -rf ${DIR}', 'DIR=/tmp/openjpeg &&   mkdir -p ${DIR} &&   cd ${DIR} &&   curl -sL https://github.com/uclouvain/openjpeg/archive/v${OPENJPEG_VERSION}.tar.gz |   tar -zx --strip-components=1 &&   export CFLAGS=""${CFLAGS} -DPNG_ARM_NEON_OPT=0"" &&   cmake -DBUILD_THIRDPARTY:BOOL=ON -DCMAKE_INSTALL_PREFIX=""${PREFIX}"" . &&   make &&   make install &&   rm -rf ${DIR}', 'DIR=/tmp/freetype &&   mkdir -p ${DIR} &&   cd ${DIR} &&   curl -sLO https://download.savannah.gnu.org/releases/freetype/freetype-${FREETYPE_VERSION}.tar.gz &&   echo ${FREETYPE_SHA256SUM} | sha256sum --check &&   tar -zx --strip-components=1 -f freetype-${FREETYPE_VERSION}.tar.gz &&   ./configure --prefix=""${PREFIX}"" --disable-static --enable-shared &&   make &&   make install &&   rm -rf ${DIR}', 'DIR=/tmp/vid.stab &&   mkdir -p ${DIR} &&   cd ${DIR} &&   curl -sLO https://github.com/georgmartius/vid.stab/archive/${LIBVIDSTAB_VERSION}.tar.gz &&   echo ${LIBVIDSTAB_SHA256SUM} | sha256sum --check &&    tar -zx --strip-components=1 -f ${LIBVIDSTAB_VERSION}.tar.gz &&   cmake -DCMAKE_INSTALL_PREFIX=""${PREFIX}"" -DSSE2_FOUND=OFF . &&   make &&   make install &&   rm -rf ${DIR}', 'DIR=/tmp/fribidi &&   mkdir -p ${DIR} &&   cd ${DIR} &&   curl -sLO https://github.com/fribidi/fribidi/archive/${FRIBIDI_VERSION}.tar.gz &&   echo ${FRIBIDI_SHA256SUM} | sha256sum --check &&   tar -zx --strip-components=1 -f ${FRIBIDI_VERSION}.tar.gz', '[""cross-build-end""]', 'export NOCONFIGURE=1 &&   DIR=/tmp/fribidi &&   cd ${DIR} &&   ./autogen.sh', '[""cross-build-start""]', 'DIR=/tmp/fribidi &&   cd ${DIR} &&   ./configure --prefix=""${PREFIX}"" --disable-static --enable-shared &&   make -j1 &&   make install &&   rm -rf ${DIR}', 'DIR=/tmp/fontconfig &&   mkdir -p ${DIR} &&   cd ${DIR} &&   curl -sLO https://www.freedesktop.org/software/fontconfig/release/fontconfig-${FONTCONFIG_VERSION}.tar.bz2 &&   tar -jx --strip-components=1 -f fontconfig-${FONTCONFIG_VERSION}.tar.bz2 &&   ./configure --prefix=""${PREFIX}"" --disable-static --enable-shared &&   make &&   make install &&   rm -rf ${DIR}', 'DIR=/tmp/libass &&   mkdir -p ${DIR} &&   cd ${DIR} &&   curl -sLO https://github.com/libass/libass/archive/${LIBASS_VERSION}.tar.gz &&   echo ${LIBASS_SHA256SUM} | sha256sum --check &&   tar -zx --strip-components=1 -f ${LIBASS_VERSION}.tar.gz', '[""cross-build-end""]', 'DIR=/tmp/libass &&   cd ${DIR} &&   ./autogen.sh', '[""cross-build-start""]', 'DIR=/tmp/libass &&   cd ${DIR} &&   ./configure --prefix=""${PREFIX}"" --disable-static --enable-shared &&   make &&   make install &&   rm -rf ${DIR}', 'DIR=/tmp/kvazaar &&   mkdir -p ${DIR} &&   cd ${DIR} &&   curl -sLO https://github.com/ultravideo/kvazaar/archive/v${KVAZAAR_VERSION}.tar.gz &&   tar -zx --strip-components=1 -f v${KVAZAAR_VERSION}.tar.gz', '[""cross-build-end""]', 'DIR=/tmp/kvazaar &&   cd ${DIR} &&   ./autogen.sh', '[""cross-build-start""]', 'DIR=/tmp/kvazaar &&   cd ${DIR} &&   ./configure --prefix=""${PREFIX}"" --disable-static --enable-shared &&   make &&   make install &&   rm -rf ${DIR}', 'DIR=/tmp/aom &&   git clone --branch v${AOM_VERSION} --depth 1 https://aomedia.googlesource.com/aom ${DIR} &&   cd ${DIR} &&   rm -rf CMakeCache.txt CMakeFiles &&   mkdir -p ./aom_build &&   cd ./aom_build &&   cmake -DCMAKE_INSTALL_PREFIX=""${PREFIX}"" -DAOM_TARGET_CPU=arm -DENABLE_TESTS=0 .. &&   make &&   make install &&   rm -rf ${DIR}', 'DIR=/tmp/xorg-macros &&   mkdir -p ${DIR} &&   cd ${DIR} &&   curl -sLO https://www.x.org/archive//individual/util/util-macros-${XORG_MACROS_VERSION}.tar.gz &&   tar -zx --strip-components=1 -f util-macros-${XORG_MACROS_VERSION}.tar.gz &&   ./configure --srcdir=${DIR} --prefix=""${PREFIX}"" &&   make &&   make install &&   rm -rf ${DIR}', 'DIR=/tmp/xproto &&   mkdir -p ${DIR} &&   cd ${DIR} &&   curl -sLO https://www.x.org/archive/individual/proto/xproto-${XPROTO_VERSION}.tar.gz &&   tar -zx --strip-components=1 -f xproto-${XPROTO_VERSION}.tar.gz &&   ./configure --srcdir=${DIR} --prefix=""${PREFIX}"" &&   make &&   make install &&   rm -rf ${DIR}', 'DIR=/tmp/libXau &&   mkdir -p ${DIR} &&   cd ${DIR} &&   curl -sLO https://www.x.org/archive/individual/lib/libXau-${XAU_VERSION}.tar.gz &&   tar -zx --strip-components=1 -f libXau-${XAU_VERSION}.tar.gz &&   ./configure --srcdir=${DIR} --prefix=""${PREFIX}"" &&   make &&   make install &&   rm -rf ${DIR}', 'DIR=/tmp/libpthread-stubs &&   mkdir -p ${DIR} &&   cd ${DIR} &&   curl -sLO https://xcb.freedesktop.org/dist/libpthread-stubs-${LIBPTHREAD_STUBS_VERSION}.tar.gz &&   tar -zx --strip-components=1 -f libpthread-stubs-${LIBPTHREAD_STUBS_VERSION}.tar.gz &&   ./configure --prefix=""${PREFIX}"" &&   make &&   make install &&   rm -rf ${DIR}', 'DIR=/tmp/libxcb-proto &&   mkdir -p ${DIR} &&   cd ${DIR} &&   curl -sLO https://xcb.freedesktop.org/dist/xcb-proto-${XCBPROTO_VERSION}.tar.gz &&   tar -zx --strip-components=1 -f xcb-proto-${XCBPROTO_VERSION}.tar.gz &&   ACLOCAL_PATH=""${PREFIX}/share/aclocal"" ./autogen.sh &&   ./configure --prefix=""${PREFIX}"" &&   make &&   make install &&   rm -rf ${DIR}', 'DIR=/tmp/libxcb &&   mkdir -p ${DIR} &&   cd ${DIR} &&   curl -sLO https://xcb.freedesktop.org/dist/libxcb-${LIBXCB_VERSION}.tar.gz &&   tar -zx --strip-components=1 -f libxcb-${LIBXCB_VERSION}.tar.gz', '[""cross-build-end""]', 'export NOCONFIGURE=1 &&   DIR=/tmp/libxcb &&   cd ${DIR} &&   ACLOCAL_PATH=""${PREFIX}/share/aclocal"" ./autogen.sh', '[""cross-build-start""]', 'DIR=/tmp/libxcb &&   cd ${DIR} &&   ./configure --prefix=""${PREFIX}"" --disable-static --enable-shared &&   make &&   make install &&   rm -rf ${DIR}', 'DIR=/tmp/libxml2 &&   mkdir -p ${DIR} &&   cd ${DIR} &&   curl -sLO https://gitlab.gnome.org/GNOME/libxml2/-/archive/v${LIBXML2_VERSION}/libxml2-v${LIBXML2_VERSION}.tar.gz &&   echo ${LIBXML2_SHA256SUM} | sha256sum --check &&   tar -xz --strip-components=1 -f libxml2-v${LIBXML2_VERSION}.tar.gz', '[""cross-build-end""]', 'DIR=/tmp/libxml2 &&   cd ${DIR} &&   ./autogen.sh --prefix=""${PREFIX}"" --with-ftp=no --with-http=no --with-python=no', '[""cross-build-start""]', 'DIR=/tmp/libxml2 &&   cd ${DIR} &&   make &&   make install &&   rm -rf ${DIR}', 'DIR=/tmp/libbluray &&   mkdir -p ${DIR} &&   cd ${DIR} &&   curl -sLO https://download.videolan.org/pub/videolan/libbluray/${LIBBLURAY_VERSION}/libbluray-${LIBBLURAY_VERSION}.tar.bz2 &&   echo ${LIBBLURAY_SHA256SUM} | sha256sum --check &&   tar -jx --strip-components=1 -f libbluray-${LIBBLURAY_VERSION}.tar.bz2 &&   ./configure --prefix=""${PREFIX}"" --disable-examples --disable-bdjava-jar --disable-static --enable-shared &&   make &&   make install &&   rm -rf ${DIR}', 'DIR=/tmp/libzmq &&   mkdir -p ${DIR} &&   cd ${DIR} &&   curl -sLO https://github.com/zeromq/libzmq/archive/v${LIBZMQ_VERSION}.tar.gz &&   echo ${LIBZMQ_SHA256SUM} | sha256sum --check &&   tar -xz --strip-components=1 -f v${LIBZMQ_VERSION}.tar.gz', '[""cross-build-end""]', 'DIR=/tmp/libzmq &&   cd ${DIR} &&   ./autogen.sh', '[""cross-build-start""]', 'DIR=/tmp/libzmq &&   cd ${DIR} &&   ./configure --prefix=""${PREFIX}"" &&   make &&   make install &&   rm -rf ${DIR}', 'DIR=/tmp/userland &&   mkdir -p ${DIR} &&   cd ${DIR} &&   git clone --depth 1 https://github.com/raspberrypi/userland.git . &&   ./buildme &&   rm -rf ${DIR} &&   echo ""/opt/vc/lib"" > /etc/ld.so.conf.d/00-vmcs.conf &&   ldconfig', 'ls -al /opt/ffmpeg &&   DIR=/tmp/ffmpeg && mkdir -p ${DIR} && cd ${DIR} &&   curl -sLO https://ffmpeg.org/releases/ffmpeg-${FFMPEG_VERSION}.tar.bz2 &&   tar -jx --strip-components=1 -f ffmpeg-${FFMPEG_VERSION}.tar.bz2 &&   DIR=/tmp/ffmpeg && mkdir -p ${DIR} && cd ${DIR} &&   ./configure   --disable-debug   --disable-doc   --disable-ffplay   --enable-shared   --enable-avresample   --enable-libopencore-amrnb   --enable-libopencore-amrwb   --enable-gpl   --enable-libass   --enable-fontconfig   --enable-libfreetype   --enable-libvidstab   --enable-libmp3lame   --enable-libopus   --enable-libtheora   --enable-libvorbis   --enable-libvpx   --enable-libwebp   --enable-libxcb   --enable-libx265   --enable-libxvid   --enable-libx264   --enable-nonfree   --enable-openssl   --enable-libfdk_aac   --enable-postproc   --enable-small   --enable-version3   --enable-libbluray   --enable-libzmq   --extra-libs=-ldl   --prefix=""${PREFIX}""   --enable-libopenjpeg   --enable-libkvazaar   --enable-libaom   --extra-libs=-lpthread   --enable-mmal   --enable-neon   --enable-omx   --enable-omx-rpi   --enable-v4l2_m2m   --extra-cflags=""-I${PREFIX}/include""   --extra-ldflags=""-L${PREFIX}/lib"" &&   make &&   make install &&   make tools/zmqsend && cp tools/zmqsend ${PREFIX}/bin/ &&   make distclean &&   hash -r &&   cd tools &&   make qt-faststart && cp qt-faststart ${PREFIX}/bin/', 'ldd ${PREFIX}/bin/ffmpeg | grep opt/ffmpeg | cut -d \' \' -f 3 | xargs -i cp {} /usr/local/lib/ &&   for lib in /usr/local/lib/*.so.*; do ln -s ""${lib##*/}"" ""${lib%%.so.*}"".so; done &&   cp ${PREFIX}/bin/* /usr/local/bin/ &&   cp -r ${PREFIX}/share/ffmpeg /usr/local/share/ &&   LD_LIBRARY_PATH=/usr/local/lib ffmpeg -buildconf &&   cp -r ${PREFIX}/include/libav* ${PREFIX}/include/libpostproc ${PREFIX}/include/libsw* /usr/local/include &&   mkdir -p /usr/local/lib/pkgconfig &&   for pc in ${PREFIX}/lib/pkgconfig/libav*.pc ${PREFIX}/lib/pkgconfig/libpostproc.pc ${PREFIX}/lib/pkgconfig/libsw*.pc; do   sed ""s:${PREFIX}:/usr/local:g"" <""$pc"" >/usr/local/lib/pkgconfig/""${pc##*/}"";   done', '[ ""cross-build-end"" ]']"
roflcoopter/viseron,latest,/docker/rpi3/Dockerfile.ffmpeg,COPY,10,"['--from=cmake /usr/custom_cmake/bin /usr/custom_cmake/bin/', '--from=cmake /usr/custom_cmake/share /usr/custom_cmake/share/', '--from=opencoreamr /opt/ffmpeg /opt/ffmpeg', '--from=vpx /opt/ffmpeg /opt/ffmpeg', '--from=webp /opt/ffmpeg /opt/ffmpeg', '--from=fdkaac /opt/ffmpeg /opt/ffmpeg', '--from=aom /opt/ffmpeg /opt/ffmpeg', '--from=zmq /opt/ffmpeg /opt/ffmpeg', '--from=ffmpeg /usr/local /usr/local/', '--from=ffmpeg /opt/vc/lib /opt/vc/lib']"
roflcoopter/viseron,latest,/docker/rpi3/Dockerfile.ffmpeg,WORKDIR,1,['/tmp/workdir']
roflcoopter/viseron,latest,/docker/rpi3/Dockerfile.ffmpeg,ENV,1,"['DEBIAN_FRONTEND=noninteractive   SRC=/usr/local   PATH=/usr/custom_cmake/bin:$PATH   PKG_CONFIG_PATH=""/opt/ffmpeg/share/pkgconfig:/opt/ffmpeg/lib/pkgconfig:/opt/ffmpeg/lib64/pkgconfig""   LD_LIBRARY_PATH=""/opt/ffmpeg/lib:/opt/ffmpeg/lib64:/usr/lib64:/usr/lib:/lib64:/lib:/opt/vc/lib""']"
roflcoopter/viseron,latest,/docker/rpi3/Dockerfile.dlib,ARG,4,"['CMAKE_VERSION', 'UBUNTU_VERSION', 'DLIB_VERSION', 'MAKEFLAGS=""-j2""']"
roflcoopter/viseron,latest,/docker/rpi3/Dockerfile.dlib,FROM,3,"['roflcoopter/rpi3-cmake:${CMAKE_VERSION} as cmake', 'balenalib/raspberrypi3-ubuntu:${UBUNTU_VERSION}-build as build', 'scratch as scratch']"
roflcoopter/viseron,latest,/docker/rpi3/Dockerfile.dlib,RUN,5,"['[ ""cross-build-start"" ]', 'buildDeps=""autoconf   automake   ca-certificates   g++   gcc   git   libopenblas-dev   liblapack-dev   make   python3-dev   python3-pip   python3-setuptools   python3-wheel"" &&   apt-get -yqq update &&   apt-get install -yq --no-install-recommends ${buildDeps}', 'DIR=/tmp && mkdir -p ${DIR} && cd ${DIR} &&   git clone --branch v${DLIB_VERSION} --depth 1 https://github.com/davisking/dlib.git &&   cd dlib; python3 setup.py bdist_wheel --dist-dir=/wheels --compiler-flags ""-mfpu=neon""', 'pip3 wheel face_recognition dlib==${DLIB_VERSION} --wheel-dir=/wheels/ --find-links=/wheels/', '[ ""cross-build-end"" ]']"
roflcoopter/viseron,latest,/docker/rpi3/Dockerfile.dlib,COPY,3,"['--from=cmake /usr/custom_cmake/bin /usr/custom_cmake/bin/', '--from=cmake /usr/custom_cmake/share /usr/custom_cmake/share/', '--from=build /wheels /wheels/']"
roflcoopter/viseron,latest,/docker/rpi3/Dockerfile.dlib,ENV,1,['DEBIAN_FRONTEND=noninteractive   PIP_IGNORE_INSTALLED=0   PATH=/usr/custom_cmake/bin:$PATH']
roflcoopter/viseron,latest,/docker/rpi3/Dockerfile.opencv,ARG,5,"['CMAKE_VERSION', 'FFMPEG_VERSION', 'UBUNTU_VERSION', 'OPENCV_VERSION', 'MAKEFLAGS=""-j2""']"
roflcoopter/viseron,latest,/docker/rpi3/Dockerfile.opencv,FROM,4,"['roflcoopter/rpi3-cmake:${CMAKE_VERSION} as cmake', 'roflcoopter/rpi3-ffmpeg:${FFMPEG_VERSION} as ffmpeg', 'balenalib/raspberrypi3-ubuntu:${UBUNTU_VERSION}-build as build', 'scratch']"
roflcoopter/viseron,latest,/docker/rpi3/Dockerfile.opencv,RUN,6,"['[ ""cross-build-start"" ]', 'buildDeps=""autoconf   automake   ca-certificates   curl   clinfo   bzip2   expat   libexpat1-dev   g++   gcc   git   gperf   libtool   make   nasm   perl   pkg-config   python3   python3-dev   python3-numpy   libssl-dev   yasm   libgomp1   libatlas-base-dev liblapacke-dev gfortran libhdf5-dev libhdf5-103   zlib1g-dev"" &&   apt-get -yqq update &&   apt-get install -yq --no-install-recommends ${buildDeps}', 'DIR=/tmp/opencv && mkdir -p ${DIR} && cd ${DIR} &&   curl -sL -o opencv-${OPENCV_VERSION}.tar.gz https://github.com/opencv/opencv/archive/${OPENCV_VERSION}.tar.gz &&   tar -x --strip-components=1 -f opencv-${OPENCV_VERSION}.tar.gz', 'DIR=/tmp/opencv_contrib && mkdir -p ${DIR} && cd ${DIR} &&   curl -sL -o opencv_contrib-${OPENCV_VERSION}.tar.gz https://github.com/opencv/opencv_contrib/archive/${OPENCV_VERSION}.tar.gz &&   tar -x --strip-components=1 -f opencv_contrib-${OPENCV_VERSION}.tar.gz', 'DIR=/tmp/opencv/build && mkdir -p ${DIR} && cd ${DIR} &&   cmake -D CMAKE_BUILD_TYPE=RELEASE   -DBUILD_TIFF=ON   -DBUILD_opencv_java=OFF   -D BUILD_SHARED_LIBS=ON   -D ENABLE_NEON=ON   -D ENABLE_VFPV3=ON   -D WITH_CSTRIPES=ON   -D BUILD_TESTS=OFF   -D BUILD_PERF_TESTS=OFF   -D BUILD_opencv_python2=OFF   -D BUILD_opencv_python3=ON   -D CMAKE_INSTALL_PREFIX=${PREFIX}   -D INSTALL_PYTHON_EXAMPLES=OFF   -D INSTALL_C_EXAMPLES=OFF   -D OPENCV_EXTRA_MODULES_PATH=/tmp/opencv_contrib/modules   -D BUILD_DOCS=OFF   -D BUILD_EXAMPLES=OFF   -D BUILD_opencv_face=OFF   -D HIGHGUI_ENABLE_PLUGINS=OFF   -D WITH_WIN32UI=OFF   -D WITH_GTK=OFF   -D WITH_QT=OFF   /tmp/opencv &&   make &&   make install', '[ ""cross-build-end"" ]']"
roflcoopter/viseron,latest,/docker/rpi3/Dockerfile.opencv,COPY,4,"['--from=cmake /usr/custom_cmake/bin /usr/custom_cmake/bin/', '--from=cmake /usr/custom_cmake/share /usr/custom_cmake/share/', '--from=ffmpeg /usr/local /usr/local/', '--from=build /opt/opencv /opt/opencv/']"
roflcoopter/viseron,latest,/docker/rpi3/Dockerfile.opencv,WORKDIR,1,['/tmp/workdir']
roflcoopter/viseron,latest,/docker/rpi3/Dockerfile.opencv,ENV,1,"['DEBIAN_FRONTEND=noninteractive   PKG_CONFIG_PATH=""/opt/opencv/share/pkgconfig:/opt/opencv/lib/pkgconfig:/opt/opencv/lib64/pkgconfig""   PREFIX=/opt/opencv   LD_LIBRARY_PATH=""/opt/opencv/lib:/opt/opencv/lib64:/usr/lib64:/usr/lib:/lib64:/lib""   PATH=/usr/custom_cmake/bin:$PATH']"
roflcoopter/viseron,latest,/docker/rpi3/Dockerfile.base,ARG,2,"['FFMPEG_VERSION', 'UBUNTU_VERSION']"
roflcoopter/viseron,latest,/docker/rpi3/Dockerfile.base,FROM,3,"['roflcoopter/viseron-models:latest as models', 'roflcoopter/rpi3-ffmpeg:${FFMPEG_VERSION} as ffmpeg', 'balenalib/raspberrypi3-ubuntu:${UBUNTU_VERSION}-run']"
roflcoopter/viseron,latest,/docker/rpi3/Dockerfile.base,COPY,2,"['--from=ffmpeg /opt/vc/lib /opt/vc/lib', '--from=models /detectors/models/edgetpu /detectors/models/edgetpu']"
roflcoopter/viseron,latest,/docker/rpi3/Dockerfile.base,RUN,1,"['apt-get update && apt-get install -y --no-install-recommends   libtiff5   libjpeg62   libxcb1   libx11-6   libxext6   libsm6   libatlas3-base   libhdf5-103   liblapacke   libopenexr24   libpng16-16   libx265-179 &&   echo ""/opt/vc/lib"" > /etc/ld.so.conf.d/00-vmcs.conf &&   ldconfig']"
roflcoopter/viseron,latest,/docker/amd64-cuda/Dockerfile.ffmpeg,ARG,46,"['CUDA_VERSION', 'UBUNTU_VERSION_NUMBER', 'MAKEFLAGS=""-j2""', 'OPENCOREAMR_VERSION', 'X264_VERSION', 'X265_VERSION', 'OGG_VERSION', 'OGG_SHA256SUM', 'OPUS_VERSION', 'OPUS_SHA256SUM', 'VORBIS_VERSION', 'VORBIS_SHA256SUM', 'THEORA_VERSION', 'THEORA_SHA256SUM', 'VPX_VERSION', 'WEBP_VERSION', 'LAME_VERSION', 'XVID_VERSION', 'XVID_SHA256SUM', 'FDKAAC_VERSION', 'OPENJPEG_VERSION', 'FREETYPE_VERSION', 'FREETYPE_SHA256SUM', 'LIBVIDSTAB_VERSION', 'LIBVIDSTAB_SHA256SUM', 'FRIBIDI_VERSION', 'FRIBIDI_SHA256SUM', 'FONTCONFIG_VERSION', 'LIBASS_VERSION', 'LIBASS_SHA256SUM', 'KVAZAAR_VERSION', 'AOM_VERSION', 'XORG_MACROS_VERSION', 'XPROTO_VERSION', 'XAU_VERSION', 'LIBPTHREAD_STUBS_VERSION', 'XCBPROTO_VERSION', 'LIBXCB_VERSION', 'LIBXML2_VERSION', 'LIBXML2_SHA256SUM', 'LIBBLURAY_VERSION', 'LIBBLURAY_SHA256SUM', 'LIBZMQ_VERSION', 'LIBZMQ_SHA256SUM', 'VIDEO_CODEC_SDK_VERSION', 'FFMPEG_VERSION']"
roflcoopter/viseron,latest,/docker/amd64-cuda/Dockerfile.ffmpeg,FROM,2,"['nvidia/cuda:${CUDA_VERSION}-devel-ubuntu${UBUNTU_VERSION_NUMBER} AS build', 'scratch']"
roflcoopter/viseron,latest,/docker/amd64-cuda/Dockerfile.ffmpeg,WORKDIR,1,['/tmp/workdir']
roflcoopter/viseron,latest,/docker/amd64-cuda/Dockerfile.ffmpeg,ENV,1,"['DEBIAN_FRONTEND=noninteractive   SRC=/usr/local   PATH=/usr/custom_cmake/bin:$PATH   PKG_CONFIG_PATH=""/opt/ffmpeg/share/pkgconfig:/opt/ffmpeg/lib/pkgconfig:/opt/ffmpeg/lib64/pkgconfig""   PREFIX=/opt/ffmpeg   LD_LIBRARY_PATH=""/opt/ffmpeg/lib:/opt/ffmpeg/lib64:/usr/lib64:/usr/lib:/lib64:/lib""']"
roflcoopter/viseron,latest,/docker/amd64-cuda/Dockerfile.ffmpeg,RUN,33,"['buildDeps=""autoconf   automake   ca-certificates   cmake   curl   bzip2   libexpat1-dev   g++   gcc   git   gperf   libtool   make   nasm   perl   pkg-config   python   libssl-dev   yasm   libgomp1   libnuma-dev   zlib1g-dev   libva-dev"" &&   apt-get -yqq update &&   apt-get install -yq --no-install-recommends ${buildDeps}', 'DIR=/tmp/opencore-amr &&   mkdir -p ${DIR} &&   cd ${DIR} &&   curl -sL https://versaweb.dl.sourceforge.net/project/opencore-amr/opencore-amr/opencore-amr-${OPENCOREAMR_VERSION}.tar.gz |   tar -zx --strip-components=1 &&   ./configure --prefix=""${PREFIX}"" --enable-shared  &&   make &&   make install &&   rm -rf ${DIR}', 'DIR=/tmp/x264 &&   mkdir -p ${DIR} &&   cd ${DIR} &&   curl -sL https://download.videolan.org/pub/videolan/x264/snapshots/x264-snapshot-${X264_VERSION}.tar.bz2 |   tar -jx --strip-components=1 &&   ./configure --prefix=""${PREFIX}"" --enable-shared --enable-pic --disable-cli &&   make &&   make install &&   rm -rf ${DIR}', 'DIR=/tmp/x265 &&   mkdir -p ${DIR} &&   cd ${DIR} &&   curl -sL https://download.videolan.org/pub/videolan/x265/x265_${X265_VERSION}.tar.gz  |   tar -zx &&   cd x265_${X265_VERSION}/build/linux &&   sed -i ""/-DEXTRA_LIB/ s/$/ -DCMAKE_INSTALL_PREFIX=\\${PREFIX}/"" multilib.sh &&   sed -i ""/^cmake/ s/$/ -DENABLE_CLI=OFF/"" multilib.sh &&   ./multilib.sh &&   make -C 8bit install &&   rm -rf ${DIR}', 'DIR=/tmp/ogg &&   mkdir -p ${DIR} &&   cd ${DIR} &&   curl -sLO http://downloads.xiph.org/releases/ogg/libogg-${OGG_VERSION}.tar.gz &&   echo ${OGG_SHA256SUM} | sha256sum --check &&   tar -zx --strip-components=1 -f libogg-${OGG_VERSION}.tar.gz &&   ./configure --prefix=""${PREFIX}"" --enable-shared  &&   make &&   make install &&   rm -rf ${DIR}', 'DIR=/tmp/opus &&   mkdir -p ${DIR} &&   cd ${DIR} &&   curl -sLO https://archive.mozilla.org/pub/opus/opus-${OPUS_VERSION}.tar.gz &&   echo ${OPUS_SHA256SUM} | sha256sum --check &&   tar -zx --strip-components=1 -f opus-${OPUS_VERSION}.tar.gz &&   autoreconf -fiv &&   ./configure --prefix=""${PREFIX}"" --enable-shared &&   make &&   make install &&   rm -rf ${DIR}', 'DIR=/tmp/vorbis &&   mkdir -p ${DIR} &&   cd ${DIR} &&   curl -sLO http://downloads.xiph.org/releases/vorbis/libvorbis-${VORBIS_VERSION}.tar.gz &&   echo ${VORBIS_SHA256SUM} | sha256sum --check &&   tar -zx --strip-components=1 -f libvorbis-${VORBIS_VERSION}.tar.gz &&   ./configure --prefix=""${PREFIX}"" --with-ogg=""${PREFIX}"" --enable-shared &&   make &&   make install &&   rm -rf ${DIR}', 'DIR=/tmp/theora &&   mkdir -p ${DIR} &&   cd ${DIR} &&   curl -sLO http://downloads.xiph.org/releases/theora/libtheora-${THEORA_VERSION}.tar.gz &&   echo ${THEORA_SHA256SUM} | sha256sum --check &&   tar -zx --strip-components=1 -f libtheora-${THEORA_VERSION}.tar.gz &&   ./configure --prefix=""${PREFIX}"" --with-ogg=""${PREFIX}"" --enable-shared --disable-examples &&   make &&   make install &&   rm -rf ${DIR}', 'DIR=/tmp/vpx &&   mkdir -p ${DIR} &&   cd ${DIR} &&   curl -sL https://codeload.github.com/webmproject/libvpx/tar.gz/v${VPX_VERSION} |   tar -zx --strip-components=1 &&   ./configure --prefix=""${PREFIX}"" --enable-vp8 --enable-vp9 --enable-vp9-highbitdepth --enable-pic --enable-shared   --disable-debug --disable-examples --disable-docs --disable-install-bins  &&   make &&   make install &&   rm -rf ${DIR}', 'DIR=/tmp/vebp &&   mkdir -p ${DIR} &&   cd ${DIR} &&   curl -sL https://storage.googleapis.com/downloads.webmproject.org/releases/webp/libwebp-${WEBP_VERSION}.tar.gz |   tar -zx --strip-components=1 &&   ./configure --prefix=""${PREFIX}"" --enable-shared  &&   make &&   make install &&   rm -rf ${DIR}', 'DIR=/tmp/lame &&   mkdir -p ${DIR} &&   cd ${DIR} &&   curl -sL https://versaweb.dl.sourceforge.net/project/lame/lame/$(echo ${LAME_VERSION} | sed -e \'s/[^0-9]*\\([0-9]*\\)[.]\\([0-9]*\\)[.]\\([0-9]*\\)\\([0-9A-Za-z-]*\\)/\\1.\\2/\')/lame-${LAME_VERSION}.tar.gz |   tar -zx --strip-components=1 &&   ./configure --prefix=""${PREFIX}"" --bindir=""${PREFIX}/bin"" --enable-shared --enable-nasm --disable-frontend &&   make &&   make install &&   rm -rf ${DIR}', 'DIR=/tmp/xvid &&   mkdir -p ${DIR} &&   cd ${DIR} &&   curl -sLO http://downloads.xvid.org/downloads/xvidcore-${XVID_VERSION}.tar.gz &&   echo ${XVID_SHA256SUM} | sha256sum --check &&   tar -zx -f xvidcore-${XVID_VERSION}.tar.gz &&   cd xvidcore/build/generic &&   ./configure --prefix=""${PREFIX}"" --bindir=""${PREFIX}/bin"" &&   make &&   make install &&   rm -rf ${DIR}', 'DIR=/tmp/fdk-aac &&   mkdir -p ${DIR} &&   cd ${DIR} &&   curl -sL https://github.com/mstorsjo/fdk-aac/archive/v${FDKAAC_VERSION}.tar.gz |   tar -zx --strip-components=1 &&   autoreconf -fiv &&   ./configure --prefix=""${PREFIX}"" --enable-shared --datadir=""${DIR}"" &&   make &&   make install &&   rm -rf ${DIR}', 'DIR=/tmp/openjpeg &&   mkdir -p ${DIR} &&   cd ${DIR} &&   curl -sL https://github.com/uclouvain/openjpeg/archive/v${OPENJPEG_VERSION}.tar.gz |   tar -zx --strip-components=1 &&   cmake -DBUILD_THIRDPARTY:BOOL=ON -DCMAKE_INSTALL_PREFIX=""${PREFIX}"" . &&   make &&   make install &&   rm -rf ${DIR}', 'DIR=/tmp/freetype &&   mkdir -p ${DIR} &&   cd ${DIR} &&   curl -sLO https://download.savannah.gnu.org/releases/freetype/freetype-${FREETYPE_VERSION}.tar.gz &&   echo ${FREETYPE_SHA256SUM} | sha256sum --check &&   tar -zx --strip-components=1 -f freetype-${FREETYPE_VERSION}.tar.gz &&   ./configure --prefix=""${PREFIX}"" --disable-static --enable-shared &&   make &&   make install &&   rm -rf ${DIR}', 'DIR=/tmp/vid.stab &&   mkdir -p ${DIR} &&   cd ${DIR} &&   curl -sLO https://github.com/georgmartius/vid.stab/archive/${LIBVIDSTAB_VERSION}.tar.gz &&   echo ${LIBVIDSTAB_SHA256SUM} | sha256sum --check &&    tar -zx --strip-components=1 -f ${LIBVIDSTAB_VERSION}.tar.gz &&   cmake -DCMAKE_INSTALL_PREFIX=""${PREFIX}"" . &&   make &&   make install &&   rm -rf ${DIR}', 'DIR=/tmp/fribidi &&   mkdir -p ${DIR} &&   cd ${DIR} &&   curl -sLO https://github.com/fribidi/fribidi/archive/${FRIBIDI_VERSION}.tar.gz &&   echo ${FRIBIDI_SHA256SUM} | sha256sum --check &&   tar -zx --strip-components=1 -f ${FRIBIDI_VERSION}.tar.gz &&   ./autogen.sh &&   ./configure --prefix=""${PREFIX}"" --disable-static --enable-shared &&   make -j1 &&   make install &&   rm -rf ${DIR}', 'DIR=/tmp/fontconfig &&   mkdir -p ${DIR} &&   cd ${DIR} &&   curl -sLO https://www.freedesktop.org/software/fontconfig/release/fontconfig-${FONTCONFIG_VERSION}.tar.bz2 &&   tar -jx --strip-components=1 -f fontconfig-${FONTCONFIG_VERSION}.tar.bz2 &&   ./configure --prefix=""${PREFIX}"" --disable-static --enable-shared &&   make &&   make install &&   rm -rf ${DIR}', 'DIR=/tmp/libass &&   mkdir -p ${DIR} &&   cd ${DIR} &&   curl -sLO https://github.com/libass/libass/archive/${LIBASS_VERSION}.tar.gz &&   echo ${LIBASS_SHA256SUM} | sha256sum --check &&   tar -zx --strip-components=1 -f ${LIBASS_VERSION}.tar.gz &&   ./autogen.sh &&   ./configure --prefix=""${PREFIX}"" --disable-static --enable-shared &&   make &&   make install &&   rm -rf ${DIR}', 'DIR=/tmp/kvazaar &&   mkdir -p ${DIR} &&   cd ${DIR} &&   curl -sLO https://github.com/ultravideo/kvazaar/archive/v${KVAZAAR_VERSION}.tar.gz &&   tar -zx --strip-components=1 -f v${KVAZAAR_VERSION}.tar.gz &&   ./autogen.sh &&   ./configure --prefix=""${PREFIX}"" --disable-static --enable-shared &&   make &&   make install &&   rm -rf ${DIR}', 'DIR=/tmp/aom &&   git clone --branch v${AOM_VERSION} --depth 1 https://aomedia.googlesource.com/aom ${DIR} &&   cd ${DIR} &&   rm -rf CMakeCache.txt CMakeFiles &&   mkdir -p ./aom_build &&   cd ./aom_build &&   cmake -DCMAKE_INSTALL_PREFIX=""${PREFIX}"" -DENABLE_TESTS=0 .. &&   make &&   make install &&   rm -rf ${DIR}', 'DIR=/tmp/xorg-macros &&   mkdir -p ${DIR} &&   cd ${DIR} &&   curl -sLO https://www.x.org/archive//individual/util/util-macros-${XORG_MACROS_VERSION}.tar.gz &&   tar -zx --strip-components=1 -f util-macros-${XORG_MACROS_VERSION}.tar.gz &&   ./configure --srcdir=${DIR} --prefix=""${PREFIX}"" &&   make &&   make install &&   rm -rf ${DIR}', 'DIR=/tmp/xproto &&   mkdir -p ${DIR} &&   cd ${DIR} &&   curl -sLO https://www.x.org/archive/individual/proto/xproto-${XPROTO_VERSION}.tar.gz &&   tar -zx --strip-components=1 -f xproto-${XPROTO_VERSION}.tar.gz &&   ./configure --srcdir=${DIR} --prefix=""${PREFIX}"" &&   make &&   make install &&   rm -rf ${DIR}', 'DIR=/tmp/libXau &&   mkdir -p ${DIR} &&   cd ${DIR} &&   curl -sLO https://www.x.org/archive/individual/lib/libXau-${XAU_VERSION}.tar.gz &&   tar -zx --strip-components=1 -f libXau-${XAU_VERSION}.tar.gz &&   ./configure --srcdir=${DIR} --prefix=""${PREFIX}"" &&   make &&   make install &&   rm -rf ${DIR}', 'DIR=/tmp/libpthread-stubs &&   mkdir -p ${DIR} &&   cd ${DIR} &&   curl -sLO https://xcb.freedesktop.org/dist/libpthread-stubs-${LIBPTHREAD_STUBS_VERSION}.tar.gz &&   tar -zx --strip-components=1 -f libpthread-stubs-${LIBPTHREAD_STUBS_VERSION}.tar.gz &&   ./configure --prefix=""${PREFIX}"" &&   make &&   make install &&   rm -rf ${DIR}', 'DIR=/tmp/libxcb-proto &&   mkdir -p ${DIR} &&   cd ${DIR} &&   curl -sLO https://xcb.freedesktop.org/dist/xcb-proto-${XCBPROTO_VERSION}.tar.gz &&   tar -zx --strip-components=1 -f xcb-proto-${XCBPROTO_VERSION}.tar.gz &&   ACLOCAL_PATH=""${PREFIX}/share/aclocal"" ./autogen.sh &&   ./configure --prefix=""${PREFIX}"" &&   make &&   make install &&   rm -rf ${DIR}', 'DIR=/tmp/libxcb &&   mkdir -p ${DIR} &&   cd ${DIR} &&   curl -sLO https://xcb.freedesktop.org/dist/libxcb-${LIBXCB_VERSION}.tar.gz &&   tar -zx --strip-components=1 -f libxcb-${LIBXCB_VERSION}.tar.gz &&   ACLOCAL_PATH=""${PREFIX}/share/aclocal"" ./autogen.sh &&   ./configure --prefix=""${PREFIX}"" --disable-static --enable-shared &&   make &&   make install &&   rm -rf ${DIR}', 'DIR=/tmp/libxml2 &&   mkdir -p ${DIR} &&   cd ${DIR} &&   curl -sLO https://gitlab.gnome.org/GNOME/libxml2/-/archive/v${LIBXML2_VERSION}/libxml2-v${LIBXML2_VERSION}.tar.gz &&   echo ${LIBXML2_SHA256SUM} | sha256sum --check &&   tar -xz --strip-components=1 -f libxml2-v${LIBXML2_VERSION}.tar.gz &&   ./autogen.sh --prefix=""${PREFIX}"" --with-ftp=no --with-http=no --with-python=no &&   make &&   make install &&   rm -rf ${DIR}', 'DIR=/tmp/libbluray &&   mkdir -p ${DIR} &&   cd ${DIR} &&   curl -sLO https://download.videolan.org/pub/videolan/libbluray/${LIBBLURAY_VERSION}/libbluray-${LIBBLURAY_VERSION}.tar.bz2 &&   echo ${LIBBLURAY_SHA256SUM} | sha256sum --check &&   tar -jx --strip-components=1 -f libbluray-${LIBBLURAY_VERSION}.tar.bz2 &&   ./configure --prefix=""${PREFIX}"" --disable-examples --disable-bdjava-jar --disable-static --enable-shared &&   make &&   make install &&   rm -rf ${DIR}', 'DIR=/tmp/libzmq &&   mkdir -p ${DIR} &&   cd ${DIR} &&   curl -sLO https://github.com/zeromq/libzmq/archive/v${LIBZMQ_VERSION}.tar.gz &&   echo ${LIBZMQ_SHA256SUM} | sha256sum --check &&   tar -xz --strip-components=1 -f v${LIBZMQ_VERSION}.tar.gz &&   ./autogen.sh &&   ./configure --prefix=""${PREFIX}"" &&   make &&   make install &&   rm -rf ${DIR}', 'DIR=/tmp/nv-codec-headers &&   git clone --depth 1 --branch n${VIDEO_CODEC_SDK_VERSION} https://github.com/FFmpeg/nv-codec-headers ${DIR} &&   cd ${DIR} &&   make PREFIX=""${PREFIX}"" &&   make install PREFIX=""${PREFIX}"" &&   rm -rf ${DIR}', 'DIR=/tmp/ffmpeg && mkdir -p ${DIR} && cd ${DIR} &&   curl -sLO https://ffmpeg.org/releases/ffmpeg-${FFMPEG_VERSION}.tar.bz2 &&   tar -jx --strip-components=1 -f ffmpeg-${FFMPEG_VERSION}.tar.bz2 &&   DIR=/tmp/ffmpeg && mkdir -p ${DIR} && cd ${DIR} &&   sed -i -e \'s/compute_30/compute_35/g\' ./configure &&   sed -i -e \'s/sm_30/sm_35/g\' ./configure &&   ./configure   --disable-debug   --disable-doc   --disable-ffplay   --enable-shared   --enable-avresample   --enable-libopencore-amrnb   --enable-libopencore-amrwb   --enable-gpl   --enable-libass   --enable-fontconfig   --enable-libfreetype   --enable-libvidstab   --enable-libmp3lame   --enable-libopus   --enable-libtheora   --enable-libvorbis   --enable-libvpx   --enable-libwebp   --enable-libxcb   --enable-libx265   --enable-libxvid   --enable-libx264   --enable-nonfree   --enable-openssl   --enable-libfdk_aac   --enable-postproc   --enable-small   --enable-version3   --enable-libbluray   --enable-libzmq   --extra-libs=-ldl   --prefix=""${PREFIX}""   --enable-libopenjpeg   --enable-libkvazaar   --enable-libaom   --extra-libs=-lpthread   --enable-vaapi   --enable-cuda   --enable-cuvid   --enable-nvenc   --enable-libnpp   --enable-cuda-nvcc   --enable-filter=scale_cuda   --enable-filter=thumbnail_cuda   --extra-cflags=""-I${PREFIX}/include -I${PREFIX}/include/ffnvcodec -I/usr/local/cuda/include/""   --extra-ldflags=""-L${PREFIX}/lib -L/usr/local/cuda/lib64 -L/usr/local/cuda/lib32/"" &&   make &&   make install &&   make tools/zmqsend && cp tools/zmqsend ${PREFIX}/bin/ &&   make distclean &&   hash -r &&   cd tools &&   make qt-faststart && cp qt-faststart ${PREFIX}/bin/', 'LD_LIBRARY_PATH=""${PREFIX}/lib:${PREFIX}/lib64:${LD_LIBRARY_PATH}""   ldd ${PREFIX}/bin/ffmpeg | grep opt/ffmpeg | cut -d \' \' -f 3 | xargs -i cp {} /usr/local/lib/ &&   for lib in /usr/local/lib/*.so.*; do ln -s ""${lib##*/}"" ""${lib%%.so.*}"".so; done &&   cp ${PREFIX}/bin/* /usr/local/bin/ &&   cp -r ${PREFIX}/share/ffmpeg /usr/local/share/ &&   LD_LIBRARY_PATH=/usr/local/lib ffmpeg -buildconf &&   cp -r ${PREFIX}/include/libav* ${PREFIX}/include/libpostproc ${PREFIX}/include/libsw* /usr/local/include &&   mkdir -p /usr/local/lib/pkgconfig &&   for pc in ${PREFIX}/lib/pkgconfig/libav*.pc ${PREFIX}/lib/pkgconfig/libpostproc.pc ${PREFIX}/lib/pkgconfig/libsw*.pc; do   sed ""s:${PREFIX}:/usr/local:g"" <""$pc"" >/usr/local/lib/pkgconfig/""${pc##*/}"";   done']"
roflcoopter/viseron,latest,/docker/amd64-cuda/Dockerfile.ffmpeg,COPY,4,"['--from=build /usr/local/bin /usr/local/bin/', '--from=build /usr/local/share /usr/local/share/', '--from=build /usr/local/lib /usr/local/lib/', '--from=build /usr/local/include /usr/local/include/']"
roflcoopter/viseron,latest,/docker/amd64-cuda/Dockerfile.dlib,ARG,4,"['CUDA_VERSION', 'UBUNTU_VERSION_NUMBER', 'DLIB_VERSION', 'MAKEFLAGS=""-j2""']"
roflcoopter/viseron,latest,/docker/amd64-cuda/Dockerfile.dlib,FROM,2,"['nvidia/cuda:${CUDA_VERSION}-cudnn8-devel-ubuntu${UBUNTU_VERSION_NUMBER} AS build', 'scratch as scratch']"
roflcoopter/viseron,latest,/docker/amd64-cuda/Dockerfile.dlib,ENV,1,['DEBIAN_FRONTEND=noninteractive   PIP_IGNORE_INSTALLED=0']
roflcoopter/viseron,latest,/docker/amd64-cuda/Dockerfile.dlib,RUN,3,"['buildDeps=""autoconf   automake   ca-certificates   cmake   g++   gcc   git   libopenblas-dev   liblapack-dev   make   python3-dev   python3-pip   python3-setuptools   python3-wheel"" &&   apt-get -yqq update &&   apt-get install -yq --no-install-recommends ${buildDeps}', 'DIR=/tmp && mkdir -p ${DIR} && cd ${DIR} &&   git clone --branch v${DLIB_VERSION} --depth 1 https://github.com/davisking/dlib.git &&   cd dlib; python3 setup.py bdist_wheel --dist-dir=/wheels', 'pip3 wheel face_recognition dlib==${DLIB_VERSION} --wheel-dir=/wheels/ --find-links=/wheels/']"
roflcoopter/viseron,latest,/docker/amd64-cuda/Dockerfile.dlib,COPY,1,['--from=build /wheels /wheels/']
roflcoopter/viseron,latest,/docker/amd64-cuda/Dockerfile.opencv,ARG,5,"['FFMPEG_VERSION', 'CUDA_VERSION', 'UBUNTU_VERSION_NUMBER', 'OPENCV_VERSION', 'MAKEFLAGS=""-j2""']"
roflcoopter/viseron,latest,/docker/amd64-cuda/Dockerfile.opencv,FROM,3,"['roflcoopter/amd64-cuda-ffmpeg:${FFMPEG_VERSION} as ffmpeg', 'nvidia/cuda:${CUDA_VERSION}-cudnn8-devel-ubuntu${UBUNTU_VERSION_NUMBER} AS build', 'scratch']"
roflcoopter/viseron,latest,/docker/amd64-cuda/Dockerfile.opencv,COPY,2,"['--from=ffmpeg /usr/local /usr/local/', '--from=build /opt/opencv /opt/opencv/']"
roflcoopter/viseron,latest,/docker/amd64-cuda/Dockerfile.opencv,WORKDIR,1,['/tmp/workdir']
roflcoopter/viseron,latest,/docker/amd64-cuda/Dockerfile.opencv,ENV,1,"['DEBIAN_FRONTEND=noninteractive   PKG_CONFIG_PATH=""/opt/opencv/share/pkgconfig:/opt/opencv/lib/pkgconfig:/opt/opencv/lib64/pkgconfig""   PREFIX=/opt/opencv   LD_LIBRARY_PATH=""/opt/opencv/lib:/opt/opencv/lib64:/usr/lib64:/usr/lib:/lib64:/lib:/usr/local/lib""   CUDA_ARCH_BIN=""35 53 60 61 70 72 75 80 86""   CUDA_ARCH_PTX=""70""']"
roflcoopter/viseron,latest,/docker/amd64-cuda/Dockerfile.opencv,RUN,4,"['buildDeps=""autoconf   automake   ca-certificates   cmake   curl   clinfo   bzip2   expat   libexpat1-dev   g++   gcc   git   gperf   libtool   make   nasm   perl   pkg-config   python3   python3-dev   python3-numpy   libssl-dev   yasm   libgomp1   libnuma-dev   zlib1g-dev"" &&   apt-get -yqq update &&   apt-get install -yq --no-install-recommends ${buildDeps}', 'DIR=/tmp/opencv && mkdir -p ${DIR} && cd ${DIR} &&   curl -sL -o opencv-${OPENCV_VERSION}.tar.gz https://github.com/opencv/opencv/archive/${OPENCV_VERSION}.tar.gz &&   tar -x --strip-components=1 -f opencv-${OPENCV_VERSION}.tar.gz', 'DIR=/tmp/opencv_contrib && mkdir -p ${DIR} && cd ${DIR} &&   curl -sL -o opencv_contrib-${OPENCV_VERSION}.tar.gz https://github.com/opencv/opencv_contrib/archive/${OPENCV_VERSION}.tar.gz &&   tar -x --strip-components=1 -f opencv_contrib-${OPENCV_VERSION}.tar.gz', 'DIR=/tmp/opencv/build && mkdir -p ${DIR} && cd ${DIR} &&   cmake -D CMAKE_BUILD_TYPE=RELEASE   -DBUILD_TIFF=ON   -DBUILD_opencv_java=OFF   -D BUILD_SHARED_LIBS=ON   -D WITH_OPENGL=ON   -D WITH_OPENCL=ON   -D WITH_OPENMP=ON   -D WITH_IPP=ON   -D WITH_TBB=ON   -D WITH_EIGEN=ON   -D WITH_V4L=ON   -D WITH_GTK=OFF   -D WITH_GTK_2_X=OFF   -D WITH_FFMPEG=ON   -D WITH_GSTREAMER=ON   -D WITH_GSTREAMER_0_10=OFF   -D WITH_LIBV4L=ON   -D WITH_CSTRIPES=ON   -D BUILD_TESTS=OFF   -D BUILD_PERF_TESTS=OFF   -D BUILD_opencv_python2=OFF   -D BUILD_opencv_python3=ON   -D CMAKE_INSTALL_PREFIX=${PREFIX}   -D INSTALL_PYTHON_EXAMPLES=OFF   -D INSTALL_C_EXAMPLES=OFF   -D OPENCV_EXTRA_MODULES_PATH=/tmp/opencv_contrib/modules   -D BUILD_DOCS=OFF   -D BUILD_EXAMPLES=OFF   -D WITH_CUDA=ON   -D WITH_CUDNN=ON   -D CUDA_ARCH_BIN=""${CUDA_ARCH_BIN}""   -D CUDA_ARCH_PTX=""${CUDA_ARCH_PTX}""   -D CUDA_FAST_MATH=1   -D WITH_CUBLAS=1   -D CMAKE_LIBRARY_PATH=/usr/local/cuda/lib64/stubs   -D WITH_MKL=ON   -D MKL_USE_MULTITHREAD=ON   -D MKL_WITH_TBB=ON   -D OPENCV_DNN_CUDA=ON   -D BUILD_opencv_face=OFF   -D HIGHGUI_ENABLE_PLUGINS=OFF   -D WITH_WIN32UI=OFF   -D WITH_GTK=OFF   -D WITH_QT=OFF   /tmp/opencv &&   make &&   make install']"
roflcoopter/viseron,latest,/docker/amd64-cuda/Dockerfile.base,ARG,6,"['CUDA_VERSION', 'UBUNTU_VERSION_NUMBER', 'OPENCL_VERSION', 'GMMLIB_VERSION', 'IGC_VERSION', 'LEVEL_ZERO_GPU']"
roflcoopter/viseron,latest,/docker/amd64-cuda/Dockerfile.base,FROM,2,"['roflcoopter/viseron-models:latest as models', 'nvidia/cuda:${CUDA_VERSION}-cudnn8-runtime-ubuntu${UBUNTU_VERSION_NUMBER}']"
roflcoopter/viseron,latest,/docker/amd64-cuda/Dockerfile.base,COPY,2,"['--from=models /detectors/models/darknet /detectors/models/darknet', '--from=models /detectors/models/edgetpu /detectors/models/edgetpu']"
roflcoopter/viseron,latest,/docker/amd64-cuda/Dockerfile.base,ENV,1,['LIBVA_DRIVER_NAME=i965   NVIDIA_DRIVER_CAPABILITIES=all   NVIDIA_VISIBLE_DEVICES=all']
roflcoopter/viseron,latest,/docker/amd64-cuda/Dockerfile.base,RUN,1,"['apt-get update && apt-get install -y --no-install-recommends   ca-certificates   wget   vainfo   libva-drm2   libva2   i965-va-driver   ocl-icd-libopencl1   clinfo   libnuma1 &&   mkdir /opencl &&  cd /opencl &&   wget https://github.com/intel/compute-runtime/releases/download/${OPENCL_VERSION}/intel-gmmlib_${GMMLIB_VERSION}_amd64.deb --progress=bar:force:noscroll &&   wget https://github.com/intel/intel-graphics-compiler/releases/download/igc-${IGC_VERSION}/intel-igc-core_${IGC_VERSION}_amd64.deb --progress=bar:force:noscroll &&   wget https://github.com/intel/intel-graphics-compiler/releases/download/igc-${IGC_VERSION}/intel-igc-opencl_${IGC_VERSION}_amd64.deb --progress=bar:force:noscroll &&   wget https://github.com/intel/compute-runtime/releases/download/${OPENCL_VERSION}/intel-opencl_${OPENCL_VERSION}_amd64.deb --progress=bar:force:noscroll &&   wget https://github.com/intel/compute-runtime/releases/download/${OPENCL_VERSION}/intel-ocloc_${OPENCL_VERSION}_amd64.deb --progress=bar:force:noscroll &&   wget https://github.com/intel/compute-runtime/releases/download/${OPENCL_VERSION}/intel-level-zero-gpu_${LEVEL_ZERO_GPU}_amd64.deb --progress=bar:force:noscroll &&   wget https://github.com/intel/compute-runtime/releases/download/${OPENCL_VERSION}/ww15.sum &&   sha256sum -c ww15.sum &&   dpkg -i *.deb &&   rm -R /opencl &&   mkdir -p /etc/OpenCL/vendors &&   echo ""libnvidia-opencl.so.1"" > /etc/OpenCL/vendors/nvidia.icd &&   ln -s /detectors/models/darknet/yolov4.weights /detectors/models/darknet/default.weights &&   ln -s /detectors/models/darknet/yolov4.cfg /detectors/models/darknet/default.cfg']"
roflcoopter/viseron,latest,/docker/aarch64/Dockerfile.ffmpeg,ARG,44,"['UBUNTU_VERSION', 'MAKEFLAGS=""-j2""', 'OPENCOREAMR_VERSION', 'X264_VERSION', 'X265_VERSION', 'OGG_VERSION', 'OGG_SHA256SUM', 'OPUS_VERSION', 'OPUS_SHA256SUM', 'VORBIS_VERSION', 'VORBIS_SHA256SUM', 'THEORA_VERSION', 'THEORA_SHA256SUM', 'VPX_VERSION', 'WEBP_VERSION', 'LAME_VERSION', 'XVID_VERSION', 'XVID_SHA256SUM', 'FDKAAC_VERSION', 'OPENJPEG_VERSION', 'FREETYPE_VERSION', 'FREETYPE_SHA256SUM', 'LIBVIDSTAB_VERSION', 'LIBVIDSTAB_SHA256SUM', 'FRIBIDI_VERSION', 'FRIBIDI_SHA256SUM', 'FONTCONFIG_VERSION', 'LIBASS_VERSION', 'LIBASS_SHA256SUM', 'KVAZAAR_VERSION', 'AOM_VERSION', 'XORG_MACROS_VERSION', 'XPROTO_VERSION', 'XAU_VERSION', 'LIBPTHREAD_STUBS_VERSION', 'XCBPROTO_VERSION', 'LIBXCB_VERSION', 'LIBXML2_VERSION', 'LIBXML2_SHA256SUM', 'LIBBLURAY_VERSION', 'LIBBLURAY_SHA256SUM', 'LIBZMQ_VERSION', 'LIBZMQ_SHA256SUM', 'FFMPEG_VERSION']"
roflcoopter/viseron,latest,/docker/aarch64/Dockerfile.ffmpeg,FROM,2,"['balenalib/aarch64-ubuntu:${UBUNTU_VERSION}-build as build', 'scratch']"
roflcoopter/viseron,latest,/docker/aarch64/Dockerfile.ffmpeg,RUN,66,"['[ ""cross-build-start"" ]', 'buildDeps=""autoconf   automake   ca-certificates   cmake   curl   bzip2   libexpat1-dev   g++   gcc   git   gperf   libtool   make   nasm   perl   pkg-config   python   libssl-dev   yasm   libgomp1   zlib1g-dev   libomxil-bellagio-dev"" &&   apt-get -yqq update &&   apt-get install -yq --no-install-recommends ${buildDeps}', 'DIR=/tmp/opencore-amr &&   mkdir -p ${DIR} &&   cd ${DIR} &&   curl -sL https://versaweb.dl.sourceforge.net/project/opencore-amr/opencore-amr/opencore-amr-${OPENCOREAMR_VERSION}.tar.gz |   tar -zx --strip-components=1 &&   ./configure --prefix=""${PREFIX}"" --enable-shared  &&   make &&   make install &&   rm -rf ${DIR}', 'DIR=/tmp/x264 &&   mkdir -p ${DIR} &&   cd ${DIR} &&   curl -sL https://download.videolan.org/pub/videolan/x264/snapshots/x264-snapshot-${X264_VERSION}.tar.bz2 |   tar -jx --strip-components=1 &&   ./configure --prefix=""${PREFIX}"" --enable-shared --enable-pic --disable-cli &&   make &&   make install &&   rm -rf ${DIR}', 'DIR=/tmp/x265 &&   mkdir -p ${DIR} &&   cd ${DIR} &&   curl -sL https://download.videolan.org/pub/videolan/x265/x265_${X265_VERSION}.tar.gz  |   tar -zx &&   cd x265_${X265_VERSION}/build/linux &&   sed -i ""/-DEXTRA_LIB/ s/$/ -DCMAKE_INSTALL_PREFIX=\\${PREFIX}/"" multilib.sh &&   sed -i ""/^cmake/ s/$/ -DENABLE_CLI=OFF/"" multilib.sh &&   export CXXFLAGS=""${CXXFLAGS} -fPIC"" &&   ./multilib.sh &&   make -C 8bit install &&   rm -rf ${DIR}', 'DIR=/tmp/ogg &&   mkdir -p ${DIR} &&   cd ${DIR} &&   curl -sLO http://downloads.xiph.org/releases/ogg/libogg-${OGG_VERSION}.tar.gz &&   echo ${OGG_SHA256SUM} | sha256sum --check &&   tar -zx --strip-components=1 -f libogg-${OGG_VERSION}.tar.gz &&   ./configure --prefix=""${PREFIX}"" --enable-shared  &&   make &&   make install &&   rm -rf ${DIR}', 'DIR=/tmp/opus &&   mkdir -p ${DIR} &&   cd ${DIR} &&   curl -sLO https://archive.mozilla.org/pub/opus/opus-${OPUS_VERSION}.tar.gz &&   echo ${OPUS_SHA256SUM} | sha256sum --check &&   tar -zx --strip-components=1 -f opus-${OPUS_VERSION}.tar.gz', '[""cross-build-end""]', 'DIR=/tmp/opus &&   cd ${DIR} &&   autoreconf -fiv', '[""cross-build-start""]', 'DIR=/tmp/opus &&   cd ${DIR} &&   ./configure --prefix=""${PREFIX}"" --enable-shared &&   make &&   make install &&   rm -rf ${DIR}', 'DIR=/tmp/vorbis &&   mkdir -p ${DIR} &&   cd ${DIR} &&   curl -sLO http://downloads.xiph.org/releases/vorbis/libvorbis-${VORBIS_VERSION}.tar.gz &&   echo ${VORBIS_SHA256SUM} | sha256sum --check &&   tar -zx --strip-components=1 -f libvorbis-${VORBIS_VERSION}.tar.gz &&   ./configure --prefix=""${PREFIX}"" --with-ogg=""${PREFIX}"" --enable-shared &&   make &&   make install &&   rm -rf ${DIR}', 'DIR=/tmp/theora &&   mkdir -p ${DIR} &&   cd ${DIR} &&   curl -sLO http://downloads.xiph.org/releases/theora/libtheora-${THEORA_VERSION}.tar.gz &&   echo ${THEORA_SHA256SUM} | sha256sum --check &&   tar -zx --strip-components=1 -f libtheora-${THEORA_VERSION}.tar.gz &&   curl -SLo config.guess ""http://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=config.guess;hb=HEAD"" &&   curl -SLo config.sub ""http://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=config.sub;hb=HEAD"" &&   ./configure --prefix=""${PREFIX}"" --with-ogg=""${PREFIX}"" --enable-shared --disable-examples &&   make &&   make install &&   rm -rf ${DIR}', 'DIR=/tmp/vpx &&   mkdir -p ${DIR} &&   cd ${DIR} &&   curl -sL https://codeload.github.com/webmproject/libvpx/tar.gz/v${VPX_VERSION} |   tar -zx --strip-components=1 &&   ./configure --prefix=""${PREFIX}"" --enable-vp8 --enable-vp9 --enable-vp9-highbitdepth --enable-pic --enable-shared   --disable-debug --disable-examples --disable-docs --disable-install-bins  &&   make &&   make install &&   rm -rf ${DIR}', 'DIR=/tmp/vebp &&   mkdir -p ${DIR} &&   cd ${DIR} &&   curl -sL https://storage.googleapis.com/downloads.webmproject.org/releases/webp/libwebp-${WEBP_VERSION}.tar.gz |   tar -zx --strip-components=1 &&   ./configure --prefix=""${PREFIX}"" --enable-shared  &&   make &&   make install &&   rm -rf ${DIR}', 'DIR=/tmp/lame &&   mkdir -p ${DIR} &&   cd ${DIR} &&   curl -sL https://versaweb.dl.sourceforge.net/project/lame/lame/$(echo ${LAME_VERSION} | sed -e \'s/[^0-9]*\\([0-9]*\\)[.]\\([0-9]*\\)[.]\\([0-9]*\\)\\([0-9A-Za-z-]*\\)/\\1.\\2/\')/lame-${LAME_VERSION}.tar.gz |   tar -zx --strip-components=1 &&   ./configure --prefix=""${PREFIX}"" --bindir=""${PREFIX}/bin"" --enable-shared --enable-nasm --disable-frontend &&   make &&   make install &&   rm -rf ${DIR}', 'DIR=/tmp/xvid &&   mkdir -p ${DIR} &&   cd ${DIR} &&   curl -sLO http://downloads.xvid.org/downloads/xvidcore-${XVID_VERSION}.tar.gz &&   echo ${XVID_SHA256SUM} | sha256sum --check &&   tar -zx -f xvidcore-${XVID_VERSION}.tar.gz &&   cd xvidcore/build/generic &&   ./configure --prefix=""${PREFIX}"" --bindir=""${PREFIX}/bin"" &&   make &&   make install &&   rm -rf ${DIR}', 'DIR=/tmp/fdk-aac &&   mkdir -p ${DIR} &&   cd ${DIR} &&   curl -sL https://github.com/mstorsjo/fdk-aac/archive/v${FDKAAC_VERSION}.tar.gz |   tar -zx --strip-components=1', '[""cross-build-end""]', 'DIR=/tmp/fdk-aac &&   cd ${DIR} &&   autoreconf -fiv', '[""cross-build-start""]', 'DIR=/tmp/fdk-aac &&   cd ${DIR} &&   ./configure --prefix=""${PREFIX}"" --enable-shared --datadir=""${DIR}"" &&   make &&   make install &&   rm -rf ${DIR}', 'DIR=/tmp/openjpeg &&   mkdir -p ${DIR} &&   cd ${DIR} &&   curl -sL https://github.com/uclouvain/openjpeg/archive/v${OPENJPEG_VERSION}.tar.gz |   tar -zx --strip-components=1 &&   export CFLAGS=""${CFLAGS} -DPNG_ARM_NEON_OPT=0"" &&   cmake -DBUILD_THIRDPARTY:BOOL=ON -DCMAKE_INSTALL_PREFIX=""${PREFIX}"" . &&   make &&   make install &&   rm -rf ${DIR}', 'DIR=/tmp/freetype &&   mkdir -p ${DIR} &&   cd ${DIR} &&   curl -sLO https://download.savannah.gnu.org/releases/freetype/freetype-${FREETYPE_VERSION}.tar.gz &&   echo ${FREETYPE_SHA256SUM} | sha256sum --check &&   tar -zx --strip-components=1 -f freetype-${FREETYPE_VERSION}.tar.gz &&   ./configure --prefix=""${PREFIX}"" --disable-static --enable-shared &&   make &&   make install &&   rm -rf ${DIR}', 'DIR=/tmp/vid.stab &&   mkdir -p ${DIR} &&   cd ${DIR} &&   curl -sLO https://github.com/georgmartius/vid.stab/archive/${LIBVIDSTAB_VERSION}.tar.gz &&   echo ${LIBVIDSTAB_SHA256SUM} | sha256sum --check &&    tar -zx --strip-components=1 -f ${LIBVIDSTAB_VERSION}.tar.gz &&   cmake -DCMAKE_INSTALL_PREFIX=""${PREFIX}"" -DSSE2_FOUND=OFF . &&   make &&   make install &&   rm -rf ${DIR}', 'DIR=/tmp/fribidi &&   mkdir -p ${DIR} &&   cd ${DIR} &&   curl -sLO https://github.com/fribidi/fribidi/archive/${FRIBIDI_VERSION}.tar.gz &&   echo ${FRIBIDI_SHA256SUM} | sha256sum --check &&   tar -zx --strip-components=1 -f ${FRIBIDI_VERSION}.tar.gz', '[""cross-build-end""]', 'export NOCONFIGURE=1 &&   DIR=/tmp/fribidi &&   cd ${DIR} &&   ./autogen.sh', '[""cross-build-start""]', 'DIR=/tmp/fribidi &&   cd ${DIR} &&   ./configure --prefix=""${PREFIX}"" --disable-static --enable-shared &&   make -j1 &&   make install &&   rm -rf ${DIR}', 'DIR=/tmp/fontconfig &&   mkdir -p ${DIR} &&   cd ${DIR} &&   curl -sLO https://www.freedesktop.org/software/fontconfig/release/fontconfig-${FONTCONFIG_VERSION}.tar.bz2 &&   tar -jx --strip-components=1 -f fontconfig-${FONTCONFIG_VERSION}.tar.bz2 &&   ./configure --prefix=""${PREFIX}"" --disable-static --enable-shared &&   make &&   make install &&   rm -rf ${DIR}', 'DIR=/tmp/libass &&   mkdir -p ${DIR} &&   cd ${DIR} &&   curl -sLO https://github.com/libass/libass/archive/${LIBASS_VERSION}.tar.gz &&   echo ${LIBASS_SHA256SUM} | sha256sum --check &&   tar -zx --strip-components=1 -f ${LIBASS_VERSION}.tar.gz', '[""cross-build-end""]', 'DIR=/tmp/libass &&   cd ${DIR} &&   ./autogen.sh', '[""cross-build-start""]', 'DIR=/tmp/libass &&   cd ${DIR} &&   ./configure --prefix=""${PREFIX}"" --disable-static --enable-shared &&   make &&   make install &&   rm -rf ${DIR}', 'DIR=/tmp/kvazaar &&   mkdir -p ${DIR} &&   cd ${DIR} &&   curl -sLO https://github.com/ultravideo/kvazaar/archive/v${KVAZAAR_VERSION}.tar.gz &&   tar -zx --strip-components=1 -f v${KVAZAAR_VERSION}.tar.gz', '[""cross-build-end""]', 'DIR=/tmp/kvazaar &&   cd ${DIR} &&   ./autogen.sh', '[""cross-build-start""]', 'DIR=/tmp/kvazaar &&   cd ${DIR} &&   ./configure --prefix=""${PREFIX}"" --disable-static --enable-shared &&   make &&   make install &&   rm -rf ${DIR}', 'DIR=/tmp/aom &&   git clone --branch v${AOM_VERSION} --depth 1 https://aomedia.googlesource.com/aom ${DIR} &&   cd ${DIR} &&   rm -rf CMakeCache.txt CMakeFiles &&   mkdir -p ./aom_build &&   cd ./aom_build &&   cmake -DCMAKE_INSTALL_PREFIX=""${PREFIX}"" -DENABLE_TESTS=0 .. &&   make &&   make install &&   rm -rf ${DIR}', 'DIR=/tmp/xorg-macros &&   mkdir -p ${DIR} &&   cd ${DIR} &&   curl -sLO https://www.x.org/archive//individual/util/util-macros-${XORG_MACROS_VERSION}.tar.gz &&   tar -zx --strip-components=1 -f util-macros-${XORG_MACROS_VERSION}.tar.gz &&   ./configure --srcdir=${DIR} --prefix=""${PREFIX}"" &&   make &&   make install &&   rm -rf ${DIR}', 'DIR=/tmp/xproto &&   mkdir -p ${DIR} &&   cd ${DIR} &&   curl -sLO https://www.x.org/archive/individual/proto/xproto-${XPROTO_VERSION}.tar.gz &&   tar -zx --strip-components=1 -f xproto-${XPROTO_VERSION}.tar.gz &&   curl -SLo config.guess ""http://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=config.guess;hb=HEAD"" &&   curl -SLo config.sub ""http://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=config.sub;hb=HEAD"" &&   ./configure --srcdir=${DIR} --prefix=""${PREFIX}"" &&   make &&   make install &&   rm -rf ${DIR}', 'DIR=/tmp/libXau &&   mkdir -p ${DIR} &&   cd ${DIR} &&   curl -sLO https://www.x.org/archive/individual/lib/libXau-${XAU_VERSION}.tar.gz &&   tar -zx --strip-components=1 -f libXau-${XAU_VERSION}.tar.gz &&   ./configure --srcdir=${DIR} --prefix=""${PREFIX}"" &&   make &&   make install &&   rm -rf ${DIR}', 'DIR=/tmp/libpthread-stubs &&   mkdir -p ${DIR} &&   cd ${DIR} &&   curl -sLO https://xcb.freedesktop.org/dist/libpthread-stubs-${LIBPTHREAD_STUBS_VERSION}.tar.gz &&   tar -zx --strip-components=1 -f libpthread-stubs-${LIBPTHREAD_STUBS_VERSION}.tar.gz &&   ./configure --prefix=""${PREFIX}"" &&   make &&   make install &&   rm -rf ${DIR}', 'DIR=/tmp/libxcb-proto &&   mkdir -p ${DIR} &&   cd ${DIR} &&   curl -sLO https://xcb.freedesktop.org/dist/xcb-proto-${XCBPROTO_VERSION}.tar.gz &&   tar -zx --strip-components=1 -f xcb-proto-${XCBPROTO_VERSION}.tar.gz &&   ACLOCAL_PATH=""${PREFIX}/share/aclocal"" ./autogen.sh &&   ./configure --prefix=""${PREFIX}"" &&   make &&   make install &&   rm -rf ${DIR}', 'DIR=/tmp/libxcb &&   mkdir -p ${DIR} &&   cd ${DIR} &&   curl -sLO https://xcb.freedesktop.org/dist/libxcb-${LIBXCB_VERSION}.tar.gz &&   tar -zx --strip-components=1 -f libxcb-${LIBXCB_VERSION}.tar.gz', '[""cross-build-end""]', 'export NOCONFIGURE=1 &&   DIR=/tmp/libxcb &&   cd ${DIR} &&   ACLOCAL_PATH=""${PREFIX}/share/aclocal"" ./autogen.sh', '[""cross-build-start""]', 'DIR=/tmp/libxcb &&   cd ${DIR} &&   ./configure --prefix=""${PREFIX}"" --disable-static --enable-shared &&   make &&   make install &&   rm -rf ${DIR}', 'DIR=/tmp/libxml2 &&   mkdir -p ${DIR} &&   cd ${DIR} &&   curl -sLO https://gitlab.gnome.org/GNOME/libxml2/-/archive/v${LIBXML2_VERSION}/libxml2-v${LIBXML2_VERSION}.tar.gz &&   echo ${LIBXML2_SHA256SUM} | sha256sum --check &&   tar -xz --strip-components=1 -f libxml2-v${LIBXML2_VERSION}.tar.gz', '[""cross-build-end""]', 'DIR=/tmp/libxml2 &&   cd ${DIR} &&   ./autogen.sh --prefix=""${PREFIX}"" --with-ftp=no --with-http=no --with-python=no', '[""cross-build-start""]', 'DIR=/tmp/libxml2 &&   cd ${DIR} &&   make &&   make install &&   rm -rf ${DIR}', 'DIR=/tmp/libbluray &&   mkdir -p ${DIR} &&   cd ${DIR} &&   curl -sLO https://download.videolan.org/pub/videolan/libbluray/${LIBBLURAY_VERSION}/libbluray-${LIBBLURAY_VERSION}.tar.bz2 &&   echo ${LIBBLURAY_SHA256SUM} | sha256sum --check &&   tar -jx --strip-components=1 -f libbluray-${LIBBLURAY_VERSION}.tar.bz2 &&   ./configure --prefix=""${PREFIX}"" --disable-examples --disable-bdjava-jar --disable-static --enable-shared &&   make &&   make install &&   rm -rf ${DIR}', 'DIR=/tmp/libzmq &&   mkdir -p ${DIR} &&   cd ${DIR} &&   curl -sLO https://github.com/zeromq/libzmq/archive/v${LIBZMQ_VERSION}.tar.gz &&   echo ${LIBZMQ_SHA256SUM} | sha256sum --check &&   tar -xz --strip-components=1 -f v${LIBZMQ_VERSION}.tar.gz', '[""cross-build-end""]', 'DIR=/tmp/libzmq &&   cd ${DIR} &&   ./autogen.sh', '[""cross-build-start""]', 'DIR=/tmp/libzmq &&   cd ${DIR} &&   ./configure --prefix=""${PREFIX}"" &&   make &&   make install &&   rm -rf ${DIR}', 'DIR=/tmp/ffmpeg && mkdir -p ${DIR} && cd ${DIR} &&   curl -sLO https://ffmpeg.org/releases/ffmpeg-${FFMPEG_VERSION}.tar.bz2 &&   tar -jx --strip-components=1 -f ffmpeg-${FFMPEG_VERSION}.tar.bz2 &&   DIR=/tmp/ffmpeg && mkdir -p ${DIR} && cd ${DIR} &&   ./configure   --disable-debug   --disable-doc   --disable-ffplay   --enable-shared   --enable-avresample   --enable-libopencore-amrnb   --enable-libopencore-amrwb   --enable-gpl   --enable-libass   --enable-fontconfig   --enable-libfreetype   --enable-libvidstab   --enable-libmp3lame   --enable-libopus   --enable-libtheora   --enable-libvorbis   --enable-libvpx   --enable-libwebp   --enable-libxcb   --enable-libx265   --enable-libxvid   --enable-libx264   --enable-nonfree   --enable-openssl   --enable-libfdk_aac   --enable-postproc   --enable-small   --enable-version3   --enable-libbluray   --enable-libzmq   --extra-libs=-ldl   --prefix=""${PREFIX}""   --enable-libopenjpeg   --enable-libkvazaar   --enable-libaom   --extra-libs=-lpthread   --enable-neon   --enable-v4l2_m2m   --extra-cflags=""-I${PREFIX}/include""   --extra-ldflags=""-L${PREFIX}/lib"" &&   make &&   make install &&   make tools/zmqsend && cp tools/zmqsend ${PREFIX}/bin/ &&   make distclean &&   hash -r &&   cd tools &&   make qt-faststart && cp qt-faststart ${PREFIX}/bin/', 'ldd ${PREFIX}/bin/ffmpeg | grep opt/ffmpeg | cut -d \' \' -f 3 | xargs -i cp {} /usr/local/lib/ &&   for lib in /usr/local/lib/*.so.*; do ln -s ""${lib##*/}"" ""${lib%%.so.*}"".so; done &&   cp ${PREFIX}/bin/* /usr/local/bin/ &&   cp -r ${PREFIX}/share/ffmpeg /usr/local/share/ &&   LD_LIBRARY_PATH=/usr/local/lib ffmpeg -buildconf &&   cp -r ${PREFIX}/include/libav* ${PREFIX}/include/libpostproc ${PREFIX}/include/libsw* /usr/local/include &&   mkdir -p /usr/local/lib/pkgconfig &&   for pc in ${PREFIX}/lib/pkgconfig/libav*.pc ${PREFIX}/lib/pkgconfig/libpostproc.pc ${PREFIX}/lib/pkgconfig/libsw*.pc; do   sed ""s:${PREFIX}:/usr/local:g"" <""$pc"" >/usr/local/lib/pkgconfig/""${pc##*/}"";   done', '[ ""cross-build-end"" ]']"
roflcoopter/viseron,latest,/docker/aarch64/Dockerfile.ffmpeg,WORKDIR,1,['/tmp/workdir']
roflcoopter/viseron,latest,/docker/aarch64/Dockerfile.ffmpeg,ENV,1,"['DEBIAN_FRONTEND=noninteractive   SRC=/usr/local   PATH=/usr/custom_cmake/bin:$PATH   PKG_CONFIG_PATH=""/opt/ffmpeg/share/pkgconfig:/opt/ffmpeg/lib/pkgconfig:/opt/ffmpeg/lib64/pkgconfig""   PREFIX=/opt/ffmpeg   LD_LIBRARY_PATH=""/opt/ffmpeg/lib:/opt/ffmpeg/lib64:/usr/lib64:/usr/lib:/lib64:/lib""']"
roflcoopter/viseron,latest,/docker/aarch64/Dockerfile.ffmpeg,COPY,1,['--from=build /usr/local /usr/local/']
roflcoopter/viseron,latest,/docker/aarch64/Dockerfile.dlib,ARG,3,"['UBUNTU_VERSION', 'DLIB_VERSION', 'MAKEFLAGS=""-j2""']"
roflcoopter/viseron,latest,/docker/aarch64/Dockerfile.dlib,FROM,2,"['balenalib/aarch64-ubuntu:${UBUNTU_VERSION}-build as build', 'scratch as scratch']"
roflcoopter/viseron,latest,/docker/aarch64/Dockerfile.dlib,RUN,5,"['[ ""cross-build-start"" ]', 'buildDeps=""autoconf   automake   ca-certificates   cmake   g++   gcc   git   libopenblas-dev   liblapack-dev   make   python3-dev   python3-pip   python3-setuptools   python3-wheel"" &&   apt-get -yqq update &&   apt-get install -yq --no-install-recommends ${buildDeps}', 'DIR=/tmp && mkdir -p ${DIR} && cd ${DIR} &&   git clone --branch v${DLIB_VERSION} --depth 1 https://github.com/davisking/dlib.git &&   cd dlib; python3 setup.py bdist_wheel --dist-dir=/wheels', 'pip3 wheel face_recognition dlib==${DLIB_VERSION} --wheel-dir=/wheels/ --find-links=/wheels/', '[ ""cross-build-end"" ]']"
roflcoopter/viseron,latest,/docker/aarch64/Dockerfile.dlib,ENV,1,['DEBIAN_FRONTEND=noninteractive   PIP_IGNORE_INSTALLED=0']
roflcoopter/viseron,latest,/docker/aarch64/Dockerfile.dlib,COPY,1,['--from=build /wheels /wheels/']
roflcoopter/viseron,latest,/docker/aarch64/Dockerfile.opencv,ARG,4,"['FFMPEG_VERSION', 'UBUNTU_VERSION', 'OPENCV_VERSION', 'MAKEFLAGS=""-j2""']"
roflcoopter/viseron,latest,/docker/aarch64/Dockerfile.opencv,FROM,3,"['roflcoopter/aarch64-ffmpeg:${FFMPEG_VERSION} as ffmpeg', 'balenalib/aarch64-ubuntu:${UBUNTU_VERSION}-build as build', 'scratch']"
roflcoopter/viseron,latest,/docker/aarch64/Dockerfile.opencv,RUN,6,"['[ ""cross-build-start"" ]', 'buildDeps=""autoconf   automake   ca-certificates   cmake   curl   clinfo   bzip2   expat   libexpat1-dev   g++   gcc   git   gperf   libtool   make   nasm   perl   pkg-config   python3   python3-dev   python3-numpy   libssl-dev   yasm   libgomp1   libatlas-base-dev liblapacke-dev gfortran libhdf5-dev libhdf5-103 libv4l-dev   zlib1g-dev"" &&   apt-get -yqq update &&   apt-get install -yq --no-install-recommends ${buildDeps}', 'DIR=/tmp/opencv && mkdir -p ${DIR} && cd ${DIR} &&   curl -sL -o opencv-${OPENCV_VERSION}.tar.gz https://github.com/opencv/opencv/archive/${OPENCV_VERSION}.tar.gz &&   tar -x --strip-components=1 -f opencv-${OPENCV_VERSION}.tar.gz', 'DIR=/tmp/opencv_contrib && mkdir -p ${DIR} && cd ${DIR} &&   curl -sL -o opencv_contrib-${OPENCV_VERSION}.tar.gz https://github.com/opencv/opencv_contrib/archive/${OPENCV_VERSION}.tar.gz &&   tar -x --strip-components=1 -f opencv_contrib-${OPENCV_VERSION}.tar.gz', 'DIR=/tmp/opencv/build && mkdir -p ${DIR} && cd ${DIR} &&   cmake -D CMAKE_BUILD_TYPE=RELEASE   -DBUILD_TIFF=ON   -DBUILD_opencv_java=OFF   -D BUILD_SHARED_LIBS=ON   -D ENABLE_NEON=ON   -D WITH_LIBV4L=ON   -D WITH_V4L=OFF   -D WITH_CSTRIPES=ON   -D BUILD_TESTS=OFF   -D BUILD_PERF_TESTS=OFF   -D BUILD_opencv_python2=OFF   -D BUILD_opencv_python3=ON   -D CMAKE_INSTALL_PREFIX=${PREFIX}   -D INSTALL_PYTHON_EXAMPLES=OFF   -D INSTALL_C_EXAMPLES=OFF   -D OPENCV_EXTRA_MODULES_PATH=/tmp/opencv_contrib/modules   -D OPENCV_ENABLE_NONFREE=ON   -D CMAKE_SHARED_LINKER_FLAGS=-latomic   -D BUILD_DOCS=OFF   -D BUILD_EXAMPLES=OFF   -D BUILD_opencv_face=OFF   -D HIGHGUI_ENABLE_PLUGINS=OFF   -D WITH_WIN32UI=OFF   -D WITH_GTK=OFF   -D WITH_QT=OFF   /tmp/opencv &&   make &&   make install', '[ ""cross-build-end"" ]']"
roflcoopter/viseron,latest,/docker/aarch64/Dockerfile.opencv,COPY,2,"['--from=ffmpeg /usr/local /usr/local/', '--from=build /opt/opencv /opt/opencv/']"
roflcoopter/viseron,latest,/docker/aarch64/Dockerfile.opencv,WORKDIR,1,['/tmp/workdir']
roflcoopter/viseron,latest,/docker/aarch64/Dockerfile.opencv,ENV,1,"['DEBIAN_FRONTEND=noninteractive   LD_LIBRARY_PATH=/opt/opencv/lib   PKG_CONFIG_PATH=""/opt/opencv/share/pkgconfig:/opt/opencv/lib/pkgconfig:/opt/opencv/lib64/pkgconfig""   PREFIX=/opt/opencv   LD_LIBRARY_PATH=""/opt/opencv/lib:/opt/opencv/lib64:/usr/lib64:/usr/lib:/lib64:/lib:/usr/local/lib""']"
roflcoopter/viseron,latest,/docker/aarch64/Dockerfile.base,ARG,2,"['FFMPEG_VERSION', 'UBUNTU_VERSION']"
roflcoopter/viseron,latest,/docker/aarch64/Dockerfile.base,FROM,2,"['roflcoopter/viseron-models:latest as models', 'balenalib/aarch64-ubuntu:${UBUNTU_VERSION}-run']"
roflcoopter/viseron,latest,/docker/aarch64/Dockerfile.base,COPY,1,['--from=models /detectors/models/edgetpu /detectors/models/edgetpu']
roflcoopter/viseron,latest,/docker/aarch64/Dockerfile.base,RUN,1,['apt-get update && apt-get install -y --no-install-recommends   libtiff5   libjpeg62   libxcb1   libx11-6   libxext6   libsm6   libatlas3-base   libhdf5-103   liblapacke   libopenexr24   libpng16-16   libatomic1']
NRCan/geo-deep-learning,latest,/Dockerfile,FROM,1,['continuumio/miniconda3']
NRCan/geo-deep-learning,latest,/Dockerfile,WORKDIR,1,['/app']
NRCan/geo-deep-learning,latest,/Dockerfile,COPY,1,['environment.yml .']
NRCan/geo-deep-learning,latest,/Dockerfile,RUN,3,"['conda env create -f environment.yml', 'echo ""Make sure flask is installed:""', 'python -c ""import flask""']"
NRCan/geo-deep-learning,latest,/Dockerfile,SHELL,1,"['[""conda"", ""run"", ""-n"", ""geo_deep_env"", ""/bin/bash"", ""-c""]']"
NRCan/geo-deep-learning,latest,/Dockerfile,ENTRYPOINT,1,"['[""conda"", ""run"", ""--no-capture-output"", ""-n"", ""geo_deep_env"", ""python""]']"
neuralet/smart-social-distancing,latest,/x86-gpu.Dockerfile,FROM,1,['nvcr.io/nvidia/tensorflow:20.03-tf2-py3']
neuralet/smart-social-distancing,latest,/x86-gpu.Dockerfile,ARG,2,"['OPENCV_VERSION=4.3.0', 'DEBIAN_FRONTEND=noninteractive']"
neuralet/smart-social-distancing,latest,/x86-gpu.Dockerfile,RUN,3,"['apt-get update && apt-get install -y --no-install-recommends         build-essential         cmake         curl         git         gstreamer1.0-plugins-bad         gstreamer1.0-plugins-good         gstreamer1.0-plugins-ugly         gstreamer1.0-vaapi         libavcodec-dev         libavformat-dev         libgstreamer-plugins-base1.0-dev         libgstreamer1.0-dev         libsm6         libswscale-dev         libxext6         libxrender-dev         mesa-va-drivers         python3-dev         python3-numpy     && rm -rf /var/lib/apt/lists/*     && cd /tmp/     && curl -L https://github.com/opencv/opencv/archive/${OPENCV_VERSION}.tar.gz -o opencv.tar.gz     && tar zxvf opencv.tar.gz && rm opencv.tar.gz     && cd /tmp/opencv-${OPENCV_VERSION}     && mkdir build     && cd build     && cmake         -DBUILD_opencv_python3=yes         -DPYTHON_EXECUTABLE=$(which python3)         -DCMAKE_BUILD_TYPE=RELEASE         -DBUILD_TESTS=OFF         -DBUILD_PERF_TESTS=OFF         -DBUILD_EXAMPLES=OFF         -DINSTALL_TESTS=OFF         -DBUILD_opencv_apps=OFF         -DBUILD_DOCS=OFF         ../     && make -j$(nproc)     && make install     && cd /tmp     && rm -rf opencv-${OPENCV_VERSION}     && apt-get purge -y         cmake         git         libgstreamer-plugins-base1.0-dev         libgstreamer1.0-dev         libxrender-dev         python3-dev     && apt-get autoremove -y', 'apt-get update && apt-get install -y --no-install-recommends         tzdata         pkg-config         python3-dev         python3-numpy         python3-pillow         python3-pip         python3-scipy         python3-wget         supervisor     && rm -rf /var/lib/apt/lists/*     && python3 -m pip install --upgrade pip setuptools==41.0.0 && pip install -r /requirements.txt     && apt-get purge -y         python3-dev     && apt-get autoremove -y', 'apt-get update && apt-get install -y python3-dev && pip3 install torch==1.5 torchvision==0.6.0 openpifpaf']"
neuralet/smart-social-distancing,latest,/x86-gpu.Dockerfile,COPY,2,"['api/requirements.txt /', '. /repo']"
neuralet/smart-social-distancing,latest,/x86-gpu.Dockerfile,ENV,3,"['DEV_ALLOW_ALL_ORIGINS=true', 'TF_FORCE_GPU_ALLOW_GROWTH=true', 'CONFIG_FILE=config-x86-gpu.ini']"
neuralet/smart-social-distancing,latest,/x86-gpu.Dockerfile,WORKDIR,1,['/repo']
neuralet/smart-social-distancing,latest,/x86-gpu.Dockerfile,HEALTHCHECK,1,['--interval=30s --retries=2 --start-period=15s CMD bash healthcheck.bash']
neuralet/smart-social-distancing,latest,/x86-gpu.Dockerfile,CMD,1,['supervisord -c supervisord.conf -n']
neuralet/smart-social-distancing,latest,/x86-openvino.Dockerfile,FROM,1,['openvino/ubuntu18_runtime']
neuralet/smart-social-distancing,latest,/x86-openvino.Dockerfile,USER,1,['root']
neuralet/smart-social-distancing,latest,/x86-openvino.Dockerfile,ARG,2,"['OPENCV_VERSION=4.5.3', 'DEBIAN_FRONTEND=noninteractive']"
neuralet/smart-social-distancing,latest,/x86-openvino.Dockerfile,RUN,3,"['apt-get update && apt-get install -y --no-install-recommends         build-essential         cmake         curl         git         gstreamer1.0-plugins-bad         gstreamer1.0-plugins-good         gstreamer1.0-plugins-ugly         gstreamer1.0-vaapi         libavcodec-dev         libavformat-dev         libgstreamer-plugins-base1.0-dev         libgstreamer1.0-dev         libsm6         libswscale-dev         libxext6         libxrender-dev         libpython3.6-dev         mesa-va-drivers         python3-dev         python3-numpy     && rm -rf /var/lib/apt/lists/*     && cd /tmp/     && curl -L https://github.com/opencv/opencv/archive/${OPENCV_VERSION}.tar.gz -o opencv.tar.gz     && tar zxvf opencv.tar.gz && rm opencv.tar.gz     && cd /tmp/opencv-${OPENCV_VERSION}     && mkdir build     && cd build     && cmake         -DBUILD_opencv_python3=yes         -DPYTHON_EXECUTABLE=$(which python3)         -DCMAKE_BUILD_TYPE=RELEASE         -DBUILD_TESTS=OFF         -DBUILD_PERF_TESTS=OFF         -DBUILD_EXAMPLES=OFF         -DINSTALL_TESTS=OFF         -DBUILD_opencv_apps=OFF         -DBUILD_DOCS=OFF         ../     && make -j$(nproc)     && make install     && cd /tmp     && rm -rf opencv-${OPENCV_VERSION}     && apt-get purge -y         cmake         git         libgstreamer-plugins-base1.0-dev         libgstreamer1.0-dev         libxrender-dev         python3-dev     && apt-get autoremove -y', 'apt-get update && apt-get install -y --no-install-recommends         tzdata         pkg-config         python3-dev         python3-numpy         python3-pillow         python3-pip         python3-scipy         python3-wget         supervisor     && rm -rf /var/lib/apt/lists/*     && python3 -m pip install --upgrade pip setuptools==41.0.0 wheel && pip install -r /requirements.txt     && apt-get purge -y         python3-dev     && apt-get autoremove -y', 'rm -rf /opt/intel/openvino/opencv /opt/intel/openvino/python/cv2.* /opt/intel/openvino/python/python3/cv2.*']"
neuralet/smart-social-distancing,latest,/x86-openvino.Dockerfile,COPY,2,"['api/requirements.txt /', '. /repo']"
neuralet/smart-social-distancing,latest,/x86-openvino.Dockerfile,ADD,1,['docker/x86-openvino/openvino_setupvars.py /opt/openvino_setupvars.py']
neuralet/smart-social-distancing,latest,/x86-openvino.Dockerfile,ENV,2,"['DEV_ALLOW_ALL_ORIGINS=true', 'CONFIG_FILE=config-x86-openvino.ini']"
neuralet/smart-social-distancing,latest,/x86-openvino.Dockerfile,WORKDIR,1,['/repo']
neuralet/smart-social-distancing,latest,/x86-openvino.Dockerfile,HEALTHCHECK,1,['--interval=30s --retries=2 --start-period=15s CMD bash healthcheck.bash']
neuralet/smart-social-distancing,latest,/x86-openvino.Dockerfile,CMD,1,['env `python3 /opt/openvino_setupvars.py` supervisord -c supervisord.conf -n']
neuralet/smart-social-distancing,latest,/x86.Dockerfile,FROM,1,['tensorflow/tensorflow:latest-py3']
neuralet/smart-social-distancing,latest,/x86.Dockerfile,ARG,2,"['OPENCV_VERSION=4.3.0', 'DEBIAN_FRONTEND=noninteractive']"
neuralet/smart-social-distancing,latest,/x86.Dockerfile,RUN,3,"['apt-get update && apt-get install -y --no-install-recommends         build-essential         cmake         curl         git         gstreamer1.0-plugins-bad         gstreamer1.0-plugins-good         gstreamer1.0-plugins-ugly         gstreamer1.0-vaapi         libavcodec-dev         libavformat-dev         libgstreamer-plugins-base1.0-dev         libgstreamer1.0-dev         libsm6         libswscale-dev         libxext6         libxrender-dev         mesa-va-drivers         python3-dev         python3-numpy     && rm -rf /var/lib/apt/lists/*     && cd /tmp/     && curl -L https://github.com/opencv/opencv/archive/${OPENCV_VERSION}.tar.gz -o opencv.tar.gz     && tar zxvf opencv.tar.gz && rm opencv.tar.gz     && cd /tmp/opencv-${OPENCV_VERSION}     && mkdir build     && cd build     && cmake         -DBUILD_opencv_python3=yes         -DPYTHON_EXECUTABLE=$(which python3)         -DCMAKE_BUILD_TYPE=RELEASE         -DBUILD_TESTS=OFF         -DBUILD_PERF_TESTS=OFF         -DBUILD_EXAMPLES=OFF         -DINSTALL_TESTS=OFF         -DBUILD_opencv_apps=OFF         -DBUILD_DOCS=OFF         ../     && make -j$(nproc)     && make install     && cd /tmp     && rm -rf opencv-${OPENCV_VERSION}     && apt-get purge -y         cmake         git         libgstreamer-plugins-base1.0-dev         libgstreamer1.0-dev         libxrender-dev         python3-dev     && apt-get autoremove -y', 'apt-get update && apt-get install -y --no-install-recommends         tzdata         pkg-config         python3-dev         python3-numpy         python3-pillow         python3-pip         python3-scipy         python3-wget         supervisor     && rm -rf /var/lib/apt/lists/*     && python3 -m pip install --upgrade pip setuptools==41.0.0 && pip install -r /requirements.txt     && apt-get purge -y         python3-dev     && apt-get autoremove -y', 'apt-get update && apt-get install -y python3-dev && pip3 install torch==1.5 torchvision==0.6.0 openpifpaf']"
neuralet/smart-social-distancing,latest,/x86.Dockerfile,COPY,2,"['api/requirements.txt /', '. /repo']"
neuralet/smart-social-distancing,latest,/x86.Dockerfile,ENV,2,"['DEV_ALLOW_ALL_ORIGINS=true', 'CONFIG_FILE=config-x86.ini']"
neuralet/smart-social-distancing,latest,/x86.Dockerfile,WORKDIR,1,['/repo']
neuralet/smart-social-distancing,latest,/x86.Dockerfile,HEALTHCHECK,1,['--interval=30s --retries=2 --start-period=15s CMD bash healthcheck.bash']
neuralet/smart-social-distancing,latest,/x86.Dockerfile,CMD,1,['supervisord -c supervisord.conf -n']
neuralet/smart-social-distancing,latest,/amd64-usbtpu.Dockerfile,FROM,1,['amd64/debian:buster']
neuralet/smart-social-distancing,latest,/amd64-usbtpu.Dockerfile,RUN,5,"['apt-get update && apt-get install -y wget gnupg usbutils     && rm -rf /var/lib/apt/lists     && wget -qO - https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -', 'echo ""deb https://packages.cloud.google.com/apt coral-edgetpu-stable main"" | tee /etc/apt/sources.list.d/coral-edgetpu.list', 'apt-get update && apt-get install -y --no-install-recommends         build-essential         cmake         curl         git         gstreamer1.0-plugins-bad         gstreamer1.0-plugins-good         gstreamer1.0-plugins-ugly         gstreamer1.0-vaapi         libavcodec-dev         libavformat-dev         libgstreamer-plugins-base1.0-dev         libgstreamer1.0-dev         libsm6         libswscale-dev         libxext6         libxrender-dev         mesa-va-drivers         python3-dev         python3-numpy     && rm -rf /var/lib/apt/lists/*     && cd /tmp/     && curl -L https://github.com/opencv/opencv/archive/${OPENCV_VERSION}.tar.gz -o opencv.tar.gz     && tar zxvf opencv.tar.gz && rm opencv.tar.gz     && cd /tmp/opencv-${OPENCV_VERSION}     && mkdir build     && cd build     && cmake         -DBUILD_opencv_python3=yes         -DPYTHON_EXECUTABLE=$(which python3)         -DCMAKE_BUILD_TYPE=RELEASE         -DBUILD_TESTS=OFF         -DBUILD_PERF_TESTS=OFF         -DBUILD_EXAMPLES=OFF         -DINSTALL_TESTS=OFF         -DBUILD_opencv_apps=OFF         -DBUILD_DOCS=OFF         ../     && make -j$(nproc)     && make install     && cd /tmp     && rm -rf opencv-${OPENCV_VERSION}     && apt-get purge -y         cmake         git         libgstreamer-plugins-base1.0-dev         libgstreamer1.0-dev         libxrender-dev         python3-dev     && apt-get autoremove -y', 'apt-get update && apt-get install -y --no-install-recommends         tzdata         pkg-config         python3-dev         python3-numpy         python3-pillow         python3-pip         python3-scipy         python3-wget         python3-pytest \tpython3-requests         build-essential         libedgetpu1-std         supervisor     && rm -rf /var/lib/apt/lists/*     && python3 -m pip install --upgrade pip setuptools==41.0.0 wheel && pip install -r /requirements.txt \thttps://dl.google.com/coral/python/tflite_runtime-2.1.0.post1-cp37-cp37m-linux_x86_64.whl     && apt-get purge -y         build-essential         python3-dev     && apt-get autoremove -y', ""cd / && apt-get update && apt-get install -y git python3-edgetpu && git clone     https://github.com/google-coral/project-posenet.git && cd project-posenet &&     git checkout f74ff7973e4b4349aaad9f50c7f0bc77fe33775b && sed -i 's/sudo / /g'     /project-posenet/install_requirements.sh && sh /project-posenet/install_requirements.sh""]"
neuralet/smart-social-distancing,latest,/amd64-usbtpu.Dockerfile,ARG,2,"['OPENCV_VERSION=4.3.0', 'DEBIAN_FRONTEND=noninteractive']"
neuralet/smart-social-distancing,latest,/amd64-usbtpu.Dockerfile,COPY,2,"['api/requirements.txt /', '. /repo']"
neuralet/smart-social-distancing,latest,/amd64-usbtpu.Dockerfile,ENV,3,"['DEV_ALLOW_ALL_ORIGINS=true', 'PYTHONPATH=$PYTHONPATH:/project-posenet', 'CONFIG_FILE=config-coral.ini']"
neuralet/smart-social-distancing,latest,/amd64-usbtpu.Dockerfile,WORKDIR,1,['/repo']
neuralet/smart-social-distancing,latest,/amd64-usbtpu.Dockerfile,HEALTHCHECK,1,['--interval=30s --retries=2 --start-period=15s CMD bash healthcheck.bash']
neuralet/smart-social-distancing,latest,/amd64-usbtpu.Dockerfile,CMD,1,['supervisord -c supervisord.conf -n']
neuralet/smart-social-distancing,latest,/coral-dev-board.Dockerfile,FROM,1,['arm64v8/debian:buster']
neuralet/smart-social-distancing,latest,/coral-dev-board.Dockerfile,RUN,4,"['apt-get update && apt-get install -y wget gnupg     && rm /etc/apt/sources.list  && rm -rf /var/lib/apt/lists     && wget -qO - https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -', 'apt-get update && apt-get install -y --no-install-recommends         cmake         curl         g++         gcc         git         gstreamer1.0-plugins-bad         gstreamer1.0-plugins-good         gstreamer1.0-plugins-ugly         gstreamer1.0-vaapi         libavcodec-dev         libavformat-dev         libgstreamer-plugins-base1.0-dev         libgstreamer1.0-dev         libsm6         libswscale-dev         libxext6         libxrender-dev         make         mesa-va-drivers         pkg-config         python3-dev         python3-numpy     && rm -rf /var/lib/apt/lists/*     && cd /tmp/     && curl -L https://github.com/opencv/opencv/archive/${OPENCV_VERSION}.tar.gz -o opencv.tar.gz     && tar zxvf opencv.tar.gz && rm opencv.tar.gz     && cd /tmp/opencv-${OPENCV_VERSION}     && mkdir build     && cd build     && cmake -DBUILD_opencv_python3=yes -DPYTHON_EXECUTABLE=$(which python3) ../     && make -j$(nproc)     && make install     && cd /tmp     && rm -rf opencv-${OPENCV_VERSION}     && apt-get purge -y         cmake         git         libgstreamer-plugins-base1.0-dev         libgstreamer1.0-dev         libxrender-dev         python3-dev     && apt-get autoremove -y', 'apt-get update && apt-get install -y --no-install-recommends         tzdata         libedgetpu1-std         pkg-config         python3-dev         python3-numpy         python3-pillow         python3-pip         python3-scipy         python3-wget         supervisor     && rm -rf /var/lib/apt/lists/*     && python3 -m pip install --upgrade pip setuptools==41.0.0 && pip install -r /requirements.txt         https://dl.google.com/coral/python/tflite_runtime-2.1.0.post1-cp37-cp37m-linux_aarch64.whl     && apt-get purge -y         python3-dev     && apt-get autoremove -y', ""cd / && apt-get update && apt-get install -y git python3-edgetpu && git clone     https://github.com/google-coral/project-posenet.git && cd project-posenet &&     git checkout f74ff7973e4b4349aaad9f50c7f0bc77fe33775b && sed -i 's/sudo / /g'     /project-posenet/install_requirements.sh && sh /project-posenet/install_requirements.sh""]"
neuralet/smart-social-distancing,latest,/coral-dev-board.Dockerfile,COPY,3,"['docker/coral-dev-board/multistrap* /etc/apt/sources.list.d/', 'api/requirements.txt /', '. /repo']"
neuralet/smart-social-distancing,latest,/coral-dev-board.Dockerfile,ARG,2,"['OPENCV_VERSION=4.3.0', 'DEBIAN_FRONTEND=noninteractive']"
neuralet/smart-social-distancing,latest,/coral-dev-board.Dockerfile,ENV,3,"['DEV_ALLOW_ALL_ORIGINS=true', 'PYTHONPATH=$PYTHONPATH:/project-posenet', 'CONFIG_FILE=config-coral.ini']"
neuralet/smart-social-distancing,latest,/coral-dev-board.Dockerfile,WORKDIR,1,['/repo']
neuralet/smart-social-distancing,latest,/coral-dev-board.Dockerfile,HEALTHCHECK,1,['--interval=30s --retries=2 --start-period=15s CMD bash healthcheck.bash']
neuralet/smart-social-distancing,latest,/coral-dev-board.Dockerfile,CMD,1,['supervisord -c supervisord.conf -n']
neuralet/smart-social-distancing,latest,/jetson-tx2.Dockerfile,FROM,1,['nvcr.io/nvidia/l4t-pytorch:r32.4.4-pth1.6-py3']
neuralet/smart-social-distancing,latest,/jetson-tx2.Dockerfile,ARG,2,"['OPENCV_VERSION=4.3.0', 'DEBIAN_FRONTEND=noninteractive']"
neuralet/smart-social-distancing,latest,/jetson-tx2.Dockerfile,RUN,11,"['apt-get update && apt-get install -y --no-install-recommends         build-essential         cmake         curl         git', 'apt-get update && apt-get install -y --no-install-recommends \tca-certificates \tgstreamer1.0-plugins-bad         gstreamer1.0-plugins-good         gstreamer1.0-plugins-ugly         gstreamer1.0-vaapi         libavcodec-dev         libavformat-dev', 'apt-get update && apt-get install -y --no-install-recommends libgstreamer-plugins-base1.0-dev         libgstreamer1.0-dev         libsm6         libswscale-dev         libxext6         libxrender-dev         mesa-va-drivers         python3-dev         python3-numpy     && rm -rf /var/lib/apt/lists/*     && cd /tmp/     && curl -L https://github.com/opencv/opencv/archive/${OPENCV_VERSION}.tar.gz -o opencv.tar.gz     && tar zxvf opencv.tar.gz && rm opencv.tar.gz     && cd /tmp/opencv-${OPENCV_VERSION}     && mkdir build     && cd build     && cmake         -DBUILD_opencv_python3=yes         -DPYTHON_EXECUTABLE=$(which python3)         -DCMAKE_BUILD_TYPE=RELEASE         -DBUILD_TESTS=OFF         -DBUILD_PERF_TESTS=OFF         -DBUILD_EXAMPLES=OFF         -DINSTALL_TESTS=OFF         -DBUILD_opencv_apps=OFF         -DBUILD_DOCS=OFF         ../     && make -j$(nproc)     && make install     && cd /tmp     && rm -rf opencv-${OPENCV_VERSION}     && apt-get purge -y         libgstreamer-plugins-base1.0-dev         libgstreamer1.0-dev         libxrender-dev     && apt-get autoremove -y', 'apt-get update && apt-get install -y --no-install-recommends         build-essential         tzdata         libboost-python-dev         libboost-thread-dev         pkg-config         python3-dev         python3-matplotlib         python3-numpy         python3-pillow         python3-pip         python3-scipy         python3-wget         supervisor     && rm -rf /var/lib/apt/lists/*', 'ln -sf $(which gcc) /usr/local/bin/gcc-aarch64-linux-gnu     && ln -sf $(which g++) /usr/local/bin/g++-aarch64-linux-gnu     && python3 -m pip install --upgrade pip setuptools==41.0.0 wheel && pip install -r /requirements.txt     && apt-get purge -y         pkg-config     && apt-get autoremove -y', 'pip3 install openpifpaf==0.12a4', 'apt update && apt-get install -y pkg-config libhdf5-100 libhdf5-serial-dev hdf5-tools libhdf5-dev zlib1g-dev zip libjpeg8-dev liblapack-dev libblas-dev gfortran     && pip3 install -U pip testresources setuptools==49.6.0     && pip3 install -U numpy==1.16.1 future==0.18.2 mock==3.0.5 h5py==2.10.0 keras_preprocessing==1.1.1 keras_applications==1.0.8 gast==0.2.2 futures protobuf pybind11     && pip3 install --pre --extra-index-url https://developer.download.nvidia.com/compute/redist/jp/v44 tensorflow==2.1.0', 'apt-get update && apt install -y git autoconf automake libtool curl make g++ unzip supervisor', 'git clone https://github.com/protocolbuffers/protobuf.git && cd protobuf && git submodule update --init --recursive && chmod +x autogen.sh && ./autogen.sh && ./configure && make -j$(nproc) && make install && ldconfig', 'apt update && apt-get install -y libssl-dev && wget https://github.com/Kitware/CMake/releases/download/v3.19.1/cmake-3.19.1.tar.gz     && tar -xf cmake-3.19.1.tar.gz     && cd cmake-3.19.1     && ./bootstrap     && make -j$(nproc)     && make install', 'git clone https://github.com/onnx/onnx-tensorrt.git && cd onnx-tensorrt && git checkout 7.0 && git submodule update --init --recursive && mkdir build && cd build && cmake .. -DTENSORRT_ROOT=/usr/src/tensorrt/ && make -j$(nproc) && make install && cd ../.. && rm -rf onnx-tensorrt']"
neuralet/smart-social-distancing,latest,/jetson-tx2.Dockerfile,COPY,2,"['api/requirements.txt /', '. /repo/']"
neuralet/smart-social-distancing,latest,/jetson-tx2.Dockerfile,ENV,2,"['DEV_ALLOW_ALL_ORIGINS=true', 'CONFIG_FILE=config-jetson-tx2.ini']"
neuralet/smart-social-distancing,latest,/jetson-tx2.Dockerfile,WORKDIR,1,['/repo']
neuralet/smart-social-distancing,latest,/jetson-tx2.Dockerfile,HEALTHCHECK,1,['--interval=30s --retries=2 --start-period=15s CMD bash healthcheck.bash']
neuralet/smart-social-distancing,latest,/jetson-tx2.Dockerfile,CMD,1,['supervisord -c supervisord.conf -n']
neuralet/smart-social-distancing,latest,/jetson-nano.Dockerfile,FROM,1,['nvcr.io/nvidia/l4t-base:r32.3.1']
neuralet/smart-social-distancing,latest,/jetson-nano.Dockerfile,RUN,5,"['wget https://github.com/Tony607/jetson_nano_trt_tf_ssd/raw/master/packages/jetpack4.3/tensorrt.tar.gz -O /opt/tensorrt.tar.gz', 'tar -xzf /opt/tensorrt.tar.gz -C /usr/local/lib/python3.6/dist-packages/', 'wget https://github.com/sasikiran/jetson_tx2_trt_ssd/raw/master/libflattenconcat.so -O /opt/libflattenconcat.so', 'apt-get update && apt-get install -y --no-install-recommends         build-essential         cmake         curl         git         gstreamer1.0-plugins-bad         gstreamer1.0-plugins-good         gstreamer1.0-plugins-ugly         gstreamer1.0-vaapi         libavcodec-dev         libavformat-dev         libgstreamer-plugins-base1.0-dev         libgstreamer1.0-dev         libsm6         libswscale-dev         libxext6         libxrender-dev         mesa-va-drivers         python3-dev         python3-numpy     && rm -rf /var/lib/apt/lists/*     && cd /tmp/     && curl -L https://github.com/opencv/opencv/archive/${OPENCV_VERSION}.tar.gz -o opencv.tar.gz     && tar zxvf opencv.tar.gz && rm opencv.tar.gz     && cd /tmp/opencv-${OPENCV_VERSION}     && mkdir build     && cd build     && cmake         -DBUILD_opencv_python3=yes         -DPYTHON_EXECUTABLE=$(which python3)         -DCMAKE_BUILD_TYPE=RELEASE         -DBUILD_TESTS=OFF         -DBUILD_PERF_TESTS=OFF         -DBUILD_EXAMPLES=OFF         -DINSTALL_TESTS=OFF         -DBUILD_opencv_apps=OFF         -DBUILD_DOCS=OFF         ../     && make -j$(nproc)     && make install     && cd /tmp     && rm -rf opencv-${OPENCV_VERSION}     && apt-get purge -y         cmake         git         libgstreamer-plugins-base1.0-dev         libgstreamer1.0-dev         libxrender-dev     && apt-get autoremove -y', 'apt-get update && apt-get install -y --no-install-recommends         build-essential         tzdata         libboost-python-dev         libboost-thread-dev         pkg-config         python3-dev         python3-matplotlib         python3-numpy         python3-pillow         python3-pip         python3-scipy         python3-wget         supervisor     && rm -rf /var/lib/apt/lists/*     && ln -sf $(which gcc) /usr/local/bin/gcc-aarch64-linux-gnu     && ln -sf $(which g++) /usr/local/bin/g++-aarch64-linux-gnu     && wget https://github.com/Tony607/jetson_nano_trt_tf_ssd/raw/master/packages/jetpack4.3/pycuda-2019.1.2-cp36-cp36m-linux_aarch64.whl -O /tmp/pycuda-2019.1.2-cp36-cp36m-linux_aarch64.whl     && python3 -m pip install --upgrade pip setuptools==41.0.0 wheel && pip install -r requirements.txt         /tmp/pycuda-2019.1.2-cp36-cp36m-linux_aarch64.whl     && rm /tmp/pycuda-2019.1.2-cp36-cp36m-linux_aarch64.whl     && apt-get purge -y         pkg-config     && apt-get autoremove -y']"
neuralet/smart-social-distancing,latest,/jetson-nano.Dockerfile,ARG,2,"['OPENCV_VERSION=4.3.0', 'DEBIAN_FRONTEND=noninteractive']"
neuralet/smart-social-distancing,latest,/jetson-nano.Dockerfile,COPY,2,"['api/requirements.txt /', '. /repo/']"
neuralet/smart-social-distancing,latest,/jetson-nano.Dockerfile,ENV,3,"['DEV_ALLOW_ALL_ORIGINS=true', 'CONFIG_FILE=config-jetson-nano.ini', 'OPENBLAS_CORETYPE=armv8']"
neuralet/smart-social-distancing,latest,/jetson-nano.Dockerfile,WORKDIR,1,['/repo']
neuralet/smart-social-distancing,latest,/jetson-nano.Dockerfile,HEALTHCHECK,1,['--interval=30s --retries=2 --start-period=15s CMD bash healthcheck.bash']
neuralet/smart-social-distancing,latest,/jetson-nano.Dockerfile,CMD,1,['supervisord -c supervisord.conf -n']
neuralet/smart-social-distancing,latest,/x86-gpu-tensorrt-openpifpaf.Dockerfile,FROM,1,['nvcr.io/nvidia/tensorrt:20.03-py3']
neuralet/smart-social-distancing,latest,/x86-gpu-tensorrt-openpifpaf.Dockerfile,ARG,2,"['OPENCV_VERSION=4.3.0', 'DEBIAN_FRONTEND=noninteractive']"
neuralet/smart-social-distancing,latest,/x86-gpu-tensorrt-openpifpaf.Dockerfile,RUN,8,"['apt-get update && apt-get install -y --no-install-recommends         build-essential         cmake         curl         git         gstreamer1.0-plugins-bad         gstreamer1.0-plugins-good         gstreamer1.0-plugins-ugly         gstreamer1.0-vaapi         libavcodec-dev         libavformat-dev         libgstreamer-plugins-base1.0-dev         libgstreamer1.0-dev         libsm6         libswscale-dev         libxext6         libxrender-dev         mesa-va-drivers         python3-dev         python3-numpy     && rm -rf /var/lib/apt/lists/*     && cd /tmp/     && curl -L https://github.com/opencv/opencv/archive/${OPENCV_VERSION}.tar.gz -o opencv.tar.gz     && tar zxvf opencv.tar.gz && rm opencv.tar.gz     && cd /tmp/opencv-${OPENCV_VERSION}     && mkdir build     && cd build     && cmake         -DBUILD_opencv_python3=yes         -DPYTHON_EXECUTABLE=$(which python3)         -DCMAKE_BUILD_TYPE=RELEASE         -DBUILD_TESTS=OFF         -DBUILD_PERF_TESTS=OFF         -DBUILD_EXAMPLES=OFF         -DINSTALL_TESTS=OFF         -DBUILD_opencv_apps=OFF         -DBUILD_DOCS=OFF         ../     && make -j$(nproc)     && make install     && cd /tmp     && rm -rf opencv-${OPENCV_VERSION}     && apt-get purge -y         cmake         git         libgstreamer-plugins-base1.0-dev         libgstreamer1.0-dev         libxrender-dev         python3-dev     && apt-get autoremove -y', 'apt-get update && apt-get install -y --no-install-recommends         tzdata         pkg-config         python3-dev         python3-numpy         python3-pillow         python3-pip         python3-scipy         python3-wget     && rm -rf /var/lib/apt/lists/*     && python3 -m pip install --upgrade pip setuptools==41.0.0 && pip install -r /requirements.txt     && apt-get purge -y         python3-dev     && apt-get autoremove -y', 'apt-get update && apt-get install -y python3-dev && pip3 install torch==1.5.1 torchvision==0.6.1 openpifpaf==0.12a4', 'pip3 install tensorflow==2.1.0 Keras-Applications==1.0.8 Keras-Preprocessing==1.1.0', 'pip3 install h5py==2.10.0', 'apt-get update && apt install -y git autoconf automake libtool curl make g++ unzip supervisor', 'git clone https://github.com/protocolbuffers/protobuf.git && cd protobuf && git checkout v3.17.3 && git submodule update --init --recursive && chmod +x autogen.sh && ./autogen.sh && ./configure && make -j$(nproc) && make install && ldconfig', 'git clone https://github.com/onnx/onnx-tensorrt.git && cd onnx-tensorrt && git checkout 7.0 && git submodule update --init --recursive && mkdir build && cd build && cmake .. -DTENSORRT_ROOT=/usr/src/tensorrt/ && make -j$(nproc) && make install']"
neuralet/smart-social-distancing,latest,/x86-gpu-tensorrt-openpifpaf.Dockerfile,COPY,2,"['api/requirements.txt /', '. /repo']"
neuralet/smart-social-distancing,latest,/x86-gpu-tensorrt-openpifpaf.Dockerfile,ENV,2,"['DEV_ALLOW_ALL_ORIGINS=true', 'CONFIG_FILE=config-x86-gpu-tensorrt.ini']"
neuralet/smart-social-distancing,latest,/x86-gpu-tensorrt-openpifpaf.Dockerfile,WORKDIR,1,['/repo']
neuralet/smart-social-distancing,latest,/x86-gpu-tensorrt-openpifpaf.Dockerfile,CMD,1,['supervisord -c supervisord.conf -n']
neuralet/smart-social-distancing,latest,/eval/eval.Dockerfile,FROM,1,['python:3.6']
neuralet/smart-social-distancing,latest,/eval/eval.Dockerfile,WORKDIR,1,['/repo/applications/smart-distancing/eval']
neuralet/smart-social-distancing,latest,/eval/eval.Dockerfile,VOLUME,1,['/repo']
neuralet/smart-social-distancing,latest,/eval/eval.Dockerfile,RUN,3,"['pip install --upgrade pip setuptools==41.0.0 && pip install six==1.14.0', 'pip install --upgrade pip setuptools==41.0.0 && pip install opencv-python==4.2.0.32 && pip install six==1.14.0', 'pip install matplotlib==3.1.3']"
neuralet/smart-social-distancing,latest,/eval/eval.Dockerfile,ENTRYPOINT,1,"['[""python"", ""pascal_evaluator.py""]']"
neuralet/smart-social-distancing,latest,/eval/eval.Dockerfile,CMD,1,"['[""-gt"", ""eval_files/groundtruths/"", ""-det"", ""eval_files/detresults/"", ""-t"", ""0.5""]']"
sony/nnabla-ext-cuda,latest,/docker/tutorial/Dockerfile,FROM,1,['nvidia/cuda:11.0-cudnn8-runtime-ubuntu18.04']
sony/nnabla-ext-cuda,latest,/docker/tutorial/Dockerfile,ARG,6,"['PIP_INS_OPTS', 'PYTHONWARNINGS', 'CURL_OPTS', 'WGET_OPTS', 'APT_OPTS', 'NNABLA_VER']"
sony/nnabla-ext-cuda,latest,/docker/tutorial/Dockerfile,RUN,11,"['eval ${APT_OPTS}     && apt-get update     && apt-get install -y --no-install-recommends        bzip2        ca-certificates        curl        libglib2.0-0        libgl1-mesa-glx        python3.8        python3-pip        git     && rm -rf /var/lib/apt/lists/*', 'update-alternatives --install /usr/bin/python python /usr/bin/python3.8 0', 'update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.8 0', 'pip3 install ${PIP_INS_OPTS} --upgrade pip', 'pip install ${PIP_INS_OPTS} wheel setuptools', 'pip install ${PIP_INS_OPTS} opencv-python || true', 'pip install --extra-index-url https://developer.download.nvidia.com/compute/redist nvidia-dali-cuda110     || echo ""Skip DALI installation (CUDA=11.0)""', 'pip install ${PIP_INS_OPTS} nnabla-ext-cuda110==${NNABLA_VER}', 'pip install ${PIP_INS_OPTS} jupyter sklearn imageio matplotlib', 'git clone --depth=1 https://github.com/sony/nnabla && mv nnabla/tutorial . && rm -rf nnabla', 'git clone --depth=1 https://github.com/sony/nnabla-examples && rm -rf nnabla-examples/.git  && mv nnabla-examples tutorial']"
sony/nnabla-ext-cuda,latest,/docker/tutorial/Dockerfile,COPY,1,['./run-nnabla-examples.ipynb tutorial/']
sony/nnabla-ext-cuda,latest,/docker/tutorial/Dockerfile,WORKDIR,1,['/tutorial']
sony/nnabla-ext-cuda,latest,/docker/development/Dockerfile.build-ppc64le,ARG,12,"['CUDA_VERSION_MAJOR=10', 'CUDA_VERSION_MINOR=0', 'CUDNN_VERSION=7', 'PIP_INS_OPTS', 'PYTHONWARNINGS', 'CURL_OPTS', 'WGET_OPTS', 'YUM_OPTS', 'CMAKEVER=3.14.3', 'PROTOVER=3.10.1', 'PYTHON_VERSION_MAJOR=3', 'PYTHON_VERSION_MINOR=6']"
sony/nnabla-ext-cuda,latest,/docker/development/Dockerfile.build-ppc64le,FROM,1,['nvidia/cuda-ppc64le:${CUDA_VERSION_MAJOR}.${CUDA_VERSION_MINOR}-cudnn${CUDNN_VERSION}-devel-centos7']
sony/nnabla-ext-cuda,latest,/docker/development/Dockerfile.build-ppc64le,ENV,8,"['LC_ALL C', 'LANG C', 'LANGUAGE C', 'PYVERNAME=${PYTHON_VERSION_MAJOR}.${PYTHON_VERSION_MINOR}', 'PATH /tmp/.local/bin:$PATH', 'LD_LIBRARY_PATH /usr/local/lib64:$LD_LIBRARY_PATH', 'CC /usr/local/bin/gcc', 'CXX /usr/local/bin/g++']"
sony/nnabla-ext-cuda,latest,/docker/development/Dockerfile.build-ppc64le,RUN,8,"['eval ${YUM_OPTS}     && yum install -y        epel-release        yum-utils     && yum install -y         curl         freetype-devel         git         hdf5         hdf5-devel         lapack-devel         libjpeg-devel         xz-devel         libpng-devel         redhat-lsb-core         rpm-build         unzip         wget         which         zip         zlib-static         libmpc-devel         mpfr-devel         gmp-devel         openssl-devel         bzip2-devel         libffi-devel         libsndfile         python-backports-lzma     && yum group install -y ""Development Tools""     && yum clean all', 'mkdir /tmp/deps     && cd /tmp/deps     && wget ${WGET_OPTS} http://ftp.tsukuba.wide.ad.jp/software/gcc/releases/gcc-6.5.0/gcc-6.5.0.tar.gz     && tar zxf gcc-6.5.0.tar.gz     && cd gcc-6.5.0     && ./configure --disable-multilib --enable-languages=c,c++     && make -j8     && make install     && cd /     && rm -rf /tmp/*', 'mkdir /tmp/deps     && cd /tmp/deps     && yum install -y cmake3     && curl ${CURL_OPTS} -L https://github.com/Kitware/CMake/releases/download/v${CMAKEVER}/cmake-${CMAKEVER}.tar.gz -o cmake-${CMAKEVER}.tar.gz     && tar xf cmake-${CMAKEVER}.tar.gz     && cd cmake-${CMAKEVER}     && mkdir build     && cd build     && cmake3 -DBUILD_TESTING=FALSE ..     && make     && make install     && yum remove -y cmake3     && yum clean all     && rm -rf /var/cache/yum/*     && cd /     && rm -rf /tmp/*', 'mkdir /tmp/deps     && cd /tmp/deps     && curl ${CURL_OPTS} -L https://github.com/google/protobuf/archive/v${PROTOVER}.tar.gz -o protobuf-v${PROTOVER}.tar.gz     && tar xvf protobuf-v${PROTOVER}.tar.gz     && cd protobuf-${PROTOVER}     && mkdir build     && cd build     && cmake         -DCMAKE_POSITION_INDEPENDENT_CODE=ON         -Dprotobuf_BUILD_TESTS=OFF         -DCMAKE_CXX_STANDARD=14         -D CMAKE_C_COMPILER=gcc CMAKE_CXX_COMPILER=g++ /usr/bin/gcc         ../cmake     && make     && make install     && cd /     && rm -rf /tmp/*', 'mkdir /tmp/deps     && cd /tmp/deps     && curl ${CURL_OPTS} -L https://www.libarchive.org/downloads/libarchive-3.3.2.tar.gz -o libarchive-3.3.2.tar.gz     && tar xfa libarchive-3.3.2.tar.gz     && mkdir libarchive-build     && cd libarchive-build     && cmake         -DCMAKE_POSITION_INDEPENDENT_CODE=ON -DENABLE_NETTLE=FALSE -DENABLE_OPENSSL=FALSE         -DENABLE_LZO=FALSE -DENABLE_LZMA=FALSE -DENABLE_BZip2=FALSE         -DENABLE_LIBXML2=FALSE -DENABLE_EXPAT=FALSE -DENABLE_PCREPOSIX=FALSE -DENABLE_LibGCC=FALSE         -DENABLE_CNG=FALSE -DENABLE_TAR=FALSE -DENABLE_TAR_SHARED=FALSE -DENABLE_CPIO=FALSE         -DENABLE_CPIO_SHARED=FALSE -DENABLE_CAT=FALSE -DENABLE_CAT_SHARED=FALSE -DENABLE_XATTR=FALSE         -DENABLE_ACL=FALSE -DENABLE_ICONV=FALSE -DENABLE_TEST=FALSE         ../libarchive-3.3.2     && make install     && cd /     && rm -rf /tmp/*', 'mkdir /tmp/deps     && cd /tmp/deps     && wget ${WGET_OPTS} http://nixos.org/releases/patchelf/patchelf-0.9/patchelf-0.9.tar.bz2     && tar xfa patchelf-0.9.tar.bz2     && cd patchelf-0.9     && ./configure     && make     && make install     && cd /     && rm -rf /tmp/*', 'if [ ""${PYVERNAME}"" == ""3.6"" ]; then wget ${WGET_OPTS} https://www.python.org/ftp/python/3.6.12/Python-3.6.12.tgz; fi \t&& if [ ""${PYVERNAME}"" == ""3.7"" ]; then wget ${WGET_OPTS} https://www.python.org/ftp/python/3.7.10/Python-3.7.10.tgz; fi \t&& if [ ""${PYVERNAME}"" == ""3.8"" ]; then wget ${WGET_OPTS} https://www.python.org/ftp/python/3.8.8/Python-3.8.8.tgz; fi \t&& if [ ""${PYVERNAME}"" == ""3.9"" ]; then wget ${WGET_OPTS} https://www.python.org/ftp/python/3.9.8/Python-3.9.8.tgz; fi \t&& tar -xzf Python-${PYVERNAME}*.tgz \t&& cd Python-${PYVERNAME}* \t&& ./configure --enable-optimizations \t&& make altinstall \t&& ln -s /usr/local/bin/python${PYVERNAME} /usr/local/bin/python \t&& ln -s /usr/local/bin/pip${PYVERNAME} /usr/local/bin/pip \t&& pip install ${PIP_INS_OPTS} -U -r /tmp/deps/requirements.txt \t&& cd .. \t&& rm -rf Python-${PYVERNAME}* \t&& rm -rf /tmp/*', 'rm -f /usr/lib64/libstdc++.so.6']"
sony/nnabla-ext-cuda,latest,/docker/development/Dockerfile.build-ppc64le,ADD,1,['python/requirements.txt /tmp/deps/']
sony/nnabla-ext-cuda,latest,/docker/development/Dockerfile.build-mpi-ppc64le,ARG,20,"['CUDA_VERSION_MAJOR=10', 'CUDA_VERSION_MINOR=0', 'CUDNN_VERSION=7', 'PIP_INS_OPTS', 'PYTHONWARNINGS', 'CURL_OPTS', 'WGET_OPTS', 'YUM_OPTS', 'MPIVER=2.1.6', 'PIP_INS_OPTS', 'PYTHONWARNINGS', 'CURL_OPTS', 'WGET_OPTS', 'YUM_OPTS', 'CUDA_VERSION_MAJOR=10', 'CUDA_VERSION_MINOR=0', 'CMAKEVER=3.14.3', 'PROTOVER=3.10.1', 'PYTHON_VERSION_MAJOR=3', 'PYTHON_VERSION_MINOR=6']"
sony/nnabla-ext-cuda,latest,/docker/development/Dockerfile.build-mpi-ppc64le,FROM,2,"['centos:7 as openmpi', 'nvidia/cuda-ppc64le:${CUDA_VERSION_MAJOR}.${CUDA_VERSION_MINOR}-cudnn${CUDNN_VERSION}-devel-centos7']"
sony/nnabla-ext-cuda,latest,/docker/development/Dockerfile.build-mpi-ppc64le,ENV,11,"['LC_ALL C', 'LANG C', 'LANGUAGE C', 'LC_ALL C', 'LANG C', 'LANGUAGE C', 'PYVERNAME=${PYTHON_VERSION_MAJOR}.${PYTHON_VERSION_MINOR}', 'PATH /tmp/.local/bin:$PATH', 'LD_LIBRARY_PATH /usr/local/lib64:$LD_LIBRARY_PATH', 'CC /usr/local/bin/gcc', 'CXX /usr/local/bin/g++']"
sony/nnabla-ext-cuda,latest,/docker/development/Dockerfile.build-mpi-ppc64le,RUN,18,"['eval ${YUM_OPTS}     && yum install -y        epel-release        yum-utils     && yum install -y         curl         rpm-build     && yum group install -y ""Development Tools""     && yum clean all', 'mkdir /root/rpmbuild', 'cd /root/rpmbuild; curl ${CURL_OPTS} https://download.open-mpi.org/release/open-mpi/v${MPIVER%.*}/openmpi-${MPIVER}-1.src.rpm -o openmpi-${MPIVER}-1.src.rpm', 'cd /root/rpmbuild; rpmbuild --rebuild openmpi-${MPIVER}-1.src.rpm', 'mv /root/rpmbuild/RPMS/ppc64le/openmpi-${MPIVER}-1.*.rpm /root', 'eval ${YUM_OPTS}     && yum install -y        epel-release        yum-utils     && yum install -y         curl         freetype-devel         git         hdf5         hdf5-devel         lapack-devel         libjpeg-devel         xz-devel         libpng-devel         redhat-lsb-core         rpm-build         unzip         wget         which         zip         zlib-static         libmpc-devel         mpfr-devel         gmp-devel         openssl-devel         bzip2-devel         libffi-devel         libsndfile         python-backports-lzma     && yum group install -y ""Development Tools""     && yum clean all', 'mkdir /tmp/deps     && cd /tmp/deps     && curl ${CURL_OPTS} -L https://developer.download.nvidia.com/compute/machine-learning/repos/rhel7/ppc64le/nvidia-machine-learning-repo-rhel7-1.0.0-1.ppc64le.rpm -o nvidia-machine-learning-repo-rhel7-1.0.0-1.ppc64le.rpm     && yum install -y ./nvidia-machine-learning-repo-rhel7-1.0.0-1.ppc64le.rpm     && yum clean all     && cd /     && rm -rf /tmp/*', 'yum install -y libnccl-*+cuda${CUDA_VERSION_MAJOR}.${CUDA_VERSION_MINOR} libnccl-devel-*+cuda${CUDA_VERSION_MAJOR}.${CUDA_VERSION_MINOR}', 'mkdir /tmp/deps     && cd /tmp/deps     && wget ${WGET_OPTS} http://ftp.tsukuba.wide.ad.jp/software/gcc/releases/gcc-6.5.0/gcc-6.5.0.tar.gz     && tar zxf gcc-6.5.0.tar.gz     && cd gcc-6.5.0     && ./configure --disable-multilib --enable-languages=c,c++     && make -j8     && make install     && cd /     && rm -rf /tmp/*', 'mkdir /tmp/deps     && cd /tmp/deps     && yum install -y cmake3     && curl ${CURL_OPTS} -L https://github.com/Kitware/CMake/releases/download/v${CMAKEVER}/cmake-${CMAKEVER}.tar.gz -o cmake-${CMAKEVER}.tar.gz     && tar xf cmake-${CMAKEVER}.tar.gz     && cd cmake-${CMAKEVER}     && mkdir build     && cd build     && cmake3 -DBUILD_TESTING=FALSE ..     && make     && make install     && yum remove -y cmake3     && yum clean all     && rm -rf /var/cache/yum/*     && cd /     && rm -rf /tmp/*', 'mkdir /tmp/deps     && cd /tmp/deps     && curl ${CURL_OPTS} -L https://github.com/google/protobuf/archive/v${PROTOVER}.tar.gz -o protobuf-v${PROTOVER}.tar.gz     && tar xvf protobuf-v${PROTOVER}.tar.gz     && cd protobuf-${PROTOVER}     && mkdir build     && cd build     && cmake         -DCMAKE_POSITION_INDEPENDENT_CODE=ON         -Dprotobuf_BUILD_TESTS=OFF         -DCMAKE_CXX_STANDARD=14         -D CMAKE_C_COMPILER=gcc CMAKE_CXX_COMPILER=g++ /usr/bin/gcc         ../cmake     && make     && make install     && cd /     && rm -rf /tmp/*', 'mkdir /tmp/deps     && cd /tmp/deps     && curl ${CURL_OPTS} -L https://www.libarchive.org/downloads/libarchive-3.3.2.tar.gz -o libarchive-3.3.2.tar.gz     && tar xfa libarchive-3.3.2.tar.gz     && mkdir libarchive-build     && cd libarchive-build     && cmake         -DCMAKE_POSITION_INDEPENDENT_CODE=ON -DENABLE_NETTLE=FALSE -DENABLE_OPENSSL=FALSE         -DENABLE_LZO=FALSE -DENABLE_LZMA=FALSE -DENABLE_BZip2=FALSE         -DENABLE_LIBXML2=FALSE -DENABLE_EXPAT=FALSE -DENABLE_PCREPOSIX=FALSE -DENABLE_LibGCC=FALSE         -DENABLE_CNG=FALSE -DENABLE_TAR=FALSE -DENABLE_TAR_SHARED=FALSE -DENABLE_CPIO=FALSE         -DENABLE_CPIO_SHARED=FALSE -DENABLE_CAT=FALSE -DENABLE_CAT_SHARED=FALSE -DENABLE_XATTR=FALSE         -DENABLE_ACL=FALSE -DENABLE_ICONV=FALSE -DENABLE_TEST=FALSE         ../libarchive-3.3.2     && make install     && cd /     && rm -rf /tmp/*', 'mkdir /tmp/deps     && cd /tmp/deps     && wget ${WGET_OPTS} http://nixos.org/releases/patchelf/patchelf-0.9/patchelf-0.9.tar.bz2     && tar xfa patchelf-0.9.tar.bz2     && cd patchelf-0.9     && ./configure     && make     && make install     && cd /     && rm -rf /tmp/*', 'rpm -i /root/openmpi-*.rpm', 'if [ ""${PYVERNAME}"" == ""3.6"" ]; then wget ${WGET_OPTS} https://www.python.org/ftp/python/3.6.12/Python-3.6.12.tgz; fi \t&& if [ ""${PYVERNAME}"" == ""3.7"" ]; then wget ${WGET_OPTS} https://www.python.org/ftp/python/3.7.10/Python-3.7.10.tgz; fi \t&& if [ ""${PYVERNAME}"" == ""3.8"" ]; then wget ${WGET_OPTS} https://www.python.org/ftp/python/3.8.8/Python-3.8.8.tgz; fi \t&& if [ ""${PYVERNAME}"" == ""3.9"" ]; then wget ${WGET_OPTS} https://www.python.org/ftp/python/3.9.8/Python-3.9.8.tgz; fi \t&& tar -xzf Python-${PYVERNAME}*.tgz \t&& cd Python-${PYVERNAME}* \t&& ./configure --enable-optimizations \t&& make altinstall \t&& ln -s /usr/local/bin/python${PYVERNAME} /usr/local/bin/python \t&& ln -s /usr/local/bin/pip${PYVERNAME} /usr/local/bin/pip \t&& pip install ${PIP_INS_OPTS} -U -r /tmp/deps/requirements.txt \t&& cd .. \t&& rm -rf Python-${PYVERNAME}* \t&& rm -rf /tmp/*', 'rm -f /usr/lib64/libstdc++.so.6', 'echo NCCL_SHM_DISABLE=1 >> /etc/nccl.conf', 'echo NCCL_P2P_LEVEL=SYS >> /etc/nccl.conf']"
sony/nnabla-ext-cuda,latest,/docker/development/Dockerfile.build-mpi-ppc64le,COPY,1,['--from=openmpi /root/openmpi-*.rpm /root']
sony/nnabla-ext-cuda,latest,/docker/development/Dockerfile.build-mpi-ppc64le,ADD,1,['python/requirements.txt /tmp/deps/']
sony/nnabla-ext-cuda,latest,/docker/development/Dockerfile.build-mpi,ARG,25,"['CUDA_VERSION_MAJOR=10', 'CUDA_VERSION_MINOR=0', 'CUDNN_VERSION=7', 'PIP_INS_OPTS', 'PYTHONWARNINGS', 'CURL_OPTS', 'WGET_OPTS', 'YUM_OPTS', 'MPIVER=2.1.6', 'PIP_INS_OPTS', 'PYTHONWARNINGS', 'CURL_OPTS', 'WGET_OPTS', 'YUM_OPTS', 'CUDA_VERSION_MAJOR=10', 'CUDA_VERSION_MINOR=0', 'CMAKEVER=3.18.4', 'PROTOVER=3.10.1', 'LIBARCHIVEVER=3.4.3', 'PYTHON_VERSION_MAJOR=3', 'PYTHON_VERSION_MINOR=6', 'ARCH_SUFFIX', 'CUDA_VERSION_MAJOR=10', 'CUDA_VERSION_MINOR=0', 'CUDNN_VERSION=7']"
sony/nnabla-ext-cuda,latest,/docker/development/Dockerfile.build-mpi,FROM,2,"['centos:7 as openmpi', 'nvidia/cuda:${CUDA_VERSION_MAJOR}.${CUDA_VERSION_MINOR}-cudnn${CUDNN_VERSION}-devel-centos7']"
sony/nnabla-ext-cuda,latest,/docker/development/Dockerfile.build-mpi,ENV,11,"['LC_ALL C', 'LANG C', 'LANGUAGE C', 'LC_ALL C', 'LANG C', 'LANGUAGE C', 'PYVERNAME=${PYTHON_VERSION_MAJOR}.${PYTHON_VERSION_MINOR}', 'PATH /tmp/.local/bin:$PATH', 'LD_LIBRARY_PATH /usr/local/lib64:$LD_LIBRARY_PATH', 'CC /usr/local/bin/gcc', 'CXX /usr/local/bin/g++']"
sony/nnabla-ext-cuda,latest,/docker/development/Dockerfile.build-mpi,RUN,18,"['eval ${YUM_OPTS}     && yum install -y        epel-release        yum-utils     && yum install -y         curl         rpm-build     && yum group install -y ""Development Tools""     && yum clean all', 'mkdir /root/rpmbuild', 'cd /root/rpmbuild; curl ${CURL_OPTS} https://download.open-mpi.org/release/open-mpi/v${MPIVER%.*}/openmpi-${MPIVER}-1.src.rpm -o openmpi-${MPIVER}-1.src.rpm', 'cd /root/rpmbuild; rpmbuild --rebuild openmpi-${MPIVER}-1.src.rpm', 'mv /root/rpmbuild/RPMS/x86_64/openmpi-${MPIVER}-1.*.rpm /root', 'eval ${YUM_OPTS}     && yum install -y        epel-release        yum-utils     && yum install -y         curl         freetype-devel         git         hdf5         hdf5-devel         lapack-devel         libjpeg-devel         xz-devel         libpng-devel         redhat-lsb-core         rpm-build         unzip         wget         which         zip         zlib-static         libmpc-devel         mpfr-devel         gmp-devel         openssl-devel         bzip2-devel         libffi-devel         nsight-systems-2021.1.3         libsndfile         python-backports-lzma     && yum group install -y ""Development Tools""     && yum clean all', 'mkdir /tmp/deps     && cd /tmp/deps     && curl ${CURL_OPTS} -L https://developer.download.nvidia.com/compute/machine-learning/repos/rhel7/x86_64/nvidia-machine-learning-repo-rhel7-1.0.0-1.x86_64.rpm -o nvidia-machine-learning-repo-rhel7-1.0.0-1.x86_64.rpm     && yum install -y nvidia-machine-learning-repo-rhel7-1.0.0-1.x86_64.rpm     && yum clean all     && cd /     && rm -rf /tmp/*', 'yum install -y libnccl-*+cuda${CUDA_VERSION_MAJOR}.${CUDA_VERSION_MINOR} libnccl-devel-*+cuda${CUDA_VERSION_MAJOR}.${CUDA_VERSION_MINOR}', 'mkdir /tmp/deps     && cd /tmp/deps     && wget ${WGET_OPTS} http://ftp.tsukuba.wide.ad.jp/software/gcc/releases/gcc-6.5.0/gcc-6.5.0.tar.gz     && tar zxf gcc-6.5.0.tar.gz     && cd gcc-6.5.0     && ./configure --disable-multilib --enable-languages=c,c++     && make -j8     && make install     && cd /     && rm -rf /tmp/*', 'mkdir /tmp/deps     && cd /tmp/deps     && yum install -y cmake3 openssl-devel     && curl ${CURL_OPTS} -L https://github.com/Kitware/CMake/releases/download/v${CMAKEVER}/cmake-${CMAKEVER}.tar.gz -o cmake-${CMAKEVER}.tar.gz     && tar xf cmake-${CMAKEVER}.tar.gz     && cd cmake-${CMAKEVER}     && mkdir build     && cd build     && cmake3 -DBUILD_TESTING=FALSE ..     && make -j8     && make install     && yum remove -y cmake3     && yum clean all     && rm -rf /var/cache/yum/*     && cd /     && rm -rf /tmp/*', 'mkdir /tmp/deps     && cd /tmp/deps     && curl ${CURL_OPTS} -L https://github.com/google/protobuf/archive/v${PROTOVER}.tar.gz -o protobuf-v${PROTOVER}.tar.gz     && tar xvf protobuf-v${PROTOVER}.tar.gz     && cd protobuf-${PROTOVER}     && mkdir build     && cd build     && cmake         -DCMAKE_POSITION_INDEPENDENT_CODE=ON         -Dprotobuf_BUILD_TESTS=OFF         -DCMAKE_CXX_STANDARD=14         -D CMAKE_C_COMPILER=gcc CMAKE_CXX_COMPILER=g++ /usr/bin/gcc         ../cmake     && make -j8     && make install     && cd /     && rm -rf /tmp/*', 'mkdir /tmp/deps     && cd /tmp/deps     && curl ${CURL_OPTS} -L https://github.com/libarchive/libarchive/archive/v${LIBARCHIVEVER}.tar.gz -o libarchive-${LIBARCHIVEVER}.tar.gz     && tar xfa libarchive-${LIBARCHIVEVER}.tar.gz     && mkdir libarchive-build     && cd libarchive-build     && cmake         -DCMAKE_POSITION_INDEPENDENT_CODE=ON -DENABLE_NETTLE=FALSE -DENABLE_OPENSSL=FALSE         -DENABLE_LZO=FALSE -DENABLE_LZMA=FALSE -DENABLE_BZip2=FALSE         -DENABLE_LIBXML2=FALSE -DENABLE_EXPAT=FALSE -DENABLE_PCREPOSIX=FALSE -DENABLE_LibGCC=FALSE         -DENABLE_CNG=FALSE -DENABLE_TAR=FALSE -DENABLE_TAR_SHARED=FALSE -DENABLE_CPIO=FALSE         -DENABLE_CPIO_SHARED=FALSE -DENABLE_CAT=FALSE -DENABLE_CAT_SHARED=FALSE -DENABLE_XATTR=FALSE         -DENABLE_ACL=FALSE -DENABLE_ICONV=FALSE -DENABLE_TEST=FALSE         ../libarchive-${LIBARCHIVEVER}     && make -j8     && make install     && cd /     && rm -rf /tmp/*', 'mkdir /tmp/deps     && cd /tmp/deps     && wget ${WGET_OPTS} http://nixos.org/releases/patchelf/patchelf-0.9/patchelf-0.9.tar.bz2     && tar xfa patchelf-0.9.tar.bz2     && cd patchelf-0.9     && ./configure     && make     && make install     && cd /     && rm -rf /tmp/*', 'rpm -i /root/openmpi-*.rpm', 'if [ ""${PYVERNAME}"" == ""3.6"" ]; then wget ${WGET_OPTS} https://www.python.org/ftp/python/3.6.12/Python-3.6.12.tgz; fi \t&& if [ ""${PYVERNAME}"" == ""3.7"" ]; then wget ${WGET_OPTS} https://www.python.org/ftp/python/3.7.10/Python-3.7.10.tgz; fi \t&& if [ ""${PYVERNAME}"" == ""3.8"" ]; then wget ${WGET_OPTS} https://www.python.org/ftp/python/3.8.8/Python-3.8.8.tgz; fi \t&& if [ ""${PYVERNAME}"" == ""3.9"" ]; then wget ${WGET_OPTS} https://www.python.org/ftp/python/3.9.8/Python-3.9.8.tgz; fi \t&& tar -xzf Python-${PYVERNAME}*.tgz \t&& cd Python-${PYVERNAME}* \t&& ./configure --enable-optimizations \t&& make altinstall \t&& ln -s /usr/local/bin/python${PYVERNAME} /usr/local/bin/python \t&& ln -s /usr/local/bin/pip${PYVERNAME} /usr/local/bin/pip \t&& pip install ${PIP_INS_OPTS} -U -r /tmp/deps/requirements.txt \t&& pip install ${PIP_INS_OPTS} -U onnx \t&& pip install ${PIP_INS_OPTS} --extra-index-url https://developer.download.nvidia.com/compute/redist nvidia-dali-cuda${CUDA_VERSION_MAJOR}${CUDA_VERSION_MINOR} \t&& pip install ${PIP_INS_OPTS} torch==1.7.1+cu${CUDA_VERSION_MAJOR}${CUDA_VERSION_MINOR} -f https://download.pytorch.org/whl/torch_stable.html && echo ""PyTorch is installed"" \t   || echo ""Skip PyTorch installation"" \t&& cd .. \t&& rm -rf Python-${PYVERNAME}* \t&& rm -rf /tmp/*', 'rm -f /usr/lib64/libstdc++.so.6', 'echo NCCL_SHM_DISABLE=1 >> /etc/nccl.conf', 'echo NCCL_P2P_LEVEL=SYS >> /etc/nccl.conf']"
sony/nnabla-ext-cuda,latest,/docker/development/Dockerfile.build-mpi,COPY,1,['--from=openmpi /root/openmpi-*.rpm /root']
sony/nnabla-ext-cuda,latest,/docker/development/Dockerfile.build-mpi,ADD,1,['python/requirements.txt /tmp/deps/']
sony/nnabla-ext-cuda,latest,/docker/development/Dockerfile.build,ARG,17,"['CUDA_VERSION_MAJOR=10', 'CUDA_VERSION_MINOR=0', 'CUDNN_VERSION=7', 'PIP_INS_OPTS', 'PYTHONWARNINGS', 'CURL_OPTS', 'WGET_OPTS', 'YUM_OPTS', 'CMAKEVER=3.18.4', 'PROTOVER=3.10.1', 'LIBARCHIVEVER=3.4.3', 'PYTHON_VERSION_MAJOR=3', 'PYTHON_VERSION_MINOR=6', 'ARCH_SUFFIX', 'CUDA_VERSION_MAJOR=10', 'CUDA_VERSION_MINOR=0', 'CUDNN_VERSION=7']"
sony/nnabla-ext-cuda,latest,/docker/development/Dockerfile.build,FROM,1,['nvidia/cuda:${CUDA_VERSION_MAJOR}.${CUDA_VERSION_MINOR}-cudnn${CUDNN_VERSION}-devel-centos7']
sony/nnabla-ext-cuda,latest,/docker/development/Dockerfile.build,ENV,8,"['LC_ALL C', 'LANG C', 'LANGUAGE C', 'PYVERNAME=${PYTHON_VERSION_MAJOR}.${PYTHON_VERSION_MINOR}', 'PATH /tmp/.local/bin:$PATH', 'LD_LIBRARY_PATH /usr/local/lib64:$LD_LIBRARY_PATH', 'CC /usr/local/bin/gcc', 'CXX /usr/local/bin/g++']"
sony/nnabla-ext-cuda,latest,/docker/development/Dockerfile.build,RUN,7,"['eval ${YUM_OPTS}     && yum install -y        epel-release        yum-utils     && yum install -y         curl         freetype-devel         git         hdf5         hdf5-devel         lapack-devel         libjpeg-devel         xz-devel         libpng-devel         redhat-lsb-core         rpm-build         unzip         wget         which         zip         zlib-static         libmpc-devel         mpfr-devel         gmp-devel         openssl-devel         bzip2-devel         libffi-devel         libsndfile         python-backports-lzma     && yum group install -y ""Development Tools""     && yum clean all', 'mkdir /tmp/deps     && cd /tmp/deps     && wget ${WGET_OPTS} http://ftp.tsukuba.wide.ad.jp/software/gcc/releases/gcc-6.5.0/gcc-6.5.0.tar.gz     && tar zxf gcc-6.5.0.tar.gz     && cd gcc-6.5.0     && ./configure --disable-multilib --enable-languages=c,c++     && make -j8     && make install     && cd /     && rm -rf /tmp/*', 'mkdir /tmp/deps     && cd /tmp/deps     && yum install -y cmake3 openssl-devel     && curl ${CURL_OPTS} -L https://github.com/Kitware/CMake/releases/download/v${CMAKEVER}/cmake-${CMAKEVER}.tar.gz -o cmake-${CMAKEVER}.tar.gz     && tar xf cmake-${CMAKEVER}.tar.gz     && cd cmake-${CMAKEVER}     && mkdir build     && cd build     && cmake3 -DBUILD_TESTING=FALSE ..     && make -j8     && make install     && yum remove -y cmake3     && yum clean all     && rm -rf /var/cache/yum/*     && cd /     && rm -rf /tmp/*', 'mkdir /tmp/deps     && cd /tmp/deps     && curl ${CURL_OPTS} -L https://github.com/google/protobuf/archive/v${PROTOVER}.tar.gz -o protobuf-v${PROTOVER}.tar.gz     && tar xvf protobuf-v${PROTOVER}.tar.gz     && cd protobuf-${PROTOVER}     && mkdir build     && cd build     && cmake         -DCMAKE_POSITION_INDEPENDENT_CODE=ON         -Dprotobuf_BUILD_TESTS=OFF         -DCMAKE_CXX_STANDARD=14         -D CMAKE_C_COMPILER=gcc CMAKE_CXX_COMPILER=g++ /usr/bin/gcc         ../cmake     && make -j8     && make install     && cd /     && rm -rf /tmp/*', 'mkdir /tmp/deps     && cd /tmp/deps     && curl ${CURL_OPTS} -L https://github.com/libarchive/libarchive/archive/v${LIBARCHIVEVER}.tar.gz -o libarchive-${LIBARCHIVEVER}.tar.gz     && tar xfa libarchive-${LIBARCHIVEVER}.tar.gz     && mkdir libarchive-build     && cd libarchive-build     && cmake         -DCMAKE_POSITION_INDEPENDENT_CODE=ON -DENABLE_NETTLE=FALSE -DENABLE_OPENSSL=FALSE         -DENABLE_LZO=FALSE -DENABLE_LZMA=FALSE -DENABLE_BZip2=FALSE         -DENABLE_LIBXML2=FALSE -DENABLE_EXPAT=FALSE -DENABLE_PCREPOSIX=FALSE -DENABLE_LibGCC=FALSE         -DENABLE_CNG=FALSE -DENABLE_TAR=FALSE -DENABLE_TAR_SHARED=FALSE -DENABLE_CPIO=FALSE         -DENABLE_CPIO_SHARED=FALSE -DENABLE_CAT=FALSE -DENABLE_CAT_SHARED=FALSE -DENABLE_XATTR=FALSE         -DENABLE_ACL=FALSE -DENABLE_ICONV=FALSE -DENABLE_TEST=FALSE         ../libarchive-${LIBARCHIVEVER}     && make -j8     && make install     && cd /     && rm -rf /tmp/*', 'mkdir /tmp/deps     && cd /tmp/deps     && wget ${WGET_OPTS} http://nixos.org/releases/patchelf/patchelf-0.9/patchelf-0.9.tar.bz2     && tar xfa patchelf-0.9.tar.bz2     && cd patchelf-0.9     && ./configure     && make     && make install     && cd /     && rm -rf /tmp/*', 'if [ ""${PYVERNAME}"" == ""3.6"" ]; then wget ${WGET_OPTS} https://www.python.org/ftp/python/3.6.12/Python-3.6.12.tgz; fi \t&& if [ ""${PYVERNAME}"" == ""3.7"" ]; then wget ${WGET_OPTS} https://www.python.org/ftp/python/3.7.10/Python-3.7.10.tgz; fi \t&& if [ ""${PYVERNAME}"" == ""3.8"" ]; then wget ${WGET_OPTS} https://www.python.org/ftp/python/3.8.8/Python-3.8.8.tgz; fi \t&& if [ ""${PYVERNAME}"" == ""3.9"" ]; then wget ${WGET_OPTS} https://www.python.org/ftp/python/3.9.8/Python-3.9.8.tgz; fi \t&& tar -xzf Python-${PYVERNAME}*.tgz \t&& cd Python-${PYVERNAME}* \t&& ./configure --enable-optimizations \t&& make altinstall \t&& ln -s /usr/local/bin/python${PYVERNAME} /usr/local/bin/python \t&& ln -s /usr/local/bin/pip${PYVERNAME} /usr/local/bin/pip \t&& pip install ${PIP_INS_OPTS} -U -r /tmp/deps/requirements.txt \t&& pip install ${PIP_INS_OPTS} -U onnx \t&& pip install ${PIP_INS_OPTS} --extra-index-url https://developer.download.nvidia.com/compute/redist nvidia-dali-cuda${CUDA_VERSION_MAJOR}${CUDA_VERSION_MINOR} \t&& pip install ${PIP_INS_OPTS} torch==1.7.1+cu${CUDA_VERSION_MAJOR}${CUDA_VERSION_MINOR} -f https://download.pytorch.org/whl/torch_stable.html && echo ""PyTorch is installed"" \t   || echo ""Skip PyTorch installation"" \t&& cd .. \t&& rm -rf Python-${PYVERNAME}* \t&& rm -rf /tmp/*']"
sony/nnabla-ext-cuda,latest,/docker/development/Dockerfile.build,ADD,1,['python/requirements.txt /tmp/deps/']
sony/nnabla-ext-cuda,latest,/docker/runtime/Dockerfile.runtime-ppc64le,ARG,8,"['BASE', 'PIP_INS_OPTS', 'PYTHONWARNINGS', 'CURL_OPTS', 'WGET_OPTS', 'APT_OPTS', 'PYTHON_VERSION_MAJOR', 'PYTHON_VERSION_MINOR']"
sony/nnabla-ext-cuda,latest,/docker/runtime/Dockerfile.runtime-ppc64le,FROM,1,['${BASE}']
sony/nnabla-ext-cuda,latest,/docker/runtime/Dockerfile.runtime-ppc64le,ENV,2,"['PYVERNAME=${PYTHON_VERSION_MAJOR}.${PYTHON_VERSION_MINOR}', 'LD_LIBRARY_PATH /usr/local/lib64:$LD_LIBRARY_PATH']"
sony/nnabla-ext-cuda,latest,/docker/runtime/Dockerfile.runtime-ppc64le,RUN,10,"['eval ${APT_OPTS} && apt-get update', 'apt install -y software-properties-common', 'add-apt-repository ppa:deadsnakes/ppa', 'apt-get update     && apt-get install -y --no-install-recommends         cmake         g++         gfortran         git         libfreetype6-dev         libhdf5-dev         libjpeg-dev         liblapack-dev         libopenmpi-dev         lsb-release         make         pkg-config         wget         curl         python${PYVERNAME}     && rm -rf /var/lib/apt/lists/*', 'apt-get update     && apt-get install -y --no-install-recommends        python${PYVERNAME}-distutils || echo ""skip install python-distutils""     && apt-get clean     && rm -rf /var/lib/apt/lists/*', 'curl ${CURL_OPTS} https://bootstrap.pypa.io/get-pip.py -o get-pip.py     && python${PYVERNAME} get-pip.py ${PIP_INS_OPTS}     && rm get-pip.py', 'update-alternatives --install /usr/bin/python3 python3 /usr/bin/python${PYVERNAME} 0', 'update-alternatives --install /usr/bin/python python /usr/bin/python${PYVERNAME} 0', 'pip install ${PIP_INS_OPTS} wheel', 'pip install ${PIP_INS_OPTS} opencv-python || true']"
sony/nnabla-ext-cuda,latest,/docker/runtime/Dockerfile.runtime,ARG,11,"['BASE', 'PIP_INS_OPTS', 'PYTHONWARNINGS', 'CURL_OPTS', 'WGET_OPTS', 'APT_OPTS', 'PYTHON_VERSION_MAJOR', 'PYTHON_VERSION_MINOR', 'CUDA_VERSION_MAJOR', 'CUDA_VERSION_MINOR', 'WHL_PATH']"
sony/nnabla-ext-cuda,latest,/docker/runtime/Dockerfile.runtime,FROM,1,['ubuntu:18.04']
sony/nnabla-ext-cuda,latest,/docker/runtime/Dockerfile.runtime,ENV,2,"['PYVERNAME=${PYTHON_VERSION_MAJOR}.${PYTHON_VERSION_MINOR}', 'LD_LIBRARY_PATH /usr/lib64:/usr/local/lib64:$LD_LIBRARY_PATH']"
sony/nnabla-ext-cuda,latest,/docker/runtime/Dockerfile.runtime,RUN,13,"['eval ${APT_OPTS} && apt-get update', 'apt install -y software-properties-common', 'add-apt-repository ppa:deadsnakes/ppa', 'apt-get update', 'apt-get install -y --no-install-recommends         bzip2         ca-certificates         wget         curl         python${PYVERNAME}     && apt-get clean     && rm -rf /var/lib/apt/lists/*', 'apt-get update     && apt-get install -y --no-install-recommends        python${PYVERNAME}-distutils || echo ""skip install python-distutils""     && rm -rf /var/lib/apt/lists/*', 'curl ${CURL_OPTS} https://bootstrap.pypa.io/get-pip.py -o get-pip.py     && python${PYVERNAME} get-pip.py ${PIP_INS_OPTS}     && rm get-pip.py', 'update-alternatives --install /usr/bin/python python /usr/bin/python${PYVERNAME} 0', 'pip install ${PIP_INS_OPTS} wheel', 'pip install ${PIP_INS_OPTS} protobuf', 'pip install ${PIP_INS_OPTS} opencv-python || true', 'pip install ${PIP_INS_OPTS} --extra-index-url https://developer.download.nvidia.com/compute/redist nvidia-dali-cuda${CUDA_VERSION_MAJOR}0         || echo ""Skip DALI installation (CUDA=${CUDA_VERSION_MAJOR}.0)""', 'pip install ${PIP_INS_OPTS} /tmp/*.whl && rm -rf /tmp/*']"
sony/nnabla-ext-cuda,latest,/docker/runtime/Dockerfile.runtime,ADD,1,['$WHL_PATH/*.whl /tmp/']
sony/nnabla-ext-cuda,latest,/docker/runtime/Dockerfile.runtime-mpi,ARG,18,"['BASE', 'PIP_INS_OPTS', 'PYTHONWARNINGS', 'CURL_OPTS', 'WGET_OPTS', 'APT_OPTS', 'MPIVER=3.1.6', 'OMPI_BUILD_FLAGS', 'PIP_INS_OPTS', 'PYTHONWARNINGS', 'CURL_OPTS', 'WGET_OPTS', 'APT_OPTS', 'PYTHON_VERSION_MAJOR', 'PYTHON_VERSION_MINOR', 'CUDA_VERSION_MAJOR', 'CUDA_VERSION_MINOR', 'WHL_PATH']"
sony/nnabla-ext-cuda,latest,/docker/runtime/Dockerfile.runtime-mpi,FROM,2,"['ubuntu:18.04 as openmpi', '${BASE}']"
sony/nnabla-ext-cuda,latest,/docker/runtime/Dockerfile.runtime-mpi,RUN,20,"['eval ${APT_OPTS} && apt-get update', 'apt-get install -y --no-install-recommends         build-essential         ca-certificates         curl         gfortran         libibverbs-dev', 'mkdir /tmp/openmpi', 'curl ${CURL_OPTS} https://download.open-mpi.org/release/open-mpi/v${MPIVER%.*}/openmpi-${MPIVER}.tar.bz2 -o /tmp/openmpi/openmpi-${MPIVER}.tar.bz2', 'tar Cxvf /tmp/openmpi /tmp/openmpi/openmpi-${MPIVER}.tar.bz2', 'cd tmp/openmpi/openmpi-${MPIVER}     && ./configure         --prefix=/opt/openmpi         ${OMPI_BUILD_FLAGS}         CC=gcc         CXX=g++         F77=gfortran         FC=gfortran     && make -j20     && make install', 'eval ${APT_OPTS} && apt-get update', 'apt install -y software-properties-common', 'add-apt-repository ppa:deadsnakes/ppa', 'apt-get update', 'cd /tmp \t&& apt-get update         && apt-get install -y                bzip2                ca-certificates                openssh-client                wget                curl                python${PYVERNAME}         && rm -rf /var/lib/apt/lists/*         && cd /         && rm -rf /tmp/*', 'apt-get update     && apt-get install -y --no-install-recommends        python${PYVERNAME}-distutils || echo ""skip install python-distutils""     && rm -rf /var/lib/apt/lists/*', 'curl ${CURL_OPTS} https://bootstrap.pypa.io/get-pip.py -o get-pip.py     && python${PYVERNAME} get-pip.py ${PIP_INS_OPTS}     && rm get-pip.py', 'update-alternatives --install /usr/bin/python python /usr/bin/python${PYVERNAME} 0', 'pip install ${PIP_INS_OPTS} wheel', 'pip install ${PIP_INS_OPTS} opencv-python || true', 'pip install ${PIP_INS_OPTS} --extra-index-url https://developer.download.nvidia.com/compute/redist nvidia-dali-cuda${CUDA_VERSION_MAJOR}0     || echo ""Skip DALI installation (CUDA=${CUDA_VERSION_MAJOR}.0)""', 'pip install ${PIP_INS_OPTS} /tmp/*.whl && rm -rf /tmp/*', 'echo NCCL_SHM_DISABLE=1 >> /etc/nccl.conf', 'echo NCCL_P2P_LEVEL=SYS >> /etc/nccl.conf']"
sony/nnabla-ext-cuda,latest,/docker/runtime/Dockerfile.runtime-mpi,ENV,4,"['PYVERNAME=${PYTHON_VERSION_MAJOR}.${PYTHON_VERSION_MINOR}', 'PATH /opt/openmpi/bin:$PATH', 'LD_LIBRARY_PATH /opt/openmpi/lib:$LD_LIBRARY_PATH', 'LD_LIBRARY_PATH /usr/lib64:/usr/local/lib64:$LD_LIBRARY_PATH']"
sony/nnabla-ext-cuda,latest,/docker/runtime/Dockerfile.runtime-mpi,ADD,1,['$WHL_PATH/*.whl /tmp/']
sony/nnabla-ext-cuda,latest,/docker/runtime/Dockerfile.runtime-mpi,COPY,1,['--from=openmpi /opt/openmpi /opt/openmpi']
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py37-cuda100-mpi211,FROM,2,"['ubuntu:18.04 as flatc', 'nvidia/cuda:10.0-cudnn7-runtime-ubuntu18.04']"
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py37-cuda100-mpi211,RUN,14,"['apt-get update     && apt-get install -y --no-install-recommends        ca-certificates        curl        cmake        make        g++        git     && rm -rf /var/lib/apt/lists/*', 'umask 0     && mkdir -p /tmp/deps     && cd /tmp/deps     && git clone https://github.com/google/flatbuffers.git     && cd flatbuffers     && cmake -G ""Unix Makefiles""     && make     && make install     && cd /     && rm -rf /tmp/*', 'eval ${APT_OPTS} && apt-get update     && apt-get install -y --no-install-recommends        bzip2        ca-certificates        curl        libglib2.0-0        libgl1-mesa-glx        python3.7        python3-pip        openmpi-bin        openssh-client     && rm -rf /var/lib/apt/lists/*', 'update-alternatives --install /usr/bin/python python /usr/bin/python3.7 0', 'update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.7 0', 'pip3 install ${PIP_INS_OPTS} --upgrade pip', 'pip install ${PIP_INS_OPTS} wheel setuptools', 'pip install ${PIP_INS_OPTS} opencv-python || true', 'pip install ${PIP_INS_OPTS} --extra-index-url https://developer.download.nvidia.com/compute/redist nvidia-dali-cuda100     || echo ""Skip DALI installation (CUDA=10.0)""', 'pip install ${PIP_INS_OPTS} nnabla-ext-cuda100-nccl2-mpi2.1.1==${NNABLA_VER} nnabla_converter==${NNABLA_VER}', 'echo NCCL_SHM_DISABLE=1 >> /etc/nccl.conf', 'echo NCCL_P2P_LEVEL=SYS >> /etc/nccl.conf', 'useradd -m nnabla', 'chown -R nnabla:nnabla /home/nnabla']"
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py37-cuda100-mpi211,ARG,6,"['PIP_INS_OPTS', 'PYTHONWARNINGS', 'CURL_OPTS', 'WGET_OPTS', 'APT_OPTS', 'NNABLA_VER']"
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py37-cuda100-mpi211,COPY,1,['--from=flatc /usr/local/bin/flatc /usr/local/bin/flatc']
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py37-cuda100-mpi211,USER,1,['nnabla']
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py37-cuda100-mpi211,WORKDIR,1,['/home/nnabla']
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py37-cuda100-mpi211,CMD,1,"['[ ""/bin/bash"" ]']"
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py36-cuda102-mpi211,FROM,2,"['ubuntu:18.04 as flatc', 'nvidia/cuda:10.2-cudnn8-runtime-ubuntu18.04']"
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py36-cuda102-mpi211,RUN,14,"['apt-get update     && apt-get install -y --no-install-recommends        ca-certificates        curl        cmake        make        g++        git     && rm -rf /var/lib/apt/lists/*', 'umask 0     && mkdir -p /tmp/deps     && cd /tmp/deps     && git clone https://github.com/google/flatbuffers.git     && cd flatbuffers     && cmake -G ""Unix Makefiles""     && make     && make install     && cd /     && rm -rf /tmp/*', 'eval ${APT_OPTS} && apt-get update     && apt-get install -y --no-install-recommends        bzip2        ca-certificates        curl        libglib2.0-0        libgl1-mesa-glx        python3.6        python3-pip        openmpi-bin        openssh-client     && rm -rf /var/lib/apt/lists/*', 'update-alternatives --install /usr/bin/python python /usr/bin/python3.6 0', 'update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.6 0', 'pip3 install ${PIP_INS_OPTS} --upgrade pip', 'pip install ${PIP_INS_OPTS} wheel setuptools', 'pip install ${PIP_INS_OPTS} opencv-python || true', 'pip install ${PIP_INS_OPTS} --extra-index-url https://developer.download.nvidia.com/compute/redist nvidia-dali-cuda100     || echo ""Skip DALI installation (CUDA=10.0)""', 'pip install ${PIP_INS_OPTS} nnabla-ext-cuda102-nccl2-mpi2.1.1==${NNABLA_VER} nnabla_converter==${NNABLA_VER}', 'echo NCCL_SHM_DISABLE=1 >> /etc/nccl.conf', 'echo NCCL_P2P_LEVEL=SYS >> /etc/nccl.conf', 'useradd -m nnabla', 'chown -R nnabla:nnabla /home/nnabla']"
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py36-cuda102-mpi211,ARG,6,"['PIP_INS_OPTS', 'PYTHONWARNINGS', 'CURL_OPTS', 'WGET_OPTS', 'APT_OPTS', 'NNABLA_VER']"
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py36-cuda102-mpi211,COPY,1,['--from=flatc /usr/local/bin/flatc /usr/local/bin/flatc']
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py36-cuda102-mpi211,USER,1,['nnabla']
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py36-cuda102-mpi211,WORKDIR,1,['/home/nnabla']
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py36-cuda102-mpi211,CMD,1,"['[ ""/bin/bash"" ]']"
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py36-cuda110-mpi211,FROM,2,"['ubuntu:18.04 as flatc', 'nvidia/cuda:11.0-cudnn8-runtime-ubuntu18.04']"
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py36-cuda110-mpi211,RUN,16,"['apt-get update     && apt-get install -y --no-install-recommends        ca-certificates        curl        cmake        make        g++        git     && rm -rf /var/lib/apt/lists/*', 'umask 0     && mkdir -p /tmp/deps     && cd /tmp/deps     && git clone https://github.com/google/flatbuffers.git     && cd flatbuffers     && cmake -G ""Unix Makefiles""     && make     && make install     && cd /     && rm -rf /tmp/*', 'eval ${APT_OPTS} && apt-get update     && apt-get install -y --no-install-recommends        bzip2        ca-certificates        curl        libglib2.0-0        libgl1-mesa-glx        python3.6        python3-pip        openmpi-bin        openssh-client        ibverbs-providers        opensm        libdapl2        libibmad5        librdmacm1     && rm -rf /var/lib/apt/lists/*', 'update-alternatives --install /usr/bin/python python /usr/bin/python3.6 0', 'update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.6 0', 'pip3 install ${PIP_INS_OPTS} --upgrade pip', 'pip install ${PIP_INS_OPTS} wheel setuptools', 'pip install ${PIP_INS_OPTS} opencv-python || true', 'pip install ${PIP_INS_OPTS} --extra-index-url https://developer.download.nvidia.com/compute/redist nvidia-dali-cuda110     || echo ""Skip DALI installation (CUDA=11.0)""', 'pip install ${PIP_INS_OPTS} nnabla-ext-cuda110-nccl2-mpi2.1.1==${NNABLA_VER} nnabla_converter==${NNABLA_VER}', 'mkdir -p -m 775 /usr/local/cuda/compat/lib     && cd /usr/local/cuda/compat/lib     && for f in ../*.so*; do ln -sf $f .; done     && echo /usr/local/cuda/compat/lib > /etc/ld.so.conf.d/00-cuda-compat.conf     && ldconfig     && rm -f /usr/local/cuda/compat/lib/*.so*', 'mkdir -p -m 775 /.singularity.d/env', 'echo NCCL_SHM_DISABLE=1 >> /etc/nccl.conf', 'echo NCCL_P2P_LEVEL=SYS >> /etc/nccl.conf', 'useradd -m nnabla', 'chown -R nnabla:nnabla /home/nnabla']"
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py36-cuda110-mpi211,ARG,6,"['PIP_INS_OPTS', 'PYTHONWARNINGS', 'CURL_OPTS', 'WGET_OPTS', 'APT_OPTS', 'NNABLA_VER']"
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py36-cuda110-mpi211,COPY,6,"['--from=flatc /usr/local/bin/flatc /usr/local/bin/flatc', 'cudalibcheck /usr/local/bin/cudalibcheck', '.bashrc /home/nnabla/.bashrc', 'bash.bashrc /etc/bash.bashrc', 'shinit_v2 /etc/shinit_v2', '20-nvidia-cuda-compat.sh /.singularity.d/env/20-nvidia-cuda-compat.sh']"
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py36-cuda110-mpi211,ENV,2,"['BASH_ENV /etc/bash.bashrc', 'ENV /etc/shinit_v2']"
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py36-cuda110-mpi211,USER,1,['nnabla']
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py36-cuda110-mpi211,WORKDIR,1,['/home/nnabla']
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py36-cuda110-mpi211,CMD,1,"['[ ""/bin/bash"" ]']"
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py39-cuda110-mpi211,FROM,2,"['ubuntu:18.04 as flatc', 'nvidia/cuda:11.0-cudnn8-runtime-ubuntu18.04']"
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py39-cuda110-mpi211,ARG,11,"['PIP_INS_OPTS', 'PYTHONWARNINGS', 'CURL_OPTS', 'WGET_OPTS', 'APT_OPTS', 'PIP_INS_OPTS', 'PYTHONWARNINGS', 'CURL_OPTS', 'WGET_OPTS', 'APT_OPTS', 'NNABLA_VER']"
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py39-cuda110-mpi211,RUN,18,"['eval ${APT_OPTS}     && apt-get update     && apt-get install -y --no-install-recommends        ca-certificates        curl        cmake        make        g++        git     && rm -rf /var/lib/apt/lists/*', 'umask 0     && mkdir -p /tmp/deps     && cd /tmp/deps     && git clone https://github.com/google/flatbuffers.git     && cd flatbuffers     && cmake -G ""Unix Makefiles""     && make     && make install     && cd /     && rm -rf /tmp/*', 'eval ${APT_OPTS}     && apt-get update     && apt-get install -y --no-install-recommends     software-properties-common     && apt-get clean     && rm -rf /var/lib/apt/lists/*', 'add-apt-repository ppa:deadsnakes/ppa', 'eval ${APT_OPTS} && apt-get update     && apt-get install -y --no-install-recommends        bzip2        ca-certificates        curl        libglib2.0-0        libgl1-mesa-glx        python3.9        python3-pip        openmpi-bin        openssh-client        ibverbs-providers        opensm        libdapl2        libibmad5        librdmacm1        python3.9-distutils     && rm -rf /var/lib/apt/lists/*', 'update-alternatives --install /usr/bin/python python /usr/bin/python3.9 0', 'update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.9 0', 'pip3 install ${PIP_INS_OPTS} --upgrade pip', 'pip install ${PIP_INS_OPTS} wheel setuptools', 'pip install ${PIP_INS_OPTS} opencv-python || true', 'pip install ${PIP_INS_OPTS} --extra-index-url https://developer.download.nvidia.com/compute/redist nvidia-dali-cuda110     || echo ""Skip DALI installation (CUDA=11.0)""', 'pip install ${PIP_INS_OPTS} nnabla-ext-cuda110-nccl2-mpi2.1.1==${NNABLA_VER} nnabla_converter==${NNABLA_VER}', 'mkdir -p -m 775 /usr/local/cuda/compat/lib     && cd /usr/local/cuda/compat/lib     && for f in ../*.so*; do ln -sf $f .; done     && echo /usr/local/cuda/compat/lib > /etc/ld.so.conf.d/00-cuda-compat.conf     && ldconfig     && rm -f /usr/local/cuda/compat/lib/*.so*', 'mkdir -p -m 775 /.singularity.d/env', 'echo NCCL_SHM_DISABLE=1 >> /etc/nccl.conf', 'echo NCCL_P2P_LEVEL=SYS >> /etc/nccl.conf', 'useradd -m nnabla', 'chown -R nnabla:nnabla /home/nnabla']"
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py39-cuda110-mpi211,ENV,3,"['DEBIAN_FRONTEND noninteractive', 'BASH_ENV /etc/bash.bashrc', 'ENV /etc/shinit_v2']"
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py39-cuda110-mpi211,COPY,6,"['--from=flatc /usr/local/bin/flatc /usr/local/bin/flatc', 'cudalibcheck /usr/local/bin/cudalibcheck', '.bashrc /home/nnabla/.bashrc', 'bash.bashrc /etc/bash.bashrc', 'shinit_v2 /etc/shinit_v2', '20-nvidia-cuda-compat.sh /.singularity.d/env/20-nvidia-cuda-compat.sh']"
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py39-cuda110-mpi211,USER,1,['nnabla']
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py39-cuda110-mpi211,WORKDIR,1,['/home/nnabla']
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py39-cuda110-mpi211,CMD,1,"['[ ""/bin/bash"" ]']"
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py39-cuda102-mpi211,FROM,2,"['ubuntu:18.04 as flatc', 'nvidia/cuda:10.2-cudnn8-runtime-ubuntu18.04']"
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py39-cuda102-mpi211,ARG,11,"['PIP_INS_OPTS', 'PYTHONWARNINGS', 'CURL_OPTS', 'WGET_OPTS', 'APT_OPTS', 'PIP_INS_OPTS', 'PYTHONWARNINGS', 'CURL_OPTS', 'WGET_OPTS', 'APT_OPTS', 'NNABLA_VER']"
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py39-cuda102-mpi211,RUN,16,"['eval ${APT_OPTS}     && apt-get update     && apt-get install -y --no-install-recommends        ca-certificates        curl        cmake        make        g++        git     && rm -rf /var/lib/apt/lists/*', 'umask 0     && mkdir -p /tmp/deps     && cd /tmp/deps     && git clone https://github.com/google/flatbuffers.git     && cd flatbuffers     && cmake -G ""Unix Makefiles""     && make     && make install     && cd /     && rm -rf /tmp/*', 'eval ${APT_OPTS}     && apt-get update     && apt-get install -y --no-install-recommends     software-properties-common     && apt-get clean     && rm -rf /var/lib/apt/lists/*', 'add-apt-repository ppa:deadsnakes/ppa', 'eval ${APT_OPTS} && apt-get update     && apt-get install -y --no-install-recommends        bzip2        ca-certificates        curl        libglib2.0-0        libgl1-mesa-glx        python3.9        python3-pip        openmpi-bin        openssh-client        python3.9-distutils     && rm -rf /var/lib/apt/lists/*', 'update-alternatives --install /usr/bin/python python /usr/bin/python3.9 0', 'update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.9 0', 'pip3 install ${PIP_INS_OPTS} --upgrade pip', 'pip install ${PIP_INS_OPTS} wheel setuptools', 'pip install ${PIP_INS_OPTS} opencv-python || true', 'pip install ${PIP_INS_OPTS} --extra-index-url https://developer.download.nvidia.com/compute/redist nvidia-dali-cuda100     || echo ""Skip DALI installation (CUDA=10.0)""', 'pip install ${PIP_INS_OPTS} nnabla-ext-cuda102-nccl2-mpi2.1.1==${NNABLA_VER} nnabla_converter==${NNABLA_VER}', 'echo NCCL_SHM_DISABLE=1 >> /etc/nccl.conf', 'echo NCCL_P2P_LEVEL=SYS >> /etc/nccl.conf', 'useradd -m nnabla', 'chown -R nnabla:nnabla /home/nnabla']"
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py39-cuda102-mpi211,ENV,1,['DEBIAN_FRONTEND noninteractive']
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py39-cuda102-mpi211,COPY,1,['--from=flatc /usr/local/bin/flatc /usr/local/bin/flatc']
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py39-cuda102-mpi211,USER,1,['nnabla']
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py39-cuda102-mpi211,WORKDIR,1,['/home/nnabla']
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py39-cuda102-mpi211,CMD,1,"['[ ""/bin/bash"" ]']"
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py38-cuda100-mpi211,FROM,2,"['ubuntu:18.04 as flatc', 'nvidia/cuda:10.0-cudnn7-runtime-ubuntu18.04']"
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py38-cuda100-mpi211,ARG,11,"['PIP_INS_OPTS', 'PYTHONWARNINGS', 'CURL_OPTS', 'WGET_OPTS', 'APT_OPTS', 'PIP_INS_OPTS', 'PYTHONWARNINGS', 'CURL_OPTS', 'WGET_OPTS', 'APT_OPTS', 'NNABLA_VER']"
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py38-cuda100-mpi211,RUN,14,"['eval ${APT_OPTS}     && apt-get update     && apt-get install -y --no-install-recommends        ca-certificates        curl        cmake        make        g++        git     && rm -rf /var/lib/apt/lists/*', 'umask 0     && mkdir -p /tmp/deps     && cd /tmp/deps     && git clone https://github.com/google/flatbuffers.git     && cd flatbuffers     && cmake -G ""Unix Makefiles""     && make     && make install     && cd /     && rm -rf /tmp/*', 'eval ${APT_OPTS} && apt-get update     && apt-get install -y --no-install-recommends        bzip2        ca-certificates        curl        libglib2.0-0        libgl1-mesa-glx        python3.8        python3-pip        openmpi-bin        openssh-client     && rm -rf /var/lib/apt/lists/*', 'update-alternatives --install /usr/bin/python python /usr/bin/python3.8 0', 'update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.8 0', 'pip3 install ${PIP_INS_OPTS} --upgrade pip', 'pip install ${PIP_INS_OPTS} wheel setuptools', 'pip install ${PIP_INS_OPTS} opencv-python || true', 'pip install ${PIP_INS_OPTS} --extra-index-url https://developer.download.nvidia.com/compute/redist nvidia-dali-cuda100     || echo ""Skip DALI installation (CUDA=10.0)""', 'pip install ${PIP_INS_OPTS} nnabla-ext-cuda100-nccl2-mpi2.1.1==${NNABLA_VER} nnabla_converter==${NNABLA_VER}', 'echo NCCL_SHM_DISABLE=1 >> /etc/nccl.conf', 'echo NCCL_P2P_LEVEL=SYS >> /etc/nccl.conf', 'useradd -m nnabla', 'chown -R nnabla:nnabla /home/nnabla']"
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py38-cuda100-mpi211,COPY,1,['--from=flatc /usr/local/bin/flatc /usr/local/bin/flatc']
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py38-cuda100-mpi211,USER,1,['nnabla']
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py38-cuda100-mpi211,WORKDIR,1,['/home/nnabla']
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py38-cuda100-mpi211,CMD,1,"['[ ""/bin/bash"" ]']"
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py36-cuda110,FROM,2,"['ubuntu:18.04 as flatc', 'nvidia/cuda:11.0-cudnn8-runtime-ubuntu18.04']"
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py36-cuda110,RUN,10,"['apt-get update     && apt-get install -y --no-install-recommends        ca-certificates        curl        cmake        make        g++        git     && rm -rf /var/lib/apt/lists/*', 'umask 0     && mkdir -p /tmp/deps     && cd /tmp/deps     && git clone https://github.com/google/flatbuffers.git     && cd flatbuffers     && cmake -G ""Unix Makefiles""     && make     && make install     && cd /     && rm -rf /tmp/*', 'eval ${APT_OPTS} && apt-get update     && apt-get install -y --no-install-recommends        bzip2        ca-certificates        curl        libglib2.0-0        libgl1-mesa-glx        python3.6        python3-pip     && rm -rf /var/lib/apt/lists/*', 'update-alternatives --install /usr/bin/python python /usr/bin/python3.6 0', 'update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.6 0', 'pip3 install ${PIP_INS_OPTS} --upgrade pip', 'pip install ${PIP_INS_OPTS} wheel setuptools', 'pip install ${PIP_INS_OPTS} opencv-python || true', 'pip install ${PIP_INS_OPTS} --extra-index-url https://developer.download.nvidia.com/compute/redist nvidia-dali-cuda110     || echo ""Skip DALI installation (CUDA=11.0)""', 'pip install ${PIP_INS_OPTS} nnabla-ext-cuda110==${NNABLA_VER} nnabla_converter==${NNABLA_VER}']"
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py36-cuda110,ARG,6,"['PIP_INS_OPTS', 'PYTHONWARNINGS', 'CURL_OPTS', 'WGET_OPTS', 'APT_OPTS', 'NNABLA_VER']"
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py36-cuda110,COPY,1,['--from=flatc /usr/local/bin/flatc /usr/local/bin/flatc']
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py39-cuda100-mpi211,FROM,2,"['ubuntu:18.04 as flatc', 'nvidia/cuda:10.0-cudnn7-runtime-ubuntu18.04']"
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py39-cuda100-mpi211,ARG,11,"['PIP_INS_OPTS', 'PYTHONWARNINGS', 'CURL_OPTS', 'WGET_OPTS', 'APT_OPTS', 'PIP_INS_OPTS', 'PYTHONWARNINGS', 'CURL_OPTS', 'WGET_OPTS', 'APT_OPTS', 'NNABLA_VER']"
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py39-cuda100-mpi211,RUN,16,"['eval ${APT_OPTS}     && apt-get update     && apt-get install -y --no-install-recommends        ca-certificates        curl        cmake        make        g++        git     && rm -rf /var/lib/apt/lists/*', 'umask 0     && mkdir -p /tmp/deps     && cd /tmp/deps     && git clone https://github.com/google/flatbuffers.git     && cd flatbuffers     && cmake -G ""Unix Makefiles""     && make     && make install     && cd /     && rm -rf /tmp/*', 'eval ${APT_OPTS}     && apt-get update     && apt-get install -y --no-install-recommends     software-properties-common     && apt-get clean     && rm -rf /var/lib/apt/lists/*', 'add-apt-repository ppa:deadsnakes/ppa', 'eval ${APT_OPTS} && apt-get update     && apt-get install -y --no-install-recommends        bzip2        ca-certificates        curl        libglib2.0-0        libgl1-mesa-glx        python3.9        python3-pip        openmpi-bin        openssh-client        python3.9-distutils     && rm -rf /var/lib/apt/lists/*', 'update-alternatives --install /usr/bin/python python /usr/bin/python3.9 0', 'update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.9 0', 'pip3 install ${PIP_INS_OPTS} --upgrade pip', 'pip install ${PIP_INS_OPTS} wheel setuptools', 'pip install ${PIP_INS_OPTS} opencv-python || true', 'pip install ${PIP_INS_OPTS} --extra-index-url https://developer.download.nvidia.com/compute/redist nvidia-dali-cuda100     || echo ""Skip DALI installation (CUDA=10.0)""', 'pip install ${PIP_INS_OPTS} nnabla-ext-cuda100-nccl2-mpi2.1.1==${NNABLA_VER} nnabla_converter==${NNABLA_VER}', 'echo NCCL_SHM_DISABLE=1 >> /etc/nccl.conf', 'echo NCCL_P2P_LEVEL=SYS >> /etc/nccl.conf', 'useradd -m nnabla', 'chown -R nnabla:nnabla /home/nnabla']"
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py39-cuda100-mpi211,ENV,1,['DEBIAN_FRONTEND noninteractive']
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py39-cuda100-mpi211,COPY,1,['--from=flatc /usr/local/bin/flatc /usr/local/bin/flatc']
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py39-cuda100-mpi211,USER,1,['nnabla']
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py39-cuda100-mpi211,WORKDIR,1,['/home/nnabla']
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py39-cuda100-mpi211,CMD,1,"['[ ""/bin/bash"" ]']"
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py38-cuda110-mpi211,FROM,2,"['ubuntu:18.04 as flatc', 'nvidia/cuda:11.0-cudnn8-runtime-ubuntu18.04']"
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py38-cuda110-mpi211,ARG,11,"['PIP_INS_OPTS', 'PYTHONWARNINGS', 'CURL_OPTS', 'WGET_OPTS', 'APT_OPTS', 'PIP_INS_OPTS', 'PYTHONWARNINGS', 'CURL_OPTS', 'WGET_OPTS', 'APT_OPTS', 'NNABLA_VER']"
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py38-cuda110-mpi211,RUN,16,"['eval ${APT_OPTS}     && apt-get update     && apt-get install -y --no-install-recommends        ca-certificates        curl        cmake        make        g++        git     && rm -rf /var/lib/apt/lists/*', 'umask 0     && mkdir -p /tmp/deps     && cd /tmp/deps     && git clone https://github.com/google/flatbuffers.git     && cd flatbuffers     && cmake -G ""Unix Makefiles""     && make     && make install     && cd /     && rm -rf /tmp/*', 'eval ${APT_OPTS} && apt-get update     && apt-get install -y --no-install-recommends        bzip2        ca-certificates        curl        libglib2.0-0        libgl1-mesa-glx        python3.8        python3-pip        openmpi-bin        openssh-client        ibverbs-providers        opensm        libdapl2        libibmad5        librdmacm1     && rm -rf /var/lib/apt/lists/*', 'update-alternatives --install /usr/bin/python python /usr/bin/python3.8 0', 'update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.8 0', 'pip3 install ${PIP_INS_OPTS} --upgrade pip', 'pip install ${PIP_INS_OPTS} wheel setuptools', 'pip install ${PIP_INS_OPTS} opencv-python || true', 'pip install ${PIP_INS_OPTS} --extra-index-url https://developer.download.nvidia.com/compute/redist nvidia-dali-cuda110     || echo ""Skip DALI installation (CUDA=11.0)""', 'pip install ${PIP_INS_OPTS} nnabla-ext-cuda110-nccl2-mpi2.1.1==${NNABLA_VER} nnabla_converter==${NNABLA_VER}', 'mkdir -p -m 775 /usr/local/cuda/compat/lib     && cd /usr/local/cuda/compat/lib     && for f in ../*.so*; do ln -sf $f .; done     && echo /usr/local/cuda/compat/lib > /etc/ld.so.conf.d/00-cuda-compat.conf     && ldconfig     && rm -f /usr/local/cuda/compat/lib/*.so*', 'mkdir -p -m 775 /.singularity.d/env', 'echo NCCL_SHM_DISABLE=1 >> /etc/nccl.conf', 'echo NCCL_P2P_LEVEL=SYS >> /etc/nccl.conf', 'useradd -m nnabla', 'chown -R nnabla:nnabla /home/nnabla']"
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py38-cuda110-mpi211,COPY,6,"['--from=flatc /usr/local/bin/flatc /usr/local/bin/flatc', 'cudalibcheck /usr/local/bin/cudalibcheck', '.bashrc /home/nnabla/.bashrc', 'bash.bashrc /etc/bash.bashrc', 'shinit_v2 /etc/shinit_v2', '20-nvidia-cuda-compat.sh /.singularity.d/env/20-nvidia-cuda-compat.sh']"
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py38-cuda110-mpi211,ENV,2,"['BASH_ENV /etc/bash.bashrc', 'ENV /etc/shinit_v2']"
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py38-cuda110-mpi211,USER,1,['nnabla']
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py38-cuda110-mpi211,WORKDIR,1,['/home/nnabla']
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py38-cuda110-mpi211,CMD,1,"['[ ""/bin/bash"" ]']"
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py37-cuda110,FROM,2,"['ubuntu:18.04 as flatc', 'nvidia/cuda:11.0-cudnn8-runtime-ubuntu18.04']"
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py37-cuda110,RUN,10,"['apt-get update     && apt-get install -y --no-install-recommends        ca-certificates        curl        cmake        make        g++        git     && rm -rf /var/lib/apt/lists/*', 'umask 0     && mkdir -p /tmp/deps     && cd /tmp/deps     && git clone https://github.com/google/flatbuffers.git     && cd flatbuffers     && cmake -G ""Unix Makefiles""     && make     && make install     && cd /     && rm -rf /tmp/*', 'eval ${APT_OPTS} && apt-get update     && apt-get install -y --no-install-recommends        bzip2        ca-certificates        curl        libglib2.0-0        libgl1-mesa-glx        python3.7        python3-pip     && rm -rf /var/lib/apt/lists/*', 'update-alternatives --install /usr/bin/python python /usr/bin/python3.7 0', 'update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.7 0', 'pip3 install ${PIP_INS_OPTS} --upgrade pip', 'pip install ${PIP_INS_OPTS} wheel setuptools', 'pip install ${PIP_INS_OPTS} opencv-python || true', 'pip install ${PIP_INS_OPTS} --extra-index-url https://developer.download.nvidia.com/compute/redist nvidia-dali-cuda110     || echo ""Skip DALI installation (CUDA=11.0)""', 'pip install ${PIP_INS_OPTS} nnabla-ext-cuda110==${NNABLA_VER} nnabla_converter==${NNABLA_VER}']"
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py37-cuda110,ARG,6,"['PIP_INS_OPTS', 'PYTHONWARNINGS', 'CURL_OPTS', 'WGET_OPTS', 'APT_OPTS', 'NNABLA_VER']"
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py37-cuda110,COPY,1,['--from=flatc /usr/local/bin/flatc /usr/local/bin/flatc']
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py38-cuda102-mpi211,FROM,2,"['ubuntu:18.04 as flatc', 'nvidia/cuda:10.2-cudnn8-runtime-ubuntu18.04']"
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py38-cuda102-mpi211,ARG,11,"['PIP_INS_OPTS', 'PYTHONWARNINGS', 'CURL_OPTS', 'WGET_OPTS', 'APT_OPTS', 'PIP_INS_OPTS', 'PYTHONWARNINGS', 'CURL_OPTS', 'WGET_OPTS', 'APT_OPTS', 'NNABLA_VER']"
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py38-cuda102-mpi211,RUN,14,"['eval ${APT_OPTS}     && apt-get update     && apt-get install -y --no-install-recommends        ca-certificates        curl        cmake        make        g++        git     && rm -rf /var/lib/apt/lists/*', 'umask 0     && mkdir -p /tmp/deps     && cd /tmp/deps     && git clone https://github.com/google/flatbuffers.git     && cd flatbuffers     && cmake -G ""Unix Makefiles""     && make     && make install     && cd /     && rm -rf /tmp/*', 'eval ${APT_OPTS} && apt-get update     && apt-get install -y --no-install-recommends        bzip2        ca-certificates        curl        libglib2.0-0        libgl1-mesa-glx        python3.8        python3-pip        openmpi-bin        openssh-client     && rm -rf /var/lib/apt/lists/*', 'update-alternatives --install /usr/bin/python python /usr/bin/python3.8 0', 'update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.8 0', 'pip3 install ${PIP_INS_OPTS} --upgrade pip', 'pip install ${PIP_INS_OPTS} wheel setuptools', 'pip install ${PIP_INS_OPTS} opencv-python || true', 'pip install ${PIP_INS_OPTS} --extra-index-url https://developer.download.nvidia.com/compute/redist nvidia-dali-cuda100     || echo ""Skip DALI installation (CUDA=10.0)""', 'pip install ${PIP_INS_OPTS} nnabla-ext-cuda102-nccl2-mpi2.1.1==${NNABLA_VER} nnabla_converter==${NNABLA_VER}', 'echo NCCL_SHM_DISABLE=1 >> /etc/nccl.conf', 'echo NCCL_P2P_LEVEL=SYS >> /etc/nccl.conf', 'useradd -m nnabla', 'chown -R nnabla:nnabla /home/nnabla']"
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py38-cuda102-mpi211,COPY,1,['--from=flatc /usr/local/bin/flatc /usr/local/bin/flatc']
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py38-cuda102-mpi211,USER,1,['nnabla']
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py38-cuda102-mpi211,WORKDIR,1,['/home/nnabla']
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py38-cuda102-mpi211,CMD,1,"['[ ""/bin/bash"" ]']"
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py37-cuda102-mpi211,FROM,2,"['ubuntu:18.04 as flatc', 'nvidia/cuda:10.2-cudnn8-runtime-ubuntu18.04']"
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py37-cuda102-mpi211,RUN,14,"['apt-get update     && apt-get install -y --no-install-recommends        ca-certificates        curl        cmake        make        g++        git     && rm -rf /var/lib/apt/lists/*', 'umask 0     && mkdir -p /tmp/deps     && cd /tmp/deps     && git clone https://github.com/google/flatbuffers.git     && cd flatbuffers     && cmake -G ""Unix Makefiles""     && make     && make install     && cd /     && rm -rf /tmp/*', 'eval ${APT_OPTS} && apt-get update     && apt-get install -y --no-install-recommends        bzip2        ca-certificates        curl        libglib2.0-0        libgl1-mesa-glx        python3.7        python3-pip        openmpi-bin        openssh-client     && rm -rf /var/lib/apt/lists/*', 'update-alternatives --install /usr/bin/python python /usr/bin/python3.7 0', 'update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.7 0', 'pip3 install ${PIP_INS_OPTS} --upgrade pip', 'pip install ${PIP_INS_OPTS} wheel setuptools', 'pip install ${PIP_INS_OPTS} opencv-python || true', 'pip install ${PIP_INS_OPTS} --extra-index-url https://developer.download.nvidia.com/compute/redist nvidia-dali-cuda100     || echo ""Skip DALI installation (CUDA=10.0)""', 'pip install ${PIP_INS_OPTS} nnabla-ext-cuda102-nccl2-mpi2.1.1==${NNABLA_VER} nnabla_converter==${NNABLA_VER}', 'echo NCCL_SHM_DISABLE=1 >> /etc/nccl.conf', 'echo NCCL_P2P_LEVEL=SYS >> /etc/nccl.conf', 'useradd -m nnabla', 'chown -R nnabla:nnabla /home/nnabla']"
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py37-cuda102-mpi211,ARG,6,"['PIP_INS_OPTS', 'PYTHONWARNINGS', 'CURL_OPTS', 'WGET_OPTS', 'APT_OPTS', 'NNABLA_VER']"
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py37-cuda102-mpi211,COPY,1,['--from=flatc /usr/local/bin/flatc /usr/local/bin/flatc']
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py37-cuda102-mpi211,USER,1,['nnabla']
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py37-cuda102-mpi211,WORKDIR,1,['/home/nnabla']
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py37-cuda102-mpi211,CMD,1,"['[ ""/bin/bash"" ]']"
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py37-cuda110-mpi211,FROM,2,"['ubuntu:18.04 as flatc', 'nvidia/cuda:11.0-cudnn8-runtime-ubuntu18.04']"
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py37-cuda110-mpi211,RUN,16,"['apt-get update     && apt-get install -y --no-install-recommends        ca-certificates        curl        cmake        make        g++        git     && rm -rf /var/lib/apt/lists/*', 'umask 0     && mkdir -p /tmp/deps     && cd /tmp/deps     && git clone https://github.com/google/flatbuffers.git     && cd flatbuffers     && cmake -G ""Unix Makefiles""     && make     && make install     && cd /     && rm -rf /tmp/*', 'eval ${APT_OPTS} && apt-get update     && apt-get install -y --no-install-recommends        bzip2        ca-certificates        curl        libglib2.0-0        libgl1-mesa-glx        python3.7        python3-pip        openmpi-bin        openssh-client        ibverbs-providers        opensm        libdapl2        libibmad5        librdmacm1     && rm -rf /var/lib/apt/lists/*', 'update-alternatives --install /usr/bin/python python /usr/bin/python3.7 0', 'update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.7 0', 'pip3 install ${PIP_INS_OPTS} --upgrade pip', 'pip install ${PIP_INS_OPTS} wheel setuptools', 'pip install ${PIP_INS_OPTS} opencv-python || true', 'pip install ${PIP_INS_OPTS} --extra-index-url https://developer.download.nvidia.com/compute/redist nvidia-dali-cuda110     || echo ""Skip DALI installation (CUDA=11.0)""', 'pip install ${PIP_INS_OPTS} nnabla-ext-cuda110-nccl2-mpi2.1.1==${NNABLA_VER} nnabla_converter==${NNABLA_VER}', 'mkdir -p -m 775 /usr/local/cuda/compat/lib     && cd /usr/local/cuda/compat/lib     && for f in ../*.so*; do ln -sf $f .; done     && echo /usr/local/cuda/compat/lib > /etc/ld.so.conf.d/00-cuda-compat.conf     && ldconfig     && rm -f /usr/local/cuda/compat/lib/*.so*', 'mkdir -p -m 775 /.singularity.d/env', 'echo NCCL_SHM_DISABLE=1 >> /etc/nccl.conf', 'echo NCCL_P2P_LEVEL=SYS >> /etc/nccl.conf', 'useradd -m nnabla', 'chown -R nnabla:nnabla /home/nnabla']"
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py37-cuda110-mpi211,ARG,6,"['PIP_INS_OPTS', 'PYTHONWARNINGS', 'CURL_OPTS', 'WGET_OPTS', 'APT_OPTS', 'NNABLA_VER']"
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py37-cuda110-mpi211,COPY,6,"['--from=flatc /usr/local/bin/flatc /usr/local/bin/flatc', 'cudalibcheck /usr/local/bin/cudalibcheck', '.bashrc /home/nnabla/.bashrc', 'bash.bashrc /etc/bash.bashrc', 'shinit_v2 /etc/shinit_v2', '20-nvidia-cuda-compat.sh /.singularity.d/env/20-nvidia-cuda-compat.sh']"
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py37-cuda110-mpi211,ENV,2,"['BASH_ENV /etc/bash.bashrc', 'ENV /etc/shinit_v2']"
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py37-cuda110-mpi211,USER,1,['nnabla']
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py37-cuda110-mpi211,WORKDIR,1,['/home/nnabla']
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py37-cuda110-mpi211,CMD,1,"['[ ""/bin/bash"" ]']"
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py36-cuda100-mpi211,FROM,2,"['ubuntu:18.04 as flatc', 'nvidia/cuda:10.0-cudnn7-runtime-ubuntu18.04']"
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py36-cuda100-mpi211,RUN,14,"['apt-get update     && apt-get install -y --no-install-recommends        ca-certificates        curl        cmake        make        g++        git     && rm -rf /var/lib/apt/lists/*', 'umask 0     && mkdir -p /tmp/deps     && cd /tmp/deps     && git clone https://github.com/google/flatbuffers.git     && cd flatbuffers     && cmake -G ""Unix Makefiles""     && make     && make install     && cd /     && rm -rf /tmp/*', 'eval ${APT_OPTS} && apt-get update     && apt-get install -y --no-install-recommends        bzip2        ca-certificates        curl        libglib2.0-0        libgl1-mesa-glx        python3.6        python3-pip        openmpi-bin        openssh-client     && rm -rf /var/lib/apt/lists/*', 'update-alternatives --install /usr/bin/python python /usr/bin/python3.6 0', 'update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.6 0', 'pip3 install ${PIP_INS_OPTS} --upgrade pip', 'pip install ${PIP_INS_OPTS} wheel setuptools', 'pip install ${PIP_INS_OPTS} opencv-python || true', 'pip install ${PIP_INS_OPTS} --extra-index-url https://developer.download.nvidia.com/compute/redist nvidia-dali-cuda100     || echo ""Skip DALI installation (CUDA=10.0)""', 'pip install ${PIP_INS_OPTS} nnabla-ext-cuda100-nccl2-mpi2.1.1==${NNABLA_VER} nnabla_converter==${NNABLA_VER}', 'echo NCCL_SHM_DISABLE=1 >> /etc/nccl.conf', 'echo NCCL_P2P_LEVEL=SYS >> /etc/nccl.conf', 'useradd -m nnabla', 'chown -R nnabla:nnabla /home/nnabla']"
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py36-cuda100-mpi211,ARG,6,"['PIP_INS_OPTS', 'PYTHONWARNINGS', 'CURL_OPTS', 'WGET_OPTS', 'APT_OPTS', 'NNABLA_VER']"
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py36-cuda100-mpi211,COPY,1,['--from=flatc /usr/local/bin/flatc /usr/local/bin/flatc']
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py36-cuda100-mpi211,USER,1,['nnabla']
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py36-cuda100-mpi211,WORKDIR,1,['/home/nnabla']
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py36-cuda100-mpi211,CMD,1,"['[ ""/bin/bash"" ]']"
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py37-cuda102,FROM,2,"['ubuntu:18.04 as flatc', 'nvidia/cuda:10.2-cudnn8-runtime-ubuntu18.04']"
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py37-cuda102,RUN,10,"['apt-get update     && apt-get install -y --no-install-recommends        ca-certificates        curl        cmake        make        g++        git     && rm -rf /var/lib/apt/lists/*', 'umask 0     && mkdir -p /tmp/deps     && cd /tmp/deps     && git clone https://github.com/google/flatbuffers.git     && cd flatbuffers     && cmake -G ""Unix Makefiles""     && make     && make install     && cd /     && rm -rf /tmp/*', 'eval ${APT_OPTS} && apt-get update     && apt-get install -y --no-install-recommends        bzip2        ca-certificates        curl        libglib2.0-0        libgl1-mesa-glx        python3.7        python3-pip     && rm -rf /var/lib/apt/lists/*', 'update-alternatives --install /usr/bin/python python /usr/bin/python3.7 0', 'update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.7 0', 'pip3 install ${PIP_INS_OPTS} --upgrade pip', 'pip install ${PIP_INS_OPTS} wheel setuptools', 'pip install ${PIP_INS_OPTS} opencv-python || true', 'pip install ${PIP_INS_OPTS} --extra-index-url https://developer.download.nvidia.com/compute/redist nvidia-dali-cuda100     || echo ""Skip DALI installation (CUDA=10.0)""', 'pip install ${PIP_INS_OPTS} nnabla-ext-cuda102==${NNABLA_VER} nnabla_converter==${NNABLA_VER}']"
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py37-cuda102,ARG,6,"['PIP_INS_OPTS', 'PYTHONWARNINGS', 'CURL_OPTS', 'WGET_OPTS', 'APT_OPTS', 'NNABLA_VER']"
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py37-cuda102,COPY,1,['--from=flatc /usr/local/bin/flatc /usr/local/bin/flatc']
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py39-cuda100,FROM,1,['nvidia/cuda:10.0-cudnn7-runtime-ubuntu18.04']
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py39-cuda100,ARG,6,"['PIP_INS_OPTS', 'PYTHONWARNINGS', 'CURL_OPTS', 'WGET_OPTS', 'APT_OPTS', 'NNABLA_VER']"
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py39-cuda100,ENV,1,['DEBIAN_FRONTEND noninteractive']
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py39-cuda100,RUN,10,"['eval ${APT_OPTS}     && apt-get update     && apt-get install -y --no-install-recommends     software-properties-common     && apt-get clean     && rm -rf /var/lib/apt/lists/*', 'add-apt-repository ppa:deadsnakes/ppa', 'eval ${APT_OPTS} && apt-get update     && apt-get install -y --no-install-recommends        bzip2        ca-certificates        curl        libglib2.0-0        libgl1-mesa-glx        python3.9        python3-pip        python3.9-distutils     && rm -rf /var/lib/apt/lists/*', 'update-alternatives --install /usr/bin/python python /usr/bin/python3.9 0', 'update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.9 0', 'pip3 install ${PIP_INS_OPTS} --upgrade pip', 'pip install ${PIP_INS_OPTS} wheel setuptools', 'pip install ${PIP_INS_OPTS} opencv-python || true', 'pip install ${PIP_INS_OPTS} --extra-index-url https://developer.download.nvidia.com/compute/redist nvidia-dali-cuda100     || echo ""Skip DALI installation (CUDA=10.0)""', 'pip install ${PIP_INS_OPTS} nnabla-ext-cuda100==${NNABLA_VER}']"
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py38-cuda100,FROM,1,['nvidia/cuda:10.0-cudnn7-runtime-ubuntu18.04']
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py38-cuda100,ARG,6,"['PIP_INS_OPTS', 'PYTHONWARNINGS', 'CURL_OPTS', 'WGET_OPTS', 'APT_OPTS', 'NNABLA_VER']"
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py38-cuda100,RUN,8,"['eval ${APT_OPTS} && apt-get update     && apt-get install -y --no-install-recommends        bzip2        ca-certificates        curl        libglib2.0-0        libgl1-mesa-glx        python3.8        python3-pip     && rm -rf /var/lib/apt/lists/*', 'update-alternatives --install /usr/bin/python python /usr/bin/python3.8 0', 'update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.8 0', 'pip3 install ${PIP_INS_OPTS} --upgrade pip', 'pip install ${PIP_INS_OPTS} wheel setuptools', 'pip install ${PIP_INS_OPTS} opencv-python || true', 'pip install ${PIP_INS_OPTS} --extra-index-url https://developer.download.nvidia.com/compute/redist nvidia-dali-cuda100     || echo ""Skip DALI installation (CUDA=10.0)""', 'pip install ${PIP_INS_OPTS} nnabla-ext-cuda100==${NNABLA_VER}']"
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py36-cuda102,FROM,2,"['ubuntu:18.04 as flatc', 'nvidia/cuda:10.2-cudnn8-runtime-ubuntu18.04']"
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py36-cuda102,RUN,10,"['apt-get update     && apt-get install -y --no-install-recommends        ca-certificates        curl        cmake        make        g++        git     && rm -rf /var/lib/apt/lists/*', 'umask 0     && mkdir -p /tmp/deps     && cd /tmp/deps     && git clone https://github.com/google/flatbuffers.git     && cd flatbuffers     && cmake -G ""Unix Makefiles""     && make     && make install     && cd /     && rm -rf /tmp/*', 'eval ${APT_OPTS} && apt-get update     && apt-get install -y --no-install-recommends        bzip2        ca-certificates        curl        libglib2.0-0        libgl1-mesa-glx        python3.6        python3-pip     && rm -rf /var/lib/apt/lists/*', 'update-alternatives --install /usr/bin/python python /usr/bin/python3.6 0', 'update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.6 0', 'pip3 install ${PIP_INS_OPTS} --upgrade pip', 'pip install ${PIP_INS_OPTS} wheel setuptools', 'pip install ${PIP_INS_OPTS} opencv-python || true', 'pip install ${PIP_INS_OPTS} --extra-index-url https://developer.download.nvidia.com/compute/redist nvidia-dali-cuda100     || echo ""Skip DALI installation (CUDA=10.0)""', 'pip install ${PIP_INS_OPTS} nnabla-ext-cuda102==${NNABLA_VER} nnabla_converter==${NNABLA_VER}']"
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py36-cuda102,ARG,6,"['PIP_INS_OPTS', 'PYTHONWARNINGS', 'CURL_OPTS', 'WGET_OPTS', 'APT_OPTS', 'NNABLA_VER']"
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py36-cuda102,COPY,1,['--from=flatc /usr/local/bin/flatc /usr/local/bin/flatc']
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py38-cuda110,FROM,1,['nvidia/cuda:11.0-cudnn8-runtime-ubuntu18.04']
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py38-cuda110,ARG,6,"['PIP_INS_OPTS', 'PYTHONWARNINGS', 'CURL_OPTS', 'WGET_OPTS', 'APT_OPTS', 'NNABLA_VER']"
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py38-cuda110,RUN,8,"['eval ${APT_OPTS} && apt-get update     && apt-get install -y --no-install-recommends        bzip2        ca-certificates        curl        libglib2.0-0        libgl1-mesa-glx        python3.8        python3-pip     && rm -rf /var/lib/apt/lists/*', 'update-alternatives --install /usr/bin/python python /usr/bin/python3.8 0', 'update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.8 0', 'pip3 install ${PIP_INS_OPTS} --upgrade pip', 'pip install ${PIP_INS_OPTS} wheel setuptools', 'pip install ${PIP_INS_OPTS} opencv-python || true', 'pip install ${PIP_INS_OPTS} --extra-index-url https://developer.download.nvidia.com/compute/redist nvidia-dali-cuda110     || echo ""Skip DALI installation (CUDA=11.0)""', 'pip install ${PIP_INS_OPTS} nnabla-ext-cuda110==${NNABLA_VER}']"
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py39-cuda110,FROM,1,['nvidia/cuda:11.0-cudnn8-runtime-ubuntu18.04']
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py39-cuda110,ARG,6,"['PIP_INS_OPTS', 'PYTHONWARNINGS', 'CURL_OPTS', 'WGET_OPTS', 'APT_OPTS', 'NNABLA_VER']"
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py39-cuda110,ENV,1,['DEBIAN_FRONTEND noninteractive']
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py39-cuda110,RUN,10,"['eval ${APT_OPTS}     && apt-get update     && apt-get install -y --no-install-recommends     software-properties-common     && apt-get clean     && rm -rf /var/lib/apt/lists/*', 'add-apt-repository ppa:deadsnakes/ppa', 'eval ${APT_OPTS} && apt-get update     && apt-get install -y --no-install-recommends        bzip2        ca-certificates        curl        libglib2.0-0        libgl1-mesa-glx        python3.9        python3-pip        python3.9-distutils     && rm -rf /var/lib/apt/lists/*', 'update-alternatives --install /usr/bin/python python /usr/bin/python3.9 0', 'update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.9 0', 'pip3 install ${PIP_INS_OPTS} --upgrade pip', 'pip install ${PIP_INS_OPTS} wheel setuptools', 'pip install ${PIP_INS_OPTS} opencv-python || true', 'pip install ${PIP_INS_OPTS} --extra-index-url https://developer.download.nvidia.com/compute/redist nvidia-dali-cuda110     || echo ""Skip DALI installation (CUDA=11.0)""', 'pip install ${PIP_INS_OPTS} nnabla-ext-cuda110==${NNABLA_VER}']"
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py37-cuda100-mpi316,FROM,3,"['ubuntu:18.04 as flatc', 'ubuntu:18.04 as openmpi', 'nvidia/cuda:10.0-cudnn7-runtime-ubuntu18.04']"
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py37-cuda100-mpi316,RUN,21,"['apt-get update     && apt-get install -y --no-install-recommends        ca-certificates        curl        cmake        make        g++        git     && rm -rf /var/lib/apt/lists/*', 'umask 0     && mkdir -p /tmp/deps     && cd /tmp/deps     && git clone https://github.com/google/flatbuffers.git     && cd flatbuffers     && cmake -G ""Unix Makefiles""     && make     && make install     && cd /     && rm -rf /tmp/*', 'eval ${APT_OPTS} && apt-get update', 'apt-get install -y --no-install-recommends         build-essential         curl         gfortran         libibverbs-dev', 'apt-get install -y --no-install-recommends ca-certificates', 'mkdir /tmp/openmpi', 'curl ${CURL_OPTS} https://download.open-mpi.org/release/open-mpi/v3.1/openmpi-3.1.6.tar.bz2 -o /tmp/openmpi/openmpi-3.1.6.tar.bz2', 'tar Cxvf /tmp/openmpi /tmp/openmpi/openmpi-3.1.6.tar.bz2', 'cd tmp/openmpi/openmpi-3.1.6     && ./configure         --prefix=/opt/openmpi --enable-orterun-prefix-by-default --with-sge         CC=gcc         CXX=g++         F77=gfortran         FC=gfortran     && make -j8     && make install', 'eval ${APT_OPTS} && apt-get update     && apt-get install -y --no-install-recommends        bzip2        ca-certificates        curl        libglib2.0-0        libgl1-mesa-glx        python3.7        python3-pip        openssh-client     && rm -rf /var/lib/apt/lists/*', 'update-alternatives --install /usr/bin/python python /usr/bin/python3.7 0', 'update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.7 0', 'pip3 install ${PIP_INS_OPTS} --upgrade pip', 'pip install ${PIP_INS_OPTS} wheel setuptools', 'pip install ${PIP_INS_OPTS} opencv-python || true', 'pip install ${PIP_INS_OPTS} --extra-index-url https://developer.download.nvidia.com/compute/redist nvidia-dali-cuda100     || echo ""Skip DALI installation (CUDA=10.0)""', 'pip install ${PIP_INS_OPTS} nnabla-ext-cuda100-nccl2-mpi3.1.6==${NNABLA_VER} nnabla_converter==${NNABLA_VER}', 'echo NCCL_SHM_DISABLE=1 >> /etc/nccl.conf', 'echo NCCL_P2P_LEVEL=SYS >> /etc/nccl.conf', 'useradd -m nnabla', 'chown -R nnabla:nnabla /home/nnabla']"
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py37-cuda100-mpi316,ARG,11,"['PIP_INS_OPTS', 'PYTHONWARNINGS', 'CURL_OPTS', 'WGET_OPTS', 'APT_OPTS', 'PIP_INS_OPTS', 'PYTHONWARNINGS', 'CURL_OPTS', 'WGET_OPTS', 'APT_OPTS', 'NNABLA_VER']"
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py37-cuda100-mpi316,COPY,2,"['--from=openmpi /opt/openmpi /opt/openmpi', '--from=flatc /usr/local/bin/flatc /usr/local/bin/flatc']"
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py37-cuda100-mpi316,ENV,2,"['PATH /opt/openmpi/bin:$PATH', 'LD_LIBRARY_PATH /opt/openmpi/lib:$LD_LIBRARY_PATH']"
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py37-cuda100-mpi316,USER,1,['nnabla']
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py37-cuda100-mpi316,WORKDIR,1,['/home/nnabla']
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py37-cuda100-mpi316,CMD,1,"['[ ""/bin/bash"" ]']"
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py36-cuda110-mpi316,FROM,3,"['ubuntu:18.04 as flatc', 'ubuntu:18.04 as openmpi', 'nvidia/cuda:11.0-cudnn8-runtime-ubuntu18.04']"
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py36-cuda110-mpi316,RUN,23,"['apt-get update     && apt-get install -y --no-install-recommends        ca-certificates        curl        cmake        make        g++        git     && rm -rf /var/lib/apt/lists/*', 'umask 0     && mkdir -p /tmp/deps     && cd /tmp/deps     && git clone https://github.com/google/flatbuffers.git     && cd flatbuffers     && cmake -G ""Unix Makefiles""     && make     && make install     && cd /     && rm -rf /tmp/*', 'eval ${APT_OPTS} && apt-get update', 'apt-get install -y --no-install-recommends         build-essential         curl         gfortran         libibverbs-dev', 'apt-get install -y --no-install-recommends ca-certificates', 'mkdir /tmp/openmpi', 'curl ${CURL_OPTS} https://download.open-mpi.org/release/open-mpi/v3.1/openmpi-3.1.6.tar.bz2 -o /tmp/openmpi/openmpi-3.1.6.tar.bz2', 'tar Cxvf /tmp/openmpi /tmp/openmpi/openmpi-3.1.6.tar.bz2', 'cd tmp/openmpi/openmpi-3.1.6     && ./configure         --prefix=/opt/openmpi --enable-orterun-prefix-by-default --with-sge         CC=gcc         CXX=g++         F77=gfortran         FC=gfortran     && make -j8     && make install', 'eval ${APT_OPTS} && apt-get update     && apt-get install -y --no-install-recommends        bzip2        ca-certificates        curl        libglib2.0-0        libgl1-mesa-glx        python3.6        python3-pip        openssh-client        ibverbs-providers        opensm        libdapl2        libibmad5        librdmacm1     && rm -rf /var/lib/apt/lists/*', 'update-alternatives --install /usr/bin/python python /usr/bin/python3.6 0', 'update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.6 0', 'pip3 install ${PIP_INS_OPTS} --upgrade pip', 'pip install ${PIP_INS_OPTS} wheel setuptools', 'pip install ${PIP_INS_OPTS} opencv-python || true', 'pip install ${PIP_INS_OPTS} --extra-index-url https://developer.download.nvidia.com/compute/redist nvidia-dali-cuda110     || echo ""Skip DALI installation (CUDA=11.0)""', 'pip install ${PIP_INS_OPTS} nnabla-ext-cuda110-nccl2-mpi3.1.6==${NNABLA_VER} nnabla_converter==${NNABLA_VER}', 'mkdir -p -m 775 /usr/local/cuda/compat/lib     && cd /usr/local/cuda/compat/lib     && for f in ../*.so*; do ln -sf $f .; done     && echo /usr/local/cuda/compat/lib > /etc/ld.so.conf.d/00-cuda-compat.conf     && ldconfig     && rm -f /usr/local/cuda/compat/lib/*.so*', 'mkdir -p -m 775 /.singularity.d/env', 'echo NCCL_SHM_DISABLE=1 >> /etc/nccl.conf', 'echo NCCL_P2P_LEVEL=SYS >> /etc/nccl.conf', 'useradd -m nnabla', 'chown -R nnabla:nnabla /home/nnabla']"
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py36-cuda110-mpi316,ARG,11,"['PIP_INS_OPTS', 'PYTHONWARNINGS', 'CURL_OPTS', 'WGET_OPTS', 'APT_OPTS', 'PIP_INS_OPTS', 'PYTHONWARNINGS', 'CURL_OPTS', 'WGET_OPTS', 'APT_OPTS', 'NNABLA_VER']"
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py36-cuda110-mpi316,COPY,7,"['--from=openmpi /opt/openmpi /opt/openmpi', '--from=flatc /usr/local/bin/flatc /usr/local/bin/flatc', 'cudalibcheck /usr/local/bin/cudalibcheck', '.bashrc /home/nnabla/.bashrc', 'bash.bashrc /etc/bash.bashrc', 'shinit_v2 /etc/shinit_v2', '20-nvidia-cuda-compat.sh /.singularity.d/env/20-nvidia-cuda-compat.sh']"
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py36-cuda110-mpi316,ENV,4,"['PATH /opt/openmpi/bin:$PATH', 'LD_LIBRARY_PATH /opt/openmpi/lib:$LD_LIBRARY_PATH', 'BASH_ENV /etc/bash.bashrc', 'ENV /etc/shinit_v2']"
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py36-cuda110-mpi316,USER,1,['nnabla']
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py36-cuda110-mpi316,WORKDIR,1,['/home/nnabla']
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py36-cuda110-mpi316,CMD,1,"['[ ""/bin/bash"" ]']"
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py39-cuda102,FROM,1,['nvidia/cuda:10.2-cudnn8-runtime-ubuntu18.04']
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py39-cuda102,ARG,6,"['PIP_INS_OPTS', 'PYTHONWARNINGS', 'CURL_OPTS', 'WGET_OPTS', 'APT_OPTS', 'NNABLA_VER']"
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py39-cuda102,ENV,1,['DEBIAN_FRONTEND noninteractive']
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py39-cuda102,RUN,10,"['eval ${APT_OPTS}     && apt-get update     && apt-get install -y --no-install-recommends     software-properties-common     && apt-get clean     && rm -rf /var/lib/apt/lists/*', 'add-apt-repository ppa:deadsnakes/ppa', 'eval ${APT_OPTS} && apt-get update     && apt-get install -y --no-install-recommends        bzip2        ca-certificates        curl        libglib2.0-0        libgl1-mesa-glx        python3.9        python3-pip        python3.9-distutils     && rm -rf /var/lib/apt/lists/*', 'update-alternatives --install /usr/bin/python python /usr/bin/python3.9 0', 'update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.9 0', 'pip3 install ${PIP_INS_OPTS} --upgrade pip', 'pip install ${PIP_INS_OPTS} wheel setuptools', 'pip install ${PIP_INS_OPTS} opencv-python || true', 'pip install ${PIP_INS_OPTS} --extra-index-url https://developer.download.nvidia.com/compute/redist nvidia-dali-cuda100     || echo ""Skip DALI installation (CUDA=10.0)""', 'pip install ${PIP_INS_OPTS} nnabla-ext-cuda102==${NNABLA_VER}']"
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py36-cuda102-mpi316,FROM,3,"['ubuntu:18.04 as flatc', 'ubuntu:18.04 as openmpi', 'nvidia/cuda:10.2-cudnn8-runtime-ubuntu18.04']"
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py36-cuda102-mpi316,RUN,21,"['apt-get update     && apt-get install -y --no-install-recommends        ca-certificates        curl        cmake        make        g++        git     && rm -rf /var/lib/apt/lists/*', 'umask 0     && mkdir -p /tmp/deps     && cd /tmp/deps     && git clone https://github.com/google/flatbuffers.git     && cd flatbuffers     && cmake -G ""Unix Makefiles""     && make     && make install     && cd /     && rm -rf /tmp/*', 'eval ${APT_OPTS} && apt-get update', 'apt-get install -y --no-install-recommends         build-essential         curl         gfortran         libibverbs-dev', 'apt-get install -y --no-install-recommends ca-certificates', 'mkdir /tmp/openmpi', 'curl ${CURL_OPTS} https://download.open-mpi.org/release/open-mpi/v3.1/openmpi-3.1.6.tar.bz2 -o /tmp/openmpi/openmpi-3.1.6.tar.bz2', 'tar Cxvf /tmp/openmpi /tmp/openmpi/openmpi-3.1.6.tar.bz2', 'cd tmp/openmpi/openmpi-3.1.6     && ./configure         --prefix=/opt/openmpi --enable-orterun-prefix-by-default --with-sge         CC=gcc         CXX=g++         F77=gfortran         FC=gfortran     && make -j8     && make install', 'eval ${APT_OPTS} && apt-get update     && apt-get install -y --no-install-recommends        bzip2        ca-certificates        curl        libglib2.0-0        libgl1-mesa-glx        python3.6        python3-pip        openssh-client     && rm -rf /var/lib/apt/lists/*', 'update-alternatives --install /usr/bin/python python /usr/bin/python3.6 0', 'update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.6 0', 'pip3 install ${PIP_INS_OPTS} --upgrade pip', 'pip install ${PIP_INS_OPTS} wheel setuptools', 'pip install ${PIP_INS_OPTS} opencv-python || true', 'pip install ${PIP_INS_OPTS} --extra-index-url https://developer.download.nvidia.com/compute/redist nvidia-dali-cuda100     || echo ""Skip DALI installation (CUDA=10.0)""', 'pip install ${PIP_INS_OPTS} nnabla-ext-cuda102-nccl2-mpi3.1.6==${NNABLA_VER} nnabla_converter==${NNABLA_VER}', 'echo NCCL_SHM_DISABLE=1 >> /etc/nccl.conf', 'echo NCCL_P2P_LEVEL=SYS >> /etc/nccl.conf', 'useradd -m nnabla', 'chown -R nnabla:nnabla /home/nnabla']"
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py36-cuda102-mpi316,ARG,11,"['PIP_INS_OPTS', 'PYTHONWARNINGS', 'CURL_OPTS', 'WGET_OPTS', 'APT_OPTS', 'PIP_INS_OPTS', 'PYTHONWARNINGS', 'CURL_OPTS', 'WGET_OPTS', 'APT_OPTS', 'NNABLA_VER']"
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py36-cuda102-mpi316,COPY,2,"['--from=openmpi /opt/openmpi /opt/openmpi', '--from=flatc /usr/local/bin/flatc /usr/local/bin/flatc']"
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py36-cuda102-mpi316,ENV,2,"['PATH /opt/openmpi/bin:$PATH', 'LD_LIBRARY_PATH /opt/openmpi/lib:$LD_LIBRARY_PATH']"
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py36-cuda102-mpi316,USER,1,['nnabla']
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py36-cuda102-mpi316,WORKDIR,1,['/home/nnabla']
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py36-cuda102-mpi316,CMD,1,"['[ ""/bin/bash"" ]']"
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py39-cuda102-mpi316,FROM,3,"['ubuntu:18.04 as flatc', 'ubuntu:18.04 as openmpi', 'nvidia/cuda:10.2-cudnn8-runtime-ubuntu18.04']"
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py39-cuda102-mpi316,ARG,16,"['PIP_INS_OPTS', 'PYTHONWARNINGS', 'CURL_OPTS', 'WGET_OPTS', 'APT_OPTS', 'PIP_INS_OPTS', 'PYTHONWARNINGS', 'CURL_OPTS', 'WGET_OPTS', 'APT_OPTS', 'PIP_INS_OPTS', 'PYTHONWARNINGS', 'CURL_OPTS', 'WGET_OPTS', 'APT_OPTS', 'NNABLA_VER']"
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py39-cuda102-mpi316,RUN,23,"['eval ${APT_OPTS}     && apt-get update     && apt-get install -y --no-install-recommends        ca-certificates        curl        cmake        make        g++        git     && rm -rf /var/lib/apt/lists/*', 'umask 0     && mkdir -p /tmp/deps     && cd /tmp/deps     && git clone https://github.com/google/flatbuffers.git     && cd flatbuffers     && cmake -G ""Unix Makefiles""     && make     && make install     && cd /     && rm -rf /tmp/*', 'eval ${APT_OPTS} && apt-get update', 'apt-get install -y --no-install-recommends         build-essential         curl         gfortran         libibverbs-dev', 'apt-get install -y --no-install-recommends ca-certificates', 'mkdir /tmp/openmpi', 'curl ${CURL_OPTS} https://download.open-mpi.org/release/open-mpi/v3.1/openmpi-3.1.6.tar.bz2 -o /tmp/openmpi/openmpi-3.1.6.tar.bz2', 'tar Cxvf /tmp/openmpi /tmp/openmpi/openmpi-3.1.6.tar.bz2', 'cd tmp/openmpi/openmpi-3.1.6     && ./configure         --prefix=/opt/openmpi --enable-orterun-prefix-by-default --with-sge         CC=gcc         CXX=g++         F77=gfortran         FC=gfortran     && make -j8     && make install', 'eval ${APT_OPTS}     && apt-get update     && apt-get install -y --no-install-recommends     software-properties-common     && apt-get clean     && rm -rf /var/lib/apt/lists/*', 'add-apt-repository ppa:deadsnakes/ppa', 'eval ${APT_OPTS} && apt-get update     && apt-get install -y --no-install-recommends        bzip2        ca-certificates        curl        libglib2.0-0        libgl1-mesa-glx        python3.9        python3-pip        openssh-client        python3.9-distutils     && rm -rf /var/lib/apt/lists/*', 'update-alternatives --install /usr/bin/python python /usr/bin/python3.9 0', 'update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.9 0', 'pip3 install ${PIP_INS_OPTS} --upgrade pip', 'pip install ${PIP_INS_OPTS} wheel setuptools', 'pip install ${PIP_INS_OPTS} opencv-python || true', 'pip install ${PIP_INS_OPTS} --extra-index-url https://developer.download.nvidia.com/compute/redist nvidia-dali-cuda100     || echo ""Skip DALI installation (CUDA=10.0)""', 'pip install ${PIP_INS_OPTS} nnabla-ext-cuda102-nccl2-mpi3.1.6==${NNABLA_VER} nnabla_converter==${NNABLA_VER}', 'echo NCCL_SHM_DISABLE=1 >> /etc/nccl.conf', 'echo NCCL_P2P_LEVEL=SYS >> /etc/nccl.conf', 'useradd -m nnabla', 'chown -R nnabla:nnabla /home/nnabla']"
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py39-cuda102-mpi316,ENV,3,"['DEBIAN_FRONTEND noninteractive', 'PATH /opt/openmpi/bin:$PATH', 'LD_LIBRARY_PATH /opt/openmpi/lib:$LD_LIBRARY_PATH']"
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py39-cuda102-mpi316,COPY,2,"['--from=openmpi /opt/openmpi /opt/openmpi', '--from=flatc /usr/local/bin/flatc /usr/local/bin/flatc']"
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py39-cuda102-mpi316,USER,1,['nnabla']
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py39-cuda102-mpi316,WORKDIR,1,['/home/nnabla']
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py39-cuda102-mpi316,CMD,1,"['[ ""/bin/bash"" ]']"
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py39-cuda110-mpi316,FROM,3,"['ubuntu:18.04 as flatc', 'ubuntu:18.04 as openmpi', 'nvidia/cuda:11.0-cudnn8-runtime-ubuntu18.04']"
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py39-cuda110-mpi316,ARG,16,"['PIP_INS_OPTS', 'PYTHONWARNINGS', 'CURL_OPTS', 'WGET_OPTS', 'APT_OPTS', 'PIP_INS_OPTS', 'PYTHONWARNINGS', 'CURL_OPTS', 'WGET_OPTS', 'APT_OPTS', 'PIP_INS_OPTS', 'PYTHONWARNINGS', 'CURL_OPTS', 'WGET_OPTS', 'APT_OPTS', 'NNABLA_VER']"
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py39-cuda110-mpi316,RUN,25,"['eval ${APT_OPTS}     && apt-get update     && apt-get install -y --no-install-recommends        ca-certificates        curl        cmake        make        g++        git     && rm -rf /var/lib/apt/lists/*', 'umask 0     && mkdir -p /tmp/deps     && cd /tmp/deps     && git clone https://github.com/google/flatbuffers.git     && cd flatbuffers     && cmake -G ""Unix Makefiles""     && make     && make install     && cd /     && rm -rf /tmp/*', 'eval ${APT_OPTS} && apt-get update', 'apt-get install -y --no-install-recommends         build-essential         curl         gfortran         libibverbs-dev', 'apt-get install -y --no-install-recommends ca-certificates', 'mkdir /tmp/openmpi', 'curl ${CURL_OPTS} https://download.open-mpi.org/release/open-mpi/v3.1/openmpi-3.1.6.tar.bz2 -o /tmp/openmpi/openmpi-3.1.6.tar.bz2', 'tar Cxvf /tmp/openmpi /tmp/openmpi/openmpi-3.1.6.tar.bz2', 'cd tmp/openmpi/openmpi-3.1.6     && ./configure         --prefix=/opt/openmpi --enable-orterun-prefix-by-default --with-sge         CC=gcc         CXX=g++         F77=gfortran         FC=gfortran     && make -j8     && make install', 'eval ${APT_OPTS}     && apt-get update     && apt-get install -y --no-install-recommends     software-properties-common     && apt-get clean     && rm -rf /var/lib/apt/lists/*', 'add-apt-repository ppa:deadsnakes/ppa', 'eval ${APT_OPTS}     && apt-get update     && apt-get install -y --no-install-recommends        bzip2        ca-certificates        curl        libglib2.0-0        libgl1-mesa-glx        python3.9        python3-pip        openssh-client        ibverbs-providers        opensm        libdapl2        libibmad5        librdmacm1        python3.9-distutils     && rm -rf /var/lib/apt/lists/*', 'update-alternatives --install /usr/bin/python python /usr/bin/python3.9 0', 'update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.9 0', 'pip3 install ${PIP_INS_OPTS} --upgrade pip', 'pip install ${PIP_INS_OPTS} wheel setuptools', 'pip install ${PIP_INS_OPTS} opencv-python || true', 'pip install ${PIP_INS_OPTS} --extra-index-url https://developer.download.nvidia.com/compute/redist nvidia-dali-cuda110     || echo ""Skip DALI installation (CUDA=11.0)""', 'pip install ${PIP_INS_OPTS} nnabla-ext-cuda110-nccl2-mpi3.1.6==${NNABLA_VER} nnabla_converter==${NNABLA_VER}', 'mkdir -p -m 775 /usr/local/cuda/compat/lib     && cd /usr/local/cuda/compat/lib     && for f in ../*.so*; do ln -sf $f .; done     && echo /usr/local/cuda/compat/lib > /etc/ld.so.conf.d/00-cuda-compat.conf     && ldconfig     && rm -f /usr/local/cuda/compat/lib/*.so*', 'mkdir -p -m 775 /.singularity.d/env', 'echo NCCL_SHM_DISABLE=1 >> /etc/nccl.conf', 'echo NCCL_P2P_LEVEL=SYS >> /etc/nccl.conf', 'useradd -m nnabla', 'chown -R nnabla:nnabla /home/nnabla']"
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py39-cuda110-mpi316,ENV,5,"['DEBIAN_FRONTEND noninteractive', 'PATH /opt/openmpi/bin:$PATH', 'LD_LIBRARY_PATH /opt/openmpi/lib:$LD_LIBRARY_PATH', 'BASH_ENV /etc/bash.bashrc', 'ENV /etc/shinit_v2']"
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py39-cuda110-mpi316,COPY,7,"['--from=openmpi /opt/openmpi /opt/openmpi', '--from=flatc /usr/local/bin/flatc /usr/local/bin/flatc', 'cudalibcheck /usr/local/bin/cudalibcheck', '.bashrc /home/nnabla/.bashrc', 'bash.bashrc /etc/bash.bashrc', 'shinit_v2 /etc/shinit_v2', '20-nvidia-cuda-compat.sh /.singularity.d/env/20-nvidia-cuda-compat.sh']"
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py39-cuda110-mpi316,USER,1,['nnabla']
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py39-cuda110-mpi316,WORKDIR,1,['/home/nnabla']
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py39-cuda110-mpi316,CMD,1,"['[ ""/bin/bash"" ]']"
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py38-cuda100-mpi316,FROM,3,"['ubuntu:18.04 as flatc', 'ubuntu:18.04 as openmpi', 'nvidia/cuda:10.0-cudnn7-runtime-ubuntu18.04']"
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py38-cuda100-mpi316,ARG,16,"['PIP_INS_OPTS', 'PYTHONWARNINGS', 'CURL_OPTS', 'WGET_OPTS', 'APT_OPTS', 'PIP_INS_OPTS', 'PYTHONWARNINGS', 'CURL_OPTS', 'WGET_OPTS', 'APT_OPTS', 'PIP_INS_OPTS', 'PYTHONWARNINGS', 'CURL_OPTS', 'WGET_OPTS', 'APT_OPTS', 'NNABLA_VER']"
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py38-cuda100-mpi316,RUN,21,"['eval ${APT_OPTS}     && apt-get update     && apt-get install -y --no-install-recommends        ca-certificates        curl        cmake        make        g++        git     && rm -rf /var/lib/apt/lists/*', 'umask 0     && mkdir -p /tmp/deps     && cd /tmp/deps     && git clone https://github.com/google/flatbuffers.git     && cd flatbuffers     && cmake -G ""Unix Makefiles""     && make     && make install     && cd /     && rm -rf /tmp/*', 'eval ${APT_OPTS} && apt-get update', 'apt-get install -y --no-install-recommends         build-essential         curl         gfortran         libibverbs-dev', 'apt-get install -y --no-install-recommends ca-certificates', 'mkdir /tmp/openmpi', 'curl ${CURL_OPTS} https://download.open-mpi.org/release/open-mpi/v3.1/openmpi-3.1.6.tar.bz2 -o /tmp/openmpi/openmpi-3.1.6.tar.bz2', 'tar Cxvf /tmp/openmpi /tmp/openmpi/openmpi-3.1.6.tar.bz2', 'cd tmp/openmpi/openmpi-3.1.6     && ./configure         --prefix=/opt/openmpi --enable-orterun-prefix-by-default --with-sge         CC=gcc         CXX=g++         F77=gfortran         FC=gfortran     && make -j8     && make install', 'eval ${APT_OPTS} && apt-get update     && apt-get install -y --no-install-recommends        bzip2        ca-certificates        curl        libglib2.0-0        libgl1-mesa-glx        python3.8        python3-pip        openssh-client     && rm -rf /var/lib/apt/lists/*', 'update-alternatives --install /usr/bin/python python /usr/bin/python3.8 0', 'update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.8 0', 'pip3 install ${PIP_INS_OPTS} --upgrade pip', 'pip install ${PIP_INS_OPTS} wheel setuptools', 'pip install ${PIP_INS_OPTS} opencv-python || true', 'pip install ${PIP_INS_OPTS} --extra-index-url https://developer.download.nvidia.com/compute/redist nvidia-dali-cuda100     || echo ""Skip DALI installation (CUDA=10.0)""', 'pip install ${PIP_INS_OPTS} nnabla-ext-cuda100-nccl2-mpi3.1.6==${NNABLA_VER} nnabla_converter==${NNABLA_VER}', 'echo NCCL_SHM_DISABLE=1 >> /etc/nccl.conf', 'echo NCCL_P2P_LEVEL=SYS >> /etc/nccl.conf', 'useradd -m nnabla', 'chown -R nnabla:nnabla /home/nnabla']"
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py38-cuda100-mpi316,COPY,2,"['--from=openmpi /opt/openmpi /opt/openmpi', '--from=flatc /usr/local/bin/flatc /usr/local/bin/flatc']"
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py38-cuda100-mpi316,ENV,2,"['PATH /opt/openmpi/bin:$PATH', 'LD_LIBRARY_PATH /opt/openmpi/lib:$LD_LIBRARY_PATH']"
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py38-cuda100-mpi316,USER,1,['nnabla']
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py38-cuda100-mpi316,WORKDIR,1,['/home/nnabla']
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py38-cuda100-mpi316,CMD,1,"['[ ""/bin/bash"" ]']"
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py37-cuda100,FROM,2,"['ubuntu:18.04 as flatc', 'nvidia/cuda:10.0-cudnn7-runtime-ubuntu18.04']"
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py37-cuda100,RUN,10,"['apt-get update     && apt-get install -y --no-install-recommends        ca-certificates        curl        cmake        make        g++        git     && rm -rf /var/lib/apt/lists/*', 'umask 0     && mkdir -p /tmp/deps     && cd /tmp/deps     && git clone https://github.com/google/flatbuffers.git     && cd flatbuffers     && cmake -G ""Unix Makefiles""     && make     && make install     && cd /     && rm -rf /tmp/*', 'eval ${APT_OPTS} && apt-get update     && apt-get install -y --no-install-recommends        bzip2        ca-certificates        curl        libglib2.0-0        libgl1-mesa-glx        python3.7        python3-pip     && rm -rf /var/lib/apt/lists/*', 'update-alternatives --install /usr/bin/python python /usr/bin/python3.7 0', 'update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.7 0', 'pip3 install ${PIP_INS_OPTS} --upgrade pip', 'pip install ${PIP_INS_OPTS} wheel setuptools', 'pip install ${PIP_INS_OPTS} opencv-python || true', 'pip install ${PIP_INS_OPTS} --extra-index-url https://developer.download.nvidia.com/compute/redist nvidia-dali-cuda100     || echo ""Skip DALI installation (CUDA=10.0)""', 'pip install ${PIP_INS_OPTS} nnabla-ext-cuda100==${NNABLA_VER} nnabla_converter==${NNABLA_VER}']"
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py37-cuda100,ARG,6,"['PIP_INS_OPTS', 'PYTHONWARNINGS', 'CURL_OPTS', 'WGET_OPTS', 'APT_OPTS', 'NNABLA_VER']"
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py37-cuda100,COPY,1,['--from=flatc /usr/local/bin/flatc /usr/local/bin/flatc']
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py39-cuda100-mpi316,FROM,3,"['ubuntu:18.04 as flatc', 'ubuntu:18.04 as openmpi', 'nvidia/cuda:10.0-cudnn7-runtime-ubuntu18.04']"
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py39-cuda100-mpi316,ARG,16,"['PIP_INS_OPTS', 'PYTHONWARNINGS', 'CURL_OPTS', 'WGET_OPTS', 'APT_OPTS', 'PIP_INS_OPTS', 'PYTHONWARNINGS', 'CURL_OPTS', 'WGET_OPTS', 'APT_OPTS', 'PIP_INS_OPTS', 'PYTHONWARNINGS', 'CURL_OPTS', 'WGET_OPTS', 'APT_OPTS', 'NNABLA_VER']"
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py39-cuda100-mpi316,RUN,23,"['eval ${APT_OPTS}     && apt-get update     && apt-get install -y --no-install-recommends        ca-certificates        curl        cmake        make        g++        git     && rm -rf /var/lib/apt/lists/*', 'umask 0     && mkdir -p /tmp/deps     && cd /tmp/deps     && git clone https://github.com/google/flatbuffers.git     && cd flatbuffers     && cmake -G ""Unix Makefiles""     && make     && make install     && cd /     && rm -rf /tmp/*', 'eval ${APT_OPTS} && apt-get update', 'apt-get install -y --no-install-recommends         build-essential         curl         gfortran         libibverbs-dev', 'apt-get install -y --no-install-recommends ca-certificates', 'mkdir /tmp/openmpi', 'curl ${CURL_OPTS} https://download.open-mpi.org/release/open-mpi/v3.1/openmpi-3.1.6.tar.bz2 -o /tmp/openmpi/openmpi-3.1.6.tar.bz2', 'tar Cxvf /tmp/openmpi /tmp/openmpi/openmpi-3.1.6.tar.bz2', 'cd tmp/openmpi/openmpi-3.1.6     && ./configure         --prefix=/opt/openmpi --enable-orterun-prefix-by-default --with-sge         CC=gcc         CXX=g++         F77=gfortran         FC=gfortran     && make -j8     && make install', 'eval ${APT_OPTS}     && apt-get update     && apt-get install -y --no-install-recommends     software-properties-common     && apt-get clean     && rm -rf /var/lib/apt/lists/*', 'add-apt-repository ppa:deadsnakes/ppa', 'eval ${APT_OPTS} && apt-get update     && apt-get install -y --no-install-recommends        bzip2        ca-certificates        curl        libglib2.0-0        libgl1-mesa-glx        python3.9        python3-pip        openssh-client        python3.9-distutils     && rm -rf /var/lib/apt/lists/*', 'update-alternatives --install /usr/bin/python python /usr/bin/python3.9 0', 'update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.9 0', 'pip3 install ${PIP_INS_OPTS} --upgrade pip', 'pip install ${PIP_INS_OPTS} wheel setuptools', 'pip install ${PIP_INS_OPTS} opencv-python || true', 'pip install ${PIP_INS_OPTS} --extra-index-url https://developer.download.nvidia.com/compute/redist nvidia-dali-cuda100     || echo ""Skip DALI installation (CUDA=10.0)""', 'pip install ${PIP_INS_OPTS} nnabla-ext-cuda100-nccl2-mpi3.1.6==${NNABLA_VER} nnabla_converter==${NNABLA_VER}', 'echo NCCL_SHM_DISABLE=1 >> /etc/nccl.conf', 'echo NCCL_P2P_LEVEL=SYS >> /etc/nccl.conf', 'useradd -m nnabla', 'chown -R nnabla:nnabla /home/nnabla']"
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py39-cuda100-mpi316,ENV,3,"['DEBIAN_FRONTEND noninteractive', 'PATH /opt/openmpi/bin:$PATH', 'LD_LIBRARY_PATH /opt/openmpi/lib:$LD_LIBRARY_PATH']"
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py39-cuda100-mpi316,COPY,2,"['--from=openmpi /opt/openmpi /opt/openmpi', '--from=flatc /usr/local/bin/flatc /usr/local/bin/flatc']"
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py39-cuda100-mpi316,USER,1,['nnabla']
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py39-cuda100-mpi316,WORKDIR,1,['/home/nnabla']
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py39-cuda100-mpi316,CMD,1,"['[ ""/bin/bash"" ]']"
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py38-cuda102-mpi316,FROM,3,"['ubuntu:18.04 as flatc', 'ubuntu:18.04 as openmpi', 'nvidia/cuda:10.2-cudnn8-runtime-ubuntu18.04']"
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py38-cuda102-mpi316,ARG,16,"['PIP_INS_OPTS', 'PYTHONWARNINGS', 'CURL_OPTS', 'WGET_OPTS', 'APT_OPTS', 'PIP_INS_OPTS', 'PYTHONWARNINGS', 'CURL_OPTS', 'WGET_OPTS', 'APT_OPTS', 'PIP_INS_OPTS', 'PYTHONWARNINGS', 'CURL_OPTS', 'WGET_OPTS', 'APT_OPTS', 'NNABLA_VER']"
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py38-cuda102-mpi316,RUN,21,"['eval ${APT_OPTS}     && apt-get update     && apt-get install -y --no-install-recommends        ca-certificates        curl        cmake        make        g++        git     && rm -rf /var/lib/apt/lists/*', 'umask 0     && mkdir -p /tmp/deps     && cd /tmp/deps     && git clone https://github.com/google/flatbuffers.git     && cd flatbuffers     && cmake -G ""Unix Makefiles""     && make     && make install     && cd /     && rm -rf /tmp/*', 'eval ${APT_OPTS} && apt-get update', 'apt-get install -y --no-install-recommends         build-essential         curl         gfortran         libibverbs-dev', 'apt-get install -y --no-install-recommends ca-certificates', 'mkdir /tmp/openmpi', 'curl ${CURL_OPTS} https://download.open-mpi.org/release/open-mpi/v3.1/openmpi-3.1.6.tar.bz2 -o /tmp/openmpi/openmpi-3.1.6.tar.bz2', 'tar Cxvf /tmp/openmpi /tmp/openmpi/openmpi-3.1.6.tar.bz2', 'cd tmp/openmpi/openmpi-3.1.6     && ./configure         --prefix=/opt/openmpi --enable-orterun-prefix-by-default --with-sge         CC=gcc         CXX=g++         F77=gfortran         FC=gfortran     && make -j8     && make install', 'eval ${APT_OPTS} && apt-get update     && apt-get install -y --no-install-recommends        bzip2        ca-certificates        curl        libglib2.0-0        libgl1-mesa-glx        python3.8        python3-pip        openssh-client     && rm -rf /var/lib/apt/lists/*', 'update-alternatives --install /usr/bin/python python /usr/bin/python3.8 0', 'update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.8 0', 'pip3 install ${PIP_INS_OPTS} --upgrade pip', 'pip install ${PIP_INS_OPTS} wheel setuptools', 'pip install ${PIP_INS_OPTS} opencv-python || true', 'pip install ${PIP_INS_OPTS} --extra-index-url https://developer.download.nvidia.com/compute/redist nvidia-dali-cuda100     || echo ""Skip DALI installation (CUDA=10.0)""', 'pip install ${PIP_INS_OPTS} nnabla-ext-cuda102-nccl2-mpi3.1.6==${NNABLA_VER} nnabla_converter==${NNABLA_VER}', 'echo NCCL_SHM_DISABLE=1 >> /etc/nccl.conf', 'echo NCCL_P2P_LEVEL=SYS >> /etc/nccl.conf', 'useradd -m nnabla', 'chown -R nnabla:nnabla /home/nnabla']"
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py38-cuda102-mpi316,COPY,2,"['--from=openmpi /opt/openmpi /opt/openmpi', '--from=flatc /usr/local/bin/flatc /usr/local/bin/flatc']"
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py38-cuda102-mpi316,ENV,2,"['PATH /opt/openmpi/bin:$PATH', 'LD_LIBRARY_PATH /opt/openmpi/lib:$LD_LIBRARY_PATH']"
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py38-cuda102-mpi316,USER,1,['nnabla']
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py38-cuda102-mpi316,WORKDIR,1,['/home/nnabla']
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py38-cuda102-mpi316,CMD,1,"['[ ""/bin/bash"" ]']"
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py36-cuda100,FROM,2,"['ubuntu:18.04 as flatc', 'nvidia/cuda:10.0-cudnn7-runtime-ubuntu18.04']"
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py36-cuda100,RUN,10,"['apt-get update     && apt-get install -y --no-install-recommends        ca-certificates        curl        cmake        make        g++        git     && rm -rf /var/lib/apt/lists/*', 'umask 0     && mkdir -p /tmp/deps     && cd /tmp/deps     && git clone https://github.com/google/flatbuffers.git     && cd flatbuffers     && cmake -G ""Unix Makefiles""     && make     && make install     && cd /     && rm -rf /tmp/*', 'eval ${APT_OPTS} && apt-get update     && apt-get install -y --no-install-recommends        bzip2        ca-certificates        curl        libglib2.0-0        libgl1-mesa-glx        python3.6        python3-pip     && rm -rf /var/lib/apt/lists/*', 'update-alternatives --install /usr/bin/python python /usr/bin/python3.6 0', 'update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.6 0', 'pip3 install ${PIP_INS_OPTS} --upgrade pip', 'pip install ${PIP_INS_OPTS} wheel setuptools', 'pip install ${PIP_INS_OPTS} opencv-python || true', 'pip install ${PIP_INS_OPTS} --extra-index-url https://developer.download.nvidia.com/compute/redist nvidia-dali-cuda100     || echo ""Skip DALI installation (CUDA=10.0)""', 'pip install ${PIP_INS_OPTS} nnabla-ext-cuda100==${NNABLA_VER} nnabla_converter==${NNABLA_VER}']"
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py36-cuda100,ARG,6,"['PIP_INS_OPTS', 'PYTHONWARNINGS', 'CURL_OPTS', 'WGET_OPTS', 'APT_OPTS', 'NNABLA_VER']"
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py36-cuda100,COPY,1,['--from=flatc /usr/local/bin/flatc /usr/local/bin/flatc']
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py38-cuda110-mpi316,FROM,3,"['ubuntu:18.04 as flatc', 'ubuntu:18.04 as openmpi', 'nvidia/cuda:11.0-cudnn8-runtime-ubuntu18.04']"
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py38-cuda110-mpi316,ARG,16,"['PIP_INS_OPTS', 'PYTHONWARNINGS', 'CURL_OPTS', 'WGET_OPTS', 'APT_OPTS', 'PIP_INS_OPTS', 'PYTHONWARNINGS', 'CURL_OPTS', 'WGET_OPTS', 'APT_OPTS', 'PIP_INS_OPTS', 'PYTHONWARNINGS', 'CURL_OPTS', 'WGET_OPTS', 'APT_OPTS', 'NNABLA_VER']"
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py38-cuda110-mpi316,RUN,23,"['eval ${APT_OPTS}     && apt-get update     && apt-get install -y --no-install-recommends        ca-certificates        curl        cmake        make        g++        git     && rm -rf /var/lib/apt/lists/*', 'umask 0     && mkdir -p /tmp/deps     && cd /tmp/deps     && git clone https://github.com/google/flatbuffers.git     && cd flatbuffers     && cmake -G ""Unix Makefiles""     && make     && make install     && cd /     && rm -rf /tmp/*', 'eval ${APT_OPTS} && apt-get update', 'apt-get install -y --no-install-recommends         build-essential         curl         gfortran         libibverbs-dev', 'apt-get install -y --no-install-recommends ca-certificates', 'mkdir /tmp/openmpi', 'curl ${CURL_OPTS} https://download.open-mpi.org/release/open-mpi/v3.1/openmpi-3.1.6.tar.bz2 -o /tmp/openmpi/openmpi-3.1.6.tar.bz2', 'tar Cxvf /tmp/openmpi /tmp/openmpi/openmpi-3.1.6.tar.bz2', 'cd tmp/openmpi/openmpi-3.1.6     && ./configure         --prefix=/opt/openmpi --enable-orterun-prefix-by-default --with-sge         CC=gcc         CXX=g++         F77=gfortran         FC=gfortran     && make -j8     && make install', 'eval ${APT_OPTS}     && apt-get update     && apt-get install -y --no-install-recommends        bzip2        ca-certificates        curl        libglib2.0-0        libgl1-mesa-glx        python3.8        python3-pip        openssh-client        ibverbs-providers        opensm        libdapl2        libibmad5        librdmacm1     && rm -rf /var/lib/apt/lists/*', 'update-alternatives --install /usr/bin/python python /usr/bin/python3.8 0', 'update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.8 0', 'pip3 install ${PIP_INS_OPTS} --upgrade pip', 'pip install ${PIP_INS_OPTS} wheel setuptools', 'pip install ${PIP_INS_OPTS} opencv-python || true', 'pip install ${PIP_INS_OPTS} --extra-index-url https://developer.download.nvidia.com/compute/redist nvidia-dali-cuda110     || echo ""Skip DALI installation (CUDA=11.0)""', 'pip install ${PIP_INS_OPTS} nnabla-ext-cuda110-nccl2-mpi3.1.6==${NNABLA_VER} nnabla_converter==${NNABLA_VER}', 'mkdir -p -m 775 /usr/local/cuda/compat/lib     && cd /usr/local/cuda/compat/lib     && for f in ../*.so*; do ln -sf $f .; done     && echo /usr/local/cuda/compat/lib > /etc/ld.so.conf.d/00-cuda-compat.conf     && ldconfig     && rm -f /usr/local/cuda/compat/lib/*.so*', 'mkdir -p -m 775 /.singularity.d/env', 'echo NCCL_SHM_DISABLE=1 >> /etc/nccl.conf', 'echo NCCL_P2P_LEVEL=SYS >> /etc/nccl.conf', 'useradd -m nnabla', 'chown -R nnabla:nnabla /home/nnabla']"
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py38-cuda110-mpi316,COPY,7,"['--from=openmpi /opt/openmpi /opt/openmpi', '--from=flatc /usr/local/bin/flatc /usr/local/bin/flatc', 'cudalibcheck /usr/local/bin/cudalibcheck', '.bashrc /home/nnabla/.bashrc', 'bash.bashrc /etc/bash.bashrc', 'shinit_v2 /etc/shinit_v2', '20-nvidia-cuda-compat.sh /.singularity.d/env/20-nvidia-cuda-compat.sh']"
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py38-cuda110-mpi316,ENV,4,"['PATH /opt/openmpi/bin:$PATH', 'LD_LIBRARY_PATH /opt/openmpi/lib:$LD_LIBRARY_PATH', 'BASH_ENV /etc/bash.bashrc', 'ENV /etc/shinit_v2']"
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py38-cuda110-mpi316,USER,1,['nnabla']
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py38-cuda110-mpi316,WORKDIR,1,['/home/nnabla']
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py38-cuda110-mpi316,CMD,1,"['[ ""/bin/bash"" ]']"
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py37-cuda110-mpi316,FROM,3,"['ubuntu:18.04 as flatc', 'ubuntu:18.04 as openmpi', 'nvidia/cuda:11.0-cudnn8-runtime-ubuntu18.04']"
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py37-cuda110-mpi316,RUN,23,"['apt-get update     && apt-get install -y --no-install-recommends        ca-certificates        curl        cmake        make        g++        git     && rm -rf /var/lib/apt/lists/*', 'umask 0     && mkdir -p /tmp/deps     && cd /tmp/deps     && git clone https://github.com/google/flatbuffers.git     && cd flatbuffers     && cmake -G ""Unix Makefiles""     && make     && make install     && cd /     && rm -rf /tmp/*', 'eval ${APT_OPTS} && apt-get update', 'apt-get install -y --no-install-recommends         build-essential         curl         gfortran         libibverbs-dev', 'apt-get install -y --no-install-recommends ca-certificates', 'mkdir /tmp/openmpi', 'curl ${CURL_OPTS} https://download.open-mpi.org/release/open-mpi/v3.1/openmpi-3.1.6.tar.bz2 -o /tmp/openmpi/openmpi-3.1.6.tar.bz2', 'tar Cxvf /tmp/openmpi /tmp/openmpi/openmpi-3.1.6.tar.bz2', 'cd tmp/openmpi/openmpi-3.1.6     && ./configure         --prefix=/opt/openmpi --enable-orterun-prefix-by-default --with-sge         CC=gcc         CXX=g++         F77=gfortran         FC=gfortran     && make -j8     && make install', 'eval ${APT_OPTS} && apt-get update     && apt-get install -y --no-install-recommends        bzip2        ca-certificates        curl        libglib2.0-0        libgl1-mesa-glx        python3.7        python3-pip        openssh-client        ibverbs-providers        opensm        libdapl2        libibmad5        librdmacm1     && rm -rf /var/lib/apt/lists/*', 'update-alternatives --install /usr/bin/python python /usr/bin/python3.7 0', 'update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.7 0', 'pip3 install ${PIP_INS_OPTS} --upgrade pip', 'pip install ${PIP_INS_OPTS} wheel setuptools', 'pip install ${PIP_INS_OPTS} opencv-python || true', 'pip install ${PIP_INS_OPTS} --extra-index-url https://developer.download.nvidia.com/compute/redist nvidia-dali-cuda110     || echo ""Skip DALI installation (CUDA=11.0)""', 'pip install ${PIP_INS_OPTS} nnabla-ext-cuda110-nccl2-mpi3.1.6==${NNABLA_VER} nnabla_converter==${NNABLA_VER}', 'mkdir -p -m 775 /usr/local/cuda/compat/lib     && cd /usr/local/cuda/compat/lib     && for f in ../*.so*; do ln -sf $f .; done     && echo /usr/local/cuda/compat/lib > /etc/ld.so.conf.d/00-cuda-compat.conf     && ldconfig     && rm -f /usr/local/cuda/compat/lib/*.so*', 'mkdir -p -m 775 /.singularity.d/env', 'echo NCCL_SHM_DISABLE=1 >> /etc/nccl.conf', 'echo NCCL_P2P_LEVEL=SYS >> /etc/nccl.conf', 'useradd -m nnabla', 'chown -R nnabla:nnabla /home/nnabla']"
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py37-cuda110-mpi316,ARG,11,"['PIP_INS_OPTS', 'PYTHONWARNINGS', 'CURL_OPTS', 'WGET_OPTS', 'APT_OPTS', 'PIP_INS_OPTS', 'PYTHONWARNINGS', 'CURL_OPTS', 'WGET_OPTS', 'APT_OPTS', 'NNABLA_VER']"
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py37-cuda110-mpi316,COPY,7,"['--from=openmpi /opt/openmpi /opt/openmpi', '--from=flatc /usr/local/bin/flatc /usr/local/bin/flatc', 'cudalibcheck /usr/local/bin/cudalibcheck', '.bashrc /home/nnabla/.bashrc', 'bash.bashrc /etc/bash.bashrc', 'shinit_v2 /etc/shinit_v2', '20-nvidia-cuda-compat.sh /.singularity.d/env/20-nvidia-cuda-compat.sh']"
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py37-cuda110-mpi316,ENV,4,"['PATH /opt/openmpi/bin:$PATH', 'LD_LIBRARY_PATH /opt/openmpi/lib:$LD_LIBRARY_PATH', 'BASH_ENV /etc/bash.bashrc', 'ENV /etc/shinit_v2']"
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py37-cuda110-mpi316,USER,1,['nnabla']
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py37-cuda110-mpi316,WORKDIR,1,['/home/nnabla']
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py37-cuda110-mpi316,CMD,1,"['[ ""/bin/bash"" ]']"
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py37-cuda102-mpi316,FROM,3,"['ubuntu:18.04 as flatc', 'ubuntu:18.04 as openmpi', 'nvidia/cuda:10.2-cudnn8-runtime-ubuntu18.04']"
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py37-cuda102-mpi316,RUN,21,"['apt-get update     && apt-get install -y --no-install-recommends        ca-certificates        curl        cmake        make        g++        git     && rm -rf /var/lib/apt/lists/*', 'umask 0     && mkdir -p /tmp/deps     && cd /tmp/deps     && git clone https://github.com/google/flatbuffers.git     && cd flatbuffers     && cmake -G ""Unix Makefiles""     && make     && make install     && cd /     && rm -rf /tmp/*', 'eval ${APT_OPTS} && apt-get update', 'apt-get install -y --no-install-recommends         build-essential         curl         gfortran         libibverbs-dev', 'apt-get install -y --no-install-recommends ca-certificates', 'mkdir /tmp/openmpi', 'curl ${CURL_OPTS} https://download.open-mpi.org/release/open-mpi/v3.1/openmpi-3.1.6.tar.bz2 -o /tmp/openmpi/openmpi-3.1.6.tar.bz2', 'tar Cxvf /tmp/openmpi /tmp/openmpi/openmpi-3.1.6.tar.bz2', 'cd tmp/openmpi/openmpi-3.1.6     && ./configure         --prefix=/opt/openmpi --enable-orterun-prefix-by-default --with-sge         CC=gcc         CXX=g++         F77=gfortran         FC=gfortran     && make -j8     && make install', 'eval ${APT_OPTS} && apt-get update     && apt-get install -y --no-install-recommends        bzip2        ca-certificates        curl        libglib2.0-0        libgl1-mesa-glx        python3.7        python3-pip        openssh-client     && rm -rf /var/lib/apt/lists/*', 'update-alternatives --install /usr/bin/python python /usr/bin/python3.7 0', 'update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.7 0', 'pip3 install ${PIP_INS_OPTS} --upgrade pip', 'pip install ${PIP_INS_OPTS} wheel setuptools', 'pip install ${PIP_INS_OPTS} opencv-python || true', 'pip install ${PIP_INS_OPTS} --extra-index-url https://developer.download.nvidia.com/compute/redist nvidia-dali-cuda100     || echo ""Skip DALI installation (CUDA=10.0)""', 'pip install ${PIP_INS_OPTS} nnabla-ext-cuda102-nccl2-mpi3.1.6==${NNABLA_VER} nnabla_converter==${NNABLA_VER}', 'echo NCCL_SHM_DISABLE=1 >> /etc/nccl.conf', 'echo NCCL_P2P_LEVEL=SYS >> /etc/nccl.conf', 'useradd -m nnabla', 'chown -R nnabla:nnabla /home/nnabla']"
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py37-cuda102-mpi316,ARG,11,"['PIP_INS_OPTS', 'PYTHONWARNINGS', 'CURL_OPTS', 'WGET_OPTS', 'APT_OPTS', 'PIP_INS_OPTS', 'PYTHONWARNINGS', 'CURL_OPTS', 'WGET_OPTS', 'APT_OPTS', 'NNABLA_VER']"
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py37-cuda102-mpi316,COPY,2,"['--from=openmpi /opt/openmpi /opt/openmpi', '--from=flatc /usr/local/bin/flatc /usr/local/bin/flatc']"
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py37-cuda102-mpi316,ENV,2,"['PATH /opt/openmpi/bin:$PATH', 'LD_LIBRARY_PATH /opt/openmpi/lib:$LD_LIBRARY_PATH']"
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py37-cuda102-mpi316,USER,1,['nnabla']
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py37-cuda102-mpi316,WORKDIR,1,['/home/nnabla']
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py37-cuda102-mpi316,CMD,1,"['[ ""/bin/bash"" ]']"
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py38-cuda102,FROM,1,['nvidia/cuda:10.2-cudnn8-runtime-ubuntu18.04']
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py38-cuda102,ARG,6,"['PIP_INS_OPTS', 'PYTHONWARNINGS', 'CURL_OPTS', 'WGET_OPTS', 'APT_OPTS', 'NNABLA_VER']"
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py38-cuda102,RUN,8,"['eval ${APT_OPTS} && apt-get update     && apt-get install -y --no-install-recommends        bzip2        ca-certificates        curl        libglib2.0-0        libgl1-mesa-glx        python3.8        python3-pip     && rm -rf /var/lib/apt/lists/*', 'update-alternatives --install /usr/bin/python python /usr/bin/python3.8 0', 'update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.8 0', 'pip3 install ${PIP_INS_OPTS} --upgrade pip', 'pip install ${PIP_INS_OPTS} wheel setuptools', 'pip install ${PIP_INS_OPTS} opencv-python || true', 'pip install ${PIP_INS_OPTS} --extra-index-url https://developer.download.nvidia.com/compute/redist nvidia-dali-cuda100     || echo ""Skip DALI installation (CUDA=10.0)""', 'pip install ${PIP_INS_OPTS} nnabla-ext-cuda102==${NNABLA_VER}']"
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py36-cuda100-mpi316,FROM,3,"['ubuntu:18.04 as flatc', 'ubuntu:18.04 as openmpi', 'nvidia/cuda:10.0-cudnn7-runtime-ubuntu18.04']"
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py36-cuda100-mpi316,RUN,21,"['apt-get update     && apt-get install -y --no-install-recommends        ca-certificates        curl        cmake        make        g++        git     && rm -rf /var/lib/apt/lists/*', 'umask 0     && mkdir -p /tmp/deps     && cd /tmp/deps     && git clone https://github.com/google/flatbuffers.git     && cd flatbuffers     && cmake -G ""Unix Makefiles""     && make     && make install     && cd /     && rm -rf /tmp/*', 'eval ${APT_OPTS} && apt-get update', 'apt-get install -y --no-install-recommends         build-essential         curl         gfortran         libibverbs-dev', 'apt-get install -y --no-install-recommends ca-certificates', 'mkdir /tmp/openmpi', 'curl ${CURL_OPTS} https://download.open-mpi.org/release/open-mpi/v3.1/openmpi-3.1.6.tar.bz2 -o /tmp/openmpi/openmpi-3.1.6.tar.bz2', 'tar Cxvf /tmp/openmpi /tmp/openmpi/openmpi-3.1.6.tar.bz2', 'cd tmp/openmpi/openmpi-3.1.6     && ./configure         --prefix=/opt/openmpi --enable-orterun-prefix-by-default --with-sge         CC=gcc         CXX=g++         F77=gfortran         FC=gfortran     && make -j8     && make install', 'eval ${APT_OPTS} && apt-get update     && apt-get install -y --no-install-recommends        bzip2        ca-certificates        curl        libglib2.0-0        libgl1-mesa-glx        python3.6        python3-pip        openssh-client     && rm -rf /var/lib/apt/lists/*', 'update-alternatives --install /usr/bin/python python /usr/bin/python3.6 0', 'update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.6 0', 'pip3 install ${PIP_INS_OPTS} --upgrade pip', 'pip install ${PIP_INS_OPTS} wheel setuptools', 'pip install ${PIP_INS_OPTS} opencv-python || true', 'pip install ${PIP_INS_OPTS} --extra-index-url https://developer.download.nvidia.com/compute/redist nvidia-dali-cuda100     || echo ""Skip DALI installation (CUDA=10.0)""', 'pip install ${PIP_INS_OPTS} nnabla-ext-cuda100-nccl2-mpi3.1.6==${NNABLA_VER} nnabla_converter==${NNABLA_VER}', 'echo NCCL_SHM_DISABLE=1 >> /etc/nccl.conf', 'echo NCCL_P2P_LEVEL=SYS >> /etc/nccl.conf', 'useradd -m nnabla', 'chown -R nnabla:nnabla /home/nnabla']"
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py36-cuda100-mpi316,ARG,11,"['PIP_INS_OPTS', 'PYTHONWARNINGS', 'CURL_OPTS', 'WGET_OPTS', 'APT_OPTS', 'PIP_INS_OPTS', 'PYTHONWARNINGS', 'CURL_OPTS', 'WGET_OPTS', 'APT_OPTS', 'NNABLA_VER']"
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py36-cuda100-mpi316,COPY,2,"['--from=openmpi /opt/openmpi /opt/openmpi', '--from=flatc /usr/local/bin/flatc /usr/local/bin/flatc']"
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py36-cuda100-mpi316,ENV,2,"['PATH /opt/openmpi/bin:$PATH', 'LD_LIBRARY_PATH /opt/openmpi/lib:$LD_LIBRARY_PATH']"
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py36-cuda100-mpi316,USER,1,['nnabla']
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py36-cuda100-mpi316,WORKDIR,1,['/home/nnabla']
sony/nnabla-ext-cuda,latest,/docker/release/Dockerfile.py36-cuda100-mpi316,CMD,1,"['[ ""/bin/bash"" ]']"
oap-project/raydp,latest,/docker/Dockerfile,FROM,1,['rayproject/ray:1.3.0']
oap-project/raydp,latest,/docker/Dockerfile,ARG,2,"['HTTP_PROXY', 'HTTPS_PROXY']"
oap-project/raydp,latest,/docker/Dockerfile,ENV,4,"['http_proxy=${HTTP_PROXY}', 'https_proxy=${HTTPS_PROXY}', 'http_proxy=', 'https_proxy=']"
oap-project/raydp,latest,/docker/Dockerfile,RUN,1,['sudo http_proxy=${HTTP_PROXY} https_proxy=${HTTPS_PROXY} apt-get update -y     && sudo http_proxy=${HTTP_PROXY} https_proxy=${HTTPS_PROXY} apt-get install -y openjdk-8-jdk     && sudo mkdir /raydp     && sudo chown -R ray /raydp     && $HOME/anaconda3/bin/pip --no-cache-dir install raydp']
oap-project/raydp,latest,/docker/Dockerfile,WORKDIR,1,['/raydp']
rock-learning/bolero,latest,/docker/Dockerfile,FROM,1,['af01/bolero_dependencies']
rock-learning/bolero,latest,/docker/Dockerfile,ARG,1,['install_mars_env=1']
rock-learning/bolero,latest,/docker/Dockerfile,RUN,5,"['apt-get update -qq', 'mkdir /opt -p     && wget ""https://raw.githubusercontent.com/rock-learning/bolero/master/bootstrap_bolero.sh""     && mv bootstrap_bolero.sh /opt/bootstrap_bolero.sh', 'chmod +x /opt/bootstrap_bolero.sh && sleep 1', 'chmod +x /opt/docker_bootstrap_bolero.sh && sleep 1', '/bin/bash -c ""/opt/docker_bootstrap_bolero.sh ${install_mars_env}""']"
rock-learning/bolero,latest,/docker/Dockerfile,COPY,1,['docker_bootstrap_bolero.sh /opt/docker_bootstrap_bolero.sh']
rock-learning/bolero,latest,/docker/Dockerfile,ENV,2,"['DISPLAY "":0""', 'QT_X11_NO_MITSHM ""1""']"
rock-learning/bolero,latest,/docker/Dockerfile,CMD,1,"['[""/bin/bash""]']"
rock-learning/bolero,latest,/docker/Dockerfile_CI,FROM,1,['ubuntu:18.04']
rock-learning/bolero,latest,/docker/Dockerfile_CI,ENV,1,['DEBIAN_FRONTEND=noninteractive']
rock-learning/bolero,latest,/docker/Dockerfile_CI,RUN,2,"['apt-get update -qq && apt-get install -y   cmake   wget   sudo   git   unzip   python   python-dev   python-pip   python-yaml   python-matplotlib   python-tk   libboost-all-dev   libeigen3-dev   libqt4-dev   libtinyxml-dev   pkg-config   libyaml-cpp-dev   libblas-dev   liblapack-dev   gfortran   cython   python-nose   python-scipy   python-sklearn   libjsoncpp-dev', 'pip install gym scikit-optimize']"
cylondata/cylon,latest,/docker/ucx/Dockerfile,FROM,1,['ubuntu:20.04']
cylondata/cylon,latest,/docker/ucx/Dockerfile,MAINTAINER,1,['cylondata@googlegroups.com']
cylondata/cylon,latest,/docker/ucx/Dockerfile,RUN,10,"['DEBIAN_FRONTEND=noninteractive TZ=America/New_York apt-get update -y  && apt-get upgrade -y    && apt-get install -y apt-utils tzdata', 'dpkg-reconfigure tzdata', 'DEBIAN_FRONTEND=noninteractive apt-get install -y python3 python3-dev python3-venv python3-pip git build-essential libopenmpi-dev vim cmake wget', 'DEBIAN_FRONTEND=noninteractive apt install openssh-server sudo -y', 'wget https://github.com/openucx/ucx/releases/download/v1.10.1/ucx-1.10.1.tar.gz -P $UCX_HOME', 'cd $UCX_HOME && tar xzf ucx-1.10.1.tar.gz', 'cd $UCX_SOURCE && ./contrib/configure-release --prefix=$PWD/install', 'cd $UCX_SOURCE && make -j8 install', 'git clone https://github.com/cylondata/cylon.git $CYLON_HOME', 'cd $CYLON_HOME && /bin/bash build.sh -bpath $CYLON_BUILD --cpp --release --cmake-flags ""-DCYLON_UCX=ON -DUCX_LIBDIR=$UCX_LIB -DUCX_INCLUDEDIR=$UCX_INCLUDE""']"
cylondata/cylon,latest,/docker/ucx/Dockerfile,ENV,7,"['CYLON_HOME=/cylon', 'CYLON_BUILD=$CYLON_HOME/build', 'CYLON_ENV=$CYLON_HOME/ENV', 'UCX_HOME=/ucx', 'UCX_SOURCE=$UCX_HOME/ucx-1.10.1', 'UCX_LIB=$UCX_SOURCE/install/lib', 'UCX_INCLUDE=$UCX_SOURCE/install/include']"
cylondata/cylon,latest,/docker/ucx/Dockerfile,WORKDIR,1,['$CYLON_HOME']
cylondata/cylon,latest,/docker/ucx/Dockerfile,ENTRYPOINT,1,"['[""/bin/bash""]']"
cylondata/cylon,latest,/docker/basic/Dockerfile,FROM,1,['ubuntu:20.04']
cylondata/cylon,latest,/docker/basic/Dockerfile,MAINTAINER,1,['cylondata@googlegroups.com']
cylondata/cylon,latest,/docker/basic/Dockerfile,RUN,10,"['DEBIAN_FRONTEND=noninteractive TZ=America/New_York apt-get update -y  && apt-get upgrade -y    && apt-get install -y apt-utils tzdata', 'dpkg-reconfigure tzdata', 'DEBIAN_FRONTEND=noninteractive apt-get install -y python3 python3-dev python3-venv python3-pip git build-essential libopenmpi-dev vim cmake libbrotli-dev', 'git clone https://github.com/cylondata/cylon.git $CYLON_HOME', 'cd $CYLON_HOME && python3 -m venv --system-site-packages $CYLON_ENV', 'echo \'alias build_cylon=""cd $CYLON_HOME && ./build.sh -pyenv $CYLON_ENV -bpath $CYLON_BUILD --cpp --python --release --cmake-flags -DCYLON_PARQUET=ON""\' >> $HOME/.bashrc', 'echo \'alias build_cylon_test=""cd $CYLON_HOME && ./build.sh -pyenv $CYLON_ENV -bpath $CYLON_BUILD --cpp --test --python --pytest --release --cmake-flags -DCYLON_PARQUET=ON""\' >> $HOME/.bashrc', 'cd $CYLON_HOME && /bin/bash build.sh -pyenv $CYLON_ENV -bpath $CYLON_BUILD --cpp --python --release  --cmake-flags -DCYLON_PARQUET=ON', 'useradd -ms /bin/bash cylon', 'mkdir /code && chown cylon /code']"
cylondata/cylon,latest,/docker/basic/Dockerfile,ENV,5,"['CYLON_HOME=/cylon', 'CYLON_BUILD=$CYLON_HOME/build', 'CYLON_ENV=$CYLON_HOME/ENV', 'LD_LIBRARY_PATH=$CYLON_BUILD/lib/:$CYLON_BUILD/arrow/install/lib/', 'PATH=""$CYLON_ENV/bin:$PATH""']"
cylondata/cylon,latest,/docker/basic/Dockerfile,WORKDIR,2,"['$CYLON_HOME', '/home/cylon']"
cylondata/cylon,latest,/docker/basic/Dockerfile,USER,1,['cylon']
cylondata/cylon,latest,/docker/basic/Dockerfile,ENTRYPOINT,1,"['[""/bin/bash""]']"
blakeblackshear/frigate-hass-integration,latest,/docker/Dockerfile.dev,FROM,1,['mcr.microsoft.com/vscode/devcontainers/python:0-3.9']
blakeblackshear/frigate-hass-integration,latest,/docker/Dockerfile.dev,RUN,1,['pip3 install pylint black']
YeoLab/flotilla,latest,/docker/master/Dockerfile,FROM,1,['mlovci/anaconda_python']
YeoLab/flotilla,latest,/docker/master/Dockerfile,MAINTAINER,1,['Michael Lovci <michaeltlovci@gmail.com>']
YeoLab/flotilla,latest,/docker/master/Dockerfile,RUN,3,"['pip install -e git://github.com/YeoLab/flotilla.git@master#egg=flotilla', ""adduser --disabled-password --gecos '' --home=/home/flotilla flotilla"", 'chmod 755 run_notebook.sh']"
YeoLab/flotilla,latest,/docker/master/Dockerfile,WORKDIR,2,"['/usr/bin', '/home/root/ipython']"
YeoLab/flotilla,latest,/docker/master/Dockerfile,ADD,1,['https://gist.githubusercontent.com/mlovci/74c96dda49680419bcca/raw/15029fffa38585360502eee4d11a2a5ec20f372f/run_notebook.sh /usr/bin/run_notebook.sh']
YeoLab/flotilla,latest,/docker/master/Dockerfile,ENV,1,['HOME /root']
YeoLab/flotilla,latest,/docker/master/Dockerfile,VOLUME,2,"['/root/ipython', '/root/flotilla_packages']"
YeoLab/flotilla,latest,/docker/master/Dockerfile,EXPOSE,1,['8888']
YeoLab/flotilla,latest,/docker/master/Dockerfile,ENTRYPOINT,1,['run_notebook.sh']
sacdallago/bio_embeddings,latest,/Dockerfile,FROM,2,"['ubuntu:20.04 as venv-build', 'nvidia/cuda:11.1-runtime-ubuntu20.04']"
sacdallago/bio_embeddings,latest,/Dockerfile,RUN,4,"['apt-get update &&     apt-get install -y curl build-essential python3 python3-pip python3-distutils python3-venv python3-dev python3-virtualenv git &&     curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/install-poetry.py | python3 - --version 1.1.7', 'python3 -m venv .venv &&     .venv/bin/pip install -U pip &&     mkdir bio_embeddings &&     touch bio_embeddings/__init__.py &&     touch README.md &&     $HOME/.local/bin/poetry config virtualenvs.in-project true &&     $HOME/.local/bin/poetry install --no-dev -E all', 'apt-get update     && apt-get install -y python3 python3-distutils     && rm -rf /var/lib/apt/lists/*', 'mkdir /tmp/numba_cache && chmod 777 /tmp/numba_cache']"
sacdallago/bio_embeddings,latest,/Dockerfile,COPY,4,"['pyproject.toml /app/pyproject.toml', 'poetry.lock /app/poetry.lock', '--from=venv-build /app/.venv /app/.venv', '. /app/']"
sacdallago/bio_embeddings,latest,/Dockerfile,WORKDIR,2,"['/app', '/app']"
sacdallago/bio_embeddings,latest,/Dockerfile,ENV,2,"['PYTHONUNBUFFERED=1', 'NUMBA_CACHE_DIR=/tmp/numba_cache']"
sacdallago/bio_embeddings,latest,/Dockerfile,ENTRYPOINT,1,"['[""/app/.venv/bin/python"", ""-m"", ""bio_embeddings.utilities.cli""]']"
sacdallago/bio_embeddings,latest,/webserver/Dockerfile.worker,FROM,2,"['ubuntu:20.04 as venv-build', 'nvidia/cuda:11.1-runtime-ubuntu20.04']"
sacdallago/bio_embeddings,latest,/webserver/Dockerfile.worker,ENV,4,"['PYTHONUNBUFFERED=1', 'PYTHONUNBUFFERED=1', 'NUMBA_CACHE_DIR=/tmp/numba_cache', 'MODEL_DIRECTORY /mnt/models']"
sacdallago/bio_embeddings,latest,/webserver/Dockerfile.worker,RUN,4,"['apt-get update &&     apt-get install -y curl build-essential python3 python3-pip python3-distutils python3-venv python3-dev python3-virtualenv git &&     curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/install-poetry.py | python3 - --version 1.1.7', 'mkdir bio_embeddings &&     touch bio_embeddings/__init__.py &&     touch README.md &&     python3 -m venv .venv &&     .venv/bin/pip install -U pip &&     $HOME/.local/bin/poetry config virtualenvs.in-project true &&     $HOME/.local/bin/poetry install --no-dev -E seqvec -E transformers &&     .venv/bin/pip install -r webserver/requirements.txt', 'apt-get update     && apt-get install -y python3 python3-distutils     && rm -rf /var/lib/apt/lists/*', 'mkdir /tmp/numba_cache && chmod 777 /tmp/numba_cache']"
sacdallago/bio_embeddings,latest,/webserver/Dockerfile.worker,COPY,5,"['pyproject.toml /app/pyproject.toml', 'poetry.lock /app/poetry.lock', 'webserver/requirements.txt /app/webserver/requirements.txt', '--chown=www-data:www-data --from=venv-build /app/.venv /app/.venv', '--chown=www-data:www-data . /app/']"
sacdallago/bio_embeddings,latest,/webserver/Dockerfile.worker,WORKDIR,2,"['/app', '/app']"
sacdallago/bio_embeddings,latest,/webserver/Dockerfile.worker,USER,1,['www-data']
sacdallago/bio_embeddings,latest,/webserver/Dockerfile.worker,ENTRYPOINT,1,"['[""/app/.venv/bin/celery"", ""worker"", ""-A"", ""webserver.celery_worker.task_keeper"", ""--loglevel=info"", ""--pool=solo"", ""--queues=pipeline,seqvec,protbert,seqvec_annotations,protbert_annotations,prott5,prott5_annotations""]']"
sacdallago/bio_embeddings,latest,/webserver/Dockerfile.webserver,FROM,1,['python:3.8-slim']
sacdallago/bio_embeddings,latest,/webserver/Dockerfile.webserver,COPY,2,"['webserver/requirements.txt webserver/requirements.txt', '--chown=www-data:www-data webserver /app/webserver']"
sacdallago/bio_embeddings,latest,/webserver/Dockerfile.webserver,RUN,1,['pip install -U pip     && pip install -r webserver/requirements.txt']
sacdallago/bio_embeddings,latest,/webserver/Dockerfile.webserver,USER,1,['www-data']
sacdallago/bio_embeddings,latest,/webserver/Dockerfile.webserver,WORKDIR,1,['/app']
sacdallago/bio_embeddings,latest,/webserver/Dockerfile.webserver,ENV,1,['MODEL_DIRECTORY /mnt/models']
sacdallago/bio_embeddings,latest,/webserver/Dockerfile.webserver,ENTRYPOINT,1,"['[""gunicorn"", ""--workers"", ""4"", ""--timeout"", ""180"", ""--bind"", "":3000"", ""webserver.wsgi:app"", ""--capture-output"", ""--log-file"", ""-"", ""--access-logfile"", ""-""]']"
spiceai/spiceai,latest,/docker/Dockerfile,FROM,3,"['node:16 as dashboard', 'golang AS build', 'python:3.8.12-slim']"
spiceai/spiceai,latest,/docker/Dockerfile,WORKDIR,6,"['/build-dashboard', '/build-dashboard/dashboard', '/build', '/build/cmd/spiced', '/app', '/userapp']"
spiceai/spiceai,latest,/docker/Dockerfile,COPY,14,"['dashboard dashboard/', 'version.txt /build-dashboard/version.txt', '--from=dashboard /build-dashboard/dashboard/build /build/pkg/dashboard/build', 'go.mod go.mod', 'go.sum go.sum', 'cmd cmd/', 'pkg pkg/', 'ai/src/requirements/common.txt ai/src/requirements/production.txt ./', 'ai/src/*.py ./ai/', 'ai/src/connector/ ./ai/connector/', 'ai/src/algorithms/ ./ai/algorithms/', 'ai/src/data_manager/ ./ai/data_manager/', 'ai/src/proto/ ./ai/proto/', '--from=build /build/cmd/spiced/spiced /app/spiced']"
spiceai/spiceai,latest,/docker/Dockerfile,RUN,7,"['npm install --global npm', 'npm install --global yarn --force', 'yarn install', 'yarn build', 'go mod tidy -compat=1.17', 'make', 'python3 -m pip install -r production.txt']"
spiceai/spiceai,latest,/docker/Dockerfile,ARG,1,['REL_VERSION']
spiceai/spiceai,latest,/docker/Dockerfile,ENV,2,"['REL_VERSION=${REL_VERSION:-local}', 'HOME=/app/home']"
spiceai/spiceai,latest,/docker/Dockerfile,ENTRYPOINT,1,"['[""/app/spiced"", ""--context"", ""docker""]']"
xaynetwork/xaynet,latest,/docker/Dockerfile,FROM,2,"['buildpack-deps:stable-curl AS builder', 'ubuntu:20.04']"
xaynetwork/xaynet,latest,/docker/Dockerfile,RUN,5,"['apt update', 'curl https://sh.rustup.rs -sSf | sh -s -- -y --profile minimal', 'apt install -y build-essential libssl-dev pkg-config', 'mkdir -p /out &&   echo ""RELEASE_BUILD=$RELEASE_BUILD COORDINATOR_FEATURES=$COORDINATOR_FEATURES"" &&   if [ ""$RELEASE_BUILD"" -eq ""0"" ];   then     cargo build --features=""$COORDINATOR_FEATURES"" &&     mv /rust/target/debug/coordinator /out/coordinator;   else     cargo build --features=""$COORDINATOR_FEATURES"" --release &&     mv /rust/target/release/coordinator /out/coordinator;   fi', 'apt update && apt install -y --no-install-recommends libssl-dev']"
xaynetwork/xaynet,latest,/docker/Dockerfile,ENV,1,['RUSTUP_HOME=/usr/local/rustup     CARGO_HOME=/usr/local/cargo     PATH=/usr/local/cargo/bin:$PATH']
xaynetwork/xaynet,latest,/docker/Dockerfile,COPY,2,"['rust/ /rust/', '--from=builder /out/coordinator /app/coordinator']"
xaynetwork/xaynet,latest,/docker/Dockerfile,WORKDIR,1,['/rust/xaynet-server']
xaynetwork/xaynet,latest,/docker/Dockerfile,ARG,2,"['RELEASE_BUILD=0', 'COORDINATOR_FEATURES']"
xaynetwork/xaynet,latest,/docker/Dockerfile,ENTRYPOINT,1,"['[""/app/coordinator"", ""-c"", ""/app/config.toml""]']"
xaynetwork/xaynet,latest,/.github/workflows/dockerfile-validation.yml,NAME:,2,"['Dockerfiles linting', 'Dockerfiles linting']"
xaynetwork/xaynet,latest,/.github/workflows/dockerfile-validation.yml,ON:,1,['']
xaynetwork/xaynet,latest,/.github/workflows/dockerfile-validation.yml,PUSH:,1,['']
xaynetwork/xaynet,latest,/.github/workflows/dockerfile-validation.yml,PATHS:,1,['']
xaynetwork/xaynet,latest,/.github/workflows/dockerfile-validation.yml,-,3,"[""'docker/Dockerfile**'"", 'name: Checkout repository', 'name: Lint file']"
xaynetwork/xaynet,latest,/.github/workflows/dockerfile-validation.yml,JOBS:,1,['']
xaynetwork/xaynet,latest,/.github/workflows/dockerfile-validation.yml,LINT:,1,['']
xaynetwork/xaynet,latest,/.github/workflows/dockerfile-validation.yml,RUNS-ON:,1,['ubuntu-latest']
xaynetwork/xaynet,latest,/.github/workflows/dockerfile-validation.yml,STEPS:,1,['']
xaynetwork/xaynet,latest,/.github/workflows/dockerfile-validation.yml,USES:,1,['actions/checkout@v2']
xaynetwork/xaynet,latest,/.github/workflows/dockerfile-validation.yml,RUN:,1,['docker run -v $GITHUB_WORKSPACE/docker/Dockerfile:/Dockerfile replicated/dockerfilelint /Dockerfile']
petuum/autodist,latest,/docker/Dockerfile.gpu,ARG,1,['TF_IMAGE_TAG=2.2.0-gpu']
petuum/autodist,latest,/docker/Dockerfile.gpu,FROM,1,['tensorflow/tensorflow:${TF_IMAGE_TAG}']
petuum/autodist,latest,/docker/Dockerfile.gpu,SHELL,1,"['[""/bin/bash"", ""-cu""]']"
petuum/autodist,latest,/docker/Dockerfile.gpu,RUN,10,"['rm -rf /etc/bash.bashrc', 'apt-get update && apt-get install -y --allow-downgrades --allow-change-held-packages --no-install-recommends         build-essential         git         curl         vim         wget         unzip', 'curl -O https://bootstrap.pypa.io/get-pip.py &&     python get-pip.py &&     rm get-pip.py', 'pip install future typing wheel pydocstyle prospector pytest pytest-cov kazoo==2.6.1', ""echo 'import coverage; coverage.process_startup()' >> /usr/lib/python3.6/sitecustomize.py"", 'cd autodist/ &&     wget https://github.com/protocolbuffers/protobuf/releases/download/v3.11.0/protoc-3.11.0-linux-x86_64.zip &&     unzip protoc-3.11.0-linux-x86_64.zip &&     export PROTOC=$(pwd)/bin/protoc &&     HOME=$(pwd) python setup.py bdist_wheel &&     pip install dist/autodist*.whl', 'apt-get install -y --no-install-recommends openssh-client openssh-server &&     mkdir -p /var/run/sshd', ""sed -i 's/#PermitRootLogin prohibit-password/PermitRootLogin yes/' /etc/ssh/sshd_config"", ""sed -i 's/#PubkeyAuthentication yes/PubkeyAuthentication yes/' /etc/ssh/sshd_config"", 'cat /etc/ssh/ssh_config | grep -v StrictHostKeyChecking > /etc/ssh/ssh_config.new &&     echo ""    StrictHostKeyChecking no"" >> /etc/ssh/ssh_config.new &&     mv /etc/ssh/ssh_config.new /etc/ssh/ssh_config']"
petuum/autodist,latest,/docker/Dockerfile.gpu,COPY,1,['./ autodist/']
petuum/autodist,latest,/docker/Dockerfile.gpu,WORKDIR,1,['/mnt/']
robotology/gym-ignition,latest,/.docker/cicd-devel.Dockerfile,ARG,4,"['from=diegoferigo/gym-ignition:base', 'CMAKE_BUILD_TYPE=""Release""', 'ignition_codename=""fortress""', 'IGNITION_DEFAULT_CHANNEL=""stable""']"
robotology/gym-ignition,latest,/.docker/cicd-devel.Dockerfile,FROM,1,['${from}']
robotology/gym-ignition,latest,/.docker/cicd-devel.Dockerfile,RUN,4,"['pip3 install vcstool colcon-common-extensions &&    rm -r $HOME/.cache/pip', 'echo ""deb http://packages.osrfoundation.org/gazebo/ubuntu-${IGNITION_DEFAULT_CHANNEL} `lsb_release -cs` main"" >         /etc/apt/sources.list.d/gazebo-${IGNITION_DEFAULT_CHANNEL}.list &&    wget http://packages.osrfoundation.org/gazebo.key -O - | apt-key add - &&    apt-get update &&    mkdir -p /workspace/src &&    cd /workspace/src &&    wget https://raw.githubusercontent.com/ignition-tooling/gazebodistro/master/collection-${ignition_codename}.yaml &&    vcs import < collection-${ignition_codename}.yaml &&    apt -y install --no-install-recommends         $(sort -u $(find . -iname \'packages-\'$(lsb_release -cs)\'.apt\' -o -iname \'packages.apt\') | grep -v -E ""dart|^libignition|^libsdformat"" | tr \'\\n\' \' \') &&    rm -rf /var/lib/apt/lists/* &&    cd /workspace &&    colcon graph &&    colcon build         --cmake-args             -GNinja             -DBUILD_TESTING:BOOL=OFF             -DCMAKE_BUILD_TYPE=${CMAKE_BUILD_TYPE}         --merge-install         &&    find build/ -type f -not -name \'CMakeCache.txt\' -delete &&    echo ""source /workspace/install/setup.bash"" >> /etc/bash.bashrc', 'chmod 755 /entrypoint.sh', 'chmod 755 /setup_virtualenv.sh']"
robotology/gym-ignition,latest,/.docker/cicd-devel.Dockerfile,SHELL,1,"['[""/bin/bash"", ""-i"", ""-c""]']"
robotology/gym-ignition,latest,/.docker/cicd-devel.Dockerfile,COPY,2,"['entrypoint.sh /entrypoint.sh', 'setup_virtualenv.sh /setup_virtualenv.sh']"
robotology/gym-ignition,latest,/.docker/cicd-devel.Dockerfile,ENTRYPOINT,1,"['[""/entrypoint.sh""]']"
robotology/gym-ignition,latest,/.docker/cicd-devel.Dockerfile,CMD,1,"['[""bash""]']"
robotology/gym-ignition,latest,/.docker/base.Dockerfile,ARG,3,"['from=ubuntu:focal', 'TZ=Europe/Rome', 'DEBIAN_FRONTEND=noninteractive']"
robotology/gym-ignition,latest,/.docker/base.Dockerfile,FROM,1,['${from}']
robotology/gym-ignition,latest,/.docker/base.Dockerfile,SHELL,1,"['[""/bin/bash"", ""-c""]']"
robotology/gym-ignition,latest,/.docker/base.Dockerfile,RUN,3,"['rm -f /etc/localtime &&    ln -s /usr/share/zoneinfo/""${TZ}"" /etc/localtime &&    apt-get update &&    apt-get install -y --no-install-recommends locales locales-all tzdata &&    rm -rf /var/lib/apt/lists/*', 'apt-get update &&    apt-get install -y --no-install-recommends         wget         software-properties-common         apt-transport-https         apt-utils         gnupg2         nano         rename         source-highlight         &&    wget -O - https://apt.kitware.com/keys/kitware-archive-latest.asc 2>/dev/null | apt-key add - &&     apt-add-repository ""deb https://apt.kitware.com/ubuntu/ `lsb_release -cs` main"" &&    add-apt-repository ppa:deadsnakes/ppa &&    wget -nv -O - http://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - &&    apt-add-repository -y ""deb http://apt.llvm.org/`lsb_release -cs`/ llvm-toolchain-`lsb_release -cs`-10 main"" &&    apt-get update &&    apt-get install -y --no-install-recommends         build-essential         clang-10         git         cmake         cmake-curses-gui         ninja-build         valgrind         libgflags-dev         python3-pip         python3-wheel         python3.8         python3.8-dev         libpython3.8-dev         virtualenv         swig         &&    rm -rf /var/lib/apt/lists/*', 'add-apt-repository ppa:git-core/ppa &&    apt-get update &&    apt-get install -y --no-install-recommends git &&    rm -rf /var/lib/apt/lists/*']"
robotology/gym-ignition,latest,/.docker/base.Dockerfile,ENV,2,"['VIRTUAL_ENV=/venv', 'PATH=$VIRTUAL_ENV/bin:$PATH']"
robotology/gym-ignition,latest,/.docker/base.Dockerfile,CMD,1,"['[""bash""]']"
robotology/gym-ignition,latest,/.docker/Dockerfile,ARG,3,"['from=diegoferigo/gym-ignition:pypi-master', 'pip_options=""""', 'branch=""master""']"
robotology/gym-ignition,latest,/.docker/Dockerfile,FROM,1,['${from}']
robotology/gym-ignition,latest,/.docker/Dockerfile,RUN,2,"['virtualenv -p $(which python3) ${VIRTUAL_ENV} &&    python -m pip install --upgrade pip &&    pip install ${pip_options} gym-ignition &&    rm -r $HOME/.cache/pip', 'git clone -b ${branch} https://github.com/robotology/gym-ignition /github']"
robotology/gym-ignition,latest,/.docker/Dockerfile,WORKDIR,1,['/github']
robotology/gym-ignition,latest,/.docker/Dockerfile,ENTRYPOINT,1,"['[""""]']"
robotology/gym-ignition,latest,/.docker/Dockerfile,CMD,1,"['[""bash""]']"
robotology/gym-ignition,latest,/.docker/cicd-master.Dockerfile,ARG,2,"['from=diegoferigo/gym-ignition:base', 'ignition_codename=""fortress""']"
robotology/gym-ignition,latest,/.docker/cicd-master.Dockerfile,FROM,1,['${from}']
robotology/gym-ignition,latest,/.docker/cicd-master.Dockerfile,RUN,3,"['echo ""deb http://packages.osrfoundation.org/gazebo/ubuntu-stable `lsb_release -cs` main""         > /etc/apt/sources.list.d/gazebo-stable.list &&    wget http://packages.osrfoundation.org/gazebo.key -O - | apt-key add - &&    apt-get update &&    apt-get install -y --no-install-recommends ignition-${ignition_codename} &&    rm -rf /var/lib/apt/lists/*', 'chmod 755 /entrypoint.sh', 'chmod 755 /setup_virtualenv.sh']"
robotology/gym-ignition,latest,/.docker/cicd-master.Dockerfile,COPY,2,"['entrypoint.sh /entrypoint.sh', 'setup_virtualenv.sh /setup_virtualenv.sh']"
robotology/gym-ignition,latest,/.docker/cicd-master.Dockerfile,ENTRYPOINT,1,"['[""/entrypoint.sh""]']"
robotology/gym-ignition,latest,/.docker/cicd-master.Dockerfile,CMD,1,"['[""bash""]']"
PINTO0309/tflite2tensorflow,latest,/Dockerfile,FROM,1,['nvidia/cuda:11.4.2-cudnn8-devel-ubuntu20.04']
PINTO0309/tflite2tensorflow,latest,/Dockerfile,ENV,2,"['DEBIAN_FRONTEND=noninteractive', 'USERNAME=user']"
PINTO0309/tflite2tensorflow,latest,/Dockerfile,ARG,8,"['OSVER=ubuntu2004', 'TENSORFLOWVER=2.8.0rc0', 'CPVER=cp38', 'OPENVINOVER=2021.4.582', 'OPENVINOROOTDIR=/opt/intel/openvino_2021', 'TENSORRTVER=cuda11.4-trt8.2.2.1-ga-20211214', 'APPVER', 'WKDIR=/home/user']"
PINTO0309/tflite2tensorflow,latest,/Dockerfile,RUN,17,"['echo ""dash dash/sh boolean false"" | debconf-set-selections     && dpkg-reconfigure -p low dash', ""apt-get update && apt-get install -y         automake autoconf libpng-dev nano python3-pip         curl zip unzip libtool swig zlib1g-dev pkg-config         python3-mock libpython3-dev libpython3-all-dev         g++ gcc cmake make pciutils cpio gosu wget         libgtk-3-dev libxtst-dev sudo apt-transport-https         build-essential gnupg git xz-utils vim libyaml-cpp-dev         libva-drm2 libva-x11-2 vainfo libva-wayland2 libva-glx2         libva-dev libdrm-dev xorg xorg-dev protobuf-compiler         openbox libx11-dev libgl1-mesa-glx libgl1-mesa-dev         libtbb2 libtbb-dev libopenblas-dev libopenmpi-dev     && sed -i 's/# set linenumbers/set linenumbers/g' /etc/nanorc     && apt clean     && rm -rf /var/lib/apt/lists/*"", 'ln -s /usr/bin/python3 /usr/bin/python', 'pip3 install --upgrade pip     && pip install --upgrade numpy==1.19.5     && pip install --upgrade tensorflowjs     && pip install --upgrade coremltools     && pip install --upgrade paddlepaddle     && pip install --upgrade lap     && pip install --upgrade pycocotools     && pip install --upgrade scipy     && pip install --upgrade paddle2onnx     && pip install --upgrade onnx     && pip install --upgrade onnxruntime     && pip install --upgrade onnx-simplifier     && pip install --upgrade onnxconverter-common     && pip install --upgrade onnxmltools     && pip install --upgrade tf2onnx     && pip install --upgrade onnx-tf     && pip install --upgrade tensorflow-datasets     && pip install --upgrade openvino2tensorflow     && pip install --upgrade tflite2tensorflow     && pip install --upgrade gdown     && pip install --upgrade PyYAML     && pip install --upgrade matplotlib     && pip install --upgrade tf_slim     && pip install --upgrade pandas     && pip install --upgrade numexpr     && pip install --upgrade onnx2json     && pip install --upgrade json2onnx     && python3 -m pip install onnx_graphsurgeon         --index-url https://pypi.ngc.nvidia.com     && pip install torch==1.10.0+cu113 torchvision==0.11.1+cu113 torchaudio==0.10.0+cu113         -f https://download.pytorch.org/whl/cu113/torch_stable.html     && pip install pycuda==2021.1     && pip install scikit-image     && ldconfig     && pip cache purge     && apt clean     && rm -rf /var/lib/apt/lists/*', 'wget https://github.com/PINTO0309/tflite2tensorflow/releases/download/${APPVER}/sclblonnx-0.1.9_nvc-py3-none-any.whl     && pip3 install sclblonnx-0.1.9_nvc-py3-none-any.whl     && rm sclblonnx-0.1.9_nvc-py3-none-any.whl     && apt clean     && rm -rf /var/lib/apt/lists/*', 'wget https://github.com/PINTO0309/tflite2tensorflow/releases/download/${APPVER}/tflite_runtime-${TENSORFLOWVER}-${CPVER}-none-linux_x86_64.whl     && chmod +x tflite_runtime-${TENSORFLOWVER}-${CPVER}-none-linux_x86_64.whl     && pip3 install --force-reinstall tflite_runtime-${TENSORFLOWVER}-${CPVER}-none-linux_x86_64.whl     && rm tflite_runtime-${TENSORFLOWVER}-${CPVER}-none-linux_x86_64.whl     && wget https://github.com/PINTO0309/tflite2tensorflow/releases/download/${APPVER}/flatc.tar.gz     && tar -zxvf flatc.tar.gz     && chmod +x flatc     && rm flatc.tar.gz     && wget https://github.com/PINTO0309/tflite2tensorflow/raw/main/schema/schema.fbs     && curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -     && echo ""deb https://packages.cloud.google.com/apt coral-edgetpu-stable main"" | tee /etc/apt/sources.list.d/coral-edgetpu.list     && apt-get update     && apt-get install edgetpu-compiler     && pip cache purge     && apt clean     && rm -rf /var/lib/apt/lists/*', 'wget https://github.com/PINTO0309/tflite2tensorflow/releases/download/${APPVER}/l_openvino_toolkit_p_${OPENVINOVER}.tgz     && tar xf l_openvino_toolkit_p_${OPENVINOVER}.tgz     && rm l_openvino_toolkit_p_${OPENVINOVER}.tgz     && l_openvino_toolkit_p_${OPENVINOVER}/install_openvino_dependencies.sh -y     && sed -i \'s/decline/accept/g\' l_openvino_toolkit_p_${OPENVINOVER}/silent.cfg     && l_openvino_toolkit_p_${OPENVINOVER}/install.sh --silent l_openvino_toolkit_p_${OPENVINOVER}/silent.cfg     && source ${OPENVINOROOTDIR}/bin/setupvars.sh     && ${INTEL_OPENVINO_DIR}/install_dependencies/install_openvino_dependencies.sh     && sed -i \'s/sudo -E //g\' ${INTEL_OPENVINO_DIR}/deployment_tools/model_optimizer/install_prerequisites/install_prerequisites.sh     && sed -i \'s/tensorflow/#tensorflow/g\' ${INTEL_OPENVINO_DIR}/deployment_tools/model_optimizer/requirements.txt     && sed -i \'s/numpy/#numpy/g\' ${INTEL_OPENVINO_DIR}/deployment_tools/model_optimizer/requirements.txt     && sed -i \'s/onnx/#onnx/g\' ${INTEL_OPENVINO_DIR}/deployment_tools/model_optimizer/requirements.txt     && ${INTEL_OPENVINO_DIR}/deployment_tools/model_optimizer/install_prerequisites/install_prerequisites.sh     && rm -rf l_openvino_toolkit_p_${OPENVINOVER}     && echo ""source ${OPENVINOROOTDIR}/bin/setupvars.sh"" >> .bashrc     && echo ""${OPENVINOROOTDIR}/deployment_tools/ngraph/lib/"" >> /etc/ld.so.conf     && echo ""${OPENVINOROOTDIR}/deployment_tools/inference_engine/lib/intel64/"" >> /etc/ld.so.conf     && pip cache purge     && apt clean     && rm -rf /var/lib/apt/lists/*', 'wget https://github.com/PINTO0309/tflite2tensorflow/releases/download/${APPVER}/nv-tensorrt-repo-${OSVER}-${TENSORRTVER}_1-1_amd64.deb     && dpkg -i nv-tensorrt-repo-${OSVER}-${TENSORRTVER}_1-1_amd64.deb     && apt-key add /var/nv-tensorrt-repo-${OSVER}-${TENSORRTVER}/7fa2af80.pub     && apt-get update     && apt-get install -y         tensorrt uff-converter-tf graphsurgeon-tf         python3-libnvinfer-dev onnx-graphsurgeon     && rm nv-tensorrt-repo-${OSVER}-${TENSORRTVER}_1-1_amd64.deb     && cd /usr/src/tensorrt/samples/trtexec     && make     && apt clean     && rm -rf /var/lib/apt/lists/*', 'wget https://github.com/PINTO0309/tflite2tensorflow/releases/download/${APPVER}/tensorflow-${TENSORFLOWVER}-${CPVER}-none-linux_x86_64.whl     && pip3 install --force-reinstall tensorflow-${TENSORFLOWVER}-${CPVER}-none-linux_x86_64.whl     && rm tensorflow-${TENSORFLOWVER}-${CPVER}-none-linux_x86_64.whl     && pip cache purge     && apt clean     && rm -rf /var/lib/apt/lists/*', 'git clone --recursive https://github.com/onnx/onnx-tensorrt     && cd onnx-tensorrt     && git checkout 1f041ce6d7b30e9bce0aacb2243309edffc8fb3c     && mkdir build && cd build     && cmake .. -DTENSORRT_ROOT=/usr/src/tensorrt     && make -j$(nproc) && make install', 'git clone https://github.com/NVIDIA-AI-IOT/torch2trt     && cd torch2trt     && git checkout 0400b38123d01cc845364870bdf0a0044ea2b3b2     && wget https://github.com/NVIDIA-AI-IOT/torch2trt/commit/8b9fb46ddbe99c2ddf3f1ed148c97435cbeb8fd3.patch     && git apply 8b9fb46ddbe99c2ddf3f1ed148c97435cbeb8fd3.patch     && python3 setup.py install', 'mkdir sample_npy     && wget -O sample_npy/calibration_data_img_sample.npy https://github.com/PINTO0309/tflite2tensorflow/releases/download/${APPVER}/calibration_data_img_sample.npy', 'apt clean     && rm -rf /var/lib/apt/lists/*', 'echo ""root:root"" | chpasswd     && adduser --disabled-password --gecos """" ""${USERNAME}""     && echo ""${USERNAME}:${USERNAME}"" | chpasswd     && echo ""%${USERNAME}    ALL=(ALL)   NOPASSWD:    ALL"" >> /etc/sudoers.d/${USERNAME}     && chmod 0440 /etc/sudoers.d/${USERNAME}', 'sudo chown ${USERNAME}:${USERNAME} ${WKDIR}    && sudo chmod 777 ${WKDIR}/.bashrc', 'cd ${OPENVINOROOTDIR}/install_dependencies/     && yes | sudo -E ./install_NEO_OCL_driver.sh     && cd ${WKDIR}     && wget https://github.com/intel/compute-runtime/releases/download/21.29.20389/intel-gmmlib_21.2.1_amd64.deb     && wget https://github.com/intel/intel-graphics-compiler/releases/download/igc-1.0.7862/intel-igc-core_1.0.7862_amd64.deb     && wget https://github.com/intel/intel-graphics-compiler/releases/download/igc-1.0.7862/intel-igc-opencl_1.0.7862_amd64.deb     && wget https://github.com/intel/compute-runtime/releases/download/21.29.20389/intel-opencl_21.29.20389_amd64.deb     && wget https://github.com/intel/compute-runtime/releases/download/21.29.20389/intel-ocloc_21.29.20389_amd64.deb     && wget https://github.com/intel/compute-runtime/releases/download/21.29.20389/intel-level-zero-gpu_1.1.20389_amd64.deb     && sudo dpkg -i *.deb     && rm *.deb     && sudo apt clean     && sudo rm -rf /var/lib/apt/lists/*', 'echo \'GPU=$(python3 -c ""import torch;print(torch.cuda.is_available())"")\' >> ${HOME}/.bashrc     && echo \'if [ $GPU = ""True"" ]; then\' >> ${HOME}/.bashrc     && echo ""export PATH=${PATH}:/usr/src/tensorrt/bin:/onnx-tensorrt/build"" >> ${HOME}/.bashrc     && echo ""cd ${HOME}/onnx-tensorrt"" >> ${HOME}/.bashrc     && echo ""sudo python3 setup.py install"" >> ${HOME}/.bashrc     && echo ""fi"" >> ${HOME}/.bashrc     && echo ""cd ${WKDIR}"" >> ${HOME}/.bashrc     && echo ""cd ${HOME}/workdir"" >> ${HOME}/.bashrc']"
PINTO0309/tflite2tensorflow,latest,/Dockerfile,COPY,1,['bashrc ${WKDIR}/.bashrc']
PINTO0309/tflite2tensorflow,latest,/Dockerfile,WORKDIR,1,['${WKDIR}']
PINTO0309/tflite2tensorflow,latest,/Dockerfile,USER,1,['${USERNAME}']
equinor/gordo,latest,/Dockerfile,FROM,2,"['python:3.7.11-buster as builder', 'python:3.7.10-slim-buster']"
equinor/gordo,latest,/Dockerfile,COPY,8,"['. /code', '.git /code/', '--from=builder /code/prereq.txt .', 'requirements/full_requirements.txt .', '--from=builder /code/dist/gordo-packed.tar.gz .', './run_workflow_and_argo.sh ${HOME}/run_workflow_and_argo.sh', './examples ${HOME}/examples', './resources ${HOME}/resources']"
equinor/gordo,latest,/Dockerfile,WORKDIR,2,"['/code', '${HOME}']"
equinor/gordo,latest,/Dockerfile,RUN,12,"['rm -rf /code/dist     && python setup.py sdist     && mv /code/dist/$(ls /code/dist | head -1) /code/dist/gordo-packed.tar.gz', 'cat /code/requirements/full_requirements.txt | grep tensorflow== > /code/prereq.txt     && cat /code/requirements/full_requirements.txt | grep pyarrow== >> /code/prereq.txt     && cat /code/requirements/full_requirements.txt | grep scipy== >> /code/prereq.txt     && cat /code/requirements/full_requirements.txt | grep catboost== >> /code/prereq.txt', 'apt-get update && apt-get install -y     libgcrypt20=1.8.4-5+deb10u1     libgnutls30=3.6.7-4+deb10u7     libhogweed4=3.4.1-1+deb10u1     liblz4-1=1.8.3-1+deb10u1     libnettle6=3.4.1-1+deb10u1     libssl1.1=1.1.1d-0+deb10u7     openssl=1.1.1d-0+deb10u7  && rm -rf /var/lib/apt/lists/*', 'groupadd -g 999 gordo &&     useradd -r -u 999 -g gordo gordo', '--mount=type=secret,id=pip_index_url     pip install --extra-index-url ""$(cat /run/secrets/pip_index_url)"" --no-deps -r prereq.txt --no-cache-dir', '--mount=type=secret,id=pip_index_url     pip install --extra-index-url ""$(cat /run/secrets/pip_index_url)"" -r full_requirements.txt --no-cache-dir', 'pip install gordo-packed.tar.gz[full]', 'apt-get update && apt-get install -y     curl     jq  && rm -rf /var/lib/apt/lists/*', 'curl -sSL -o /usr/local/bin/kubectl https://storage.googleapis.com/kubernetes-release/release/$KUBECTL_VERSION/bin/linux/amd64/kubectl &&  chmod +x /usr/local/bin/kubectl', 'curl -sLO https://github.com/argoproj/argo-workflows/releases/download/$ARGO_VERSION/argo-linux-amd64.gz &&    gzip -d < argo-linux-amd64.gz > /usr/local/bin/argo &&    chmod +x /usr/local/bin/argo', 'cp ${HOME}/build.sh /usr/bin/build     && chmod a+x /usr/bin/build', 'chown -R gordo:gordo ${HOME}']"
equinor/gordo,latest,/Dockerfile,ENV,2,"['HOME ""/home/gordo""', 'PATH ""${HOME}/.local/bin:${PATH}""']"
equinor/gordo,latest,/Dockerfile,ARG,3,"['HTTPS_PROXY', 'KUBECTL_VERSION=""v1.16.9""', 'ARGO_VERSION=""v2.12.11""']"
equinor/gordo,latest,/Dockerfile,ADD,1,['build.sh ${HOME}/build.sh']
equinor/gordo,latest,/Dockerfile,USER,1,['gordo']
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/Dockerfile.cmake,FROM,1,['ubuntu:16.04']
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/Dockerfile.cmake,LABEL,1,"['maintainer=""Shanqing Cai <cais@google.com>""']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/Dockerfile.cmake,COPY,1,['install/*.sh /install/']
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/Dockerfile.cmake,RUN,12,"['/install/install_bootstrap_deb_packages.sh', '/install/install_deb_packages.sh', 'apt-get update', 'apt-get install -y --no-install-recommends python-pip', 'pip install --upgrade wheel', 'pip install --upgrade astor', 'pip install --upgrade gast', 'pip install --upgrade numpy', 'pip install --upgrade termcolor', 'pip install --upgrade keras_applications', 'pip install --upgrade keras_preprocessing', 'apt-get install -t xenial-backports -y golang-1.9']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/Dockerfile.cmake,ENV,1,['PATH=${PATH}:/usr/lib/go-1.9/bin']
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/Dockerfile.cpu,FROM,1,['ubuntu:16.04']
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/Dockerfile.cpu,LABEL,1,"['maintainer=""Jan Prach <jendap@google.com>""']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/Dockerfile.cpu,COPY,2,"['install/*.sh /install/', 'install/.bazelrc /etc/bazel.bazelrc']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/Dockerfile.cpu,RUN,9,"['/install/install_bootstrap_deb_packages.sh', 'add-apt-repository -y ppa:openjdk-r/ppa &&     add-apt-repository -y ppa:george-edison55/cmake-3.x', '/install/install_deb_packages.sh', '/install/install_pip_packages.sh', '/install/install_bazel.sh', '/install/install_proto3.sh', '/install/install_buildifier.sh', '/install/install_auditwheel.sh', '/install/install_golang.sh']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/Dockerfile.gpu.ppc64le,FROM,1,['nvidia/cuda-ppc64le:9.2-cudnn7-devel-ubuntu16.04']
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/Dockerfile.gpu.ppc64le,LABEL,1,"['maintainer=""William Irons <wdirons@us.ibm.com>""']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/Dockerfile.gpu.ppc64le,RUN,10,"['cp -P /usr/include/cudnn.h /usr/local/cuda/include', 'cp -P /usr/lib/powerpc64le-linux-gnu/libcudnn* /usr/local/cuda/lib64', '/install/install_bootstrap_deb_packages.sh', 'add-apt-repository -y ppa:openjdk-r/ppa', '/install/install_deb_packages.sh', '/install/install_openblas_ppc64le.sh', '/install/install_hdf5_ppc64le.sh', '/install/install_pip_packages.sh', '/install/install_bazel_from_source.sh', '/install/install_golang_ppc64le.sh']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/Dockerfile.gpu.ppc64le,COPY,2,"['install/*.sh /install/', 'install/.bazelrc /etc/bazel.bazelrc']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/Dockerfile.gpu.ppc64le,ARG,1,['DEBIAN_FRONTEND=noninteractive']
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/Dockerfile.gpu.ppc64le,ENV,5,"['LD_LIBRARY_PATH /usr/local/cuda/extras/CUPTI/lib64:$LD_LIBRARY_PATH', 'TF_NEED_CUDA 1', 'TF_CUDA_COMPUTE_CAPABILITIES 3.0', 'TF_CUDA_VERSION 9.2', 'CUDA_TOOLKIT_PATH /usr/local/cuda-9.2']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/Dockerfile.debian.jessie.cpu,FROM,1,['debian:jessie']
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/Dockerfile.debian.jessie.cpu,LABEL,1,"['maintainer=""Jan Prach <jendap@google.com>""']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/Dockerfile.debian.jessie.cpu,COPY,2,"['install/*.sh /install/', 'install/.bazelrc /etc/bazel.bazelrc']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/Dockerfile.debian.jessie.cpu,RUN,8,"['/install/install_bootstrap_deb_packages.sh', 'echo ""deb [check-valid-until=no] http://archive.debian.org/debian jessie-backports main"" |     tee -a /etc/apt/sources.list', 'apt-get update &&     apt-get install -y --no-install-recommends -t jessie-backports         openjdk-8-jre-headless ca-certificates-java &&     apt-get clean &&     rm -rf /var/lib/apt/lists/*', '/install/install_deb_packages.sh', '/install/install_pip_packages.sh', '/install/install_bazel.sh', '/install/install_golang.sh', 'pip install --upgrade virtualenv']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/Dockerfile.pi-python3,FROM,1,['ubuntu:16.04']
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/Dockerfile.pi-python3,LABEL,1,"['maintainer=""Jan Prach <jendap@google.com>""']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/Dockerfile.pi-python3,COPY,2,"['install/*.sh /install/', 'install/.bazelrc /etc/bazel.bazelrc']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/Dockerfile.pi-python3,RUN,10,"['/install/install_bootstrap_deb_packages.sh', 'add-apt-repository -y ppa:openjdk-r/ppa &&     add-apt-repository -y ppa:george-edison55/cmake-3.x', '/install/install_deb_packages.sh', '/install/install_pip_packages.sh', '/install/install_bazel.sh', '/install/install_proto3.sh', '/install/install_buildifier.sh', '/install/install_auditwheel.sh', '/install/install_golang.sh', '/install/install_pi_python3_toolchain.sh']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/Dockerfile.gpu,FROM,1,['nvidia/cuda:10.0-cudnn7-devel-ubuntu16.04']
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/Dockerfile.gpu,LABEL,1,"['maintainer=""Jan Prach <jendap@google.com>""']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/Dockerfile.gpu,RUN,10,"['cp -P /usr/include/cudnn.h /usr/local/cuda/include', 'cp -P /usr/lib/x86_64-linux-gnu/libcudnn* /usr/local/cuda/lib64', 'apt-get update         && apt-get install nvinfer-runtime-trt-repo-ubuntu1604-5.0.2-ga-cuda10.0         && apt-get update         && apt-get install -y --no-install-recommends libnvinfer5=5.0.2-1+cuda10.0 libnvinfer-dev=5.0.2-1+cuda10.0', '/install/install_bootstrap_deb_packages.sh', 'add-apt-repository -y ppa:openjdk-r/ppa &&     add-apt-repository -y ppa:george-edison55/cmake-3.x', '/install/install_deb_packages.sh', '/install/install_pip_packages.sh', '/install/install_bazel.sh', '/install/install_golang.sh', 'mkdir /usr/local/cuda/lib &&      ln -s /usr/lib/x86_64-linux-gnu/libnccl.so.2 /usr/local/cuda/lib/libnccl.so.2 &&     ln -s /usr/include/nccl.h /usr/local/cuda/include/nccl.h']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/Dockerfile.gpu,COPY,2,"['install/*.sh /install/', 'install/.bazelrc /etc/bazel.bazelrc']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/Dockerfile.gpu,ARG,1,['DEBIAN_FRONTEND=noninteractive']
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/Dockerfile.gpu,ENV,3,"['LD_LIBRARY_PATH /usr/local/cuda/extras/CUPTI/lib64:$LD_LIBRARY_PATH', 'TF_NEED_CUDA 1', 'TF_NEED_TENSORRT 1']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/Dockerfile.pi,FROM,1,['ubuntu:14.04']
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/Dockerfile.pi,LABEL,1,"['maintainer=""Jan Prach <jendap@google.com>""']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/Dockerfile.pi,COPY,2,"['install/*.sh /install/', 'install/.bazelrc /etc/bazel.bazelrc']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/Dockerfile.pi,RUN,10,"['/install/install_bootstrap_deb_packages.sh', 'add-apt-repository -y ppa:openjdk-r/ppa &&     add-apt-repository -y ppa:george-edison55/cmake-3.x', '/install/install_deb_packages.sh', '/install/install_pip_packages.sh', '/install/install_bazel.sh', '/install/install_proto3.sh', '/install/install_buildifier.sh', '/install/install_auditwheel.sh', '/install/install_golang.sh', '/install/install_pi_toolchain.sh']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/Dockerfile.custom_op_centos,FROM,1,['quay.io/aicoe/manylinux2010_x86_64:latest']
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/Dockerfile.custom_op_centos,LABEL,1,"['maintainer=""Amit Patankar <amitpatankar@google.com>""']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/Dockerfile.custom_op_centos,COPY,2,"['install/*.sh /install/', 'install/.bazelrc /etc/bazel.bazelrc']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/Dockerfile.custom_op_centos,RUN,7,"['/install/install_yum_packages.sh', 'bash install/install_centos_python35.sh', '/install/install_centos_pip_packages.sh', '/install/install_bazel_from_source.sh', '/install/install_proto3.sh', '/install/install_buildifier.sh', '/install/install_golang.sh']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/Dockerfile.custom_op_centos,ENV,1,"['PATH=""/opt/rh/python27/root/usr/bin:/opt/rh/devtoolset-7/root/usr/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin""     LD_LIBRARY_PATH=""/opt/rh/python27/root/usr/lib64:/opt/rh/devtoolset-7/root/usr/lib64:/opt/rh/devtoolset-7/root/usr/lib:/opt/rh/devtoolset-7/root/usr/lib64/dyninst:/opt/rh/devtoolset-7/root/usr/lib/dyninst:/opt/rh/devtoolset-7/root/usr/lib64:/opt/rh/devtoolset-7/root/usr/lib""     PCP_DIR=""/opt/rh/devtoolset-7/root""     PERL5LIB=""/opt/rh/devtoolset-7/root//usr/lib64/perl5/vendor_perl:/opt/rh/devtoolset-7/root/usr/lib/perl5:/opt/rh/devtoolset-7/root//usr/share/perl5/vendor_perl""     PKG_CONFIG_PATH=""/opt/rh/python27/root/usr/lib64/pkgconfig/""']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/Dockerfile.micro,FROM,1,['python:3.5-stretch']
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/Dockerfile.micro,LABEL,1,"['maintainer=""Pete Warden <petewarden@google.com>""']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/Dockerfile.micro,RUN,1,['apt-get update && apt-get install -y zip']
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/Dockerfile.cpu.mpi,FROM,1,['ubuntu:16.04']
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/Dockerfile.cpu.mpi,LABEL,1,"['authors=""Andrew Gibiansky <andrew.gibiansky@gmail.com>, Joel Hestness <jthestness@gmail.com>""']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/Dockerfile.cpu.mpi,COPY,2,"['install/*.sh /install/', 'install/.bazelrc /root/.bazelrc']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/Dockerfile.cpu.mpi,RUN,8,"['/install/install_bootstrap_deb_packages.sh', 'add-apt-repository -y ppa:openjdk-r/ppa &&     add-apt-repository -y ppa:mc3man/trusty-media &&     add-apt-repository -y ppa:george-edison55/cmake-3.x', '/install/install_deb_packages.sh', '/install/install_pip_packages.sh', '/install/install_bazel.sh', '/install/install_proto3.sh', '/install/install_buildifier.sh', '/install/install_mpi.sh']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/Dockerfile.cpu.mpi,ENV,3,"['BAZELRC /root/.bazelrc', 'TF_NEED_MPI 1', 'MPI_HOME /usr/lib/openmpi']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/Dockerfile.rbe.cuda10.1-cudnn7-centos6,FROM,1,['nvidia/cuda:10.1-cudnn7-devel-centos6']
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/Dockerfile.rbe.cuda10.1-cudnn7-centos6,LABEL,1,"['maintainer=""Amit Patankar <amitpatankar@google.com>""']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/Dockerfile.rbe.cuda10.1-cudnn7-centos6,COPY,1,['install/*.sh /install/']
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/Dockerfile.rbe.cuda10.1-cudnn7-centos6,RUN,7,"['bash install/install_yum_packages.sh', 'rpm -ihv tensorrt.rpm &&     yum install -y --nogpgcheck tensorrt &&     rm -f tensorrt.rpm', 'bash install/install_centos_python36.sh', 'bash install/install_centos_pip_packages.sh', 'update-alternatives --install /usr/bin/python2 python2 /opt/rh/python27/root/usr/bin/python2.7 0', 'update-alternatives --install /usr/bin/python3 python3 /usr/local/bin/python3.6 0', 'ln -s /usr/lib/jvm/java /usr/lib/jvm/java-8-openjdk-amd64']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/Dockerfile.rbe.cuda10.1-cudnn7-centos6,ADD,1,['tensorrt.rpm tensorrt.rpm']
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/Dockerfile.rbe.cuda10.1-cudnn7-centos6,ENV,1,"['PATH=""/opt/rh/python27/root/usr/bin:/opt/rh/devtoolset-7/root/usr/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin""     LD_LIBRARY_PATH=""/opt/rh/python27/root/usr/lib64:/opt/rh/devtoolset-7/root/usr/lib64:/opt/rh/devtoolset-7/root/usr/lib:/opt/rh/devtoolset-7/root/usr/lib64/dyninst:/opt/rh/devtoolset-7/root/usr/lib/dyninst:/opt/rh/devtoolset-7/root/usr/lib64:/opt/rh/devtoolset-7/root/usr/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64""     PCP_DIR=""/opt/rh/devtoolset-7/root""     PERL5LIB=""/opt/rh/devtoolset-7/root//usr/lib64/perl5/vendor_perl:/opt/rh/devtoolset-7/root/usr/lib/perl5:/opt/rh/devtoolset-7/root//usr/share/perl5/vendor_perl""     PKG_CONFIG_PATH=""/opt/rh/python27/root/usr/lib64/pkgconfig/""']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/Dockerfile.custom_op_ubuntu_16,FROM,2,"['ubuntu:16.04 as devtoolset', 'ubuntu:16.04']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/Dockerfile.custom_op_ubuntu_16,LABEL,2,"['maintainer=""Amit Patankar <amitpatankar@google.com>""', 'maintainer=""Amit Patankar <amitpatankar@google.com>""']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/Dockerfile.custom_op_ubuntu_16,ENV,3,"['DEBIAN_FRONTEND=noninteractive', 'GOROOT=/usr/local/go', 'PATH=$GOROOT/bin:$PATH']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/Dockerfile.custom_op_ubuntu_16,RUN,16,"['apt-get update && apt-get install -y       bzip2       cpio       file       flex       g++       make       patch       rpm2cpio       unar       wget       tar       xz-utils       &&     rm -rf /var/lib/apt/lists/*', '/build_devtoolset.sh devtoolset-7 /dt7', '/build_devtoolset.sh devtoolset-8 /dt8', '/install/install_bootstrap_deb_packages.sh', '/install/install_deb_packages.sh', '/install/install_clang.sh', '/install/install_bazel.sh', '/install/install_buildifier.sh', '/install/install_golang.sh', 'add-apt-repository ppa:jonathonf/python-3.6 &&     apt-get update && apt-get install -y     python3.6 python3.6-dev python3-pip python3.6-venv &&     rm -rf /var/lib/apt/lists/* &&     python3.6 -m pip install pip --upgrade &&     update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.6 0', '/install/install_pip_packages.sh', '/install/install_auditwheel.sh', 'ln -s ""/usr/include/x86_64-linux-gnu/python2.7"" ""/dt7/usr/include/x86_64-linux-gnu/python2.7""', 'ln -s ""/usr/include/x86_64-linux-gnu/python2.7"" ""/dt8/usr/include/x86_64-linux-gnu/python2.7""', 'ln -s ""/usr/include/x86_64-linux-gnu/python3.6m"" ""/dt7/usr/include/x86_64-linux-gnu/python3.6m""', 'ln -s ""/usr/include/x86_64-linux-gnu/python3.6m"" ""/dt8/usr/include/x86_64-linux-gnu/python3.6m""']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/Dockerfile.custom_op_ubuntu_16,ADD,3,"['devtoolset/fixlinks.sh fixlinks.sh', 'devtoolset/build_devtoolset.sh build_devtoolset.sh', 'devtoolset/rpm-patch.sh rpm-patch.sh']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/Dockerfile.custom_op_ubuntu_16,COPY,3,"['--from=devtoolset /dt7 /dt7', '--from=devtoolset /dt8 /dt8', 'install/*.sh /install/']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/Dockerfile.custom_op_ubuntu_16,ARG,1,['DEBIAN_FRONTEND=noninteractive']
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/Dockerfile.rbe.cpu-centos6,FROM,1,['quay.io/aicoe/manylinux2010_x86_64:latest']
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/Dockerfile.rbe.cpu-centos6,LABEL,1,"['maintainer=""Amit Patankar <amitpatankar@google.com>""']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/Dockerfile.rbe.cpu-centos6,RUN,8,"['yum install -y centos-release-scl &&     yum install -y       devtoolset-7       java-1.8.0-openjdk-devel       patch       python27       wget &&     yum clean all -y', 'bash install/install_yum_packages.sh', 'bash install/install_centos_python36.sh', 'bash install/install_centos_pip_packages.sh', 'bash install/install_golang_centos.sh', 'update-alternatives --install /usr/bin/python2 python2 /opt/rh/python27/root/usr/bin/python2.7 0', 'update-alternatives --install /usr/bin/python3 python3 /usr/local/bin/python3.6 0', 'ln -s /usr/lib/jvm/java /usr/lib/jvm/java-8-openjdk-amd64']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/Dockerfile.rbe.cpu-centos6,ENV,3,"['PATH=""/opt/rh/python27/root/usr/bin:/opt/rh/devtoolset-7/root/usr/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin""     LD_LIBRARY_PATH=""/opt/rh/python27/root/usr/lib64:/opt/rh/devtoolset-7/root/usr/lib64:/opt/rh/devtoolset-7/root/usr/lib:/opt/rh/devtoolset-7/root/usr/lib64/dyninst:/opt/rh/devtoolset-7/root/usr/lib/dyninst:/opt/rh/devtoolset-7/root/usr/lib64:/opt/rh/devtoolset-7/root/usr/lib""     PCP_DIR=""/opt/rh/devtoolset-7/root""     PERL5LIB=""/opt/rh/devtoolset-7/root//usr/lib64/perl5/vendor_perl:/opt/rh/devtoolset-7/root/usr/lib/perl5:/opt/rh/devtoolset-7/root//usr/share/perl5/vendor_perl""     PKG_CONFIG_PATH=""/opt/rh/python27/root/usr/lib64/pkgconfig/""', 'GOROOT=/usr/local/go', 'PATH=$GOROOT/bin:$PATH']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/Dockerfile.rbe.cpu-centos6,COPY,1,['install/*.sh /install/']
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/Dockerfile.rbe.cuda10.0-cudnn7-centos6,FROM,1,['nvidia/cuda:10.0-cudnn7-devel-centos6']
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/Dockerfile.rbe.cuda10.0-cudnn7-centos6,LABEL,1,"['maintainer=""Amit Patankar <amitpatankar@google.com>""']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/Dockerfile.rbe.cuda10.0-cudnn7-centos6,COPY,1,['install/*.sh /install/']
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/Dockerfile.rbe.cuda10.0-cudnn7-centos6,RUN,7,"['bash install/install_yum_packages.sh', 'rpm -ihv tensorrt.rpm &&     yum install -y --nogpgcheck tensorrt &&     rm -f tensorrt.rpm', 'bash install/install_centos_python36.sh', 'bash install/install_centos_pip_packages.sh', 'update-alternatives --install /usr/bin/python2 python2 /opt/rh/python27/root/usr/bin/python2.7 0', 'update-alternatives --install /usr/bin/python3 python3 /usr/local/bin/python3.6 0', 'ln -s /usr/lib/jvm/java /usr/lib/jvm/java-8-openjdk-amd64']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/Dockerfile.rbe.cuda10.0-cudnn7-centos6,ADD,1,['tensorrt.rpm tensorrt.rpm']
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/Dockerfile.rbe.cuda10.0-cudnn7-centos6,ENV,1,"['PATH=""/opt/rh/python27/root/usr/bin:/opt/rh/devtoolset-7/root/usr/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin""     LD_LIBRARY_PATH=""/opt/rh/python27/root/usr/lib64:/opt/rh/devtoolset-7/root/usr/lib64:/opt/rh/devtoolset-7/root/usr/lib:/opt/rh/devtoolset-7/root/usr/lib64/dyninst:/opt/rh/devtoolset-7/root/usr/lib/dyninst:/opt/rh/devtoolset-7/root/usr/lib64:/opt/rh/devtoolset-7/root/usr/lib:/usr/local/nvidia/lib:/usr/local/nvidia/lib64""     PCP_DIR=""/opt/rh/devtoolset-7/root""     PERL5LIB=""/opt/rh/devtoolset-7/root//usr/lib64/perl5/vendor_perl:/opt/rh/devtoolset-7/root/usr/lib/perl5:/opt/rh/devtoolset-7/root//usr/share/perl5/vendor_perl""     PKG_CONFIG_PATH=""/opt/rh/python27/root/usr/lib64/pkgconfig/""']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/Dockerfile.hadoop,FROM,1,['ubuntu:16.04']
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/Dockerfile.hadoop,LABEL,1,"['maintainer=""Jonathan Hseu <jhseu@google.com>""']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/Dockerfile.hadoop,COPY,2,"['install/*.sh /install/', 'install/.bazelrc /etc/bazel.bazelrc']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/Dockerfile.hadoop,RUN,8,"['/install/install_bootstrap_deb_packages.sh', 'add-apt-repository -y ppa:openjdk-r/ppa &&     add-apt-repository -y ppa:george-edison55/cmake-3.x', '/install/install_deb_packages.sh', '/install/install_pip_packages.sh', '/install/install_bazel.sh', '/install/install_proto3.sh', '/install/install_buildifier.sh', '/install/install_hadoop.sh']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/Dockerfile.custom_op_ubuntu_16_gpu,FROM,2,"['nvidia/cuda:10.0-cudnn7-devel-ubuntu16.04 as devtoolset', 'nvidia/cuda:10.0-cudnn7-devel-ubuntu16.04']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/Dockerfile.custom_op_ubuntu_16_gpu,LABEL,2,"['maintainer=""Amit Patankar <amitpatankar@google.com>""', 'maintainer=""Amit Patankar <amitpatankar@google.com>""']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/Dockerfile.custom_op_ubuntu_16_gpu,ENV,2,"['DEBIAN_FRONTEND=noninteractive', 'TF_NEED_CUDA=1']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/Dockerfile.custom_op_ubuntu_16_gpu,RUN,14,"['apt-get update && apt-get install -y       cpio       file       flex       g++       make       rpm2cpio       unar       wget       &&     rm -rf /var/lib/apt/lists/*', '/build_devtoolset.sh devtoolset-7 /dt7', '/build_devtoolset.sh devtoolset-8 /dt8', 'apt-get update && apt-get install -y     libnvinfer-dev=5.1.5-1+cuda10.0     libnvinfer5=5.1.5-1+cuda10.0       &&     rm -rf /var/lib/apt/lists/*', '/install/install_bootstrap_deb_packages.sh', '/install/install_deb_packages.sh', '/install/install_clang.sh', '/install/install_bazel.sh', '/install/install_buildifier.sh', 'add-apt-repository ppa:jonathonf/python-3.6 &&     apt-get update && apt-get install -y     python3.6 python3.6-dev python3-pip python3.6-venv &&     rm -rf /var/lib/apt/lists/* &&     python3.6 -m pip install pip --upgrade &&     update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.6 0', '/install/install_pip_packages.sh', '/install/install_auditwheel.sh', 'ln -s ""/usr/include/x86_64-linux-gnu/python3.6m"" ""/dt7/usr/include/x86_64-linux-gnu/python3.6m""', 'ln -s ""/usr/include/x86_64-linux-gnu/python3.6m"" ""/dt8/usr/include/x86_64-linux-gnu/python3.6m""']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/Dockerfile.custom_op_ubuntu_16_gpu,ADD,3,"['devtoolset/fixlinks.sh fixlinks.sh', 'devtoolset/build_devtoolset.sh build_devtoolset.sh', 'devtoolset/rpm-patch.sh rpm-patch.sh']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/Dockerfile.custom_op_ubuntu_16_gpu,COPY,3,"['--from=devtoolset /dt7 /dt7', '--from=devtoolset /dt8 /dt8', 'install/*.sh /install/']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/Dockerfile.custom_op_ubuntu_16_gpu,ARG,1,['DEBIAN_FRONTEND=noninteractive']
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/Dockerfile.rbe.ubuntu16.04-manylinux2010,FROM,2,"['ubuntu:16.04 as devtoolset', 'ubuntu:16.04']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/Dockerfile.rbe.ubuntu16.04-manylinux2010,ENV,3,"['DEBIAN_FRONTEND=noninteractive', 'GOROOT=/usr/local/go', 'PATH=$GOROOT/bin:$PATH']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/Dockerfile.rbe.ubuntu16.04-manylinux2010,RUN,14,"['apt-get update && apt-get install -y       bzip2       cpio       file       flex       g++       make       patch       rpm2cpio       unar       wget       tar       xz-utils       &&     rm -rf /var/lib/apt/lists/*', '/build_devtoolset.sh devtoolset-7 /dt7', '/build_devtoolset.sh devtoolset-8 /dt8', '/install/install_bootstrap_deb_packages.sh', '/install/install_deb_packages.sh', '/install/install_clang.sh', '/install/install_bazel.sh', '/install/install_golang.sh', 'add-apt-repository ppa:jonathonf/python-3.6 &&     apt-get update && apt-get install -y     python3.6 python3.6-dev python3-pip python3.6-venv &&     rm -rf /var/lib/apt/lists/* &&     python3.6 -m pip install pip --upgrade &&     update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.6 0', '/install/install_pip_packages.sh', 'ln -s ""/usr/include/x86_64-linux-gnu/python2.7"" ""/dt7/usr/include/x86_64-linux-gnu/python2.7""', 'ln -s ""/usr/include/x86_64-linux-gnu/python2.7"" ""/dt8/usr/include/x86_64-linux-gnu/python2.7""', 'ln -s ""/usr/include/x86_64-linux-gnu/python3.6m"" ""/dt7/usr/include/x86_64-linux-gnu/python3.6m""', 'ln -s ""/usr/include/x86_64-linux-gnu/python3.6m"" ""/dt8/usr/include/x86_64-linux-gnu/python3.6m""']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/Dockerfile.rbe.ubuntu16.04-manylinux2010,ADD,3,"['devtoolset/fixlinks.sh fixlinks.sh', 'devtoolset/build_devtoolset.sh build_devtoolset.sh', 'devtoolset/rpm-patch.sh rpm-patch.sh']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/Dockerfile.rbe.ubuntu16.04-manylinux2010,COPY,3,"['--from=devtoolset /dt7 /dt7', '--from=devtoolset /dt8 /dt8', 'install/*.sh /install/']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/Dockerfile.rbe.ubuntu16.04-manylinux2010,ARG,1,['DEBIAN_FRONTEND=noninteractive']
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/Dockerfile.pi-python37,FROM,1,['ubuntu:16.04']
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/Dockerfile.pi-python37,LABEL,1,"['maintainer=""Jan Prach <jendap@google.com>""']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/Dockerfile.pi-python37,COPY,2,"['install/*.sh /install/', 'install/.bazelrc /etc/bazel.bazelrc']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/Dockerfile.pi-python37,RUN,10,"['/install/install_bootstrap_deb_packages.sh', 'add-apt-repository -y ppa:openjdk-r/ppa &&     add-apt-repository -y ppa:george-edison55/cmake-3.x', '/install/install_deb_packages.sh', '/install/install_pip_packages.sh', '/install/install_bazel.sh', '/install/install_proto3.sh', '/install/install_buildifier.sh', '/install/install_auditwheel.sh', '/install/install_golang.sh', '/install/install_pi_python37_toolchain.sh']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/Dockerfile.rocm,FROM,1,['ubuntu:xenial']
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/Dockerfile.rocm,MAINTAINER,1,['Jeff Poznanovic <jeffrey.poznanovic@amd.com>']
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/Dockerfile.rocm,ARG,3,"['DEB_ROCM_REPO=http://repo.radeon.com/rocm/apt/2.6/', 'ROCM_PATH=/opt/rocm', 'DEBIAN_FRONTEND=noninteractive']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/Dockerfile.rocm,ENV,10,"['DEBIAN_FRONTEND noninteractive', 'TF_NEED_ROCM 1', 'HOME /root/', 'HCC_HOME=$ROCM_PATH/hcc', 'HIP_PATH=$ROCM_PATH/hip', 'OPENCL_ROOT=$ROCM_PATH/opencl', 'PATH=""$HCC_HOME/bin:$HIP_PATH/bin:${PATH}""', 'PATH=""$ROCM_PATH/bin:${PATH}""', 'PATH=""$OPENCL_ROOT/bin:${PATH}""', 'TF_NEED_ROCM 1']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/Dockerfile.rocm,RUN,13,"['apt update && apt install -y wget software-properties-common', 'apt-get clean all', 'wget -qO - $DEB_ROCM_REPO/rocm.gpg.key | apt-key add -', 'sh -c  ""echo deb [arch=amd64] $DEB_ROCM_REPO xenial main > /etc/apt/sources.list.d/rocm.list""', 'apt-get update --allow-insecure-repositories && DEBIAN_FRONTEND=noninteractive apt-get install -y   build-essential   clang-3.8   clang-format-3.8   clang-tidy-3.8   cmake   cmake-qt-gui   ssh   curl   apt-utils   pkg-config   g++-multilib   git   libunwind-dev   libfftw3-dev   libelf-dev   libncurses5-dev   libpthread-stubs0-dev   vim   gfortran   libboost-program-options-dev   libssl-dev   libboost-dev   libboost-system-dev   libboost-filesystem-dev   rpm   libnuma-dev   pciutils   virtualenv   python-pip   python3-pip   libxml2   libxml2-dev   wget &&   apt-get clean &&   rm -rf /var/lib/apt/lists/*', 'apt-get update --allow-insecure-repositories &&     DEBIAN_FRONTEND=noninteractive apt-get install -y --allow-unauthenticated     rocm-dev rocm-libs rocm-utils rocm-cmake     rocfft miopen-hip miopengemm rocblas hipblas rocrand rccl     rocm-profiler cxlactivitylogger &&     apt-get clean &&     rm -rf /var/lib/apt/lists/*', 'bash -c \'echo -e ""gfx803\\ngfx900\\ngfx906"" >> /opt/rocm/bin/target.lst\'', '/install/install_bootstrap_deb_packages.sh', 'add-apt-repository -y ppa:openjdk-r/ppa &&     add-apt-repository -y ppa:george-edison55/cmake-3.x', '/install/install_deb_packages.sh', '/install/install_pip_packages.sh', '/install/install_bazel.sh', '/install/install_golang.sh']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/Dockerfile.rocm,COPY,2,"['install/*.sh /install/', 'install/.bazelrc /etc/bazel.bazelrc']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/Dockerfile.custom_op,FROM,1,['ubuntu:14.04']
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/Dockerfile.custom_op,LABEL,1,"['maintainer=""Yifei Feng <yifeif@google.com>""']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/Dockerfile.custom_op,COPY,2,"['install/*.sh /install/', 'install/.bazelrc /etc/bazel.bazelrc']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/Dockerfile.custom_op,RUN,9,"['/install/install_bootstrap_deb_packages.sh', 'add-apt-repository -y ppa:openjdk-r/ppa &&     add-apt-repository -y ppa:george-edison55/cmake-3.x', '/install/install_deb_packages.sh', '/install/install_pip_packages.sh', '/install/install_bazel.sh', '/install/install_proto3.sh', '/install/install_buildifier.sh', '/install/install_auditwheel.sh', '/install/install_golang.sh']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/Dockerfile.cpu.ppc64le,FROM,1,['ubuntu:16.04']
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/Dockerfile.cpu.ppc64le,LABEL,1,"['maintainer=""William Irons <wdirons@us.ibm.com>""']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/Dockerfile.cpu.ppc64le,COPY,2,"['install/*.sh /install/', 'install/.bazelrc /etc/bazel.bazelrc']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/Dockerfile.cpu.ppc64le,RUN,11,"['/install/install_bootstrap_deb_packages.sh', 'add-apt-repository -y ppa:openjdk-r/ppa', '/install/install_deb_packages.sh', '/install/install_openblas_ppc64le.sh', '/install/install_hdf5_ppc64le.sh', '/install/install_pip_packages.sh', '/install/install_bazel_from_source.sh', '/install/install_proto3.sh', '/install/install_buildifier_from_source.sh', '/install/install_auditwheel.sh', '/install/install_golang_ppc64le.sh']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/Dockerfile.rbe.rocm-ubuntu16.04,FROM,1,['launcher.gcr.io/google/rbe-ubuntu16-04:latest']
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/Dockerfile.rbe.rocm-ubuntu16.04,MAINTAINER,1,['Christian Sigg <csigg@google.com>']
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/Dockerfile.rbe.rocm-ubuntu16.04,ARG,2,"['DEB_ROCM_REPO=http://repo.radeon.com/rocm/apt/debian/', 'ROCM_PATH=/opt/rocm']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/Dockerfile.rbe.rocm-ubuntu16.04,RUN,7,"['apt-get clean all', 'wget -qO - $DEB_ROCM_REPO/rocm.gpg.key | apt-key add -', 'sh -c  ""echo deb [arch=amd64] $DEB_ROCM_REPO xenial main > /etc/apt/sources.list.d/rocm.list""', 'apt-get update --allow-insecure-repositories &&     DEBIAN_FRONTEND=noninteractive apt-get install -y --allow-unauthenticated     rocm-dev rocm-libs rocm-utils rocm-cmake     rocfft miopen-hip miopengemm rocblas hipblas rocrand rccl     rocm-profiler cxlactivitylogger &&     apt-get clean &&     rm -rf /var/lib/apt/lists/*', 'bash -c \'echo -e ""gfx803\\ngfx900\\ngfx906"" >> /opt/rocm/bin/target.lst\'', '/install/install_pip_packages_remote.sh', '/install/install_pip_packages.sh']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/Dockerfile.rbe.rocm-ubuntu16.04,ENV,6,"['HCC_HOME=$ROCM_PATH/hcc', 'HIP_PATH=$ROCM_PATH/hip', 'OPENCL_ROOT=$ROCM_PATH/opencl', 'PATH=""$HCC_HOME/bin:$HIP_PATH/bin:${PATH}""', 'PATH=""$ROCM_PATH/bin:${PATH}""', 'PATH=""$OPENCL_ROOT/bin:${PATH}""']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/Dockerfile.rbe.rocm-ubuntu16.04,COPY,1,['install/*.sh /install/']
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/Dockerfile.android,FROM,1,['ubuntu:16.04']
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/Dockerfile.android,LABEL,1,"['maintainer=""Jan Prach <jendap@google.com>""']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/Dockerfile.android,COPY,2,"['install/*.sh /install/', 'install/.bazelrc /etc/bazel.bazelrc']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/Dockerfile.android,RUN,9,"['/install/install_bootstrap_deb_packages.sh', 'add-apt-repository -y ppa:openjdk-r/ppa &&     add-apt-repository -y ppa:george-edison55/cmake-3.x', '/install/install_deb_packages.sh', '/install/install_bazel.sh', 'apt-get update && apt-get install -y         python-numpy         &&     apt-get clean &&     rm -rf /var/lib/apt/lists/*', 'mkdir -p ${ANDROID_DEV_HOME}', 'cd ${ANDROID_DEV_HOME} &&     wget -q ${ANDROID_SDK_URL} &&     unzip ${ANDROID_SDK_FILENAME} -d android-sdk-linux &&     rm ${ANDROID_SDK_FILENAME} &&     bash -c ""ln -s ${ANDROID_DEV_HOME}/android-sdk-* ${ANDROID_SDK_HOME}"" &&     echo y | android update sdk --no-ui -a --filter tools,platform-tools,android-${ANDROID_API_LEVEL},build-tools-${ANDROID_BUILD_TOOLS_VERSION}', 'cd ${ANDROID_DEV_HOME} &&     wget -q ${ANDROID_NDK_URL} &&     unzip ${ANDROID_NDK_FILENAME} -d ${ANDROID_DEV_HOME} &&     rm ${ANDROID_NDK_FILENAME} &&     bash -c ""ln -s ${ANDROID_DEV_HOME}/android-ndk-* ${ANDROID_NDK_HOME}""', 'chmod -R go=u ${ANDROID_DEV_HOME}']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/Dockerfile.android,ENV,12,"['ANDROID_DEV_HOME /android', 'ANDROID_SDK_FILENAME tools_r25.2.5-linux.zip', 'ANDROID_SDK_URL https://dl.google.com/android/repository/${ANDROID_SDK_FILENAME}', 'ANDROID_API_LEVEL 23', 'ANDROID_NDK_API_LEVEL 18', 'ANDROID_BUILD_TOOLS_VERSION 28.0.0', 'ANDROID_SDK_HOME ${ANDROID_DEV_HOME}/sdk', 'PATH ${PATH}:${ANDROID_SDK_HOME}/tools:${ANDROID_SDK_HOME}/platform-tools', 'ANDROID_NDK_FILENAME android-ndk-r17c-linux-x86_64.zip', 'ANDROID_NDK_URL https://dl.google.com/android/repository/${ANDROID_NDK_FILENAME}', 'ANDROID_NDK_HOME ${ANDROID_DEV_HOME}/ndk', 'PATH ${PATH}:${ANDROID_NDK_HOME}']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/Dockerfile.rbe.cuda9.0-cudnn7-ubuntu14.04,FROM,1,['gcr.io/clang-docker-builder/clang-ubuntu14_04']
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/Dockerfile.rbe.cuda9.0-cudnn7-ubuntu14.04,LABEL,4,"['maintainer=""Manuel Klimek <klimek@google.com>""', 'com.nvidia.volumes.needed=""nvidia_driver""', 'com.nvidia.cuda.version=""${CUDA_VERSION}""', 'com.nvidia.cudnn.version=""${CUDNN_VERSION}""']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/Dockerfile.rbe.cuda9.0-cudnn7-ubuntu14.04,RUN,10,"['apt-get update && apt-get install -y --no-install-recommends ca-certificates apt-transport-https gnupg-curl &&     rm -rf /var/lib/apt/lists/* &&     NVIDIA_GPGKEY_SUM=d1be581509378368edeec8c1eb2958702feedf3bc3d17011adbf24efacce4ab5 &&     NVIDIA_GPGKEY_FPR=ae09fe4bbd223a84b2ccfce3f60f4b3d7fa2af80 &&     apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1404/x86_64/7fa2af80.pub &&     apt-key adv --export --no-emit-version -a $NVIDIA_GPGKEY_FPR | tail -n +2 > cudasign.pub &&     echo ""$NVIDIA_GPGKEY_SUM  cudasign.pub"" | sha256sum -c --strict - && rm cudasign.pub &&     echo ""deb https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1604/x86_64 /"" > /etc/apt/sources.list.d/cuda.list &&     echo ""deb https://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1604/x86_64 /"" > /etc/apt/sources.list.d/nvidia-ml.list', 'apt-get update && apt-get install -y --no-install-recommends         cuda-cudart-$CUDA_PKG_VERSION         cuda-libraries-$CUDA_PKG_VERSION         cuda-cublas-9-0=9.0.176.4-1         cuda-libraries-dev-$CUDA_PKG_VERSION         cuda-nvml-dev-$CUDA_PKG_VERSION         cuda-minimal-build-$CUDA_PKG_VERSION         cuda-command-line-tools-$CUDA_PKG_VERSION         cuda-core-9-0=9.0.176.3-1         cuda-cublas-dev-9-0=9.0.176.4-1         libcudnn7-dev=$CUDNN_VERSION-1+cuda9.0         libcudnn7=$CUDNN_VERSION-1+cuda9.0         nvinfer-runtime-trt-repo-ubuntu1604-$TENSORRT_VERSION-ga-cuda9.0 &&     apt-get update && apt-get install -y --no-install-recommends         libnvinfer5=$TENSORRT_VERSION-1+cuda9.0         libnvinfer-dev=$TENSORRT_VERSION-1+cuda9.0 &&     ln -s cuda-9.0 /usr/local/cuda &&     apt-mark hold libcudnn7 libcudnn7-dev &&     rm -rf /var/lib/apt/lists/*', 'echo ""/usr/local/nvidia/lib"" >> /etc/ld.so.conf.d/nvidia.conf &&     echo ""/usr/local/nvidia/lib64"" >> /etc/ld.so.conf.d/nvidia.conf', 'ln -s libcuda.so /usr/local/cuda/lib64/stubs/libcuda.so.1', 'apt-get update &&     apt-get install -y software-properties-common &&     add-apt-repository ppa:ubuntu-toolchain-r/test -y &&     apt-get update &&     apt-get install -y libstdc++-7-dev &&     rm -rf /var/lib/apt/lists/*', '/install/install_bootstrap_deb_packages.sh', 'add-apt-repository -y ppa:openjdk-r/ppa &&     add-apt-repository -y ppa:george-edison55/cmake-3.x', '/install/install_deb_packages.sh', '/install/install_pip_packages.sh', '/install/install_golang.sh']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/Dockerfile.rbe.cuda9.0-cudnn7-ubuntu14.04,ENV,9,"['CUDA_VERSION 9.0.176', 'CUDA_PKG_VERSION 9-0=$CUDA_VERSION-1', 'PATH /usr/local/nvidia/bin:/usr/local/cuda/bin:${PATH}', 'NVIDIA_VISIBLE_DEVICES all', 'NVIDIA_DRIVER_CAPABILITIES compute,utility', 'NVIDIA_REQUIRE_CUDA ""cuda>=9.0""', 'TENSORRT_VERSION 5.0.2', 'CUDNN_VERSION 7.1.4.18', 'LD_LIBRARY_PATH /usr/local/nvidia/lib:/usr/local/nvidia/lib64:/usr/local/cuda/lib64/stubs']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/Dockerfile.rbe.cuda9.0-cudnn7-ubuntu14.04,COPY,1,['install/*.sh /install/']
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/Dockerfile.rbe.cuda9.0-cudnn7-ubuntu14.04,ARG,1,['DEBIAN_FRONTEND=noninteractive']
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/Dockerfile.rbe.cpu,FROM,1,['launcher.gcr.io/google/rbe-ubuntu16-04:r327695']
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/Dockerfile.rbe.cpu,LABEL,1,"['maintainer=""Yu Yi <yiyu@google.com>""']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/Dockerfile.rbe.cpu,COPY,1,['install/*.sh /install/']
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/Dockerfile.rbe.cpu,ENV,3,"['CC /usr/local/bin/clang', 'CXX /usr/local/bin/clang++', 'AR /usr/bin/ar']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/Dockerfile.rbe.cpu,RUN,2,"['/install/install_pip_packages_remote.sh', '/install/install_pip_packages.sh']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/Dockerfile.rbe.cuda10.0-cudnn7-centos6.sh,"WORKDIR=""$(MKTEMP",1,"['-d)""']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/Dockerfile.rbe.cuda10.0-cudnn7-centos6.sh,"BASE=""$(PWD)""",1,['']
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/Dockerfile.rbe.cuda10.0-cudnn7-centos6.sh,CP,2,"['-R ""${BASE}/""* ""${WORKDIR}/""', '""/tmp/nv-tensorrt-repo-rhel7-cuda10.0-trt5.1.5.0-ga-20190427-1-1.x86_64.rpm"" ""${WORKDIR}/tensorrt.rpm""']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/Dockerfile.rbe.cuda10.0-cudnn7-centos6.sh,CD,2,"['""${WORKDIR}""', '""${BASE}""']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/Dockerfile.rbe.cuda10.0-cudnn7-centos6.sh,DOCKER,1,"['build -f Dockerfile.rbe.cuda10.0-cudnn7-centos6        --tag ""gcr.io/tensorflow-testing/nosla-cuda10.0-cudnn7-centos6"" .']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/Dockerfile.rbe.cuda10.0-cudnn7-centos6.sh,RM,1,"['-rf ""${WORKDIR}""']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/Dockerfile.rbe.cuda10.0-cudnn7-ubuntu16.04-manylinux2010,FROM,2,"['nvidia/cuda:10.0-cudnn7-devel-ubuntu16.04 as devtoolset', 'nvidia/cuda:10.0-cudnn7-devel-ubuntu16.04']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/Dockerfile.rbe.cuda10.0-cudnn7-ubuntu16.04-manylinux2010,ENV,1,['DEBIAN_FRONTEND=noninteractive']
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/Dockerfile.rbe.cuda10.0-cudnn7-ubuntu16.04-manylinux2010,RUN,12,"['apt-get update && apt-get install -y       cpio       file       flex       g++       make       rpm2cpio       unar       wget       &&     rm -rf /var/lib/apt/lists/*', '/build_devtoolset.sh devtoolset-7 /dt7', '/build_devtoolset.sh devtoolset-8 /dt8', 'apt-get update && apt-get install -y     libnvinfer-dev=5.1.5-1+cuda10.0     libnvinfer5=5.1.5-1+cuda10.0       &&     rm -rf /var/lib/apt/lists/*', '/install/install_bootstrap_deb_packages.sh', '/install/install_deb_packages.sh', '/install/install_clang.sh', '/install/install_bazel.sh', 'add-apt-repository ppa:jonathonf/python-3.6 &&     apt-get update && apt-get install -y     python3.6 python3.6-dev python3-pip python3.6-venv &&     rm -rf /var/lib/apt/lists/* &&     python3.6 -m pip install pip --upgrade &&     update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.6 0', '/install/install_pip_packages.sh', 'ln -s ""/usr/include/x86_64-linux-gnu/python3.6m"" ""/dt7/usr/include/x86_64-linux-gnu/python3.6m""', 'ln -s ""/usr/include/x86_64-linux-gnu/python3.6m"" ""/dt8/usr/include/x86_64-linux-gnu/python3.6m""']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/Dockerfile.rbe.cuda10.0-cudnn7-ubuntu16.04-manylinux2010,ADD,3,"['devtoolset/fixlinks.sh fixlinks.sh', 'devtoolset/build_devtoolset.sh build_devtoolset.sh', 'devtoolset/rpm-patch.sh rpm-patch.sh']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/Dockerfile.rbe.cuda10.0-cudnn7-ubuntu16.04-manylinux2010,COPY,3,"['--from=devtoolset /dt7 /dt7', '--from=devtoolset /dt8 /dt8', 'install/*.sh /install/']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/Dockerfile.rbe.cuda10.0-cudnn7-ubuntu16.04-manylinux2010,ARG,1,['DEBIAN_FRONTEND=noninteractive']
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/Dockerfile.rbe.gpu,FROM,1,['nvidia/cuda:10.0-cudnn7-devel-ubuntu16.04']
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/Dockerfile.rbe.gpu,LABEL,1,"['maintainer=""Nick Lopez <ngiraldo@google.com>""']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/Dockerfile.rbe.gpu,RUN,8,"['cp -P /usr/include/cudnn.h /usr/local/cuda/include', 'cp -P /usr/lib/x86_64-linux-gnu/libcudnn* /usr/local/cuda/lib64', '/install/install_bootstrap_deb_packages.sh', 'add-apt-repository -y ppa:openjdk-r/ppa &&     add-apt-repository -y ppa:george-edison55/cmake-3.x', '/install/install_deb_packages.sh', '/install/install_pip_packages.sh', '/install/install_golang.sh', 'cd /tmp &&     wget https://storage.googleapis.com/clang-builds-stable/clang-ubuntu16_04/clang_r337145.tar.gz &&     echo ""ab98c63eb09c04112cc992bc95ebc0dcea8c5e9d0760438789be2896cdc69ff8  clang_r337145.tar.gz"" | sha256sum -c &&     tar -C /usr/local -xf clang_r323528.tar.gz &&     rm clang_r337145.tar.gz']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/Dockerfile.rbe.gpu,COPY,1,['install/*.sh /install/']
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/Dockerfile.rbe.gpu,ARG,1,['DEBIAN_FRONTEND=noninteractive']
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/Dockerfile.rbe.cuda10.1-cudnn7-centos6.sh,"WORKDIR=""$(MKTEMP",1,"['-d)""']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/Dockerfile.rbe.cuda10.1-cudnn7-centos6.sh,"BASE=""$(PWD)""",1,['']
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/Dockerfile.rbe.cuda10.1-cudnn7-centos6.sh,CP,2,"['-R ""${BASE}/""* ""${WORKDIR}/""', '""/tmp/nv-tensorrt-repo-rhel7-cuda10.1-trt5.1.5.0-ga-20190427-1-1.x86_64.rpm"" ""${WORKDIR}/tensorrt.rpm""']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/Dockerfile.rbe.cuda10.1-cudnn7-centos6.sh,CD,2,"['""${WORKDIR}""', '""${BASE}""']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/Dockerfile.rbe.cuda10.1-cudnn7-centos6.sh,DOCKER,1,"['build -f Dockerfile.rbe.cuda10.1-cudnn7-centos6        --tag ""gcr.io/tensorflow-testing/nosla-cuda10.1-cudnn7-centos6"" .']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/Dockerfile.rbe.cuda10.1-cudnn7-centos6.sh,RM,1,"['-rf ""${WORKDIR}""']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/Dockerfile.rbe.cuda10.0-cudnn7-ubuntu14.04,FROM,1,['gcr.io/clang-docker-builder/clang-ubuntu14_04']
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/Dockerfile.rbe.cuda10.0-cudnn7-ubuntu14.04,LABEL,2,"['maintainer=""Manuel Klimek <klimek@google.com>""', 'com.nvidia.cudnn.version=""${CUDNN_VERSION}""']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/Dockerfile.rbe.cuda10.0-cudnn7-ubuntu14.04,RUN,9,"['apt-get update && apt-get install -y --no-install-recommends ca-certificates apt-transport-https gnupg-curl &&     rm -rf /var/lib/apt/lists/* &&     NVIDIA_GPGKEY_SUM=d1be581509378368edeec8c1eb2958702feedf3bc3d17011adbf24efacce4ab5 &&     NVIDIA_GPGKEY_FPR=ae09fe4bbd223a84b2ccfce3f60f4b3d7fa2af80 &&     apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1604/x86_64/7fa2af80.pub &&     apt-key adv --export --no-emit-version -a $NVIDIA_GPGKEY_FPR | tail -n +2 > cudasign.pub &&     echo ""$NVIDIA_GPGKEY_SUM  cudasign.pub"" | sha256sum -c --strict - && rm cudasign.pub &&     echo ""deb https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1604/x86_64 /"" > /etc/apt/sources.list.d/cuda.list &&     echo ""deb https://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1604/x86_64 /"" > /etc/apt/sources.list.d/nvidia-ml.list', 'apt-get update && apt-get install -y --no-install-recommends         cuda-command-line-tools-$CUDA_PKG_VERSION         cuda-compat-10-0=410.48-1         cuda-cudart-$CUDA_PKG_VERSION         cuda-libraries-$CUDA_PKG_VERSION         cuda-libraries-dev-$CUDA_PKG_VERSION         cuda-minimal-build-$CUDA_PKG_VERSION         cuda-nvml-dev-$CUDA_PKG_VERSION         cuda-nvtx-$CUDA_PKG_VERSION         libcudnn7=$CUDNN_VERSION-1+cuda10.0         libcudnn7=$CUDNN_VERSION-1+cuda10.0         libcudnn7-dev=$CUDNN_VERSION-1+cuda10.0         nvinfer-runtime-trt-repo-ubuntu1604-$TENSORRT_VERSION-ga-cuda10.0 &&     apt-get update && apt-get install -y --no-install-recommends         libnvinfer5=$TENSORRT_VERSION-1+cuda10.0         libnvinfer-dev=$TENSORRT_VERSION-1+cuda10.0 &&     ln -s cuda-10.0 /usr/local/cuda &&     apt-mark hold libcudnn7 &&     rm -rf /var/lib/apt/lists/*', 'ln -s libcuda.so /usr/local/cuda/lib64/stubs/libcuda.so.1', 'apt-get update &&     apt-get install -y software-properties-common &&     add-apt-repository ppa:ubuntu-toolchain-r/test -y &&     apt-get update &&     apt-get install -y --no-install-recommends g++-7 &&     rm -rf /var/lib/apt/lists/*', '/install/install_bootstrap_deb_packages.sh', 'add-apt-repository -y ppa:openjdk-r/ppa &&     add-apt-repository -y ppa:george-edison55/cmake-3.x', '/install/install_deb_packages.sh', '/install/install_pip_packages.sh', '/install/install_golang.sh']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/Dockerfile.rbe.cuda10.0-cudnn7-ubuntu14.04,ENV,9,"['CUDA_VERSION 10.0.130', 'CUDA_PKG_VERSION 10-0=$CUDA_VERSION-1', 'CUDNN_VERSION 7.3.1.20', 'TENSORRT_VERSION 5.0.2', 'NVIDIA_DRIVER_CAPABILITIES compute,utility', 'NVIDIA_REQUIRE_CUDA ""cuda>=10.0,driver>=410""', 'NVIDIA_VISIBLE_DEVICES all', 'PATH /usr/local/cuda/bin:${PATH}', 'LD_LIBRARY_PATH /usr/local/cuda/lib64/stubs']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/Dockerfile.rbe.cuda10.0-cudnn7-ubuntu14.04,COPY,1,['install/*.sh /install/']
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/Dockerfile.rbe.cuda10.0-cudnn7-ubuntu14.04,ARG,1,['DEBIAN_FRONTEND=noninteractive']
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/Dockerfile.custom_op_gpu,FROM,1,['nvidia/cuda:10.0-cudnn7-devel-ubuntu14.04']
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/Dockerfile.custom_op_gpu,LABEL,1,"['maintainer=""Yifei Feng <yifeif@google.com>""']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/Dockerfile.custom_op_gpu,COPY,2,"['install/*.sh /install/', 'install/.bazelrc /etc/bazel.bazelrc']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/Dockerfile.custom_op_gpu,RUN,9,"['/install/install_bootstrap_deb_packages.sh', 'add-apt-repository -y ppa:openjdk-r/ppa &&     add-apt-repository -y ppa:george-edison55/cmake-3.x', '/install/install_deb_packages.sh', '/install/install_pip_packages.sh', '/install/install_bazel.sh', '/install/install_proto3.sh', '/install/install_buildifier.sh', '/install/install_auditwheel.sh', '/install/install_golang.sh']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/Dockerfile.custom_op_gpu,ENV,1,['TF_NEED_CUDA 1']
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/linux/mkl/Dockerfile.devel-mkl,ARG,8,"['ROOT_CONTAINER_TAG=devel', 'ROOT_CONTAINER=tensorflow/tensorflow', 'PYTHON=""python""', 'WHL_DIR=""/tmp/pip""', 'PIP=""pip""', 'TARGET_PLATFORM=""haswell""', 'CONFIG_V2_DISABLE=""--disable-v2""', 'ENABLE_SECURE_BUILD']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/linux/mkl/Dockerfile.devel-mkl,FROM,1,['${ROOT_CONTAINER}:${ROOT_CONTAINER_TAG}']
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/linux/mkl/Dockerfile.devel-mkl,LABEL,1,"['maintainer=""Clayne Robison <clayne.b.robison@intel.com>""']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/linux/mkl/Dockerfile.devel-mkl,WORKDIR,3,"['/', '/tensorflow', '/root']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/linux/mkl/Dockerfile.devel-mkl,COPY,1,['tensorflow/ /tensorflow/']
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/linux/mkl/Dockerfile.devel-mkl,RUN,5,"['yes """" | ${PYTHON} configure.py', '${PYTHON} set-build-env.py -p ${TARGET_PLATFORM} -f /root/.mkl.bazelrc     ${CONFIG_V2_DISABLE} ${ENABLE_SECURE_BUILD}', 'echo ""import /root/.mkl.bazelrc"" >>/root/.bazelrc', '${PIP} install future>=0.17.1', 'bazel --bazelrc=/root/.bazelrc build -c opt     tensorflow/tools/pip_package:build_pip_package &&     bazel-bin/tensorflow/tools/pip_package/build_pip_package ""${WHL_DIR}"" &&     ${PIP} --no-cache-dir install --upgrade ""${WHL_DIR}""/tensorflow-*.whl &&     rm -rf /root/.cache']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/linux/mkl/Dockerfile.devel-mkl,ENV,1,['CI_BUILD_PYTHON ${PYTHON}']
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/linux/mkl/Dockerfile.devel-mkl,ADD,1,['set-build-env.py .']
microsoft/tensorflow-directml,latest,/tensorflow/tools/ci_build/linux/mkl/Dockerfile.devel-mkl,EXPOSE,2,"['6006', '8888']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/gcs_test/Dockerfile,FROM,1,['ubuntu:16.04']
microsoft/tensorflow-directml,latest,/tensorflow/tools/gcs_test/Dockerfile,LABEL,1,"['maintainer=""Shanqing Cai <cais@google.com>""']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/gcs_test/Dockerfile,RUN,7,"['apt-get update', 'apt-get install -y     curl     libcurl4-openssl-dev     python     python-pip', 'curl -O https://dl.google.com/dl/cloudsdk/channels/rapid/install_google_cloud_sdk.bash', 'chmod +x install_google_cloud_sdk.bash', './install_google_cloud_sdk.bash --disable-prompts --install-dir=/var/gcloud', 'pip install /tensorflow-*.whl', 'mkdir -p /gcs-smoke/python']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/gcs_test/Dockerfile,COPY,3,"['tensorflow-*.whl /', 'gcs_smoke_wrapper.sh /gcs-smoke/', 'python/gcs_smoke.py /gcs-smoke/python/']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/dockerfiles/tools.Dockerfile,FROM,1,['ubuntu:16.04']
microsoft/tensorflow-directml,latest,/tensorflow/tools/dockerfiles/tools.Dockerfile,LABEL,1,"['maintainer=""Austin Anderson <angerson@google.com>""']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/dockerfiles/tools.Dockerfile,RUN,4,"['apt-get update && apt-get install -y python3 python3-pip bash curl', 'curl -sSL https://get.docker.com/ | sh', 'pip3 install --upgrade pip setuptools pyyaml absl-py cerberus docker', 'chmod a+rwx /etc/bash.bashrc']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/dockerfiles/tools.Dockerfile,WORKDIR,1,['/tf']
microsoft/tensorflow-directml,latest,/tensorflow/tools/dockerfiles/tools.Dockerfile,VOLUME,1,"['[""/tf""]']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/dockerfiles/tools.Dockerfile,COPY,1,['bashrc /etc/bash.bashrc']
microsoft/tensorflow-directml,latest,/tensorflow/tools/dockerfiles/dockerfiles/devel-gpu-jupyter.Dockerfile,ARG,15,"['UBUNTU_VERSION=18.04', 'ARCH=', 'CUDA=10.0', 'ARCH', 'CUDA', 'CUDNN=7.6.2.24-1', 'CUDNN_MAJOR_VERSION=7', 'LIB_DIR_PREFIX=x86_64', 'CACHE_STOP=1', 'CHECKOUT_TF_SRC=0', 'USE_PYTHON_3_NOT_2', '_PY_SUFFIX=${USE_PYTHON_3_NOT_2:+3}', 'PYTHON=python${_PY_SUFFIX}', 'PIP=pip${_PY_SUFFIX}', 'BAZEL_VERSION=0.26.1']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/dockerfiles/dockerfiles/devel-gpu-jupyter.Dockerfile,FROM,1,['nvidia/cuda${ARCH:+-$ARCH}:${CUDA}-base-ubuntu${UBUNTU_VERSION} as base']
microsoft/tensorflow-directml,latest,/tensorflow/tools/dockerfiles/dockerfiles/devel-gpu-jupyter.Dockerfile,SHELL,1,"['[""/bin/bash"", ""-c""]']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/dockerfiles/dockerfiles/devel-gpu-jupyter.Dockerfile,RUN,21,"[""apt-get update && apt-get install -y --no-install-recommends         build-essential         cuda-command-line-tools-${CUDA/./-}         cuda-cublas-dev-${CUDA/./-}         cuda-cudart-dev-${CUDA/./-}         cuda-cufft-dev-${CUDA/./-}         cuda-curand-dev-${CUDA/./-}         cuda-cusolver-dev-${CUDA/./-}         cuda-cusparse-dev-${CUDA/./-}         libcudnn7=${CUDNN}+cuda${CUDA}         libcudnn7-dev=${CUDNN}+cuda${CUDA}         libcurl3-dev         libfreetype6-dev         libhdf5-serial-dev         libzmq3-dev         pkg-config         rsync         software-properties-common         unzip         zip         zlib1g-dev         wget         git         &&     find /usr/local/cuda-${CUDA}/lib64/ -type f -name 'lib*_static.a' -not -name 'libcudart_static.a' -delete &&     rm /usr/lib/${LIB_DIR_PREFIX}-linux-gnu/libcudnn_static_v7.a"", '[[ ""${ARCH}"" = ""ppc64le"" ]] || { apt-get update &&         apt-get install -y --no-install-recommends libnvinfer5=5.1.5-1+cuda${CUDA}         libnvinfer-dev=5.1.5-1+cuda${CUDA}         && apt-get clean         && rm -rf /var/lib/apt/lists/*; }', 'test ""${CHECKOUT_TF_SRC}"" -eq 1 && git clone https://github.com/tensorflow/tensorflow.git /tensorflow_src || true', 'ln -s /usr/local/cuda/lib64/stubs/libcuda.so /usr/local/cuda/lib64/stubs/libcuda.so.1     && echo ""/usr/local/cuda/lib64/stubs"" > /etc/ld.so.conf.d/z-cuda-stubs.conf     && ldconfig', 'apt-get update && apt-get install -y     ${PYTHON}     ${PYTHON}-pip', '${PIP} --no-cache-dir install --upgrade     pip     setuptools', 'ln -s $(which ${PYTHON}) /usr/local/bin/python', 'apt-get update && apt-get install -y     build-essential     curl     git     wget     openjdk-8-jdk     ${PYTHON}-dev     virtualenv     swig', '${PIP} --no-cache-dir install     Pillow     h5py     keras_applications     keras_preprocessing     matplotlib     mock     numpy     scipy     sklearn     pandas     future     portpicker     && test ""${USE_PYTHON_3_NOT_2}"" -eq 1 && true || ${PIP} --no-cache-dir install     enum34', 'mkdir /bazel &&     wget -O /bazel/installer.sh ""https://github.com/bazelbuild/bazel/releases/download/${BAZEL_VERSION}/bazel-${BAZEL_VERSION}-installer-linux-x86_64.sh"" &&     wget -O /bazel/LICENSE.txt ""https://raw.githubusercontent.com/bazelbuild/bazel/master/LICENSE"" &&     chmod +x /bazel/installer.sh &&     /bazel/installer.sh &&     rm -f /bazel/installer.sh', 'chmod a+rwx /etc/bash.bashrc', '${PIP} install jupyter matplotlib', '${PIP} install jupyter_http_over_ws', 'jupyter serverextension enable --py jupyter_http_over_ws', 'mkdir -p /tf/tensorflow-tutorials && chmod -R a+rwx /tf/', 'mkdir /.local && chmod a+rwx /.local', 'apt-get install -y --no-install-recommends wget', 'wget https://raw.githubusercontent.com/tensorflow/docs/r1.15/site/en/tutorials/keras/basic_classification.ipynb', 'wget https://raw.githubusercontent.com/tensorflow/docs/r1.15/site/en/tutorials/keras/basic_text_classification.ipynb', 'apt-get autoremove -y && apt-get remove -y wget', '${PYTHON} -m ipykernel.kernelspec']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/dockerfiles/dockerfiles/devel-gpu-jupyter.Dockerfile,ENV,8,"['CI_BUILD_PYTHON python', 'LD_LIBRARY_PATH /usr/local/cuda/extras/CUPTI/lib64:/usr/local/cuda/lib64:$LD_LIBRARY_PATH', 'TF_NEED_CUDA 1', 'TF_NEED_TENSORRT 1', 'TF_CUDA_COMPUTE_CAPABILITIES=3.5,5.2,6.0,6.1,7.0', 'TF_CUDA_VERSION=${CUDA}', 'TF_CUDNN_VERSION=${CUDNN_MAJOR_VERSION}', 'LANG C.UTF-8']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/dockerfiles/dockerfiles/devel-gpu-jupyter.Dockerfile,COPY,2,"['bashrc /etc/bash.bashrc', 'readme-for-jupyter.md README.md']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/dockerfiles/dockerfiles/devel-gpu-jupyter.Dockerfile,WORKDIR,2,"['/tf/tensorflow-tutorials', '/tf']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/dockerfiles/dockerfiles/devel-gpu-jupyter.Dockerfile,EXPOSE,1,['8888']
microsoft/tensorflow-directml,latest,/tensorflow/tools/dockerfiles/dockerfiles/devel-gpu-jupyter.Dockerfile,CMD,1,"['[""bash"", ""-c"", ""source /etc/bash.bashrc && jupyter notebook --notebook-dir=/tf --ip 0.0.0.0 --no-browser --allow-root""]']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/dockerfiles/dockerfiles/cpu.Dockerfile,ARG,7,"['UBUNTU_VERSION=18.04', 'USE_PYTHON_3_NOT_2', '_PY_SUFFIX=${USE_PYTHON_3_NOT_2:+3}', 'PYTHON=python${_PY_SUFFIX}', 'PIP=pip${_PY_SUFFIX}', 'TF_PACKAGE=tensorflow', 'TF_PACKAGE_VERSION=']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/dockerfiles/dockerfiles/cpu.Dockerfile,FROM,1,['ubuntu:${UBUNTU_VERSION} as base']
microsoft/tensorflow-directml,latest,/tensorflow/tools/dockerfiles/dockerfiles/cpu.Dockerfile,ENV,1,['LANG C.UTF-8']
microsoft/tensorflow-directml,latest,/tensorflow/tools/dockerfiles/dockerfiles/cpu.Dockerfile,RUN,5,"['apt-get update && apt-get install -y     ${PYTHON}     ${PYTHON}-pip', '${PIP} --no-cache-dir install --upgrade     pip     setuptools', 'ln -s $(which ${PYTHON}) /usr/local/bin/python', '${PIP} install ${TF_PACKAGE}${TF_PACKAGE_VERSION:+==${TF_PACKAGE_VERSION}}', 'chmod a+rwx /etc/bash.bashrc']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/dockerfiles/dockerfiles/cpu.Dockerfile,COPY,1,['bashrc /etc/bash.bashrc']
microsoft/tensorflow-directml,latest,/tensorflow/tools/dockerfiles/dockerfiles/devel-cpu-jupyter.Dockerfile,ARG,8,"['UBUNTU_VERSION=18.04', 'CACHE_STOP=1', 'CHECKOUT_TF_SRC=0', 'USE_PYTHON_3_NOT_2', '_PY_SUFFIX=${USE_PYTHON_3_NOT_2:+3}', 'PYTHON=python${_PY_SUFFIX}', 'PIP=pip${_PY_SUFFIX}', 'BAZEL_VERSION=0.26.1']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/dockerfiles/dockerfiles/devel-cpu-jupyter.Dockerfile,FROM,1,['ubuntu:${UBUNTU_VERSION} AS base']
microsoft/tensorflow-directml,latest,/tensorflow/tools/dockerfiles/dockerfiles/devel-cpu-jupyter.Dockerfile,RUN,19,"['apt-get update && apt-get install -y --no-install-recommends         build-essential         curl         git         libcurl3-dev         libfreetype6-dev         libhdf5-serial-dev         libzmq3-dev         pkg-config         rsync         software-properties-common \tsudo         unzip         zip         zlib1g-dev         openjdk-8-jdk         openjdk-8-jre-headless         &&     apt-get clean &&     rm -rf /var/lib/apt/lists/*', 'test ""${CHECKOUT_TF_SRC}"" -eq 1 && git clone https://github.com/tensorflow/tensorflow.git /tensorflow_src || true', 'apt-get update && apt-get install -y     ${PYTHON}     ${PYTHON}-pip', '${PIP} --no-cache-dir install --upgrade     pip     setuptools', 'ln -s $(which ${PYTHON}) /usr/local/bin/python', 'apt-get update && apt-get install -y     build-essential     curl     git     wget     openjdk-8-jdk     ${PYTHON}-dev     virtualenv     swig', '${PIP} --no-cache-dir install     Pillow     h5py     keras_applications     keras_preprocessing     matplotlib     mock     numpy     scipy     sklearn     pandas     future     portpicker     && test ""${USE_PYTHON_3_NOT_2}"" -eq 1 && true || ${PIP} --no-cache-dir install     enum34', 'mkdir /bazel &&     wget -O /bazel/installer.sh ""https://github.com/bazelbuild/bazel/releases/download/${BAZEL_VERSION}/bazel-${BAZEL_VERSION}-installer-linux-x86_64.sh"" &&     wget -O /bazel/LICENSE.txt ""https://raw.githubusercontent.com/bazelbuild/bazel/master/LICENSE"" &&     chmod +x /bazel/installer.sh &&     /bazel/installer.sh &&     rm -f /bazel/installer.sh', 'chmod a+rwx /etc/bash.bashrc', '${PIP} install jupyter matplotlib', '${PIP} install jupyter_http_over_ws', 'jupyter serverextension enable --py jupyter_http_over_ws', 'mkdir -p /tf/tensorflow-tutorials && chmod -R a+rwx /tf/', 'mkdir /.local && chmod a+rwx /.local', 'apt-get install -y --no-install-recommends wget', 'wget https://raw.githubusercontent.com/tensorflow/docs/r1.15/site/en/tutorials/keras/basic_classification.ipynb', 'wget https://raw.githubusercontent.com/tensorflow/docs/r1.15/site/en/tutorials/keras/basic_text_classification.ipynb', 'apt-get autoremove -y && apt-get remove -y wget', '${PYTHON} -m ipykernel.kernelspec']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/dockerfiles/dockerfiles/devel-cpu-jupyter.Dockerfile,ENV,2,"['CI_BUILD_PYTHON python', 'LANG C.UTF-8']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/dockerfiles/dockerfiles/devel-cpu-jupyter.Dockerfile,COPY,2,"['bashrc /etc/bash.bashrc', 'readme-for-jupyter.md README.md']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/dockerfiles/dockerfiles/devel-cpu-jupyter.Dockerfile,WORKDIR,2,"['/tf/tensorflow-tutorials', '/tf']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/dockerfiles/dockerfiles/devel-cpu-jupyter.Dockerfile,EXPOSE,1,['8888']
microsoft/tensorflow-directml,latest,/tensorflow/tools/dockerfiles/dockerfiles/devel-cpu-jupyter.Dockerfile,CMD,1,"['[""bash"", ""-c"", ""source /etc/bash.bashrc && jupyter notebook --notebook-dir=/tf --ip 0.0.0.0 --no-browser --allow-root""]']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/dockerfiles/dockerfiles/devel-gpu.Dockerfile,ARG,15,"['UBUNTU_VERSION=18.04', 'ARCH=', 'CUDA=10.0', 'ARCH', 'CUDA', 'CUDNN=7.6.2.24-1', 'CUDNN_MAJOR_VERSION=7', 'LIB_DIR_PREFIX=x86_64', 'CACHE_STOP=1', 'CHECKOUT_TF_SRC=0', 'USE_PYTHON_3_NOT_2', '_PY_SUFFIX=${USE_PYTHON_3_NOT_2:+3}', 'PYTHON=python${_PY_SUFFIX}', 'PIP=pip${_PY_SUFFIX}', 'BAZEL_VERSION=0.26.1']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/dockerfiles/dockerfiles/devel-gpu.Dockerfile,FROM,1,['nvidia/cuda${ARCH:+-$ARCH}:${CUDA}-base-ubuntu${UBUNTU_VERSION} as base']
microsoft/tensorflow-directml,latest,/tensorflow/tools/dockerfiles/dockerfiles/devel-gpu.Dockerfile,SHELL,1,"['[""/bin/bash"", ""-c""]']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/dockerfiles/dockerfiles/devel-gpu.Dockerfile,RUN,11,"[""apt-get update && apt-get install -y --no-install-recommends         build-essential         cuda-command-line-tools-${CUDA/./-}         cuda-cublas-dev-${CUDA/./-}         cuda-cudart-dev-${CUDA/./-}         cuda-cufft-dev-${CUDA/./-}         cuda-curand-dev-${CUDA/./-}         cuda-cusolver-dev-${CUDA/./-}         cuda-cusparse-dev-${CUDA/./-}         libcudnn7=${CUDNN}+cuda${CUDA}         libcudnn7-dev=${CUDNN}+cuda${CUDA}         libcurl3-dev         libfreetype6-dev         libhdf5-serial-dev         libzmq3-dev         pkg-config         rsync         software-properties-common         unzip         zip         zlib1g-dev         wget         git         &&     find /usr/local/cuda-${CUDA}/lib64/ -type f -name 'lib*_static.a' -not -name 'libcudart_static.a' -delete &&     rm /usr/lib/${LIB_DIR_PREFIX}-linux-gnu/libcudnn_static_v7.a"", '[[ ""${ARCH}"" = ""ppc64le"" ]] || { apt-get update &&         apt-get install -y --no-install-recommends libnvinfer5=5.1.5-1+cuda${CUDA}         libnvinfer-dev=5.1.5-1+cuda${CUDA}         && apt-get clean         && rm -rf /var/lib/apt/lists/*; }', 'test ""${CHECKOUT_TF_SRC}"" -eq 1 && git clone https://github.com/tensorflow/tensorflow.git /tensorflow_src || true', 'ln -s /usr/local/cuda/lib64/stubs/libcuda.so /usr/local/cuda/lib64/stubs/libcuda.so.1     && echo ""/usr/local/cuda/lib64/stubs"" > /etc/ld.so.conf.d/z-cuda-stubs.conf     && ldconfig', 'apt-get update && apt-get install -y     ${PYTHON}     ${PYTHON}-pip', '${PIP} --no-cache-dir install --upgrade     pip     setuptools', 'ln -s $(which ${PYTHON}) /usr/local/bin/python', 'apt-get update && apt-get install -y     build-essential     curl     git     wget     openjdk-8-jdk     ${PYTHON}-dev     virtualenv     swig', '${PIP} --no-cache-dir install     Pillow     h5py     keras_applications     keras_preprocessing     matplotlib     mock     numpy     scipy     sklearn     pandas     future     portpicker     && test ""${USE_PYTHON_3_NOT_2}"" -eq 1 && true || ${PIP} --no-cache-dir install     enum34', 'mkdir /bazel &&     wget -O /bazel/installer.sh ""https://github.com/bazelbuild/bazel/releases/download/${BAZEL_VERSION}/bazel-${BAZEL_VERSION}-installer-linux-x86_64.sh"" &&     wget -O /bazel/LICENSE.txt ""https://raw.githubusercontent.com/bazelbuild/bazel/master/LICENSE"" &&     chmod +x /bazel/installer.sh &&     /bazel/installer.sh &&     rm -f /bazel/installer.sh', 'chmod a+rwx /etc/bash.bashrc']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/dockerfiles/dockerfiles/devel-gpu.Dockerfile,ENV,8,"['CI_BUILD_PYTHON python', 'LD_LIBRARY_PATH /usr/local/cuda/extras/CUPTI/lib64:/usr/local/cuda/lib64:$LD_LIBRARY_PATH', 'TF_NEED_CUDA 1', 'TF_NEED_TENSORRT 1', 'TF_CUDA_COMPUTE_CAPABILITIES=3.5,5.2,6.0,6.1,7.0', 'TF_CUDA_VERSION=${CUDA}', 'TF_CUDNN_VERSION=${CUDNN_MAJOR_VERSION}', 'LANG C.UTF-8']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/dockerfiles/dockerfiles/devel-gpu.Dockerfile,COPY,1,['bashrc /etc/bash.bashrc']
microsoft/tensorflow-directml,latest,/tensorflow/tools/dockerfiles/dockerfiles/devel-cpu.Dockerfile,ARG,8,"['UBUNTU_VERSION=18.04', 'CACHE_STOP=1', 'CHECKOUT_TF_SRC=0', 'USE_PYTHON_3_NOT_2', '_PY_SUFFIX=${USE_PYTHON_3_NOT_2:+3}', 'PYTHON=python${_PY_SUFFIX}', 'PIP=pip${_PY_SUFFIX}', 'BAZEL_VERSION=0.26.1']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/dockerfiles/dockerfiles/devel-cpu.Dockerfile,FROM,1,['ubuntu:${UBUNTU_VERSION} AS base']
microsoft/tensorflow-directml,latest,/tensorflow/tools/dockerfiles/dockerfiles/devel-cpu.Dockerfile,RUN,9,"['apt-get update && apt-get install -y --no-install-recommends         build-essential         curl         git         libcurl3-dev         libfreetype6-dev         libhdf5-serial-dev         libzmq3-dev         pkg-config         rsync         software-properties-common \tsudo         unzip         zip         zlib1g-dev         openjdk-8-jdk         openjdk-8-jre-headless         &&     apt-get clean &&     rm -rf /var/lib/apt/lists/*', 'test ""${CHECKOUT_TF_SRC}"" -eq 1 && git clone https://github.com/tensorflow/tensorflow.git /tensorflow_src || true', 'apt-get update && apt-get install -y     ${PYTHON}     ${PYTHON}-pip', '${PIP} --no-cache-dir install --upgrade     pip     setuptools', 'ln -s $(which ${PYTHON}) /usr/local/bin/python', 'apt-get update && apt-get install -y     build-essential     curl     git     wget     openjdk-8-jdk     ${PYTHON}-dev     virtualenv     swig', '${PIP} --no-cache-dir install     Pillow     h5py     keras_applications     keras_preprocessing     matplotlib     mock     numpy     scipy     sklearn     pandas     future     portpicker     && test ""${USE_PYTHON_3_NOT_2}"" -eq 1 && true || ${PIP} --no-cache-dir install     enum34', 'mkdir /bazel &&     wget -O /bazel/installer.sh ""https://github.com/bazelbuild/bazel/releases/download/${BAZEL_VERSION}/bazel-${BAZEL_VERSION}-installer-linux-x86_64.sh"" &&     wget -O /bazel/LICENSE.txt ""https://raw.githubusercontent.com/bazelbuild/bazel/master/LICENSE"" &&     chmod +x /bazel/installer.sh &&     /bazel/installer.sh &&     rm -f /bazel/installer.sh', 'chmod a+rwx /etc/bash.bashrc']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/dockerfiles/dockerfiles/devel-cpu.Dockerfile,ENV,2,"['CI_BUILD_PYTHON python', 'LANG C.UTF-8']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/dockerfiles/dockerfiles/devel-cpu.Dockerfile,COPY,1,['bashrc /etc/bash.bashrc']
microsoft/tensorflow-directml,latest,/tensorflow/tools/dockerfiles/dockerfiles/gpu-jupyter.Dockerfile,ARG,12,"['UBUNTU_VERSION=18.04', 'ARCH=', 'CUDA=10.0', 'ARCH', 'CUDA', 'CUDNN=7.6.2.24-1', 'USE_PYTHON_3_NOT_2', '_PY_SUFFIX=${USE_PYTHON_3_NOT_2:+3}', 'PYTHON=python${_PY_SUFFIX}', 'PIP=pip${_PY_SUFFIX}', 'TF_PACKAGE=tensorflow', 'TF_PACKAGE_VERSION=']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/dockerfiles/dockerfiles/gpu-jupyter.Dockerfile,FROM,1,['nvidia/cuda${ARCH:+-$ARCH}:${CUDA}-base-ubuntu${UBUNTU_VERSION} as base']
microsoft/tensorflow-directml,latest,/tensorflow/tools/dockerfiles/dockerfiles/gpu-jupyter.Dockerfile,SHELL,1,"['[""/bin/bash"", ""-c""]']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/dockerfiles/dockerfiles/gpu-jupyter.Dockerfile,RUN,18,"['apt-get update && apt-get install -y --no-install-recommends         build-essential         cuda-command-line-tools-${CUDA/./-}         cuda-cublas-${CUDA/./-}         cuda-cufft-${CUDA/./-}         cuda-curand-${CUDA/./-}         cuda-cusolver-${CUDA/./-}         cuda-cusparse-${CUDA/./-}         curl         libcudnn7=${CUDNN}+cuda${CUDA}         libfreetype6-dev         libhdf5-serial-dev         libzmq3-dev         pkg-config         software-properties-common         unzip', '[ ${ARCH} = ppc64le ] || (apt-get update &&         apt-get install -y --no-install-recommends libnvinfer5=5.1.5-1+cuda${CUDA}         && apt-get clean         && rm -rf /var/lib/apt/lists/*)', 'ln -s /usr/local/cuda/lib64/stubs/libcuda.so /usr/local/cuda/lib64/stubs/libcuda.so.1     && echo ""/usr/local/cuda/lib64/stubs"" > /etc/ld.so.conf.d/z-cuda-stubs.conf     && ldconfig', 'apt-get update && apt-get install -y     ${PYTHON}     ${PYTHON}-pip', '${PIP} --no-cache-dir install --upgrade     pip     setuptools', 'ln -s $(which ${PYTHON}) /usr/local/bin/python', '${PIP} install ${TF_PACKAGE}${TF_PACKAGE_VERSION:+==${TF_PACKAGE_VERSION}}', 'chmod a+rwx /etc/bash.bashrc', '${PIP} install jupyter matplotlib', '${PIP} install jupyter_http_over_ws', 'jupyter serverextension enable --py jupyter_http_over_ws', 'mkdir -p /tf/tensorflow-tutorials && chmod -R a+rwx /tf/', 'mkdir /.local && chmod a+rwx /.local', 'apt-get install -y --no-install-recommends wget', 'wget https://raw.githubusercontent.com/tensorflow/docs/r1.15/site/en/tutorials/keras/basic_classification.ipynb', 'wget https://raw.githubusercontent.com/tensorflow/docs/r1.15/site/en/tutorials/keras/basic_text_classification.ipynb', 'apt-get autoremove -y && apt-get remove -y wget', '${PYTHON} -m ipykernel.kernelspec']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/dockerfiles/dockerfiles/gpu-jupyter.Dockerfile,ENV,2,"['LD_LIBRARY_PATH /usr/local/cuda/extras/CUPTI/lib64:/usr/local/cuda/lib64:$LD_LIBRARY_PATH', 'LANG C.UTF-8']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/dockerfiles/dockerfiles/gpu-jupyter.Dockerfile,COPY,2,"['bashrc /etc/bash.bashrc', 'readme-for-jupyter.md README.md']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/dockerfiles/dockerfiles/gpu-jupyter.Dockerfile,WORKDIR,2,"['/tf/tensorflow-tutorials', '/tf']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/dockerfiles/dockerfiles/gpu-jupyter.Dockerfile,EXPOSE,1,['8888']
microsoft/tensorflow-directml,latest,/tensorflow/tools/dockerfiles/dockerfiles/gpu-jupyter.Dockerfile,CMD,1,"['[""bash"", ""-c"", ""source /etc/bash.bashrc && jupyter notebook --notebook-dir=/tf --ip 0.0.0.0 --no-browser --allow-root""]']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/dockerfiles/dockerfiles/gpu.Dockerfile,ARG,12,"['UBUNTU_VERSION=18.04', 'ARCH=', 'CUDA=10.0', 'ARCH', 'CUDA', 'CUDNN=7.6.2.24-1', 'USE_PYTHON_3_NOT_2', '_PY_SUFFIX=${USE_PYTHON_3_NOT_2:+3}', 'PYTHON=python${_PY_SUFFIX}', 'PIP=pip${_PY_SUFFIX}', 'TF_PACKAGE=tensorflow', 'TF_PACKAGE_VERSION=']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/dockerfiles/dockerfiles/gpu.Dockerfile,FROM,1,['nvidia/cuda${ARCH:+-$ARCH}:${CUDA}-base-ubuntu${UBUNTU_VERSION} as base']
microsoft/tensorflow-directml,latest,/tensorflow/tools/dockerfiles/dockerfiles/gpu.Dockerfile,SHELL,1,"['[""/bin/bash"", ""-c""]']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/dockerfiles/dockerfiles/gpu.Dockerfile,RUN,8,"['apt-get update && apt-get install -y --no-install-recommends         build-essential         cuda-command-line-tools-${CUDA/./-}         cuda-cublas-${CUDA/./-}         cuda-cufft-${CUDA/./-}         cuda-curand-${CUDA/./-}         cuda-cusolver-${CUDA/./-}         cuda-cusparse-${CUDA/./-}         curl         libcudnn7=${CUDNN}+cuda${CUDA}         libfreetype6-dev         libhdf5-serial-dev         libzmq3-dev         pkg-config         software-properties-common         unzip', '[ ${ARCH} = ppc64le ] || (apt-get update &&         apt-get install -y --no-install-recommends libnvinfer5=5.1.5-1+cuda${CUDA}         && apt-get clean         && rm -rf /var/lib/apt/lists/*)', 'ln -s /usr/local/cuda/lib64/stubs/libcuda.so /usr/local/cuda/lib64/stubs/libcuda.so.1     && echo ""/usr/local/cuda/lib64/stubs"" > /etc/ld.so.conf.d/z-cuda-stubs.conf     && ldconfig', 'apt-get update && apt-get install -y     ${PYTHON}     ${PYTHON}-pip', '${PIP} --no-cache-dir install --upgrade     pip     setuptools', 'ln -s $(which ${PYTHON}) /usr/local/bin/python', '${PIP} install ${TF_PACKAGE}${TF_PACKAGE_VERSION:+==${TF_PACKAGE_VERSION}}', 'chmod a+rwx /etc/bash.bashrc']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/dockerfiles/dockerfiles/gpu.Dockerfile,ENV,2,"['LD_LIBRARY_PATH /usr/local/cuda/extras/CUPTI/lib64:/usr/local/cuda/lib64:$LD_LIBRARY_PATH', 'LANG C.UTF-8']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/dockerfiles/dockerfiles/gpu.Dockerfile,COPY,1,['bashrc /etc/bash.bashrc']
microsoft/tensorflow-directml,latest,/tensorflow/tools/dockerfiles/dockerfiles/cpu-jupyter.Dockerfile,ARG,7,"['UBUNTU_VERSION=18.04', 'USE_PYTHON_3_NOT_2', '_PY_SUFFIX=${USE_PYTHON_3_NOT_2:+3}', 'PYTHON=python${_PY_SUFFIX}', 'PIP=pip${_PY_SUFFIX}', 'TF_PACKAGE=tensorflow', 'TF_PACKAGE_VERSION=']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/dockerfiles/dockerfiles/cpu-jupyter.Dockerfile,FROM,1,['ubuntu:${UBUNTU_VERSION} as base']
microsoft/tensorflow-directml,latest,/tensorflow/tools/dockerfiles/dockerfiles/cpu-jupyter.Dockerfile,ENV,1,['LANG C.UTF-8']
microsoft/tensorflow-directml,latest,/tensorflow/tools/dockerfiles/dockerfiles/cpu-jupyter.Dockerfile,RUN,15,"['apt-get update && apt-get install -y     ${PYTHON}     ${PYTHON}-pip', '${PIP} --no-cache-dir install --upgrade     pip     setuptools', 'ln -s $(which ${PYTHON}) /usr/local/bin/python', '${PIP} install ${TF_PACKAGE}${TF_PACKAGE_VERSION:+==${TF_PACKAGE_VERSION}}', 'chmod a+rwx /etc/bash.bashrc', '${PIP} install jupyter matplotlib', '${PIP} install jupyter_http_over_ws', 'jupyter serverextension enable --py jupyter_http_over_ws', 'mkdir -p /tf/tensorflow-tutorials && chmod -R a+rwx /tf/', 'mkdir /.local && chmod a+rwx /.local', 'apt-get install -y --no-install-recommends wget', 'wget https://raw.githubusercontent.com/tensorflow/docs/r1.15/site/en/tutorials/keras/basic_classification.ipynb', 'wget https://raw.githubusercontent.com/tensorflow/docs/r1.15/site/en/tutorials/keras/basic_text_classification.ipynb', 'apt-get autoremove -y && apt-get remove -y wget', '${PYTHON} -m ipykernel.kernelspec']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/dockerfiles/dockerfiles/cpu-jupyter.Dockerfile,COPY,2,"['bashrc /etc/bash.bashrc', 'readme-for-jupyter.md README.md']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/dockerfiles/dockerfiles/cpu-jupyter.Dockerfile,WORKDIR,2,"['/tf/tensorflow-tutorials', '/tf']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/dockerfiles/dockerfiles/cpu-jupyter.Dockerfile,EXPOSE,1,['8888']
microsoft/tensorflow-directml,latest,/tensorflow/tools/dockerfiles/dockerfiles/cpu-jupyter.Dockerfile,CMD,1,"['[""bash"", ""-c"", ""source /etc/bash.bashrc && jupyter notebook --notebook-dir=/tf --ip 0.0.0.0 --no-browser --allow-root""]']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/dockerfiles/dockerfiles/ppc64le/devel-gpu-ppc64le-jupyter.Dockerfile,ARG,14,"['UBUNTU_VERSION=18.04', 'ARCH=', 'CUDA=10.0', 'ARCH', 'CUDA', 'CUDNN=7.6.2.24-1', 'CUDNN_MAJOR_VERSION=7', 'LIB_DIR_PREFIX=x86_64', 'CACHE_STOP=1', 'CHECKOUT_TF_SRC=0', 'USE_PYTHON_3_NOT_2', '_PY_SUFFIX=${USE_PYTHON_3_NOT_2:+3}', 'PYTHON=python${_PY_SUFFIX}', 'PIP=pip${_PY_SUFFIX}']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/dockerfiles/dockerfiles/ppc64le/devel-gpu-ppc64le-jupyter.Dockerfile,FROM,1,['nvidia/cuda${ARCH:+-$ARCH}:${CUDA}-base-ubuntu${UBUNTU_VERSION} as base']
microsoft/tensorflow-directml,latest,/tensorflow/tools/dockerfiles/dockerfiles/ppc64le/devel-gpu-ppc64le-jupyter.Dockerfile,SHELL,1,"['[""/bin/bash"", ""-c""]']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/dockerfiles/dockerfiles/ppc64le/devel-gpu-ppc64le-jupyter.Dockerfile,RUN,21,"[""apt-get update && apt-get install -y --no-install-recommends         build-essential         cuda-command-line-tools-${CUDA/./-}         cuda-cublas-dev-${CUDA/./-}         cuda-cudart-dev-${CUDA/./-}         cuda-cufft-dev-${CUDA/./-}         cuda-curand-dev-${CUDA/./-}         cuda-cusolver-dev-${CUDA/./-}         cuda-cusparse-dev-${CUDA/./-}         libcudnn7=${CUDNN}+cuda${CUDA}         libcudnn7-dev=${CUDNN}+cuda${CUDA}         libcurl3-dev         libfreetype6-dev         libhdf5-serial-dev         libzmq3-dev         pkg-config         rsync         software-properties-common         unzip         zip         zlib1g-dev         wget         git         &&     find /usr/local/cuda-${CUDA}/lib64/ -type f -name 'lib*_static.a' -not -name 'libcudart_static.a' -delete &&     rm /usr/lib/${LIB_DIR_PREFIX}-linux-gnu/libcudnn_static_v7.a"", '[[ ""${ARCH}"" = ""ppc64le"" ]] || { apt-get update &&         apt-get install -y --no-install-recommends libnvinfer5=5.1.5-1+cuda${CUDA}         libnvinfer-dev=5.1.5-1+cuda${CUDA}         && apt-get clean         && rm -rf /var/lib/apt/lists/*; }', 'test ""${CHECKOUT_TF_SRC}"" -eq 1 && git clone https://github.com/tensorflow/tensorflow.git /tensorflow_src || true', 'ln -s /usr/local/cuda/lib64/stubs/libcuda.so /usr/local/cuda/lib64/stubs/libcuda.so.1     && echo ""/usr/local/cuda/lib64/stubs"" > /etc/ld.so.conf.d/z-cuda-stubs.conf     && ldconfig', 'apt-get update && apt-get install -y     ${PYTHON}     ${PYTHON}-pip', '${PIP} --no-cache-dir install --upgrade     pip     setuptools', 'ln -s $(which ${PYTHON}) /usr/local/bin/python', 'apt-get update && apt-get install -y     build-essential     curl     git     openjdk-8-jdk     ${PYTHON}-dev     virtualenv     swig', '${PIP} --no-cache-dir install     Pillow     h5py     keras_applications     keras_preprocessing     matplotlib     mock     numpy     scipy     sklearn     pandas     portpicker     && test ""${USE_PYTHON_3_NOT_2}"" -eq 1 && true || ${PIP} --no-cache-dir install     enum34', 'mkdir /bazel &&     cd /bazel &&     curl -fSsL -O https://github.com/bazelbuild/bazel/releases/download/$BAZEL_VERSION/bazel-$BAZEL_VERSION-dist.zip &&     unzip bazel-$BAZEL_VERSION-dist.zip &&     bash ./compile.sh &&     cp output/bazel /usr/local/bin/ &&     rm -rf /bazel &&     cd -', 'chmod a+rwx /etc/bash.bashrc', '${PIP} install jupyter matplotlib', '${PIP} install jupyter_http_over_ws', 'jupyter serverextension enable --py jupyter_http_over_ws', 'mkdir -p /tf/tensorflow-tutorials && chmod -R a+rwx /tf/', 'mkdir /.local && chmod a+rwx /.local', 'apt-get install -y --no-install-recommends wget', 'wget https://raw.githubusercontent.com/tensorflow/docs/r1.15/site/en/tutorials/keras/basic_classification.ipynb', 'wget https://raw.githubusercontent.com/tensorflow/docs/r1.15/site/en/tutorials/keras/basic_text_classification.ipynb', 'apt-get autoremove -y && apt-get remove -y wget', '${PYTHON} -m ipykernel.kernelspec']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/dockerfiles/dockerfiles/ppc64le/devel-gpu-ppc64le-jupyter.Dockerfile,ENV,9,"['CI_BUILD_PYTHON python', 'LD_LIBRARY_PATH /usr/local/cuda/extras/CUPTI/lib64:/usr/local/cuda/lib64:$LD_LIBRARY_PATH', 'TF_NEED_CUDA 1', 'TF_NEED_TENSORRT 1', 'TF_CUDA_COMPUTE_CAPABILITIES=3.5,5.2,6.0,6.1,7.0', 'TF_CUDA_VERSION=${CUDA}', 'TF_CUDNN_VERSION=${CUDNN_MAJOR_VERSION}', 'LANG C.UTF-8', 'BAZEL_VERSION 0.15.0']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/dockerfiles/dockerfiles/ppc64le/devel-gpu-ppc64le-jupyter.Dockerfile,WORKDIR,3,"['/', '/tf/tensorflow-tutorials', '/tf']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/dockerfiles/dockerfiles/ppc64le/devel-gpu-ppc64le-jupyter.Dockerfile,COPY,2,"['bashrc /etc/bash.bashrc', 'readme-for-jupyter.md README.md']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/dockerfiles/dockerfiles/ppc64le/devel-gpu-ppc64le-jupyter.Dockerfile,EXPOSE,1,['8888']
microsoft/tensorflow-directml,latest,/tensorflow/tools/dockerfiles/dockerfiles/ppc64le/devel-gpu-ppc64le-jupyter.Dockerfile,CMD,1,"['[""bash"", ""-c"", ""source /etc/bash.bashrc && jupyter notebook --notebook-dir=/tf --ip 0.0.0.0 --no-browser --allow-root""]']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/dockerfiles/dockerfiles/ppc64le/cpu-ppc64le.Dockerfile,ARG,7,"['UBUNTU_VERSION=18.04', 'USE_PYTHON_3_NOT_2', '_PY_SUFFIX=${USE_PYTHON_3_NOT_2:+3}', 'PYTHON=python${_PY_SUFFIX}', 'PIP=pip${_PY_SUFFIX}', 'TF_PACKAGE=tensorflow', 'CACHE_STOP=1']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/dockerfiles/dockerfiles/ppc64le/cpu-ppc64le.Dockerfile,FROM,1,['ubuntu:${UBUNTU_VERSION} as base']
microsoft/tensorflow-directml,latest,/tensorflow/tools/dockerfiles/dockerfiles/ppc64le/cpu-ppc64le.Dockerfile,ENV,1,['LANG C.UTF-8']
microsoft/tensorflow-directml,latest,/tensorflow/tools/dockerfiles/dockerfiles/ppc64le/cpu-ppc64le.Dockerfile,RUN,7,"['apt-get update && apt-get install -y     ${PYTHON}     ${PYTHON}-pip', '${PIP} --no-cache-dir install --upgrade     pip     setuptools', 'ln -s $(which ${PYTHON}) /usr/local/bin/python', 'apt-get update && apt-get install -y wget libhdf5-dev', '${PIP} install --global-option=build_ext             --global-option=-I/usr/include/hdf5/serial/             --global-option=-L/usr/lib/powerpc64le-linux-gnu/hdf5/serial             h5py', 'if [ ${TF_PACKAGE} = tensorflow-gpu ]; then         BASE=https://powerci.osuosl.org/job/TensorFlow_PPC64LE_GPU_Release_Build/lastSuccessfulBuild/;     elif [ ${TF_PACKAGE} = tf-nightly-gpu ]; then         BASE=https://powerci.osuosl.org/job/TensorFlow_PPC64LE_GPU_Nightly_Artifact/lastSuccessfulBuild/;     elif [ ${TF_PACKAGE} = tensorflow ]; then         BASE=https://powerci.osuosl.org/job/TensorFlow_PPC64LE_CPU_Release_Build/lastSuccessfulBuild/;     elif [ ${TF_PACKAGE} = tf-nightly ]; then         BASE=https://powerci.osuosl.org/job/TensorFlow_PPC64LE_CPU_Nightly_Artifact/lastSuccessfulBuild/;     fi;     MAJOR=`${PYTHON} -c \'import sys; print(sys.version_info[0])\'`;     MINOR=`${PYTHON} -c \'import sys; print(sys.version_info[1])\'`;     PACKAGE=$(wget -qO- ${BASE}""api/xml?xpath=//fileName&wrapper=artifacts"" | grep -o ""[^<>]*cp${MAJOR}${MINOR}[^<>]*.whl"");     wget ${BASE}""artifact/tensorflow_pkg/""${PACKAGE};     ${PIP} install ${PACKAGE}', 'chmod a+rwx /etc/bash.bashrc']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/dockerfiles/dockerfiles/ppc64le/cpu-ppc64le.Dockerfile,COPY,1,['bashrc /etc/bash.bashrc']
microsoft/tensorflow-directml,latest,/tensorflow/tools/dockerfiles/dockerfiles/ppc64le/cpu-ppc64le-jupyter.Dockerfile,ARG,7,"['UBUNTU_VERSION=18.04', 'USE_PYTHON_3_NOT_2', '_PY_SUFFIX=${USE_PYTHON_3_NOT_2:+3}', 'PYTHON=python${_PY_SUFFIX}', 'PIP=pip${_PY_SUFFIX}', 'TF_PACKAGE=tensorflow', 'CACHE_STOP=1']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/dockerfiles/dockerfiles/ppc64le/cpu-ppc64le-jupyter.Dockerfile,FROM,1,['ubuntu:${UBUNTU_VERSION} as base']
microsoft/tensorflow-directml,latest,/tensorflow/tools/dockerfiles/dockerfiles/ppc64le/cpu-ppc64le-jupyter.Dockerfile,ENV,1,['LANG C.UTF-8']
microsoft/tensorflow-directml,latest,/tensorflow/tools/dockerfiles/dockerfiles/ppc64le/cpu-ppc64le-jupyter.Dockerfile,RUN,17,"['apt-get update && apt-get install -y     ${PYTHON}     ${PYTHON}-pip', '${PIP} --no-cache-dir install --upgrade     pip     setuptools', 'ln -s $(which ${PYTHON}) /usr/local/bin/python', 'apt-get update && apt-get install -y wget libhdf5-dev', '${PIP} install --global-option=build_ext             --global-option=-I/usr/include/hdf5/serial/             --global-option=-L/usr/lib/powerpc64le-linux-gnu/hdf5/serial             h5py', 'if [ ${TF_PACKAGE} = tensorflow-gpu ]; then         BASE=https://powerci.osuosl.org/job/TensorFlow_PPC64LE_GPU_Release_Build/lastSuccessfulBuild/;     elif [ ${TF_PACKAGE} = tf-nightly-gpu ]; then         BASE=https://powerci.osuosl.org/job/TensorFlow_PPC64LE_GPU_Nightly_Artifact/lastSuccessfulBuild/;     elif [ ${TF_PACKAGE} = tensorflow ]; then         BASE=https://powerci.osuosl.org/job/TensorFlow_PPC64LE_CPU_Release_Build/lastSuccessfulBuild/;     elif [ ${TF_PACKAGE} = tf-nightly ]; then         BASE=https://powerci.osuosl.org/job/TensorFlow_PPC64LE_CPU_Nightly_Artifact/lastSuccessfulBuild/;     fi;     MAJOR=`${PYTHON} -c \'import sys; print(sys.version_info[0])\'`;     MINOR=`${PYTHON} -c \'import sys; print(sys.version_info[1])\'`;     PACKAGE=$(wget -qO- ${BASE}""api/xml?xpath=//fileName&wrapper=artifacts"" | grep -o ""[^<>]*cp${MAJOR}${MINOR}[^<>]*.whl"");     wget ${BASE}""artifact/tensorflow_pkg/""${PACKAGE};     ${PIP} install ${PACKAGE}', 'chmod a+rwx /etc/bash.bashrc', '${PIP} install jupyter matplotlib', '${PIP} install jupyter_http_over_ws', 'jupyter serverextension enable --py jupyter_http_over_ws', 'mkdir -p /tf/tensorflow-tutorials && chmod -R a+rwx /tf/', 'mkdir /.local && chmod a+rwx /.local', 'apt-get install -y --no-install-recommends wget', 'wget https://raw.githubusercontent.com/tensorflow/docs/r1.15/site/en/tutorials/keras/basic_classification.ipynb', 'wget https://raw.githubusercontent.com/tensorflow/docs/r1.15/site/en/tutorials/keras/basic_text_classification.ipynb', 'apt-get autoremove -y && apt-get remove -y wget', '${PYTHON} -m ipykernel.kernelspec']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/dockerfiles/dockerfiles/ppc64le/cpu-ppc64le-jupyter.Dockerfile,COPY,2,"['bashrc /etc/bash.bashrc', 'readme-for-jupyter.md README.md']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/dockerfiles/dockerfiles/ppc64le/cpu-ppc64le-jupyter.Dockerfile,WORKDIR,2,"['/tf/tensorflow-tutorials', '/tf']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/dockerfiles/dockerfiles/ppc64le/cpu-ppc64le-jupyter.Dockerfile,EXPOSE,1,['8888']
microsoft/tensorflow-directml,latest,/tensorflow/tools/dockerfiles/dockerfiles/ppc64le/cpu-ppc64le-jupyter.Dockerfile,CMD,1,"['[""bash"", ""-c"", ""source /etc/bash.bashrc && jupyter notebook --notebook-dir=/tf --ip 0.0.0.0 --no-browser --allow-root""]']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/dockerfiles/dockerfiles/ppc64le/gpu-ppc64le.Dockerfile,ARG,12,"['UBUNTU_VERSION=18.04', 'ARCH=', 'CUDA=10.0', 'ARCH', 'CUDA', 'CUDNN=7.6.2.24-1', 'USE_PYTHON_3_NOT_2', '_PY_SUFFIX=${USE_PYTHON_3_NOT_2:+3}', 'PYTHON=python${_PY_SUFFIX}', 'PIP=pip${_PY_SUFFIX}', 'TF_PACKAGE=tensorflow', 'CACHE_STOP=1']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/dockerfiles/dockerfiles/ppc64le/gpu-ppc64le.Dockerfile,FROM,1,['nvidia/cuda${ARCH:+-$ARCH}:${CUDA}-base-ubuntu${UBUNTU_VERSION} as base']
microsoft/tensorflow-directml,latest,/tensorflow/tools/dockerfiles/dockerfiles/ppc64le/gpu-ppc64le.Dockerfile,SHELL,1,"['[""/bin/bash"", ""-c""]']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/dockerfiles/dockerfiles/ppc64le/gpu-ppc64le.Dockerfile,RUN,10,"['apt-get update && apt-get install -y --no-install-recommends         build-essential         cuda-command-line-tools-${CUDA/./-}         cuda-cublas-${CUDA/./-}         cuda-cufft-${CUDA/./-}         cuda-curand-${CUDA/./-}         cuda-cusolver-${CUDA/./-}         cuda-cusparse-${CUDA/./-}         curl         libcudnn7=${CUDNN}+cuda${CUDA}         libfreetype6-dev         libhdf5-serial-dev         libzmq3-dev         pkg-config         software-properties-common         unzip', '[ ${ARCH} = ppc64le ] || (apt-get update &&         apt-get install -y --no-install-recommends libnvinfer5=5.1.5-1+cuda${CUDA}         && apt-get clean         && rm -rf /var/lib/apt/lists/*)', 'ln -s /usr/local/cuda/lib64/stubs/libcuda.so /usr/local/cuda/lib64/stubs/libcuda.so.1     && echo ""/usr/local/cuda/lib64/stubs"" > /etc/ld.so.conf.d/z-cuda-stubs.conf     && ldconfig', 'apt-get update && apt-get install -y     ${PYTHON}     ${PYTHON}-pip', '${PIP} --no-cache-dir install --upgrade     pip     setuptools', 'ln -s $(which ${PYTHON}) /usr/local/bin/python', 'apt-get update && apt-get install -y wget libhdf5-dev', '${PIP} install --global-option=build_ext             --global-option=-I/usr/include/hdf5/serial/             --global-option=-L/usr/lib/powerpc64le-linux-gnu/hdf5/serial             h5py', 'if [ ${TF_PACKAGE} = tensorflow-gpu ]; then         BASE=https://powerci.osuosl.org/job/TensorFlow_PPC64LE_GPU_Release_Build/lastSuccessfulBuild/;     elif [ ${TF_PACKAGE} = tf-nightly-gpu ]; then         BASE=https://powerci.osuosl.org/job/TensorFlow_PPC64LE_GPU_Nightly_Artifact/lastSuccessfulBuild/;     elif [ ${TF_PACKAGE} = tensorflow ]; then         BASE=https://powerci.osuosl.org/job/TensorFlow_PPC64LE_CPU_Release_Build/lastSuccessfulBuild/;     elif [ ${TF_PACKAGE} = tf-nightly ]; then         BASE=https://powerci.osuosl.org/job/TensorFlow_PPC64LE_CPU_Nightly_Artifact/lastSuccessfulBuild/;     fi;     MAJOR=`${PYTHON} -c \'import sys; print(sys.version_info[0])\'`;     MINOR=`${PYTHON} -c \'import sys; print(sys.version_info[1])\'`;     PACKAGE=$(wget -qO- ${BASE}""api/xml?xpath=//fileName&wrapper=artifacts"" | grep -o ""[^<>]*cp${MAJOR}${MINOR}[^<>]*.whl"");     wget ${BASE}""artifact/tensorflow_pkg/""${PACKAGE};     ${PIP} install ${PACKAGE}', 'chmod a+rwx /etc/bash.bashrc']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/dockerfiles/dockerfiles/ppc64le/gpu-ppc64le.Dockerfile,ENV,2,"['LD_LIBRARY_PATH /usr/local/cuda/extras/CUPTI/lib64:/usr/local/cuda/lib64:$LD_LIBRARY_PATH', 'LANG C.UTF-8']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/dockerfiles/dockerfiles/ppc64le/gpu-ppc64le.Dockerfile,COPY,1,['bashrc /etc/bash.bashrc']
microsoft/tensorflow-directml,latest,/tensorflow/tools/dockerfiles/dockerfiles/ppc64le/gpu-ppc64le-jupyter.Dockerfile,ARG,12,"['UBUNTU_VERSION=18.04', 'ARCH=', 'CUDA=10.0', 'ARCH', 'CUDA', 'CUDNN=7.6.2.24-1', 'USE_PYTHON_3_NOT_2', '_PY_SUFFIX=${USE_PYTHON_3_NOT_2:+3}', 'PYTHON=python${_PY_SUFFIX}', 'PIP=pip${_PY_SUFFIX}', 'TF_PACKAGE=tensorflow', 'CACHE_STOP=1']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/dockerfiles/dockerfiles/ppc64le/gpu-ppc64le-jupyter.Dockerfile,FROM,1,['nvidia/cuda${ARCH:+-$ARCH}:${CUDA}-base-ubuntu${UBUNTU_VERSION} as base']
microsoft/tensorflow-directml,latest,/tensorflow/tools/dockerfiles/dockerfiles/ppc64le/gpu-ppc64le-jupyter.Dockerfile,SHELL,1,"['[""/bin/bash"", ""-c""]']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/dockerfiles/dockerfiles/ppc64le/gpu-ppc64le-jupyter.Dockerfile,RUN,20,"['apt-get update && apt-get install -y --no-install-recommends         build-essential         cuda-command-line-tools-${CUDA/./-}         cuda-cublas-${CUDA/./-}         cuda-cufft-${CUDA/./-}         cuda-curand-${CUDA/./-}         cuda-cusolver-${CUDA/./-}         cuda-cusparse-${CUDA/./-}         curl         libcudnn7=${CUDNN}+cuda${CUDA}         libfreetype6-dev         libhdf5-serial-dev         libzmq3-dev         pkg-config         software-properties-common         unzip', '[ ${ARCH} = ppc64le ] || (apt-get update &&         apt-get install -y --no-install-recommends libnvinfer5=5.1.5-1+cuda${CUDA}         && apt-get clean         && rm -rf /var/lib/apt/lists/*)', 'ln -s /usr/local/cuda/lib64/stubs/libcuda.so /usr/local/cuda/lib64/stubs/libcuda.so.1     && echo ""/usr/local/cuda/lib64/stubs"" > /etc/ld.so.conf.d/z-cuda-stubs.conf     && ldconfig', 'apt-get update && apt-get install -y     ${PYTHON}     ${PYTHON}-pip', '${PIP} --no-cache-dir install --upgrade     pip     setuptools', 'ln -s $(which ${PYTHON}) /usr/local/bin/python', 'apt-get update && apt-get install -y wget libhdf5-dev', '${PIP} install --global-option=build_ext             --global-option=-I/usr/include/hdf5/serial/             --global-option=-L/usr/lib/powerpc64le-linux-gnu/hdf5/serial             h5py', 'if [ ${TF_PACKAGE} = tensorflow-gpu ]; then         BASE=https://powerci.osuosl.org/job/TensorFlow_PPC64LE_GPU_Release_Build/lastSuccessfulBuild/;     elif [ ${TF_PACKAGE} = tf-nightly-gpu ]; then         BASE=https://powerci.osuosl.org/job/TensorFlow_PPC64LE_GPU_Nightly_Artifact/lastSuccessfulBuild/;     elif [ ${TF_PACKAGE} = tensorflow ]; then         BASE=https://powerci.osuosl.org/job/TensorFlow_PPC64LE_CPU_Release_Build/lastSuccessfulBuild/;     elif [ ${TF_PACKAGE} = tf-nightly ]; then         BASE=https://powerci.osuosl.org/job/TensorFlow_PPC64LE_CPU_Nightly_Artifact/lastSuccessfulBuild/;     fi;     MAJOR=`${PYTHON} -c \'import sys; print(sys.version_info[0])\'`;     MINOR=`${PYTHON} -c \'import sys; print(sys.version_info[1])\'`;     PACKAGE=$(wget -qO- ${BASE}""api/xml?xpath=//fileName&wrapper=artifacts"" | grep -o ""[^<>]*cp${MAJOR}${MINOR}[^<>]*.whl"");     wget ${BASE}""artifact/tensorflow_pkg/""${PACKAGE};     ${PIP} install ${PACKAGE}', 'chmod a+rwx /etc/bash.bashrc', '${PIP} install jupyter matplotlib', '${PIP} install jupyter_http_over_ws', 'jupyter serverextension enable --py jupyter_http_over_ws', 'mkdir -p /tf/tensorflow-tutorials && chmod -R a+rwx /tf/', 'mkdir /.local && chmod a+rwx /.local', 'apt-get install -y --no-install-recommends wget', 'wget https://raw.githubusercontent.com/tensorflow/docs/r1.15/site/en/tutorials/keras/basic_classification.ipynb', 'wget https://raw.githubusercontent.com/tensorflow/docs/r1.15/site/en/tutorials/keras/basic_text_classification.ipynb', 'apt-get autoremove -y && apt-get remove -y wget', '${PYTHON} -m ipykernel.kernelspec']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/dockerfiles/dockerfiles/ppc64le/gpu-ppc64le-jupyter.Dockerfile,ENV,2,"['LD_LIBRARY_PATH /usr/local/cuda/extras/CUPTI/lib64:/usr/local/cuda/lib64:$LD_LIBRARY_PATH', 'LANG C.UTF-8']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/dockerfiles/dockerfiles/ppc64le/gpu-ppc64le-jupyter.Dockerfile,COPY,2,"['bashrc /etc/bash.bashrc', 'readme-for-jupyter.md README.md']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/dockerfiles/dockerfiles/ppc64le/gpu-ppc64le-jupyter.Dockerfile,WORKDIR,2,"['/tf/tensorflow-tutorials', '/tf']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/dockerfiles/dockerfiles/ppc64le/gpu-ppc64le-jupyter.Dockerfile,EXPOSE,1,['8888']
microsoft/tensorflow-directml,latest,/tensorflow/tools/dockerfiles/dockerfiles/ppc64le/gpu-ppc64le-jupyter.Dockerfile,CMD,1,"['[""bash"", ""-c"", ""source /etc/bash.bashrc && jupyter notebook --notebook-dir=/tf --ip 0.0.0.0 --no-browser --allow-root""]']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/dockerfiles/dockerfiles/ppc64le/devel-cpu-ppc64le.Dockerfile,ARG,7,"['UBUNTU_VERSION=18.04', 'CACHE_STOP=1', 'CHECKOUT_TF_SRC=0', 'USE_PYTHON_3_NOT_2', '_PY_SUFFIX=${USE_PYTHON_3_NOT_2:+3}', 'PYTHON=python${_PY_SUFFIX}', 'PIP=pip${_PY_SUFFIX}']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/dockerfiles/dockerfiles/ppc64le/devel-cpu-ppc64le.Dockerfile,FROM,1,['ubuntu:${UBUNTU_VERSION} AS base']
microsoft/tensorflow-directml,latest,/tensorflow/tools/dockerfiles/dockerfiles/ppc64le/devel-cpu-ppc64le.Dockerfile,RUN,9,"['apt-get update && apt-get install -y --no-install-recommends         build-essential         curl         git         libcurl3-dev         libfreetype6-dev         libhdf5-serial-dev         libzmq3-dev         pkg-config         rsync         software-properties-common \tsudo         unzip         zip         zlib1g-dev         openjdk-8-jdk         openjdk-8-jre-headless         &&     apt-get clean &&     rm -rf /var/lib/apt/lists/*', 'test ""${CHECKOUT_TF_SRC}"" -eq 1 && git clone https://github.com/tensorflow/tensorflow.git /tensorflow_src || true', 'apt-get update && apt-get install -y     ${PYTHON}     ${PYTHON}-pip', '${PIP} --no-cache-dir install --upgrade     pip     setuptools', 'ln -s $(which ${PYTHON}) /usr/local/bin/python', 'apt-get update && apt-get install -y     build-essential     curl     git     openjdk-8-jdk     ${PYTHON}-dev     virtualenv     swig', '${PIP} --no-cache-dir install     Pillow     h5py     keras_applications     keras_preprocessing     matplotlib     mock     numpy     scipy     sklearn     pandas     portpicker     && test ""${USE_PYTHON_3_NOT_2}"" -eq 1 && true || ${PIP} --no-cache-dir install     enum34', 'mkdir /bazel &&     cd /bazel &&     curl -fSsL -O https://github.com/bazelbuild/bazel/releases/download/$BAZEL_VERSION/bazel-$BAZEL_VERSION-dist.zip &&     unzip bazel-$BAZEL_VERSION-dist.zip &&     bash ./compile.sh &&     cp output/bazel /usr/local/bin/ &&     rm -rf /bazel &&     cd -', 'chmod a+rwx /etc/bash.bashrc']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/dockerfiles/dockerfiles/ppc64le/devel-cpu-ppc64le.Dockerfile,ENV,3,"['CI_BUILD_PYTHON python', 'LANG C.UTF-8', 'BAZEL_VERSION 0.15.0']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/dockerfiles/dockerfiles/ppc64le/devel-cpu-ppc64le.Dockerfile,WORKDIR,1,['/']
microsoft/tensorflow-directml,latest,/tensorflow/tools/dockerfiles/dockerfiles/ppc64le/devel-cpu-ppc64le.Dockerfile,COPY,1,['bashrc /etc/bash.bashrc']
microsoft/tensorflow-directml,latest,/tensorflow/tools/dockerfiles/dockerfiles/ppc64le/devel-cpu-ppc64le-jupyter.Dockerfile,ARG,7,"['UBUNTU_VERSION=18.04', 'CACHE_STOP=1', 'CHECKOUT_TF_SRC=0', 'USE_PYTHON_3_NOT_2', '_PY_SUFFIX=${USE_PYTHON_3_NOT_2:+3}', 'PYTHON=python${_PY_SUFFIX}', 'PIP=pip${_PY_SUFFIX}']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/dockerfiles/dockerfiles/ppc64le/devel-cpu-ppc64le-jupyter.Dockerfile,FROM,1,['ubuntu:${UBUNTU_VERSION} AS base']
microsoft/tensorflow-directml,latest,/tensorflow/tools/dockerfiles/dockerfiles/ppc64le/devel-cpu-ppc64le-jupyter.Dockerfile,RUN,19,"['apt-get update && apt-get install -y --no-install-recommends         build-essential         curl         git         libcurl3-dev         libfreetype6-dev         libhdf5-serial-dev         libzmq3-dev         pkg-config         rsync         software-properties-common \tsudo         unzip         zip         zlib1g-dev         openjdk-8-jdk         openjdk-8-jre-headless         &&     apt-get clean &&     rm -rf /var/lib/apt/lists/*', 'test ""${CHECKOUT_TF_SRC}"" -eq 1 && git clone https://github.com/tensorflow/tensorflow.git /tensorflow_src || true', 'apt-get update && apt-get install -y     ${PYTHON}     ${PYTHON}-pip', '${PIP} --no-cache-dir install --upgrade     pip     setuptools', 'ln -s $(which ${PYTHON}) /usr/local/bin/python', 'apt-get update && apt-get install -y     build-essential     curl     git     openjdk-8-jdk     ${PYTHON}-dev     virtualenv     swig', '${PIP} --no-cache-dir install     Pillow     h5py     keras_applications     keras_preprocessing     matplotlib     mock     numpy     scipy     sklearn     pandas     portpicker     && test ""${USE_PYTHON_3_NOT_2}"" -eq 1 && true || ${PIP} --no-cache-dir install     enum34', 'mkdir /bazel &&     cd /bazel &&     curl -fSsL -O https://github.com/bazelbuild/bazel/releases/download/$BAZEL_VERSION/bazel-$BAZEL_VERSION-dist.zip &&     unzip bazel-$BAZEL_VERSION-dist.zip &&     bash ./compile.sh &&     cp output/bazel /usr/local/bin/ &&     rm -rf /bazel &&     cd -', 'chmod a+rwx /etc/bash.bashrc', '${PIP} install jupyter matplotlib', '${PIP} install jupyter_http_over_ws', 'jupyter serverextension enable --py jupyter_http_over_ws', 'mkdir -p /tf/tensorflow-tutorials && chmod -R a+rwx /tf/', 'mkdir /.local && chmod a+rwx /.local', 'apt-get install -y --no-install-recommends wget', 'wget https://raw.githubusercontent.com/tensorflow/docs/r1.15/site/en/tutorials/keras/basic_classification.ipynb', 'wget https://raw.githubusercontent.com/tensorflow/docs/r1.15/site/en/tutorials/keras/basic_text_classification.ipynb', 'apt-get autoremove -y && apt-get remove -y wget', '${PYTHON} -m ipykernel.kernelspec']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/dockerfiles/dockerfiles/ppc64le/devel-cpu-ppc64le-jupyter.Dockerfile,ENV,3,"['CI_BUILD_PYTHON python', 'LANG C.UTF-8', 'BAZEL_VERSION 0.15.0']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/dockerfiles/dockerfiles/ppc64le/devel-cpu-ppc64le-jupyter.Dockerfile,WORKDIR,3,"['/', '/tf/tensorflow-tutorials', '/tf']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/dockerfiles/dockerfiles/ppc64le/devel-cpu-ppc64le-jupyter.Dockerfile,COPY,2,"['bashrc /etc/bash.bashrc', 'readme-for-jupyter.md README.md']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/dockerfiles/dockerfiles/ppc64le/devel-cpu-ppc64le-jupyter.Dockerfile,EXPOSE,1,['8888']
microsoft/tensorflow-directml,latest,/tensorflow/tools/dockerfiles/dockerfiles/ppc64le/devel-cpu-ppc64le-jupyter.Dockerfile,CMD,1,"['[""bash"", ""-c"", ""source /etc/bash.bashrc && jupyter notebook --notebook-dir=/tf --ip 0.0.0.0 --no-browser --allow-root""]']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/dockerfiles/dockerfiles/ppc64le/devel-gpu-ppc64le.Dockerfile,ARG,14,"['UBUNTU_VERSION=18.04', 'ARCH=', 'CUDA=10.0', 'ARCH', 'CUDA', 'CUDNN=7.6.2.24-1', 'CUDNN_MAJOR_VERSION=7', 'LIB_DIR_PREFIX=x86_64', 'CACHE_STOP=1', 'CHECKOUT_TF_SRC=0', 'USE_PYTHON_3_NOT_2', '_PY_SUFFIX=${USE_PYTHON_3_NOT_2:+3}', 'PYTHON=python${_PY_SUFFIX}', 'PIP=pip${_PY_SUFFIX}']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/dockerfiles/dockerfiles/ppc64le/devel-gpu-ppc64le.Dockerfile,FROM,1,['nvidia/cuda${ARCH:+-$ARCH}:${CUDA}-base-ubuntu${UBUNTU_VERSION} as base']
microsoft/tensorflow-directml,latest,/tensorflow/tools/dockerfiles/dockerfiles/ppc64le/devel-gpu-ppc64le.Dockerfile,SHELL,1,"['[""/bin/bash"", ""-c""]']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/dockerfiles/dockerfiles/ppc64le/devel-gpu-ppc64le.Dockerfile,RUN,11,"[""apt-get update && apt-get install -y --no-install-recommends         build-essential         cuda-command-line-tools-${CUDA/./-}         cuda-cublas-dev-${CUDA/./-}         cuda-cudart-dev-${CUDA/./-}         cuda-cufft-dev-${CUDA/./-}         cuda-curand-dev-${CUDA/./-}         cuda-cusolver-dev-${CUDA/./-}         cuda-cusparse-dev-${CUDA/./-}         libcudnn7=${CUDNN}+cuda${CUDA}         libcudnn7-dev=${CUDNN}+cuda${CUDA}         libcurl3-dev         libfreetype6-dev         libhdf5-serial-dev         libzmq3-dev         pkg-config         rsync         software-properties-common         unzip         zip         zlib1g-dev         wget         git         &&     find /usr/local/cuda-${CUDA}/lib64/ -type f -name 'lib*_static.a' -not -name 'libcudart_static.a' -delete &&     rm /usr/lib/${LIB_DIR_PREFIX}-linux-gnu/libcudnn_static_v7.a"", '[[ ""${ARCH}"" = ""ppc64le"" ]] || { apt-get update &&         apt-get install -y --no-install-recommends libnvinfer5=5.1.5-1+cuda${CUDA}         libnvinfer-dev=5.1.5-1+cuda${CUDA}         && apt-get clean         && rm -rf /var/lib/apt/lists/*; }', 'test ""${CHECKOUT_TF_SRC}"" -eq 1 && git clone https://github.com/tensorflow/tensorflow.git /tensorflow_src || true', 'ln -s /usr/local/cuda/lib64/stubs/libcuda.so /usr/local/cuda/lib64/stubs/libcuda.so.1     && echo ""/usr/local/cuda/lib64/stubs"" > /etc/ld.so.conf.d/z-cuda-stubs.conf     && ldconfig', 'apt-get update && apt-get install -y     ${PYTHON}     ${PYTHON}-pip', '${PIP} --no-cache-dir install --upgrade     pip     setuptools', 'ln -s $(which ${PYTHON}) /usr/local/bin/python', 'apt-get update && apt-get install -y     build-essential     curl     git     openjdk-8-jdk     ${PYTHON}-dev     virtualenv     swig', '${PIP} --no-cache-dir install     Pillow     h5py     keras_applications     keras_preprocessing     matplotlib     mock     numpy     scipy     sklearn     pandas     portpicker     && test ""${USE_PYTHON_3_NOT_2}"" -eq 1 && true || ${PIP} --no-cache-dir install     enum34', 'mkdir /bazel &&     cd /bazel &&     curl -fSsL -O https://github.com/bazelbuild/bazel/releases/download/$BAZEL_VERSION/bazel-$BAZEL_VERSION-dist.zip &&     unzip bazel-$BAZEL_VERSION-dist.zip &&     bash ./compile.sh &&     cp output/bazel /usr/local/bin/ &&     rm -rf /bazel &&     cd -', 'chmod a+rwx /etc/bash.bashrc']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/dockerfiles/dockerfiles/ppc64le/devel-gpu-ppc64le.Dockerfile,ENV,9,"['CI_BUILD_PYTHON python', 'LD_LIBRARY_PATH /usr/local/cuda/extras/CUPTI/lib64:/usr/local/cuda/lib64:$LD_LIBRARY_PATH', 'TF_NEED_CUDA 1', 'TF_NEED_TENSORRT 1', 'TF_CUDA_COMPUTE_CAPABILITIES=3.5,5.2,6.0,6.1,7.0', 'TF_CUDA_VERSION=${CUDA}', 'TF_CUDNN_VERSION=${CUDNN_MAJOR_VERSION}', 'LANG C.UTF-8', 'BAZEL_VERSION 0.15.0']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/dockerfiles/dockerfiles/ppc64le/devel-gpu-ppc64le.Dockerfile,WORKDIR,1,['/']
microsoft/tensorflow-directml,latest,/tensorflow/tools/dockerfiles/dockerfiles/ppc64le/devel-gpu-ppc64le.Dockerfile,COPY,1,['bashrc /etc/bash.bashrc']
microsoft/tensorflow-directml,latest,/tensorflow/tools/dockerfiles/partials/shell.partial.Dockerfile,COPY,1,['bashrc /etc/bash.bashrc']
microsoft/tensorflow-directml,latest,/tensorflow/tools/dockerfiles/partials/shell.partial.Dockerfile,RUN,1,['chmod a+rwx /etc/bash.bashrc']
microsoft/tensorflow-directml,latest,/tensorflow/tools/dockerfiles/partials/jupyter.partial.Dockerfile,RUN,10,"['${PIP} install jupyter matplotlib', '${PIP} install jupyter_http_over_ws', 'jupyter serverextension enable --py jupyter_http_over_ws', 'mkdir -p /tf/tensorflow-tutorials && chmod -R a+rwx /tf/', 'mkdir /.local && chmod a+rwx /.local', 'apt-get install -y --no-install-recommends wget', 'wget https://raw.githubusercontent.com/tensorflow/docs/r1.15/site/en/tutorials/keras/basic_classification.ipynb', 'wget https://raw.githubusercontent.com/tensorflow/docs/r1.15/site/en/tutorials/keras/basic_text_classification.ipynb', 'apt-get autoremove -y && apt-get remove -y wget', '${PYTHON} -m ipykernel.kernelspec']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/dockerfiles/partials/jupyter.partial.Dockerfile,WORKDIR,2,"['/tf/tensorflow-tutorials', '/tf']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/dockerfiles/partials/jupyter.partial.Dockerfile,COPY,1,['readme-for-jupyter.md README.md']
microsoft/tensorflow-directml,latest,/tensorflow/tools/dockerfiles/partials/jupyter.partial.Dockerfile,EXPOSE,1,['8888']
microsoft/tensorflow-directml,latest,/tensorflow/tools/dockerfiles/partials/jupyter.partial.Dockerfile,CMD,1,"['[""bash"", ""-c"", ""source /etc/bash.bashrc && jupyter notebook --notebook-dir=/tf --ip 0.0.0.0 --no-browser --allow-root""]']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/dockerfiles/partials/tensorflow-ppc64le.partial.Dockerfile,ARG,2,"['TF_PACKAGE=tensorflow', 'CACHE_STOP=1']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/dockerfiles/partials/tensorflow-ppc64le.partial.Dockerfile,RUN,3,"['apt-get update && apt-get install -y wget libhdf5-dev', '${PIP} install --global-option=build_ext             --global-option=-I/usr/include/hdf5/serial/             --global-option=-L/usr/lib/powerpc64le-linux-gnu/hdf5/serial             h5py', 'if [ ${TF_PACKAGE} = tensorflow-gpu ]; then         BASE=https://powerci.osuosl.org/job/TensorFlow_PPC64LE_GPU_Release_Build/lastSuccessfulBuild/;     elif [ ${TF_PACKAGE} = tf-nightly-gpu ]; then         BASE=https://powerci.osuosl.org/job/TensorFlow_PPC64LE_GPU_Nightly_Artifact/lastSuccessfulBuild/;     elif [ ${TF_PACKAGE} = tensorflow ]; then         BASE=https://powerci.osuosl.org/job/TensorFlow_PPC64LE_CPU_Release_Build/lastSuccessfulBuild/;     elif [ ${TF_PACKAGE} = tf-nightly ]; then         BASE=https://powerci.osuosl.org/job/TensorFlow_PPC64LE_CPU_Nightly_Artifact/lastSuccessfulBuild/;     fi;     MAJOR=`${PYTHON} -c \'import sys; print(sys.version_info[0])\'`;     MINOR=`${PYTHON} -c \'import sys; print(sys.version_info[1])\'`;     PACKAGE=$(wget -qO- ${BASE}""api/xml?xpath=//fileName&wrapper=artifacts"" | grep -o ""[^<>]*cp${MAJOR}${MINOR}[^<>]*.whl"");     wget ${BASE}""artifact/tensorflow_pkg/""${PACKAGE};     ${PIP} install ${PACKAGE}']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/dockerfiles/partials/tensorflow.partial.Dockerfile,ARG,2,"['TF_PACKAGE=tensorflow', 'TF_PACKAGE_VERSION=']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/dockerfiles/partials/tensorflow.partial.Dockerfile,RUN,1,['${PIP} install ${TF_PACKAGE}${TF_PACKAGE_VERSION:+==${TF_PACKAGE_VERSION}}']
microsoft/tensorflow-directml,latest,/tensorflow/tools/dockerfiles/partials/ubuntu/version.partial.Dockerfile,ARG,1,['UBUNTU_VERSION=18.04']
microsoft/tensorflow-directml,latest,/tensorflow/tools/dockerfiles/partials/ubuntu/bazel.partial.Dockerfile,RUN,3,"['apt-get update && apt-get install -y     build-essential     curl     git     wget     openjdk-8-jdk     ${PYTHON}-dev     virtualenv     swig', '${PIP} --no-cache-dir install     Pillow     h5py     keras_applications     keras_preprocessing     matplotlib     mock     numpy     scipy     sklearn     pandas     future     portpicker     && test ""${USE_PYTHON_3_NOT_2}"" -eq 1 && true || ${PIP} --no-cache-dir install     enum34', 'mkdir /bazel &&     wget -O /bazel/installer.sh ""https://github.com/bazelbuild/bazel/releases/download/${BAZEL_VERSION}/bazel-${BAZEL_VERSION}-installer-linux-x86_64.sh"" &&     wget -O /bazel/LICENSE.txt ""https://raw.githubusercontent.com/bazelbuild/bazel/master/LICENSE"" &&     chmod +x /bazel/installer.sh &&     /bazel/installer.sh &&     rm -f /bazel/installer.sh']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/dockerfiles/partials/ubuntu/bazel.partial.Dockerfile,ARG,1,['BAZEL_VERSION=0.26.1']
microsoft/tensorflow-directml,latest,/tensorflow/tools/dockerfiles/partials/ubuntu/devel-cpu.partial.Dockerfile,FROM,1,['ubuntu:${UBUNTU_VERSION} AS base']
microsoft/tensorflow-directml,latest,/tensorflow/tools/dockerfiles/partials/ubuntu/devel-cpu.partial.Dockerfile,RUN,2,"['apt-get update && apt-get install -y --no-install-recommends         build-essential         curl         git         libcurl3-dev         libfreetype6-dev         libhdf5-serial-dev         libzmq3-dev         pkg-config         rsync         software-properties-common \tsudo         unzip         zip         zlib1g-dev         openjdk-8-jdk         openjdk-8-jre-headless         &&     apt-get clean &&     rm -rf /var/lib/apt/lists/*', 'test ""${CHECKOUT_TF_SRC}"" -eq 1 && git clone https://github.com/tensorflow/tensorflow.git /tensorflow_src || true']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/dockerfiles/partials/ubuntu/devel-cpu.partial.Dockerfile,ENV,1,['CI_BUILD_PYTHON python']
microsoft/tensorflow-directml,latest,/tensorflow/tools/dockerfiles/partials/ubuntu/devel-cpu.partial.Dockerfile,ARG,2,"['CACHE_STOP=1', 'CHECKOUT_TF_SRC=0']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/dockerfiles/partials/ubuntu/bazelbuild.partial.Dockerfile,RUN,3,"['apt-get update && apt-get install -y     build-essential     curl     git     openjdk-8-jdk     ${PYTHON}-dev     virtualenv     swig', '${PIP} --no-cache-dir install     Pillow     h5py     keras_applications     keras_preprocessing     matplotlib     mock     numpy     scipy     sklearn     pandas     portpicker     && test ""${USE_PYTHON_3_NOT_2}"" -eq 1 && true || ${PIP} --no-cache-dir install     enum34', 'mkdir /bazel &&     cd /bazel &&     curl -fSsL -O https://github.com/bazelbuild/bazel/releases/download/$BAZEL_VERSION/bazel-$BAZEL_VERSION-dist.zip &&     unzip bazel-$BAZEL_VERSION-dist.zip &&     bash ./compile.sh &&     cp output/bazel /usr/local/bin/ &&     rm -rf /bazel &&     cd -']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/dockerfiles/partials/ubuntu/bazelbuild.partial.Dockerfile,ENV,1,['BAZEL_VERSION 0.15.0']
microsoft/tensorflow-directml,latest,/tensorflow/tools/dockerfiles/partials/ubuntu/bazelbuild.partial.Dockerfile,WORKDIR,1,['/']
microsoft/tensorflow-directml,latest,/tensorflow/tools/dockerfiles/partials/ubuntu/cpu.partial.Dockerfile,FROM,1,['ubuntu:${UBUNTU_VERSION} as base']
microsoft/tensorflow-directml,latest,/tensorflow/tools/dockerfiles/partials/ubuntu/nvidia.partial.Dockerfile,ARG,5,"['ARCH=', 'CUDA=10.0', 'ARCH', 'CUDA', 'CUDNN=7.6.2.24-1']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/dockerfiles/partials/ubuntu/nvidia.partial.Dockerfile,FROM,1,['nvidia/cuda${ARCH:+-$ARCH}:${CUDA}-base-ubuntu${UBUNTU_VERSION} as base']
microsoft/tensorflow-directml,latest,/tensorflow/tools/dockerfiles/partials/ubuntu/nvidia.partial.Dockerfile,SHELL,1,"['[""/bin/bash"", ""-c""]']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/dockerfiles/partials/ubuntu/nvidia.partial.Dockerfile,RUN,3,"['apt-get update && apt-get install -y --no-install-recommends         build-essential         cuda-command-line-tools-${CUDA/./-}         cuda-cublas-${CUDA/./-}         cuda-cufft-${CUDA/./-}         cuda-curand-${CUDA/./-}         cuda-cusolver-${CUDA/./-}         cuda-cusparse-${CUDA/./-}         curl         libcudnn7=${CUDNN}+cuda${CUDA}         libfreetype6-dev         libhdf5-serial-dev         libzmq3-dev         pkg-config         software-properties-common         unzip', '[ ${ARCH} = ppc64le ] || (apt-get update &&         apt-get install -y --no-install-recommends libnvinfer5=5.1.5-1+cuda${CUDA}         && apt-get clean         && rm -rf /var/lib/apt/lists/*)', 'ln -s /usr/local/cuda/lib64/stubs/libcuda.so /usr/local/cuda/lib64/stubs/libcuda.so.1     && echo ""/usr/local/cuda/lib64/stubs"" > /etc/ld.so.conf.d/z-cuda-stubs.conf     && ldconfig']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/dockerfiles/partials/ubuntu/nvidia.partial.Dockerfile,ENV,1,['LD_LIBRARY_PATH /usr/local/cuda/extras/CUPTI/lib64:/usr/local/cuda/lib64:$LD_LIBRARY_PATH']
microsoft/tensorflow-directml,latest,/tensorflow/tools/dockerfiles/partials/ubuntu/python.partial.Dockerfile,ARG,4,"['USE_PYTHON_3_NOT_2', '_PY_SUFFIX=${USE_PYTHON_3_NOT_2:+3}', 'PYTHON=python${_PY_SUFFIX}', 'PIP=pip${_PY_SUFFIX}']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/dockerfiles/partials/ubuntu/python.partial.Dockerfile,ENV,1,['LANG C.UTF-8']
microsoft/tensorflow-directml,latest,/tensorflow/tools/dockerfiles/partials/ubuntu/python.partial.Dockerfile,RUN,3,"['apt-get update && apt-get install -y     ${PYTHON}     ${PYTHON}-pip', '${PIP} --no-cache-dir install --upgrade     pip     setuptools', 'ln -s $(which ${PYTHON}) /usr/local/bin/python']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/dockerfiles/partials/ubuntu/devel-nvidia.partial.Dockerfile,ARG,9,"['ARCH=', 'CUDA=10.0', 'ARCH', 'CUDA', 'CUDNN=7.6.2.24-1', 'CUDNN_MAJOR_VERSION=7', 'LIB_DIR_PREFIX=x86_64', 'CACHE_STOP=1', 'CHECKOUT_TF_SRC=0']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/dockerfiles/partials/ubuntu/devel-nvidia.partial.Dockerfile,FROM,1,['nvidia/cuda${ARCH:+-$ARCH}:${CUDA}-base-ubuntu${UBUNTU_VERSION} as base']
microsoft/tensorflow-directml,latest,/tensorflow/tools/dockerfiles/partials/ubuntu/devel-nvidia.partial.Dockerfile,SHELL,1,"['[""/bin/bash"", ""-c""]']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/dockerfiles/partials/ubuntu/devel-nvidia.partial.Dockerfile,RUN,4,"[""apt-get update && apt-get install -y --no-install-recommends         build-essential         cuda-command-line-tools-${CUDA/./-}         cuda-cublas-dev-${CUDA/./-}         cuda-cudart-dev-${CUDA/./-}         cuda-cufft-dev-${CUDA/./-}         cuda-curand-dev-${CUDA/./-}         cuda-cusolver-dev-${CUDA/./-}         cuda-cusparse-dev-${CUDA/./-}         libcudnn7=${CUDNN}+cuda${CUDA}         libcudnn7-dev=${CUDNN}+cuda${CUDA}         libcurl3-dev         libfreetype6-dev         libhdf5-serial-dev         libzmq3-dev         pkg-config         rsync         software-properties-common         unzip         zip         zlib1g-dev         wget         git         &&     find /usr/local/cuda-${CUDA}/lib64/ -type f -name 'lib*_static.a' -not -name 'libcudart_static.a' -delete &&     rm /usr/lib/${LIB_DIR_PREFIX}-linux-gnu/libcudnn_static_v7.a"", '[[ ""${ARCH}"" = ""ppc64le"" ]] || { apt-get update &&         apt-get install -y --no-install-recommends libnvinfer5=5.1.5-1+cuda${CUDA}         libnvinfer-dev=5.1.5-1+cuda${CUDA}         && apt-get clean         && rm -rf /var/lib/apt/lists/*; }', 'test ""${CHECKOUT_TF_SRC}"" -eq 1 && git clone https://github.com/tensorflow/tensorflow.git /tensorflow_src || true', 'ln -s /usr/local/cuda/lib64/stubs/libcuda.so /usr/local/cuda/lib64/stubs/libcuda.so.1     && echo ""/usr/local/cuda/lib64/stubs"" > /etc/ld.so.conf.d/z-cuda-stubs.conf     && ldconfig']"
microsoft/tensorflow-directml,latest,/tensorflow/tools/dockerfiles/partials/ubuntu/devel-nvidia.partial.Dockerfile,ENV,7,"['CI_BUILD_PYTHON python', 'LD_LIBRARY_PATH /usr/local/cuda/extras/CUPTI/lib64:/usr/local/cuda/lib64:$LD_LIBRARY_PATH', 'TF_NEED_CUDA 1', 'TF_NEED_TENSORRT 1', 'TF_CUDA_COMPUTE_CAPABILITIES=3.5,5.2,6.0,6.1,7.0', 'TF_CUDA_VERSION=${CUDA}', 'TF_CUDNN_VERSION=${CUDNN_MAJOR_VERSION}']"
microsoft/tensorflow-directml,latest,/tensorflow/lite/experimental/micro/testing/Dockerfile.bluepill,FROM,1,['antmicro/renode:latest']
microsoft/tensorflow-directml,latest,/tensorflow/lite/experimental/micro/testing/Dockerfile.bluepill,LABEL,1,"['maintainer=""Pete Warden <petewarden@google.com>""']"
microsoft/tensorflow-directml,latest,/tensorflow/lite/experimental/micro/testing/Dockerfile.riscv,FROM,1,['antmicro/renode:latest']
microsoft/tensorflow-directml,latest,/tensorflow/lite/experimental/micro/testing/Dockerfile.riscv,LABEL,1,"['maintainer=""Pete Warden <petewarden@google.com>""']"
microsoft/tensorflow-directml,latest,/tensorflow/lite/experimental/micro/testing/Dockerfile.riscv,RUN,2,"['apt-get update', 'apt-get install -y curl git unzip make g++']"
microsoft/tensorflow-directml,latest,/tensorflow/lite/tools/pip_package/Dockerfile.debian,ARG,1,['VERSION']
microsoft/tensorflow-directml,latest,/tensorflow/lite/tools/pip_package/Dockerfile.debian,FROM,1,['debian:${VERSION}']
microsoft/tensorflow-directml,latest,/tensorflow/lite/tools/pip_package/Dockerfile.debian,RUN,3,"['dpkg --add-architecture armhf', 'dpkg --add-architecture arm64', 'apt-get update && apt-get install -y   python   python-setuptools   python-wheel   python-numpy   libpython-dev   libpython-dev:armhf   libpython-dev:arm64   python3   python3-setuptools   python3-wheel   python3-numpy   libpython3-dev   libpython3-dev:armhf   libpython3-dev:arm64   crossbuild-essential-armhf   crossbuild-essential-arm64   zlib1g-dev    zlib1g-dev:armhf   zlib1g-dev:arm64   swig   curl   git']"
microsoft/tensorflow-directml,latest,/tensorflow/lite/tools/pip_package/Dockerfile.ubuntu,ARG,1,['VERSION']
microsoft/tensorflow-directml,latest,/tensorflow/lite/tools/pip_package/Dockerfile.ubuntu,FROM,1,['ubuntu:${VERSION}']
microsoft/tensorflow-directml,latest,/tensorflow/lite/tools/pip_package/Dockerfile.ubuntu,COPY,1,['update_sources.sh /']
microsoft/tensorflow-directml,latest,/tensorflow/lite/tools/pip_package/Dockerfile.ubuntu,RUN,4,"['/update_sources.sh', 'dpkg --add-architecture armhf', 'dpkg --add-architecture arm64', 'apt-get update && apt-get install -y   python   python-setuptools   python-wheel   python-numpy   libpython-dev   libpython-dev:armhf   libpython-dev:arm64   python3   python3-setuptools   python3-wheel   python3-numpy   libpython3-dev   libpython3-dev:armhf   libpython3-dev:arm64   crossbuild-essential-armhf   crossbuild-essential-arm64   zlib1g-dev    zlib1g-dev:armhf   zlib1g-dev:arm64   swig   curl   git']"
microsoft/tensorflow-directml,latest,/tensorflow/contrib/makefile/Dockerfile,FROM,1,['ubuntu:16.04']
microsoft/tensorflow-directml,latest,/tensorflow/contrib/makefile/Dockerfile,LABEL,1,"['maintainer=""Gunhan Gulsoy <gunan@google.com>""']"
microsoft/tensorflow-directml,latest,/tensorflow/contrib/makefile/Dockerfile,RUN,2,"['apt-get update', 'apt-get install -y     autoconf     automake     curl     g++     git     libtool     make     python     unzip     wget     zlib1g-dev']"
KevinMenden/scaden,latest,/Dockerfile,ARG,2,"['BASE_IMAGE', 'GPU']"
KevinMenden/scaden,latest,/Dockerfile,FROM,1,['${BASE_IMAGE}']
KevinMenden/scaden,latest,/Dockerfile,RUN,5,"['apt-get update && apt-get upgrade -y', 'apt-get install python3 -y', 'apt-get install python3-pip -y', 'pip3 install scaden', 'if [ ""$GPU"" = ""GPU"" ]; then     pip3 install tensorflow-gpu;     fi']"
learningOrchestra/learningOrchestra,latest,/microservices/builder_image/Dockerfile,FROM,1,['spark_task']
learningOrchestra/learningOrchestra,latest,/microservices/builder_image/Dockerfile,WORKDIR,1,['/usr/src/builder']
learningOrchestra/learningOrchestra,latest,/microservices/builder_image/Dockerfile,COPY,1,['. /usr/src/builder']
learningOrchestra/learningOrchestra,latest,/microservices/builder_image/Dockerfile,RUN,1,['pip install -r requirements.txt']
learningOrchestra/learningOrchestra,latest,/microservices/builder_image/Dockerfile,ENV,6,"['BUILDER_HOST_NAME ""builder""', 'BUILDER_HOST_PORT 5002', 'BUILDER_HOST_IP ""0.0.0.0""', 'SPARKMASTER_HOST ""sparkmaster""', 'SPARKMASTER_PORT 7077', 'SPARK_DRIVER_PORT 41100']"
learningOrchestra/learningOrchestra,latest,/microservices/builder_image/Dockerfile,CMD,1,"['[""python"", ""server.py""]']"
learningOrchestra/learningOrchestra,latest,/microservices/histogram_image/Dockerfile,FROM,1,['python:3.6-slim']
learningOrchestra/learningOrchestra,latest,/microservices/histogram_image/Dockerfile,WORKDIR,1,['/usr/src/histogram']
learningOrchestra/learningOrchestra,latest,/microservices/histogram_image/Dockerfile,COPY,1,['. /usr/src/histogram']
learningOrchestra/learningOrchestra,latest,/microservices/histogram_image/Dockerfile,RUN,1,['pip install -r requirements.txt']
learningOrchestra/learningOrchestra,latest,/microservices/histogram_image/Dockerfile,ENV,2,"['HISTOGRAM_HOST ""0.0.0.0""', 'HISTOGRAM_PORT 5004']"
learningOrchestra/learningOrchestra,latest,/microservices/histogram_image/Dockerfile,CMD,1,"['[""python"", ""server.py""]']"
learningOrchestra/learningOrchestra,latest,/microservices/model_image/Dockerfile,FROM,1,['python:3.7-slim']
learningOrchestra/learningOrchestra,latest,/microservices/model_image/Dockerfile,WORKDIR,1,['/usr/src/model']
learningOrchestra/learningOrchestra,latest,/microservices/model_image/Dockerfile,COPY,1,['. /usr/src/model']
learningOrchestra/learningOrchestra,latest,/microservices/model_image/Dockerfile,RUN,1,['pip install -r requirements.txt']
learningOrchestra/learningOrchestra,latest,/microservices/model_image/Dockerfile,ENV,7,"['DEFAULT_MODEL_HOST_IP ""0.0.0.0""', 'DEFAULT_MODEL_HOST_PORT 5007', 'EXPLORE_VOLUME_PATH ""/explore""', 'TRANSFORM_VOLUME_PATH ""/transform""', 'BINARY_VOLUME_PATH ""/binaries""', 'MODELS_VOLUME_PATH ""/models""', 'CODE_EXECUTOR_VOLUME_PATH ""/code_executions""']"
learningOrchestra/learningOrchestra,latest,/microservices/model_image/Dockerfile,CMD,1,"['[""python"", ""server.py""]']"
learningOrchestra/learningOrchestra,latest,/microservices/spark_image/Dockerfile,FROM,1,['phusion/baseimage:18.04-1.0.0']
learningOrchestra/learningOrchestra,latest,/microservices/spark_image/Dockerfile,ENV,12,"['SPARK_VERSION 2.4.7', 'SPARK_INSTALL /usr/local', 'SPARK_HOME $SPARK_INSTALL/spark', 'SPARK_ROLE master', 'HADOOP_VERSION 2.7', 'SPARK_MASTER_PORT 7077', 'SPARK_WORKER_PORT 41352', 'SPARK_MASTER_HOST ""0.0.0.0""', 'SPARK_WORKER_MEMORY 1g', 'PYSPARK_PYTHON python3', 'DOCKERIZE_VERSION v0.2.0', 'PYSPARK_DRIVER_PYTHON python3']"
learningOrchestra/learningOrchestra,latest,/microservices/spark_image/Dockerfile,RUN,5,"['apt-get update &&     apt-get install --no-install-recommends -y openjdk-8-jdk autossh python3-pip &&     apt-get clean &&     apt-get autoremove &&     rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*', 'curl -L -O https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz &&     tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz &&     rm -rf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz', 'curl -s http://mirror.synyx.de/apache/spark/spark-$SPARK_VERSION/spark-$SPARK_VERSION-bin-hadoop$HADOOP_VERSION.tgz | tar -xz -C $SPARK_INSTALL &&     cd $SPARK_INSTALL && ln -s spark-$SPARK_VERSION-bin-hadoop$HADOOP_VERSION spark', 'mkdir /etc/service/spark', 'chmod +x /etc/service/**/*']"
learningOrchestra/learningOrchestra,latest,/microservices/spark_image/Dockerfile,WORKDIR,1,['$SPARK_HOME']
learningOrchestra/learningOrchestra,latest,/microservices/spark_image/Dockerfile,ADD,1,['script/spark.sh /etc/service/spark/run']
learningOrchestra/learningOrchestra,latest,/microservices/spark_image/Dockerfile,EXPOSE,1,['4040 6066 7077 7078 8080 8081 8888 41352']
learningOrchestra/learningOrchestra,latest,/microservices/spark_image/Dockerfile,VOLUME,1,"['[""$SPARK_HOME/logs""]']"
learningOrchestra/learningOrchestra,latest,/microservices/spark_image/Dockerfile,CMD,1,"['[""/sbin/my_init""]']"
learningOrchestra/learningOrchestra,latest,/microservices/projection_image/Dockerfile,FROM,1,['spark_task']
learningOrchestra/learningOrchestra,latest,/microservices/projection_image/Dockerfile,WORKDIR,1,['/usr/src/projection']
learningOrchestra/learningOrchestra,latest,/microservices/projection_image/Dockerfile,COPY,1,['. /usr/src/projection']
learningOrchestra/learningOrchestra,latest,/microservices/projection_image/Dockerfile,RUN,1,['pip install -r requirements.txt']
learningOrchestra/learningOrchestra,latest,/microservices/projection_image/Dockerfile,ENV,6,"['PROJECTION_HOST_NAME ""projection""', 'PROJECTION_HOST_PORT 5001', 'PROJECTION_HOST_IP ""0.0.0.0""', 'SPARKMASTER_HOST ""sparkmaster""', 'SPARKMASTER_PORT 7077', 'SPARK_DRIVER_PORT 41000']"
learningOrchestra/learningOrchestra,latest,/microservices/projection_image/Dockerfile,CMD,1,"['[""python"", ""server.py""]']"
learningOrchestra/learningOrchestra,latest,/microservices/database_api_image/Dockerfile,FROM,1,['python:3.7-slim']
learningOrchestra/learningOrchestra,latest,/microservices/database_api_image/Dockerfile,WORKDIR,1,['/usr/src/database_api']
learningOrchestra/learningOrchestra,latest,/microservices/database_api_image/Dockerfile,COPY,1,['. /usr/src/database_api']
learningOrchestra/learningOrchestra,latest,/microservices/database_api_image/Dockerfile,RUN,1,['pip install -r requirements.txt']
learningOrchestra/learningOrchestra,latest,/microservices/database_api_image/Dockerfile,ENV,3,"['DATABASE_API_HOST ""0.0.0.0""', 'DATABASE_API_PORT 5000', 'DATASET_VOLUME_PATH ""/datasets""']"
learningOrchestra/learningOrchestra,latest,/microservices/database_api_image/Dockerfile,CMD,1,"['[""python"", ""server.py""]']"
learningOrchestra/learningOrchestra,latest,/microservices/data_type_handler_image/Dockerfile,FROM,1,['python:3.6-slim']
learningOrchestra/learningOrchestra,latest,/microservices/data_type_handler_image/Dockerfile,WORKDIR,1,['/usr/src/data_type_handler']
learningOrchestra/learningOrchestra,latest,/microservices/data_type_handler_image/Dockerfile,COPY,1,['. /usr/src/data_type_handler']
learningOrchestra/learningOrchestra,latest,/microservices/data_type_handler_image/Dockerfile,RUN,1,['pip install -r requirements.txt']
learningOrchestra/learningOrchestra,latest,/microservices/data_type_handler_image/Dockerfile,ENV,2,"['DATA_TYPE_HANDLER_HOST ""0.0.0.0""', 'DATA_TYPE_HANDLER_PORT 5003']"
learningOrchestra/learningOrchestra,latest,/microservices/data_type_handler_image/Dockerfile,CMD,1,"['[""python"", ""server.py""]']"
learningOrchestra/learningOrchestra,latest,/microservices/code_executor_image/Dockerfile,FROM,1,['python:3.7-slim']
learningOrchestra/learningOrchestra,latest,/microservices/code_executor_image/Dockerfile,WORKDIR,1,['/usr/src/code_executor']
learningOrchestra/learningOrchestra,latest,/microservices/code_executor_image/Dockerfile,COPY,1,['. /usr/src/code_executor']
learningOrchestra/learningOrchestra,latest,/microservices/code_executor_image/Dockerfile,RUN,1,['pip install -r requirements.txt']
learningOrchestra/learningOrchestra,latest,/microservices/code_executor_image/Dockerfile,ENV,8,"['MICROSERVICE_IP ""0.0.0.0""', 'MICROSERVICE_PORT 5009', 'EXPLORE_VOLUME_PATH ""/explore""', 'TRANSFORM_VOLUME_PATH ""/transform""', 'BINARY_VOLUME_PATH ""/binaries""', 'MODELS_VOLUME_PATH ""/models""', 'CODE_EXECUTOR_VOLUME_PATH ""/code_executions""', 'DATASET_VOLUME_PATH ""/datasets""']"
learningOrchestra/learningOrchestra,latest,/microservices/code_executor_image/Dockerfile,CMD,1,"['[""python"", ""server.py""]']"
learningOrchestra/learningOrchestra,latest,/microservices/database_executor_image/Dockerfile,FROM,1,['python:3.7-slim']
learningOrchestra/learningOrchestra,latest,/microservices/database_executor_image/Dockerfile,WORKDIR,1,['/usr/src/database_executor']
learningOrchestra/learningOrchestra,latest,/microservices/database_executor_image/Dockerfile,COPY,1,['. /usr/src/database_executor']
learningOrchestra/learningOrchestra,latest,/microservices/database_executor_image/Dockerfile,RUN,1,['pip install -r requirements.txt']
learningOrchestra/learningOrchestra,latest,/microservices/database_executor_image/Dockerfile,ENV,7,"['MICROSERVICE_IP ""0.0.0.0""', 'MICROSERVICE_PORT 5006', 'EXPLORE_VOLUME_PATH ""/explore""', 'TRANSFORM_VOLUME_PATH ""/transform""', 'BINARY_VOLUME_PATH ""/binaries""', 'MODELS_VOLUME_PATH ""/models""', 'CODE_EXECUTOR_VOLUME_PATH ""/code_executions""']"
learningOrchestra/learningOrchestra,latest,/microservices/database_executor_image/Dockerfile,CMD,1,"['[""python"", ""server.py""]']"
learningOrchestra/learningOrchestra,latest,/microservices/binary_executor_image/Dockerfile,FROM,1,['python:3.7-slim']
learningOrchestra/learningOrchestra,latest,/microservices/binary_executor_image/Dockerfile,WORKDIR,1,['/usr/src/binary_executor']
learningOrchestra/learningOrchestra,latest,/microservices/binary_executor_image/Dockerfile,COPY,1,['. /usr/src/binary_executor']
learningOrchestra/learningOrchestra,latest,/microservices/binary_executor_image/Dockerfile,RUN,1,['pip install -r requirements.txt']
learningOrchestra/learningOrchestra,latest,/microservices/binary_executor_image/Dockerfile,ENV,6,"['MICROSERVICE_IP ""0.0.0.0""', 'MICROSERVICE_PORT 5008', 'BINARY_VOLUME_PATH ""/binaries""', 'MODELS_VOLUME_PATH ""/models""', 'TRANSFORM_VOLUME_PATH ""/transform""', 'CODE_EXECUTOR_VOLUME_PATH ""/code_executions""']"
learningOrchestra/learningOrchestra,latest,/microservices/binary_executor_image/Dockerfile,CMD,1,"['[""python"", ""server.py""]']"
learningOrchestra/learningOrchestra,latest,/microservices/spark_task_image/Dockerfile,FROM,1,['python:3.6']
learningOrchestra/learningOrchestra,latest,/microservices/spark_task_image/Dockerfile,RUN,7,"['apt-get update &&     apt-get install --no-install-recommends -y apt-transport-https ca-certificates wget dirmngr gnupg software-properties-common', 'wget -qO - https://adoptopenjdk.jfrog.io/adoptopenjdk/api/gpg/key/public | apt-key add -', 'add-apt-repository --yes https://adoptopenjdk.jfrog.io/adoptopenjdk/deb/', 'apt-get update &&     apt-get install --no-install-recommends -y adoptopenjdk-8-hotspot', 'curl -s http://mirror.synyx.de/apache/spark/spark-$SPARK_VERSION/spark-$SPARK_VERSION-bin-hadoop$HADOOP_VERSION.tgz | tar -xz -C $SPARK_INSTALL &&     cd $SPARK_INSTALL && ln -s spark-$SPARK_VERSION-bin-hadoop$HADOOP_VERSION spark', 'pip install pyspark==$SPARK_VERSION', 'apt-get autoremove &&     apt-get clean &&     rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*']"
learningOrchestra/learningOrchestra,latest,/microservices/spark_task_image/Dockerfile,ENV,6,"['SPARK_VERSION 2.4.7', 'SPARK_INSTALL /usr/local', 'SPARK_HOME $SPARK_INSTALL/spark', 'HADOOP_VERSION 2.7', 'PYSPARK_PYTHON python3', 'PYSPARK_DRIVER_PYTHON python3']"
pyronear/pyro-vision,latest,/Dockerfile,FROM,1,['python:3.8.1-slim']
pyronear/pyro-vision,latest,/Dockerfile,ENV,2,"['PYTHONUNBUFFERED 1', 'PYTHONDONTWRITEBYTECODE 1']"
pyronear/pyro-vision,latest,/Dockerfile,COPY,4,"['./requirements.txt /tmp/requirements.txt', './README.md /tmp/README.md', './setup.py /tmp/setup.py', './pyrovision /tmp/pyrovision']"
pyronear/pyro-vision,latest,/Dockerfile,RUN,1,['pip install --upgrade pip setuptools wheel     && pip install -e /tmp/.     && pip cache purge     && apt-get autoremove -y     && rm -rf /var/lib/apt/lists/*     && rm -rf /root/.cache/pip']
PINTO0309/openvino2tensorflow,latest,/Dockerfile,FROM,1,['nvidia/cuda:11.4.2-cudnn8-devel-ubuntu20.04']
PINTO0309/openvino2tensorflow,latest,/Dockerfile,ENV,2,"['DEBIAN_FRONTEND=noninteractive', 'USERNAME=user']"
PINTO0309/openvino2tensorflow,latest,/Dockerfile,ARG,8,"['OSVER=ubuntu2004', 'TENSORFLOWVER=2.8.0rc0', 'CPVER=cp38', 'OPENVINOVER=2021.4.582', 'OPENVINOROOTDIR=/opt/intel/openvino_2021', 'TENSORRTVER=cuda11.4-trt8.2.2.1-ga-20211214', 'APPVER', 'WKDIR=/home/user']"
PINTO0309/openvino2tensorflow,latest,/Dockerfile,RUN,17,"['echo ""dash dash/sh boolean false"" | debconf-set-selections     && dpkg-reconfigure -p low dash', ""apt-get update && apt-get install -y         automake autoconf libpng-dev nano python3-pip         curl zip unzip libtool swig zlib1g-dev pkg-config         python3-mock libpython3-dev libpython3-all-dev         g++ gcc cmake make pciutils cpio gosu wget         libgtk-3-dev libxtst-dev sudo apt-transport-https         build-essential gnupg git xz-utils vim libyaml-cpp-dev         libva-drm2 libva-x11-2 vainfo libva-wayland2 libva-glx2         libva-dev libdrm-dev xorg xorg-dev protobuf-compiler         openbox libx11-dev libgl1-mesa-glx libgl1-mesa-dev         libtbb2 libtbb-dev libopenblas-dev libopenmpi-dev     && sed -i 's/# set linenumbers/set linenumbers/g' /etc/nanorc     && apt clean     && rm -rf /var/lib/apt/lists/*"", 'ln -s /usr/bin/python3 /usr/bin/python', 'pip3 install --upgrade pip     && pip install --upgrade numpy==1.19.5     && pip install --upgrade tensorflowjs     && pip install --upgrade coremltools     && pip install --upgrade paddlepaddle     && pip install --upgrade lap     && pip install --upgrade pycocotools     && pip install --upgrade scipy     && pip install --upgrade paddle2onnx     && pip install --upgrade onnx     && pip install --upgrade onnxruntime     && pip install --upgrade onnx-simplifier     && pip install --upgrade onnxmltools     && pip install --upgrade onnxconverter-common     && pip install --upgrade tf2onnx     && pip install --upgrade onnx-tf     && pip install --upgrade tensorflow-datasets     && pip install --upgrade openvino2tensorflow     && pip install --upgrade tflite2tensorflow     && pip install --upgrade gdown     && pip install --upgrade PyYAML     && pip install --upgrade matplotlib     && pip install --upgrade tf_slim     && pip install --upgrade pandas     && pip install --upgrade numexpr     && pip install --upgrade onnx2json     && pip install --upgrade json2onnx     && python3 -m pip install onnx_graphsurgeon         --index-url https://pypi.ngc.nvidia.com     && pip install torch==1.10.1+cu113 torchvision==0.11.2+cu113 torchaudio==0.10.1+cu113         -f https://download.pytorch.org/whl/cu113/torch_stable.html     && pip install pycuda==2021.1     && pip install scikit-image     && ldconfig     && pip cache purge     && apt clean     && rm -rf /var/lib/apt/lists/*', 'wget https://github.com/PINTO0309/openvino2tensorflow/releases/download/${APPVER}/sclblonnx-0.1.9_nvc-py3-none-any.whl     && pip3 install sclblonnx-0.1.9_nvc-py3-none-any.whl     && rm sclblonnx-0.1.9_nvc-py3-none-any.whl     && apt clean     && rm -rf /var/lib/apt/lists/*', 'wget https://github.com/PINTO0309/openvino2tensorflow/releases/download/${APPVER}/tflite_runtime-${TENSORFLOWVER}-${CPVER}-none-linux_x86_64.whl     && chmod +x tflite_runtime-${TENSORFLOWVER}-${CPVER}-none-linux_x86_64.whl     && pip3 install --force-reinstall tflite_runtime-${TENSORFLOWVER}-${CPVER}-none-linux_x86_64.whl     && rm tflite_runtime-${TENSORFLOWVER}-${CPVER}-none-linux_x86_64.whl     && wget https://github.com/PINTO0309/openvino2tensorflow/releases/download/${APPVER}/flatc.tar.gz     && tar -zxvf flatc.tar.gz     && chmod +x flatc     && rm flatc.tar.gz     && wget https://github.com/PINTO0309/tflite2tensorflow/raw/main/schema/schema.fbs     && curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -     && echo ""deb https://packages.cloud.google.com/apt coral-edgetpu-stable main"" | tee /etc/apt/sources.list.d/coral-edgetpu.list     && apt-get update     && apt-get install edgetpu-compiler     && pip cache purge     && apt clean     && rm -rf /var/lib/apt/lists/*', 'wget https://github.com/PINTO0309/openvino2tensorflow/releases/download/${APPVER}/l_openvino_toolkit_p_${OPENVINOVER}.tgz     && tar xf l_openvino_toolkit_p_${OPENVINOVER}.tgz     && rm l_openvino_toolkit_p_${OPENVINOVER}.tgz     && l_openvino_toolkit_p_${OPENVINOVER}/install_openvino_dependencies.sh -y     && sed -i \'s/decline/accept/g\' l_openvino_toolkit_p_${OPENVINOVER}/silent.cfg     && l_openvino_toolkit_p_${OPENVINOVER}/install.sh --silent l_openvino_toolkit_p_${OPENVINOVER}/silent.cfg     && source ${OPENVINOROOTDIR}/bin/setupvars.sh     && ${INTEL_OPENVINO_DIR}/install_dependencies/install_openvino_dependencies.sh     && sed -i \'s/sudo -E //g\' ${INTEL_OPENVINO_DIR}/deployment_tools/model_optimizer/install_prerequisites/install_prerequisites.sh     && sed -i \'s/tensorflow/#tensorflow/g\' ${INTEL_OPENVINO_DIR}/deployment_tools/model_optimizer/requirements.txt     && sed -i \'s/numpy/#numpy/g\' ${INTEL_OPENVINO_DIR}/deployment_tools/model_optimizer/requirements.txt     && sed -i \'s/onnx/#onnx/g\' ${INTEL_OPENVINO_DIR}/deployment_tools/model_optimizer/requirements.txt     && ${INTEL_OPENVINO_DIR}/deployment_tools/model_optimizer/install_prerequisites/install_prerequisites.sh     && rm -rf l_openvino_toolkit_p_${OPENVINOVER}     && echo ""source ${OPENVINOROOTDIR}/bin/setupvars.sh"" >> .bashrc     && echo ""${OPENVINOROOTDIR}/deployment_tools/ngraph/lib/"" >> /etc/ld.so.conf     && echo ""${OPENVINOROOTDIR}/deployment_tools/inference_engine/lib/intel64/"" >> /etc/ld.so.conf     && pip cache purge     && apt clean     && rm -rf /var/lib/apt/lists/*', 'wget https://github.com/PINTO0309/openvino2tensorflow/releases/download/${APPVER}/nv-tensorrt-repo-${OSVER}-${TENSORRTVER}_1-1_amd64.deb     && dpkg -i nv-tensorrt-repo-${OSVER}-${TENSORRTVER}_1-1_amd64.deb     && apt-key add /var/nv-tensorrt-repo-${OSVER}-${TENSORRTVER}/7fa2af80.pub     && apt-get update     && apt-get install -y         tensorrt uff-converter-tf graphsurgeon-tf         python3-libnvinfer-dev onnx-graphsurgeon     && rm nv-tensorrt-repo-${OSVER}-${TENSORRTVER}_1-1_amd64.deb     && cd /usr/src/tensorrt/samples/trtexec     && make     && apt clean     && rm -rf /var/lib/apt/lists/*', 'wget https://github.com/PINTO0309/openvino2tensorflow/releases/download/${APPVER}/tensorflow-${TENSORFLOWVER}-${CPVER}-none-linux_x86_64.whl     && pip3 install --force-reinstall tensorflow-${TENSORFLOWVER}-${CPVER}-none-linux_x86_64.whl     && rm tensorflow-${TENSORFLOWVER}-${CPVER}-none-linux_x86_64.whl     && pip cache purge     && apt clean     && rm -rf /var/lib/apt/lists/*', 'git clone --recursive https://github.com/onnx/onnx-tensorrt     && cd onnx-tensorrt     && git checkout 1f041ce6d7b30e9bce0aacb2243309edffc8fb3c     && mkdir build && cd build     && cmake .. -DTENSORRT_ROOT=/usr/src/tensorrt     && make -j$(nproc) && make install', 'git clone https://github.com/NVIDIA-AI-IOT/torch2trt     && cd torch2trt     && git checkout 0400b38123d01cc845364870bdf0a0044ea2b3b2     && wget https://github.com/NVIDIA-AI-IOT/torch2trt/commit/8b9fb46ddbe99c2ddf3f1ed148c97435cbeb8fd3.patch     && git apply 8b9fb46ddbe99c2ddf3f1ed148c97435cbeb8fd3.patch     && python3 setup.py install', 'mkdir sample_npy     && wget -O sample_npy/calibration_data_img_sample.npy https://github.com/PINTO0309/openvino2tensorflow/releases/download/${APPVER}/calibration_data_img_sample.npy', 'apt clean     && rm -rf /var/lib/apt/lists/*', 'echo ""root:root"" | chpasswd     && adduser --disabled-password --gecos """" ""${USERNAME}""     && echo ""${USERNAME}:${USERNAME}"" | chpasswd     && echo ""%${USERNAME}    ALL=(ALL)   NOPASSWD:    ALL"" >> /etc/sudoers.d/${USERNAME}     && chmod 0440 /etc/sudoers.d/${USERNAME}', 'sudo chown ${USERNAME}:${USERNAME} ${WKDIR}    && sudo chmod 777 ${WKDIR}/.bashrc', 'cd ${OPENVINOROOTDIR}/install_dependencies/     && yes | sudo -E ./install_NEO_OCL_driver.sh     && cd ${WKDIR}     && wget https://github.com/intel/compute-runtime/releases/download/21.29.20389/intel-gmmlib_21.2.1_amd64.deb     && wget https://github.com/intel/intel-graphics-compiler/releases/download/igc-1.0.7862/intel-igc-core_1.0.7862_amd64.deb     && wget https://github.com/intel/intel-graphics-compiler/releases/download/igc-1.0.7862/intel-igc-opencl_1.0.7862_amd64.deb     && wget https://github.com/intel/compute-runtime/releases/download/21.29.20389/intel-opencl_21.29.20389_amd64.deb     && wget https://github.com/intel/compute-runtime/releases/download/21.29.20389/intel-ocloc_21.29.20389_amd64.deb     && wget https://github.com/intel/compute-runtime/releases/download/21.29.20389/intel-level-zero-gpu_1.1.20389_amd64.deb     && sudo dpkg -i *.deb     && rm *.deb     && sudo apt clean     && sudo rm -rf /var/lib/apt/lists/*', 'echo \'GPU=$(python3 -c ""import torch;print(torch.cuda.is_available())"")\' >> ${HOME}/.bashrc     && echo \'if [ $GPU = ""True"" ]; then\' >> ${HOME}/.bashrc     && echo ""export PATH=${PATH}:/usr/src/tensorrt/bin:/onnx-tensorrt/build"" >> ${HOME}/.bashrc     && echo ""cd ${HOME}/onnx-tensorrt"" >> ${HOME}/.bashrc     && echo ""sudo python3 setup.py install"" >> ${HOME}/.bashrc     && echo ""fi"" >> ${HOME}/.bashrc     && echo ""cd ${WKDIR}"" >> ${HOME}/.bashrc     && echo ""cd ${HOME}/workdir"" >> ${HOME}/.bashrc']"
PINTO0309/openvino2tensorflow,latest,/Dockerfile,COPY,1,['bashrc ${WKDIR}/.bashrc']
PINTO0309/openvino2tensorflow,latest,/Dockerfile,WORKDIR,1,['${WKDIR}']
PINTO0309/openvino2tensorflow,latest,/Dockerfile,USER,1,['${USERNAME}']
datamachines/cuda_tensorflow_opencv,latest,/ubuntu18.04/Dockerfile,ARG,16,"['CTO_FROM', 'DEBIAN_FRONTEND=noninteractive', 'CTO_TF_PYTHON', 'CTO_CUDA_APT', 'CTO_TF_NUMPY=numpy', 'LATEST_BAZELISK=1.5.0', 'LATEST_BAZEL=3.4.1', 'CTO_TENSORFLOW_VERSION', 'CTO_TF_CUDNN=""no""', 'CTO_TF_OPT=""""', 'CTO_DNN_ARCH=""""', 'CTO_OPENCV_VERSION', 'CTO_NUMPROC=1', 'CTO_CUDA_BUILD', 'CTO_TF_KERAS', 'CTO_PYTORCH']"
datamachines/cuda_tensorflow_opencv,latest,/ubuntu18.04/Dockerfile,FROM,1,['${CTO_FROM}']
datamachines/cuda_tensorflow_opencv,latest,/ubuntu18.04/Dockerfile,RUN,20,"['apt-get update -y --fix-missing  && apt-get install -y --no-install-recommends     apt-utils     locales     wget     ca-certificates   && apt-get clean', 'localedef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8', 'apt-get install -y     software-properties-common   && add-apt-repository ppa:deadsnakes/ppa   && apt-get update -y --fix-missing   && apt-get install -y --no-install-recommends     python${CTO_TF_PYTHON}     python${CTO_TF_PYTHON}-dev     python${CTO_TF_PYTHON}-lib2to3     python${CTO_TF_PYTHON}-tk     python${CTO_TF_PYTHON}-venv     python${CTO_TF_PYTHON}-distutils   && update-alternatives --install /usr/bin/python3 python3 /usr/bin/python${CTO_TF_PYTHON} 0   && apt-get clean', 'wget -q -O /tmp/get-pip.py --no-check-certificate https://bootstrap.pypa.io/get-pip.py   && python3 /tmp/get-pip.py   && pip3 install -U pip   && rm /tmp/get-pip.py', 'apt-get install -y --no-install-recommends     build-essential     checkinstall     cmake     curl     g++     gcc     git     perl     pkg-config     protobuf-compiler     rsync     unzip     wget     zip     zlib1g-dev   && apt-get clean', 'ln -s $(which python3) /usr/local/bin/python', 'apt-get install -y --no-install-recommends       time ${CTO_CUDA_APT}   && apt-get clean', 'chmod +x /tmp/cupti_helper.sh   && /tmp/cupti_helper.sh   && rm /tmp/cupti_helper.sh', 'pip3 install -U   mock   ${CTO_TF_NUMPY}   setuptools   six   wheel   future   && pip3 install -U keras_applications --no-deps   && pip3 install -U keras_preprocessing --no-deps   && rm -rf /root/.cache/pip', 'curl -s -Lo /usr/local/bin/bazel https://github.com/bazelbuild/bazelisk/releases/download/v${LATEST_BAZELISK}/bazelisk-linux-amd64   && chmod +x /usr/local/bin/bazel   && mkdir -p /usr/local/src/tensorflow   && cd /usr/local/src   && wget -q --no-check-certificate -c https://github.com/tensorflow/tensorflow/archive/v${CTO_TENSORFLOW_VERSION}.tar.gz -O - | tar --strip-components=1 -xz -C /usr/local/src/tensorflow   && cd /usr/local/src/tensorflow   && fgrep _TF_MAX_BAZEL configure.py | grep \'=\' | perl -ne \'$lb=""\'${LATEST_BAZEL}\'"";$brv=$1 if (m%\\=\\s+.([\\d\\.]+).$+%); sub numit{@g=split(m%\\.%,$_[0]);return(1000000*$g[0]+1000*$g[1]+$g[2]);}; if (&numit($brv) > &numit($lb)) { print ""$lb"" } else {print ""$brv""};\' > .bazelversion   && bazel clean   && chmod +x /tmp/tf_build.sh   && time /tmp/tf_build.sh ${CTO_TF_CUDNN} ${CTO_TF_OPT}   && time ./bazel-bin/tensorflow/tools/pip_package/build_pip_package /tmp/tensorflow_pkg   && time pip3 install /tmp/tensorflow_pkg/tensorflow-*.whl   && rm -rf /usr/local/src/tensorflow /tmp/tensorflow_pkg /tmp/bazel_check.pl /tmp/tf_build.sh /tmp/hsperfdata_root /root/.cache/bazel /root/.cache/pip /root/.cache/bazelisk', 'python3 -c ""import tensorflow""', 'apt-get install -y --no-install-recommends     doxygen     file     gfortran     gnupg     gstreamer1.0-plugins-good     imagemagick     libatk-adaptor     libatlas-base-dev     libavcodec-dev     libavformat-dev     libavutil-dev     libboost-all-dev     libcanberra-gtk-module     libdc1394-22-dev     libeigen3-dev     libfaac-dev     libfreetype6-dev     libgflags-dev     libglew-dev     libglu1-mesa     libglu1-mesa-dev     libgoogle-glog-dev     libgphoto2-dev     libgstreamer1.0-dev     libgstreamer-plugins-bad1.0-0     libgstreamer-plugins-base1.0-dev     libgtk2.0-dev     libgtk-3-dev     libhdf5-dev     libhdf5-serial-dev     libjpeg-dev     liblapack-dev     libmp3lame-dev     libopenblas-dev     libopencore-amrnb-dev     libopencore-amrwb-dev     libopenjp2-7-dev     libopenjp2-tools     libpng-dev     libpostproc-dev     libprotobuf-dev     libswscale-dev     libtbb2     libtbb-dev     libtheora-dev     libtiff5-dev     libv4l-dev     libvorbis-dev     libx264-dev     libxi-dev     libxine2-dev     libxmu-dev     libxvidcore-dev     libzmq3-dev     v4l-utils     x11-apps     x264     yasm   && apt-get clean', 'pip3 install -U   Pillow   lxml   && rm -rf /root/.cache/pip', 'mkdir -p /usr/local/src/opencv /usr/local/src/opencv_contrib   && cd /usr/local/src   && wget -q --no-check-certificate https://github.com/opencv/opencv/archive/${CTO_OPENCV_VERSION}.tar.gz -O - | tar --strip-components=1 -xz -C /usr/local/src/opencv   && wget -q --no-check-certificate https://github.com/opencv/opencv_contrib/archive/${CTO_OPENCV_VERSION}.tar.gz -O - | tar --strip-components=1 -xz -C /usr/local/src/opencv_contrib   && mkdir -p /usr/local/src/opencv/build   && cd /usr/local/src/opencv/build   && time cmake     -DBUILD_DOCS=OFF     -DBUILD_EXAMPLES=OFF     -DBUILD_PERF_TESTS=OFF     -DBUILD_TESTS=OFF     -DBUILD_opencv_python2=OFF     -DBUILD_opencv_python3=ON     -DCMAKE_BUILD_TYPE=Release     -DCMAKE_INSTALL_PREFIX=/usr/local/     -DCMAKE_INSTALL_TYPE=Release     -DENABLE_FAST_MATH=1     -DFORCE_VTK=ON     -DINSTALL_C_EXAMPLES=OFF     -DINSTALL_PYTHON_EXAMPLES=OFF     -DOPENCV_EXTRA_MODULES_PATH=/usr/local/src/opencv_contrib/modules     -DOPENCV_GENERATE_PKGCONFIG=ON     -DOPENCV_PC_FILE_NAME=opencv.pc     -DOPENCV_PYTHON3_INSTALL_PATH=/usr/lib/python3/dist-packages     -DWITH_CSTRIPES=ON     -DWITH_EIGEN=ON     -DWITH_GDAL=ON     -DWITH_GSTREAMER=ON     -DWITH_GSTREAMER_0_10=OFF     -DWITH_GTK=ON     -DWITH_IPP=ON     -DWITH_OPENCL=ON     -DWITH_OPENMP=ON     -DWITH_TBB=ON     -DWITH_V4L=ON     -DWITH_WEBP=ON     -DWITH_XINE=ON     ${CTO_CUDA_BUILD}     ..   && time make -j${CTO_NUMPROC} install   && sh -c \'echo ""/usr/local/lib"" >> /etc/ld.so.conf.d/opencv.conf\'   && ldconfig   && rm -rf /usr/local/src/opencv /usr/local/src/opencv_contrib', 'python3 -c ""import cv2""', 'pip3 install -U   autovizwidget   ipython   jupyter   matplotlib   moviepy   notebook   pandas   scikit-image   scikit-learn   && rm -rf /root/.cache/pip', 'pip3 install ${CTO_TF_KERAS} ${CTO_PYTORCH}   && rm -rf /root/.cache/pip', 'jupyter nbextension enable --py --sys-prefix widgetsnbextension', 'chmod +x /tmp/tf_info.sh   && touch /.within_container', 'mkdir /dmc']"
datamachines/cuda_tensorflow_opencv,latest,/ubuntu18.04/Dockerfile,ENV,1,['LANG en_US.utf8']
datamachines/cuda_tensorflow_opencv,latest,/ubuntu18.04/Dockerfile,COPY,3,"['tools/cupti_helper.sh /tmp/', 'tools/tf_build.sh /tmp/', 'tools/tf_info.sh /tmp/']"
datamachines/cuda_tensorflow_opencv,latest,/ubuntu18.04/Dockerfile,WORKDIR,1,['/dmc']
datamachines/cuda_tensorflow_opencv,latest,/ubuntu18.04/Dockerfile,CMD,1,['bash']
datamachines/cuda_tensorflow_opencv,latest,/ubuntu18.04/Dockerfile,LABEL,1,"['""Author""=""Data Machines Corp <help@datamachines.io>""']"
datamachines/cuda_tensorflow_opencv,latest,/ubuntu20.04/Dockerfile,ARG,16,"['CTO_FROM', 'DEBIAN_FRONTEND=noninteractive', 'CTO_CUDA_APT', 'CTO_CUDA11_APT_XTRA', 'CTO_TF_NUMPY=numpy', 'LATEST_BAZELISK=1.5.0', 'LATEST_BAZEL=3.4.1', 'CTO_TENSORFLOW_VERSION', 'CTO_TF_CUDNN=""no""', 'CTO_TF_OPT=""""', 'CTO_DNN_ARCH=""""', 'CTO_OPENCV_VERSION', 'CTO_NUMPROC=1', 'CTO_CUDA_BUILD', 'CTO_TF_KERAS', 'CTO_PYTORCH']"
datamachines/cuda_tensorflow_opencv,latest,/ubuntu20.04/Dockerfile,FROM,1,['${CTO_FROM}']
datamachines/cuda_tensorflow_opencv,latest,/ubuntu20.04/Dockerfile,RUN,19,"['apt-get update -y --fix-missing  && apt-get install -y     apt-utils     locales     wget     ca-certificates   && apt-get clean', 'localedef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8', 'apt-get install -y     build-essential     checkinstall     cmake     curl     g++     gcc     git     perl     pkg-config     protobuf-compiler     python3-dev     rsync     unzip     wget     zip     zlib1g-dev   && apt-get clean', 'wget -q -O /tmp/get-pip.py --no-check-certificate https://bootstrap.pypa.io/get-pip.py   && python3 /tmp/get-pip.py   && pip3 install -U pip   && rm /tmp/get-pip.py', 'ln -s $(which python3) /usr/local/bin/python', 'apt-get install -y --no-install-recommends ${CTO_CUDA11_APT_XTRA}       time ${CTO_CUDA_APT}   && apt-get clean', 'chmod +x /tmp/cupti_helper.sh   && /tmp/cupti_helper.sh   && rm /tmp/cupti_helper.sh', 'pip3 install -U   mock   ${CTO_TF_NUMPY}   setuptools   six   wheel   future   && pip3 install -U keras_applications --no-deps   && pip3 install -U keras_preprocessing --no-deps   && rm -rf /root/.cache/pip', 'curl -s -Lo /usr/local/bin/bazel https://github.com/bazelbuild/bazelisk/releases/download/v${LATEST_BAZELISK}/bazelisk-linux-amd64   && chmod +x /usr/local/bin/bazel   && mkdir -p /usr/local/src/tensorflow   && cd /usr/local/src   && wget -q --no-check-certificate -c https://github.com/tensorflow/tensorflow/archive/v${CTO_TENSORFLOW_VERSION}.tar.gz -O - | tar --strip-components=1 -xz -C /usr/local/src/tensorflow   && cd /usr/local/src/tensorflow   && fgrep _TF_MAX_BAZEL configure.py | grep \'=\' | perl -ne \'$lb=""\'${LATEST_BAZEL}\'"";$brv=$1 if (m%\\=\\s+.([\\d\\.]+).$+%); sub numit{@g=split(m%\\.%,$_[0]);return(1000000*$g[0]+1000*$g[1]+$g[2]);}; if (&numit($brv) > &numit($lb)) { print ""$lb"" } else {print ""$brv""};\' > .bazelversion   && bazel clean   && chmod +x /tmp/tf_build.sh   && time /tmp/tf_build.sh ${CTO_TF_CUDNN} ${CTO_TF_OPT}   && time ./bazel-bin/tensorflow/tools/pip_package/build_pip_package /tmp/tensorflow_pkg   && time pip3 install /tmp/tensorflow_pkg/tensorflow-*.whl   && rm -rf /usr/local/src/tensorflow /tmp/tensorflow_pkg /tmp/bazel_check.pl /tmp/tf_build.sh /tmp/hsperfdata_root /root/.cache/bazel /root/.cache/pip /root/.cache/bazelisk', 'python3 -c ""import tensorflow""', 'apt-get install -y     doxygen     file     gfortran     gnupg     gstreamer1.0-plugins-good     imagemagick     libatk-adaptor     libatlas-base-dev     libavcodec-dev     libavformat-dev     libavutil-dev     libboost-all-dev     libcanberra-gtk-module     libdc1394-22-dev     libeigen3-dev     libfaac-dev     libfreetype6-dev     libgflags-dev     libglew-dev     libglu1-mesa     libglu1-mesa-dev     libgoogle-glog-dev     libgphoto2-dev     libgstreamer1.0-dev     libgstreamer-plugins-bad1.0-0     libgstreamer-plugins-base1.0-dev     libgtk2.0-dev     libgtk-3-dev     libhdf5-dev     libhdf5-serial-dev     libjpeg-dev     liblapack-dev     libmp3lame-dev     libopenblas-dev     libopencore-amrnb-dev     libopencore-amrwb-dev     libopenjp2-7     libopenjp2-7-dev     libopenjp2-tools     libopenjpip-server     libpng-dev     libpostproc-dev     libprotobuf-dev     libswscale-dev     libtbb2     libtbb-dev     libtheora-dev     libtiff5-dev     libv4l-dev     libvorbis-dev     libx264-dev     libxi-dev     libxine2-dev     libxmu-dev     libxvidcore-dev     libzmq3-dev     v4l-utils     x11-apps     x264     yasm   && apt-get clean', 'pip3 install -U   Pillow   lxml   && rm -rf /root/.cache/pip', 'mkdir -p /usr/local/src/opencv /usr/local/src/opencv_contrib   && cd /usr/local/src   && wget -q --no-check-certificate https://github.com/opencv/opencv/archive/${CTO_OPENCV_VERSION}.tar.gz -O - | tar --strip-components=1 -xz -C /usr/local/src/opencv   && wget -q --no-check-certificate https://github.com/opencv/opencv_contrib/archive/${CTO_OPENCV_VERSION}.tar.gz -O - | tar --strip-components=1 -xz -C /usr/local/src/opencv_contrib   && mkdir -p /usr/local/src/opencv/build   && cd /usr/local/src/opencv/build   && time cmake     -DBUILD_DOCS=OFF     -DBUILD_EXAMPLES=OFF     -DBUILD_PERF_TESTS=OFF     -DBUILD_TESTS=OFF     -DBUILD_opencv_python2=OFF     -DBUILD_opencv_python3=ON     -DCMAKE_BUILD_TYPE=Release     -DCMAKE_INSTALL_PREFIX=/usr/local/     -DCMAKE_INSTALL_TYPE=Release     -DENABLE_FAST_MATH=1     -DFORCE_VTK=ON     -DINSTALL_C_EXAMPLES=OFF     -DINSTALL_PYTHON_EXAMPLES=OFF     -DOPENCV_EXTRA_MODULES_PATH=/usr/local/src/opencv_contrib/modules     -DOPENCV_GENERATE_PKGCONFIG=ON     -DOPENCV_PC_FILE_NAME=opencv.pc     -DOPENCV_PYTHON3_INSTALL_PATH=/usr/lib/python3/dist-packages     -DWITH_CSTRIPES=ON     -DWITH_EIGEN=ON     -DWITH_GDAL=ON     -DWITH_GSTREAMER=ON     -DWITH_GSTREAMER_0_10=OFF     -DWITH_GTK=ON     -DWITH_IPP=ON     -DWITH_OPENCL=ON     -DWITH_OPENMP=ON     -DWITH_TBB=ON     -DWITH_V4L=ON     -DWITH_WEBP=ON     -DWITH_XINE=ON     ${CTO_CUDA_BUILD}     ..   && time make -j${CTO_NUMPROC} install   && sh -c \'echo ""/usr/local/lib"" >> /etc/ld.so.conf.d/opencv.conf\'   && ldconfig   && rm -rf /usr/local/src/opencv /usr/local/src/opencv_contrib', 'python3 -c ""import cv2""', 'pip3 install -U   autovizwidget   ipython   jupyter   matplotlib   moviepy   notebook   pandas   scikit-image   scikit-learn   && rm -rf /root/.cache/pip', 'pip3 install ${CTO_TF_KERAS} ${CTO_PYTORCH}   && rm -rf /root/.cache/pip', 'jupyter nbextension enable --py --sys-prefix widgetsnbextension', 'chmod +x /tmp/tf_info.sh   && touch /.within_container', 'mkdir /dmc']"
datamachines/cuda_tensorflow_opencv,latest,/ubuntu20.04/Dockerfile,ENV,1,['LANG en_US.utf8']
datamachines/cuda_tensorflow_opencv,latest,/ubuntu20.04/Dockerfile,COPY,3,"['tools/cupti_helper.sh /tmp/', 'tools/tf_build.sh /tmp/', 'tools/tf_info.sh /tmp/']"
datamachines/cuda_tensorflow_opencv,latest,/ubuntu20.04/Dockerfile,WORKDIR,1,['/dmc']
datamachines/cuda_tensorflow_opencv,latest,/ubuntu20.04/Dockerfile,CMD,1,['bash']
datamachines/cuda_tensorflow_opencv,latest,/ubuntu20.04/Dockerfile,LABEL,1,"['""Author""=""Data Machines Corp <help@datamachines.io>""']"
datamachines/cuda_tensorflow_opencv,latest,/JetsonNano/Dockerfile,ARG,5,"['CTO_FROM', 'CTO_TF_KERAS', 'CTO_OPENCV_VERSION', 'CTO_NUMPROC=1', 'CTO_CUDA_BUILD']"
datamachines/cuda_tensorflow_opencv,latest,/JetsonNano/Dockerfile,FROM,1,['${CTO_FROM}']
datamachines/cuda_tensorflow_opencv,latest,/JetsonNano/Dockerfile,ENV,4,"['DEBIAN_FRONTEND noninteractive', 'LANG en_US.UTF-8', 'CFLAGS=""-I/usr/include/openjpeg-2.3 -I/usr/include/jxrlib""', 'LD_PRELOAD=/usr/lib/aarch64-linux-gnu/libgomp.so.1']"
datamachines/cuda_tensorflow_opencv,latest,/JetsonNano/Dockerfile,RUN,28,"['apt-get update -y   && apt-get install -y --no-install-recommends apt-utils   && apt-get install -y     autoconf     automake     checkinstall     cmake     curl     doxygen     file     git     imagemagick     libatk-adaptor     libatlas-base-dev     libavcodec-dev     libavformat-dev     libavutil-dev     libblosc-dev     libboost-all-dev     libbrotli-dev     libbz2-dev     libcanberra-gtk-module     libcharls-dev     libdc1394-22-dev     libeigen3-dev     libfaac-dev     libfreetype6-dev     libgflags-dev     libgif-dev     libglew-dev     libgoogle-glog-dev     libgphoto2-dev     libgstreamer-plugins-bad1.0-0     libgstreamer-plugins-base1.0-dev     libgstreamer1.0-dev     libgtk-3-dev     libgtk2.0-dev     libjpeg-dev     libjpeg-turbo8-dev     libjxr-dev     liblcms2-dev     liblz4-dev     liblzma-dev     libmp3lame-dev     libopenblas-base     libopenblas-dev     libopencore-amrnb-dev     libopencore-amrwb-dev     libopenjp2-7-dev     libopenjp2-tools     libopenmpi-dev     libpng-dev     libpostproc-dev     libprotobuf-dev     libpython3-dev     libsnappy-dev     libsox-dev     libsox-fmt-all     libswscale-dev     libtbb-dev     libtbb2     libtheora-dev     libtool     libv4l-dev     libvorbis-dev     libwebp-dev     libx264-dev     libxi-dev     libxine2-dev     libxmu-dev     libxvidcore-dev     libzmq3-dev     libzopfli-dev     libzstd-dev     pkg-config     protobuf-compiler     python-imaging-tk     python-lxml     python-pil     python3-tk     software-properties-common     time     unzip     v4l-utils     x11-apps     x264     yasm     zip', ""sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen     && dpkg-reconfigure locales     && update-locale LANG=en_US.UTF-8"", 'mkdir -p /usr/local/src/libtiff   && wget -q --no-check-certificate -c https://gitlab.com/libtiff/libtiff/-/archive/v4.2.0/libtiff-v4.2.0.tar.bz2 -O - | tar --strip-components=1 -xj -C /usr/local/src/libtiff   && cd /usr/local/src/libtiff   && ./autogen.sh   && ./configure   && make install   && rm -rf /usr/local/src/libtiff', 'cd /tmp   && git clone --depth=1 https://github.com/google/brunsli.git   && cd brunsli   && git submodule update --init --recursive   && cmake -DCMAKE_BUILD_TYPE=Release   && make install', 'wget -q -O /tmp/get-pip.py --no-check-certificate https://bootstrap.pypa.io/get-pip.py   && python3 /tmp/get-pip.py   && pip3 install -U pip', 'pip3 install -U testresources setuptools', 'pip3 install -U Cython', 'pip3 install -U pillow', 'pip3 install -U matplotlib', 'pip3 install -U PyWavelets', 'pip3 install -U kiwisolver', 'pip3 install -U imagecodecs', 'pip3 install -U scikit-image', 'pip3 install -U scikit-learn', 'pip3 install -U ipython', 'pip3 install -U notebook', 'pip3 install -U pandas', 'pip3 install -U moviepy', 'pip3 install -U autovizwidget', 'pip3 install -U jupyter', 'cd /tmp   && wget -q --no-check-certificate https://nvidia.box.com/shared/static/cs3xn3td6sfgtene6jdvsxlr366m2dhq.whl -O torch-1.7.0-cp36-cp36m-linux_aarch64.whl   && pip3 install torch-1.7.0-cp36-cp36m-linux_aarch64.whl   && rm -rf /root/.cache/pip torch-1.7.0-cp36-cp36m-linux_aarch64.whl', 'mkdir -p /usr/local/src/torchvision   && wget -q --no-check-certificate https://github.com/pytorch/vision/archive/v0.8.2.tar.gz -O - | tar --strip-components=1 -xz -C /usr/local/src/torchvision   && cd /usr/local/src/torchvision   && python3 setup.py install    && rm -rf /root/.cache/pip /usr/local/src/torchvision', 'mkdir -p /usr/local/src/torchaudio   && wget -q --no-check-certificate https://github.com/pytorch/audio/archive/v0.7.2.tar.gz -O - | tar --strip-components=1 -xz -C /usr/local/src/torchaudio   && cd /usr/local/src/torchaudio   && python3 setup.py install    && rm -rf /root/.cache/pip /usr/local/src/torchaudio', 'pip3 install ${CTO_TF_KERAS}   && rm -rf /root/.cache/pip', 'mkdir -p /usr/local/src/opencv /usr/local/src/opencv_contrib   && cd /usr/local/src   && wget -q --no-check-certificate https://github.com/opencv/opencv/archive/${CTO_OPENCV_VERSION}.tar.gz -O - | tar --strip-components=1 -xz -C /usr/local/src/opencv   && wget -q --no-check-certificate https://github.com/opencv/opencv_contrib/archive/${CTO_OPENCV_VERSION}.tar.gz -O - | tar --strip-components=1 -xz -C /usr/local/src/opencv_contrib   && mkdir -p /usr/local/src/opencv/build   && cd /usr/local/src/opencv/build   && time cmake     -DBUILD_DOCS=OFF     -DBUILD_EXAMPLES=OFF     -DBUILD_PERF_TESTS=OFF     -DBUILD_TESTS=OFF     -DBUILD_opencv_python2=OFF     -DBUILD_opencv_python3=ON     -DCMAKE_BUILD_TYPE=Release     -DCMAKE_INSTALL_PREFIX=/usr/local/     -DCMAKE_INSTALL_TYPE=Release     -DENABLE_FAST_MATH=1     -DFORCE_VTK=ON     -DINSTALL_C_EXAMPLES=OFF     -DINSTALL_PYTHON_EXAMPLES=OFF     -DOPENCV_ENABLE_NONFREE=OFF     -DOPENCV_EXTRA_MODULES_PATH=/usr/local/src/opencv_contrib/modules     -DOPENCV_GENERATE_PKGCONFIG=YES     -DWITH_CSTRIPES=ON     -DWITH_EIGEN=ON     -DWITH_GDAL=ON     -DWITH_GSTREAMER=ON     -DWITH_GSTREAMER_0_10=OFF     -DWITH_GTK=ON     -DWITH_IPP=OFF     -DWITH_OPENCL=ON     -DWITH_OPENMP=ON     -DWITH_TBB=ON     -DWITH_V4L=ON     -DWITH_WEBP=ON     -DWITH_XINE=ON     ${CTO_CUDA_BUILD}     ..   && make -j${CTO_NUMPROC} install   && sh -c \'echo ""/usr/local/lib"" >> /etc/ld.so.conf.d/opencv.conf\'   && ldconfig   && rm -rf /usr/local/src/opencv /usr/local/src/opencv_contrib', 'jupyter nbextension enable --py --sys-prefix widgetsnbextension', 'touch /.within_container', 'mkdir /dmc']"
datamachines/cuda_tensorflow_opencv,latest,/JetsonNano/Dockerfile,WORKDIR,1,['/dmc']
datamachines/cuda_tensorflow_opencv,latest,/JetsonNano/Dockerfile,CMD,1,['/bin/bash']
datamachines/cuda_tensorflow_opencv,latest,/JetsonNano/Dockerfile,LABEL,1,"['""Author""=""Data Machines Corp <help@datamachines.io>""']"
marco-willi/camera-trap-classifier,latest,/Dockerfile.cpu,FROM,1,['tensorflow/tensorflow:1.12.0-py3']
marco-willi/camera-trap-classifier,latest,/Dockerfile.cpu,RUN,2,"['apt-get --yes update && apt-get --yes install git', 'pip install git+git://github.com/marco-willi/camera-trap-classifier']"
marco-willi/camera-trap-classifier,latest,/Dockerfile.cpu,ENTRYPOINT,1,"['[""bash""]']"
marco-willi/camera-trap-classifier,latest,/Dockerfile.gpu,FROM,1,['tensorflow/tensorflow:1.12.0-gpu-py3']
marco-willi/camera-trap-classifier,latest,/Dockerfile.gpu,RUN,2,"['apt-get --yes update && apt-get --yes install git', 'pip install git+git://github.com/marco-willi/camera-trap-classifier']"
marco-willi/camera-trap-classifier,latest,/Dockerfile.gpu,ENTRYPOINT,1,"['[""bash""]']"
CogStack/MedCATtrainer,latest,/webapp/Dockerfile,FROM,1,['python:3.7']
CogStack/MedCATtrainer,latest,/webapp/Dockerfile,ADD,1,['. /home/']
CogStack/MedCATtrainer,latest,/webapp/Dockerfile,RUN,7,"['apt-get -y update &&     apt-get -y upgrade', 'apt-get install curl &&     curl -sL https://deb.nodesource.com/setup_16.x | bash - &&     apt-get install nodejs &&     npm install -g npm@latest', 'npm install && npm rebuild node-sass && npm run build', 'pip install pip --upgrade', 'pip install -r /home/requirements.txt', 'python -m spacy download en_core_web_md', 'chmod a+x /home/run.sh']"
CogStack/MedCATtrainer,latest,/webapp/Dockerfile,WORKDIR,2,"['/home/frontend', '/home/api']"
CogStack/MedCATtrainer,latest,/nginx/Dockerfile,FROM,1,['nginx']
CogStack/MedCATtrainer,latest,/nginx/Dockerfile,RUN,2,"['rm /etc/nginx/conf.d/default.conf', 'mkdir /etc/nginx/sites-enabled/']"
CogStack/MedCATtrainer,latest,/nginx/Dockerfile,ADD,2,"['nginx.conf /etc/nginx/nginx.conf', 'sites-enabled/ /etc/nginx/sites-enabled']"
Bluefog-Lib/bluefog,latest,/dockerfile.cpu,FROM,1,['ubuntu:18.04']
Bluefog-Lib/bluefog,latest,/dockerfile.cpu,ENV,3,"['PYTORCH_VERSION=1.4.0', 'TORCHVISION_VERSION=0.5.0', 'PYTHON_VERSION=${python}']"
Bluefog-Lib/bluefog,latest,/dockerfile.cpu,ARG,1,['python=3.7']
Bluefog-Lib/bluefog,latest,/dockerfile.cpu,SHELL,1,"['[""/bin/bash"", ""-cu""]']"
Bluefog-Lib/bluefog,latest,/dockerfile.cpu,RUN,14,"['apt-get update && apt-get install -y --allow-downgrades --allow-change-held-packages --no-install-recommends         build-essential         cmake         g++-4.8         git         curl         vim         wget         ca-certificates         libjpeg-dev         libpng-dev         python${PYTHON_VERSION}         python${PYTHON_VERSION}-dev         librdmacm1         libibverbs1         ibverbs-providers', 'if [[ ""${PYTHON_VERSION}"" == ""3.7"" ]]; then         apt-get install -y python${PYTHON_VERSION}-distutils;     fi', 'ln -s /usr/bin/python${PYTHON_VERSION} /usr/bin/python', 'curl -O https://bootstrap.pypa.io/get-pip.py &&     python get-pip.py &&     rm get-pip.py', 'mkdir /tmp/openmpi &&     cd /tmp/openmpi &&     wget https://www.open-mpi.org/software/ompi/v4.0/downloads/openmpi-4.0.0.tar.gz &&     tar zxf openmpi-4.0.0.tar.gz &&     cd openmpi-4.0.0 &&     ./configure --enable-orterun-prefix-by-default &&     make -j $(nproc) all &&     make install &&     ldconfig &&     rm -rf /tmp/openmpi', 'apt-get install -y --no-install-recommends openssh-client openssh-server &&     mkdir -p /var/run/sshd', 'cat /etc/ssh/ssh_config | grep -v StrictHostKeyChecking > /etc/ssh/ssh_config.new &&     echo ""    StrictHostKeyChecking no"" >> /etc/ssh/ssh_config.new &&     mv /etc/ssh/ssh_config.new /etc/ssh/ssh_config', 'pip install future typing', 'pip install numpy matplotlib', 'pip install torch==${PYTORCH_VERSION} torchvision==${TORCHVISION_VERSION}', 'pip install ""Pillow<7.0"" --no-deps', 'pip install bluefog', 'mkdir /bluefog', 'cd /bluefog &&     VERSION=`python -c ""import bluefog; print(bluefog.__version__)""` &&     wget https://github.com/Bluefog-Lib/bluefog/releases/download/v$VERSION/examples.tar.gz &&     tar -zxv -f examples.tar.gz &&     rm examples.tar.gz']"
Bluefog-Lib/bluefog,latest,/dockerfile.cpu,WORKDIR,1,"['""bluefog""']"
Bluefog-Lib/bluefog,latest,/dockerfile.gpu,FROM,1,['nvidia/cuda:10.1-devel-ubuntu18.04']
Bluefog-Lib/bluefog,latest,/dockerfile.gpu,ENV,6,"['PYTORCH_VERSION=1.4.0', 'TORCHVISION_VERSION=0.5.0', 'CUDNN_VERSION=7.6.0.64-1+cuda10.1', 'NCCL_VERSION=2.7.8-1+cuda10.1', 'PYTHON_VERSION=${python}', 'PYTORCH_CUDA=10.1']"
Bluefog-Lib/bluefog,latest,/dockerfile.gpu,ARG,1,['python=3.7']
Bluefog-Lib/bluefog,latest,/dockerfile.gpu,SHELL,1,"['[""/bin/bash"", ""-cu""]']"
Bluefog-Lib/bluefog,latest,/dockerfile.gpu,RUN,11,"['apt-get update && apt-get install -y --allow-downgrades --allow-change-held-packages --no-install-recommends         build-essential         cmake         g++-4.8         git         curl         vim         wget         ca-certificates         libcudnn7=${CUDNN_VERSION}         libnccl2=${NCCL_VERSION}         libnccl-dev=${NCCL_VERSION}         libjpeg-dev         libpng-dev         python${PYTHON_VERSION}         python${PYTHON_VERSION}-dev         librdmacm1         libibverbs1         ibverbs-providers', 'if [[ ""${PYTHON_VERSION}"" == ""3.7"" ]]; then         apt-get install -y python${PYTHON_VERSION}-distutils;     fi', 'ln -s /usr/bin/python${PYTHON_VERSION} /usr/bin/python', 'curl -O https://bootstrap.pypa.io/get-pip.py &&     python get-pip.py &&     rm get-pip.py', 'mkdir /tmp/openmpi &&     cd /tmp/openmpi &&     wget https://www.open-mpi.org/software/ompi/v4.0/downloads/openmpi-4.0.2.tar.gz &&     tar zxf openmpi-4.0.2.tar.gz &&     cd openmpi-4.0.2 &&     ./configure --enable-orterun-prefix-by-default --with-cuda &&     make -j $(nproc) all &&     make install &&     ldconfig &&     rm -rf /tmp/openmpi', 'apt-get install -y --no-install-recommends openssh-client openssh-server &&     mkdir -p /var/run/sshd', 'cat /etc/ssh/ssh_config | grep -v StrictHostKeyChecking > /etc/ssh/ssh_config.new &&     echo ""    StrictHostKeyChecking no"" >> /etc/ssh/ssh_config.new &&     mv /etc/ssh/ssh_config.new /etc/ssh/ssh_config', 'pip install future typing', 'pip install numpy matplotlib', 'pip install torch==${PYTORCH_VERSION} torchvision==${TORCHVISION_VERSION} -f https://download.pytorch.org/whl/cu${PYTORCH_CUDA}/torch_stable.html;', 'pip install ""Pillow<7.0"" --no-deps']"
Bluefog-Lib/bluefog,latest,/dockerfile.gpu,CMD,1,"['pip install bluefog &&     cd /bluefog &&     VERSION=`python -c ""import bluefog; print(bluefog.__version__)""` &&     wget https://github.com/Bluefog-Lib/bluefog/releases/download/v$VERSION/examples.tar.gz &&     tar -zx -f examples.tar.gz &&     rm examples.tar.gz &&     bash']"
Bluefog-Lib/bluefog,latest,/dockerfile.gpu,WORKDIR,1,"['""bluefog""']"
Bluefog-Lib/bluefog,latest,/dockerfile.gpu.test,FROM,1,['nvidia/cuda:10.1-devel-ubuntu18.04']
Bluefog-Lib/bluefog,latest,/dockerfile.gpu.test,ENV,7,"['TENSORFLOW_VERSION=2.1.0', 'PYTORCH_VERSION=1.4.0', 'TORCHVISION_VERSION=0.5.0', 'CUDNN_VERSION=7.6.0.64-1+cuda10.1', 'NCCL_VERSION=2.7.8-1+cuda10.1', 'PYTHON_VERSION=${python}', 'PYTORCH_CUDA=10.1']"
Bluefog-Lib/bluefog,latest,/dockerfile.gpu.test,ARG,1,['python=3.7']
Bluefog-Lib/bluefog,latest,/dockerfile.gpu.test,SHELL,1,"['[""/bin/bash"", ""-cu""]']"
Bluefog-Lib/bluefog,latest,/dockerfile.gpu.test,RUN,12,"['apt-get update && apt-get install -y --allow-downgrades --allow-change-held-packages --no-install-recommends         build-essential         cmake         g++-4.8         git         curl         vim         wget         ca-certificates         libcudnn7=${CUDNN_VERSION}         libnccl2=${NCCL_VERSION}         libnccl-dev=${NCCL_VERSION}         libjpeg-dev         libpng-dev         python${PYTHON_VERSION}         python${PYTHON_VERSION}-dev         librdmacm1         libibverbs1         ibverbs-providers', 'if [[ ""${PYTHON_VERSION}"" == ""3.7"" ]]; then         apt-get install -y python${PYTHON_VERSION}-distutils;     fi', 'ln -s /usr/bin/python${PYTHON_VERSION} /usr/bin/python', 'curl -O https://bootstrap.pypa.io/get-pip.py &&     python get-pip.py &&     rm get-pip.py', 'pip install future typing pytest', 'pip install numpy         tensorflow-gpu==${TENSORFLOW_VERSION}         keras         h5py', 'pip install torch==${PYTORCH_VERSION} torchvision==${TORCHVISION_VERSION} -f https://download.pytorch.org/whl/cu${PYTORCH_CUDA}/torch_stable.html;', 'pip install ""Pillow<7.0"" --no-deps', 'mkdir /tmp/openmpi &&     cd /tmp/openmpi &&     wget https://www.open-mpi.org/software/ompi/v4.0/downloads/openmpi-4.0.2.tar.gz &&     tar zxf openmpi-4.0.2.tar.gz &&     cd openmpi-4.0.2 &&     ./configure --enable-orterun-prefix-by-default --with-cuda &&     make -j $(nproc) all &&     make install &&     ldconfig &&     rm -rf /tmp/openmpi', 'ldconfig /usr/local/cuda/targets/x86_64-linux/lib/stubs &&     HOROVOD_GPU_ALLREDUCE=NCCL HOROVOD_WITH_TENSORFLOW=1 HOROVOD_WITH_PYTORCH=1 HOROVOD_WITHOUT_MXNET=1          pip install --no-cache-dir horovod==0.19.0 &&     ldconfig', 'apt-get install -y --no-install-recommends openssh-client openssh-server &&     mkdir -p /var/run/sshd', 'cat /etc/ssh/ssh_config | grep -v StrictHostKeyChecking > /etc/ssh/ssh_config.new &&     echo ""    StrictHostKeyChecking no"" >> /etc/ssh/ssh_config.new &&     mv /etc/ssh/ssh_config.new /etc/ssh/ssh_config']"
Bluefog-Lib/bluefog,latest,/dockerfile.cpu.test,FROM,1,['ubuntu:18.04']
Bluefog-Lib/bluefog,latest,/dockerfile.cpu.test,ENV,4,"['TENSORFLOW_VERSION=2.1.0', 'PYTORCH_VERSION=1.4.0', 'TORCHVISION_VERSION=0.5.0', 'PYTHON_VERSION=${python}']"
Bluefog-Lib/bluefog,latest,/dockerfile.cpu.test,ARG,1,['python=3.7']
Bluefog-Lib/bluefog,latest,/dockerfile.cpu.test,SHELL,1,"['[""/bin/bash"", ""-cu""]']"
Bluefog-Lib/bluefog,latest,/dockerfile.cpu.test,RUN,12,"['apt-get update && apt-get install -y --allow-downgrades --allow-change-held-packages --no-install-recommends         build-essential         cmake         g++-4.8         git         curl         vim         wget         ca-certificates         libjpeg-dev         libpng-dev         python${PYTHON_VERSION}         python${PYTHON_VERSION}-dev         librdmacm1         libibverbs1         ibverbs-providers', 'if [[ ""${PYTHON_VERSION}"" == ""3.7"" ]]; then         apt-get install -y python${PYTHON_VERSION}-distutils;     fi', 'ln -s /usr/bin/python${PYTHON_VERSION} /usr/bin/python', 'curl -O https://bootstrap.pypa.io/get-pip.py &&     python get-pip.py &&     rm get-pip.py', 'pip install future typing', 'pip install numpy         tensorflow==${TENSORFLOW_VERSION}         keras         h5py', 'pip install torch==${PYTORCH_VERSION} torchvision==${TORCHVISION_VERSION}', 'pip install ""Pillow<7.0"" --no-deps', 'mkdir /tmp/openmpi &&     cd /tmp/openmpi &&     wget https://www.open-mpi.org/software/ompi/v4.0/downloads/openmpi-4.0.0.tar.gz &&     tar zxf openmpi-4.0.0.tar.gz &&     cd openmpi-4.0.0 &&     ./configure --enable-orterun-prefix-by-default &&     make -j $(nproc) all &&     make install &&     ldconfig &&     rm -rf /tmp/openmpi', 'HOROVOD_WITH_TENSORFLOW=1 HOROVOD_WITH_PYTORCH=1 HOROVOD_WITHOUT_MXNET=1     pip install --no-cache-dir horovod==0.19.0', 'apt-get install -y --no-install-recommends openssh-client openssh-server &&     mkdir -p /var/run/sshd', 'cat /etc/ssh/ssh_config | grep -v StrictHostKeyChecking > /etc/ssh/ssh_config.new &&     echo ""    StrictHostKeyChecking no"" >> /etc/ssh/ssh_config.new &&     mv /etc/ssh/ssh_config.new /etc/ssh/ssh_config']"
ModelChimp/modelchimp,latest,/Dockerfile,FROM,1,['python:3.6.7-stretch']
ModelChimp/modelchimp,latest,/Dockerfile,ENV,1,['PYTHONUNBUFFERED 1']
ModelChimp/modelchimp,latest,/Dockerfile,COPY,2,"['requirements.txt /code/', '. /code']"
ModelChimp/modelchimp,latest,/Dockerfile,WORKDIR,1,['/code']
ModelChimp/modelchimp,latest,/Dockerfile,RUN,4,"['pip install --upgrade setuptools', 'pip install -r requirements.txt', 'apt-get update && apt-get install -y --no-install-recommends postgresql-client   && apt-get clean   && rm -rf /var/lib/apt/lists/*', 'python manage.py collectstatic --noinput']"
ModelChimp/modelchimp,latest,/Dockerfile,EXPOSE,1,['8000']
ModelChimp/modelchimp,latest,/client/Dockerfile,FROM,1,['node:11.5.0']
ModelChimp/modelchimp,latest,/client/Dockerfile,RUN,3,"['mkdir /frontend', 'apt-get update && apt-get install libglu1 -y --no-install-recommends   && apt-get clean   && rm -rf /var/lib/apt/lists/*', 'npm install && npm run build']"
ModelChimp/modelchimp,latest,/client/Dockerfile,WORKDIR,1,['/frontend']
ModelChimp/modelchimp,latest,/client/Dockerfile,ENV,1,['PATH /frontend/.bin:$PATH']
ModelChimp/modelchimp,latest,/client/Dockerfile,COPY,1,['. /frontend/']
ModelChimp/modelchimp,latest,/client/Dockerfile,EXPOSE,1,['3000']
LLNL/merlin,latest,/Dockerfile,FROM,1,['ubuntu:18.04']
LLNL/merlin,latest,/Dockerfile,LABEL,1,"['maintainer=""Joe Koning koning1@llnl.gov""']"
LLNL/merlin,latest,/Dockerfile,ARG,2,"['USER=merlinu', 'UID=1000']"
LLNL/merlin,latest,/Dockerfile,ADD,1,['. /merlin']
LLNL/merlin,latest,/Dockerfile,RUN,1,"['apt-get update &&   apt-get install --no-install-recommends -y python python-pip python3.8 python3-pip python3.8-venv python3.8-distutils python3.8-dev libyaml-dev sudo build-essential &&   rm -rf /var/lib/apt/lists/* &&   python3.8 -m pip install setuptools -U &&   python3.8 -m pip install pip -U &&   python3.8 -m pip install cffi cython -U &&   groupadd -g ${UID} ${USER} &&   useradd -ms /bin/bash -g ${USER} $USER &&   sh -c ""printf \\""$USER ALL= NOPASSWD: ALL\\\\n\\"" >> /etc/sudoers"" &&   adduser $USER sudo &&   cd /merlin &&   python3.8 setup.py install &&   python3.8 -m pip install -r requirements/dev.txt  &&   python3.8 -m pip install -r merlin/examples/workflows/feature_demo/requirements.txt &&   rm /usr/bin/python3 && ln -s /usr/bin/python3.8 /usr/bin/python3 &&   apt-get remove -y build-essential && apt-get autoremove -y']"
LLNL/merlin,latest,/Dockerfile,USER,1,['$USER']
LLNL/merlin,latest,/Dockerfile,WORKDIR,1,['/home/$USER']
Kitware/dive,latest,/docker/girder_worker.Dockerfile,FROM,3,"['python:3.7-buster as server-builder', 'python:3.7-buster as ffmpeg-builder', 'kitware/viame:gpu-algorithms-latest as worker']"
Kitware/dive,latest,/docker/girder_worker.Dockerfile,WORKDIR,1,['/opt/dive/src']
Kitware/dive,latest,/docker/girder_worker.Dockerfile,RUN,14,"['apt-get update', 'apt-get install -y build-essential libssl-dev libffi-dev python3-dev cargo npm', 'curl -sSL https://install.python-poetry.org | POETRY_VERSION=1.1.2 POETRY_HOME=/opt/dive/local python -', 'poetry env use system', 'poetry config virtualenvs.create false', 'poetry install --no-root', 'poetry install --no-dev', 'wget -O ffmpeg.tar.xz https://johnvansickle.com/ffmpeg/releases/ffmpeg-release-amd64-static.tar.xz', 'mkdir /tmp/ffextracted', 'tar -xvf ffmpeg.tar.xz -C /tmp/ffextracted --strip-components 1', 'chmod +x /tini', 'export DEBIAN_FRONTEND=noninteractive &&   apt-get update &&   apt-get install -qy python3.7 libpython3.7 &&   apt-get clean && rm -rf /var/lib/apt/lists/*', 'useradd --create-home --uid 1099 --shell=/bin/bash dive', 'install -g dive -o dive -d /tmp/addons']"
Kitware/dive,latest,/docker/girder_worker.Dockerfile,ENV,3,"['PATH=""/opt/dive/local/venv/bin:$PATH""', 'TINI_VERSION v0.19.0', 'PATH=""/opt/dive/local/venv/bin:$PATH""']"
Kitware/dive,latest,/docker/girder_worker.Dockerfile,COPY,6,"['server/pyproject.toml server/poetry.lock /opt/dive/src/', 'server/ /opt/dive/src/', '--chown=dive:dive --from=server-builder /opt/dive/local/venv/ /opt/dive/local/venv/', '--chown=dive:dive --from=server-builder /opt/dive/src /opt/dive/src', '--from=ffmpeg-builder /tmp/ffextracted/ffmpeg /tmp/ffextracted/ffprobe /opt/dive/local/venv/bin/', '--chown=dive:dive docker/entrypoint_worker.sh /']"
Kitware/dive,latest,/docker/girder_worker.Dockerfile,ADD,1,['https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini /tini']
Kitware/dive,latest,/docker/girder_worker.Dockerfile,USER,1,['dive']
Kitware/dive,latest,/docker/girder_worker.Dockerfile,ENTRYPOINT,1,"['[""/tini"", ""--""]']"
Kitware/dive,latest,/docker/girder_worker.Dockerfile,CMD,1,"['[""/entrypoint_worker.sh""]']"
Kitware/dive,latest,/docker/girder.Dockerfile,FROM,3,"['node:16 as client-builder', 'python:3.7-buster as server-builder', 'python:3.7-slim-buster as server']"
Kitware/dive,latest,/docker/girder.Dockerfile,WORKDIR,2,"['/app', '/opt/dive/src']"
Kitware/dive,latest,/docker/girder.Dockerfile,COPY,9,"['client/package.json client/yarn.lock /app/', '.git/ /app/.git/', 'client/ /app/', 'server/pyproject.toml server/poetry.lock /opt/dive/src/', 'server/ /opt/dive/src/', '--from=server-builder /opt/dive/local/venv /opt/dive/local/venv', '--from=server-builder /opt/dive/src /opt/dive/src', '--from=client-builder /app/dist/ /opt/dive/local/venv/share/girder/static/viame/', 'docker/entrypoint_server.sh docker/server_setup.py /']"
Kitware/dive,latest,/docker/girder.Dockerfile,RUN,10,"['yarn install --frozen-lockfile --network-timeout 300000', 'yarn build:web', 'apt-get update', 'apt-get install -y build-essential libssl-dev libffi-dev python3-dev cargo npm', 'curl -sSL https://install.python-poetry.org | POETRY_VERSION=1.1.2 POETRY_HOME=/opt/dive/local python -', 'poetry env use system', 'poetry config virtualenvs.create false', 'poetry install --no-root', 'girder build', 'poetry install --no-dev']"
Kitware/dive,latest,/docker/girder.Dockerfile,ENV,3,"['PATH=""/opt/dive/local/venv/bin:$PATH""', 'GIT_PYTHON_REFRESH=""quiet""', 'PATH=""/opt/dive/local/venv/bin:$PATH""']"
Kitware/dive,latest,/docker/girder.Dockerfile,ENTRYPOINT,1,"['[ ""/entrypoint_server.sh"" ]']"
Azure/aml-deploy,latest,/Dockerfile,FROM,1,['ghcr.io/marvinbuss/aml-docker:1.34.0']
Azure/aml-deploy,latest,/Dockerfile,LABEL,1,"['maintainer=""azure/gh_aml""']"
Azure/aml-deploy,latest,/Dockerfile,COPY,1,['/code /code']
Azure/aml-deploy,latest,/Dockerfile,ENTRYPOINT,1,"['[""/code/entrypoint.sh""]']"
uio-bmi/immuneML,latest,/Dockerfile,FROM,1,['centos:latest']
uio-bmi/immuneML,latest,/Dockerfile,COPY,1,['. immuneML']
uio-bmi/immuneML,latest,/Dockerfile,RUN,12,"['yum update -y', ""yum groupinstall -y 'Development Tools'"", 'yum install -y dnf-plugins-core', 'dnf install -y epel-release', 'dnf config-manager --set-enabled powertools', 'yum install -y python38 python38-devel git libgit2 libgit2-devel make openssl-devel libcurl-devel libxml2-devel gcc gcc-c++ autoconf automake libtool m4 llvm llvm-devel libXt-devel', 'pip3 install wheel setuptools==50.3.2 cython', 'git clone https://github.com/uio-bmi/compairr.git compairr_folder', 'make -C compairr_folder', 'cp ./compairr_folder/src/compairr ./compairr', 'pip3 install ./immuneML/[TCRdist]', 'pip3 install --upgrade numpy']"
arangoml/arangopipe,latest,/arangopipe/Dockerfile_Torch_FE,FROM,3,"['arangodb:3.6.3', 'node:8.7.0-alpine AS frontend', 'continuumio/miniconda3']"
arangoml/arangopipe,latest,/arangopipe/Dockerfile_Torch_FE,RUN,9,"['mkdir -p /arangopipe_frontend', 'npm install', 'apt-get update && apt-get install -y curl', 'pip install mlflow hyperopt sklearn2 jsonpickle python-arango jupyter matplotlib PyYAML==5.1.1 arangopipe==0.0.6.9.3', 'mkdir -p /workspace', 'pip install torch==1.2.0 torchtext==0.4', 'jupyter notebook --generate-config --allow-root', 'echo ""c.NotebookApp.password = u\'sha1:6a3f528eec40:6e896b6e4828f525a6e20e5411cd1c8075d68619\'"" >> /root/.jupyter/jupyter_notebook_config.py', '[""chmod"", ""+x"", ""/workspace/experiments/startup_commands.sh""]']"
arangoml/arangopipe,latest,/arangopipe/Dockerfile_Torch_FE,WORKDIR,3,"['/arangopipe_frontend', '/', '/workspace/experiments']"
arangoml/arangopipe,latest,/arangopipe/Dockerfile_Torch_FE,COPY,18,"['arangopipe_frontend/app/package.json /arangopipe_frontend', 'arangopipe_frontend/app/package-lock.json /arangopipe_frontend', 'arangopipe_frontend/app/ /arangopipe_frontend', '--from=0 / .', 'aisis-foxx/ aisis-foxx/', '--from=frontend /arangopipe_frontend .', 'tests/AQL/ examples/AQL/', 'tests/test_config/ examples/test_config/', 'tests/covariate_shift/ examples/covariate_shift/', 'tests/hyperopt/ examples/hyperopt/', 'tests/mlflow/ examples/mlflow/', 'tests/test_data_generator/ examples/test_data_generator/', 'tests/managed_services/connecting_to_arangodb_managed_services.ipynb examples/managed_services/', 'tests/pytorch/ examples/pytorch/', 'arangopipe_examples_torch.ipynb .', 'tests/container_tests/torch_arangopipe_testcases.py examples/container_tests/', 'tests/covariate_shift/cal_housing.csv examples/container_tests/', 'startup_commands.sh /workspace/experiments/startup_commands.sh']"
arangoml/arangopipe,latest,/arangopipe/Dockerfile_Torch_FE,MAINTAINER,1,['Joerg Schad <info@arangodb.com>']
arangoml/arangopipe,latest,/arangopipe/Dockerfile_Torch_FE,ENV,2,"['GIT_PYTHON_REFRESH=quiet', 'PYTHONPATH=`pwd`:$PYTHONPATH:/workspace/experiments/examples/pytorch']"
arangoml/arangopipe,latest,/arangopipe/Dockerfile_Torch_FE,EXPOSE,1,['8888 8529 3000']
arangoml/arangopipe,latest,/arangopipe/Dockerfile_Torch_FE,ENTRYPOINT,1,"['[""/workspace/experiments/startup_commands.sh""]']"
arangoml/arangopipe,latest,/arangopipe/Dockerfile_Prod,FROM,1,['python:3.7']
arangoml/arangopipe,latest,/arangopipe/Dockerfile_Prod,RUN,1,['pip install jsonpickle python-arango jupyter sklearn2 PyYAML==5.1.1 arangopipe==0.0.6.1']
arangoml/arangopipe,latest,/arangopipe/Dockerfile_Prod,WORKDIR,1,['/']
arangoml/arangopipe,latest,/arangopipe/Dockerfile_Prod,COPY,1,['tests/prod_docker/test_installation.py tests/']
arangoml/arangopipe,latest,/arangopipe/Dockerfile_TFFE,FROM,3,"['arangodb:3.6.3', 'node:8.7.0-alpine AS frontend', 'tensorflow/tensorflow:1.14.0-py3']"
arangoml/arangopipe,latest,/arangopipe/Dockerfile_TFFE,RUN,11,"['mkdir -p /arangopipe_frontend', 'npm install', 'npm install --global foxx-cli', 'npm install dotenv', 'npm install dotenv-webpack --save', 'apt-get update && apt-get install -y curl', 'pip install mlflow hyperopt sklearn2 jsonpickle python-arango jupyter matplotlib tensorflow-data-validation PyYAML==5.1.1 arangopipe==0.0.6.1', 'mkdir -p /workspace', 'jupyter notebook --generate-config --allow-root', 'echo ""c.NotebookApp.password = u\'sha1:6a3f528eec40:6e896b6e4828f525a6e20e5411cd1c8075d68619\'"" >> /root/.jupyter/jupyter_notebook_config.py', '[""chmod"", ""+x"", ""/workspace/experiments/startup_commands.sh""]']"
arangoml/arangopipe,latest,/arangopipe/Dockerfile_TFFE,WORKDIR,3,"['/arangopipe_frontend', '/', '/workspace/experiments']"
arangoml/arangopipe,latest,/arangopipe/Dockerfile_TFFE,COPY,18,"['arangopipe_frontend/app/package.json /arangopipe_frontend', 'arangopipe_frontend/app/package-lock.json /arangopipe_frontend', 'arangopipe_frontend/app/ /arangopipe_frontend', '--from=0 / .', 'aisis-foxx/ aisis-foxx/', '--from=frontend /arangopipe_frontend .', 'tests/AQL/ examples/AQL/', 'tests/test_config/ examples/test_config/', 'tests/covariate_shift/ examples/covariate_shift/', 'tests/hyperopt/ examples/hyperopt/', 'tests/mlflow/ examples/mlflow/', 'tests/test_data_generator/ examples/test_data_generator/', 'tests/managed_services/connecting_to_arangodb_managed_services.ipynb examples/managed_services/', 'tests/TFX/ examples/TFX/', 'tests/container_tests/tf_arangopipe_testcases.py examples/container_tests/', 'tests/container_tests/cal_housing.csv examples/container_tests/', 'arangopipe_examples.ipynb .', 'startup_commands.sh /workspace/experiments/startup_commands.sh']"
arangoml/arangopipe,latest,/arangopipe/Dockerfile_TFFE,MAINTAINER,1,['Joerg Schad <info@arangodb.com>']
arangoml/arangopipe,latest,/arangopipe/Dockerfile_TFFE,ENV,2,"['GIT_PYTHON_REFRESH=quiet', 'PYTHONPATH=`pwd`:$PYTHONPATH']"
arangoml/arangopipe,latest,/arangopipe/Dockerfile_TFFE,EXPOSE,1,['8888 8529 3000']
arangoml/arangopipe,latest,/arangopipe/Dockerfile_TFFE,ENTRYPOINT,1,"['[""/workspace/experiments/startup_commands.sh""]']"
arangoml/arangopipe,latest,/arangopipe/arangopipe_frontend/app/Dockerfile,FROM,1,['node:8.7.0-alpine']
arangoml/arangopipe,latest,/arangopipe/arangopipe_frontend/app/Dockerfile,RUN,2,"['mkdir -p /srv/app/arangoml-ui', 'npm install']"
arangoml/arangopipe,latest,/arangopipe/arangopipe_frontend/app/Dockerfile,WORKDIR,1,['/srv/app/arangoml-ui']
arangoml/arangopipe,latest,/arangopipe/arangopipe_frontend/app/Dockerfile,COPY,2,"['package.json /srv/app/arangoml-ui', '. /srv/app/arangoml-ui']"
arangoml/arangopipe,latest,/arangopipe/arangopipe_frontend/app/Dockerfile,CMD,1,"['[""npm"", ""start""]']"
arangoml/arangopipe,latest,/arangopipe/arangopipe_frontend/app/public/ace/snippets/dockerfile.js,"DEFINE(FUNCTION(REQUIRE,",1,"['exports, module) {']"
arangoml/arangopipe,latest,/arangopipe/arangopipe_frontend/app/public/ace/snippets/dockerfile.js,"""USE",1,"['strict"";']"
arangoml/arangopipe,latest,/arangopipe/arangopipe_frontend/app/public/ace/snippets/dockerfile.js,EXPORTS.SNIPPETTEXT,1,"['= require(""../requirejs/text!./dockerfile.snippets"");']"
arangoml/arangopipe,latest,/arangopipe/arangopipe_frontend/app/public/ace/snippets/dockerfile.js,EXPORTS.SCOPE,1,"['= ""dockerfile"";']"
arangoml/arangopipe,latest,/arangopipe/arangopipe_frontend/app/public/ace/snippets/dockerfile.js,});,1,['']
arangoml/arangopipe,latest,/arangopipe/arangopipe_frontend/app/public/ace/mode/dockerfile_highlight_rules.js,/*,1,['***** BEGIN LICENSE BLOCK *****']
arangoml/arangopipe,latest,/arangopipe/arangopipe_frontend/app/public/ace/mode/dockerfile_highlight_rules.js,*,28,"['Distributed under the BSD license:', '', 'Copyright (c) 2010, Ajax.org B.V.', 'All rights reserved.', '', 'Redistribution and use in source and binary forms, with or without', 'modification, are permitted provided that the following conditions are met:', '* Redistributions of source code must retain the above copyright', 'notice, this list of conditions and the following disclaimer.', '* Redistributions in binary form must reproduce the above copyright', 'notice, this list of conditions and the following disclaimer in the', 'documentation and/or other materials provided with the distribution.', '* Neither the name of Ajax.org B.V. nor the', 'names of its contributors may be used to endorse or promote products', 'derived from this software without specific prior written permission.', '', 'THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ""AS IS"" AND', 'ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED', 'WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE', 'DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY', 'DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES', '(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;', 'LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND', 'ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT', '(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS', 'SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.', '', '***** END LICENSE BLOCK ***** */']"
arangoml/arangopipe,latest,/arangopipe/arangopipe_frontend/app/public/ace/mode/dockerfile_highlight_rules.js,"DEFINE(FUNCTION(REQUIRE,",1,"['exports, module) {']"
arangoml/arangopipe,latest,/arangopipe/arangopipe_frontend/app/public/ace/mode/dockerfile_highlight_rules.js,"""USE",1,"['strict"";']"
arangoml/arangopipe,latest,/arangopipe/arangopipe_frontend/app/public/ace/mode/dockerfile_highlight_rules.js,VAR,4,"['oop = require(""../lib/oop"");', 'ShHighlightRules = require(""./sh_highlight_rules"").ShHighlightRules;', 'DockerfileHighlightRules = function() {', 'startRules = this.$rules.start;']"
arangoml/arangopipe,latest,/arangopipe/arangopipe_frontend/app/public/ace/mode/dockerfile_highlight_rules.js,SHHIGHLIGHTRULES.CALL(THIS);,1,['']
arangoml/arangopipe,latest,/arangopipe/arangopipe_frontend/app/public/ace/mode/dockerfile_highlight_rules.js,FOR,1,['(var i = 0; i < startRules.length; i++) {']
arangoml/arangopipe,latest,/arangopipe/arangopipe_frontend/app/public/ace/mode/dockerfile_highlight_rules.js,IF,1,"['(startRules[i].token == ""variable.language"") {']"
arangoml/arangopipe,latest,/arangopipe/arangopipe_frontend/app/public/ace/mode/dockerfile_highlight_rules.js,"STARTRULES.SPLICE(I,",1,"['0, {']"
arangoml/arangopipe,latest,/arangopipe/arangopipe_frontend/app/public/ace/mode/dockerfile_highlight_rules.js,TOKEN:,1,"['""constant.language"",']"
arangoml/arangopipe,latest,/arangopipe/arangopipe_frontend/app/public/ace/mode/dockerfile_highlight_rules.js,REGEX:,1,"['""(?:^(?:FROM|MAINTAINER|RUN|CMD|EXPOSE|ENV|ADD|ENTRYPOINT|VOLUME|USER|WORKDIR|ONBUILD|COPY|LABEL)\\\\b)"",']"
arangoml/arangopipe,latest,/arangopipe/arangopipe_frontend/app/public/ace/mode/dockerfile_highlight_rules.js,CASEINSENSITIVE:,1,['true']
arangoml/arangopipe,latest,/arangopipe/arangopipe_frontend/app/public/ace/mode/dockerfile_highlight_rules.js,});,2,"['', '']"
arangoml/arangopipe,latest,/arangopipe/arangopipe_frontend/app/public/ace/mode/dockerfile_highlight_rules.js,BREAK;,1,['']
arangoml/arangopipe,latest,/arangopipe/arangopipe_frontend/app/public/ace/mode/dockerfile_highlight_rules.js,},2,"['', '']"
arangoml/arangopipe,latest,/arangopipe/arangopipe_frontend/app/public/ace/mode/dockerfile_highlight_rules.js,};,1,['']
arangoml/arangopipe,latest,/arangopipe/arangopipe_frontend/app/public/ace/mode/dockerfile_highlight_rules.js,"OOP.INHERITS(DOCKERFILEHIGHLIGHTRULES,",1,['ShHighlightRules);']
arangoml/arangopipe,latest,/arangopipe/arangopipe_frontend/app/public/ace/mode/dockerfile_highlight_rules.js,EXPORTS.DOCKERFILEHIGHLIGHTRULES,1,['= DockerfileHighlightRules;']
arangoml/arangopipe,latest,/arangopipe/arangopipe_frontend/app/public/ace/mode/dockerfile.js,/*,1,['***** BEGIN LICENSE BLOCK *****']
arangoml/arangopipe,latest,/arangopipe/arangopipe_frontend/app/public/ace/mode/dockerfile.js,*,28,"['Distributed under the BSD license:', '', 'Copyright (c) 2010, Ajax.org B.V.', 'All rights reserved.', '', 'Redistribution and use in source and binary forms, with or without', 'modification, are permitted provided that the following conditions are met:', '* Redistributions of source code must retain the above copyright', 'notice, this list of conditions and the following disclaimer.', '* Redistributions in binary form must reproduce the above copyright', 'notice, this list of conditions and the following disclaimer in the', 'documentation and/or other materials provided with the distribution.', '* Neither the name of Ajax.org B.V. nor the', 'names of its contributors may be used to endorse or promote products', 'derived from this software without specific prior written permission.', '', 'THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ""AS IS"" AND', 'ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED', 'WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE', 'DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY', 'DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES', '(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;', 'LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND', 'ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT', '(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS', 'SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.', '', '***** END LICENSE BLOCK ***** */']"
arangoml/arangopipe,latest,/arangopipe/arangopipe_frontend/app/public/ace/mode/dockerfile.js,"DEFINE(FUNCTION(REQUIRE,",1,"['exports, module) {']"
arangoml/arangopipe,latest,/arangopipe/arangopipe_frontend/app/public/ace/mode/dockerfile.js,"""USE",1,"['strict"";']"
arangoml/arangopipe,latest,/arangopipe/arangopipe_frontend/app/public/ace/mode/dockerfile.js,VAR,5,"['oop = require(""../lib/oop"");', 'ShMode = require(""./sh"").Mode;', 'DockerfileHighlightRules = require(""./dockerfile_highlight_rules"").DockerfileHighlightRules;', 'CStyleFoldMode = require(""./folding/cstyle"").FoldMode;', 'Mode = function() {']"
arangoml/arangopipe,latest,/arangopipe/arangopipe_frontend/app/public/ace/mode/dockerfile.js,SHMODE.CALL(THIS);,1,['']
arangoml/arangopipe,latest,/arangopipe/arangopipe_frontend/app/public/ace/mode/dockerfile.js,THIS.HIGHLIGHTRULES,1,['= DockerfileHighlightRules;']
arangoml/arangopipe,latest,/arangopipe/arangopipe_frontend/app/public/ace/mode/dockerfile.js,THIS.FOLDINGRULES,1,['= new CStyleFoldMode();']
arangoml/arangopipe,latest,/arangopipe/arangopipe_frontend/app/public/ace/mode/dockerfile.js,};,1,['']
arangoml/arangopipe,latest,/arangopipe/arangopipe_frontend/app/public/ace/mode/dockerfile.js,"OOP.INHERITS(MODE,",1,['ShMode);']
arangoml/arangopipe,latest,/arangopipe/arangopipe_frontend/app/public/ace/mode/dockerfile.js,(FUNCTION(),1,['{']
arangoml/arangopipe,latest,/arangopipe/arangopipe_frontend/app/public/ace/mode/dockerfile.js,THIS.$ID,1,"['= ""ace/mode/dockerfile"";']"
arangoml/arangopipe,latest,/arangopipe/arangopipe_frontend/app/public/ace/mode/dockerfile.js,}).CALL(MODE.PROTOTYPE);,1,['']
arangoml/arangopipe,latest,/arangopipe/arangopipe_frontend/app/public/ace/mode/dockerfile.js,EXPORTS.MODE,1,['= Mode;']
arangoml/arangopipe,latest,/arangopipe/arangopipe_frontend/app/public/ace/mode/dockerfile.js,});,1,['']
arangoml/arangopipe,latest,/arangopipe/arangopipe/Dockerfile_Torch_FE,FROM,3,"['arangodb:3.6.3', 'node:8.7.0-alpine AS frontend', 'continuumio/miniconda3']"
arangoml/arangopipe,latest,/arangopipe/arangopipe/Dockerfile_Torch_FE,RUN,9,"['mkdir -p /arangopipe_frontend', 'npm install', 'apt-get update && apt-get install -y curl', 'pip install mlflow hyperopt sklearn2 jsonpickle python-arango jupyter matplotlib PyYAML==5.1.1 arangopipe==0.0.6.9.3', 'mkdir -p /workspace', 'pip install torch==1.2.0 torchtext==0.4', 'jupyter notebook --generate-config --allow-root', 'echo ""c.NotebookApp.password = u\'sha1:6a3f528eec40:6e896b6e4828f525a6e20e5411cd1c8075d68619\'"" >> /root/.jupyter/jupyter_notebook_config.py', '[""chmod"", ""+x"", ""/workspace/experiments/startup_commands.sh""]']"
arangoml/arangopipe,latest,/arangopipe/arangopipe/Dockerfile_Torch_FE,WORKDIR,3,"['/arangopipe_frontend', '/', '/workspace/experiments']"
arangoml/arangopipe,latest,/arangopipe/arangopipe/Dockerfile_Torch_FE,COPY,18,"['arangopipe_frontend/app/package.json /arangopipe_frontend', 'arangopipe_frontend/app/package-lock.json /arangopipe_frontend', 'arangopipe_frontend/app/ /arangopipe_frontend', '--from=0 / .', 'aisis-foxx/ aisis-foxx/', '--from=frontend /arangopipe_frontend .', 'tests/AQL/ examples/AQL/', 'tests/test_config/ examples/test_config/', 'tests/covariate_shift/ examples/covariate_shift/', 'tests/hyperopt/ examples/hyperopt/', 'tests/mlflow/ examples/mlflow/', 'tests/test_data_generator/ examples/test_data_generator/', 'tests/managed_services/connecting_to_arangodb_managed_services.ipynb examples/managed_services/', 'tests/pytorch/ examples/pytorch/', 'arangopipe_examples_torch.ipynb .', 'tests/container_tests/torch_arangopipe_testcases.py examples/container_tests/', 'tests/covariate_shift/cal_housing.csv examples/container_tests/', 'startup_commands.sh /workspace/experiments/startup_commands.sh']"
arangoml/arangopipe,latest,/arangopipe/arangopipe/Dockerfile_Torch_FE,MAINTAINER,1,['Joerg Schad <info@arangodb.com>']
arangoml/arangopipe,latest,/arangopipe/arangopipe/Dockerfile_Torch_FE,ENV,2,"['GIT_PYTHON_REFRESH=quiet', 'PYTHONPATH=`pwd`:$PYTHONPATH:/workspace/experiments/examples/pytorch']"
arangoml/arangopipe,latest,/arangopipe/arangopipe/Dockerfile_Torch_FE,EXPOSE,1,['8888 8529 3000']
arangoml/arangopipe,latest,/arangopipe/arangopipe/Dockerfile_Torch_FE,ENTRYPOINT,1,"['[""/workspace/experiments/startup_commands.sh""]']"
arangoml/arangopipe,latest,/arangopipe/arangopipe/Dockerfile_Prod,FROM,1,['python:3.7']
arangoml/arangopipe,latest,/arangopipe/arangopipe/Dockerfile_Prod,RUN,1,['pip install jsonpickle python-arango jupyter sklearn2 PyYAML==5.1.1 arangopipe==0.0.6.1']
arangoml/arangopipe,latest,/arangopipe/arangopipe/Dockerfile_Prod,WORKDIR,1,['/']
arangoml/arangopipe,latest,/arangopipe/arangopipe/Dockerfile_Prod,COPY,1,['tests/prod_docker/test_installation.py tests/']
arangoml/arangopipe,latest,/arangopipe/arangopipe/Dockerfile_TFFE,FROM,3,"['arangodb:3.6.3', 'node:8.7.0-alpine AS frontend', 'tensorflow/tensorflow:1.14.0-py3']"
arangoml/arangopipe,latest,/arangopipe/arangopipe/Dockerfile_TFFE,RUN,11,"['mkdir -p /arangopipe_frontend', 'npm install', 'npm install --global foxx-cli', 'npm install dotenv', 'npm install dotenv-webpack --save', 'apt-get update && apt-get install -y curl', 'pip install mlflow hyperopt sklearn2 jsonpickle python-arango jupyter matplotlib tensorflow-data-validation PyYAML==5.1.1 arangopipe==0.0.6.1', 'mkdir -p /workspace', 'jupyter notebook --generate-config --allow-root', 'echo ""c.NotebookApp.password = u\'sha1:6a3f528eec40:6e896b6e4828f525a6e20e5411cd1c8075d68619\'"" >> /root/.jupyter/jupyter_notebook_config.py', '[""chmod"", ""+x"", ""/workspace/experiments/startup_commands.sh""]']"
arangoml/arangopipe,latest,/arangopipe/arangopipe/Dockerfile_TFFE,WORKDIR,3,"['/arangopipe_frontend', '/', '/workspace/experiments']"
arangoml/arangopipe,latest,/arangopipe/arangopipe/Dockerfile_TFFE,COPY,18,"['arangopipe_frontend/app/package.json /arangopipe_frontend', 'arangopipe_frontend/app/package-lock.json /arangopipe_frontend', 'arangopipe_frontend/app/ /arangopipe_frontend', '--from=0 / .', 'aisis-foxx/ aisis-foxx/', '--from=frontend /arangopipe_frontend .', 'tests/AQL/ examples/AQL/', 'tests/test_config/ examples/test_config/', 'tests/covariate_shift/ examples/covariate_shift/', 'tests/hyperopt/ examples/hyperopt/', 'tests/mlflow/ examples/mlflow/', 'tests/test_data_generator/ examples/test_data_generator/', 'tests/managed_services/connecting_to_arangodb_managed_services.ipynb examples/managed_services/', 'tests/TFX/ examples/TFX/', 'tests/container_tests/tf_arangopipe_testcases.py examples/container_tests/', 'tests/container_tests/cal_housing.csv examples/container_tests/', 'arangopipe_examples.ipynb .', 'startup_commands.sh /workspace/experiments/startup_commands.sh']"
arangoml/arangopipe,latest,/arangopipe/arangopipe/Dockerfile_TFFE,MAINTAINER,1,['Joerg Schad <info@arangodb.com>']
arangoml/arangopipe,latest,/arangopipe/arangopipe/Dockerfile_TFFE,ENV,2,"['GIT_PYTHON_REFRESH=quiet', 'PYTHONPATH=`pwd`:$PYTHONPATH']"
arangoml/arangopipe,latest,/arangopipe/arangopipe/Dockerfile_TFFE,EXPOSE,1,['8888 8529 3000']
arangoml/arangopipe,latest,/arangopipe/arangopipe/Dockerfile_TFFE,ENTRYPOINT,1,"['[""/workspace/experiments/startup_commands.sh""]']"
bitnami/bitnami-docker-tensorflow-serving,latest,/2/debian-9/Dockerfile,FROM,1,['bitnami/minideb:stretch']
bitnami/bitnami-docker-tensorflow-serving,latest,/2/debian-9/Dockerfile,LABEL,1,"['maintainer ""Bitnami <containers@bitnami.com>""']"
bitnami/bitnami-docker-tensorflow-serving,latest,/2/debian-9/Dockerfile,ENV,2,"['BITNAMI_PKG_CHMOD=""-R g+rwX""     HOME=""/""     PATH=""/opt/bitnami/tensorflow-serving/bin:/opt/bitnami/tensorflow-serving/bazel-bin/tensorflow_serving/model_servers:/opt/bitnami/nami/bin:$PATH""', 'BITNAMI_APP_NAME=""tensorflow-serving""     BITNAMI_IMAGE_VERSION=""2.0.0-debian-9-r60""     NAMI_PREFIX=""/.nami""     TENSORFLOW_SERVING_ENABLE_MONITORING=""no""     TENSORFLOW_SERVING_MODEL_NAME=""resnet""     TENSORFLOW_SERVING_MONITORING_PATH=""/monitoring/prometheus/metrics""     TENSORFLOW_SERVING_PORT_NUMBER=""8500""     TENSORFLOW_SERVING_REST_API_PORT_NUMBER=""8501""']"
bitnami/bitnami-docker-tensorflow-serving,latest,/2/debian-9/Dockerfile,COPY,2,"['prebuildfs /', 'rootfs /']"
bitnami/bitnami-docker-tensorflow-serving,latest,/2/debian-9/Dockerfile,RUN,7,"['install_packages ca-certificates curl dirmngr gnupg libc6 libgcc1 libstdc++6 procps sudo unzip', '/build/bitnami-user.sh &&     /build/install-nami.sh', 'bitnami-pkg unpack tensorflow-serving-2.0.0-0 --checksum c053976bf6eaa0b4a74612b7caf70f4ed8be155344cf6b3e1928241c615879bf', 'apt-get update && apt-get upgrade &&     rm -r /var/lib/apt/lists /var/cache/apt/archives', '/build/install-gosu.sh', '/build/install-tini.sh', 'echo ""deb http://http.us.debian.org/debian testing main non-free contrib"" >> /etc/apt/sources.list && apt update && apt remove gcc-6 -y && install_packages gcc-7 libstdc++6']"
bitnami/bitnami-docker-tensorflow-serving,latest,/2/debian-9/Dockerfile,EXPOSE,1,['8500']
bitnami/bitnami-docker-tensorflow-serving,latest,/2/debian-9/Dockerfile,USER,1,['1001']
bitnami/bitnami-docker-tensorflow-serving,latest,/2/debian-9/Dockerfile,ENTRYPOINT,1,"['[ ""/app-entrypoint.sh"" ]']"
bitnami/bitnami-docker-tensorflow-serving,latest,/2/debian-9/Dockerfile,CMD,1,"['[ ""/run.sh"" ]']"
bitnami/bitnami-docker-tensorflow-serving,latest,/2/debian-10/Dockerfile,FROM,1,['docker.io/bitnami/minideb:buster']
bitnami/bitnami-docker-tensorflow-serving,latest,/2/debian-10/Dockerfile,LABEL,1,"['maintainer ""Bitnami <containers@bitnami.com>""']"
bitnami/bitnami-docker-tensorflow-serving,latest,/2/debian-10/Dockerfile,ENV,2,"['HOME=""/""     OS_ARCH=""amd64""     OS_FLAVOUR=""debian-10""     OS_NAME=""linux""     PATH=""/opt/bitnami/tensorflow-serving/bin:/opt/bitnami/tensorflow-serving/serving/bazel-bin/tensorflow_serving/model_servers:/opt/bitnami/common/bin:$PATH""', 'BITNAMI_APP_NAME=""tensorflow-serving""     BITNAMI_IMAGE_VERSION=""2.7.0-debian-10-r69""     JAVA_HOME=""/opt/bitnami/java""']"
bitnami/bitnami-docker-tensorflow-serving,latest,/2/debian-10/Dockerfile,ARG,1,"['JAVA_EXTRA_SECURITY_DIR=""/bitnami/java/extra-security""']"
bitnami/bitnami-docker-tensorflow-serving,latest,/2/debian-10/Dockerfile,COPY,2,"['prebuildfs /', 'rootfs /']"
bitnami/bitnami-docker-tensorflow-serving,latest,/2/debian-10/Dockerfile,RUN,8,"['install_packages acl ca-certificates curl gcc-7 gzip libc6 libgcc1 libstdc++6 procps tar', '. /opt/bitnami/scripts/libcomponent.sh && component_unpack ""tensorflow-serving"" ""2.7.0-1"" --checksum eabfba764555b115df1137655367b0772f98881060b1c03981d16dab3980afd7', '. /opt/bitnami/scripts/libcomponent.sh && component_unpack ""render-template"" ""1.0.1-5"" --checksum 9e312b4a7e16a55d08e67c4fd69c91000e4dcc4af149d59915c49375b83852af', '. /opt/bitnami/scripts/libcomponent.sh && component_unpack ""gosu"" ""1.14.0-1"" --checksum 16f1a317859b06ae82e816b30f98f28b4707d18fe6cc3881bff535192a7715dc', 'apt-get update && apt-get upgrade -y &&     rm -r /var/lib/apt/lists /var/cache/apt/archives', 'chmod g+rwX /opt/bitnami', '/opt/bitnami/scripts/java/postunpack.sh', '/opt/bitnami/scripts/tensorflow-serving/postunpack.sh']"
bitnami/bitnami-docker-tensorflow-serving,latest,/2/debian-10/Dockerfile,EXPOSE,1,['8500']
bitnami/bitnami-docker-tensorflow-serving,latest,/2/debian-10/Dockerfile,USER,1,['1001']
bitnami/bitnami-docker-tensorflow-serving,latest,/2/debian-10/Dockerfile,ENTRYPOINT,1,"['[ ""/opt/bitnami/scripts/tensorflow-serving/entrypoint.sh"" ]']"
bitnami/bitnami-docker-tensorflow-serving,latest,/2/debian-10/Dockerfile,CMD,1,"['[ ""/opt/bitnami/scripts/tensorflow-serving/run.sh"" ]']"
augerai/a2ml,latest,/Dockerfile,FROM,3,"['python:3.7-slim-stretch as base', 'base as builder', 'base as runtime']"
augerai/a2ml,latest,/Dockerfile,RUN,5,"['apt-get update   && apt-get -y --no-install-recommends install     gcc     g++     libgomp1   && apt-get clean   && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*', 'mkdir -p $WORKDIR/a2ml &&   echo ""__version__ = \'99.99.99\'"" > $WORKDIR/a2ml/__init__.py', 'pip install "".[all]""', ""find /usr/local/lib/python3.7   -name '*.pxd' -o   -name '*.pyd' -o   -name '*.pyc' -delete   && find /usr/local/lib/python3.7   -path '*/tests/*' -delete   && find /usr/local/lib/python3.7   -name '__pycache__' | xargs rm -r   && find /usr/local/lib/python3.7   -name '*.so*' | grep -v libgfortran | xargs strip"", 'python setup.py bdist_wheel &&   pip install -U --force-reinstall --no-cache-dir --no-deps dist/*']"
augerai/a2ml,latest,/Dockerfile,ENV,3,"['WORKDIR=/app', 'PYTHONUNBUFFERED=1 PYTHONHASHSEED=random PYTHONDONTWRITEBYTECODE=1', 'WORKDIR=/app']"
augerai/a2ml,latest,/Dockerfile,WORKDIR,2,"['$WORKDIR', '$WORKDIR']"
augerai/a2ml,latest,/Dockerfile,COPY,6,"['LICENSE README.md setup.py $WORKDIR/', '--from=builder /usr/local/lib/python3.7 /usr/local/lib/python3.7', '--from=builder /usr/local/bin/celery /usr/local/bin/celery', 'LICENSE README.md setup.py setup.cfg $WORKDIR/', 'a2ml $WORKDIR/a2ml', 'tests $WORKDIR/tests']"
augerai/a2ml,latest,/Dockerfile,CMD,1,['/usr/local/bin/a2ml']
augerai/a2ml,latest,/tests/minio_bootstrapper/Dockerfile,FROM,1,['minio/mc']
augerai/a2ml,latest,/tests/minio_bootstrapper/Dockerfile,COPY,2,"['tests/fixtures/iris.csv /data/', 'tests/fixtures/iris_for_predict.csv /data/']"
omegaml/omegaml,latest,/scripts/docker/omegaml/Dockerfile,FROM,1,['jupyter/scipy-notebook:703d8b2dcb88']
omegaml/omegaml,latest,/scripts/docker/omegaml/Dockerfile,ARG,1,"['pypi=""https://pypi.org/simple""']"
omegaml/omegaml,latest,/scripts/docker/omegaml/Dockerfile,ENV,1,['pypi=$pypi']
omegaml/omegaml,latest,/scripts/docker/omegaml/Dockerfile,USER,2,"['root', 'jovyan']"
omegaml/omegaml,latest,/scripts/docker/omegaml/Dockerfile,COPY,1,['. /app']
omegaml/omegaml,latest,/scripts/docker/omegaml/Dockerfile,RUN,4,"['pip install --upgrade pip -q', 'pip install -f /app/packages -i $pypi --extra-index-url https://pypi.org/simple/ --pre -U omegaml[all]', '/app/scripts/setupnb.sh', 'pip install --user -U six']"
omegaml/omegaml,latest,/scripts/docker/jyhub/Dockerfile,FROM,1,['jupyterhub/jupyterhub:latest']
omegaml/omegaml,latest,/scripts/docker/jyhub/Dockerfile,ARG,1,['pypi']
omegaml/omegaml,latest,/scripts/docker/jyhub/Dockerfile,ENV,1,['pypi=$pypi']
omegaml/omegaml,latest,/scripts/docker/jyhub/Dockerfile,COPY,2,"['. /app', './packages /var/packages']"
omegaml/omegaml,latest,/scripts/docker/jyhub/Dockerfile,RUN,5,"['pip3 install --upgrade pip -q', 'pip3 install --ignore-installed six -f /var/packages -i ${pypi:-https://pypi.org/simple/} --extra-index-url https://pypi.org/simple/ --pre omegaml[all]', 'pip3 install notebook jupyterlab', 'useradd -ms /bin/bash admin &&     echo ""admin:test"" | chpasswd admin &&     touch /app/config.yml', '/app/setupnb.sh']"
omegaml/omegaml,latest,/scripts/docker/livetest/Dockerfile,FROM,1,['joyzoursky/python-chromedriver:3.7-selenium']
omegaml/omegaml,latest,/scripts/docker/livetest/Dockerfile,EXPOSE,1,['9222/tcp']
omegaml/omegaml,latest,/scripts/docker/livetest/Dockerfile,ARG,1,"['pypi=""https://pypi.org/simple""']"
omegaml/omegaml,latest,/scripts/docker/livetest/Dockerfile,ENV,1,['pypi=$pypi']
omegaml/omegaml,latest,/scripts/docker/livetest/Dockerfile,WORKDIR,1,['/root']
omegaml/omegaml,latest,/scripts/docker/livetest/Dockerfile,COPY,1,['./packages /var/packages']
omegaml/omegaml,latest,/scripts/docker/livetest/Dockerfile,RUN,2,"['pip install --upgrade pip -q', 'pip install --ignore-installed six -f /var/packages -i $pypi --extra-index-url https://pypi.org/simple/ --pre -U omegaml[all] &&      pip install behave splinter ipdb']"
omegaml/omegaml,latest,/scripts/docker/omegaml-pytorch/Dockerfile,FROM,1,['pytorch/pytorch:latest']
omegaml/omegaml,latest,/scripts/docker/omegaml-pytorch/Dockerfile,ARG,1,"['pypi=""https://pypi.org/simple""']"
omegaml/omegaml,latest,/scripts/docker/omegaml-pytorch/Dockerfile,ENV,1,['pypi=$pypi']
omegaml/omegaml,latest,/scripts/docker/omegaml-pytorch/Dockerfile,USER,1,['root']
omegaml/omegaml,latest,/scripts/docker/omegaml-pytorch/Dockerfile,COPY,1,['. /app']
omegaml/omegaml,latest,/scripts/docker/omegaml-pytorch/Dockerfile,RUN,3,"['pip install --upgrade pip -q', 'pip install -f /app/packages -i $pypi --extra-index-url https://pypi.org/simple/ --pre omegaml[hdf,graph,dashserve,sql,iotools,streaming] jupyterhub jupyterlab', '/app/scripts/setupnb.sh']"
omegaml/omegaml,latest,/scripts/docker/omegaml-pytorch/Dockerfile.nvidia,FROM,1,['nvcr.io/nvidia/pytorch:20.03-py3']
omegaml/omegaml,latest,/scripts/docker/omegaml-pytorch/Dockerfile.nvidia,ARG,1,"['pypi=""https://pypi.org/simple""']"
omegaml/omegaml,latest,/scripts/docker/omegaml-pytorch/Dockerfile.nvidia,ENV,1,['pypi=$pypi']
omegaml/omegaml,latest,/scripts/docker/omegaml-pytorch/Dockerfile.nvidia,USER,2,"['root', '$NB_UID']"
omegaml/omegaml,latest,/scripts/docker/omegaml-pytorch/Dockerfile.nvidia,COPY,1,['. /app']
omegaml/omegaml,latest,/scripts/docker/omegaml-pytorch/Dockerfile.nvidia,RUN,3,"['pip install --upgrade pip -q', 'pip install -f /app/packages -i $pypi --extra-index-url https://pypi.org/simple/ --pre omegaml[hdf,graph,dashserve,sql,iotools,streaming] jupyterhub jupyterlab', '/app/scripts/setupnb.sh']"
omegaml/omegaml,latest,/scripts/docker/omegaml-tensorflow/Dockerfile,FROM,1,['tensorflow/tensorflow:2.2.0-gpu-jupyter']
omegaml/omegaml,latest,/scripts/docker/omegaml-tensorflow/Dockerfile,ARG,2,"['pypi=""https://pypi.org/simple""', 'NB_UID=1000']"
omegaml/omegaml,latest,/scripts/docker/omegaml-tensorflow/Dockerfile,ENV,1,['pypi=$pypi']
omegaml/omegaml,latest,/scripts/docker/omegaml-tensorflow/Dockerfile,USER,2,"['root', '$NB_UID']"
omegaml/omegaml,latest,/scripts/docker/omegaml-tensorflow/Dockerfile,COPY,1,['. /app']
omegaml/omegaml,latest,/scripts/docker/omegaml-tensorflow/Dockerfile,RUN,3,"['pip install --upgrade pip -q', 'pip install -f /app/packages -i $pypi --extra-index-url https://pypi.org/simple/ --pre omegaml[all] jupyterhub jupyterlab', '/app/scripts/setupnb.sh']"
Unity-Technologies/datasetinsights,latest,/Dockerfile,FROM,1,['nvidia/cuda:10.0-cudnn7-runtime-ubuntu18.04']
Unity-Technologies/datasetinsights,latest,/Dockerfile,RUN,5,"['apt-get update     && apt-get install -y         build-essential         curl         libsm6         libxext6         libxrender-dev         libgl1-mesa-dev         python3.7-dev         python3-pip     && ln -s /usr/bin/python3.7 /usr/local/bin/python', 'python -m pip install --upgrade pip poetry==1.0.10 setuptools==49.6.0 -U pip cryptography==3.3.2', 'chmod +x /usr/local/bin/tini', 'poetry config virtualenvs.create false     && poetry install --no-root', 'poetry config virtualenvs.create false     && poetry install']"
Unity-Technologies/datasetinsights,latest,/Dockerfile,ENV,1,['TINI_VERSION v0.18.0']
Unity-Technologies/datasetinsights,latest,/Dockerfile,ADD,1,['https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini /usr/local/bin/tini']
Unity-Technologies/datasetinsights,latest,/Dockerfile,WORKDIR,1,['/datasetinsights']
Unity-Technologies/datasetinsights,latest,/Dockerfile,VOLUME,1,['/data /root/.config']
Unity-Technologies/datasetinsights,latest,/Dockerfile,COPY,2,"['poetry.lock pyproject.toml ./', '. ./']"
Unity-Technologies/datasetinsights,latest,/Dockerfile,ENTRYPOINT,1,"['[""tini"", ""-g"", ""--""]']"
Unity-Technologies/datasetinsights,latest,/Dockerfile,CMD,1,"['sh -c ""jupyter notebook --notebook-dir=/ --ip=0.0.0.0 --no-browser --allow-root --port=8888 --NotebookApp.token=\'\' --NotebookApp.password=\'\' --NotebookApp.allow_origin=\'*\' --NotebookApp.base_url=${NB_PREFIX}""']"
Unity-Technologies/datasetinsights,latest,/tf-dataflow/Dockerfile,FROM,1,['python:3.7.9-buster']
Unity-Technologies/datasetinsights,latest,/tf-dataflow/Dockerfile,ENV,1,['DEBIAN_FRONTEND noninteractive']
Unity-Technologies/datasetinsights,latest,/tf-dataflow/Dockerfile,RUN,3,"['curl -O https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-sdk-320.0.0-linux-x86_64.tar.gz &&     tar -xvf google-cloud-sdk-320.0.0-linux-x86_64.tar.gz &&     ./google-cloud-sdk/install.sh -q &&     echo ""source /google-cloud-sdk/completion.bash.inc"" >> /root/.bashrc &&     echo ""source /google-cloud-sdk/path.bash.inc"" >> /root/.bashrc', 'mkdir /tf-dataflow', 'pip install -r requirements.txt']"
Unity-Technologies/datasetinsights,latest,/tf-dataflow/Dockerfile,ADD,1,['. /tf-dataflow']
Unity-Technologies/datasetinsights,latest,/tf-dataflow/Dockerfile,WORKDIR,1,['/tf-dataflow']
Unity-Technologies/datasetinsights,latest,/tf-dataflow/Dockerfile,CMD,1,"['[""bash""]']"
ubc/compair,latest,/Dockerfile,FROM,3,"['python:3.7-slim as python-base', 'node:10.16 as node-deps', 'python:3.7-slim as python-app']"
ubc/compair,latest,/Dockerfile,ADD,2,"['requirements.txt .', '. /code/']"
ubc/compair,latest,/Dockerfile,RUN,3,"['apt-get update -y     && apt-get install -y libssl-dev libxml2-dev libxslt1-dev libxmlsec1-openssl gcc pkg-config     && apt-get install -y --no-install-recommends --no-install-suggests libxmlsec1-dev libz-dev     && pip install -r requirements.txt     && pip install uwsgi', 'mkdir -p compair/templates/static/     && npm install --production --no-optional     && node_modules/gulp/bin/gulp.js     && node_modules/gulp/bin/gulp.js prod', 'apt-get update -y     && apt-get install -y libssl-dev libxml2-dev libxslt1-dev libxmlsec1-openssl     && apt-get install -y --no-install-recommends --no-install-suggests libxmlsec1-dev libz-dev     && pip install -r /code/requirements.txt     && pip install uwsgi     && STATIC_DEPS=true pip install lxml==4.6.2 --force-reinstall     && rm -rf /root/.cache     && rm -rf /var/lib/apt/lists/*']"
ubc/compair,latest,/Dockerfile,WORKDIR,2,"['/home/node/app', '/code']"
ubc/compair,latest,/Dockerfile,COPY,8,"['package.json package-lock.json bower.json gulpfile.js /home/node/app/', 'compair/static/ /home/node/app/compair/static/', '--from=python-base /root/.cache /root/.cache', '--from=python-base /requirements.txt /code/requirements.txt', 'deploy/docker/uwsgi.ini /etc/uwsgi/', 'deploy/docker/docker-entrypoint.sh /', '--from=node-deps /home/node/app/compair/static/ /code/compair/static/', '--from=node-deps /home/node/app/compair/templates/static/ /code/compair/templates/static/']"
ubc/compair,latest,/Dockerfile,MAINTAINER,1,['Pan Luo <pan.luo@ubc.ca>']
ubc/compair,latest,/Dockerfile,ENV,3,"['PYTHONUNBUFFERED 1', 'PYTHONPATH /code', 'DEV 0']"
ubc/compair,latest,/Dockerfile,ENTRYPOINT,1,"['[""/docker-entrypoint.sh""]']"
ubc/compair,latest,/Dockerfile,VOLUME,1,"['[""/code/persistent""]']"
ubc/compair,latest,/Dockerfile,EXPOSE,1,['3031']
ubc/compair,latest,/Dockerfile,CMD,1,"['[""uwsgi"", ""--ini"", ""/etc/uwsgi/uwsgi.ini""]']"
