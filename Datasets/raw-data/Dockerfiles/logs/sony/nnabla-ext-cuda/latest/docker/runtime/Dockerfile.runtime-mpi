# Copyright 2020,2021 Sony Corporation.
# Copyright 2021 Sony Group Corporation.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
ARG BASE

############################################################
# Build OpenMPI
############################################################
# CentOS7:  1.10.7 (12)
# Ubuntu16: 1.10.2 (12)
# Ubuntu18: 2.1.1  (20)
# Ubuntu20: 4.0.3  (40)
# CentOS7:  3.1.3  (40)
# ABCI:     2.1.6  (20)
FROM ubuntu:18.04 as openmpi

ARG PIP_INS_OPTS
ARG PYTHONWARNINGS
ARG CURL_OPTS
ARG WGET_OPTS
ARG APT_OPTS

RUN eval ${APT_OPTS} && apt-get update
RUN apt-get install -y --no-install-recommends \
        build-essential \
        ca-certificates \
        curl \
        gfortran \
        libibverbs-dev

ARG MPIVER=3.1.6
ARG OMPI_BUILD_FLAGS
RUN mkdir /tmp/openmpi
RUN curl ${CURL_OPTS} https://download.open-mpi.org/release/open-mpi/v${MPIVER%.*}/openmpi-${MPIVER}.tar.bz2 -o /tmp/openmpi/openmpi-${MPIVER}.tar.bz2
RUN tar Cxvf /tmp/openmpi /tmp/openmpi/openmpi-${MPIVER}.tar.bz2
RUN cd tmp/openmpi/openmpi-${MPIVER} \
    && ./configure \
        --prefix=/opt/openmpi \
        ${OMPI_BUILD_FLAGS} \
        CC=gcc \
        CXX=g++ \
        F77=gfortran \
        FC=gfortran \
    && make -j20 \
    && make install

############################################################
# Runtime image
############################################################
FROM ${BASE}

ARG PIP_INS_OPTS
ARG PYTHONWARNINGS
ARG CURL_OPTS
ARG WGET_OPTS
ARG APT_OPTS

ARG PYTHON_VERSION_MAJOR
ARG PYTHON_VERSION_MINOR
ENV PYVERNAME=${PYTHON_VERSION_MAJOR}.${PYTHON_VERSION_MINOR}

RUN eval ${APT_OPTS} && apt-get update
RUN apt install -y software-properties-common
RUN add-apt-repository ppa:deadsnakes/ppa
RUN apt-get update

RUN cd /tmp \
	&& apt-get update \
        && apt-get install -y \
               bzip2 \
               ca-certificates \
               openssh-client \
               wget \
               curl \
               python${PYVERNAME} \
        && rm -rf /var/lib/apt/lists/* \
        && cd / \
        && rm -rf /tmp/*

RUN apt-get update \
    && apt-get install -y --no-install-recommends \
       python${PYVERNAME}-distutils || echo "skip install python-distutils" \
    && rm -rf /var/lib/apt/lists/*

RUN curl ${CURL_OPTS} https://bootstrap.pypa.io/get-pip.py -o get-pip.py \
    && python${PYVERNAME} get-pip.py ${PIP_INS_OPTS} \
    && rm get-pip.py

ARG CUDA_VERSION_MAJOR
ARG CUDA_VERSION_MINOR

RUN update-alternatives --install /usr/bin/python python /usr/bin/python${PYVERNAME} 0
RUN pip install ${PIP_INS_OPTS} wheel
RUN pip install ${PIP_INS_OPTS} opencv-python || true
RUN pip install ${PIP_INS_OPTS} --extra-index-url https://developer.download.nvidia.com/compute/redist nvidia-dali-cuda${CUDA_VERSION_MAJOR}0 \
    || echo "Skip DALI installation (CUDA=${CUDA_VERSION_MAJOR}.0)"

ARG WHL_PATH
ADD $WHL_PATH/*.whl /tmp/
RUN pip install ${PIP_INS_OPTS} /tmp/*.whl && rm -rf /tmp/*

################################################## OpenMPI
COPY --from=openmpi /opt/openmpi /opt/openmpi
ENV PATH /opt/openmpi/bin:$PATH
ENV LD_LIBRARY_PATH /opt/openmpi/lib:$LD_LIBRARY_PATH
ENV LD_LIBRARY_PATH /usr/lib64:/usr/local/lib64:$LD_LIBRARY_PATH

####################################################
# Solve nccl error that No space left on device
# while creating shared memory segment.
####################################################
RUN echo NCCL_SHM_DISABLE=1 >> /etc/nccl.conf
RUN echo NCCL_P2P_LEVEL=SYS >> /etc/nccl.conf
